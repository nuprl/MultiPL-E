language: swift
name: HumanEval_55_fib
results:
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n <= 1 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmp3hrr7ho2.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmp3hrr7ho2.swift:7:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659978517
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpxzlkx43e.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmpxzlkx43e.swift:7:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659978517
- exit_code: 0
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n: n - 1) + fib(n: n - 2)\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978517
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n <= 1 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmp3hrr7ho2.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmp3hrr7ho2.swift:7:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659978517
- exit_code: 0
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n <= 1 {\n        return n\n    }\n    return fib(n: n - 1) + fib(n: n - 2)\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978517
- exit_code: 0
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n <= 1 {\n        return n\n    }\n    return fib(n: n - 1) + fib(n: n - 2)\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978517
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpxzlkx43e.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmpxzlkx43e.swift:7:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659978517
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n <= 1 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmp3hrr7ho2.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmp3hrr7ho2.swift:7:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659978517
- exit_code: 0
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n <= 1 {\n        return n\n    }\n    return fib(n: n - 1) + fib(n: n - 2)\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978517
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n <= 1 {\n        return n\n    } else {\n        return fib(n - 1) + fib(n\
    \ - 2)\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\n\
    assert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n:\
    \ 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmp347d9fza.swift:7:20: error: missing argument label 'n:' in call\n\
    \        return fib(n - 1) + fib(n - 2)\n                   ^\n              \
    \     n: \n/tmp/tmp347d9fza.swift:7:33: error: missing argument label 'n:' in\
    \ call\n        return fib(n - 1) + fib(n - 2)\n                             \
    \   ^\n                                n: \n"
  stdout: ''
  timestamp: 1659978517
- exit_code: 0
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n <= 2 {\n        return 1\n    }\n    return fib(n: n - 1) + fib(n: n - 2)\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978517
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n <= 1 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmp3hrr7ho2.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmp3hrr7ho2.swift:7:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659978517
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpxzlkx43e.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmpxzlkx43e.swift:7:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659978517
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n < 2 {\n        return n\n    } else {\n        return fib(n - 1) + fib(n -\
    \ 2)\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\n\
    assert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n:\
    \ 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpwil7r9ik.swift:7:20: error: missing argument label 'n:' in call\n\
    \        return fib(n - 1) + fib(n - 2)\n                   ^\n              \
    \     n: \n/tmp/tmpwil7r9ik.swift:7:33: error: missing argument label 'n:' in\
    \ call\n        return fib(n - 1) + fib(n - 2)\n                             \
    \   ^\n                                n: \n"
  stdout: ''
  timestamp: 1659978517
- exit_code: 0
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n <= 1 {\n        return n\n    }\n    return fib(n: n - 1) + fib(n: n - 2)\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978517
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpxzlkx43e.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmpxzlkx43e.swift:7:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659978517
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n <= 1 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmp3hrr7ho2.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmp3hrr7ho2.swift:7:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659978517
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpxzlkx43e.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmpxzlkx43e.swift:7:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659978517
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n <= 1 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmp3hrr7ho2.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmp3hrr7ho2.swift:7:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659978517
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpxzlkx43e.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmpxzlkx43e.swift:7:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659978517
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n <= 1 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmp3hrr7ho2.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmp3hrr7ho2.swift:7:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659978517
- exit_code: 0
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n <= 2 {\n        return 1\n    }\n    return fib(n: n - 1) + fib(n: n - 2)\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978517
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n <= 1 {\n        return n\n    } else {\n        return fib(n - 1) + fib(n\
    \ - 2)\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\n\
    assert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n:\
    \ 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmp347d9fza.swift:7:20: error: missing argument label 'n:' in call\n\
    \        return fib(n - 1) + fib(n - 2)\n                   ^\n              \
    \     n: \n/tmp/tmp347d9fza.swift:7:33: error: missing argument label 'n:' in\
    \ call\n        return fib(n - 1) + fib(n - 2)\n                             \
    \   ^\n                                n: \n"
  stdout: ''
  timestamp: 1659978517
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n <= 1 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmp3hrr7ho2.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmp3hrr7ho2.swift:7:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659978517
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpxzlkx43e.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmpxzlkx43e.swift:7:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659978517
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n <= 1 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmp3hrr7ho2.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmp3hrr7ho2.swift:7:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659978517
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n <= 1 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmp3hrr7ho2.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmp3hrr7ho2.swift:7:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659978517
- exit_code: 0
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n <= 1 {\n        return n\n    }\n    return fib(n: n - 1) + fib(n: n - 2)\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978517
- exit_code: 0
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n <= 1 {\n        return n\n    }\n    return fib(n: n - 1) + fib(n: n - 2)\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978517
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpxzlkx43e.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmpxzlkx43e.swift:7:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659978517
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n <= 1 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmp3hrr7ho2.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmp3hrr7ho2.swift:7:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659978517
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpxzlkx43e.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmpxzlkx43e.swift:7:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659978517
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n <= 1 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmp3hrr7ho2.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmp3hrr7ho2.swift:7:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659978517
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n <= 1 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmp3hrr7ho2.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmp3hrr7ho2.swift:7:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659978517
- exit_code: 0
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n: n - 1) + fib(n: n - 2)\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978517
- exit_code: 0
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n: n - 1) + fib(n: n - 2)\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978517
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpxzlkx43e.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmpxzlkx43e.swift:7:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659978517
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n <= 1 {\n        return n\n    } else {\n        return fib(n - 1) + fib(n\
    \ - 2)\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\n\
    assert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n:\
    \ 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmp347d9fza.swift:7:20: error: missing argument label 'n:' in call\n\
    \        return fib(n - 1) + fib(n - 2)\n                   ^\n              \
    \     n: \n/tmp/tmp347d9fza.swift:7:33: error: missing argument label 'n:' in\
    \ call\n        return fib(n - 1) + fib(n - 2)\n                             \
    \   ^\n                                n: \n"
  stdout: ''
  timestamp: 1659978517
- exit_code: 0
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n <= 2 {\n        return 1\n    }\n    return fib(n: n - 1) + fib(n: n - 2)\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978517
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n <= 1 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmp3hrr7ho2.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmp3hrr7ho2.swift:7:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659978517
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpxzlkx43e.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmpxzlkx43e.swift:7:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659978517
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n <= 1 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmp3hrr7ho2.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmp3hrr7ho2.swift:7:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659978517
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpxzlkx43e.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmpxzlkx43e.swift:7:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659978517
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n <= 1 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmp3hrr7ho2.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmp3hrr7ho2.swift:7:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659978517
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpxzlkx43e.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmpxzlkx43e.swift:7:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659978517
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpxzlkx43e.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmpxzlkx43e.swift:7:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659978517
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpxzlkx43e.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmpxzlkx43e.swift:7:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659978517
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n <= 1 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmp3hrr7ho2.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmp3hrr7ho2.swift:7:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659978517
- exit_code: 0
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n: n - 1) + fib(n: n - 2)\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978517
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpxzlkx43e.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmpxzlkx43e.swift:7:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659978517
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n <= 1 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmp3hrr7ho2.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmp3hrr7ho2.swift:7:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659978517
- exit_code: 0
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n: n - 1) + fib(n: n - 2)\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978517
- exit_code: 0
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n <= 1 {\n        return n\n    }\n    return fib(n: n - 1) + fib(n: n - 2)\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978517
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n <= 1 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmp3hrr7ho2.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmp3hrr7ho2.swift:7:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659978517
- exit_code: 0
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n <= 1 {\n        return n\n    }\n    return fib(n: n - 1) + fib(n: n - 2)\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978517
- exit_code: 0
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n <= 1 {\n        return n\n    }\n    return fib(n: n - 1) + fib(n: n - 2)\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978517
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpxzlkx43e.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmpxzlkx43e.swift:7:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659978517
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n <= 1 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmp3hrr7ho2.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmp3hrr7ho2.swift:7:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659978517
- exit_code: 0
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n: n - 1) + fib(n: n - 2)\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978517
- exit_code: 0
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n <= 1 {\n        return n\n    }\n    return fib(n: n - 1) + fib(n: n - 2)\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978517
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpxzlkx43e.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmpxzlkx43e.swift:7:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659978517
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n <= 1 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmp3hrr7ho2.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmp3hrr7ho2.swift:7:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659978517
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n <= 1 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmp3hrr7ho2.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmp3hrr7ho2.swift:7:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659978517
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpxzlkx43e.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmpxzlkx43e.swift:7:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659978517
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpxzlkx43e.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmpxzlkx43e.swift:7:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659978517
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n <= 1 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmp3hrr7ho2.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmp3hrr7ho2.swift:7:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659978517
- exit_code: 0
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n <= 2 {\n        return 1\n    }\n    return fib(n: n - 1) + fib(n: n - 2)\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978517
- exit_code: 0
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    var\
    \ a = 0\n    var b = 1\n    for _ in 0..<n {\n        let temp = a\n        a\
    \ = b\n        b = temp + b\n    }\n    return a\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978517
- exit_code: 0
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n <= 1 {\n        return n\n    }\n    return fib(n: n - 1) + fib(n: n - 2)\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978517
- exit_code: 0
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n: n - 1) + fib(n: n - 2)\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978517
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n <= 1 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmp3hrr7ho2.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmp3hrr7ho2.swift:7:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659978517
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpxzlkx43e.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmpxzlkx43e.swift:7:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659978517
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n <= 1 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmp3hrr7ho2.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmp3hrr7ho2.swift:7:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659978517
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n <= 1 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmp3hrr7ho2.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmp3hrr7ho2.swift:7:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659978517
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpxzlkx43e.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmpxzlkx43e.swift:7:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659978517
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpxzlkx43e.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmpxzlkx43e.swift:7:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659978517
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpxzlkx43e.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmpxzlkx43e.swift:7:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659978517
- exit_code: 0
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n <= 1 {\n        return n\n    }\n    return fib(n: n - 1) + fib(n: n - 2)\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978517
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n <= 1 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmp3hrr7ho2.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmp3hrr7ho2.swift:7:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659978517
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n <= 1 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmp3hrr7ho2.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmp3hrr7ho2.swift:7:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659978517
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpxzlkx43e.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmpxzlkx43e.swift:7:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659978517
- exit_code: 0
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n <= 1 {\n        return n\n    }\n    return fib(n: n - 1) + fib(n: n - 2)\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978517
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n <= 1 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmp3hrr7ho2.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmp3hrr7ho2.swift:7:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659978517
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n <= 1 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmp3hrr7ho2.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmp3hrr7ho2.swift:7:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659978517
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n <= 1 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmp3hrr7ho2.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmp3hrr7ho2.swift:7:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659978517
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpxzlkx43e.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmpxzlkx43e.swift:7:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659978517
- exit_code: 0
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n <= 1 {\n        return n\n    }\n    return fib(n: n - 1) + fib(n: n - 2)\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978517
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n <= 1 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmp3hrr7ho2.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmp3hrr7ho2.swift:7:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659978517
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n <= 1 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmp3hrr7ho2.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmp3hrr7ho2.swift:7:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659978517
- exit_code: 0
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n: n - 1) + fib(n: n - 2)\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978517
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n <= 1 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmp3hrr7ho2.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmp3hrr7ho2.swift:7:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659978517
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n <= 1 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmp3hrr7ho2.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmp3hrr7ho2.swift:7:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659978517
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpxzlkx43e.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmpxzlkx43e.swift:7:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659978517
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpxzlkx43e.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmpxzlkx43e.swift:7:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659978517
- exit_code: 0
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n <= 2 {\n        return 1\n    }\n    return fib(n: n - 1) + fib(n: n - 2)\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978517
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n <= 1 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmp3hrr7ho2.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmp3hrr7ho2.swift:7:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659978517
- exit_code: 0
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n <= 1 {\n        return n\n    }\n    return fib(n: n - 1) + fib(n: n - 2)\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978517
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n <= 1 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmp3hrr7ho2.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmp3hrr7ho2.swift:7:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659978517
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n <= 1 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmp3hrr7ho2.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmp3hrr7ho2.swift:7:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659978517
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpxzlkx43e.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmpxzlkx43e.swift:7:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659978517
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n <= 1 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmp3hrr7ho2.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmp3hrr7ho2.swift:7:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659978517
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n < 2 {\n        return n\n    } else {\n        return fib(n - 1) + fib(n -\
    \ 2)\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\n\
    assert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n:\
    \ 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpwil7r9ik.swift:7:20: error: missing argument label 'n:' in call\n\
    \        return fib(n - 1) + fib(n - 2)\n                   ^\n              \
    \     n: \n/tmp/tmpwil7r9ik.swift:7:33: error: missing argument label 'n:' in\
    \ call\n        return fib(n - 1) + fib(n - 2)\n                             \
    \   ^\n                                n: \n"
  stdout: ''
  timestamp: 1659978517
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n <= 1 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmp3hrr7ho2.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmp3hrr7ho2.swift:7:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659978517
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n <= 1 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmp3hrr7ho2.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmp3hrr7ho2.swift:7:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659978517
- exit_code: 0
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n: n - 1) + fib(n: n - 2)\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978517
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n <= 1 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmp3hrr7ho2.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmp3hrr7ho2.swift:7:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659978517
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n <= 1 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmp3hrr7ho2.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmp3hrr7ho2.swift:7:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659978517
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpxzlkx43e.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmpxzlkx43e.swift:7:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659978517
- exit_code: 0
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n <= 1 {\n        return n\n    }\n    return fib(n: n - 1) + fib(n: n - 2)\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978517
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n <= 1 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmp3hrr7ho2.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmp3hrr7ho2.swift:7:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659978517
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpxzlkx43e.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmpxzlkx43e.swift:7:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659978517
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n <= 1 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmp3hrr7ho2.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmp3hrr7ho2.swift:7:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659978517
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpxzlkx43e.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmpxzlkx43e.swift:7:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659978517
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n <= 1 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmp3hrr7ho2.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmp3hrr7ho2.swift:7:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659978517
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n <= 1 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmp3hrr7ho2.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmp3hrr7ho2.swift:7:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659978517
- exit_code: 0
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n <= 1 {\n        return n\n    }\n    return fib(n: n - 1) + fib(n: n - 2)\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978517
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n <= 2 {\n        return 1\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmp1siyf2ya.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmp1siyf2ya.swift:7:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659978517
- exit_code: 0
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n <= 1 {\n        return n\n    }\n    return fib(n: n - 1) + fib(n: n - 2)\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978517
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n <= 1 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmp3hrr7ho2.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmp3hrr7ho2.swift:7:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659978517
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n <= 1 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmp3hrr7ho2.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmp3hrr7ho2.swift:7:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659978517
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n < 2 {\n        return n\n    } else {\n        return fib(n - 1) + fib(n -\
    \ 2)\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\n\
    assert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n:\
    \ 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpwil7r9ik.swift:7:20: error: missing argument label 'n:' in call\n\
    \        return fib(n - 1) + fib(n - 2)\n                   ^\n              \
    \     n: \n/tmp/tmpwil7r9ik.swift:7:33: error: missing argument label 'n:' in\
    \ call\n        return fib(n - 1) + fib(n - 2)\n                             \
    \   ^\n                                n: \n"
  stdout: ''
  timestamp: 1659978517
- exit_code: 0
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n: n - 1) + fib(n: n - 2)\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978517
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n <= 1 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmp3hrr7ho2.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmp3hrr7ho2.swift:7:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659978517
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n <= 1 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmp3hrr7ho2.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmp3hrr7ho2.swift:7:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659978517
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpxzlkx43e.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmpxzlkx43e.swift:7:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659978517
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n <= 1 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmp3hrr7ho2.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmp3hrr7ho2.swift:7:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659978517
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpxzlkx43e.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmpxzlkx43e.swift:7:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659978517
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n <= 1 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmp3hrr7ho2.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmp3hrr7ho2.swift:7:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659978517
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpxzlkx43e.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmpxzlkx43e.swift:7:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659978517
- exit_code: 0
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n <= 2 {\n        return 1\n    }\n    return fib(n: n - 1) + fib(n: n - 2)\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978517
- exit_code: 0
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n: n - 1) + fib(n: n - 2)\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978517
- exit_code: 0
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n <= 1 {\n        return n\n    }\n    return fib(n: n - 1) + fib(n: n - 2)\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978517
- exit_code: 0
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n <= 1 {\n        return n\n    }\n    return fib(n: n - 1) + fib(n: n - 2)\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978517
- exit_code: 0
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n <= 1 {\n        return n\n    } else {\n        return fib(n: n - 1) + fib(n:\
    \ n - 2)\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\n\
    assert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n:\
    \ 12) == 144)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978517
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpxzlkx43e.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmpxzlkx43e.swift:7:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659978517
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n <= 1 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmp3hrr7ho2.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmp3hrr7ho2.swift:7:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659978517
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n <= 1 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmp3hrr7ho2.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmp3hrr7ho2.swift:7:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659978517
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n <= 1 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmp3hrr7ho2.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmp3hrr7ho2.swift:7:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659978517
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n <= 1 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmp3hrr7ho2.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmp3hrr7ho2.swift:7:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659978517
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpxzlkx43e.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmpxzlkx43e.swift:7:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659978517
- exit_code: 0
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n: n - 1) + fib(n: n - 2)\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978517
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpxzlkx43e.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmpxzlkx43e.swift:7:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659978517
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n <= 1 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmp3hrr7ho2.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmp3hrr7ho2.swift:7:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659978517
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n <= 1 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmp3hrr7ho2.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmp3hrr7ho2.swift:7:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659978517
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpxzlkx43e.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmpxzlkx43e.swift:7:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659978517
- exit_code: 0
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n: n - 1) + fib(n: n - 2)\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978517
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n <= 1 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmp3hrr7ho2.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmp3hrr7ho2.swift:7:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659978517
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n < 2 {\n        return n\n    } else {\n        return fib(n - 1) + fib(n -\
    \ 2)\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\n\
    assert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n:\
    \ 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpwil7r9ik.swift:7:20: error: missing argument label 'n:' in call\n\
    \        return fib(n - 1) + fib(n - 2)\n                   ^\n              \
    \     n: \n/tmp/tmpwil7r9ik.swift:7:33: error: missing argument label 'n:' in\
    \ call\n        return fib(n - 1) + fib(n - 2)\n                             \
    \   ^\n                                n: \n"
  stdout: ''
  timestamp: 1659978517
- exit_code: 0
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n <= 1 {\n        return n\n    }\n    return fib(n: n - 1) + fib(n: n - 2)\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978517
- exit_code: 0
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n <= 1 {\n        return n\n    }\n    return fib(n: n - 1) + fib(n: n - 2)\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978517
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpxzlkx43e.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmpxzlkx43e.swift:7:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659978517
- exit_code: 0
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    var\
    \ a = 0\n    var b = 1\n    for _ in 0..<n {\n        let tmp = a\n        a =\
    \ b\n        b = tmp + b\n    }\n    return a\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\n\
    assert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978517
- exit_code: 0
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n: n - 1) + fib(n: n - 2)\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978517
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n <= 1 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmp3hrr7ho2.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmp3hrr7ho2.swift:7:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659978517
- exit_code: 0
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n <= 1 {\n        return n\n    }\n    return fib(n: n - 1) + fib(n: n - 2)\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978517
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n < 2 {\n        return n\n    } else {\n        return fib(n - 1) + fib(n -\
    \ 2)\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\n\
    assert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n:\
    \ 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpwil7r9ik.swift:7:20: error: missing argument label 'n:' in call\n\
    \        return fib(n - 1) + fib(n - 2)\n                   ^\n              \
    \     n: \n/tmp/tmpwil7r9ik.swift:7:33: error: missing argument label 'n:' in\
    \ call\n        return fib(n - 1) + fib(n - 2)\n                             \
    \   ^\n                                n: \n"
  stdout: ''
  timestamp: 1659978517
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n <= 1 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmp3hrr7ho2.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmp3hrr7ho2.swift:7:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659978517
- exit_code: 0
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n: n - 1) + fib(n: n - 2)\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978517
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpxzlkx43e.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmpxzlkx43e.swift:7:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659978517
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n <= 1 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmp3hrr7ho2.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmp3hrr7ho2.swift:7:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659978517
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n <= 1 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmp3hrr7ho2.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmp3hrr7ho2.swift:7:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659978517
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpxzlkx43e.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmpxzlkx43e.swift:7:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659978517
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpxzlkx43e.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmpxzlkx43e.swift:7:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659978517
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpxzlkx43e.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmpxzlkx43e.swift:7:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659978517
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n <= 1 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmp3hrr7ho2.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmp3hrr7ho2.swift:7:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659978517
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpxzlkx43e.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmpxzlkx43e.swift:7:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659978517
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpxzlkx43e.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmpxzlkx43e.swift:7:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659978517
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpxzlkx43e.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmpxzlkx43e.swift:7:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659978517
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpxzlkx43e.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmpxzlkx43e.swift:7:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659978517
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpxzlkx43e.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmpxzlkx43e.swift:7:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659978517
- exit_code: 0
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n: n - 1) + fib(n: n - 2)\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978517
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n <= 1 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmp3hrr7ho2.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmp3hrr7ho2.swift:7:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659978517
- exit_code: 0
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n <= 1 {\n        return n\n    }\n    return fib(n: n - 1) + fib(n: n - 2)\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978517
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n <= 1 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmp3hrr7ho2.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmp3hrr7ho2.swift:7:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659978517
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n <= 1 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmp3hrr7ho2.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmp3hrr7ho2.swift:7:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659978517
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpxzlkx43e.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmpxzlkx43e.swift:7:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659978517
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n <= 1 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmp3hrr7ho2.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmp3hrr7ho2.swift:7:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659978517
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpxzlkx43e.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmpxzlkx43e.swift:7:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659978517
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpxzlkx43e.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmpxzlkx43e.swift:7:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659978517
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    return\
    \ n < 2 ? n : fib(n - 1) + fib(n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n:\
    \ 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpljjt9zrd.swift:4:28: error: missing argument label 'n:' in call\n\
    \    return n < 2 ? n : fib(n - 1) + fib(n - 2)\n                           ^\n\
    \                           n: \n/tmp/tmpljjt9zrd.swift:4:41: error: missing argument\
    \ label 'n:' in call\n    return n < 2 ? n : fib(n - 1) + fib(n - 2)\n       \
    \                                 ^\n                                        n:\
    \ \n"
  stdout: ''
  timestamp: 1659978517
- exit_code: 0
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n <= 1 {\n        return n\n    }\n    return fib(n: n - 1) + fib(n: n - 2)\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978517
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpxzlkx43e.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmpxzlkx43e.swift:7:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659978517
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n <= 1 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmp3hrr7ho2.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmp3hrr7ho2.swift:7:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659978517
- exit_code: 0
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    var\
    \ a = 0\n    var b = 1\n    for _ in 0..<n {\n        let temp = a\n        a\
    \ = b\n        b = temp + b\n    }\n    return a\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978517
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpxzlkx43e.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmpxzlkx43e.swift:7:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659978517
- exit_code: 0
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n <= 2 {\n        return 1\n    }\n    return fib(n: n - 1) + fib(n: n - 2)\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978517
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpxzlkx43e.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmpxzlkx43e.swift:7:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659978517
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpxzlkx43e.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmpxzlkx43e.swift:7:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659978517
- exit_code: 0
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n <= 1 {\n        return n\n    }\n    return fib(n: n - 1) + fib(n: n - 2)\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978517
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n <= 1 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmp3hrr7ho2.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmp3hrr7ho2.swift:7:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659978517
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpxzlkx43e.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmpxzlkx43e.swift:7:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659978517
- exit_code: 0
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n <= 1 {\n        return n\n    }\n    return fib(n: n - 1) + fib(n: n - 2)\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978517
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpxzlkx43e.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmpxzlkx43e.swift:7:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659978517
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpxzlkx43e.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmpxzlkx43e.swift:7:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659978517
- exit_code: 0
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n <= 1 {\n        return n\n    }\n    return fib(n: n - 1) + fib(n: n - 2)\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978517
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpxzlkx43e.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmpxzlkx43e.swift:7:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659978517
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n <= 1 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmp3hrr7ho2.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmp3hrr7ho2.swift:7:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659978517
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n <= 1 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmp3hrr7ho2.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmp3hrr7ho2.swift:7:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659978517
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpxzlkx43e.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmpxzlkx43e.swift:7:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659978517
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\nfunc fib(n: Int) -> Int {\n    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpxzlkx43e.swift:7:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmpxzlkx43e.swift:7:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659978517

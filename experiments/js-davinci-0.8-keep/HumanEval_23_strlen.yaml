name: HumanEval_23_strlen
language: js
prompt: "//Return length of given string\n// >>> strlen('')\n// 0\n// >>> strlen('abc')\n\
  // 3\nfunction strlen(string){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = strlen;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
  x\"),1);\n  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
completions: ["  // ...\n}\n", "  var length = 0;\n  while(string[length] != undefined){\n\
    \    length += 1;\n  }\n  return length;\n}\n", "    if(string === \"\"){\n  \
    \      return 0;\n    }else{\n        return 1 + strlen(string.substring(1));\n\
    \    }\n}\n", "    var length = 0;\n    var i = 0;\n    while(string[i] != undefined){\n\
    \        length++;\n        i++;\n    }\n    return length;\n}\n", "\treturn string.length;\n\
    }\n", "    return _.reduce(\n        string,\n        function(count, character){\n\
    \            return count + 1;\n        },\n        0\n    );\n}\n", "    var\
    \ i=0;\n    while(string[i]!==undefined){\n        i++;\n    }\n    return i;\n\
    }\n", "    var i = 0;\n    while(string[i] !== undefined){\n        i++;\n   \
    \ }\n    return i;\n}\n", "\tvar count = 0;\n\tfor(var i = 0; i < string.length;\
    \ i++){\n\t\tcount++;\n\t}\n\treturn count;\n}\n", "    var strLength = 0;\n \
    \   for(var i = 0; i < string.length; i++){\n        strLength += 1;\n    }\n\
    \    return strLength;\n}\n", "    var total = 0;\n    if(string.length>0){\n\
    \        total = 1 + strlen(string.substring(1));\n    }\n    return total;\n\
    }\n", "  return string.length;\n}\n", "  return string.length;\n}\n", "  var stringLength\
    \ = 0;\n  while(string[stringLength] != undefined){\n    stringLength++;\n  }\n\
    \  return stringLength;\n}\n", "    var length = 0;\n    for(var i = 0; i < string.length;\
    \ i++){\n        length += 1;\n    }\n    return length;\n}\n", "    //base case\n\
    \    if(string.length === 0){\n        return 0;\n    }\n    //recursive case\n\
    \    return 1 + strlen(string.slice(1));\n}\n", "    if(string === ''){\n    \
    \    return 0;\n    }\n    else{\n        return 1 + strlen(string.slice(1));\n\
    \    }\n}\n", "  var count = 0;\n  for (var i = 0; i < string.length; i++) {\n\
    \    count++;\n  }\n  return count;\n}\n", "  return(string.length);\n}\n", " \
    \   var i = 0\n    while(string[i] !== undefined){\n      i++\n    }\n    return\
    \ i\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

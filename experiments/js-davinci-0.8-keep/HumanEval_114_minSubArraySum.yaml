name: HumanEval_114_minSubArraySum
language: js
prompt: "//Given an array of integers nums, find the minimum sum of any non-empty\
  \ sub-array\n// of nums.\n// Example\n// minSubArraySum([2, 3, 4, 1, 2, 4]) == 1\n\
  // minSubArraySum([-1, -2, -3]) == -6\nfunction minSubArraySum(nums){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = minSubArraySum;\n  assert.deepEqual(candidate([2, 3, 4, 1, 2, 4]),1);\n  assert.deepEqual(candidate([-1,\
  \ -2, -3]),-6);\n  assert.deepEqual(candidate([-1, -2, -3, 2, -10]),-14);\n  assert.deepEqual(candidate([-9999999999999999]),-9999999999999999);\n\
  \  assert.deepEqual(candidate([0, 10, 20, 1000000]),0);\n  assert.deepEqual(candidate([-1,\
  \ -2, -3, 10, -5]),-6);\n  assert.deepEqual(candidate([100, -1, -2, -3, 10, -5]),-6);\n\
  \  assert.deepEqual(candidate([10, 11, 13, 8, 3, 4]),3);\n  assert.deepEqual(candidate([100,\
  \ -33, 32, -1, 0, -2]),-33);\n  assert.deepEqual(candidate([-10]),-10);\n  assert.deepEqual(candidate([7]),7);\n\
  \  assert.deepEqual(candidate([1, -1]),-1);\n}\n\ntest();"
completions: ["  let minSubArraySum = nums[0];\n  let currentSum = nums[0];\n  for(let\
    \ i = 1; i < nums.length; i++){\n    currentSum = Math.min(currentSum + nums[i],\
    \ nums[i]);\n    minSubArraySum = Math.min(minSubArraySum, currentSum);\n  }\n\
    \  return minSubArraySum;\n}\n", "  if(nums.length == 0) return 0;\n  let currentSum\
    \ = nums[0];\n  let smallestSum = nums[0];\n  for(let i = 1; i < nums.length;\
    \ i++){\n    if(currentSum < 0){\n      currentSum = nums[i];\n    } else {\n\
    \      currentSum += nums[i];\n    }\n    if(currentSum < smallestSum){\n    \
    \  smallestSum = currentSum;\n    }\n  }\n  return smallestSum;\n}\n", "    if(nums.length\
    \ === 0) return null;\n    let min = nums[0];\n    let sum = nums[0];\n    for(let\
    \ i = 1; i < nums.length; i++){\n        if(sum > 0){\n            sum = nums[i];\n\
    \        }else{\n            sum += nums[i];\n        }\n        min = Math.min(min,\
    \ sum);\n    }\n    return min;\n}", "    if(nums.length === 0) return 0;\n  \
    \  let minSum = nums[0];\n    let currentSum = nums[0];\n    for(let i = 1; i\
    \ < nums.length; i++){\n        currentSum = Math.min(currentSum + nums[i], nums[i]);\n\
    \        minSum = Math.min(minSum, currentSum);\n    }\n    return minSum;\n}",
  "    let currentSum = nums[0];\n    let minSum = nums[0];\n    for(let i = 1; i\
    \ < nums.length; i++){\n        if(currentSum <= 0){\n            currentSum =\
    \ nums[i];\n        }else{\n            currentSum += nums[i];\n        }\n  \
    \      if(currentSum < minSum){\n            minSum = currentSum;\n        }\n\
    \    }\n    return minSum;\n}\n", "    let minSum = 0;\n    let currentSum = 0;\n\
    \    for(let i = 0; i < nums.length; i++){\n        currentSum += nums[i];\n \
    \       if(currentSum < minSum){\n            minSum = currentSum;\n        }\n\
    \    }\n    return minSum;\n}", "\tlet length = nums.length;\n\tlet minTotal =\
    \ Infinity;\n\tfor(let start = 0; start < length; start++){\n\t\tlet total = 0;\n\
    \t\tfor(let stop = start; stop < length; stop++){\n\t\t\ttotal += nums[stop];\n\
    \t\t\tminTotal = Math.min(minTotal, total);\n\t\t}\n\t}\n\treturn minTotal;\n\
    }\n", "    let sum = 0;\n    let minSum = 0;\n    let min = nums[0];\n    for(let\
    \ i = 0; i < nums.length; i++){\n        sum += nums[i];\n        if(minSum >\
    \ sum){\n            minSum = sum;\n        }\n        if(nums[i] < min){\n  \
    \          min = nums[i];\n        }\n    }\n    if(minSum !== 0){\n        return\
    \ minSum;\n    }\n    return min;\n}\n", "  let minSum = nums[0]\n  let sum =\
    \ nums[0]\n  for(let i = 1; i < nums.length; i++){\n    if(sum < 0){\n      sum\
    \ = nums[i]\n    } else {\n      sum += nums[i]\n    }\n    if(sum < minSum){\n\
    \      minSum = sum\n    }\n  }\n  return minSum\n}\n", "    var minSum = 0;\n\
    \    var currSum = 0;\n    for(var i = 0; i < nums.length; i++){\n        currSum\
    \ += nums[i];\n        if(currSum < minSum){\n            minSum = currSum;\n\
    \        }\n        if(currSum > 0){\n            currSum = 0;\n        }\n  \
    \  }\n    return minSum;\n}", "  let minSum = nums[0];\n  let currSum = 0;\n \
    \ for(let i = 0; i < nums.length; i++){\n    currSum += nums[i];\n    if(currSum\
    \ < minSum){\n      minSum = currSum;\n    }\n    if(currSum > 0){\n      currSum\
    \ = 0;\n    }\n  }\n  return minSum;\n}", "  let min = Infinity;\n  let currentSum\
    \ = 0;\n  for(let i = 0; i < nums.length; i++){\n    currentSum += nums[i];\n\
    \    if(currentSum < min){\n      min = currentSum;\n    }\n    if(currentSum\
    \ > 0){\n      currentSum = 0;\n    }\n  }\n  return min;\n}\n", "    let prev\
    \ = nums[0];\n    let min = nums[0];\n    for(let i = 1; i < nums.length; i++){\n\
    \        let temp = nums[i] + prev;\n        if(temp < nums[i]) prev = temp;\n\
    \        else prev = nums[i];\n        if(prev < min) min = prev;\n    }\n   \
    \ return min;\n}", "    let minSum = Infinity;\n    let currentSum = 0;\n    for(let\
    \ i = 0; i < nums.length; i++){\n        currentSum += nums[i];\n        minSum\
    \ = Math.min(minSum, currentSum);\n        if(currentSum < 0){\n            currentSum\
    \ = 0;\n        }\n    }\n    return minSum;\n}", "    let minSum = Infinity;\n\
    \    let tempSum = 0;\n    for(let i = 0; i < nums.length; i++){\n        tempSum\
    \ += nums[i];\n        if(tempSum < minSum){\n            minSum = tempSum;\n\
    \        }\n        if(tempSum > 0){\n            tempSum = 0;\n        }\n  \
    \  }\n    return minSum;\n}\n", "    let current = nums[0];\n    let least = nums[0];\n\
    \    for(let i = 1; i < nums.length; i++){\n        current = Math.min(nums[i],\
    \ current + nums[i]);\n        least = Math.min(least, current);\n    }\n    return\
    \ least;\n}\n", "    let min = Infinity;\n    let sum = 0;\n    for(let i = 0;\
    \ i < nums.length; i++){\n        sum += nums[i];\n        if(sum < min){\n  \
    \          min = sum;\n        }\n        for(let j = i + 1; j < nums.length;\
    \ j++){\n            sum += nums[j];\n            if(sum < min){\n           \
    \     min = sum;\n            }\n        }\n        sum = 0;\n    }\n    return\
    \ min;\n}\n", "  let n = nums.length;\n  let start = 0;\n  let end = 0;\n  let\
    \ minSum = Infinity;\n  let currSum = 0;\n  while(start < n){\n    while(end <\
    \ n && currSum >= 0){\n      currSum += nums[end];\n      end += 1;\n    }\n \
    \   minSum = Math.min(minSum, currSum);\n    currSum -= nums[start];\n    start\
    \ += 1;\n  }\n  return minSum;\n}", "\tlet tempMin = nums[0];\n\tlet cumulativeSum\
    \ = 0;\n\tfor(let i = 0; i < nums.length; i++){\n\t\tcumulativeSum += nums[i];\n\
    \t\tif(cumulativeSum < tempMin){\n\t\t\ttempMin = cumulativeSum;\n\t\t}\n\t}\n\
    \treturn tempMin;\n}", "    let minSum = Number.MAX_SAFE_INTEGER;\n    let start\
    \ = 0;\n    let end = 0;\n    let total = 0;\n    while(start < nums.length){\n\
    \        if(total < 0){\n            total = 0;\n            end = start;\n  \
    \      }\n        total += nums[end];\n        if(total < minSum){\n         \
    \   minSum = total;\n        }\n        end++;\n        if(end === nums.length){\n\
    \            start++;\n            end = start;\n        }\n    }\n    return\
    \ minSum;\n}"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

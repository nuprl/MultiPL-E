name: HumanEval_13_greatest_common_divisor
language: js
prompt: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
  \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
  \ b){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
  \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
  \ 60),12);\n}\n\ntest();"
completions: ["  if (a == 0) return b;\n  if (b == 0) return a;\n  return greatest_common_divisor(b,\
    \ a % b);\n}\n", "\twhile (a !== b){\n\t\tif (a > b){\n\t\t\ta = a - b;\n\t\t\
    }\n\t\telse{\n\t\t\tb = b - a;\n\t\t}\n\t}\n\treturn a;\n}\n\n", "    if (a %\
    \ b === 0) {\n        return b;\n    }\n    else {\n        return greatest_common_divisor(b,\
    \ a % b);\n    }\n}", "\tif(b == 0){\n\t\treturn a;\n\t}\n\telse{\n\t\treturn\
    \ greatest_common_divisor(b, a % b);\n\t}\n}\n\n", "  //...\n}\n", "  if(b==0){\n\
    \    return a;\n  }\n  else{\n    return greatest_common_divisor(b,a%b);\n  }\n\
    }\n", "    var divisor = 2,\n        greatestDivisor = 1;\n\n    //if u pass a\
    \ -ve number this will not work. fix it dude!!\n    if (a < 2 || b < 2)\n    \
    \    return 1;\n\n    while(a >= divisor && b >= divisor){\n        if(a %divisor\
    \ == 0 && b% divisor ==0){\n            greatestDivisor = divisor;\n        }\n\
    \        divisor++;\n    }\n    return greatestDivisor;\n}\n", "    // make sure\
    \ a is greater than b\n    if (a < b){\n        let t = a;\n        a = b;\n \
    \       b = t;\n    }\n    // compute remainder by modulus, subtract when b >\
    \ 0\n    let r = a % b;\n    while (r > 0){\n        a = b;\n        b = r;\n\
    \        r = a % b;\n    }\n    return b;\n}\n", "\tvar result;\n\tvar arr = [];\n\
    \tfor(var i = 1; i <= a; i++){\n\t\tif(a % i === 0){\n\t\t\tarr.push(i);\n\t\t\
    }\n\t}\n\tfor(var j = 0; j < arr.length; j++){\n\t\tif(b % arr[j] === 0){\n\t\t\
    \tresult = arr[j];\n\t\t}\n\t}\n\treturn result;\n}", "  var gcd = 1;\n  for (var\
    \ i = 2; i <= Math.min(a, b); i++) {\n    if (a % i == 0 && b % i == 0) {\n  \
    \    gcd = i;\n    }\n  }\n  return gcd;\n}\n", "    var divisor = 2, \n     \
    \   greatestDivisor = 1;\n\n    //if u pass a -ve number this will not work. fix\
    \ it dude!!\n    if (a < 2 || b < 2)\n       return 1;\n    \n    while(a >= divisor\
    \ && b >= divisor){\n     if(a %divisor == 0 && b% divisor ==0){\n           \
    \ greatestDivisor = divisor;      \n        }\n     divisor++;\n    }\n    return\
    \ greatestDivisor;\n}", "    let r;\n    while (b != 0){\n        r = a % b;\n\
    \        a = b;\n        b = r;\n    }\n    return a;\n}\n", "\tif(!b){\n\t\t\
    return a;\n\t}\n\treturn greatest_common_divisor(b, a % b);\n}\n", "\n}\n", " \
    \ while (a !== b) {\n      if (a > b) {\n          a = a - b;\n      } else {\n\
    \          b = b - a;\n      }\n  }\n  return a;\n}\n", "    if(b===0){\n    \
    \    return a;\n    }else{\n        return greatest_common_divisor(b, a%b);\n\
    \    }\n}\n", "\tif (a<b){\n\t\tvar tmp = a;\n\t\ta = b;\n\t\tb = tmp;\n\t}\n\t\
    var r = a % b;\n\tif (r==0){\n\t\treturn b;\n\t}\n\treturn greatest_common_divisor(b,\
    \ r);\n}", "  var divisor = 2, \n      greatestDivisor = 1;\n\n  //if u pass a\
    \ -ve number this will not work. fix it dude!!\n  if (a < 2 || b < 2)\n     return\
    \ 1;\n  \n  while(a >= divisor && b >= divisor){\n   if(a %divisor == 0 && b%\
    \ divisor ==0){\n      greatestDivisor = divisor;      \n    }\n   divisor++;\n\
    \  }\n  return greatestDivisor;\n}\n", "  var arr = [a, b];\n  var num = 1;\n\
    \  var divisor = 1;\n  while(divisor <= Math.min(...arr)){\n    if(a % divisor\
    \ === 0 && b % divisor === 0){\n      num = divisor;\n    }\n    divisor++;\n\
    \  }\n  return num;\n}\n", "  if(a < 0 || b < 0){\n    return -1;\n  }\n  else\
    \ if(a < b){\n    if(a === 0){\n      return b;\n    }\n    return greatest_common_divisor(b%a,\
    \ a);\n  }\n  else if(a > b){\n    if(b === 0){\n      return a;\n    }\n    return\
    \ greatest_common_divisor(a%b, b);\n  }\n  else{\n    return a;\n  }\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

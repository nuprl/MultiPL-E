name: HumanEval_74_total_match
language: js
prompt: "//Write a function that accepts two lists of strings and returns the list\
  \ that has \n// total number of chars in the all strings of the list less than the\
  \ other list.\n// if the two lists have the same number of chars, return the first\
  \ list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi', 'admin'],\
  \ ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'], ['hi', 'hi',\
  \ 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi', 'admin'], ['hI',\
  \ 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'], ['1', '2', '3',\
  \ '4', '5']) \u279E ['4']\nfunction total_match(lst1, lst2){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = total_match;\n  assert.deepEqual(candidate([], []),[]);\n  assert.deepEqual(candidate([\"\
  hi\", \"admin\"], [\"hi\", \"hi\"]),[\"hi\", \"hi\"]);\n  assert.deepEqual(candidate([\"\
  hi\", \"admin\"], [\"hi\", \"hi\", \"admin\", \"project\"]),[\"hi\", \"admin\"]);\n\
  \  assert.deepEqual(candidate([\"4\"], [\"1\", \"2\", \"3\", \"4\", \"5\"]),[\"\
  4\"]);\n  assert.deepEqual(candidate([\"hi\", \"admin\"], [\"hI\", \"Hi\"]),[\"\
  hI\", \"Hi\"]);\n  assert.deepEqual(candidate([\"hi\", \"admin\"], [\"hI\", \"hi\"\
  , \"hi\"]),[\"hI\", \"hi\", \"hi\"]);\n  assert.deepEqual(candidate([\"hi\", \"\
  admin\"], [\"hI\", \"hi\", \"hii\"]),[\"hi\", \"admin\"]);\n  assert.deepEqual(candidate([],\
  \ [\"this\"]),[]);\n  assert.deepEqual(candidate([\"this\"], []),[]);\n}\n\ntest();"
completions: ["  let total_lst1 = 0;\n  let total_lst2 = 0;\n  for(let i=0; i<lst1.length;\
    \ i++){\n    for(let j=0; j<lst1[i].length; j++){\n      total_lst1+=1;\n    }\n\
    \  }\n  for(let i=0; i<lst2.length; i++){\n    for(let j=0; j<lst2[i].length;\
    \ j++){\n      total_lst2+=1;\n    }\n  }\n  if(total_lst1 == total_lst2){\n \
    \   return lst1;\n  }\n  else if(total_lst1 > total_lst2){\n    return lst2;\n\
    \  }\n  else{\n    return lst1;\n  }\n}", "    const length1 = lst1.reduce((acc,\
    \ item) => acc + item.length, 0);\n    const length2 = lst2.reduce((acc, item)\
    \ => acc + item.length, 0);\n    return length1 < length2 ? lst1 : length1 ===\
    \ length2 ? lst1 : lst2;\n}", "    let sum1 = 0;\n    let sum2 = 0;\n    for(let\
    \ i = 0; i < lst1.length; i++){\n        sum1 += lst1[i].length;\n    }\n    for(let\
    \ i = 0; i < lst2.length; i++){\n        sum2 += lst2[i].length;\n    }\n    if(sum1\
    \ < sum2){\n        return lst1;\n    }\n    else if(sum1 > sum2){\n        return\
    \ lst2;\n    }\n    else{\n        return lst1;\n    }\n}", "    const c1 = lst1.join('').length;\n\
    \    const c2 = lst2.join('').length;\n    return c1 <= c2 ? lst1 : lst2;\n}",
  "\tif(lst1.length === 0 && lst2.length === 0){\n\t\treturn [];\n\t}\n\tif(lst1.length\
    \ !== 0 && lst2.length !== 0){\n\t\tlet t1 = 0;\n\t\tlet t2 = 0;\n\t\tlst1.forEach(element\
    \ => {\n\t\t\tt1 += element.length;\n\t\t});\n\t\tlst2.forEach(element => {\n\t\
    \t\tt2 += element.length;\n\t\t});\n\t\tif(t1 > t2){\n\t\t\treturn lst2;\n\t\t\
    }else if(t1 < t2){\n\t\t\treturn lst1;\n\t\t}else{\n\t\t\treturn lst1;\n\t\t}\n\
    \t}\n}\n", "    let lst1sum = lst1.reduce((acc, cv) => acc + cv.length, 0);\n\
    \    let lst2sum = lst2.reduce((acc, cv) => acc + cv.length, 0);\n    if(lst1sum\
    \ < lst2sum){\n        return lst1;\n    } else {\n        return lst2;\n    }\n\
    }\n", "    let lettersLst1 = [];\n    let lettersLst2 = [];\n    lst1.forEach(function(word){\n\
    \        lettersLst1.push(word.length);\n    });\n    lst2.forEach(function(word){\n\
    \        lettersLst2.push(word.length);\n    });\n    let sumLst1 = lettersLst1.reduce(function(a,\
    \ b){\n        return a + b;\n    });\n    let sumLst2 = lettersLst2.reduce(function(a,\
    \ b){\n        return a + b;\n    });\n    if(sumLst1 < sumLst2){\n        return\
    \ lst1;\n    } else if(sumLst1 > sumLst2){\n        return lst2;\n    } else {\n\
    \        return lst1;\n    }\n}\n", "    let str1 = lst1.join('')\n    let str2\
    \ = lst2.join('')\n    if(str1.length === str2.length){\n        return lst1\n\
    \    }else if(str1.length < str2.length){\n        return lst1\n    }else{\n \
    \       return lst2\n    }\n}", "    let total = 0;\n    for(let num of lst1){\n\
    \        for(let i = 0; i < num.length; i++){\n            total += num.charCodeAt(i);\n\
    \        }\n    }\n    let total2 = 0;\n    for(let num of lst2){\n        for(let\
    \ i = 0; i < num.length; i++){\n            total2 += num.charCodeAt(i);\n   \
    \     }\n    }\n    if(total < total2){\n        return lst1;\n    }\n    else\
    \ if(total2 < total){\n        return lst2;\n    }\n    else{\n        return\
    \ lst1;\n    }\n}", "  var sum1 = 0;\n  var sum2 = 0;\n  var result;\n  for(var\
    \ i = 0; i < lst1.length; i++){\n    sum1 += lst1[i].length;\n  }\n  for(var i\
    \ = 0; i < lst2.length; i++){\n    sum2 += lst2[i].length;\n  }\n  if(sum1 < sum2){\n\
    \    result = lst1;\n  }else if(sum1 > sum2){\n    result = lst2;\n  }else{\n\
    \    result = lst1;\n  }\n  return result;\n}", "    var lst1_total = 0;\n   \
    \ var lst2_total = 0;\n    for(var i = 0; i < lst1.length; i++){\n        lst1_total\
    \ += lst1[i].length;\n    }\n    for(var i = 0; i < lst2.length; i++){\n     \
    \   lst2_total += lst2[i].length;\n    }\n    if(lst1_total > lst2_total){\n \
    \       return lst2;\n    }\n    else{\n        return lst1;\n    }\n}", "   \
    \ let lst1_count = 0;\n    let lst2_count = 0;\n    for(let i = 0; i < lst1.length;\
    \ i++){\n        lst1_count += lst1[i].length;\n    }\n    for(let i = 0; i <\
    \ lst2.length; i++){\n        lst2_count += lst2[i].length;\n    }\n    if(lst1_count\
    \ == lst2_count){\n        return lst1;\n    }\n    else if(lst1_count < lst2_count){\n\
    \        return lst1;\n    }\n    else{\n        return lst2;\n    }\n}", "  let\
    \ count1 = 0;\n  let count2 = 0;\n  for(let i = 0; i < lst1.length; i++){\n  \
    \  count1 += lst1[i].length;\n  }\n  for(let i = 0; i < lst2.length; i++){\n \
    \   count2 += lst2[i].length;\n  }\n  if(count1 < count2){\n    return lst1;\n\
    \  }\n  return lst2;\n}", "    var total1 = 0;\n    var total2 = 0;\n    if(lst1.length\
    \ == 0 && lst2.length == 0){\n        return [];\n    }\n    else{\n        for(var\
    \ i = 0; i < lst1.length; i++){\n            total1 += lst1[i].length;\n     \
    \   }\n        for(var i = 0; i < lst2.length; i++){\n            total2 += lst2[i].length;\n\
    \        }\n        if(total1 > total2){\n            return lst2;\n        }\n\
    \        else if(total1 < total2){\n            return lst1;\n        }\n    \
    \    else{\n            return lst1;\n        }\n    }\n}\n", "    let total1\
    \ = 0;\n    let total2 = 0;\n    for(let i = 0; i < lst1.length; i++){\n     \
    \   total1 += lst1[i].length;\n    }\n    for(let i = 0; i < lst2.length; i++){\n\
    \        total2 += lst2[i].length;\n    }\n    if(total1 < total2){\n        return\
    \ lst1;\n    }else{\n        return lst2;\n    }\n}", "   var total1 = 0;\n  \
    \ var total2 = 0;\n   for(var i = 0; i < lst1.length; i++){\n       total1 +=\
    \ lst1[i].length;\n   }\n   for(var j = 0; j < lst2.length; j++){\n       total2\
    \ += lst2[j].length;\n   }\n   if(total1 < total2){\n       return lst1;\n   }\n\
    \   else if(total1 > total2){\n       return lst2;\n   }\n   else{\n       return\
    \ lst1;\n   }\n}\n", "  if(lst1.length == 0 && lst2.length == 0){\n    return\
    \ [];\n  }\n  let lst1TotalChar = 0;\n  let lst2TotalChar = 0;\n  for(let i =\
    \ 0; i < lst1.length; i++){\n    lst1TotalChar += lst1[i].length;\n  }\n  for(let\
    \ i = 0; i < lst2.length; i++){\n    lst2TotalChar += lst2[i].length;\n  }\n \
    \ if(lst1TotalChar <= lst2TotalChar){\n    return lst1;\n  }\n  return lst2;\n\
    }", "    if(lst1.length === 0 && lst2.length === 0){\n        return [];\n   \
    \ }\n    if(lst1.length > lst2.length){\n        return lst2;\n    }\n    if(lst1.length\
    \ < lst2.length){\n        return lst1;\n    }\n    return lst1;\n}", "    let\
    \ matchTotal = 0;\n    let strTotal = 0;\n    let count = 0;\n    let index =\
    \ 0;\n    for(let i = 0; i < lst1.length; i++){\n        matchTotal += lst1[i].length;\n\
    \    }\n    for(let i = 0; i < lst2.length; i++){\n        strTotal += lst2[i].length;\n\
    \    }\n    if(matchTotal < strTotal){\n        return lst1;\n    }else if(matchTotal\
    \ > strTotal){\n        return lst2;\n    }else{\n        while(count < 2){\n\
    \            if(lst1[index] === lst2[index]){\n                index++;\n    \
    \        }else{\n                count++;\n            }\n        }\n        if(count\
    \ === 2){\n            return lst1;\n        }else{\n            return lst2;\n\
    \        }\n    }\n}", "    let total1 = 0;\n    let total2 = 0;\n    for(let\
    \ i = 0; i < lst1.length; i++){\n        total1 += lst1[i].length;\n    }\n  \
    \  for(let i = 0; i < lst2.length; i++){\n        total2 += lst2[i].length;\n\
    \    }\n    if(total1 < total2){\n        return lst1;\n    }else{\n        return\
    \ lst2;\n    }\n}"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

language: js
name: HumanEval_55_fib
results:
- exit_code: 0
  program: "//Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n\
    // 1\n// >>> fib(8)\n// 21\nfunction fib(n){\n\tif(n===0) return 0;\n\tif(n===1)\
    \ return 1;\n\treturn fib(n-1)+fib(n-2);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = fib;\n  assert.deepEqual(candidate(10),55);\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(8),21);\n \
    \ assert.deepEqual(candidate(11),89);\n  assert.deepEqual(candidate(12),144);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821752
- exit_code: 0
  program: "//Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n\
    // 1\n// >>> fib(8)\n// 21\nfunction fib(n){\n  var f = 1;\n  var f1 = 1;\n  var\
    \ f2 = 1;\n  for (var i = 3; i <= n; i++) {\n    f = f1 + f2;\n    f1 = f2;\n\
    \    f2 = f;\n  }\n  return f;\n}\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = fib;\n  assert.deepEqual(candidate(10),55);\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(8),21);\n \
    \ assert.deepEqual(candidate(11),89);\n  assert.deepEqual(candidate(12),144);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821752
- exit_code: 0
  program: "//Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n\
    // 1\n// >>> fib(8)\n// 21\nfunction fib(n){\n    // Base case.\n    if (n <=\
    \ 1) {\n        return n;\n    } else {\n        return fib(n-1) + fib(n-2);\n\
    \    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = fib;\n  assert.deepEqual(candidate(10),55);\n  assert.deepEqual(candidate(1),1);\n\
    \  assert.deepEqual(candidate(8),21);\n  assert.deepEqual(candidate(11),89);\n\
    \  assert.deepEqual(candidate(12),144);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821752
- exit_code: 0
  program: "//Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n\
    // 1\n// >>> fib(8)\n// 21\nfunction fib(n){\n    if(n==1 || n==2){\n        return\
    \ 1;\n    }\n    return fib(n-1)+fib(n-2);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = fib;\n  assert.deepEqual(candidate(10),55);\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(8),21);\n \
    \ assert.deepEqual(candidate(11),89);\n  assert.deepEqual(candidate(12),144);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821735
- exit_code: 0
  program: "//Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n\
    // 1\n// >>> fib(8)\n// 21\nfunction fib(n){\n    if(n == 0){\n        return\
    \ 0;\n    }\n    if(n == 1){\n        return 1;\n    }\n    return fib(n-1) +\
    \ fib(n-2);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = fib;\n  assert.deepEqual(candidate(10),55);\n  assert.deepEqual(candidate(1),1);\n\
    \  assert.deepEqual(candidate(8),21);\n  assert.deepEqual(candidate(11),89);\n\
    \  assert.deepEqual(candidate(12),144);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821734
- exit_code: 0
  program: "//Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n\
    // 1\n// >>> fib(8)\n// 21\nfunction fib(n){\n    if(n <= 2){\n        return\
    \ 1;\n    }\n    else{\n        return fib(n-1) + fib(n-2);\n    }\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = fib;\n\
    \  assert.deepEqual(candidate(10),55);\n  assert.deepEqual(candidate(1),1);\n\
    \  assert.deepEqual(candidate(8),21);\n  assert.deepEqual(candidate(11),89);\n\
    \  assert.deepEqual(candidate(12),144);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821752
- exit_code: 0
  program: "//Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n\
    // 1\n// >>> fib(8)\n// 21\nfunction fib(n){\n  if (n === 0){\n    return 0;\n\
    \  }\n  else if (n === 1){\n    return 1;\n  }\n  else {\n    return fib(n-1)\
    \ + fib(n-2);\n  }\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = fib;\n  assert.deepEqual(candidate(10),55);\n  assert.deepEqual(candidate(1),1);\n\
    \  assert.deepEqual(candidate(8),21);\n  assert.deepEqual(candidate(11),89);\n\
    \  assert.deepEqual(candidate(12),144);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821752
- exit_code: 0
  program: "//Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n\
    // 1\n// >>> fib(8)\n// 21\nfunction fib(n){\n    var a = 0, b = 1, f = 1;\n \
    \   for(var i = 2; i <= n; i++) {\n        f = a + b;\n        a = b;\n      \
    \  b = f;\n    }\n    return f;\n}\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = fib;\n  assert.deepEqual(candidate(10),55);\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(8),21);\n \
    \ assert.deepEqual(candidate(11),89);\n  assert.deepEqual(candidate(12),144);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821734
- exit_code: 0
  program: "//Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n\
    // 1\n// >>> fib(8)\n// 21\nfunction fib(n){\n\tif(n<=2){\n\t\treturn 1;\n\t}else{\n\
    \t\treturn fib(n-1)+fib(n-2);\n\t}\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = fib;\n  assert.deepEqual(candidate(10),55);\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(8),21);\n \
    \ assert.deepEqual(candidate(11),89);\n  assert.deepEqual(candidate(12),144);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821752
- exit_code: 0
  program: "//Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n\
    // 1\n// >>> fib(8)\n// 21\nfunction fib(n){\n  // fib(0) = 0, fib(1) = 1, fib(2)\
    \ = 1, fib(3) = 2, fib(4) = 3, fib(5) = 5, fib(6) = 8\n  if (n === 0) {\n    return\
    \ 0;\n  } else if (n === 1) {\n    return 1;\n  } else {\n    return fib(n - 1)\
    \ + fib(n - 2);\n  }\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = fib;\n  assert.deepEqual(candidate(10),55);\n  assert.deepEqual(candidate(1),1);\n\
    \  assert.deepEqual(candidate(8),21);\n  assert.deepEqual(candidate(11),89);\n\
    \  assert.deepEqual(candidate(12),144);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821752
- exit_code: 0
  program: "//Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n\
    // 1\n// >>> fib(8)\n// 21\nfunction fib(n){\n  var res = [];\n  if(n == 1){\n\
    \    return 1;\n  }else if(n == 2){\n    return 1;\n  }else{\n    for(var i =\
    \ 1; i < n-1; i++){\n      res.push(fib(i));\n    }\n    return fib(n-1) + fib(n-2);\n\
    \  }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = fib;\n  assert.deepEqual(candidate(10),55);\n  assert.deepEqual(candidate(1),1);\n\
    \  assert.deepEqual(candidate(8),21);\n  assert.deepEqual(candidate(11),89);\n\
    \  assert.deepEqual(candidate(12),144);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821752
- exit_code: 1
  program: "//Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n\
    // 1\n// >>> fib(8)\n// 21\nfunction fib(n){\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = fib;\n  assert.deepEqual(candidate(10),55);\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(8),21);\n \
    \ assert.deepEqual(candidate(11),89);\n  assert.deepEqual(candidate(12),144);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\n\
    should loosely deep-equal\n\n55\n    at test (/tmp/tmp6ap7j02f.js:16:10)\n   \
    \ at Object.<anonymous> (/tmp/tmp6ap7j02f.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n\
    \  expected: 55,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821734
- exit_code: 0
  program: "//Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n\
    // 1\n// >>> fib(8)\n// 21\nfunction fib(n){\n\tif(n==1 || n==2){\n\t\treturn\
    \ 1;\n\t}\n\treturn fib(n-1)+fib(n-2);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = fib;\n  assert.deepEqual(candidate(10),55);\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(8),21);\n \
    \ assert.deepEqual(candidate(11),89);\n  assert.deepEqual(candidate(12),144);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821752
- exit_code: 0
  program: "//Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n\
    // 1\n// >>> fib(8)\n// 21\nfunction fib(n){\n    if(n == 0)\n    {\n        return\
    \ 0;\n    }\n    else if(n == 1)\n    {\n        return 1;\n    }\n    else\n\
    \    {\n        return fib(n-1) + fib(n-2);\n    }\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = fib;\n  assert.deepEqual(candidate(10),55);\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(8),21);\n \
    \ assert.deepEqual(candidate(11),89);\n  assert.deepEqual(candidate(12),144);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821752
- exit_code: 1
  program: "//Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n\
    // 1\n// >>> fib(8)\n// 21\nfunction fib(n){\n    //YOUR CODE HERE\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = fib;\n\
    \  assert.deepEqual(candidate(10),55);\n  assert.deepEqual(candidate(1),1);\n\
    \  assert.deepEqual(candidate(8),21);\n  assert.deepEqual(candidate(11),89);\n\
    \  assert.deepEqual(candidate(12),144);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\n\
    should loosely deep-equal\n\n55\n    at test (/tmp/tmpu2ovzxyo.js:17:10)\n   \
    \ at Object.<anonymous> (/tmp/tmpu2ovzxyo.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n\
    \  expected: 55,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821752
- exit_code: 0
  program: "//Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n\
    // 1\n// >>> fib(8)\n// 21\nfunction fib(n){\n\tif(n==1) return 1;\n\tif(n==2)\
    \ return 1;\n\tif(n==3) return 2;\n\tif(n==4) return 3;\n\tif(n==5) return 5;\n\
    \treturn fib(n-1)+fib(n-2);\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = fib;\n  assert.deepEqual(candidate(10),55);\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(8),21);\n \
    \ assert.deepEqual(candidate(11),89);\n  assert.deepEqual(candidate(12),144);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821752
- exit_code: 1
  program: "//Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n\
    // 1\n// >>> fib(8)\n// 21\nfunction fib(n){\n  var a = 1, b = 0, temp;\n\n  while\
    \ (n >= 0){\n    temp = a;\n    a = a + b;\n    b = temp;\n    n--;\n  }\n\n \
    \ return b;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = fib;\n  assert.deepEqual(candidate(10),55);\n  assert.deepEqual(candidate(1),1);\n\
    \  assert.deepEqual(candidate(8),21);\n  assert.deepEqual(candidate(11),89);\n\
    \  assert.deepEqual(candidate(12),144);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n89\n\nshould loosely\
    \ deep-equal\n\n55\n    at test (/tmp/tmp2671rqvm.js:26:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp2671rqvm.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 89,\n  expected:\
    \ 55,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821734
- exit_code: 0
  program: "//Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n\
    // 1\n// >>> fib(8)\n// 21\nfunction fib(n){\n\t//fib(n-1) + fib(n-2)\n\tif(n\
    \ === 1){\n\t\treturn 1;\n\t}else if(n === 2){\n\t\treturn 1;\n\t}else{\n\t\t\
    return fib(n-1) + fib(n-2);\n\t}\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = fib;\n  assert.deepEqual(candidate(10),55);\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(8),21);\n \
    \ assert.deepEqual(candidate(11),89);\n  assert.deepEqual(candidate(12),144);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821752
- exit_code: 0
  program: "//Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n\
    // 1\n// >>> fib(8)\n// 21\nfunction fib(n){\n    let a = 1;\n    let b = 1;\n\
    \    for (let i = 3; i <= n; i++) {\n        let c = a + b;\n        a = b;\n\
    \        b = c;\n    }\n    return b;\n}\n\nmodule.exports = fib;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = fib;\n \
    \ assert.deepEqual(candidate(10),55);\n  assert.deepEqual(candidate(1),1);\n \
    \ assert.deepEqual(candidate(8),21);\n  assert.deepEqual(candidate(11),89);\n\
    \  assert.deepEqual(candidate(12),144);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821752
- exit_code: 1
  program: "//Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n\
    // 1\n// >>> fib(8)\n// 21\nfunction fib(n){\n\tvar a = 1, b = 0, tmp;\n\twhile\
    \ (n >= 0){\n\t\ttmp = a;\n\t\ta = a + b;\n\t\tb = tmp;\n\t\tn--;\n\t}\n\treturn\
    \ b;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = fib;\n  assert.deepEqual(candidate(10),55);\n  assert.deepEqual(candidate(1),1);\n\
    \  assert.deepEqual(candidate(8),21);\n  assert.deepEqual(candidate(11),89);\n\
    \  assert.deepEqual(candidate(12),144);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n89\n\nshould loosely\
    \ deep-equal\n\n55\n    at test (/tmp/tmpaeffvzqu.js:24:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpaeffvzqu.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 89,\n  expected:\
    \ 55,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821752

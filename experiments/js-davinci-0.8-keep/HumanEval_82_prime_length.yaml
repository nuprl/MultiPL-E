name: HumanEval_82_prime_length
language: js
prompt: "//Write a function that takes a string and returns True if the string\n//\
  \ length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
  \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
  // prime_length('orange') == False\nfunction prime_length(string){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = prime_length;\n  assert.deepEqual(candidate(\"Hello\"),true);\n  assert.deepEqual(candidate(\"\
  abcdcba\"),true);\n  assert.deepEqual(candidate(\"kittens\"),true);\n  assert.deepEqual(candidate(\"\
  orange\"),false);\n  assert.deepEqual(candidate(\"wow\"),true);\n  assert.deepEqual(candidate(\"\
  world\"),true);\n  assert.deepEqual(candidate(\"MadaM\"),true);\n  assert.deepEqual(candidate(\"\
  Wow\"),true);\n  assert.deepEqual(candidate(\"\"),false);\n  assert.deepEqual(candidate(\"\
  HI\"),true);\n  assert.deepEqual(candidate(\"go\"),true);\n  assert.deepEqual(candidate(\"\
  gogo\"),false);\n  assert.deepEqual(candidate(\"aaaaaaaaaaaaaaa\"),false);\n  assert.deepEqual(candidate(\"\
  Madam\"),true);\n  assert.deepEqual(candidate(\"M\"),false);\n  assert.deepEqual(candidate(\"\
  0\"),false);\n}\n\ntest();"
completions: ["    var length = string.length;\n    if(length == 0 || length == 1){\n\
    \        return false;\n    }\n    for(var i = 2; i < length; i++){\n        if(length\
    \ % i == 0){\n            return false;\n        }\n    }\n    return true;\n\
    }\n", "  if(is_prime(string.length)){\n    return true;\n  }\n  return false;\n\
    }\n", "    if(string.length % 2 === 0){\n        return false;\n    }\n    else{\n\
    \        return true;\n    }\n}", "  var len = string.length;\n  var prime = true;\n\
    \  for(var i = 2; i < len; i++){\n    if(len % i == 0){\n      prime = false;\n\
    \    }\n  }\n  return prime;\n}", "    return false;\n}\n", "    let isPrime =\
    \ true;\n    let stringLength = string.length;\n    for(i = 2; i <= stringLength/2;\
    \ i++){\n        if(stringLength % i == 0){\n            isPrime = false;\n  \
    \          break;\n        }\n    }\n    return isPrime;\n}\n", "    for(var i\
    \ = 2; i < string.length; i++){\n        if(string.length % i === 0){\n      \
    \      return false;\n        }\n    }\n    return true;\n}\n", "  var output\
    \ = true;\n  for(var i = 2; i < string.length; i++){\n    if(string.length % i\
    \ === 0){\n      output = false;\n    }\n  }\n  return output;\n}\n", "    \n}",
  "    var str = string.length;\n    var prime = true;\n    for(var i = 2; i<str;\
    \ i++){\n        if(str%i==0){\n            prime = false;\n        }\n    }\n\
    \    if(prime == true){\n        return true;\n    }\n    else{\n        return\
    \ false;\n    }\n}", "    var n = string.length;\n    //console.log(\"The length\
    \ of the string is \" + n);\n    var i = 0;\n    var is_prime = true;\n    while(i\
    \ < n){\n        i++;\n        if(n % i == 0 && i != 1 && i != n){\n         \
    \   is_prime = false;\n        }\n    }\n    //console.log(is_prime);\n    return\
    \ is_prime;\n}\nprime_length('Hello');\nprime_length('abcdcba');\nprime_length('kittens');\n\
    prime_length('orange');\n", "  let string_length = string.length;\n  if (is_prime(string_length)){\n\
    \    return true;\n  }\n  else{\n    return false;\n  }\n}\n", "    if(string.length\
    \ == 2 || string.length == 3){\n        return true;\n    }\n    if(string.length\
    \ % 2 == 0 || string.length % 3 == 0){\n        return false;\n    }\n    return\
    \ true;\n}", "\tif(string.length < 2){\n\t\treturn false;\n\t}\n\tfor(var i =\
    \ 2; i < string.length; i++){\n\t\tif(string.length % i == 0){\n\t\t\treturn false;\n\
    \t\t}\n\t}\n\treturn true;\n}\n", "  var count = 0;\n  for(var i = 1; i <= string.length;\
    \ i++){\n    if(string.length % i == 0){\n      count++;\n    }\n  }\n  if(count\
    \ == 2){\n    return true;\n  }\n  else{\n    return false;\n  }\n}", "  var length\
    \ = string.length;\n  var count = 0;\n  for(var i = length; i > 0; i--){\n   \
    \ if(length % i == 0){\n      count += 1;\n    }\n  }\n  if(count == 2){\n   \
    \ return true;\n  }\n  else{\n    return false;\n  }\n}", "  if(is_prime(string.length)){\n\
    \    return true;\n  }\n  return false;\n}", "    var result = false;\n    var\
    \ array = [2,3,5,7,11,13,17,19,23,29,31,37,41,43,47,53,59,61,67,71,73,79,83,89,97];\n\
    \    if(array.includes(string.length)){\n        result = true;\n    }\n    return\
    \ result;\n}", "    return isPrime(string.length);\n}\n", "    //get length of\
    \ string\n    var length = string.length;\n    //check to see if it is a prime\
    \ number\n    if(length == 2 || length == 3 || length == 5 || length == 7){\n\
    \        return true;\n    }\n    return false;\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

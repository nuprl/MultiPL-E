name: HumanEval_4_mean_absolute_deviation
language: js
prompt: "//For a given list of input numbers, calculate Mean Absolute Deviation\n\
  // around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute\
  \ difference between each\n// element and a centerpoint (mean in this case):\n//\
  \ MAD = average | x - x_mean |\n// >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n\
  // 1.0\nfunction mean_absolute_deviation(numbers){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = mean_absolute_deviation;\n  assert.deepEqual(candidate([1.0, 2.0]),0.5);\n \
  \ assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0]),1.0);\n  assert.deepEqual(candidate([1.0,\
  \ 2.0, 3.0, 4.0, 5.0]),1.2);\n}\n\ntest();"
completions: ["\tvar sum = numbers.reduce(function(a, b){return a + b;});\n\tvar mean\
    \ = sum / numbers.length;\n\tvar mean_absolute_differences = numbers.map(function(x){\n\
    \t\treturn Math.abs(x - mean);\n\t});\n\treturn mean_absolute_differences.reduce(function(a,\
    \ b){return a + b;}) / numbers.length;\n}\n", "  var mean = _.mean(numbers);\n\
    \  var deviations = _.map(numbers, function(n){\n    return Math.abs(n - mean);\n\
    \  });\n  return _.mean(deviations);\n}\n", "\tvar mean_value = mean(numbers);\n\
    \tvar absolute_deviations = numbers.map(function(x){\n\t\treturn Math.abs(x -\
    \ mean_value);\n\t});\n\treturn mean(absolute_deviations);\n}\n", "\tvar n = numbers.length;\n\
    \tvar m = mean(numbers);\n\tvar sum = 0;\n\tfor(var i = 0; i < n; i++){\n\t\t\
    sum += Math.abs(numbers[i] - m);\n\t}\n\treturn sum / n;\n}\n", "    //Calculate\
    \ mean\n    let sum = 0;\n    for(let i = 0; i < numbers.length; i++){\n     \
    \   sum += numbers[i];\n    }\n    let mean = sum / numbers.length;\n\n    //Calculate\
    \ deviations\n    let deviations = [];\n    for(let i = 0; i < numbers.length;\
    \ i++){\n        deviations.push(Math.abs(numbers[i] - mean));\n    }\n\n    //Calculate\
    \ average deviation\n    let deviations_sum = 0;\n    for(let i = 0; i < deviations.length;\
    \ i++){\n        deviations_sum += deviations[i];\n    }\n    let average_deviation\
    \ = deviations_sum / deviations.length;\n\n    return average_deviation;\n}\n",
  "    var mean = mean_value(numbers);\n    var abs_diffs = numbers.map(function(x){\n\
    \        return Math.abs(x - mean);\n    });\n    return mean_value(abs_diffs);\n\
    }\n", "\tvar center_point = mean(numbers);\n\tvar deviation_list = [];\n\tfor(var\
    \ i=0; i<numbers.length; i++){\n\t\tdeviation_list.push(Math.abs(numbers[i] -\
    \ center_point));\n\t}\n\treturn mean(deviation_list);\n}\n", "\tvar sum = 0;\n\
    \tvar mean = mean_of_numbers(numbers);\n\tvar absolute_deviations = map(numbers,\
    \ function(n){\n\t\tvar deviation = Math.abs(n - mean);\n\t\tsum += deviation;\n\
    \t\treturn deviation;\n\t});\n\tvar average_absolute_deviation = sum / absolute_deviations.length;\n\
    \treturn average_absolute_deviation;\n}\n", "  var mean_value = mean(numbers);\n\
    \  var squared_absolute_differences = [];\n  for (var i = 0; i < numbers.length;\
    \ i++){\n    squared_absolute_differences.push(Math.abs(numbers[i] - mean_value));\n\
    \  }\n  return mean(squared_absolute_differences);\n}\n", "\tvar sum = sum_of_numbers(numbers);\n\
    \tvar mean = sum / numbers.length;\n\tvar deviants = [];\n\tfor (i=0; i<numbers.length;\
    \ i++){\n\t\tdeviants.push(numbers[i] - mean);\n\t}\n\tvar abs_deviants = [];\n\
    \tfor (i=0; i<deviants.length; i++){\n\t\tabs_deviants.push(Math.abs(deviants[i]));\n\
    \t}\n\tvar MAD = mean_of_numbers(abs_deviants);\n\treturn MAD;\n}\n", "    var\
    \ mean = average(numbers);\n    var deviations = numbers.map(function(x){\n  \
    \      return Math.abs(x - mean);\n    });\n    return average(deviations);\n\
    }\n\nmodule.exports = mean_absolute_deviation;", "\tvar sum = 0;\n\tvar mean =\
    \ mean(numbers);\n\tfor(var i = 0; i < numbers.length; i++){\n\t\tsum += Math.abs(numbers[i]\
    \ - mean);\n\t}\n\treturn sum / numbers.length;\n}\n", "  var sum = 0;\n  for(var\
    \ i = 0; i < numbers.length; i++){\n    sum += numbers[i];\n  }\n  var mean =\
    \ sum / numbers.length;\n  var diffs = [];\n  for(var i = 0; i < numbers.length;\
    \ i++){\n    diffs.push(Math.abs(numbers[i] - mean));\n  }\n  var sum = 0;\n \
    \ for(var i = 0; i < diffs.length; i++){\n    sum += diffs[i];\n  }\n  return\
    \ sum / diffs.length;\n}\n", "\tvar mean = math.mean(numbers);\n\t//now subtract\
    \ this mean from each number and return the sum of these\n\tvar sum = 0;\n\tfor(i=0;\
    \ i<numbers.length; i++){\n\t\tsum += Math.abs(numbers[i] - mean);\n\t}\n\treturn\
    \ sum/numbers.length;\n}\n", "\tvar sum = 0;\n\tvar mean = jStat.mean(numbers);\n\
    \tfor(var i = 0; i < numbers.length; i++){\n\t\tsum += Math.abs(numbers[i] - mean);\n\
    \t}\n\treturn sum / numbers.length;\n}\n", "  var mean = arithmetic_mean(numbers);\n\
    \  var abs_devs = [];\n  for(var i = 0; i < numbers.length; i++){\n    abs_devs.push(Math.abs(numbers[i]\
    \ - mean));\n  }\n  return arithmetic_mean(abs_devs);\n}\n", "\tvar sum = 0;\n\
    \tvar mean = mean(numbers);\n\tvar l = numbers.length;\n\tfor(var i = 0; i < l;\
    \ i++){\n\t\tsum += Math.abs(numbers[i] - mean);\n\t}\n\treturn sum / l;\n}\n",
  "\tvar mean = compute_mean(numbers);\n\tvar absolute_diffs = numbers.map(function(element){\n\
    \t\treturn Math.abs(element - mean);\n\t});\n\treturn compute_mean(absolute_diffs);\n\
    }\n", "    var mean_absolute_deviation = 0;\n    var mean = numbers.mean();\n\
    \    numbers.forEach(function(number){\n        mean_absolute_deviation += Math.abs(number\
    \ - mean);\n    });\n    return mean_absolute_deviation / numbers.length;\n}\n",
  "\tvar sum = 0;\n\tvar mean = mean(numbers);\n\tfor(var i = 0; i < numbers.length;\
    \ i++){\n\t\tsum += Math.abs(numbers[i] - mean);\n\t}\n\treturn sum / numbers.length;\n\
    }\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

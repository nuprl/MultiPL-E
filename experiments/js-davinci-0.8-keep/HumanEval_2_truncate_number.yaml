name: HumanEval_2_truncate_number
language: js
prompt: "//Given a positive floating point number, it can be decomposed into\n// and\
  \ integer part (largest integer smaller than given number) and decimals\n// (leftover\
  \ part always smaller than 1).\n// Return the decimal part of the number.\n// >>>\
  \ truncate_number(3.5)\n// 0.5\nfunction truncate_number(number){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = truncate_number;\n  assert.deepEqual(candidate(3.5),0.5);\n  assert.deepEqual(candidate(1.25),0.25);\n\
  \  assert.deepEqual(candidate(123.0),0.0);\n}\n\ntest();"
completions: ["    return number - Math.floor(number);\n}\n", "  return number - Math.floor(number);\n\
    }\n", "  return parseFloat(number.toString().split('.')[1]);\n}\n", "\treturn\
    \ parseFloat(number - Math.floor(number));\n}\n", "    return number % 1;\n}\n",
  "\n}\n", "    var integer = Math.floor(number);\n    var decimal = number - integer;\n\
    \    return decimal;\n}\n", "    return number - Math.floor(number);\n}\n", " \
    \   return Math.trunc(number);\n}\n", "  var parsed = parseInt(number);\n  if(parsed\
    \ < number){\n    var diff = number - parsed;\n    return diff;\n  }else{\n  \
    \  return 0;\n  }\n}\n", "\tvar integer = Math.floor(number);\n\tvar decimal =\
    \ number - integer;\n\treturn decimal;\n}\n\n", "    return Math.trunc(number);\n\
    }\n", "    return number % 1;\n}\n", "  // YOUR CODE HERE\n}\n", "    let i =\
    \ parseInt(number);\n    return number - i;\n}\n", "  //YOUR CODE HERE\n  return\
    \ number - Math.floor(number);\n}\n", "    return Math.floor(number);\n}\n\n",
  "    if(typeof number != \"number\"){\n        return null;\n    }\n    var truncated\
    \ = number - parseInt(number);\n    return truncated;\n}\n", "  var truncated\
    \ = (number % 1);\n  return truncated\n}\n\n\n", "    let num = number - Math.floor(number);\n\
    \    return num;\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

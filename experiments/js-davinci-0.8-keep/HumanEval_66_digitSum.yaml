name: HumanEval_66_digitSum
language: js
prompt: "//Task\n// Write a function that takes a string as input and returns the\
  \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// digitSum(\"\
  \") => 0\n// digitSum(\"abAB\") => 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"\
  helloE\") => 69\n// digitSum(\"woArBld\") => 131\n// digitSum(\"aAaaaXa\") => 153\n\
  function digitSum(s){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
  abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
  helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
  aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
  You arE Very Smart\"),327);\n}\n\ntest();"
completions: ["  return [...s].reduce((acc,v)=>acc+v.charCodeAt(),0)\n}\n", "    let\
    \ upperArray = s.split('').filter(element => element.toUpperCase() === element)\n\
    \    let upperCodes = upperArray.map(element => element.charCodeAt(0))\n    let\
    \ sum = upperCodes.reduce((acc,element) => acc + element)\n    return sum\n}",
  "    if(s == \"\"){\n        return 0;\n    }\n    var sum = 0;\n    for(var i =\
    \ 0; i < s.length; i++){\n        if(s[i] == s[i].toUpperCase()){\n          \
    \  sum += s.charCodeAt(i);\n        }\n    }\n    return sum;\n}", "  let total\
    \ = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s[i] >= 'A' && s[i] <=\
    \ 'Z') {\n      total += s.charCodeAt(i);\n    }\n  }\n  return total;\n}\n",
  "  //your code here.\n}\nmodule.exports = digitSum", "    let result = 0;\n    for\
    \ (let i = 0; i < s.length; i++) {\n        let asc = s.charCodeAt(i);\n     \
    \   if (asc > 64 && asc < 91) {\n            result += asc;\n        }\n    }\n\
    \    return result;\n}", "    return s.split('').reduce((acc, char) => char.toUpperCase()\
    \ === char ? acc + char.charCodeAt(0) : acc, 0)\n}\n", "    // code code code\n\
    \    let res = [];\n    let sum = 0;\n    let code = [];\n    res = s.split('');\n\
    \    for(let i = 0; i < res.length; i++){\n        if(res[i] === res[i].toUpperCase()){\n\
    \            code.push(res[i].charCodeAt());\n        }\n    }\n    for(let i\
    \ = 0; i < code.length; i++){\n        sum += code[i];\n    }\n    return sum;\n\
    }", "  if (s === '') return 0;\n  s = s.toUpperCase();\n  return s.split('').reduce((acc,\
    \ curr) => {\n    const num = curr.charCodeAt(0);\n    if (num >= 65 && num <=\
    \ 90) {\n      return acc + num;\n    }\n    return acc;\n  }, 0);\n}\n", "  \
    \  let sum = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] ===\
    \ s[i].toUpperCase()) {\n            sum += s.charCodeAt(i);\n        }\n    }\n\
    \    return sum;\n}", "  let alpha = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n  let sum\
    \ = 0;\n  for(let i = 0; i < s.length; i++){\n    if(alpha.includes(s[i])) sum\
    \ += s.charCodeAt(i);\n  }\n  return sum;\n}\n", "  return s.split('').reduce((sum,\
    \ ch) => sum + (ch >= 'A' && ch <= 'Z' ? ch.charCodeAt(0) : 0), 0);\n}", "   \
    \ var sum = 0;\n    for(var i = 0; i < s.length; i++){\n        if(s.charCodeAt(i)\
    \ >= 65 && s.charCodeAt(i) <= 90){\n            sum += s.charCodeAt(i);\n    \
    \    }\n    }\n    return sum;\n}", "  var sum = 0;\n  for (var i = 0; i < s.length;\
    \ i++) {\n    if(s[i] == s[i].toUpperCase()){\n      sum += s.charCodeAt(i);\n\
    \    }\n  }\n  return sum;\n}\n", "    let array = s.split('');\n    let sum =\
    \ 0;\n    for(let i = 0; i < array.length; i++){\n        if(array[i] === array[i].toUpperCase()){\n\
    \            sum += array[i].charCodeAt(0);\n        }\n    }\n    return sum;\n\
    }\n", "  const str = s.toUpperCase().split('');\n  let sum = 0;\n  for (let i\
    \ = 0; i < str.length; i++) {\n    sum += str[i].charCodeAt();\n  }\n  return\
    \ sum;\n}", "  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s[i]\
    \ === s[i].toUpperCase()) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return\
    \ sum;\n}", "  return s.split('').reduce((acc,val)=>{\n    if(val.charCodeAt(0)>=65\
    \ && val.charCodeAt(0)<=90){\n      acc += val.charCodeAt(0)\n    }\n    return\
    \ acc\n  },0)\n}", "  var sum = 0;\n  for (var i = 0; i < s.length; i++) {\n \
    \   if (s[i] == s[i].toUpperCase()) {\n      sum += s.charCodeAt(i);\n    }\n\
    \  }\n  return sum;\n}\n", "    let sum = 0;\n    s.split('').map(x => x.charCodeAt(0)\
    \ >= 65 && x.charCodeAt(0) <= 90 ? sum += x.charCodeAt(0) : 0)\n    return sum;\n\
    }\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

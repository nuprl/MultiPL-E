name: HumanEval_24_largest_divisor
language: js
prompt: "//For a given number n, find the largest number that divides n evenly, smaller\
  \ than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor(n){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n\
  \  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n\
  \  assert.deepEqual(candidate(49),7);\n}\n\ntest();"
completions: ["    var largest_divisor = 0;\n    for(var i = 1; i < n; i++){\n   \
    \     if(n % i == 0){\n            largest_divisor = i;\n        }\n    }\n  \
    \  return largest_divisor;\n}", "    var divisor = n - 1;\n    while (n % divisor\
    \ !== 0){\n        divisor -= 1;\n    }\n    return divisor;\n}\n", "  let i =\
    \ n;\n  while (i > 0){\n    if (n % i === 0){\n      return i;\n    }\n    i -=\
    \ 1;\n  }\n}\n", "    var max=0;\n    for(var i=1;i<n;i++){\n        if(n%i==0){\n\
    \            max=i;\n        }\n    }\n    return max;\n}\nlargest_divisor(5);\n",
  "\tfor(var i = n-1; i > 0; i--){\n\t\tif(n % i === 0){\n\t\t\treturn i;\n\t\t}\n\
    \t}\n}\n", "  for(var i = n - 1; i > 0; i--){\n    if(n % i === 0){\n      return\
    \ i;\n    }\n  }\n}\n", "    var largest_divisor = n;\n    for(var i = 0; i <\
    \ n; i++){\n        if(n % i === 0 && i < n){\n            largest_divisor = i;\n\
    \        }\n    }\n    return largest_divisor;\n}\n", "  for(let i = n-1; i >\
    \ 0; i--){\n    if(n % i === 0){\n      return i;\n    }\n  }\n}\n", "  for(let\
    \ i = n - 1; i > 0; i--){\n    if(n % i === 0){\n      return i;\n    }\n  }\n\
    }\n", "  var divisor = n - 1;\n  while (divisor > 0){\n    if (n % divisor ===\
    \ 0){\n      return divisor;\n    }\n    divisor--;\n  }\n}\n", "\tfor(var i =\
    \ n - 1; i > 0; i--){\n\t\tif(n % i === 0){\n\t\t\treturn i;\n\t\t}\n\t}\n}\n",
  "    //iterate through all numbers lower than n\n    for(var i = n - 1; i > 0; i--){\n\
    \        //divide n by each number and check if the remainder is 0\n        if(n\
    \ % i === 0){\n            //if the remainder is 0, return i\n            return\
    \ i;\n        }\n    }\n}\n", "\n}\n", "  for(var i = n-1; i > 0; i--){\n    if(n\
    \ % i === 0){\n      return i;\n    }\n  }\n}", "    if(n === 1){\n        return\
    \ 1;\n    }\n    if(n === 2){\n        return 1;\n    }\n    if(n === 3){\n  \
    \      return 1;\n    }\n    if(n === 4){\n        return 2;\n    }\n    let i\
    \ = Math.floor(n/2);\n    let answer = 0;\n    for(i; i>0; i--){\n        if(n%i\
    \ === 0){\n            answer = i;\n            break;\n        }\n    }\n   \
    \ return answer;\n}\n", "    var divisor = n - 1;\n    while (n % divisor !==\
    \ 0){\n        divisor -= 1;\n    }\n    return divisor;\n}\n", "    for(let i\
    \ = n - 1; i > 0; i--){\n        if(n % i === 0){\n            return i;\n   \
    \     }\n    }\n}\n", "  var divisor = n - 1;\n  while (divisor > 0){\n    if\
    \ (n % divisor === 0){\n      return divisor;\n    }\n    divisor -= 1;\n  }\n\
    }\n", "    var largest = 0;\n    for(var i = 1; i < n; i++){\n        if(n % i\
    \ === 0){\n            largest = i;\n        }\n    }\n    return largest;\n}",
  "  var divisor = 2;\n  while (n > divisor){\n    if (n % divisor == 0){\n      return\
    \ divisor;\n    }\n    else\n      divisor += 1;\n  }\n  return n;\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

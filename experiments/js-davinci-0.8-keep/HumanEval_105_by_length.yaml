name: HumanEval_105_by_length
language: js
prompt: "//Given an array of integers, sort the integers that are between 1 and 9\
  \ inclusive,\n// reverse the resulting array, and then replace each digit by its\
  \ corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"\
  Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// arr = [2, 1, 1, 4, 5,\
  \ 8, 2, 3]   \n// -> sort arr -> [1, 1, 2, 2, 3, 4, 5, 8] \n// -> reverse arr ->\
  \ [8, 5, 4, 3, 2, 2, 1, 1]\n// return [\"Eight\", \"Five\", \"Four\", \"Three\"\
  , \"Two\", \"Two\", \"One\", \"One\"]\n// If the array is empty, return an empty\
  \ array:\n// arr = []\n// return []\n// If the array has any strange number ignore\
  \ it:\n// arr = [1, -1 , 55] \n// -> sort arr -> [-1, 1, 55]\n// -> reverse arr\
  \ -> [55, 1, -1]\n// return = ['One']\nfunction by_length(arr){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = by_length;\n  assert.deepEqual(candidate([2, 1, 1, 4, 5, 8, 2, 3]),[\"Eight\"\
  , \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\"]);\n  assert.deepEqual(candidate([]),[]);\n\
  \  assert.deepEqual(candidate([1, -1, 55]),[\"One\"]);\n  assert.deepEqual(candidate([1,\
  \ -1, 3, 2]),[\"Three\", \"Two\", \"One\"]);\n  assert.deepEqual(candidate([9, 4,\
  \ 8]),[\"Nine\", \"Eight\", \"Four\"]);\n}\n\ntest();"
completions: []
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

name: HumanEval_51_remove_vowels
language: js
prompt: "//remove_vowels is a function that takes string and returns string without\
  \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n// 'bcdf'\n\
  // >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n// 'B'\n//\
  \ >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = remove_vowels;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
  abcdef\nghijklm\"),\"bcdf\nghjklm\");\n  assert.deepEqual(candidate(\"fedcba\"),\"\
  fdcb\");\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
  acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
  ybcd\"),\"ybcd\");\n}\n\ntest();"
completions: ["    var vowels = \"aeiouAEIOU\";\n    var result = \"\";\n    for(var\
    \ i = 0; i < text.length; i++){\n        if(vowels.indexOf(text[i]) == -1){\n\
    \            result += text[i];\n        }\n    }\n    return result;\n}\n", " \
    \ if (text.length == 0){\n    return '';\n  }\n  else if (text[0] == 'a' || text[0]\
    \ == 'e' || text[0] == 'i' || text[0] == 'o' || text[0] == 'u' || text[0] == 'A'\
    \ || text[0] == 'E' || text[0] == 'I' || text[0] == 'O' || text[0] == 'U'){\n\
    \    return remove_vowels(text.slice(1));\n  }\n  else{\n    return text[0] +\
    \ remove_vowels(text.slice(1));\n  }\n}\n", "  return text.replace(/[aeiouAEIOU]/g,\
    \ '');\n}", "\tvar reg = /[aeiou]/gi;\n\treturn text.replace(reg, '');\n}", " \
    \   var vowels = \"aeiouAEIOU\";\n    var text = text.split(\"\");\n    for(var\
    \ i = 0; i < text.length; i++){\n        for(var j = 0; j < vowels.length; j++){\n\
    \            if(text[i] == vowels[j]){\n                text[i] = \"\";\n    \
    \        }\n        }\n    }\n    text = text.join(\"\");\n    return text;\n\
    }\n", "    if(text === ''){\n        return '';\n    }else{\n        return text.replace(/[aeiou]/ig,\
    \ '');\n    }\n}\n", "    let vowels = new Set(['a', 'e', 'i', 'o', 'u', 'A',\
    \ 'E', 'I', 'O', 'U']);\n    let output = \"\";\n    for (let x of text){\n  \
    \      if (!vowels.has(x)){\n            output += x;\n        }\n    }\n    return\
    \ output;\n}\n", "    var vowels = \"aeiouAEIOU\";\n    var newText = \"\";\n\
    \    for (var i = 0; i < text.length; i++){\n        if (vowels.indexOf(text[i])\
    \ == -1){\n            newText += text[i];\n        }\n    }\n    return newText;\n\
    }\n", "\tvar vowels = ['a', 'e', 'i', 'o', 'u'];\n\tvar answer = '';\n\tfor (var\
    \ i = 0; i < text.length; i++) {\n\t\tif (vowels.indexOf(text[i]) == -1) {\n\t\
    \t\tanswer += text[i];\n\t\t}\n\t}\n\treturn answer;\n}\n", "\t//if the text is\
    \ empty\n\tif(text.length === 0){\n\t\treturn '';\n\t}\n\t//if the text is just\
    \ one letter\n\tif(text.length === 1){\n\t\t//if the text is not a vowel then\
    \ return it\n\t\tif(text !== 'a' && text !== 'e' && text !== 'i' && text !== 'o'\
    \ && text !== 'u'){\n\t\t\treturn text;\n\t\t}\n\t\t//if the text is a vowel return\
    \ ''\n\t\telse{\n\t\t\treturn '';\n\t\t}\n\t}\n\t//if the text has more than one\
    \ letter\n\telse{\n\t\t//if the first letter is not a vowel, then return it +\
    \ remove_vowels function on the next letter\n\t\tif(text[0] !== 'a' && text[0]\
    \ !== 'e' && text[0] !== 'i' && text[0] !== 'o' && text[0] !== 'u'){\n\t\t\treturn\
    \ text[0] + remove_vowels(text.slice(1));\n\t\t}\n\t\t//if the first letter is\
    \ a vowel, then return remove_vowels function on the next letter\n\t\telse{\n\t\
    \t\treturn remove_vowels(text.slice(1));\n\t\t}\n\t}\n}\n", "  text=text.replace(/[aeiou]/g,\"\
    \");\n  return text;\n}\n", "    var vowels = ['a', 'e', 'i', 'o', 'u'];\n   \
    \ var result = '';\n    for (var i = 0; i < text.length; i++){\n        if (vowels.indexOf(text[i])\
    \ == -1){\n            result += text[i];\n        }\n    }\n    return result;\n\
    }\n", "\treturn text.replace(/[aeiou]/gi, '');\n}\n", "    return text.replace(/[aeiou]/gi,\
    \ '');\n}\n", "    const vowels = ['a', 'e', 'i', 'o', 'u'];\n    let result =\
    \ '';\n    for (const char of text) {\n        if (!vowels.includes(char)) {\n\
    \            result += char;\n        }\n    }\n    return result;\n}\n", "  \
    \  var result = '';\n    for (var i = 0; i < text.length; i++){\n        if (text[i]\
    \ != 'a' && text[i] != 'e' && text[i] != 'i' && text[i] != 'o' && text[i] != 'u'\
    \ && text[i] != 'A' && text[i] != 'E' && text[i] != 'I' && text[i] != 'O' && text[i]\
    \ != 'U'){\n            result += text[i];\n        }\n    }\n    return result;\n\
    }", "\tvar vowels = \"aeiouAEIOU\";\n\tvar result = \"\";\n\tfor(var i = 0; i\
    \ < text.length; i++){\n\t\tif(vowels.indexOf(text[i]) == -1){\n\t\t\tresult +=\
    \ text[i];\n\t\t}\n\t}\n\treturn result;\n}", "    return text.replace(/[aeiouAEIOU]/g,\
    \ '');\n}\n", "\tvar vowels = ['a', 'e', 'i', 'o', 'u'];\n\tvar text_array = text.split('');\n\
    \tfor (var i = 0; i < text_array.length; i++) {\n\t\tif (vowels.indexOf(text_array[i])\
    \ != -1) {\n\t\t\ttext_array.splice(i, 1);\n\t\t\ti--;\n\t\t}\n\t}\n\treturn text_array.join('');\n\
    }\n", "\t//Checking the string for vowels and removing them\n\tvar vowels = /[aeiou]/g;\n\
    \tvar str = text.replace(vowels, '');\n\treturn str;\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

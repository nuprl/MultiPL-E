language: js
name: HumanEval_22_filter_integers
results:
- exit_code: 0
  program: "//Filter given list of any python values only for integers\n// >>> filter_integers(['a',\
    \ 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1,\
    \ 2, 3]\nfunction filter_integers(values){\n  var integers = values.filter(function(v){\n\
    \    return typeof v === 'number' && v === parseInt(v, 10);\n  });\n  return integers;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = filter_integers;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([4,\
    \ {}, [], 23.2, 9, \"adasd\"]),[4, 9]);\n  assert.deepEqual(candidate([3, \"c\"\
    , 3, 3, \"a\", \"b\"]),[3, 3, 3]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822770
- exit_code: 1
  program: "//Filter given list of any python values only for integers\n// >>> filter_integers(['a',\
    \ 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1,\
    \ 2, 3]\nfunction filter_integers(values){\n    return values.filter(isNumber)\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = filter_integers;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([4,\
    \ {}, [], 23.2, 9, \"adasd\"]),[4, 9]);\n  assert.deepEqual(candidate([3, \"c\"\
    , 3, 3, \"a\", \"b\"]),[3, 3, 3]);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpw7fe3lsj.js:7\n    return values.filter(isNumber)\n           \
    \              ^\n\nReferenceError: isNumber is not defined\n    at filter_integers\
    \ (/tmp/tmpw7fe3lsj.js:7:26)\n    at test (/tmp/tmpw7fe3lsj.js:15:20)\n    at\
    \ Object.<anonymous> (/tmp/tmpw7fe3lsj.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822770
- exit_code: 0
  program: "//Filter given list of any python values only for integers\n// >>> filter_integers(['a',\
    \ 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1,\
    \ 2, 3]\nfunction filter_integers(values){\n    var i, len = values.length, result\
    \ = [];\n    for(i = 0; i < len; i++){\n        if(typeof values[i] === 'number'\
    \ && values[i] % 1 === 0){\n            result.push(values[i]);\n        }\n \
    \   }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_integers;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([4, {}, [], 23.2, 9, \"adasd\"]),[4, 9]);\n  assert.deepEqual(candidate([3,\
    \ \"c\", 3, 3, \"a\", \"b\"]),[3, 3, 3]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822770
- exit_code: 0
  program: "//Filter given list of any python values only for integers\n// >>> filter_integers(['a',\
    \ 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1,\
    \ 2, 3]\nfunction filter_integers(values){\n    return values.filter(function(value){\n\
    \        return typeof value === 'number' && value % 1 === 0;\n    });\n}\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = filter_integers;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([4, {}, [],\
    \ 23.2, 9, \"adasd\"]),[4, 9]);\n  assert.deepEqual(candidate([3, \"c\", 3, 3,\
    \ \"a\", \"b\"]),[3, 3, 3]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822770
- exit_code: 0
  program: "//Filter given list of any python values only for integers\n// >>> filter_integers(['a',\
    \ 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1,\
    \ 2, 3]\nfunction filter_integers(values){\n    const filteredArr = [];\n    for(let\
    \ i = 0; i < values.length; i++){\n        if(typeof values[i] === 'number' &&\
    \ Number.isInteger(values[i])){\n            filteredArr.push(values[i]);\n  \
    \      }\n    }\n    return filteredArr;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = filter_integers;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([4, {}, [], 23.2, 9, \"adasd\"]),[4, 9]);\n  assert.deepEqual(candidate([3,\
    \ \"c\", 3, 3, \"a\", \"b\"]),[3, 3, 3]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822770
- exit_code: 0
  program: "//Filter given list of any python values only for integers\n// >>> filter_integers(['a',\
    \ 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1,\
    \ 2, 3]\nfunction filter_integers(values){\n\tconst filtered = values.filter(value\
    \ => Number.isInteger(value));\n\treturn filtered;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = filter_integers;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([4, {}, [], 23.2, 9, \"adasd\"]),[4, 9]);\n  assert.deepEqual(candidate([3,\
    \ \"c\", 3, 3, \"a\", \"b\"]),[3, 3, 3]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822770
- exit_code: 1
  program: "//Filter given list of any python values only for integers\n// >>> filter_integers(['a',\
    \ 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1,\
    \ 2, 3]\nfunction filter_integers(values){\n    var b = [];\n    for(i in values){\n\
    \        if(typeof values[i] == \"number\"){\n            b.push(values[i]);\n\
    \        }\n    }\n    return b;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = filter_integers;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([4, {}, [], 23.2, 9, \"adasd\"]),[4, 9]);\n  assert.deepEqual(candidate([3,\
    \ \"c\", 3, 3, \"a\", \"b\"]),[3, 3, 3]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  23.2,\n\
    \  9\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  9\n]\n    at test (/tmp/tmpku1bdvf7.js:22:10)\n\
    \    at Object.<anonymous> (/tmp/tmpku1bdvf7.js:26:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 23.2,\
    \ 9 ],\n  expected: [ 4, 9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822770
- exit_code: 0
  program: "//Filter given list of any python values only for integers\n// >>> filter_integers(['a',\
    \ 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1,\
    \ 2, 3]\nfunction filter_integers(values){\n    return values.filter(function(value){\n\
    \        return typeof value === 'number' && value % 1 === 0;\n    });\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = filter_integers;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([4,\
    \ {}, [], 23.2, 9, \"adasd\"]),[4, 9]);\n  assert.deepEqual(candidate([3, \"c\"\
    , 3, 3, \"a\", \"b\"]),[3, 3, 3]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822770
- exit_code: 0
  program: "//Filter given list of any python values only for integers\n// >>> filter_integers(['a',\
    \ 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1,\
    \ 2, 3]\nfunction filter_integers(values){\n    return values.filter(x => typeof\
    \ x === 'number' && x % 1 === 0);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = filter_integers;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([4, {}, [], 23.2, 9, \"adasd\"]),[4, 9]);\n  assert.deepEqual(candidate([3,\
    \ \"c\", 3, 3, \"a\", \"b\"]),[3, 3, 3]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822770
- exit_code: 1
  program: "//Filter given list of any python values only for integers\n// >>> filter_integers(['a',\
    \ 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1,\
    \ 2, 3]\nfunction filter_integers(values){\n\tvar integer = [];\n\tfor(var i =\
    \ 0; i < values.length; i++){\n\t\tif(typeof values[i] === 'number' && isNaN(values[i])\
    \ === false){\n\t\t\tinteger.push(values[i]);\n\t\t}\n\t}\n\treturn integer;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = filter_integers;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([4,\
    \ {}, [], 23.2, 9, \"adasd\"]),[4, 9]);\n  assert.deepEqual(candidate([3, \"c\"\
    , 3, 3, \"a\", \"b\"]),[3, 3, 3]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  23.2,\n\
    \  9\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  9\n]\n    at test (/tmp/tmpd9leenlb.js:22:10)\n\
    \    at Object.<anonymous> (/tmp/tmpd9leenlb.js:26:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 23.2,\
    \ 9 ],\n  expected: [ 4, 9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822770
- exit_code: 0
  program: "//Filter given list of any python values only for integers\n// >>> filter_integers(['a',\
    \ 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1,\
    \ 2, 3]\nfunction filter_integers(values){\n    return values.filter(function(item){\n\
    \        return typeof item === 'number' && item % 1 === 0;\n    });\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = filter_integers;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([4, {}, [],\
    \ 23.2, 9, \"adasd\"]),[4, 9]);\n  assert.deepEqual(candidate([3, \"c\", 3, 3,\
    \ \"a\", \"b\"]),[3, 3, 3]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822770
- exit_code: 0
  program: "//Filter given list of any python values only for integers\n// >>> filter_integers(['a',\
    \ 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1,\
    \ 2, 3]\nfunction filter_integers(values){\n    var integers = [];\n    for (var\
    \ i = 0; i < values.length; i++){\n        if (typeof values[i] === 'number' &&\
    \ values[i] % 1 === 0){\n            integers.push(values[i]);\n        }\n  \
    \  }\n    return integers;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = filter_integers;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([4, {}, [], 23.2, 9, \"adasd\"]),[4, 9]);\n  assert.deepEqual(candidate([3,\
    \ \"c\", 3, 3, \"a\", \"b\"]),[3, 3, 3]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822770
- exit_code: 0
  program: "//Filter given list of any python values only for integers\n// >>> filter_integers(['a',\
    \ 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1,\
    \ 2, 3]\nfunction filter_integers(values){\n    function filter_fn(value){\n \
    \       return (Number.isInteger(value));\n    }\n    return (values.filter(filter_fn));\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = filter_integers;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([4,\
    \ {}, [], 23.2, 9, \"adasd\"]),[4, 9]);\n  assert.deepEqual(candidate([3, \"c\"\
    , 3, 3, \"a\", \"b\"]),[3, 3, 3]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822770
- exit_code: 0
  program: "//Filter given list of any python values only for integers\n// >>> filter_integers(['a',\
    \ 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1,\
    \ 2, 3]\nfunction filter_integers(values){\n\tvar results = [];\n\tfor(var i =\
    \ 0; i < values.length; i++){\n\t\tif(typeof values[i] === 'number' && values[i]\
    \ % 1 === 0){\n\t\t\tresults.push(values[i]);\n\t\t}\n\t}\n\treturn results;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = filter_integers;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([4,\
    \ {}, [], 23.2, 9, \"adasd\"]),[4, 9]);\n  assert.deepEqual(candidate([3, \"c\"\
    , 3, 3, \"a\", \"b\"]),[3, 3, 3]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822770
- exit_code: 1
  program: "//Filter given list of any python values only for integers\n// >>> filter_integers(['a',\
    \ 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1,\
    \ 2, 3]\nfunction filter_integers(values){\n    const arr = values.filter(value\
    \ => typeof value === 'number' && !Number.isNaN(value));\n    return arr;\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = filter_integers;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([4,\
    \ {}, [], 23.2, 9, \"adasd\"]),[4, 9]);\n  assert.deepEqual(candidate([3, \"c\"\
    , 3, 3, \"a\", \"b\"]),[3, 3, 3]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  23.2,\n\
    \  9\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  9\n]\n    at test (/tmp/tmp9bl3ysg6.js:17:10)\n\
    \    at Object.<anonymous> (/tmp/tmp9bl3ysg6.js:21:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 23.2,\
    \ 9 ],\n  expected: [ 4, 9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822770
- exit_code: 0
  program: "//Filter given list of any python values only for integers\n// >>> filter_integers(['a',\
    \ 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1,\
    \ 2, 3]\nfunction filter_integers(values){\n    return values.filter(function(value){\n\
    \        return Number.isInteger(value);\n    });\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = filter_integers;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([4, {}, [], 23.2, 9, \"adasd\"]),[4, 9]);\n  assert.deepEqual(candidate([3,\
    \ \"c\", 3, 3, \"a\", \"b\"]),[3, 3, 3]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822770
- exit_code: 1
  program: "//Filter given list of any python values only for integers\n// >>> filter_integers(['a',\
    \ 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1,\
    \ 2, 3]\nfunction filter_integers(values){\n    // your code here\n    let temp\
    \ = [];\n    for(let x of values){\n        if(typeof x === 'number' && !isNaN(x)){\n\
    \            temp.push(x);\n        }\n    }\n    return temp;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = filter_integers;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([4, {}, [],\
    \ 23.2, 9, \"adasd\"]),[4, 9]);\n  assert.deepEqual(candidate([3, \"c\", 3, 3,\
    \ \"a\", \"b\"]),[3, 3, 3]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  23.2,\n\
    \  9\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  9\n]\n    at test (/tmp/tmp92fms1z9.js:23:10)\n\
    \    at Object.<anonymous> (/tmp/tmp92fms1z9.js:27:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 23.2,\
    \ 9 ],\n  expected: [ 4, 9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822770
- exit_code: 1
  program: "//Filter given list of any python values only for integers\n// >>> filter_integers(['a',\
    \ 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1,\
    \ 2, 3]\nfunction filter_integers(values){\n    function filter_fn(val){\n   \
    \     return isinstance(val, int);\n    }\n    return Array.prototype.filter.call(values,\
    \ filter_fn);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = filter_integers;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([4, {}, [], 23.2, 9, \"adasd\"]),[4, 9]);\n  assert.deepEqual(candidate([3,\
    \ \"c\", 3, 3, \"a\", \"b\"]),[3, 3, 3]);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpd_k0sp_4.js:8\n        return isinstance(val, int);\n        ^\n\
    \nReferenceError: isinstance is not defined\n    at filter_fn (/tmp/tmpd_k0sp_4.js:8:9)\n\
    \    at Array.filter (<anonymous>)\n    at filter_integers (/tmp/tmpd_k0sp_4.js:10:35)\n\
    \    at test (/tmp/tmpd_k0sp_4.js:19:20)\n    at Object.<anonymous> (/tmp/tmpd_k0sp_4.js:23:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822770
- exit_code: 1
  program: "//Filter given list of any python values only for integers\n// >>> filter_integers(['a',\
    \ 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1,\
    \ 2, 3]\nfunction filter_integers(values){\n\treturn _.filter(values, function(val){\n\
    \t\treturn typeof val === 'number' && (val%1 === 0);\n\t});\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = filter_integers;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([4, {}, [],\
    \ 23.2, 9, \"adasd\"]),[4, 9]);\n  assert.deepEqual(candidate([3, \"c\", 3, 3,\
    \ \"a\", \"b\"]),[3, 3, 3]);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmple7shshd.js:7\n\treturn _.filter(values, function(val){\n\t^\n\n\
    ReferenceError: _ is not defined\n    at filter_integers (/tmp/tmple7shshd.js:7:2)\n\
    \    at test (/tmp/tmple7shshd.js:17:20)\n    at Object.<anonymous> (/tmp/tmple7shshd.js:22:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822770
- exit_code: 0
  program: "//Filter given list of any python values only for integers\n// >>> filter_integers(['a',\
    \ 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1,\
    \ 2, 3]\nfunction filter_integers(values){\n    // YOUR CODE HERE\n    return\
    \ values.filter(n => typeof n == 'number' && Math.floor(n) == n);\n    throw `NotImplementedError:\
    \ ${inspect(values)}`;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = filter_integers;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([4, {}, [], 23.2, 9, \"adasd\"]),[4, 9]);\n  assert.deepEqual(candidate([3,\
    \ \"c\", 3, 3, \"a\", \"b\"]),[3, 3, 3]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822770

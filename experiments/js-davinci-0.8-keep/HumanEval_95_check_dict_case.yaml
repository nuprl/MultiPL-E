name: HumanEval_95_check_dict_case
language: js
prompt: "//Given a dictionary, return True if all keys are strings in lower \n// case\
  \ or all keys are strings in upper case, else return False.\n// The function should\
  \ return False is the given dictionary is empty.\n// Examples:\n// check_dict_case({\"\
  a\":\"apple\", \"b\":\"banana\"}) should return True.\n// check_dict_case({\"a\"\
  :\"apple\", \"A\":\"banana\", \"B\":\"banana\"}) should return False.\n// check_dict_case({\"\
  a\":\"apple\", \"8\":\"banana\", \"a\":\"apple\"}) should return False.\n// check_dict_case({\"\
  Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n//\
  \ check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) should return True.\n\
  function check_dict_case(dict){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = check_dict_case;\n  assert.deepEqual(candidate({\"p\": \"pineapple\", \"b\"\
  : \"banana\"}),true);\n  assert.deepEqual(candidate({\"p\": \"pineapple\", \"A\"\
  : \"banana\", \"B\": \"banana\"}),false);\n  assert.deepEqual(candidate({\"p\":\
  \ \"pineapple\", \"5\": \"banana\", \"a\": \"apple\"}),false);\n  assert.deepEqual(candidate({\"\
  Name\": \"John\", \"Age\": \"36\", \"City\": \"Houston\"}),false);\n  assert.deepEqual(candidate({\"\
  STATE\": \"NC\", \"ZIP\": \"12345\"}),true);\n  assert.deepEqual(candidate({\"fruit\"\
  : \"Orange\", \"taste\": \"Sweet\"}),true);\n  assert.deepEqual(candidate({}),false);\n\
  }\n\ntest();"
completions: ["\tif (Object.keys(dict).length == 0) return false;\n\tlet check = Object.keys(dict)[0];\n\
    \tfor (let key in dict){\n\t\tif(check != key && check.toLowerCase() != key.toLowerCase())\
    \ return false;\n\t}\n\treturn true;\n}", "    var firstKey = Object.keys(dict)[0];\n\
    \    if(firstKey == firstKey.toLowerCase()){\n        for(var key in dict){\n\
    \            if(key.toLowerCase() != key){\n                return false;\n  \
    \          }\n        }\n    }else{\n        for(var key in dict){\n         \
    \   if(key.toUpperCase() != key){\n                return false;\n           \
    \ }\n        }\n    }\n    return true;\n}\n", "    let keys = Object.keys(dict);\n\
    \    if(!keys.length) return false;\n    let isUpperCase = !!keys[0].match(/[A-Z]/);\n\
    \    for(let i = 1; i < keys.length; i++){\n        if(isUpperCase !== !!keys[i].match(/[A-Z]/)){\n\
    \            return false;\n        }\n    }\n    return true;\n}\n", "    return\
    \ dict.every( (element, index, array) => {\n        return (typeof(element) ===\
    \ 'string' && element.toLowerCase() === element) ||\n        (typeof(element)\
    \ === 'string' && element.toUpperCase() === element);\n    });\n}\n", "    var\
    \ keys = Object.keys(dict);\n    var upper = \"A\";\n    var lower = \"a\";\n\
    \    var flag = false;\n    if(keys.length === 0){\n        flag = false;\n  \
    \  }\n    else{\n        for(var i=0; i<keys.length; i++){\n            if(keys[i].charAt(0)\
    \ === upper || keys[i].charAt(0) === lower){\n                flag = true;\n \
    \           }\n            else{\n                flag = false;\n            \
    \    break;\n            }\n        }\n    }\n    return flag;\n}", "    //YOUR\
    \ CODE GOES HERE\n    if (Object.keys(dict).length == 0) {\n        return false;\n\
    \    }\n    var keys = Object.keys(dict);\n    var lower = /^[a-z]+$/;\n    var\
    \ upper = /^[A-Z]+$/;\n    if (lower.test(keys[0])) {\n        for (var i = 0;\
    \ i < keys.length; i++) {\n            if (!lower.test(keys[i])) {\n         \
    \       return false;\n            }\n        }\n    } else if (upper.test(keys[0]))\
    \ {\n        for (var i = 0; i < keys.length; i++) {\n            if (!upper.test(keys[i]))\
    \ {\n                return false;\n            }\n        }\n    } else {\n \
    \       return false;\n    }\n    return true;\n}", "    let flag = true;\n  \
    \  let countUpper = 0;\n    let countLower = 0;\n    if(!Object.keys(dict).length)\
    \ {\n        return false;\n    }\n    for(let key in dict) {\n        if(key.charCodeAt(0)\
    \ > 64 && key.charCodeAt(0) < 91) {\n            countUpper++;\n        }\n  \
    \      if(key.charCodeAt(0) > 96 && key.charCodeAt(0) < 123) {\n            countLower++;\n\
    \        }\n    }\n    if(countUpper == Object.keys(dict).length || countLower\
    \ == Object.keys(dict).length) {\n        flag = true;\n    } else {\n       \
    \ flag = false;\n    }\n    return flag;\n}", "    let lower = 0;\n    let upper\
    \ = 0;\n    let length = Object.keys(dict).length;\n    if(length == 0){\n   \
    \     return false;\n    }\n    for(let key in dict){\n        if(key.toLowerCase()\
    \ == key){\n            lower++;\n        }\n        else if(key.toUpperCase()\
    \ == key){\n            upper++;\n        }\n    }\n    if(lower == length ||\
    \ upper == length){\n        return true;\n    }\n    else{\n        return false;\n\
    \    }\n}", "  let caseCheck = true;\n  let lowerCheck = true;\n  let upperCheck\
    \ = true;\n  //if the dictionary is empty\n  if(dict.length==0){\n    return false;\n\
    \  }\n  for(var key in dict){\n    if(key != key.toLowerCase()){\n      lowerCheck\
    \ = false;\n    }\n    if(key != key.toUpperCase()){\n      upperCheck = false;\n\
    \    }\n  }\n  if(lowerCheck == false && upperCheck == false){\n    caseCheck\
    \ = false;\n  }\n  return caseCheck;\n}", "    if (Object.keys(dict).length ==\
    \ 0) {\n        return false;\n    }\n    var firstkey = Object.keys(dict)[0];\n\
    \    var firstvalue = dict[firstkey];\n    var isUp = firstkey.toUpperCase() ==\
    \ firstkey;\n    for (var key in dict) {\n        if (isUp) {\n            if\
    \ (key.toUpperCase() != key) {\n                return false;\n            }\n\
    \        } else {\n            if (key.toLowerCase() != key) {\n             \
    \   return false;\n            }\n        }\n    }\n    return true;\n}\n", " \
    \   return dict;\n}\n", "    if(Object.keys(dict).length === 0){\n        return\
    \ false;\n    }\n\n    let lowerCase = 0;\n    let upperCase = 0;\n\n    for(key\
    \ in dict){\n        if(key === key.toLowerCase()){\n            lowerCase +=\
    \ 1;\n        }else if(key === key.toUpperCase()){\n            upperCase += 1;\n\
    \        }\n    }\n\n    if(lowerCase === Object.keys(dict).length || upperCase\
    \ === Object.keys(dict).length){\n        return true;\n    }\n\n    return false;\n\
    }\n", "    //write your code here\n    return true\n}\n", "    return dict.size\
    \ === 0 ? false :\n        dict.keys().next().value === dict.keys().next().value.toLowerCase()\n\
    \        ? dict.keys().next().value === dict.keys().next().value.toUpperCase()\n\
    \            ? false\n            : dict.keys().length === dict.keys().filter(key\
    \ => key.toLowerCase() === key).length\n        : dict.keys().length === dict.keys().filter(key\
    \ => key.toUpperCase() === key).length\n    ;\n}", "\tif(Object.keys(dict).length\
    \ == 0){\n\t\treturn false;\n\t}\n\tvar result = Object.keys(dict).every(key =>\
    \ key == key.toLowerCase());\n\tif(result){\n\t\treturn true;\n\t}\n\tresult =\
    \ Object.keys(dict).every(key => key == key.toUpperCase());\n\tif(result){\n\t\
    \treturn true;\n\t}\n\treturn false;\n}\n", "    if(!Object.keys(dict).length)\n\
    \        return false;\n    var allLower = false;\n    var allUpper = false;\n\
    \    Object.keys(dict).forEach(function(k){\n        if(k.toLowerCase() == k)\n\
    \            allLower = true;\n        if(k.toUpperCase() == k)\n            allUpper\
    \ = true;\n    });\n    return allLower || allUpper;\n}\n", "    var keys = Object.keys(dict);\n\
    \    var lowercase = true;\n    var uppercase = true;\n    for(var i = 0; i <\
    \ keys.length; i++){\n        if(keys[i] != keys[i].toLowerCase()){\n        \
    \    lowercase = false;\n        }\n        if(keys[i] != keys[i].toUpperCase()){\n\
    \            uppercase = false;\n        }\n    }\n    return lowercase || uppercase;\n\
    }", "    let keys = Object.keys(dict);\n    let lowercase = keys.filter(key =>\
    \ key.charCodeAt(0) > 96 && key.charCodeAt(0) < 123);\n    let uppercase = keys.filter(key\
    \ => key.charCodeAt(0) > 64 && key.charCodeAt(0) < 91);\n    if (lowercase.length\
    \ == keys.length || uppercase.length == keys.length){\n        return true;\n\
    \    }\n    return false;\n}\n", "   return Object.keys(dict).every(key => key\
    \ === key.toLowerCase()) || Object.keys(dict).every(key => key === key.toUpperCase());\n\
    }\n", "    // your code here\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

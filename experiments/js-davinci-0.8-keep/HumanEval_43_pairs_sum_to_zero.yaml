name: HumanEval_43_pairs_sum_to_zero
language: js
prompt: "//pairs_sum_to_zero takes a list of integers as an input.\n// it returns\
  \ True if there are two distinct elements in the list that\n// sum to zero, and\
  \ False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1,\
  \ 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>>\
  \ pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n\
  // False\nfunction pairs_sum_to_zero(l){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = pairs_sum_to_zero;\n  assert.deepEqual(candidate([1, 3, 5, 0]),false);\n  assert.deepEqual(candidate([1,\
  \ 3, -2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3, 7]),false);\n  assert.deepEqual(candidate([2,\
  \ 4, -5, 3, 5, 7]),true);\n  assert.deepEqual(candidate([1]),false);\n  assert.deepEqual(candidate([-3,\
  \ 9, -1, 3, 2, 30]),true);\n  assert.deepEqual(candidate([-3, 9, -1, 3, 2, 31]),true);\n\
  \  assert.deepEqual(candidate([-3, 9, -1, 4, 2, 30]),false);\n  assert.deepEqual(candidate([-3,\
  \ 9, -1, 4, 2, 31]),false);\n}\n\ntest();"
completions: ["\tvar result = []\n\tfor (var i = 0; i < l.length; i++) {\n\t\tfor\
    \ (var j = i + 1; j < l.length; j++) {\n\t\t\tif (l[i] + l[j] == 0) {\n\t\t\t\t\
    result.push([l[i], l[j]])\n\t\t\t}\n\t\t}\n\t}\n\treturn len(result) > 0\n}\n",
  "    // first, sort the list\n    l.sort();\n    // now, keep going through the\
    \ list until the end\n    for (var i = 0; i < l.length; i++) {\n        // get\
    \ the element at the i-th position\n        var elem = l[i];\n        // and use\
    \ your binary search function to search for\n        // the negative of that element\n\
    \        var neg_elem = binary_search(l, elem * -1);\n        // if you find something,\
    \ return True\n        if (neg_elem) {\n            return true;\n        }\n\
    \    }\n    // if you didn't find anything, return False\n    return false;\n\
    }\n", "    for(var i = 0; i < l.length - 1; i++){\n        for(var j = i + 1;\
    \ j < l.length; j++){\n            if(l[i] + l[j] == 0){\n                return\
    \ true;\n            }\n        }\n    }\n    return false;\n}\n", "  for (var\
    \ i = 0; i < l.length - 1; i++){\n    var num1 = l[i];\n    for (var j = i + 1;\
    \ j < l.length; j++){\n      var num2 = l[j];\n      if (num1 + num2 === 0){\n\
    \        return true;\n      }\n    }\n  }\n  return false;\n}\n", "  if (l.length\
    \ === 0){\n    return false;\n  }\n  for (var i = 0; i < l.length; i++){\n   \
    \ for (var j = i + 1; j < l.length; j++){\n      if (l[i] + l[j] === 0){\n   \
    \     return true;\n      }\n    }\n  }\n  return false;\n}", "\tfor(var i = 0;\
    \ i < l.length; i++){\n\t\tfor(var j = i + 1; j < l.length; j++){\n\t\t\tif(l[i]\
    \ + l[j] == 0){\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t}\n\treturn false;\n\
    }\n", "  var distinct = [];\n  for (var i = 0; i < l.length; i++){\n    var a\
    \ = l[i];\n    for (var j = 0; j < l.length; j++){\n      var b = l[j];\n    \
    \  if (i != j){\n        if (a+b == 0){\n          distinct.push([a,b]);\n   \
    \     }\n      }\n    }\n  }\n  if (distinct.length > 0){\n    return true;\n\
    \  } else {\n    return false;\n  }\n}\n\n", "  for (var i = 0; i < l.length;\
    \ i++){\n    for (var j = 0; j < l.length; j++){\n      if (l[i] + l[j] == 0 &&\
    \ i != j){\n        return true;\n      }\n    }\n  }\n  return false;\n}\n",
  "    let store = {};\n    let result = false;\n    for(let num of l){\n        if(store[num]){\n\
    \            result = true;\n            break;\n        }\n        else{\n  \
    \          store[-num] = true;\n        }\n    }\n    return result;\n}", "  \
    \  let flag = false;\n    for(i = 0; i < l.length; i++){\n        for(j = i+1;\
    \ j < l.length; j++){\n            if(l[i] + l[j] == 0){\n                flag\
    \ = true;\n            }\n        }\n    }\n    return flag;\n}\n", "    if (l.length\
    \ < 2) {\n        return false;\n    }\n    else {\n        var a = l.length;\n\
    \        for (var i = 0; i < a; i++){\n            for (var j = i + 1; j < a;\
    \ j++){\n                if (l[i] + l[j] == 0){\n                    return true;\n\
    \                }\n            }\n        }\n        return false;\n    }\n}\n",
  "\tl.sort(function(a, b){return a-b});\n\tvar first=0;\n\tvar last=l.length-1;\n\
    \twhile(first<last){\n\t\tvar sum=l[first]+l[last];\n\t\tif(sum==0){\n\t\t\treturn\
    \ true;\n\t\t}\n\t\telse if(sum>0){\n\t\t\tlast-=1;\n\t\t}\n\t\telse{\n\t\t\t\
    first+=1;\n\t\t}\n\t}\n\treturn false;\n}\n", "    for(var i = 0; i < l.length;\
    \ i++){\n        for(var j = i+1; j < l.length; j++){\n            if(l[i] + l[j]\
    \ == 0){\n                return true;\n            }\n        }\n    }\n    return\
    \ false;\n}", "\tfor(var i = 0; i < l.length; i++) {\n\t\tfor(var j = i+1; j <\
    \ l.length; j++) {\n\t\t\tif(l[i] + l[j] == 0) {\n\t\t\t\treturn true;\n\t\t\t\
    }\n\t\t}\n\t}\n\treturn false;\n}\n\n", "    if (l.length == 0){\n        return\
    \ False;\n    }\n    var i = 0;\n    var j = 1;\n    while (i < l.length - 1){\n\
    \        while (j < l.length){\n            if (l[i] + l[j] == 0){\n         \
    \       return True;\n            }\n            j += 1;\n        }\n        i\
    \ += 1;\n        j = i + 1;\n    }\n    return False;\n}\n", "    for(let i =\
    \ 0; i < l.length; i++){\n        for(let j = i + 1; j < l.length; j++){\n   \
    \         if (l[i] + l[j] == 0){\n                return true;\n            }\n\
    \        }\n    }\n    return false;\n}\n", "\tfor(var i = 0; i < l.length; i++){\n\
    \t\tfor(var j = 0; j < l.length; j++){\n\t\t\tif(l[i] == 0 && l[j] == 0 && i !=\
    \ j){\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\telse if(l[i] + l[j] == 0 && i != j){\n\
    \t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t}\n\treturn false;\n}\n", "    var l =\
    \ l.slice(0, l.length);\n    var c = [];\n    l.forEach(function(x){\n       \
    \ c.push(l.reduce(function(t, y){\n            return t || x + y == 0;\n     \
    \   }, false));\n    });\n    return c.reduce(function(t, b){\n        return\
    \ t || b;\n    }, false);\n}\n", "\tfor(var i = 0; i < l.length; i++) {\n\t\t\
    for(var j = 0; j < l.length; j++) {\n\t\t\tif(i != j && l[i] + l[j] == 0) {\n\t\
    \t\t\treturn true;\n\t\t\t}\n\t\t}\n\t}\n\treturn false;\n}\n", "    if (l.length\
    \ < 2) {\n        return false;\n    }\n    for (var i = 0; i < l.length; i++)\
    \ {\n        for (var j = i + 1; j < l.length; j++) {\n            if (l[i] +\
    \ l[j] == 0) {\n                return true;\n            }\n        }\n    }\n\
    \    return false;\n}"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

language: js
name: HumanEval_16_count_distinct_characters
results:
- exit_code: 1
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters('xyzXYZ')\n// 3\n\
    // >>> count_distinct_characters('Jerry')\n// 4\nfunction count_distinct_characters(string){\n\
    \  var strArray = string.split('');\n  var uniqueArray = strArray.filter(function(item,\
    \ pos) {\n    return strArray.indexOf(item) == pos;\n  })\n  return uniqueArray.length;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n9\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmpqlh16xli.js:21:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpqlh16xli.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822381
- exit_code: 1
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters('xyzXYZ')\n// 3\n\
    // >>> count_distinct_characters('Jerry')\n// 4\nfunction count_distinct_characters(string){\n\
    \    var output = 0;\n    var str = string.toLowerCase();\n    for(var i = 0;\
    \ i < str.length; i++){\n        if(str.lastIndexOf(str[i]) == str.indexOf(str[i])){\n\
    \            output++;\n        }\n    }\n    return output;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"\
    ),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmpi18cfy15.js:24:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpi18cfy15.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822381
- exit_code: 1
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters('xyzXYZ')\n// 3\n\
    // >>> count_distinct_characters('Jerry')\n// 4\nfunction count_distinct_characters(string){\n\
    \    var array=string.split(\"\");\n    return new Set(array).size;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"\
    ),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n9\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmpuv2_54rr.js:18:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpuv2_54rr.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822381
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters('xyzXYZ')\n// 3\n\
    // >>> count_distinct_characters('Jerry')\n// 4\nfunction count_distinct_characters(string){\n\
    \  var char_dict = {}\n  for (var i = 0; i < string.length; i++){\n    char_dict[string[i].toLowerCase()]\
    \ = 0\n  }\n  return Object.keys(char_dict).length\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822382
- exit_code: 1
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters('xyzXYZ')\n// 3\n\
    // >>> count_distinct_characters('Jerry')\n// 4\nfunction count_distinct_characters(string){\n\
    \    //solution 1:\n    // var lower = string.toLowerCase().split('');\n    //\
    \ return lower.filter(function(elem, index, self){\n    //     return index ==\
    \ self.indexOf(elem);\n    // }).length;\n\n    //solution 2:\n    return string.length\
    \ == [...new Set(string.toLowerCase())].length;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp8js2lo2r.js:22:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp8js2lo2r.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822381
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters('xyzXYZ')\n// 3\n\
    // >>> count_distinct_characters('Jerry')\n// 4\nfunction count_distinct_characters(string){\n\
    \tvar count = 0;\n\tvar characters = [];\n\tfor (var i = 0; i < string.length;\
    \ i++) {\n\t\tif (characters.indexOf(string[i].toLowerCase()) == -1) {\n\t\t\t\
    characters.push(string[i].toLowerCase());\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn\
    \ count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822381
- exit_code: 1
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters('xyzXYZ')\n// 3\n\
    // >>> count_distinct_characters('Jerry')\n// 4\nfunction count_distinct_characters(string){\n\
    \treturn (string.split('').sort().join('').match(/(.)\\1*/g).length);\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"\
    ),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: Exception
  stderr: "/tmp/tmpb7vpm91w.js:7\n\treturn (string.split('').sort().join('').match(/(.)\\\
    1*/g).length);\n\t                                                         ^\n\
    \nTypeError: Cannot read properties of null (reading 'length')\n    at count_distinct_characters\
    \ (/tmp/tmpb7vpm91w.js:7:59)\n    at test (/tmp/tmpb7vpm91w.js:15:20)\n    at\
    \ Object.<anonymous> (/tmp/tmpb7vpm91w.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822381
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters('xyzXYZ')\n// 3\n\
    // >>> count_distinct_characters('Jerry')\n// 4\nfunction count_distinct_characters(string){\n\
    \    return new Set(string.toLowerCase()).size;\n}\n\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822381
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters('xyzXYZ')\n// 3\n\
    // >>> count_distinct_characters('Jerry')\n// 4\nfunction count_distinct_characters(string){\n\
    \    const uniq = [...new Set(string.toLowerCase())]\n    return uniq.length\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822382
- exit_code: 1
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters('xyzXYZ')\n// 3\n\
    // >>> count_distinct_characters('Jerry')\n// 4\nfunction count_distinct_characters(string){\n\
    \  // Declare a new Set called count_distinct_characters\n  let count_distinct_characters\
    \ = new Set();\n  // Loop over the characters in the string\n  for (let char of\
    \ string){\n    // Add each character to the count_distinct_characters set\n \
    \   count_distinct_characters.add(char);\n  }\n  // Return the size of the set\n\
    \  return count_distinct_characters.size;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n9\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmpjtw3fbpg.js:24:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpjtw3fbpg.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822381
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters('xyzXYZ')\n// 3\n\
    // >>> count_distinct_characters('Jerry')\n// 4\nfunction count_distinct_characters(string){\n\
    \  var count = 0;\n  var letter_list = [];\n  for (var i = 0; i < string.length;\
    \ i++){\n    if (letter_list.indexOf(string[i].toLowerCase()) < 0){\n      letter_list.push(string[i].toLowerCase());\n\
    \      count ++;\n    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822381
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters('xyzXYZ')\n// 3\n\
    // >>> count_distinct_characters('Jerry')\n// 4\nfunction count_distinct_characters(string){\n\
    \    let chars = string.toLowerCase().split('');\n    return new Set(chars).size;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822381
- exit_code: 1
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters('xyzXYZ')\n// 3\n\
    // >>> count_distinct_characters('Jerry')\n// 4\nfunction count_distinct_characters(string){\n\
    \    let array = string.split('');\n    let distinctCharacters = new Set(array);\n\
    \    return distinctCharacters.size;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n9\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmp58b5y2u5.js:19:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp58b5y2u5.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822382
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters('xyzXYZ')\n// 3\n\
    // >>> count_distinct_characters('Jerry')\n// 4\nfunction count_distinct_characters(string){\n\
    \    //Convert string to lower case, then split it into array of characters\n\
    \    var string_array = string.toLowerCase().split('');\n    //get unique characters\n\
    \    var unique_array = string_array.filter(function(item, pos) {\n        return\
    \ string_array.indexOf(item) == pos;\n    });\n    return unique_array.length;\n\
    }\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822382
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters('xyzXYZ')\n// 3\n\
    // >>> count_distinct_characters('Jerry')\n// 4\nfunction count_distinct_characters(string){\n\
    \    //your code goes here, return an integer\n    var allLetters = [];\n    var\
    \ distinctLetters = [];\n    for (var i = 0; i < string.length; i++) {\n     \
    \ allLetters.push(string[i].toLowerCase());\n    }\n    for (var i = 0; i < allLetters.length;\
    \ i++) {\n      if (distinctLetters.indexOf(allLetters[i]) === -1) {\n       \
    \ distinctLetters.push(allLetters[i]);\n      }\n    }\n    return distinctLetters.length;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822381
- exit_code: 1
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters('xyzXYZ')\n// 3\n\
    // >>> count_distinct_characters('Jerry')\n// 4\nfunction count_distinct_characters(string){\n\
    \tvar splitString = string.split(\"\");\n\tvar newArray = [];\n\tvar count = 0;\n\
    \tfor(var i = 0; i < splitString.length; i++){\n\t\tif(newArray.indexOf(splitString[i])\
    \ === -1){\n\t\t\tnewArray.push(splitString[i]);\n\t\t\tcount++;\n\t\t}\n\t}\n\
    \treturn count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n9\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmpvk6znpud.js:26:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpvk6znpud.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822382
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters('xyzXYZ')\n// 3\n\
    // >>> count_distinct_characters('Jerry')\n// 4\nfunction count_distinct_characters(string){\n\
    \    var str = string.toLowerCase();\n    var out = new Set();\n    for (var i\
    \ = 0; i < str.length; i++){\n        out.add(str[i]);\n    }\n    return out.size;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822382
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters('xyzXYZ')\n// 3\n\
    // >>> count_distinct_characters('Jerry')\n// 4\nfunction count_distinct_characters(string){\n\
    \tvar distinct = [];\n\tfor (var i = 0; i < string.length; i++) {\n\t\tvar letter\
    \ = string[i].toLowerCase();\n\t\tif(distinct.indexOf(letter) === -1){\n\t\t\t\
    distinct.push(letter);\n\t\t}\n\t}\n\treturn distinct.length;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"\
    ),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822382
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters('xyzXYZ')\n// 3\n\
    // >>> count_distinct_characters('Jerry')\n// 4\nfunction count_distinct_characters(string){\n\
    \    var allCharacters = string.split('');\n    var distinctCharacters = [];\n\
    \    for (var i = 0; i < allCharacters.length; i++){\n        if (distinctCharacters.indexOf(allCharacters[i].toLowerCase())\
    \ == -1){\n            distinctCharacters.push(allCharacters[i].toLowerCase());\n\
    \        }\n    }\n    return distinctCharacters.length;\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"\
    ),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822382
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters('xyzXYZ')\n// 3\n\
    // >>> count_distinct_characters('Jerry')\n// 4\nfunction count_distinct_characters(string){\n\
    \    let count=0;\n    let str=string.toLowerCase();\n    for(let i=0;i<str.length;i++){\n\
    \        if(str.indexOf(str[i])===i){\n            count++;\n        }\n    }\n\
    \    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822381

name: HumanEval_77_iscube
language: js
prompt: "//Write a function that takes an integer a and returns True \n// if this\
  \ ingeger is a cube of some integer number.\n// Note: you may assume the input is\
  \ always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n//\
  \ iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
  \ ==> False\nfunction iscube(a){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
  \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
  \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
  \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
  }\n\ntest();"
completions: ["    // a = Math.abs(a);\n    // if(a === 0) return true;\n    // var\
    \ cube = 1;\n    // while(cube < a){\n    //     cube = cube + 1;\n    //    \
    \ if(Math.pow(cube, 3) === a) return true;\n    // }\n    // return false;\n \
    \   return a >= 0 && Math.cbrt(a)%1 === 0;\n}\n", "\treturn Number.isInteger(Math.cbrt(a));\n\
    }", "    return Math.pow(a, 1/3) % 1 === 0;\n}\n", "    return Number.isInteger(Math.cbrt(a));\n\
    }\n", "    return (Math.cbrt(a) % 1 === 0)\n}\n", "  return Math.sqrt(a) % 1 ===\
    \ 0;\n}\n", "\treturn !isNaN(Math.pow(a, 1/3));\n}", "    return Number.isInteger(Math.cbrt(a));\n\
    }\n", "    if(Math.cbrt(a) % 1 == 0){\n        return true;\n    }else{\n    \
    \    return false;\n    }\n}", "    var m=Math.cbrt(a);\n    if(m%1==0){\n   \
    \     return true;\n    }\n    else{\n        return false;\n    }\n}", "  var\
    \ g=a*a*a;\n  var t=a;\n  for(var i=0;i<t;i++){\n    g=g-a;\n    if(g==0){\n \
    \     return true;\n    }\n  }\n  return false;\n}", "    if(a === 0) return true;\n\
    \    return Math.pow(Math.round(Math.pow(a, 1/3)), 3) === a;\n}", "    return\
    \ Number.isInteger(Math.cbrt(a));\n}", "    if(a==0){\n        return true;\n\
    \    }\n    if(a>0){\n        return Math.cbrt(a)%1==0;\n    }\n    if(a<0){\n\
    \        return Math.cbrt(-a)%1==0;\n    }\n}", "    var y = a/2;\n    var x =\
    \ Math.floor(Math.sqrt(y));\n    var c = Math.pow(x,3);\n    if(c==a){\n     \
    \   return true;\n    }\n    else{\n        return false;\n    }\n}", "    return\
    \ Number.isInteger(Math.cbrt(a));\n}", "    return Number.isInteger(Math.cbrt(a));\n\
    }\n", "\tif(a===0){\n\t\treturn true;\n\t}\n\tvar cube=Math.abs(a);\n\tvar num=Math.round(Math.cbrt(cube));\n\
    \tvar x=Math.pow(num,3);\n\tif(x===cube){\n\t\treturn true;\n\t}else{\n\t\treturn\
    \ false;\n\t}\n\t\n}\n", "\t//change the input to be positive to avoid lose of\
    \ calculation result\n\t//due to the floating number.\n\tif(a < 0){\n\t\ta = Math.abs(a);\n\
    \t}\n\t//simple logic to check if a is a cube of some integer number\n\treturn\
    \ Math.pow(Math.round(Math.pow(a, 1/3)), 3) === a;\n}\n", "  if(a<0){\n    return\
    \ true;\n  }else{\n    var c = Math.pow(a,1/3);\n    if(Number.isInteger(c)){\n\
    \      return true;\n    }else{\n      return false;\n    }\n  }\n}"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

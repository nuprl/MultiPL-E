language: js
name: HumanEval_15_string_sequence
results:
- exit_code: 1
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence(n){\n\tvar string = \"\";\n\tfor(var\
    \ i = 0; i <= n; i++){\n\t\tstring += i + \" \";\n\t}\n\treturn string;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = string_sequence;\n  assert.deepEqual(candidate(0),\"0\");\n  assert.deepEqual(candidate(3),\"\
    0 1 2 3\");\n  assert.deepEqual(candidate(10),\"0 1 2 3 4 5 6 7 8 9 10\");\n}\n\
    \ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'0 '\n\nshould\
    \ loosely deep-equal\n\n'0'\n    at test (/tmp/tmp_aghqwsy.js:19:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp_aghqwsy.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '0 ',\n  expected:\
    \ '0',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821020
- exit_code: 1
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence(n){\n\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\n\
    should loosely deep-equal\n\n'0'\n    at test (/tmp/tmpicztzmul.js:15:10)\n  \
    \  at Object.<anonymous> (/tmp/tmpicztzmul.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n\
    \  expected: '0',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821020
- exit_code: 1
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence(n){\n    // Your code here\n}\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_sequence;\n\
    \  assert.deepEqual(candidate(0),\"0\");\n  assert.deepEqual(candidate(3),\"0\
    \ 1 2 3\");\n  assert.deepEqual(candidate(10),\"0 1 2 3 4 5 6 7 8 9 10\");\n}\n\
    \ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\n\
    should loosely deep-equal\n\n'0'\n    at test (/tmp/tmpq8i6l5xr.js:14:10)\n  \
    \  at Object.<anonymous> (/tmp/tmpq8i6l5xr.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n\
    \  expected: '0',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821020
- exit_code: 0
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence(n){\n    var output = '';\n    for(var\
    \ i = 0; i <= n; i++){\n        output += i;\n        if(i != n){\n          \
    \  output += ' ';\n        }\n    }\n    return output;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821020
- exit_code: 1
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence(n){\n    var output = \"\";\n    for(var\
    \ i = 0; i <= n; i++){\n        output += i + \" \";\n    }\n    return output;\n\
    }\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = string_sequence;\n  assert.deepEqual(candidate(0),\"0\");\n  assert.deepEqual(candidate(3),\"\
    0 1 2 3\");\n  assert.deepEqual(candidate(10),\"0 1 2 3 4 5 6 7 8 9 10\");\n}\n\
    \ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'0 '\n\nshould\
    \ loosely deep-equal\n\n'0'\n    at test (/tmp/tmp9wioyn8o.js:18:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp9wioyn8o.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '0 ',\n  expected:\
    \ '0',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821020
- exit_code: 0
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence(n){\n\tvar a = []\n\tfor (var i = 0;\
    \ i <= n; i++){\n\t\ta.push(i)\n\t}\n\treturn a.join(' ')\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = string_sequence;\n\
    \  assert.deepEqual(candidate(0),\"0\");\n  assert.deepEqual(candidate(3),\"0\
    \ 1 2 3\");\n  assert.deepEqual(candidate(10),\"0 1 2 3 4 5 6 7 8 9 10\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821020
- exit_code: 0
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence(n){\n    let res = '';\n    for(let\
    \ i = 0; i <= n; i++){\n        res += `${i} `;\n    }\n    return res.trim();\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = string_sequence;\n  assert.deepEqual(candidate(0),\"0\");\n  assert.deepEqual(candidate(3),\"\
    0 1 2 3\");\n  assert.deepEqual(candidate(10),\"0 1 2 3 4 5 6 7 8 9 10\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821020
- exit_code: 0
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence(n){\n    if (n === 0) {\n        return\
    \ '0';\n    } else {\n        return string_sequence(n - 1) + ' ' + n;\n    }\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = string_sequence;\n  assert.deepEqual(candidate(0),\"0\");\n  assert.deepEqual(candidate(3),\"\
    0 1 2 3\");\n  assert.deepEqual(candidate(10),\"0 1 2 3 4 5 6 7 8 9 10\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821020
- exit_code: 0
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence(n){\n    var temp = '';\n    for(var\
    \ i = 0; i < n; i++){\n        temp += i + ' ';\n    }\n    return temp + n;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = string_sequence;\n  assert.deepEqual(candidate(0),\"0\");\n  assert.deepEqual(candidate(3),\"\
    0 1 2 3\");\n  assert.deepEqual(candidate(10),\"0 1 2 3 4 5 6 7 8 9 10\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821020
- exit_code: 0
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence(n){\n    var seq_str = '';\n    for(var\
    \ i = 0; i <= n; i++){\n        seq_str += i.toString() + ' ';\n    }\n    return\
    \ seq_str.trim();\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"0\"\
    );\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821020
- exit_code: 0
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence(n){\n    var seq=\"\";\n    for(var\
    \ i=0;i<=n;i++){\n        seq+=i;\n        if(i!=n){\n            seq+=\" \";\n\
    \        }\n    }\n    return seq;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821020
- exit_code: 0
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence(n){\n    const sequence = [];\n   \
    \ for (let i = 0; i <= n; i++) {\n        sequence.push(i.toString());\n    }\n\
    \    return sequence.join(' ');\n}\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821020
- exit_code: 1
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence(n){\n\n}\n\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\n\
    should loosely deep-equal\n\n'0'\n    at test (/tmp/tmpiw9p8l4_.js:16:10)\n  \
    \  at Object.<anonymous> (/tmp/tmpiw9p8l4_.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n\
    \  expected: '0',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821020
- exit_code: 1
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence(n){\nvar i;\nvar result = \"\";\nfor\
    \ (i = 0; i <= n; i++){\nresult += i + \" \";\n}\nreturn result;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_sequence;\n\
    \  assert.deepEqual(candidate(0),\"0\");\n  assert.deepEqual(candidate(3),\"0\
    \ 1 2 3\");\n  assert.deepEqual(candidate(10),\"0 1 2 3 4 5 6 7 8 9 10\");\n}\n\
    \ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'0 '\n\nshould\
    \ loosely deep-equal\n\n'0'\n    at test (/tmp/tmpziul9qtj.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpziul9qtj.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '0 ',\n  expected:\
    \ '0',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821020
- exit_code: 1
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence(n){\n    var s = \"\";\n    for(var\
    \ i = 0; i <= n; i++){\n        s += (i).toString() + \" \";\n    }\n    return\
    \ s;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"0\");\n  assert.deepEqual(candidate(3),\"\
    0 1 2 3\");\n  assert.deepEqual(candidate(10),\"0 1 2 3 4 5 6 7 8 9 10\");\n}\n\
    \ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'0 '\n\nshould\
    \ loosely deep-equal\n\n'0'\n    at test (/tmp/tmp9fjbheuq.js:19:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp9fjbheuq.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '0 ',\n  expected:\
    \ '0',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821020
- exit_code: 0
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence(n){\n    var result = \"\";\n    for(var\
    \ i = 0; i <= n; i++){\n        result += i + \" \";\n    }\n    return result.slice(0,\
    \ result.length - 1);\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821020
- exit_code: 1
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence(n){\n  var answer = '';\n  var counter\
    \ = 0;\n  while (counter <= n){\n    answer += counter.toString() + ' ';\n   \
    \ counter++;\n  }\n  return answer;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'0 '\n\nshould\
    \ loosely deep-equal\n\n'0'\n    at test (/tmp/tmp6f54onpb.js:21:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp6f54onpb.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '0 ',\n  expected:\
    \ '0',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821020
- exit_code: 0
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence(n){\n    if (n == 0) {\n        return\
    \ \"0\";\n    }\n    else if (n > 0) {\n        return string_sequence(n-1) +\
    \ \" \" + n;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821020
- exit_code: 0
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence(n){\n    var range = '';\n    for(var\
    \ i = 0; i < n; i++){\n        range += i + ' ';\n    }\n    return range + n;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = string_sequence;\n  assert.deepEqual(candidate(0),\"0\");\n  assert.deepEqual(candidate(3),\"\
    0 1 2 3\");\n  assert.deepEqual(candidate(10),\"0 1 2 3 4 5 6 7 8 9 10\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821020
- exit_code: 0
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence(n){\n    let result = '';\n    for(i=0;\
    \ i<=n; i++){\n        result += i + ' ';\n    }\n    return result.trim();\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = string_sequence;\n  assert.deepEqual(candidate(0),\"0\");\n  assert.deepEqual(candidate(3),\"\
    0 1 2 3\");\n  assert.deepEqual(candidate(10),\"0 1 2 3 4 5 6 7 8 9 10\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821020

name: HumanEval_55_fib
language: js
prompt: "//Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n//\
  \ 1\n// >>> fib(8)\n// 21\nfunction fib(n){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = fib;\n  assert.deepEqual(candidate(10),55);\n  assert.deepEqual(candidate(1),1);\n\
  \  assert.deepEqual(candidate(8),21);\n  assert.deepEqual(candidate(11),89);\n \
  \ assert.deepEqual(candidate(12),144);\n}\n\ntest();"
completions: ["\tif(n===0) return 0;\n\tif(n===1) return 1;\n\treturn fib(n-1)+fib(n-2);\n\
    }\n", "  var f = 1;\n  var f1 = 1;\n  var f2 = 1;\n  for (var i = 3; i <= n; i++)\
    \ {\n    f = f1 + f2;\n    f1 = f2;\n    f2 = f;\n  }\n  return f;\n}", "    //\
    \ Base case.\n    if (n <= 1) {\n        return n;\n    } else {\n        return\
    \ fib(n-1) + fib(n-2);\n    }\n}", "    if(n==1 || n==2){\n        return 1;\n\
    \    }\n    return fib(n-1)+fib(n-2);\n}\n", "    if(n == 0){\n        return\
    \ 0;\n    }\n    if(n == 1){\n        return 1;\n    }\n    return fib(n-1) +\
    \ fib(n-2);\n}\n", "    if(n <= 2){\n        return 1;\n    }\n    else{\n   \
    \     return fib(n-1) + fib(n-2);\n    }\n}\n", "  if (n === 0){\n    return 0;\n\
    \  }\n  else if (n === 1){\n    return 1;\n  }\n  else {\n    return fib(n-1)\
    \ + fib(n-2);\n  }\n}\n", "    var a = 0, b = 1, f = 1;\n    for(var i = 2; i\
    \ <= n; i++) {\n        f = a + b;\n        a = b;\n        b = f;\n    }\n  \
    \  return f;\n}", "\tif(n<=2){\n\t\treturn 1;\n\t}else{\n\t\treturn fib(n-1)+fib(n-2);\n\
    \t}\n}", "  // fib(0) = 0, fib(1) = 1, fib(2) = 1, fib(3) = 2, fib(4) = 3, fib(5)\
    \ = 5, fib(6) = 8\n  if (n === 0) {\n    return 0;\n  } else if (n === 1) {\n\
    \    return 1;\n  } else {\n    return fib(n - 1) + fib(n - 2);\n  }\n}\n", " \
    \ var res = [];\n  if(n == 1){\n    return 1;\n  }else if(n == 2){\n    return\
    \ 1;\n  }else{\n    for(var i = 1; i < n-1; i++){\n      res.push(fib(i));\n \
    \   }\n    return fib(n-1) + fib(n-2);\n  }\n}\n", "}\n", "\tif(n==1 || n==2){\n\
    \t\treturn 1;\n\t}\n\treturn fib(n-1)+fib(n-2);\n}\n", "    if(n == 0)\n    {\n\
    \        return 0;\n    }\n    else if(n == 1)\n    {\n        return 1;\n   \
    \ }\n    else\n    {\n        return fib(n-1) + fib(n-2);\n    }\n}\n", "    //YOUR\
    \ CODE HERE\n}\n", "\tif(n==1) return 1;\n\tif(n==2) return 1;\n\tif(n==3) return\
    \ 2;\n\tif(n==4) return 3;\n\tif(n==5) return 5;\n\treturn fib(n-1)+fib(n-2);\n\
    }\n", "  var a = 1, b = 0, temp;\n\n  while (n >= 0){\n    temp = a;\n    a =\
    \ a + b;\n    b = temp;\n    n--;\n  }\n\n  return b;\n}\n", "\t//fib(n-1) + fib(n-2)\n\
    \tif(n === 1){\n\t\treturn 1;\n\t}else if(n === 2){\n\t\treturn 1;\n\t}else{\n\
    \t\treturn fib(n-1) + fib(n-2);\n\t}\n}\n", "    let a = 1;\n    let b = 1;\n\
    \    for (let i = 3; i <= n; i++) {\n        let c = a + b;\n        a = b;\n\
    \        b = c;\n    }\n    return b;\n}\n\nmodule.exports = fib;", "\tvar a =\
    \ 1, b = 0, tmp;\n\twhile (n >= 0){\n\t\ttmp = a;\n\t\ta = a + b;\n\t\tb = tmp;\n\
    \t\tn--;\n\t}\n\treturn b;\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

name: HumanEval_88_sort_array
language: js
prompt: "//Given an array of non-negative integers, return a copy of the given array\
  \ after sorting,\n// you will sort the given array in ascending order if the sum(\
  \ first index value, last index value) is odd,\n// or sort it in descending order\
  \ if the sum( first index value, last index value) is even.\n// Note:\n// * don't\
  \ change the given array.\n// Examples:\n// * sort_array([]) => []\n// * sort_array([5])\
  \ => [5]\n// * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n// * sort_array([2,\
  \ 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\nfunction sort_array(array){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = sort_array;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([5]),[5]);\n\
  \  assert.deepEqual(candidate([2, 4, 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2,\
  \ 4, 3, 0, 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2, 1]),[1,\
  \ 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11, 15, 32, 42,\
  \ 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14, 11]);\n}\n\n\
  test();"
completions: ["    if (array.length == 0) {\n        return array;\n    }\n    if\
    \ (array.length == 1) {\n        return array;\n    }\n    if (array.length %\
    \ 2 == 0) {\n        return array.sort((a, b) => b - a);\n    }\n    return array.sort((a,\
    \ b) => a - b);\n}\n", "  let sum = array[0] + array[array.length - 1];\n  let\
    \ sortedArray = array.sort((a, b) => {\n    if (sum % 2 === 0) {\n      return\
    \ b - a;\n    } else {\n      return a - b;\n    }\n  });\n  return sortedArray;\n\
    }", "    let sum = array[0] + array[array.length - 1];\n    let sorted;\n    if\
    \ (sum % 2 === 0) {\n        sorted = array.sort(function(a, b){return b - a});\n\
    \    } else {\n        sorted = array.sort(function(a, b){return a - b});\n  \
    \  }\n    return sorted;\n}\n", "  if (array.length == 0) {return array}\n  else\
    \ if (array.length == 1) {return array}\n  else if (array.length % 2 == 0) {\n\
    \    var first = array[0];\n    var last = array[array.length - 1];\n    var array_odd\
    \ = [];\n    var array_even = [];\n    for (var i = 0; i < array.length; i++)\
    \ {\n      if (array[i] % 2 == 0) {\n        array_even.push(array[i]);\n    \
    \  }\n      else {\n        array_odd.push(array[i]);\n      }\n    }\n    array_even.sort(function(a,\
    \ b){return a-b});\n    array_odd.sort(function(a, b){return b-a});\n    var array_sorted\
    \ = [];\n    var count = 0;\n    for (var i = 0; i < array.length; i++) {\n  \
    \    if (array[i] % 2 == 0) {\n        array_sorted.push(array_even[count]);\n\
    \        count += 1;\n      }\n      else {\n        array_sorted.push(array_odd[count]);\n\
    \        count += 1;\n      }\n    }\n    array_sorted.splice(0, 1, first);\n\
    \    array_sorted.splice(array_sorted.length - 1, 1, last);\n    return array_sorted;\n\
    \  }\n  else {\n    var first = array[0];\n    var last = array[array.length -\
    \ 1];\n    var array_odd = [];\n    var array_even = [];\n    for (var i = 0;\
    \ i < array.length; i++) {\n      if (array[i] % 2 == 0) {\n        array_even.push(array[i]);\n\
    \      }\n      else {\n        array_odd.push(array[i]);\n      }\n    }\n  \
    \  array_even.sort(function(a, b){return b-a});\n    array_odd.sort(function(a,\
    \ b){return a-b});\n    var array_sorted = [];\n    var count = 0;\n    for (var\
    \ i", "  if(array.length<=1) return array;\n  const sum = array[0] + array[array.length-1];\n\
    \  if(sum%2===0){\n    return array.sort((a,b)=>b-a);\n  }\n  return array.sort((a,b)=>a-b);\n\
    }", "    if(array.length == 0 || array.length == 1) return array;\n    let first\
    \ = array[0];\n    let last = array[array.length - 1];\n    if(sum(first, last)\
    \ % 2 == 0) {\n        return array.sort((a, b) => b - a);\n    } else {\n   \
    \     return array.sort((a, b) => a - b);\n    }\n}\n", "    if(array.length ==\
    \ 0 || array.length == 1) return array;\n    return (array[0] + array[array.length\
    \ - 1]) % 2 != 0 ? array.sort((a, b) => a - b) : array.sort((a, b) => b - a);\n\
    }\n", "  if(array.length <= 1) return array;\n  return array.slice(0,1).concat(array.slice(array.length-1,array.length),array.slice(1,array.length-1)).sort((a,b)=>(a+b)%2?1:-1);\n\
    }\n", "    let first = array[0];\n    let last = array[array.length - 1];\n  \
    \  let newArray = [];\n    if ((first + last) % 2 !== 0) {\n        newArray =\
    \ array.sort(function(a, b){return a - b});\n    } else {\n        newArray =\
    \ array.sort(function(a, b){return b - a});\n    }\n    return newArray;\n}\n",
  "    var sum = 0;\n    var array_length = array.length;\n    var i = 0;\n    while(i<array_length){\n\
    \        sum += array[i];\n        i++;\n    }\n    if(sum%2===0){\n        array.sort(function(a,b){\n\
    \            return b-a;\n        });\n    }else{\n        array.sort(function(a,b){\n\
    \            return a-b;\n        });\n    }\n    return array;\n}", "    let\
    \ firstIndex = array[0];\n    let lastIndex = array[array.length - 1];\n    let\
    \ sumOfFirstAndLastIndex = firstIndex + lastIndex;\n    let sortedArray = [];\n\
    \    if (sumOfFirstAndLastIndex % 2 === 0) {\n        sortedArray = array.sort((a,\
    \ b) => {\n            return b - a;\n        });\n    } else {\n        sortedArray\
    \ = array.sort((a, b) => {\n            return a - b;\n        });\n    }\n  \
    \  return sortedArray;\n}\n", "  return array.map((x, i) => (i+1) % 2 === (array[0]\
    \ + array[array.length-1]) % 2 ? x : x * -1).sort((a, b) => a - b).map((x, i)\
    \ => (i+1) % 2 === (array[0] + array[array.length-1]) % 2 ? x : x * -1);\n}",
  "    let sum = array[0] + array[array.length - 1];\n    let arr = array.sort((a,\
    \ b) => {\n        if (sum % 2 === 0) {\n            return b - a;\n        }\
    \ else {\n            return a - b;\n        }\n    });\n    return arr;\n}",
  "  let sum = array[0] + array[array.length - 1];\n  if (sum % 2 === 0) {\n    return\
    \ array.sort(function(a, b) {\n      return b - a;\n    });\n  } else {\n    return\
    \ array.sort(function(a, b) {\n      return a - b;\n    });\n  }\n}\nsort_array([2,\
    \ 4, 3, 0, 1, 5, 6]);", "    let result = [];\n    if(!array.length){\n      \
    \  return array;\n    }\n    if(array.length == 1){\n        return array;\n \
    \   }\n    let sum = array[0] + array[array.length - 1];\n    if(sum % 2 == 0){\n\
    \        result = array.sort(function(a, b){\n            return b - a;\n    \
    \    });\n    }\n    else{\n        result = array.sort(function(a, b){\n    \
    \        return a - b;\n        });\n    }\n    return result;\n}", "  var sum\
    \ = array[0] + array[array.length - 1];\n  if (sum % 2 == 0) {\n    return array.sort(function(a,\
    \ b){return b - a});\n  } else {\n    return array.sort(function(a, b){return\
    \ a - b});\n  }\n}", "\n}", "    var i = 0;\n    var j = array.length-1;\n   \
    \ var temp;\n    if(array.length==0){\n        return array;\n    }else if(array.length==1){\n\
    \        return array;\n    }else if((array[i]+array[j])%2!=0){\n        //ascending\n\
    \        for(var m=0;m<array.length;m++){\n            for(var n=m+1;n<array.length;n++){\n\
    \                if(array[m]>array[n]){\n                    temp = array[m];\n\
    \                    array[m] = array[n];\n                    array[n] = temp;\n\
    \                }\n            }\n        }\n        return array;\n    }else{\n\
    \        //descending\n        for(var m=0;m<array.length;m++){\n            for(var\
    \ n=m+1;n<array.length;n++){\n                if(array[m]<array[n]){\n       \
    \             temp = array[m];\n                    array[m] = array[n];\n   \
    \                 array[n] = temp;\n                }\n            }\n       \
    \ }\n        return array;\n    }\n}", "    if (array.length === 0 || array.length\
    \ === 1) {\n        return array;\n    } else {\n        let arr = [];\n     \
    \   let even = [];\n        let odd = [];\n        for (let i = 0; i < array.length;\
    \ i++) {\n            if (array[i] % 2 !== 0) {\n                odd.push(array[i]);\n\
    \            } else {\n                even.push(array[i]);\n            }\n \
    \       }\n        odd.sort((a, b) => a - b);\n        even.sort((a, b) => b -\
    \ a);\n        if (array[0] % 2 !== 0) {\n            arr = odd.concat(even);\n\
    \        } else {\n            arr = even.concat(odd);\n        }\n        return\
    \ arr;\n    }\n}\n", "    let oddEven = array.length > 0 ? array[0] + array[array.length\
    \ - 1] : 0;\n    if (oddEven % 2 == 0) {\n        return array.sort((a, b) =>\
    \ a < b ? 1 : -1);\n    } else {\n        return array.sort((a, b) => a > b ?\
    \ 1 : -1);\n    }\n}"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

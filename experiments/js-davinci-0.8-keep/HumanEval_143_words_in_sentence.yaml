name: HumanEval_143_words_in_sentence
language: js
prompt: "//You are given a string representing a sentence,\n// the sentence contains\
  \ some words separated by a space,\n// and you have to return a string that contains\
  \ the words from the original sentence,\n// whose lengths are prime numbers,\n//\
  \ the order of the words in the new string should be the same as the original one.\n\
  // Example 1:\n// Input: sentence = \"This is a test\"\n// Output: \"is\"\n// Example\
  \ 2:\n// Input: sentence = \"lets go for swimming\"\n// Output: \"go for\"\n// Constraints:\n\
  // * 1 <= len(sentence) <= 100\n// * sentence contains only letters\nfunction words_in_sentence(sentence){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = words_in_sentence;\n  assert.deepEqual(candidate(\"This is a test\"),\"is\"\
  );\n  assert.deepEqual(candidate(\"lets go for swimming\"),\"go for\");\n  assert.deepEqual(candidate(\"\
  there is no place available here\"),\"there is no place\");\n  assert.deepEqual(candidate(\"\
  Hi I am Hussein\"),\"Hi am Hussein\");\n  assert.deepEqual(candidate(\"go for it\"\
  ),\"go for it\");\n  assert.deepEqual(candidate(\"here\"),\"\");\n  assert.deepEqual(candidate(\"\
  here is\"),\"is\");\n}\n\ntest();"
completions: ["  return sentence.split(' ').filter(word => is_prime(word.length)).join('\
    \ ');\n}\n", "    let result = [];\n    const words = sentence.split(' ');\n \
    \   for(let i = 0; i < words.length; i++){\n        if(is_prime(words[i].length)){\n\
    \            result.push(words[i]);\n        }\n    }\n    return result.join('\
    \ ');\n}\n", "    var words = sentence.split(\" \");\n    var output = \"\";\n\
    \    for(var i = 0; i < words.length; i++){\n        if(is_prime(words[i].length)){\n\
    \            output += words[i] + \" \";\n        }\n    }\n    return output.substring(0,\
    \ output.length - 1);\n}", "  let words = sentence.split(' ');\n  let prime_word\
    \ = '';\n  for(let i = 0; i < words.length; i++){\n    if(is_prime(words[i].length)){\n\
    \      prime_word += words[i] + ' ';\n    }\n  }\n  return prime_word.trim();\n\
    }", "    let words = sentence.split(' ');\n    let is_prime = word => word.length\
    \ === 1 || word.length === 2;\n    let answer = '';\n    for(let i = 0; i < words.length;\
    \ i++){\n        if(is_prime(words[i])){\n            answer += words[i] + ' ';\n\
    \        }\n    }\n    return answer.trim();\n}\n", "    let res = [];\n    let\
    \ words = sentence.split(\" \");\n    for(let i = 0; i < words.length; i++){\n\
    \        if(is_prime(words[i].length)){\n            res.push(words[i]);\n   \
    \     }\n    }\n    return res.join(\" \");\n}", "    return sentence.split('\
    \ ').filter(w => is_prime(w.length)).join(' ');\n}", "    var words = sentence.split(\"\
    \ \");\n    var r = [];\n    for(var i=0; i<words.length; i++){\n        if(is_prime(words[i].length)){\n\
    \            r.push(words[i]);\n        }\n    }\n    return r.join(\" \");\n\
    }\n", "    var words = sentence.split(\" \");\n    var result = [];\n    for(var\
    \ i = 0; i < words.length; i++){\n        if(prime(words[i].length)){\n      \
    \      result.push(words[i]);\n        }\n    }\n    return result.join(\" \"\
    );\n}", "    let is_prime = [false, false];\n    for(let i = 2; i < 101; i++){\n\
    \        is_prime[i] = true;\n    }\n    for(let i = 2; i < 101; i++){\n     \
    \   if(is_prime[i]){\n            for(let j = i * i; j < 101; j += i){\n     \
    \           is_prime[j] = false;\n            }\n        }\n    }\n    let result\
    \ = [];\n    for(let i = 0; i < sentence.length; i++){\n        if(sentence[i]\
    \ !== ' '){\n            let word = '';\n            while(i < sentence.length\
    \ && sentence[i] !== ' '){\n                word += sentence[i];\n           \
    \     i++;\n            }\n            if(is_prime[word.length]){\n          \
    \      result.push(word);\n            }\n        }\n    }\n    return result.join('\
    \ ');\n}", "    // Your code here\n}\nwords_in_sentence(\"lets go for swimming\"\
    )", "\tvar words = sentence.split(\" \");\n\tvar new_sentence = [];\n\tfor(var\
    \ i = 0; i < words.length; i++){\n\t\tif(is_prime(words[i].length)){\n\t\t\tnew_sentence.push(words[i]);\n\
    \t\t}\n\t}\n\treturn new_sentence.join(\" \");\n}", "    let newSentence = \"\"\
    ;\n    let sentenceArr = sentence.split(\" \");\n    let primeNumbers = [2, 3,\
    \ 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79,\
    \ 83, 89, 97];\n    for(let i = 0; i < sentenceArr.length; i++){\n        for(let\
    \ j = 0; j < primeNumbers.length; j++){\n            if(sentenceArr[i].length\
    \ === primeNumbers[j]){\n                newSentence += sentenceArr[i] + \" \"\
    ;\n            }\n        }\n    }\n    return newSentence;\n}", "    let new_sentence\
    \ = '';\n    let word_list = sentence.split(' ');\n    for(let i = 0; i < word_list.length;\
    \ i++){\n        if(is_prime(word_list[i].length)){\n            new_sentence\
    \ += word_list[i];\n            new_sentence += ' ';\n        }\n    }\n    return\
    \ new_sentence.trim();\n}\n", "    var sentence_arr = sentence.split(\" \");\n\
    \    var answer = [];\n    var prime_num = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n    for(var i\
    \ = 0; i < sentence_arr.length; i++){\n        if(prime_num.includes(sentence_arr[i].length)){\n\
    \            answer.push(sentence_arr[i]);\n        }\n    }\n    return answer.join(\"\
    \ \");\n}", "  const words = sentence.split(' ')\n  const prime_words = words.filter(word\
    \ => is_prime(word.length))\n  return prime_words.join(' ')\n}", "  var sent_arr\
    \ = sentence.split(\" \");\n  var new_sent = [];\n  for(var word of sent_arr){\n\
    \    if(is_prime(word.length)){\n      new_sent.push(word);\n    }\n  }\n  return\
    \ new_sent.join(\" \");\n}\n", "    var result = '';\n    var words = sentence.split('\
    \ ');\n    for(var i = 0; i < words.length; i++){\n        if(is_prime(words[i].length)){\n\
    \            result += words[i] + ' ';\n        }\n    }\n    return result.trim();\n\
    }\n", "    let words = sentence.split(' ');\n    let primes = [2, 3, 5, 7, 11,\
    \ 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89,\
    \ 97, 101];\n    let prime_words = [];\n    for(let i = 0; i < words.length; i++){\n\
    \        let word = words[i];\n        if(primes.includes(word.length)) prime_words.push(word);\n\
    \    }\n    return prime_words.join(' ');\n}", "    let res = [];\n    sentence.split('\
    \ ').forEach(v => {\n        if(is_prime(v.length)){\n            res.push(v);\n\
    \        }\n    });\n    return res.join(' ');\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

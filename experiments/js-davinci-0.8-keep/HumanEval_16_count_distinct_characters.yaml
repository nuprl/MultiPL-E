name: HumanEval_16_count_distinct_characters
language: js
prompt: "//Given a string, find out how many distinct characters (regardless of case)\
  \ does it consist of\n// >>> count_distinct_characters('xyzXYZ')\n// 3\n// >>> count_distinct_characters('Jerry')\n\
  // 4\nfunction count_distinct_characters(string){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
  abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
  aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
  }\n\ntest();"
completions: ["  var strArray = string.split('');\n  var uniqueArray = strArray.filter(function(item,\
    \ pos) {\n    return strArray.indexOf(item) == pos;\n  })\n  return uniqueArray.length;\n\
    }\n", "    var output = 0;\n    var str = string.toLowerCase();\n    for(var i\
    \ = 0; i < str.length; i++){\n        if(str.lastIndexOf(str[i]) == str.indexOf(str[i])){\n\
    \            output++;\n        }\n    }\n    return output;\n}\n", "    var array=string.split(\"\
    \");\n    return new Set(array).size;\n}\n", "  var char_dict = {}\n  for (var\
    \ i = 0; i < string.length; i++){\n    char_dict[string[i].toLowerCase()] = 0\n\
    \  }\n  return Object.keys(char_dict).length\n}\n", "    //solution 1:\n    //\
    \ var lower = string.toLowerCase().split('');\n    // return lower.filter(function(elem,\
    \ index, self){\n    //     return index == self.indexOf(elem);\n    // }).length;\n\
    \n    //solution 2:\n    return string.length == [...new Set(string.toLowerCase())].length;\n\
    }\n", "\tvar count = 0;\n\tvar characters = [];\n\tfor (var i = 0; i < string.length;\
    \ i++) {\n\t\tif (characters.indexOf(string[i].toLowerCase()) == -1) {\n\t\t\t\
    characters.push(string[i].toLowerCase());\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn\
    \ count;\n}\n", "\treturn (string.split('').sort().join('').match(/(.)\\1*/g).length);\n\
    }\n", "    return new Set(string.toLowerCase()).size;\n}\n\n", "    const uniq\
    \ = [...new Set(string.toLowerCase())]\n    return uniq.length\n}\n", "  // Declare\
    \ a new Set called count_distinct_characters\n  let count_distinct_characters\
    \ = new Set();\n  // Loop over the characters in the string\n  for (let char of\
    \ string){\n    // Add each character to the count_distinct_characters set\n \
    \   count_distinct_characters.add(char);\n  }\n  // Return the size of the set\n\
    \  return count_distinct_characters.size;\n}", "  var count = 0;\n  var letter_list\
    \ = [];\n  for (var i = 0; i < string.length; i++){\n    if (letter_list.indexOf(string[i].toLowerCase())\
    \ < 0){\n      letter_list.push(string[i].toLowerCase());\n      count ++;\n \
    \   }\n  }\n  return count;\n}\n", "    let chars = string.toLowerCase().split('');\n\
    \    return new Set(chars).size;\n}\n", "    let array = string.split('');\n \
    \   let distinctCharacters = new Set(array);\n    return distinctCharacters.size;\n\
    }\n", "    //Convert string to lower case, then split it into array of characters\n\
    \    var string_array = string.toLowerCase().split('');\n    //get unique characters\n\
    \    var unique_array = string_array.filter(function(item, pos) {\n        return\
    \ string_array.indexOf(item) == pos;\n    });\n    return unique_array.length;\n\
    }", "    //your code goes here, return an integer\n    var allLetters = [];\n\
    \    var distinctLetters = [];\n    for (var i = 0; i < string.length; i++) {\n\
    \      allLetters.push(string[i].toLowerCase());\n    }\n    for (var i = 0; i\
    \ < allLetters.length; i++) {\n      if (distinctLetters.indexOf(allLetters[i])\
    \ === -1) {\n        distinctLetters.push(allLetters[i]);\n      }\n    }\n  \
    \  return distinctLetters.length;\n}\n", "\tvar splitString = string.split(\"\"\
    );\n\tvar newArray = [];\n\tvar count = 0;\n\tfor(var i = 0; i < splitString.length;\
    \ i++){\n\t\tif(newArray.indexOf(splitString[i]) === -1){\n\t\t\tnewArray.push(splitString[i]);\n\
    \t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\n", "    var str = string.toLowerCase();\n\
    \    var out = new Set();\n    for (var i = 0; i < str.length; i++){\n       \
    \ out.add(str[i]);\n    }\n    return out.size;\n}\n", "\tvar distinct = [];\n\
    \tfor (var i = 0; i < string.length; i++) {\n\t\tvar letter = string[i].toLowerCase();\n\
    \t\tif(distinct.indexOf(letter) === -1){\n\t\t\tdistinct.push(letter);\n\t\t}\n\
    \t}\n\treturn distinct.length;\n}\n", "    var allCharacters = string.split('');\n\
    \    var distinctCharacters = [];\n    for (var i = 0; i < allCharacters.length;\
    \ i++){\n        if (distinctCharacters.indexOf(allCharacters[i].toLowerCase())\
    \ == -1){\n            distinctCharacters.push(allCharacters[i].toLowerCase());\n\
    \        }\n    }\n    return distinctCharacters.length;\n}\n", "    let count=0;\n\
    \    let str=string.toLowerCase();\n    for(let i=0;i<str.length;i++){\n     \
    \   if(str.indexOf(str[i])===i){\n            count++;\n        }\n    }\n   \
    \ return count;\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

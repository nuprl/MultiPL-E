name: HumanEval_3_below_zero
language: js
prompt: "//You're given a list of deposit and withdrawal operations on a bank account\
  \ that starts with\n// zero balance. Your task is to detect if at any point the\
  \ balance of account fallls below zero, and\n// at that point function should return\
  \ True. Otherwise it should return False.\n// >>> below_zero([1, 2, 3])\n// False\n\
  // >>> below_zero([1, 2, -4, 5])\n// True\nfunction below_zero(operations){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = below_zero;\n  assert.deepEqual(candidate([]),false);\n  assert.deepEqual(candidate([1,\
  \ 2, -3, 1, 2, -3]),false);\n  assert.deepEqual(candidate([1, 2, -4, 5, 6]),true);\n\
  \  assert.deepEqual(candidate([1, -1, 2, -2, 5, -5, 4, -4]),false);\n  assert.deepEqual(candidate([1,\
  \ -1, 2, -2, 5, -5, 4, -5]),true);\n  assert.deepEqual(candidate([1, -2, 2, -2,\
  \ 5, -5, 4, -4]),true);\n}\n\ntest();"
completions: ["    var balance = 0;\n    for(var i = 0; i < operations.length; i++){\n\
    \        balance += operations[i];\n        if(balance < 0){\n            return\
    \ true;\n        }\n    }\n    return false;\n}\n", "    let sum = 0;\n    for(let\
    \ i = 0; i < operations.length; i++){\n        sum += operations[i];\n       \
    \ if(sum < 0){\n            return true;\n        }\n    }\n    return false;\n\
    }\n", "    return operations.some(op => op < 0);\n}\n", "    let balance = 0;\n\
    \    for(let i=0; i<operations.length; i++){\n        if(operations[i] > 0){\n\
    \            balance += operations[i];\n        }\n        else if(operations[i]\
    \ < 0){\n            balance -= Math.abs(operations[i]);\n        }\n        if(balance\
    \ < 0){\n            return true;\n        }\n    }\n    return false;\n}", " \
    \   var balance = 0;\n    for(var i = 0; i < operations.length; i++){\n      \
    \  balance += operations[i];\n        if(balance < 0){\n            return true;\n\
    \        }\n    }\n    return false;\n}", "    var account_balance = 0;\n    for\
    \ (var i = 0; i < operations.length; i++){\n        account_balance += operations[i];\n\
    \        if (account_balance < 0){\n            return true;\n        }\n    }\n\
    \    return false;\n}", "    for(let i = 0; i < operations.length; i++){\n   \
    \     if(operations[i] < 0){\n            return true;\n        }\n    }\n   \
    \ return false;\n}\n", "    var bal = 0;\n    for(var i = 0; i < operations.length;\
    \ i++){\n        bal += operations[i];\n        if(bal < 0){\n            return\
    \ true;\n        }\n    }\n    return false;\n}\n", "  var balance = 0;\n  for\
    \ (var i = 0; i < operations.length; i++) {\n    balance += operations[i];\n \
    \   if (balance < 0) {\n      return true;\n    }\n  }\n  return false;\n}\n",
  "  var sum = 0;\n  for (var i = 0; i < operations.length; i++) {\n    sum += operations[i];\n\
    \    if (sum < 0) {\n      return true;\n    }\n  }\n  return false;\n}", "  \
    \  let balance = 0;\n    for(let i = 0; i < operations.length; i++){\n       \
    \ if(operations[i] > 0){\n            balance += operations[i];\n        }\n \
    \       else if(operations[i] < 0){\n            balance -= operations[i];\n \
    \       }\n        if(balance < 0){\n            return true;\n        }\n   \
    \ }\n    return false;\n}", "    var balance = 0;\n    for(i=0; i<operations.length;\
    \ i++){\n        balance += operations[i];\n        if(balance < 0){\n       \
    \     return true;\n        }\n    }\n    return false;\n}\n", "    var balance\
    \ = 0;\n    for(var x = 0; x < operations.length; x++){\n        if(operations[x]\
    \ > 0){\n            balance += operations[x];\n        }else{\n            balance\
    \ -= operations[x];\n        }\n        if(balance < 0){\n            return true;\n\
    \        }\n    }\n    return false;\n}", "    let balance = 0;\n    for(let i\
    \ = 0; i < operations.length; i++){\n        balance += operations[i];\n     \
    \   if(balance < 0){\n            return true;\n        }\n    }\n    return false;\n\
    }", "  let balance = 0;\n  for (let i = 0; i < operations.length; i++){\n    if\
    \ (operations[i] < 0){\n      balance = balance + operations[i];\n      if (balance\
    \ < 0){\n        return true;\n      }\n    }\n    else {\n      balance = balance\
    \ + operations[i];\n    }\n  }\n  return false;\n}", "  for (var i = 0; i < operations.length;\
    \ i++) {\n    if (operations[i] < 0) {\n      return true;\n    }\n  }\n  return\
    \ false;\n}\n", "\n}\n", "    let total = 0;\n    for(let i=0; i<operations.length;\
    \ i++){\n        if(operations[i] < 0){\n            total -= operations[i];\n\
    \        } else {\n            total += operations[i];\n        }\n        if(total\
    \ < 0){\n            return true;\n        }\n    }\n    return false;\n}", "\t\
    var below = false;\n\tvar balance = 0;\n\tfor(i=0; i<operations.length; i++){\n\
    \t\tbalance = balance + operations[i];\n\t\tif(balance < 0){\n\t\t\tbelow = true;\n\
    \t\t}\n\t}\n\treturn below;\n}", "\tlet result = 0;\n\tfor(let i = 0; i < operations.length;\
    \ i++){\n\t\tresult += operations[i];\n\t\tif(result < 0){\n\t\t\treturn true;\n\
    \t\t}\n\t}\n\treturn false;\n}"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

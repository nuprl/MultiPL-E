name: HumanEval_162_string_to_md5
language: js
prompt: "//Given a string 'text', return its md5 hash equivalent string.\n// If 'text'\
  \ is an empty string, return None.\n// >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
  function string_to_md5(text){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = string_to_md5;\n  assert.deepEqual(candidate(\"Hello world\"),\"3e25960a79dbc69b674cd4ec67a72c62\"\
  );\n  assert.deepEqual(candidate(\"\"),undefined);\n  assert.deepEqual(candidate(\"\
  A B C\"),\"0ef78513b0cb8cef12743f5aeb35f888\");\n  assert.deepEqual(candidate(\"\
  password\"),\"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\ntest();"
completions: ["    return md5(text);\n}\n\n", "    var hash = crypto.createHash('md5');\n\
    \    hash.update(text);\n    var hex = hash.digest('hex');\n    return hex;\n\
    }\n", "    if (text.length == 0) {\n        return \"None\";\n    } else {\n \
    \       var md5 = crypto.createHash('md5');\n        md5.update(text);\n     \
    \   return md5.digest('hex');\n    }\n}\n", "\tif (text.length == 0) return None;\n\
    \treturn md5(text);\n}\n\n", "  if(text === ''){\n    return null;\n  }\n  return\
    \ hex_md5(text);\n}\n", "    return md5(text);\n}\n", "    var hash = crypto.createHash('md5');\n\
    \    hash.update(text);\n    return hash.digest('hex');\n}\n", "    return crypto.createHash('md5').update(text).digest('hex');\n\
    }\n", "  let hash = crypto.createHash('md5');\n  hash.update(text);\n  return\
    \ hash.digest('hex');\n}\n", "    if (text.length === 0) {\n        return None;\n\
    \    } else {\n        return CryptoJS.MD5(text).toString();\n    }\n}\n", " \
    \ if(text === '') return null;\n  return md5(text);\n}", "\t//md5 hash function\
    \ object\n\tvar md5 = require('MD5');\n\treturn md5(text);\n}\n", "    return\
    \ crypto.createHash('md5').update(text).digest('hex');\n}\n", "    if (text ===\
    \ ''){\n        return;\n    }\n    return crypto.createHash('md5').update(text).digest('hex');\n\
    }\n", "    if(!text){\n        return null;\n    }\n    let md5 = require('md5');\n\
    \    return md5(text);\n}\n", "    if (text.length == 0) {\n        return null;\n\
    \    }\n    return md5(text);\n}\n", "    var crypto = require('crypto');\n  \
    \  return crypto.createHash('md5').update(text).digest('hex');\n}\n", "  var crypto\
    \ = require('crypto');\n  if (text === \"\"){\n    return null;\n  }\n  var hash\
    \ = crypto.createHash('md5').update(text).digest('hex');\n  return hash;\n}\n",
  "  if(text == ''){\n    return null;\n  }\n  var md5 = require('crypto-js/md5');\n\
    \  return md5(text).toString();\n}\n", "\treturn !text ? null : require('crypto').createHash('md5').update(text).digest('hex');\n\
    }\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

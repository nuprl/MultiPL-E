name: HumanEval_152_compare
language: js
prompt: "//I think we all remember that feeling when the result of some long-awaited\n\
  // event is finally known. The feelings and thoughts you have at that moment are\n\
  // definitely worth noting down and comparing.\n// Your task is to determine if\
  \ a person correctly guessed the results of a number of matches.\n// You are given\
  \ two arrays of scores and guesses of equal length, where each index shows a match.\
  \ \n// Return an array of the same length denoting how far off each guess was. If\
  \ they have guessed correctly,\n// the value is 0, and if not, the value is the\
  \ absolute difference between the guess and the score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
  \ -> [0,0,0,0,3,3]\n// compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
  function compare(game, guess){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0,\
  \ 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0,\
  \ 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2,\
  \ -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2,\
  \ 0, 0, 1]);\n}\n\ntest();"
completions: ["\tvar result = []\n\tfor (var i = 0; i < game.length; i++) {\n\t\t\
    if (game[i] === guess[i]) {\n\t\t\tresult.push(0)\n\t\t} else {\n\t\t\tresult.push(Math.abs(game[i]\
    \ - guess[i]))\n\t\t}\n\t}\n\treturn result\n}\n", "    let result = [];\n   \
    \ for(let i = 0; i < game.length; i++){\n        let diff = game[i] - guess[i];\n\
    \        if(game[i] == guess[i]){\n            result.push(0);\n        } else\
    \ {\n            result.push(Math.abs(diff));\n        }\n    }\n    return result;\n\
    }", "  var result = [];\n  for(var i = 0; i < game.length; i++){\n    if(game[i]\
    \ === guess[i]){\n      result.push(0);\n    }else{\n      result.push(Math.abs(game[i]\
    \ - guess[i]));\n    }\n  }\n  return result;\n}", "    let result = []\n    for(let\
    \ i = 0; i < game.length; i++){\n        if(game[i] === guess[i]){\n         \
    \   result.push(0)\n        }else{\n            result.push(Math.abs(game[i] -\
    \ guess[i]))\n        }\n    }\n    return result\n}\n", "  return game.map((sc,i)=>guess[i]===sc?0:Math.abs(guess[i]-sc))\n\
    }", "    let answer = []\n    for(let i = 0; i < game.length; i++){\n        if(game[i]\
    \ === guess[i]){\n            answer.push(0)\n        }else if(game[i] !== guess[i]){\n\
    \            answer.push(Math.abs(game[i] - guess[i]))\n        }\n    }\n   \
    \ return answer\n}\n", "    var result = [];\n    for(var i = 0; i < game.length;\
    \ i++){\n        if(game[i] !== guess[i]){\n            result.push(Math.abs(game[i]\
    \ - guess[i]));\n        } else {\n            result.push(0);\n        }\n  \
    \  }\n    return result;\n}", "    var result = [];\n    for(let i = 0; i < game.length;\
    \ i++){\n        if(game[i] !== guess[i]){\n            result.push(Math.abs(game[i]\
    \ - guess[i]));\n        }else{\n            result.push(0);\n        }\n    }\n\
    \    return result;\n}", "    return game.map((el, idx) => {\n        if (el ===\
    \ guess[idx]) return 0;\n        return Math.abs(el - guess[idx]);\n    });\n\
    }\n", "    return game.map((a,i)=>{\n       return guess[i]!==a?Math.abs(guess[i]-a):0\n\
    \    })\n}", "    //code here\n    let result = [];\n    for(let i = 0; i < game.length;\
    \ i++){\n        if(game[i] == guess[i]){\n            result.push(0);\n     \
    \   }else{\n            result.push(Math.abs(game[i] - guess[i]));\n        }\n\
    \    }\n    return result;\n}", "    var result = []\n    for(var i = 0; i < game.length;\
    \ i++){\n        if(game[i] === guess[i]){\n            result.push(0)\n     \
    \   } else {\n            result.push(Math.abs(game[i] - guess[i]))\n        }\n\
    \    }\n    return result\n}\n", "  return game.map((score, index) => guess[index]\
    \ > score ? guess[index] - score : score - guess[index]);\n}\n", "    return game.map((e,i)=>{\n\
    \        return (e-guess[i])===0? 0: Math.abs(e-guess[i])\n    })\n}", "    let\
    \ result = [];\n    for(let i = 0; i < game.length; i++){\n        result.push(Math.abs(game[i]\
    \ - guess[i]));\n    }\n    return result;\n}", "    return game.map((x, i) =>\
    \ x == guess[i] ? 0 : Math.abs(x - guess[i]));\n}", "  let result = [];\n  for(let\
    \ i = 0; i < game.length; i++){\n    if(game[i] === guess[i]){\n      result.push(0);\n\
    \    } else {\n      result.push(Math.abs(game[i] - guess[i]));\n    }\n  }\n\
    \  return result;\n}\n", "    let result = []\n    for(let i = 0; i < game.length;\
    \ i++){\n        result.push(Math.abs(game[i] - guess[i]))\n    }\n    return\
    \ result\n}\n", "    var result = [];\n    for(var i = 0; i < game.length; i++){\n\
    \        if(game[i] === guess[i]){\n            result.push(0);\n        }else{\n\
    \            result.push(Math.abs(game[i] - guess[i]));\n        }\n    }\n  \
    \  return result;\n}", "    return game.map((score, index) => score - guess[index]);\n\
    }"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

name: HumanEval_34_unique
language: js
prompt: "//Return sorted unique elements in a list\n// >>> unique([5, 3, 5, 2, 3,\
  \ 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2,\
  \ 3, 5, 9, 123]);\n}\n\ntest();"
completions: ["  return l.sort().filter(function(item, pos, ary) {\n    return !pos\
    \ || item != ary[pos - 1];\n  })\n}\n", "  var uniq = {};\n  l.forEach(function(i)\
    \ { uniq[i] = true; });\n  return Object.keys(uniq).map(function(i) { return parseInt(i);\
    \ });\n}\n", "  return l.sort().filter(function(item, pos, ary) {\n      return\
    \ !pos || item != ary[pos - 1];\n  })\n}\n", "\tvar s = [];\n\tl.forEach(function(x){\n\
    \t\tif (s.indexOf(x) === -1) s.push(x);\n\t});\n\treturn s.sort(function(a, b){return\
    \ a - b;});\n}\n", "    return l.sort().filter(function(e, i, l){\n        return\
    \ i === 0 || e != l[i-1];\n    });\n}\n", "    var result = [];\n    l.sort();\n\
    \    for(var i = 0; i < l.length; i++){\n        if(l[i] != l[i + 1]){\n     \
    \       result.push(l[i]);\n        }\n    }\n    return result;\n}\n", "    let\
    \ uniques = [];\n    for(let i = 0; i < l.length; i++){\n        let x = l[i];\n\
    \        if(!(x in uniques)){\n            uniques.push(x);\n        }\n    }\n\
    \    return uniques.sort();\n}\n", "\tl.sort();\n\tfor(var i = 1; i < l.length;\
    \ i++){\n\t\tif(l[i-1] == l[i])\n\t\t\tl.splice(i--, 1);\n\t}\n\treturn l;\n}\n",
  "\treturn l.sort().filter(function(item, pos, ary) {\n\t\treturn !pos || item !=\
    \ ary[pos - 1];\n\t})\n}\n", "    return Array.from(new Set(l));\n}\n", "    let\
    \ set = new Set(l);\n    return Array.from(set);\n}\n", "\tvar u = l.sort();\n\
    \tvar ul = [];\n\t\n\tfor(var i = 0; i < u.length; i++){\n\t\tif(u[i] != u[i+1]){\n\
    \t\t\tul.push(u[i]);\n\t\t}\n\t}\n\treturn ul;\n}", "    var result = [];\n  \
    \  for(var i = 0; i < l.length; i++){\n        if(result.indexOf(l[i]) == -1){\n\
    \            result.push(l[i]);\n        }\n    }\n    return result;\n}\n", " \
    \ var s = l.slice();\n  s.sort();\n  var last = s[0];\n  var res = [last];\n \
    \ for(var i = 1; i < s.length; i++){\n    if(s[i] !== last){\n      res.push(s[i]);\n\
    \      last = s[i];\n    }\n  }\n  return res;\n}\n", "  return l.sort().filter(function(v,i,a){return\
    \ a.indexOf(v)===i});\n}\n\n", "  return [...new Set(l)];\n}\n", "  var set =\
    \ new Set(l);\n  return Array.from(set);\n}\n", "\treturn [...new Set(l)]\n}\n",
  "    //Without using built-in sort\n    let r = []\n    for(let i = 0; i < l.length;\
    \ i++){\n        if(r.indexOf(l[i]) < 0){\n            r.push(l[i])\n        }\n\
    \    }\n    return r\n}\n", "    let newArr = l.sort();\n    let index = 0;\n\
    \    for(let i = 0; i < newArr.length; i++){\n        if(newArr[i] != newArr[i+1]){\n\
    \            newArr[index] = newArr[i];\n            index++;\n        }\n   \
    \ }\n    return newArr.slice(0, index);\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

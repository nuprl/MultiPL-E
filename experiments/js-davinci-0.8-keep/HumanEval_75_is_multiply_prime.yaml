name: HumanEval_75_is_multiply_prime
language: js
prompt: "//Write a function that returns true if the given number is the multiplication\
  \ of 3 prime numbers\n// and false otherwise.\n// Knowing that (a) is less then\
  \ 100. \n// Example:\n// is_multiply_prime(30) == True\n// 30 = 2 * 3 * 5\nfunction\
  \ is_multiply_prime(a){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = is_multiply_prime;\n  assert.deepEqual(candidate(5),false);\n  assert.deepEqual(candidate(30),true);\n\
  \  assert.deepEqual(candidate(8),true);\n  assert.deepEqual(candidate(10),false);\n\
  \  assert.deepEqual(candidate(125),true);\n  assert.deepEqual(candidate(105),true);\n\
  \  assert.deepEqual(candidate(126),false);\n  assert.deepEqual(candidate(729),false);\n\
  \  assert.deepEqual(candidate(891),false);\n  assert.deepEqual(candidate(1001),true);\n\
  }\n\ntest();"
completions: ["\tfor(var i = 2; i < a; i++){\n\t\tif(is_prime(i) && a % i == 0){\n\
    \t\t\tfor(var j = 2; j < a; j++){\n\t\t\t\tif(is_prime(j) && a % j == 0){\n\t\t\
    \t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn false;\n}\n", " \
    \   for(let i = 2; i < a; i++){\n        if(a % i === 0){\n            for(let\
    \ j = i; j < a; j++){\n                if(a % j === 0){\n                    for(let\
    \ k = j; k < a; k++){\n                        if(a % k === 0){\n            \
    \                if(i * j * k === a){\n                                return\
    \ true;\n                            }\n                        }\n          \
    \          }\n                }\n            }\n        }\n    }\n    return false;\n\
    }", "    //Write your code here!\n}\n\n", "    if(typeof a !== \"number\"){\n\
    \        throw \"Error\";\n    }\n    if(a > 100){\n        throw \"Number is\
    \ too big\";\n    }\n    var primes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31,\
    \ 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n    for(var i = 0;\
    \ i < primes.length; i++){\n        for(var j = 0; j < primes.length; j++){\n\
    \            for(var k = 0; k < primes.length; k++){\n                if(primes[i]\
    \ * primes[j] * primes[k] === a){\n                    return true;\n        \
    \        }\n            }\n        }\n    }\n    return false;\n}\n", "    var\
    \ a = 12;\n    var first = 2;\n    var second = 3;\n    var third = 5;\n    return\
    \ first * second * third == a;\n}\nis_multiply_prime();\n", "    let primes =\
    \ [];\n    let t = 3;\n    if(a === 1) {\n        return true;\n    }\n    for(let\
    \ i = 2; i < a; i++){\n        for(let j = 2; j <= i; j++){\n            if(i\
    \ === j){\n                primes.push(i);\n            }\n            if(i %\
    \ j === 0){\n                break;\n            }\n        }\n    }\n    while(t\
    \ < a){\n        let primes_two = [];\n        for(let k = 0; k < primes.length;\
    \ k++){\n            if(t % primes[k] === 0){\n                primes_two.push(primes[k]);\n\
    \            }\n        }\n        if(primes_two.length === 3){\n            return\
    \ true;\n        }\n        t++;\n    }\n    return false;\n}", "\tvar check =\
    \ a;\n\tvar y = 1;\n\tvar num = 2;\n\tvar nums = [];\n\tvar prime = [];\n\tfor(var\
    \ i = 0;i < check;i++){\n\t\tnums.push(i);\n\t}\n\tnums.shift();\n\tnums.shift();\n\
    \twhile(true){\n\t\tif(check%num === 0){\n\t\t\ty = y * num;\n\t\t\tprime.push(num);\n\
    \t\t\tcheck = check/num;\n\t\t}\n\t\tif(y === a){\n\t\t\tif(prime.length === 3){\n\
    \t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\t\tnum++;\n\t}\n}",
  "  let primes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59,\
    \ 61, 67, 71, 73, 79, 83, 89, 97];\n  for(let i = 0; i < primes.length; i++){\n\
    \    for(let j = 0; j < primes.length; j++){\n      for(let k = 0; k < primes.length;\
    \ k++){\n        if(primes[i] * primes[j] * primes[k] == a){\n          return\
    \ true;\n        }\n      }\n    }\n  }\n  return false;\n}\n", "    let a1 =\
    \ 2;\n    let a2 = 3;\n    let a3 = 5;\n    let res = a1 * a2 * a3;\n    if (a\
    \ == res) {\n        return true;\n    }\n    return false;\n}", "\tif (a < 1)\
    \ {\n\t\treturn \"Not an Interger\";\n\t}\n\tif (a >= 100) {\n\t\treturn \"Out\
    \ of scope\";\n\t}\n\tlet number = \"\";\n\tlet counter = 0;\n\tlet arr = [];\n\
    \tlet array = [];\n\tfor (let i = 2; i <= a; i++) {\n\t\tif (a % i == 0) {\n\t\
    \t\tnumber += i + \" \";\n\t\t\tarr.push(i);\n\t\t\tcounter++;\n\t\t}\n\t}\n\t\
    if (counter == 3) {\n\t\tfor (let j = 0; j < arr.length; j++) {\n\t\t\tfor (let\
    \ i = 2; i <= arr[j]; i++) {\n\t\t\t\tif (arr[j] % i == 0) {\n\t\t\t\t\tcounter++;\n\
    \t\t\t\t}\n\t\t\t}\n\t\t\tif (counter == 2) {\n\t\t\t\tarray.push(arr[j]);\n\t\
    \t\t}\n\t\t\tcounter = 0;\n\t\t}\n\t\tif (array.length == 3) {\n\t\t\treturn true;\n\
    \t\t}\n\t\telse {\n\t\t\treturn false;\n\t\t}\n\t}\n\telse {\n\t\treturn false;\n\
    \t}\n}\n", "\tif ( a % 2 != 0 && a % 3 != 0 && a % 5 != 0){\n\t\treturn false;\n\
    \t} else if ( a % 2 === 0 && a % 3 === 0 && a % 5 === 0){\n\t\treturn true;\n\t\
    } else if ( a % 2 === 0 && a % 3 === 0){\n\t\treturn true;\n\t} else if ( a %\
    \ 2 === 0 && a % 5 === 0){\n\t\treturn true;\n\t} else if ( a % 3 === 0 && a %\
    \ 5 === 0){\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\n", "   \
    \ for(var i = 2; i < a/2; i++){\n        for(var j = 2; j < a/2; j++){\n     \
    \       for(var k = 2; k < a/2; k++){\n                if((i*j*k) === a && i <\
    \ 100 && j < 100 && k < 100){\n                    return true;\n            \
    \    }\n            }\n        }\n    }\n    return false;\n}\n", "\tif(a==0){\n\
    \t\treturn false;\n\t}else if(a==1){\n\t\treturn true;\n\t}else{\n\t\tfor(var\
    \ i=2;i<=a;i++){\n\t\t\tif(a%i==0){\n\t\t\t\ta/=i;\n\t\t\t\ti--;\n\t\t\t}\n\t\t\
    }\n\t\tif(a==1){\n\t\t\treturn true;\n\t\t}else{\n\t\t\treturn false;\n\t\t}\n\
    \t}\n}", "\tvar arr = prime_numbers(a);\n\n\tfor(var i = 0; i < arr.length; i++){\n\
    \t\tfor(var j = 0; j < arr.length; j++){\n\t\t\tfor(var k = 0; k < arr.length;\
    \ k++){\n\t\t\t\tif(arr[i] * arr[j] * arr[k] == a){\n\t\t\t\t\treturn true;\n\t\
    \t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn false;\n}", "    for(let i = 2; i < a;\
    \ i++){\n        for(let j = 2; j < a; j++){\n            for(let k = 2; k < a;\
    \ k++){\n                if(a === i * j * k){\n                    return true;\n\
    \                }\n            }\n        }\n    }\n    return false;\n}", " \
    \ var l = primes(a);\n  var k = l.length;\n  var j = 0;\n  while (j < k && l[j]\
    \ < a/3) {\n    if (is_multiply_prime_helper(a, l[j])) {\n      return true;\n\
    \    }\n    j++;\n  }\n  return false;\n}\n", "    var prime=true;\n    for(i=2;i<=a;i++){\n\
    \        for(j=2;j<=a;j++){\n            if(i!=j && i*j==a){\n               \
    \ for(k=2;k<=i;k++){\n                    if(i%k==0){\n                      \
    \  break;\n                    }\n                }\n                if(k==i){\n\
    \                    for(k=2;k<=j;k++){\n                        if(j%k==0){\n\
    \                            break;\n                        }\n             \
    \       }\n                    if(k==j){\n                        return true;\n\
    \                    }\n                }\n            }\n        }\n    }\n \
    \   return false;\n}", "\tvar primes =[];\n\tfor(var i = 2; i <= a; i++){\n\t\t\
    var prime = true;\n\t\tfor(var k = 2; k < i; k++){\n\t\t\tif(i % k == 0){\n\t\t\
    \t\tprime = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(prime){\n\t\t\tprimes.push(i);\n\
    \t\t}\n\t}\n\tfor(var i = 0; i < primes.length; i++){\n\t\tfor(var k = 0; k <\
    \ primes.length; k++){\n\t\t\tfor(var j = 0; j < primes.length; j++){\n\t\t\t\t\
    if(primes[i] * primes[k] * primes[j] == a){\n\t\t\t\t\treturn true;\n\t\t\t\t\
    }\n\t\t\t}\n\t\t}\n\t}\n\treturn false;\n}", "\tvar i = 1;\n\tif (a%2 == 0){\n\
    \t\ti *= 2;\n\t}\n\tif (a%3 == 0){\n\t\ti *= 3;\n\t}\n\tif (a%5 == 0){\n\t\ti\
    \ *= 5;\n\t}\n\tif (a%7 == 0){\n\t\ti *= 7;\n\t}\n\tif (a%11 == 0){\n\t\ti *=\
    \ 11;\n\t}\n\tif (a%13 == 0){\n\t\ti *= 13;\n\t}\n\tif (a%17 == 0){\n\t\ti *=\
    \ 17;\n\t}\n\tif (a%19 == 0){\n\t\ti *= 19;\n\t}\n\tif (a%23 == 0){\n\t\ti *=\
    \ 23;\n\t}\n\tif (a%29 == 0){\n\t\ti *= 29;\n\t}\n\tif (a%31 == 0){\n\t\ti *=\
    \ 31;\n\t}\n\tif (a%37 == 0){\n\t\ti *= 37;\n\t}\n\tif (a%41 == 0){\n\t\ti *=\
    \ 41;\n\t}\n\tif (a%43 == 0){\n\t\ti *= 43;\n\t}\n\tif (a%47 == 0){\n\t\ti *=\
    \ 47;\n\t}\n\tif (a%53 == 0){\n\t\ti *= 53;\n\t}\n\tif (a%59 == 0){\n\t\ti *=\
    \ 59;\n\t}\n\tif (a%61 == 0){\n\t\ti *= 61;\n\t}\n\tif (a%67 == 0){\n\t\ti *=\
    \ 67;\n\t}\n\tif (a%71 == 0){\n\t\ti *= 71;\n\t}\n\tif (a%73 == 0){\n\t\ti *=\
    \ 73;\n\t}\n\tif (a%79 == 0){\n\t\ti *= 79;\n\t}\n\tif (a%83 == 0){\n\t\ti *=\
    \ 83;\n\t}\n\tif (a%89 == 0){\n\t\ti *= 89;\n\t}\n", "\tlet primes= getPrimes(a);\n\
    \tlet n;\n\tfor(let i=0; i<primes.length; i++){\n\t\tif(a%primes[i]==0){\n\t\t\
    \ta/=primes[i];\n\t\t\ti=0;\n\t\t\tn++;\n\t\t}\n\t\tif(n==3){\n\t\t\treturn true;\n\
    \t\t}\n\t}\n\treturn false;\n}"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

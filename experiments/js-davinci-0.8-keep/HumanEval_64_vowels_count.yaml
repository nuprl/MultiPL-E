name: HumanEval_64_vowels_count
language: js
prompt: "//Write a function vowels_count which takes a string representing\n// a word\
  \ as input and returns the number of vowels in the string.\n// Vowels in this case\
  \ are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n// vowel, but only when it is\
  \ at the end of the given word.\n// Example:\n// >>> vowels_count(\"abcde\")\n//\
  \ 2\n// >>> vowels_count(\"ACEDY\")\n// 3\nfunction vowels_count(s){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = vowels_count;\n  assert.deepEqual(candidate(\"abcde\"),2);\n  assert.deepEqual(candidate(\"\
  Alone\"),3);\n  assert.deepEqual(candidate(\"key\"),2);\n  assert.deepEqual(candidate(\"\
  bye\"),1);\n  assert.deepEqual(candidate(\"keY\"),2);\n  assert.deepEqual(candidate(\"\
  bYe\"),1);\n  assert.deepEqual(candidate(\"ACEDY\"),3);\n}\n\ntest();"
completions: ["    var res = 0;\n    for(var i = 0; i < s.length; i++){\n        if(s[i]\
    \ === 'a' || s[i] === 'e' || s[i] === 'i' || s[i] === 'o' || s[i] === 'u'){\n\
    \            res += 1;\n        }\n        if(s[i] === 'y' && i === s.length -\
    \ 1){\n            res += 1;\n        }\n    }\n    return res;\n}\n", "    var\
    \ re = /[aeiou]/gi;\n    return (s.replace(re, \"\").length);\n}\n\n", "    var\
    \ count = 0;\n    var string = s.toLowerCase();\n    for(var i = 0; i < string.length;\
    \ i++){\n        if(string[i] == \"a\" || string[i] == \"e\" || string[i] == \"\
    i\" || string[i] == \"o\" || string[i] == \"u\"){\n            count++;\n    \
    \    }\n    }\n    if(string[string.length - 1] == \"y\"){\n        count++;\n\
    \    }\n    return count;\n}\n", "\tvowels=0;\n\tfor(var i=0;i<s.length;i++){\n\
    \t\tif(s[i]=='a'||s[i]=='e'||s[i]=='i'||s[i]=='o'||s[i]=='u'||(s[i]=='y'&&i==s.length-1)){\n\
    \t\t\tvowels+=1;\n\t\t}\n\t}\n\treturn vowels;\n}\n", "  var num=0;\n  var vowels=[\"\
    a\",\"e\",\"i\",\"o\",\"u\"];\n  for(var i=0;i<s.length;i++){\n    if(vowels.indexOf(s[i].toLowerCase())!=-1){\n\
    \      num++;\n    }\n  }\n  return num;\n}\n", "    var v = ['a', 'e', 'i', 'o',\
    \ 'u'];\n    var count = 0;\n    var last_letter = s[s.length - 1];\n    if (v.indexOf(last_letter)\
    \ != -1) {\n        count += 1;\n    }\n    s = s.toLowerCase();\n    for (var\
    \ i = 0; i < s.length; i++) {\n        if (v.indexOf(s[i]) != -1) {\n        \
    \    count += 1;\n        }\n    }\n    return count;\n}\n\n", "    s = s.toLowerCase();\n\
    \    var count = 0;\n    for(var i = 0; i < s.length; i++){\n        if(s[i] ===\
    \ 'a' || s[i] === 'e' || s[i] === 'i' || s[i] === 'o' || s[i] === 'u'){\n    \
    \        count += 1;\n        }\n    }\n    if(s[s.length - 1] === 'y'){\n   \
    \     count += 1;\n    }\n    return count;\n}\n", "    if(s[s.length-1]==\"y\"\
    ){\n        return s.match(/[aeiou]/gi).length;\n    }else{\n        return s.match(/[aeiou]/gi).length\
    \ - 1;\n    }\n}\n", "  return s.replace(/[^aeiou]/gi, '').length;\n}\n", "  var\
    \ count = 0;\n  var vowels = 'aeiouyAEIOUY';\n  for(var i = 0; i < s.length; i++){\n\
    \    if(vowels.indexOf(s[i]) != -1){\n      count++;\n    }\n  }\n  return count;\n\
    }\n", "    var c = 0;\n    var l = s.length;\n    for(var i = 0; i < l; i++){\n\
    \        if(s[i] === 'a' || s[i] === 'e' || s[i] === 'i' || s[i] === 'o' || s[i]\
    \ === 'u' || s[i] === 'y'){\n            c++;\n        }\n    }\n    return c;\n\
    }\n", "  var counter = 0;\n  for(var i = 0; i < s.length; i++){\n    if(s[i] ===\
    \ 'a' || s[i] === 'e' || s[i] === 'i' || s[i] === 'o' || s[i] === 'u' || s[i]\
    \ === 'y'){\n      counter += 1;\n    }\n  }\n  return counter;\n}\n", "    var\
    \ vowels = 'aeiou';\n    var count = 0;\n    for(var i = 0; i < s.length; i++){\n\
    \        if(vowels.indexOf(s[i]) !== -1){\n            count++;\n        }\n \
    \   }\n    return count;\n}\n", "\t// Your code here\n\tvar vowels = new Set(['a',\
    \ 'e', 'i', 'o', 'u']);\n\tvar count = 0;\n\tfor (var i = 0; i < s.length; i++)\
    \ {\n\t\tif (vowels.has(s[i])) {\n\t\t\tcount++;\n\t\t}\n\t}\n\tif (s[s.length\
    \ - 1] == 'y') {\n\t\tcount++;\n\t}\n\treturn count;\n}\n", "\n}\n", "    let\
    \ word = s.toLowerCase();\n    let count = 0;\n    for(let i = 0; i < word.length;\
    \ i++){\n        if(word[i] == 'a' || word[i] == 'e' || word[i] == 'i' || word[i]\
    \ == 'o' || word[i] == 'u'){\n            count++;\n        }\n    }\n    return\
    \ count;\n}", "    var vowels = ['a', 'e', 'i', 'o', 'u'];\n    var count = 0;\n\
    \    for (var i = 0; i < s.length; i++){\n        if (vowels.indexOf(s[i].toLowerCase())\
    \ !== -1){\n            count++;\n        }\n    }\n    return count;\n}", " \
    \  var str = s.toLowerCase();\n   var sum = 0;\n   var vowel = [\"a\",\"e\",\"\
    i\",\"o\",\"u\"];\n   for(var i = 0; i < str.length; i++){\n      if(vowel.indexOf(str[i])\
    \ !== -1){\n         sum += 1;\n      }\n   }\n   return sum;\n}\n", "\tvar n\
    \ = 0;\n\tfor(var i = 0; i < s.length; i++){\n\t\tvar c = s.charAt(i);\n\t\tif(c\
    \ === 'a' || c === 'e' || c === 'i' || c === 'o' || c === 'u' || c === 'y'){\n\
    \t\t\tn++;\n\t\t}\n\t}\n\tif(s.charAt(s.length - 1) !== 'y'){\n\t\treturn n;\n\
    \t}\n\treturn n - 1;\n}", "    var count = 0;\n    for(var i = 0; i < s.length;\
    \ i++){\n        if(s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' ||\
    \ s[i] == 'u' || s[i] == 'y'){\n            count++;\n        }\n    }\n    return\
    \ count;\n}"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

name: HumanEval_155_even_odd_count
language: js
prompt: "//Given an integer. return a tuple that has the number of even and odd digits\
  \ respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
  \ ==> (1, 2)\nfunction even_odd_count(num){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = even_odd_count;\n  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
  \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
  \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
  \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
  \ 0]);\n}\n\ntest();"
completions: ["    let even = 0;\n    let odd = 0;\n    for(let i = 0; i < Math.abs(num).toString().length;\
    \ i++){\n        if(Math.abs(num).toString()[i] % 2 === 0){\n            even++;\n\
    \        } else {\n            odd++;\n        }\n    }\n    return [even, odd];\n\
    }", "    let count = [0, 0];\n    for (let x = Math.abs(num); x >= 1; x = Math.floor(x\
    \ / 10)){\n        if (x % 2 === 0){\n            count[0]++;\n        }\n   \
    \     else{\n            count[1]++;\n        }\n    }\n    return [count[0],\
    \ count[1]];\n}", "    let even = 0;\n    let odd = 0;\n    let newNum = Math.abs(num);\n\
    \    let numString = newNum.toString();\n    for(let i = 0; i < numString.length;\
    \ i++){\n        if(numString[i] % 2 === 0){\n            even++;\n        }else{\n\
    \            odd++;\n        }\n    }\n    return [even, odd];\n}\n", "    //\
    \ let even = 0;\n    // let odd = 0;\n    // while(num !== 0){\n    //     if(num\
    \ % 2 === 0){\n    //         even++\n    //     }else{\n    //         odd++\n\
    \    //     }\n    //     num = Math.floor(num / 10)\n    // }\n    // return\
    \ [even, odd]\n    num = num.toString().split('')\n    let even = num.filter(num\
    \ => num % 2 === 0).length\n    let odd = num.filter(num => num % 2 !== 0).length\n\
    \    return [even, odd]\n}\n", "    var even = 0;\n    var odd = 0;\n    var nums\
    \ = Math.abs(num).toString();\n    for(var i = 0; i < nums.length; i++){\n   \
    \     if(nums[i] % 2 == 0){\n            even += 1;\n        }else{\n        \
    \    odd += 1;\n        }\n    }\n    return [even, odd];\n}", "    let even =\
    \ 0, odd = 0\n    let newNum = num.toString().split('')\n    for(let i = 0; i\
    \ < newNum.length; i++){\n        if(newNum[i] % 2 === 0){\n            even++\n\
    \        }else{\n            odd++\n        }\n    }\n    return [even, odd]\n\
    }", "    var arr = String(num).split('');\n    var even = 0;\n    var odd = 0;\n\
    \    for(var i = 0; i < arr.length; i++){\n        if(arr[i] % 2 == 0){\n    \
    \        even++;\n        }\n        else{\n            odd++;\n        }\n  \
    \  }\n    return [even, odd];\n}", "    let even = 0, odd = 0\n    if(num == 0){\n\
    \        return(0,0)\n    }\n    while(num != 0){\n        if(num % 2 == 0){\n\
    \            even = even + 1\n        }\n        else{\n            odd = odd\
    \ + 1\n        }\n        num = Math.floor(num / 10)\n    }\n    return (even,\
    \ odd)\n}\n", "    var result = [];\n    var count = 0;\n    var even = 0;\n \
    \   var odd = 0;\n    result = (num.toString()).split(\"\");\n    while(count\
    \ < result.length){\n        if(result[count] % 2 == 0){\n            even++;\n\
    \        }\n        else{\n            odd++;\n        }\n        count++;\n \
    \   }\n    return (even, odd);\n}\n", "    let number = Math.abs(num)\n    let\
    \ even = 0\n    let odd = 0\n    while(number > 0){\n        let digit = number\
    \ % 10\n        if(digit % 2 === 0){\n            even += 1\n        }else{\n\
    \            odd += 1\n        }\n        number = Math.floor(number / 10)\n \
    \   }\n    return [even, odd]\n}", "  let even=0;\n  let odd=0;\n  let numString=num.toString().split('');\n\
    \  for(let i=0;i<numString.length;i++){\n    if(numString[i]%2===0){\n      even++;\n\
    \    }\n    else{\n      odd++;\n    }\n  }\n  return [even,odd];\n}", "    var\
    \ even = 0, odd = 0;\n    while(num != 0){\n        if(num % 2 == 0){\n      \
    \      even += 1;\n        }else{\n            odd += 1;\n        }\n        num\
    \ = parseInt(num / 10);\n    }\n    return [even, odd];\n}\n", "    // code here\n\
    }\n", "\tlet evens = 0;\n\tlet odds = 0;\n\tlet counter = 0;\n\twhile(num > 0){\n\
    \t\tif(counter % 2 === 0){\n\t\t\tevens++;\n\t\t}else{\n\t\t\todds++;\n\t\t}\n\
    \t\tnum = Math.floor(num / 10);\n\t\tcounter++;\n\t}\n\treturn [evens, odds];\n\
    }\n", "    let even = 0;\n    let odd = 0;\n    for(let n of num.toString()){\n\
    \        if(n % 2 === 0){\n            even++\n        } else {\n            odd++\n\
    \        }\n    }\n    return [even, odd]\n}\n", "    let even = 0;\n    let odd\
    \ = 0;\n    let strNum = Math.abs(num).toString();\n    strNum.split('').forEach(e\
    \ => e % 2 === 0 ? even++ : odd++);\n    return [even, odd];\n}\n", "    var odd\
    \ = 0;\n    var even = 0;\n    var num = num.toString();\n    for(var i = 0; i\
    \ < num.length; i++){\n        if(num[i] % 2 === 0){\n            even ++;\n \
    \       }\n        else{\n            odd ++;\n        }\n    }\n    return [even,\
    \ odd];\n}", "    var str = num.toString();\n    var even_nums = 0;\n    var odd_nums\
    \ = 0;\n    for(var i = 0; i < str.length; i++){\n        if(parseInt(str[i])\
    \ % 2 == 0){\n            even_nums++;\n        }else{\n            odd_nums++;\n\
    \        }\n    }\n    return [even_nums, odd_nums];\n}", "    var arr = num.toString().split('');\n\
    \    var newArr = [];\n    var x = 0;\n    var y = 0;\n    for(var i = 0; i <\
    \ arr.length; i++){\n        if(arr[i] % 2 == 0){\n            x++;\n        }\n\
    \        else if(arr[i] % 2 != 0){\n            y++;\n        }\n    }\n    return\
    \ newArr = [x, y];\n}", "    var even = 0;\n    var odd = 0;\n    while(num >\
    \ 0){\n        if(num % 2 == 0){\n            even++;\n        }\n        else{\n\
    \            odd++;\n        }\n        num = parseInt(num / 10);\n    }\n   \
    \ return [even, odd];\n}"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

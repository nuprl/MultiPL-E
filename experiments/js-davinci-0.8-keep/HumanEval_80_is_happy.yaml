name: HumanEval_80_is_happy
language: js
prompt: "//You are given a string s.\n// Your task is to check if the string is happy\
  \ or not.\n// A string is happy if its length is at least 3 and every 3 consecutive\
  \ letters are distinct\n// For example:\n// is_happy(a) => False\n// is_happy(aa)\
  \ => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n// is_happy(adb)\
  \ => True\n// is_happy(xyy) => False\nfunction is_happy(s){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = is_happy;\n  assert.deepEqual(candidate(\"a\"),false);\n  assert.deepEqual(candidate(\"\
  aa\"),false);\n  assert.deepEqual(candidate(\"abcd\"),true);\n  assert.deepEqual(candidate(\"\
  aabb\"),false);\n  assert.deepEqual(candidate(\"adb\"),true);\n  assert.deepEqual(candidate(\"\
  xyy\"),false);\n  assert.deepEqual(candidate(\"iopaxpoi\"),true);\n  assert.deepEqual(candidate(\"\
  iopaxioi\"),false);\n}\n\ntest();"
completions: ["    let str = s.toLowerCase();\n    if(str.length < 3) return false;\n\
    \    else {\n        for(let i = 0; i < str.length; i++){\n            if(str[i]\
    \ == str[i+1] && str[i+1] == str[i+2]) return false;\n        }\n        return\
    \ true;\n    }\n}", "    return s.length >= 3 && /^[a-zA-Z]*([a-zA-Z])\\1[a-zA-Z]*$/.test(s)\n\
    }", "    return s.length >= 3 && s.split('').every((v,i,a) => i < a.length - 2\
    \ ? v !== a[i+1] && v !== a[i+2] : true)\n}\n", "    if(s.length < 3) return false;\n\
    \    let found = false;\n    for(let i = 0; i < s.length - 2; i++){\n        if(s[i]\
    \ === s[i + 1] || s[i] === s[i + 2] || s[i + 1] === s[i + 2]){\n            found\
    \ = true;\n            break;\n        }\n    }\n    return !found;\n}\n", " \
    \   if(s.length<3){\n        return false;\n    }\n    else{\n        let count=0;\n\
    \        for(let i=0;i<s.length-2;i++){\n            if(s[i]!=s[i+1] && s[i]!=s[i+2]\
    \ && s[i+1]!=s[i+2]){\n                count++;\n            }\n        }\n  \
    \      if(count==s.length-2){\n            return true;\n        }\n        else{\n\
    \            return false;\n        }\n    }\n}", "    if(s.length < 3) return\
    \ false;\n    for(var i = 0; i < s.length - 2; i++){\n        if(s[i] === s[i+1]\
    \ || s[i] === s[i+2] || s[i+1] === s[i+2]) return false;\n    }\n    return true;\n\
    }", "    if(s.length<3){\n        return false;\n    }\n    if(s.length===3){\n\
    \        if(s[0]===s[1] || s[0]===s[2] || s[1]===s[2]){\n            return false;\n\
    \        }else{\n            return true;\n        }\n    }\n    if(s.length>3){\n\
    \        for(var i=0;i<s.length-2;i++){\n            if(s[i]===s[i+1] || s[i]===s[i+2]\
    \ || s[i+1]===s[i+2]){\n                return false;\n            }\n       \
    \ }\n        return true;\n    }\n}\n", "    let result = false;\n    if(s.length\
    \ >= 3){\n        let i = 0;\n        while(i < s.length -2){\n            if(s[i]\
    \ !== s[i+1] && s[i] !== s[i+2] && s[i+1] !== s[i+2]){\n                result\
    \ = true;\n            } else {\n                result = false;\n           \
    \     break;\n            }\n            i += 1;\n        }\n    }\n    return\
    \ result;\n}", "    var result = false;\n    var i;\n    if (s.length < 3) {\n\
    \        return result;\n    }\n    for (i = 0; i < s.length; i+=3) {\n      \
    \  if (s[i] !== s[i+1] && s[i] !== s[i+2] && s[i+1] !== s[i+2]) {\n          \
    \  result = true;\n        } else {\n            result = false;\n           \
    \ break;\n        }\n    }\n    return result;\n}", "    var count=0;\n    var\
    \ b=s.length;\n    var c=b-2;\n    for(var i=0;i<=c;i++){\n        var letter=s.charAt(i);\n\
    \        var letter2=s.charAt(i+1);\n        var letter3=s.charAt(i+2);\n    \
    \    if(letter!=letter2&&letter!=letter3&&letter2!=letter3){\n            count++;\n\
    \        }\n    }\n    if(count==c+1){\n        return true;\n    }\n    else{\n\
    \        return false;\n    }\n}", "    if(s.length<3){\n        return false;\n\
    \    }\n    for(let i=0;i<s.length-2;i++){\n        if(s[i]==s[i+1] || s[i]==s[i+2]\
    \ || s[i+1]==s[i+2]){\n            return false;\n        }\n    }\n    return\
    \ true;\n}", "    if(s.length >= 3){\n        for(let i = 0; i < s.length; i+=3){\n\
    \            let a = s[i];\n            let b = s[i+1];\n            let c = s[i+2];\n\
    \            if(a !== b && b !== c && a !== c){\n                return true;\n\
    \            } else {\n                return false;\n            }\n        }\n\
    \    } else {\n        return false;\n    }\n}", "    var consecutiveLetters =\
    \ [];\n    for (var i = 0; i < s.length; i++) {\n        consecutiveLetters.push(s[i]);\n\
    \        if (consecutiveLetters.length === 3 && (consecutiveLetters[0] === consecutiveLetters[1]\
    \ || consecutiveLetters[1] === consecutiveLetters[2] || consecutiveLetters[0]\
    \ === consecutiveLetters[2])) {\n            return false;\n        }\n      \
    \  if (consecutiveLetters.length === 3) {\n            consecutiveLetters = [];\n\
    \        }\n    }\n    return true;\n}\n", "    return s.length > 2 && !/(.).\\\
    1.\\1/.test(s);\n}", "    let arr = s.split('')\n    if(arr.length < 3){\n   \
    \     return false\n    }\n    for(let i = 0; i < arr.length; i++){\n        if(arr[i]\
    \ === arr[i+1] && arr[i+1] === arr[i+2]){\n            return false\n        }\n\
    \    }\n    return true\n}", "    let myArr = s.split('');\n    let bool = true;\n\
    \    if(myArr.length < 3){\n        return false;\n    }\n    for(let i = 0; i\
    \ < myArr.length; i+=3){\n        if(myArr[i] === myArr[i+1] || myArr[i] === myArr[i+2]\
    \ || myArr[i+1] === myArr[i+2]){\n            bool = false;\n        }\n    }\n\
    \    return bool;\n}\n", "    return s.length>2&&s.split('').map((e,i,a)=>i>0?e!==a[i-1]:false).filter(e=>e).length===s.length-1;\n\
    }", "    if(s.length < 3) return false;\n    for(let i = 0; i < s.length - 2;\
    \ i++){\n        if(s[i] === s[i + 1] || s[i] === s[i + 2] || s[i + 1] === s[i\
    \ + 2]){\n            return false;\n        }\n    }\n    return true;\n}\n",
  "    return /(.).*\\1/g.test(s.slice(0,3))?false:true;\n}\n", "    if(s.length <\
    \ 3) return false;\n    for(let i = 0; i < s.length - 2; i++){\n        if(s[i]\
    \ === s[i + 1] || s[i] === s[i + 2] || s[i + 1] === s[i + 2]) return false;\n\
    \    }\n    return true;\n}"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

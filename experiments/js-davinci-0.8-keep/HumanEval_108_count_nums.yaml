name: HumanEval_108_count_nums
language: js
prompt: "//Write a function count_nums which takes an array of integers and returns\n\
  // the number of elements which has a sum of digits > 0.\n// If a number is negative,\
  \ then its first signed digit will be negative:\n// e.g. -123 has signed digits\
  \ -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1, 11, -11]) ==\
  \ 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums(arr){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = count_nums;\n  assert.deepEqual(candidate([]),0);\n  assert.deepEqual(candidate([-1,\
  \ -2, 0]),0);\n  assert.deepEqual(candidate([1, 1, 2, -2, 3, 4, 5]),6);\n  assert.deepEqual(candidate([1,\
  \ 6, 9, -6, 0, 1, 5]),5);\n  assert.deepEqual(candidate([1, 100, 98, -7, 1, -1]),4);\n\
  \  assert.deepEqual(candidate([12, 23, 34, -45, -56, 0]),5);\n  assert.deepEqual(candidate([0,\
  \ 1]),1);\n  assert.deepEqual(candidate([1]),1);\n}\n\ntest();"
completions: ["    let sum = 0;\n    arr.forEach(function(num){\n        let numStr\
    \ = num.toString();\n        let sum = 0;\n        for(let i = 0; i < numStr.length;\
    \ i++){\n            sum += parseInt(numStr[i]);\n        }\n        if(sum >\
    \ 0){\n            sum++;\n        }\n    });\n    return sum;\n}\n", "    var\
    \ count = 0;\n    for(var i = 0; i < arr.length; i++){\n        var sum = 0;\n\
    \        if(arr[i] >= 0){\n            while(arr[i] > 0){\n                sum\
    \ += arr[i] % 10;\n                arr[i] = Math.floor(arr[i] / 10);\n       \
    \     }\n        }\n        else{\n            while(arr[i] < 0){\n          \
    \      sum += Math.abs(arr[i] % 10);\n                arr[i] = Math.ceil(arr[i]\
    \ / 10);\n            }\n        }\n        if(sum > 0){\n            count++;\n\
    \        }\n    }\n    return count;\n}", "  var count = 0;\n  for(i=0; i<arr.length;\
    \ i++){\n    if(get_signed_digits(arr[i]).reduce(function(a,b){return a+b;}) >\
    \ 0){\n      count++;\n    }\n  }\n  return count;\n}\n", "    if(arr.length ===\
    \ 0){\n        return 0;\n    }\n    let count = 0;\n    for(let i = 0; i < arr.length;\
    \ i++){\n        let sum = 0;\n        if(arr[i] < 0){\n            arr[i] = arr[i]\
    \ * -1;\n        }\n        while(arr[i] > 0){\n            sum += arr[i] % 10;\n\
    \            arr[i] = Math.floor(arr[i] / 10);\n        }\n        if(sum > 0){\n\
    \            count++;\n        }\n    }\n    return count;\n}\n", "    var count\
    \ = 0;\n    for(var i = 0; i < arr.length; i++){\n        // if(Math.abs(arr[i])\
    \ < 10){\n        //     if(arr[i] > 0){\n        //         count++;\n      \
    \  //     }\n        // }\n        // else{\n        //     var numbers = Math.abs(arr[i]).toString().split(\"\
    \");\n        //     var sum = 0;\n        //     for(var j = 0; j < numbers.length;\
    \ j++){\n        //         sum += parseInt(numbers[j]);\n        //     }\n \
    \       //     if(sum > 0){\n        //         count++;\n        //     }\n \
    \       // }\n        var number = Math.abs(arr[i]);\n        var sum = 0;\n \
    \       while(number > 0){\n            sum += number % 10;\n            number\
    \ = Math.floor(number / 10);\n        }\n        if(sum > 0){\n            count++;\n\
    \        }\n    }\n    return count;\n}\n", "    var count = 0;\n    for(var i\
    \ = 0; i < arr.length; i++){\n        var sum = 0;\n        var num = arr[i];\n\
    \        if(num < 0){\n            num = Math.abs(num);\n        }\n        while(num\
    \ > 0){\n            sum += num % 10;\n            num = Math.floor(num / 10);\n\
    \        }\n        if(sum > 0){\n            count++;\n        }\n    }\n   \
    \ return count;\n}\n", "\t//if no elements in array return 0\n\tif(arr.length\
    \ == 0){\n\t\treturn 0;\n\t}\n\t//if first element in array is positive and string\
    \ length is 1 return true\n\tif(arr[0] > 0 && arr[0].toString().length == 1){\n\
    \t\treturn 1;\n\t}\n\t//if first element in array is negative and string length\
    \ is 1 return true\n\tif(arr[0] < 0 && arr[0].toString().length == 1){\n\t\treturn\
    \ 1;\n\t}\n\t//if first element in array is positive\n\tif(arr[0] > 0){\n\t\t\
    //turn the number into a string\n\t\tvar str = arr[0].toString();\n\t\t//create\
    \ an array of each string element\n\t\tvar split = str.split(\"\");\n\t\t//make\
    \ an empty array to store the summation of digits\n\t\tvar sum = [];\n\t\t//loop\
    \ through the array\n\t\tfor(var i = 0; i < split.length; i++){\n\t\t\t//turn\
    \ the strings into integers and add them to sum array\n\t\t\tsum.push(parseInt(split[i]));\n\
    \t\t}\n\t\t//declare variable to store sum of digits\n\t\tvar sumOf = 0;\n\t\t\
    //loop through the sum array\n\t\tfor(var i = 0; i < sum.length; i++){\n\t\t\t\
    //add the array elements together\n\t\t\tsumOf += sum[i];\n\t\t}\n\t\t//if the\
    \ sum is greater than 0 return true\n\t\tif(sumOf > 0){\n\t\t\treturn 1;\n\t\t\
    }\n\t}\n\t//if first element in array is negative\n\tif(arr[0] < 0){\n\t\t//take\
    \ the negative sign out\n\t\tvar fix = arr[0].toString().substring(1);\n\t\t//turn\
    \ number into a string\n\t\tvar str = fix.toString();\n\t\t//create an array of\
    \ each string element\n\t\tvar split = str.split(\"\");\n\t\t//make an empty array\
    \ to store the summation of digits\n\t\tvar sum = [];\n\t\t//loop through the\
    \ array\n\t\tfor(", "    let count = 0;\n    for(let i = 0; i < arr.length; i++){\n\
    \        if(arr[i] < 0){\n            count += Math.abs(arr[i] % 10);\n      \
    \  }else{\n            count += arr[i] % 10;\n        }\n    }\n    return count;\n\
    }", "  return arr.reduce(function(acc, element){\n    return acc + (signed_sum(element)\
    \ > 0);\n  }, 0);\n}", "\tvar count = 0;\n\tvar digit = 0;\n\tvar sum = 0;\n\t\
    for(var i = 0; i < arr.length; i++){\n\t\tvar num = arr[i];\n\t\t//If the number\
    \ is negative, we need to find the first digit.\n\t\tif(num < 0){\n\t\t\tnum =\
    \ Math.abs(num);\n\t\t\tvar str = num.toString();\n\t\t\tdigit = parseInt(str[0]);\n\
    \t\t\tsum = sum + digit;\n\t\t}\n\t\t//Find the sum of all the digits\n\t\twhile(num\
    \ > 0){\n\t\t\tdigit = num % 10;\n\t\t\tsum = sum + digit;\n\t\t\tnum = Math.floor(num\
    \ / 10);\n\t\t}\n\t\t//Count the elements that have a sum of digits > 0\n\t\t\
    if(sum > 0){\n\t\t\tcount = count + 1;\n\t\t}\n\t\tsum = 0;\n\t}\n\treturn count;\n\
    }\n", "  var sum = 0;\n  for(i = 0; i < arr.length; i++){\n    if(arr[i] > 0){\n\
    \      sum = sum + arr[i];\n    }\n    else{\n      sum = sum - arr[i];\n    }\n\
    \  }\n  return sum;\n}\n\n", "  // your code goes here\n}\n", "    return arr.filter(x\
    \ => {\n        return sum_digits(x) > 0;\n    }).length;\n}\n", "\treturn arr.filter(x\
    \ => {\n\t\tif (x > 0) {\n\t\t\treturn x;\n\t\t}\n\t\tx = Math.abs(x);\n\t\tif\
    \ (x < 0) {\n\t\t\treturn x;\n\t\t}\n\t}).reduce((acc, val) => {\n\t\tlet sum\
    \ = 0;\n\t\tval = String(val);\n\t\tfor (let i = 0; i < val.length; i++){\n\t\t\
    \tsum += Number(val[i]);\n\t\t}\n\t\tif (sum > 0) {\n\t\t\tacc++;\n\t\t}\n\t\t\
    return acc;\n\t}, 0);\n}", "\tvar sum;\n\tvar count = 0;\n\tfor(var i = 0; i <\
    \ arr.length; i++){\n\t\tsum = 0;\n\t\tif(arr[i] < 0){\n\t\t\tarr[i] = arr[i]\
    \ * -1;\n\t\t}\n\t\tvar num = arr[i].toString();\n\t\tfor(var j = 0; j < num.length;\
    \ j++){\n\t\t\tsum += parseInt(num[j]);\n\t\t}\n\t\tif(sum > 0){\n\t\t\tcount++;\n\
    \t\t}\n\t}\n\treturn count;\n}\n", "    let count = 0;\n    arr.forEach(num =>\
    \ {\n        let num_str = num.toString();\n        if (num < 0) num_str = num_str.substring(1);\n\
    \        let sum = 0;\n        for (let i = 0; i < num_str.length; i++){\n   \
    \         sum += parseInt(num_str[i]);\n        }\n        if (sum > 0) count++;\n\
    \    });\n    return count;\n}\n", "    var res = 0;\n    for(var i = 0; i < arr.length;\
    \ i++){\n        var sum = 0;\n        var num = Math.abs(arr[i]);\n        while(num\
    \ > 0){\n            sum += num % 10;\n            num = Math.floor(num / 10);\n\
    \        }\n        if(sum > 0){\n            res++;\n        }\n    }\n    return\
    \ res;\n}", "  let count = 0;\n  arr.forEach(function(item){\n    if(item > 0){\n\
    \      let digits = item.toString().split('');\n      let result = 0;\n      digits.forEach(function(number){\n\
    \        result += parseInt(number);\n      });\n      if(result > 0){\n     \
    \   count += 1;\n      }\n    }else{\n      let number = item.toString().split('');\n\
    \      let res = 0;\n      number.forEach(function(num){\n        res += parseInt(num);\n\
    \      });\n      if(res + 1 > 0){\n        count += 1;\n      }\n    }\n  });\n\
    \  return count;\n}\n", "\treturn arr.filter(function(v){\n\t\tvar sum = 0;\n\t\
    \tfor(var i = 0; i < v.toString().length; i++){\n\t\t\tsum += parseInt(v.toString()[i]);\n\
    \t\t}\n\t\treturn sum > 0;\n\t}).length;\n}\n", "  return arr.filter(function(x){\n\
    \    return (x.toString().split('').reduce(function(previousValue, currentValue){\n\
    \      return +previousValue + +currentValue;\n    }, 0) > 0);\n  }).length;\n\
    }\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

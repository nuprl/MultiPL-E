name: HumanEval_146_specialFilter
language: js
prompt: "//Write a function that takes an array of numbers as input and returns \n\
  // the number of elements in the array that are greater than 10 and both \n// first\
  \ and last digits of a number are odd (1, 3, 5, 7, 9).\n// For example:\n// specialFilter([15,\
  \ -73, 14, -15]) => 1 \n// specialFilter([33, -2, -3, 45, 21, 109]) => 2\nfunction\
  \ specialFilter(nums){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = specialFilter;\n  assert.deepEqual(candidate([5, -2, 1, -5]),0);\n  assert.deepEqual(candidate([15,\
  \ -73, 14, -15]),1);\n  assert.deepEqual(candidate([33, -2, -3, 45, 21, 109]),2);\n\
  \  assert.deepEqual(candidate([43, -12, 93, 125, 121, 109]),4);\n  assert.deepEqual(candidate([71,\
  \ -2, -33, 75, 21, 19]),3);\n  assert.deepEqual(candidate([1]),0);\n  assert.deepEqual(candidate([]),0);\n\
  }\n\ntest();"
completions: ["    return nums.filter(n => n > 10 && n.toString().length > 1 && n.toString()[0]\
    \ % 2 !== 0 && n.toString()[n.toString().length - 1] % 2 !== 0).length;\n}\n",
  "  let count = 0;\n  for(let num of nums){\n    if(num > 10 && num.toString().length\
    \ > 1){\n      let numStr = num.toString();\n      if(numStr[0] % 2 !== 0 && numStr[numStr.length\
    \ - 1] % 2 !== 0){\n        count++;\n      }\n    }\n  }\n  return count;\n}\n",
  "  let counter = 0;\n  for(let i = 0; i < nums.length; i++){\n    if(nums[i] > 10\
    \ && nums[i]%2 === 1 && nums[i]%10 === 1){\n      counter += 1;\n    }\n  }\n\
    \  return counter;\n}", "    let arr = nums.filter(n => n > 10);\n    let result\
    \ = 0;\n    for(let i = 0; i < arr.length; i++){\n        let num = arr[i];\n\
    \        let first = num % 10;\n        let last = num.toString().split('')[0];\n\
    \        if(first % 2 != 0 && last % 2 != 0){\n            result++;\n       \
    \ }\n    }\n    return result;\n}", "    let count = 0;\n    for(let i = 0; i\
    \ < nums.length; i++){\n        if(nums[i] > 10 && nums[i] % 2 !== 0 && (nums[i]\
    \ % 10) % 2 !== 0){\n            count++;\n        }\n    }\n    return count;\n\
    }\n", "    let specialArray = [];\n    let counter = 0;\n    for(let i = 0; i\
    \ < nums.length; i++){\n        let numAsString = nums[i].toString();\n      \
    \  if(nums[i] > 10 && numAsString[0] % 2 !== 0 && numAsString[numAsString.length\
    \ - 1] % 2 !== 0){\n            specialArray.push(nums[i]);\n            counter\
    \ ++;\n        }\n    }\n    return counter;\n}", "\tif (nums[0] % 2 == 1 && nums[nums.length\
    \ - 1] % 2 == 1) {\n\t\treturn nums.length;\n\t}\n}\n", "\tvar count = 0;\n\t\
    for(var i = 0; i < nums.length; i++){\n\t\tvar elem = nums[i];\n\t\tif(elem >\
    \ 10 && elem % 2 === 1 && Math.floor(elem / 10) % 2 === 1 && elem % 10 === 1 ||\
    \ elem % 10 === 3 || elem % 10 === 5 || elem % 10 === 7 || elem % 10 === 9){\n\
    \t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\n", "    let oddFilter = nums.filter(function(num){\n\
    \        if(num > 10){\n            if(Math.abs(num % 10) % 2 !== 0 && Math.abs(num\
    \ % 10) !== 0){\n                return num;\n            }\n        }\n    });\n\
    \    return oddFilter.length;\n}\n\n", "    let sum = 0;\n    for(let i = 0; i\
    \ < nums.length; i++){\n        let num = Math.abs(nums[i]);\n        let firstDigit\
    \ = num.toString()[0];\n        let lastDigit = num.toString()[num.toString().length\
    \ - 1];\n        if(num > 10 && ((firstDigit % 2 != 0) && (lastDigit % 2 != 0))){\n\
    \            sum += 1;\n        }\n    }\n    return sum;\n}", "    \n    //determine\
    \ the first and last digit of a number\n    //function to determine the first\
    \ digit of a number\n    const firstDigit = (n) => {\n        while (n >= 10)\
    \ {\n            n = n / 10;\n        }\n        return n;\n    }\n    //function\
    \ to determine the last digit of a number\n    const lastDigit = (n) => {\n  \
    \      return n % 10;\n    }\n    //function to check if the digit is even or\
    \ odd\n    const isOdd = (n) => {\n        if (n % 2 === 0) {\n            return\
    \ false;\n        }\n        return true;\n    }\n    //filter\n    return nums.filter(x\
    \ => (x > 10) && (isOdd(firstDigit(x)) && isOdd(lastDigit(x)))).length;\n}\n",
  "\treturn nums.filter(function(num){\n\t\tvar first = num.toString()[0];\n\t\tvar\
    \ last = num.toString()[num.toString().length - 1];\n\t\tif(first % 2 !== 0 &&\
    \ last % 2 !== 0 && num > 10){\n\t\t\treturn num;\n\t\t}\n\t}).length;\n}", " \
    \   return nums.filter(n => {\n        if(n < 0){\n            n = n * -1;\n \
    \       }\n        if(n > 10 && n % 2 != 0 && \n        Math.floor(n / 10) % 2\
    \ != 0 && \n        n % 10 != 0){\n            return n;\n        }\n    }).length;\n\
    }", "    // your code here\n    return nums.filter(function(number){\n       \
    \ return Math.abs(number) > 10 &&\n               Math.abs(number % 10) % 2 ==\
    \ 1 &&\n               Math.abs(number / (Math.pow(10, String(number).length -\
    \ 1))) % 2 == 1;\n    }).length;\n}\n", "    let arr = [];\n    for(let i = 0;\
    \ i < nums.length; i++){\n        if(nums[i] > 10 && Math.abs(nums[i] % 10) %\
    \ 2 != 0 && nums[i] % 2 != 0){\n            arr.push(nums[i]);\n        }\n  \
    \  }\n    return arr.length;\n}", "\tvar count = 0;\n\tfor(var i = 0; i < nums.length;\
    \ i++){\n\t\tif(nums[i] > 10 && (nums[i] % 2 === 1 || nums[i] % 2 === -1) && (nums[i]\
    \ % 10 === 1 || nums[i] % 10 === 3 || nums[i] % 10 === 5 || nums[i] % 10 === 7\
    \ || nums[i] % 10 === 9)){\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\n",
  "    var index = 0;\n    for(var i = 0; i < nums.length; i++){\n        if(nums[i]\
    \ > 10 && nums[i] % 2 == 1 && nums[i] % 10 == 1){\n            index++;\n    \
    \    }\n    }\n    return index;\n}\n", "  \n}\n", "    //your code is here\n}",
  "    return nums.filter(x => x > 10 && x.toString().slice(0,1) % 2 != 0 && x.toString().slice(-1)\
    \ % 2 != 0).length;\n}\n\nmodule.exports = {\n    parseStudentRecord,\n    isStudentId,\n\
    \    getStudentName,\n    getStudentId,\n    getStudentGrade,\n    getStudentInfo,\n\
    \    getStudentList,\n    getStudentInfoList,\n    getStudentsByGrade,\n    getStudentsByGradeRange,\n\
    \    addStudent,\n    addStudents,\n    removeStudentById,\n    removeStudentByName,\n\
    \    removeStudentsByGrade,\n    removeStudentsByGradeRange,\n    updateStudent,\n\
    \    updateStudents,\n    addGradeById,\n    addGradeByName,\n    removeGradeById,\n\
    \    removeGradeByName,\n    getStudentCountByGrade,\n    getStudentsByLetter,\n\
    \    getCountByLetter,\n    getAverageByGrade,\n    getStudentAverageById,\n \
    \   getStudentAverageByName,\n    getAverageByGradeAndGender,\n    getStudentInfoById,\n\
    \    getStudentInfoByName,\n    getFemaleCount,\n    getStudentsByName,\n    getBestStudent,\n\
    \    getWorstStudent,\n    getStudentsByAge,\n    getTotalCount,\n    getStudentListByAge,\n\
    \    getOlderStudents,\n    getYoungerStudents,\n    sortStudents,\n    getStudentsByAverage,\n\
    \    specialFilter\n}"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

name: HumanEval_15_string_sequence
language: js
prompt: "//Return a string containing space-delimited numbers starting from 0 upto\
  \ n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n//\
  \ '0 1 2 3 4 5'\nfunction string_sequence(n){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = string_sequence;\n  assert.deepEqual(candidate(0),\"0\");\n  assert.deepEqual(candidate(3),\"\
  0 1 2 3\");\n  assert.deepEqual(candidate(10),\"0 1 2 3 4 5 6 7 8 9 10\");\n}\n\n\
  test();"
completions: ["\tvar string = \"\";\n\tfor(var i = 0; i <= n; i++){\n\t\tstring +=\
    \ i + \" \";\n\t}\n\treturn string;\n}\n", "\n}\n", "    // Your code here\n}",
  "    var output = '';\n    for(var i = 0; i <= n; i++){\n        output += i;\n\
    \        if(i != n){\n            output += ' ';\n        }\n    }\n    return\
    \ output;\n}\n", "    var output = \"\";\n    for(var i = 0; i <= n; i++){\n \
    \       output += i + \" \";\n    }\n    return output;\n}", "\tvar a = []\n\t\
    for (var i = 0; i <= n; i++){\n\t\ta.push(i)\n\t}\n\treturn a.join(' ')\n}\n",
  "    let res = '';\n    for(let i = 0; i <= n; i++){\n        res += `${i} `;\n\
    \    }\n    return res.trim();\n}\n", "    if (n === 0) {\n        return '0';\n\
    \    } else {\n        return string_sequence(n - 1) + ' ' + n;\n    }\n}\n",
  "    var temp = '';\n    for(var i = 0; i < n; i++){\n        temp += i + ' ';\n\
    \    }\n    return temp + n;\n}\n", "    var seq_str = '';\n    for(var i = 0;\
    \ i <= n; i++){\n        seq_str += i.toString() + ' ';\n    }\n    return seq_str.trim();\n\
    }\n", "    var seq=\"\";\n    for(var i=0;i<=n;i++){\n        seq+=i;\n      \
    \  if(i!=n){\n            seq+=\" \";\n        }\n    }\n    return seq;\n}",
  "    const sequence = [];\n    for (let i = 0; i <= n; i++) {\n        sequence.push(i.toString());\n\
    \    }\n    return sequence.join(' ');\n}", "\n}\n\n", "var i;\nvar result = \"\
    \";\nfor (i = 0; i <= n; i++){\nresult += i + \" \";\n}\nreturn result;\n}\n",
  "    var s = \"\";\n    for(var i = 0; i <= n; i++){\n        s += (i).toString()\
    \ + \" \";\n    }\n    return s;\n}\n", "    var result = \"\";\n    for(var i\
    \ = 0; i <= n; i++){\n        result += i + \" \";\n    }\n    return result.slice(0,\
    \ result.length - 1);\n}\n", "  var answer = '';\n  var counter = 0;\n  while\
    \ (counter <= n){\n    answer += counter.toString() + ' ';\n    counter++;\n \
    \ }\n  return answer;\n}\n", "    if (n == 0) {\n        return \"0\";\n    }\n\
    \    else if (n > 0) {\n        return string_sequence(n-1) + \" \" + n;\n   \
    \ }\n}\n", "    var range = '';\n    for(var i = 0; i < n; i++){\n        range\
    \ += i + ' ';\n    }\n    return range + n;\n}\n", "    let result = '';\n   \
    \ for(i=0; i<=n; i++){\n        result += i + ' ';\n    }\n    return result.trim();\n\
    }\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

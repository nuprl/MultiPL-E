name: HumanEval_92_any_int
language: js
prompt: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
  \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
  // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E True\n\
  // any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n// any_int(3.6,\
  \ -2.2, 2) \u279E False\nfunction any_int(x, y, z){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
  \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
  \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
  \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
  \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
  \ 4, 7),false);\n}\n\ntest();"
completions: ["    let num = []\n    for(let i = 0; i < arguments.length; i++){\n\
    \        num.push(arguments[i])\n    }\n    let count = 0\n    for(let i = 0;\
    \ i < num.length; i++){\n        if(num[i] % 1 === 0){\n            count++\n\
    \        }\n    }\n    if(count === 3){\n        let arr = [...num]\n        arr.sort((a,\
    \ b) => a - b)\n        if(arr[0] + arr[1] === arr[2]){\n            return true\n\
    \        }\n        return false\n    }\n    return false\n}\n", "    return (x\
    \ + y === z) || (x + z === y) || (y + z === x) && (x === Math.floor(x)) && (y\
    \ === Math.floor(y)) && (z === Math.floor(z))\n}", "  return (x === (y + z) ||\
    \ y === (x + z) || z === (x + y)) && (Number.isInteger(x) && Number.isInteger(y)\
    \ && Number.isInteger(z)) ? true : false;\n}", "    if(x === y + z || y === x\
    \ + z || z === x + y){\n        return true;\n    }\n    return false;\n}", " \
    \ if (x+y === z || x+z === y || y+z === x){\n    return true;\n  }\n  else {\n\
    \    return false;\n  }\n}", "    var a = x + y;\n    var b = x + z;\n    var\
    \ c = y + z;\n    if ( x == a || y == b || z == c){\n        return true;\n  \
    \  }\n    else{\n        return false;\n    }\n}", "    if((x + y == z) || (x\
    \ + z == y) || (y + z == x)){\n        return true;\n    }\n    else{\n      \
    \  return false;\n    }\n}", "    let sum = x + y + z;\n    if(x == sum / 2 ||\
    \ y == sum / 2 || z == sum / 2){\n        return true;\n    }\n    return false;\n\
    }", "    if(x === y + z || y === x + z || z === x + y){\n        return true;\n\
    \    }else{\n        return false;\n    }\n}", "    if (x % 1 === 0 && y % 1 ===\
    \ 0 && z % 1 === 0){\n        return true;\n    } else if (x % 1 === 0 && y %\
    \ 1 === 0 && z % 1 !== 0){\n        return true;\n    } else if (x % 1 === 0 &&\
    \ y % 1 !== 0 && z % 1 === 0){\n        return true;\n    } else if (x % 1 !==\
    \ 0 && y % 1 === 0 && z % 1 === 0){\n        return true;\n    } else {\n    \
    \    return false;\n    }\n}", "    if(x%1==0 && y%1==0 && z%1==0){\n        if(x==y+z){\n\
    \            return true;\n        }\n        else if(y==x+z){\n            return\
    \ true;\n        }\n        else if(z==x+y){\n            return true;\n     \
    \   }\n        else{\n            return false;\n        }\n    }\n    else{\n\
    \        return false;\n    }\n}", "    if((x===y+z || y===x+z || z===x+y) &&\
    \ x%1===0 && y%1===0 && z%1===0){\n        return true;\n    }\n    else{\n  \
    \      return false;\n    }\n}", "    return Number.isInteger(x) && Number.isInteger(y)\
    \ && Number.isInteger(z) ? x + y === z || x + z === y || y + z === x : false;\n\
    }", "    return (x+y == z || x+z == y || y+z == x) && (Number.isInteger(x) &&\
    \ Number.isInteger(y) && Number.isInteger(z)) ? true : false;\n}", "    if(x ===\
    \ y + z || y === x + z || z === x + y){\n        return true;\n    }\n    return\
    \ false;\n}", "    return (x + y == z || x + z == y || y + z == x) && (Number.isInteger(x)\
    \ && Number.isInteger(y) && Number.isInteger(z))\n}", "    if(Number.isInteger(x)\
    \ && Number.isInteger(y) && Number.isInteger(z)){\n        if(x === y + z || y\
    \ === x + z || z === x + y){\n            return true;\n        }\n    }\n   \
    \ return false;\n}", "if(Number.isInteger(x) && Number.isInteger(y) && Number.isInteger(z)){\n\
    \    if(x === y + z){\n        return true;\n    }else if(y === x + z){\n    \
    \    return true;\n    }else if(z === x + y){\n        return true;\n    }else{\n\
    \        return false;\n    }\n}else{\n    return false;\n}\n}\n", "    if(Number.isInteger(x)\
    \ && Number.isInteger(y) && Number.isInteger(z)){\n        if(x===y+z || y===x+z\
    \ || z===x+y){\n            return true;\n        }\n    }\n    return false;\n\
    }", "    if(x % 1 == 0 && y % 1 == 0 && z % 1 == 0 && (x + y == z || x + z ==\
    \ y || y + z == x)) {\n        return true;\n    } else {\n        return false;\n\
    \    }\n}"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

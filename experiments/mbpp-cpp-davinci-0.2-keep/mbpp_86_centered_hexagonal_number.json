{
  "name": "mbpp_86_centered_hexagonal_number",
  "language": "cpp",
  "prompt": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find nth centered hexagonal number.\nlong centered_hexagonal_number(long n) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_86_centered_hexagonal_number.py",
  "prompt_terminology": "verbatim",
  "tests": "}\nint main() {\n    auto candidate = centered_hexagonal_number;\n    assert(candidate((10)) == (271));\n    assert(candidate((2)) == (7));\n    assert(candidate((9)) == (217));\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    return n*(2*n-1);",
    "    return n * (2 * n - 1);",
    "    return n*(2*n-1);",
    "    return n*(2*n-1);",
    "  return n*(2*n-1);",
    "    return n*(2*n-1);",
    "    return n * (2 * n - 1);",
    "    return n*(2*n-1);",
    "    return n*(2*n-1);",
    "    return n*(2*n-1);",
    "    return n*(2*n-1);",
    "    return n*(2*n-1);",
    "  return n*(2*n-1);",
    "    return n*(2*n-1);",
    "    return n*(2*n-1);",
    "    return n*(2*n-1);",
    "    return n*(2*n-1);",
    "    return n * (2 * n - 1);",
    "    return n*(2*n-1);",
    "    return n*(2*n-1);"
  ]
}
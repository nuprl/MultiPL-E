{
  "name": "mbpp_782_odd_length_sum",
  "language": "cpp",
  "prompt": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nlong odd_length_sum(std::vector<long> arr) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_782_odd_length_sum.py",
  "prompt_terminology": "verbatim",
  "tests": "}\nint main() {\n    auto candidate = odd_length_sum;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)4}))) == (14));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)1, (long)2}))) == (15));\n    assert(candidate((std::vector<long>({(long)1, (long)7}))) == (8));\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "results": [
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nlong odd_length_sum(std::vector<long> arr) {\n    long sum = 0;\n    int n = arr.size();\n    for (int i = 0; i < n; i++) {\n        for (int j = i; j < n; j++) {\n            if ((j - i + 1) % 2 != 0) {\n                for (int k = i; k <= j; k++) {\n                    sum += arr[k];\n                }\n            }\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_length_sum;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)4}))) == (14));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)1, (long)2}))) == (15));\n    assert(candidate((std::vector<long>({(long)1, (long)7}))) == (8));\n}\n",
      "timestamp": 1665517247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nlong odd_length_sum(std::vector<long> arr) {\n    long sum = 0;\n    for(int i = 0; i < arr.size(); i++) {\n        for(int j = i; j < arr.size(); j++) {\n            if((j - i + 1) % 2 != 0) {\n                for(int k = i; k <= j; k++) {\n                    sum += arr[k];\n                }\n            }\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_length_sum;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)4}))) == (14));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)1, (long)2}))) == (15));\n    assert(candidate((std::vector<long>({(long)1, (long)7}))) == (8));\n}\n",
      "timestamp": 1665517247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nlong odd_length_sum(std::vector<long> arr) {\n    long sum = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        for (int j = i; j < arr.size(); j++) {\n            if ((j - i + 1) % 2 != 0) {\n                for (int k = i; k <= j; k++) {\n                    sum += arr[k];\n                }\n            }\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_length_sum;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)4}))) == (14));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)1, (long)2}))) == (15));\n    assert(candidate((std::vector<long>({(long)1, (long)7}))) == (8));\n}\n",
      "timestamp": 1665517247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nlong odd_length_sum(std::vector<long> arr) {\n    long sum = 0;\n    for(int i = 0; i < arr.size(); i++) {\n        for(int j = i; j < arr.size(); j++) {\n            if((j - i + 1) % 2 != 0) {\n                for(int k = i; k <= j; k++) {\n                    sum += arr[k];\n                }\n            }\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_length_sum;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)4}))) == (14));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)1, (long)2}))) == (15));\n    assert(candidate((std::vector<long>({(long)1, (long)7}))) == (8));\n}\n",
      "timestamp": 1665517247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nlong odd_length_sum(std::vector<long> arr) {\n    long sum = 0;\n    for(int i = 0; i < arr.size(); i++) {\n        for(int j = i; j < arr.size(); j++) {\n            if((j - i + 1) % 2 != 0) {\n                for(int k = i; k <= j; k++) {\n                    sum += arr[k];\n                }\n            }\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_length_sum;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)4}))) == (14));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)1, (long)2}))) == (15));\n    assert(candidate((std::vector<long>({(long)1, (long)7}))) == (8));\n}\n",
      "timestamp": 1665517247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nlong odd_length_sum(std::vector<long> arr) {\n    long sum = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        for (int j = i; j < arr.size(); j++) {\n            if ((j - i + 1) % 2 != 0) {\n                for (int k = i; k <= j; k++) {\n                    sum += arr[k];\n                }\n            }\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_length_sum;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)4}))) == (14));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)1, (long)2}))) == (15));\n    assert(candidate((std::vector<long>({(long)1, (long)7}))) == (8));\n}\n",
      "timestamp": 1665517247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nlong odd_length_sum(std::vector<long> arr) {\n    long sum = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        for (int j = i; j < arr.size(); j++) {\n            if ((j - i + 1) % 2 != 0) {\n                for (int k = i; k <= j; k++) {\n                    sum += arr[k];\n                }\n            }\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_length_sum;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)4}))) == (14));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)1, (long)2}))) == (15));\n    assert(candidate((std::vector<long>({(long)1, (long)7}))) == (8));\n}\n",
      "timestamp": 1665517247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nlong odd_length_sum(std::vector<long> arr) {\n    long sum = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        for (int j = i; j < arr.size(); j++) {\n            if ((j - i + 1) % 2 != 0) {\n                for (int k = i; k <= j; k++) {\n                    sum += arr[k];\n                }\n            }\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_length_sum;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)4}))) == (14));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)1, (long)2}))) == (15));\n    assert(candidate((std::vector<long>({(long)1, (long)7}))) == (8));\n}\n",
      "timestamp": 1665517247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nlong odd_length_sum(std::vector<long> arr) {\n    long sum = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        for (int j = i; j < arr.size(); j++) {\n            if ((j - i + 1) % 2 == 1) {\n                for (int k = i; k <= j; k++) {\n                    sum += arr[k];\n                }\n            }\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_length_sum;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)4}))) == (14));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)1, (long)2}))) == (15));\n    assert(candidate((std::vector<long>({(long)1, (long)7}))) == (8));\n}\n",
      "timestamp": 1665517248,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nlong odd_length_sum(std::vector<long> arr) {\n    long sum = 0;\n    for (long i = 0; i < arr.size(); i++) {\n        for (long j = i; j < arr.size(); j++) {\n            if ((j - i + 1) % 2 != 0) {\n                for (long k = i; k <= j; k++) {\n                    sum += arr[k];\n                }\n            }\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_length_sum;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)4}))) == (14));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)1, (long)2}))) == (15));\n    assert(candidate((std::vector<long>({(long)1, (long)7}))) == (8));\n}\n",
      "timestamp": 1665517247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nlong odd_length_sum(std::vector<long> arr) {\n    long sum = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        for (int j = i; j < arr.size(); j++) {\n            if ((j - i + 1) % 2 != 0) {\n                for (int k = i; k <= j; k++) {\n                    sum += arr[k];\n                }\n            }\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_length_sum;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)4}))) == (14));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)1, (long)2}))) == (15));\n    assert(candidate((std::vector<long>({(long)1, (long)7}))) == (8));\n}\n",
      "timestamp": 1665517247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nlong odd_length_sum(std::vector<long> arr) {\n    long sum = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        for (int j = i; j < arr.size(); j++) {\n            if ((j - i + 1) % 2 != 0) {\n                for (int k = i; k <= j; k++) {\n                    sum += arr[k];\n                }\n            }\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_length_sum;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)4}))) == (14));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)1, (long)2}))) == (15));\n    assert(candidate((std::vector<long>({(long)1, (long)7}))) == (8));\n}\n",
      "timestamp": 1665517247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nlong odd_length_sum(std::vector<long> arr) {\n    long sum = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        for (int j = i; j < arr.size(); j++) {\n            if ((j - i + 1) % 2 != 0) {\n                for (int k = i; k <= j; k++) {\n                    sum += arr[k];\n                }\n            }\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_length_sum;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)4}))) == (14));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)1, (long)2}))) == (15));\n    assert(candidate((std::vector<long>({(long)1, (long)7}))) == (8));\n}\n",
      "timestamp": 1665517247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nlong odd_length_sum(std::vector<long> arr) {\n    long sum = 0;\n    for (long i = 0; i < arr.size(); i++) {\n        for (long j = i; j < arr.size(); j++) {\n            if ((j - i + 1) % 2 != 0) {\n                for (long k = i; k <= j; k++) {\n                    sum += arr[k];\n                }\n            }\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_length_sum;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)4}))) == (14));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)1, (long)2}))) == (15));\n    assert(candidate((std::vector<long>({(long)1, (long)7}))) == (8));\n}\n",
      "timestamp": 1665517247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nlong odd_length_sum(std::vector<long> arr) {\n    long sum = 0;\n    for(int i = 0; i < arr.size(); i++) {\n        for(int j = i; j < arr.size(); j++) {\n            if((j - i + 1) % 2 != 0) {\n                for(int k = i; k <= j; k++) {\n                    sum += arr[k];\n                }\n            }\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_length_sum;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)4}))) == (14));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)1, (long)2}))) == (15));\n    assert(candidate((std::vector<long>({(long)1, (long)7}))) == (8));\n}\n",
      "timestamp": 1665517247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nlong odd_length_sum(std::vector<long> arr) {\n    long sum = 0;\n    for(int i = 0; i < arr.size(); i++) {\n        for(int j = i; j < arr.size(); j++) {\n            if((j - i + 1) % 2 != 0) {\n                for(int k = i; k <= j; k++) {\n                    sum += arr[k];\n                }\n            }\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_length_sum;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)4}))) == (14));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)1, (long)2}))) == (15));\n    assert(candidate((std::vector<long>({(long)1, (long)7}))) == (8));\n}\n",
      "timestamp": 1665517247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nlong odd_length_sum(std::vector<long> arr) {\n    long sum = 0;\n    for(int i = 0; i < arr.size(); i++) {\n        for(int j = i; j < arr.size(); j++) {\n            if((j - i + 1) % 2 != 0) {\n                for(int k = i; k <= j; k++) {\n                    sum += arr[k];\n                }\n            }\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_length_sum;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)4}))) == (14));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)1, (long)2}))) == (15));\n    assert(candidate((std::vector<long>({(long)1, (long)7}))) == (8));\n}\n",
      "timestamp": 1665517247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nlong odd_length_sum(std::vector<long> arr) {\n    long sum = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        for (int j = i; j < arr.size(); j++) {\n            if ((j - i + 1) % 2 != 0) {\n                for (int k = i; k <= j; k++) {\n                    sum += arr[k];\n                }\n            }\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_length_sum;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)4}))) == (14));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)1, (long)2}))) == (15));\n    assert(candidate((std::vector<long>({(long)1, (long)7}))) == (8));\n}\n",
      "timestamp": 1665517247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nlong odd_length_sum(std::vector<long> arr) {\n    long sum = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        for (int j = i; j < arr.size(); j++) {\n            if ((j - i + 1) % 2 == 1) {\n                for (int k = i; k <= j; k++) {\n                    sum += arr[k];\n                }\n            }\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_length_sum;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)4}))) == (14));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)1, (long)2}))) == (15));\n    assert(candidate((std::vector<long>({(long)1, (long)7}))) == (8));\n}\n",
      "timestamp": 1665517248,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nlong odd_length_sum(std::vector<long> arr) {\n    long sum = 0;\n    for(int i = 0; i < arr.size(); i++) {\n        for(int j = i; j < arr.size(); j++) {\n            if((j - i + 1) % 2 != 0) {\n                for(int k = i; k <= j; k++) {\n                    sum += arr[k];\n                }\n            }\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_length_sum;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)4}))) == (14));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)1, (long)2}))) == (15));\n    assert(candidate((std::vector<long>({(long)1, (long)7}))) == (8));\n}\n",
      "timestamp": 1665517247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nlong odd_length_sum(std::vector<long> arr) {\n    long sum = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        for (int j = i; j < arr.size(); j++) {\n            if ((j - i + 1) % 2 != 0) {\n                for (int k = i; k <= j; k++) {\n                    sum += arr[k];\n                }\n            }\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_length_sum;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)4}))) == (14));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)1, (long)2}))) == (15));\n    assert(candidate((std::vector<long>({(long)1, (long)7}))) == (8));\n}\n",
      "timestamp": 1665517247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nlong odd_length_sum(std::vector<long> arr) {\n    // Write your code here\n    long sum = 0;\n    for(int i = 0; i < arr.size(); i++) {\n        for(int j = i; j < arr.size(); j++) {\n            if((j - i + 1) % 2 != 0) {\n                for(int k = i; k <= j; k++) {\n                    sum += arr[k];\n                }\n            }\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_length_sum;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)4}))) == (14));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)1, (long)2}))) == (15));\n    assert(candidate((std::vector<long>({(long)1, (long)7}))) == (8));\n}\n",
      "timestamp": 1666122428,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nlong odd_length_sum(std::vector<long> arr) {\n    long sum = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        for (int j = i; j < arr.size(); j++) {\n            if ((j - i + 1) % 2 != 0) {\n                for (int k = i; k <= j; k++) {\n                    sum += arr[k];\n                }\n            }\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_length_sum;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)4}))) == (14));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)1, (long)2}))) == (15));\n    assert(candidate((std::vector<long>({(long)1, (long)7}))) == (8));\n}\n",
      "timestamp": 1665517247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nlong odd_length_sum(std::vector<long> arr) {\n    long sum = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        for (int j = i; j < arr.size(); j++) {\n            if ((j - i + 1) % 2 != 0) {\n                for (int k = i; k <= j; k++) {\n                    sum += arr[k];\n                }\n            }\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_length_sum;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)4}))) == (14));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)1, (long)2}))) == (15));\n    assert(candidate((std::vector<long>({(long)1, (long)7}))) == (8));\n}\n",
      "timestamp": 1665517247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nlong odd_length_sum(std::vector<long> arr) {\n    long sum = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        for (int j = i; j < arr.size(); j++) {\n            if ((j - i + 1) % 2 != 0) {\n                for (int k = i; k <= j; k++) {\n                    sum += arr[k];\n                }\n            }\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_length_sum;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)4}))) == (14));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)1, (long)2}))) == (15));\n    assert(candidate((std::vector<long>({(long)1, (long)7}))) == (8));\n}\n",
      "timestamp": 1665517247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nlong odd_length_sum(std::vector<long> arr) {\n    long sum = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        for (int j = i; j < arr.size(); j++) {\n            if ((j - i + 1) % 2 != 0) {\n                for (int k = i; k <= j; k++) {\n                    sum += arr[k];\n                }\n            }\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_length_sum;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)4}))) == (14));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)1, (long)2}))) == (15));\n    assert(candidate((std::vector<long>({(long)1, (long)7}))) == (8));\n}\n",
      "timestamp": 1665517247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nlong odd_length_sum(std::vector<long> arr) {\n    long sum = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        for (int j = i; j < arr.size(); j++) {\n            if ((j - i + 1) % 2 != 0) {\n                for (int k = i; k <= j; k++) {\n                    sum += arr[k];\n                }\n            }\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_length_sum;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)4}))) == (14));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)1, (long)2}))) == (15));\n    assert(candidate((std::vector<long>({(long)1, (long)7}))) == (8));\n}\n",
      "timestamp": 1665517247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nlong odd_length_sum(std::vector<long> arr) {\n    long sum = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        for (int j = i; j < arr.size(); j++) {\n            if ((j - i + 1) % 2 == 1) {\n                for (int k = i; k <= j; k++) {\n                    sum += arr[k];\n                }\n            }\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_length_sum;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)4}))) == (14));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)1, (long)2}))) == (15));\n    assert(candidate((std::vector<long>({(long)1, (long)7}))) == (8));\n}\n",
      "timestamp": 1665517248,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nlong odd_length_sum(std::vector<long> arr) {\n    long sum = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        for (int j = i; j < arr.size(); j++) {\n            if ((j - i + 1) % 2 != 0) {\n                for (int k = i; k <= j; k++) {\n                    sum += arr[k];\n                }\n            }\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_length_sum;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)4}))) == (14));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)1, (long)2}))) == (15));\n    assert(candidate((std::vector<long>({(long)1, (long)7}))) == (8));\n}\n",
      "timestamp": 1665517247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nlong odd_length_sum(std::vector<long> arr) {\n    long sum = 0;\n    for(int i = 0; i < arr.size(); i++) {\n        for(int j = i; j < arr.size(); j++) {\n            if((j - i + 1) % 2 != 0) {\n                for(int k = i; k <= j; k++) {\n                    sum += arr[k];\n                }\n            }\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_length_sum;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)4}))) == (14));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)1, (long)2}))) == (15));\n    assert(candidate((std::vector<long>({(long)1, (long)7}))) == (8));\n}\n",
      "timestamp": 1665517247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nlong odd_length_sum(std::vector<long> arr) {\n    long sum = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        for (int j = i; j < arr.size(); j++) {\n            if ((j - i + 1) % 2 != 0) {\n                for (int k = i; k <= j; k++) {\n                    sum += arr[k];\n                }\n            }\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_length_sum;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)4}))) == (14));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)1, (long)2}))) == (15));\n    assert(candidate((std::vector<long>({(long)1, (long)7}))) == (8));\n}\n",
      "timestamp": 1665517247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nlong odd_length_sum(std::vector<long> arr) {\n    long sum = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        for (int j = i; j < arr.size(); j++) {\n            if ((j - i + 1) % 2 != 0) {\n                for (int k = i; k <= j; k++) {\n                    sum += arr[k];\n                }\n            }\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_length_sum;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)4}))) == (14));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)1, (long)2}))) == (15));\n    assert(candidate((std::vector<long>({(long)1, (long)7}))) == (8));\n}\n",
      "timestamp": 1665517247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nlong odd_length_sum(std::vector<long> arr) {\n    long sum = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        for (int j = i; j < arr.size(); j++) {\n            if ((j - i + 1) % 2 == 1) {\n                for (int k = i; k <= j; k++) {\n                    sum += arr[k];\n                }\n            }\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_length_sum;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)4}))) == (14));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)1, (long)2}))) == (15));\n    assert(candidate((std::vector<long>({(long)1, (long)7}))) == (8));\n}\n",
      "timestamp": 1665517248,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nlong odd_length_sum(std::vector<long> arr) {\n    long sum = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        for (int j = i; j < arr.size(); j++) {\n            if ((j - i + 1) % 2 == 1) {\n                for (int k = i; k <= j; k++) {\n                    sum += arr[k];\n                }\n            }\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_length_sum;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)4}))) == (14));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)1, (long)2}))) == (15));\n    assert(candidate((std::vector<long>({(long)1, (long)7}))) == (8));\n}\n",
      "timestamp": 1665517248,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nlong odd_length_sum(std::vector<long> arr) {\n    long sum = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        for (int j = i; j < arr.size(); j++) {\n            if ((j - i + 1) % 2 != 0) {\n                for (int k = i; k <= j; k++) {\n                    sum += arr[k];\n                }\n            }\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_length_sum;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)4}))) == (14));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)1, (long)2}))) == (15));\n    assert(candidate((std::vector<long>({(long)1, (long)7}))) == (8));\n}\n",
      "timestamp": 1665517247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nlong odd_length_sum(std::vector<long> arr) {\n    long sum = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        for (int j = i; j < arr.size(); j++) {\n            if ((j - i + 1) % 2 != 0) {\n                for (int k = i; k <= j; k++) {\n                    sum += arr[k];\n                }\n            }\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_length_sum;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)4}))) == (14));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)1, (long)2}))) == (15));\n    assert(candidate((std::vector<long>({(long)1, (long)7}))) == (8));\n}\n",
      "timestamp": 1665517247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nlong odd_length_sum(std::vector<long> arr) {\n    long sum = 0;\n    for(int i = 0; i < arr.size(); i++) {\n        for(int j = i; j < arr.size(); j++) {\n            if((j - i + 1) % 2 != 0) {\n                for(int k = i; k <= j; k++) {\n                    sum += arr[k];\n                }\n            }\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_length_sum;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)4}))) == (14));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)1, (long)2}))) == (15));\n    assert(candidate((std::vector<long>({(long)1, (long)7}))) == (8));\n}\n",
      "timestamp": 1665517247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nlong odd_length_sum(std::vector<long> arr) {\n    long sum = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        for (int j = i; j < arr.size(); j++) {\n            if ((j - i + 1) % 2 != 0) {\n                for (int k = i; k <= j; k++) {\n                    sum += arr[k];\n                }\n            }\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_length_sum;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)4}))) == (14));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)1, (long)2}))) == (15));\n    assert(candidate((std::vector<long>({(long)1, (long)7}))) == (8));\n}\n",
      "timestamp": 1665517247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nlong odd_length_sum(std::vector<long> arr) {\n    long sum = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        for (int j = i; j < arr.size(); j++) {\n            if ((j - i + 1) % 2 != 0) {\n                for (int k = i; k <= j; k++) {\n                    sum += arr[k];\n                }\n            }\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_length_sum;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)4}))) == (14));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)1, (long)2}))) == (15));\n    assert(candidate((std::vector<long>({(long)1, (long)7}))) == (8));\n}\n",
      "timestamp": 1665517247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nlong odd_length_sum(std::vector<long> arr) {\n    long sum = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        for (int j = i; j < arr.size(); j++) {\n            if ((j - i + 1) % 2 != 0) {\n                for (int k = i; k <= j; k++) {\n                    sum += arr[k];\n                }\n            }\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_length_sum;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)4}))) == (14));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)1, (long)2}))) == (15));\n    assert(candidate((std::vector<long>({(long)1, (long)7}))) == (8));\n}\n",
      "timestamp": 1665517247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nlong odd_length_sum(std::vector<long> arr) {\n    long sum = 0;\n    for(int i = 0; i < arr.size(); i++) {\n        for(int j = i; j < arr.size(); j++) {\n            if((j - i + 1) % 2 != 0) {\n                for(int k = i; k <= j; k++) {\n                    sum += arr[k];\n                }\n            }\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_length_sum;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)4}))) == (14));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)1, (long)2}))) == (15));\n    assert(candidate((std::vector<long>({(long)1, (long)7}))) == (8));\n}\n",
      "timestamp": 1665517247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nlong odd_length_sum(std::vector<long> arr) {\n    long sum = 0;\n    for(int i = 0; i < arr.size(); i++) {\n        for(int j = i; j < arr.size(); j++) {\n            if((j - i + 1) % 2 != 0) {\n                for(int k = i; k <= j; k++) {\n                    sum += arr[k];\n                }\n            }\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_length_sum;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)4}))) == (14));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)1, (long)2}))) == (15));\n    assert(candidate((std::vector<long>({(long)1, (long)7}))) == (8));\n}\n",
      "timestamp": 1665517247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nlong odd_length_sum(std::vector<long> arr) {\n    long sum = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        for (int j = i; j < arr.size(); j++) {\n            if ((j - i + 1) % 2 != 0) {\n                for (int k = i; k <= j; k++) {\n                    sum += arr[k];\n                }\n            }\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_length_sum;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)4}))) == (14));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)1, (long)2}))) == (15));\n    assert(candidate((std::vector<long>({(long)1, (long)7}))) == (8));\n}\n",
      "timestamp": 1665517247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nlong odd_length_sum(std::vector<long> arr) {\n    long sum = 0;\n    for (long i = 0; i < arr.size(); i++) {\n        for (long j = i; j < arr.size(); j++) {\n            if ((j - i + 1) % 2 != 0) {\n                for (long k = i; k <= j; k++) {\n                    sum += arr[k];\n                }\n            }\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_length_sum;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)4}))) == (14));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)1, (long)2}))) == (15));\n    assert(candidate((std::vector<long>({(long)1, (long)7}))) == (8));\n}\n",
      "timestamp": 1665517247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nlong odd_length_sum(std::vector<long> arr) {\n    long sum = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        for (int j = i; j < arr.size(); j++) {\n            if ((j - i + 1) % 2 != 0) {\n                for (int k = i; k <= j; k++) {\n                    sum += arr[k];\n                }\n            }\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_length_sum;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)4}))) == (14));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)1, (long)2}))) == (15));\n    assert(candidate((std::vector<long>({(long)1, (long)7}))) == (8));\n}\n",
      "timestamp": 1665517247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nlong odd_length_sum(std::vector<long> arr) {\n    long sum = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        for (int j = i; j < arr.size(); j++) {\n            if ((j - i + 1) % 2 != 0) {\n                for (int k = i; k <= j; k++) {\n                    sum += arr[k];\n                }\n            }\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_length_sum;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)4}))) == (14));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)1, (long)2}))) == (15));\n    assert(candidate((std::vector<long>({(long)1, (long)7}))) == (8));\n}\n",
      "timestamp": 1665517247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nlong odd_length_sum(std::vector<long> arr) {\n    long sum = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        for (int j = i; j < arr.size(); j++) {\n            if ((j - i + 1) % 2 != 0) {\n                for (int k = i; k <= j; k++) {\n                    sum += arr[k];\n                }\n            }\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_length_sum;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)4}))) == (14));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)1, (long)2}))) == (15));\n    assert(candidate((std::vector<long>({(long)1, (long)7}))) == (8));\n}\n",
      "timestamp": 1665517247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nlong odd_length_sum(std::vector<long> arr) {\n    long sum = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        for (int j = i; j < arr.size(); j++) {\n            if ((j - i + 1) % 2 != 0) {\n                for (int k = i; k <= j; k++) {\n                    sum += arr[k];\n                }\n            }\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_length_sum;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)4}))) == (14));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)1, (long)2}))) == (15));\n    assert(candidate((std::vector<long>({(long)1, (long)7}))) == (8));\n}\n",
      "timestamp": 1665517247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nlong odd_length_sum(std::vector<long> arr) {\n    long sum = 0;\n    for(int i = 0; i < arr.size(); i++) {\n        for(int j = i; j < arr.size(); j++) {\n            if((j - i + 1) % 2 != 0) {\n                for(int k = i; k <= j; k++) {\n                    sum += arr[k];\n                }\n            }\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_length_sum;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)4}))) == (14));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)1, (long)2}))) == (15));\n    assert(candidate((std::vector<long>({(long)1, (long)7}))) == (8));\n}\n",
      "timestamp": 1665517247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nlong odd_length_sum(std::vector<long> arr) {\n    long sum = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        for (int j = i; j < arr.size(); j++) {\n            if ((j - i + 1) % 2 != 0) {\n                for (int k = i; k <= j; k++) {\n                    sum += arr[k];\n                }\n            }\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_length_sum;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)4}))) == (14));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)1, (long)2}))) == (15));\n    assert(candidate((std::vector<long>({(long)1, (long)7}))) == (8));\n}\n",
      "timestamp": 1665517247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nlong odd_length_sum(std::vector<long> arr) {\n    long sum = 0;\n    for(int i = 0; i < arr.size(); i++) {\n        for(int j = i; j < arr.size(); j++) {\n            if((j - i + 1) % 2 != 0) {\n                for(int k = i; k <= j; k++) {\n                    sum += arr[k];\n                }\n            }\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_length_sum;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)4}))) == (14));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)1, (long)2}))) == (15));\n    assert(candidate((std::vector<long>({(long)1, (long)7}))) == (8));\n}\n",
      "timestamp": 1665517247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nlong odd_length_sum(std::vector<long> arr) {\n    long sum = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        for (int j = i; j < arr.size(); j++) {\n            if ((j - i + 1) % 2 == 1) {\n                for (int k = i; k <= j; k++) {\n                    sum += arr[k];\n                }\n            }\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_length_sum;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)4}))) == (14));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)1, (long)2}))) == (15));\n    assert(candidate((std::vector<long>({(long)1, (long)7}))) == (8));\n}\n",
      "timestamp": 1665517248,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nlong odd_length_sum(std::vector<long> arr) {\n    long sum = 0;\n    int n = arr.size();\n    for (int i = 0; i < n; i++) {\n        for (int j = i; j < n; j++) {\n            if ((j - i + 1) % 2 != 0) {\n                for (int k = i; k <= j; k++) {\n                    sum += arr[k];\n                }\n            }\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_length_sum;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)4}))) == (14));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)1, (long)2}))) == (15));\n    assert(candidate((std::vector<long>({(long)1, (long)7}))) == (8));\n}\n",
      "timestamp": 1665517247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nlong odd_length_sum(std::vector<long> arr) {\n    long sum = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        for (int j = i; j < arr.size(); j++) {\n            if ((j - i + 1) % 2 != 0) {\n                for (int k = i; k <= j; k++) {\n                    sum += arr[k];\n                }\n            }\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_length_sum;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)4}))) == (14));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)1, (long)2}))) == (15));\n    assert(candidate((std::vector<long>({(long)1, (long)7}))) == (8));\n}\n",
      "timestamp": 1665517247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nlong odd_length_sum(std::vector<long> arr) {\n    long sum = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        for (int j = i; j < arr.size(); j++) {\n            if ((j - i + 1) % 2 != 0) {\n                for (int k = i; k <= j; k++) {\n                    sum += arr[k];\n                }\n            }\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_length_sum;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)4}))) == (14));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)1, (long)2}))) == (15));\n    assert(candidate((std::vector<long>({(long)1, (long)7}))) == (8));\n}\n",
      "timestamp": 1665517247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nlong odd_length_sum(std::vector<long> arr) {\n    long sum = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        for (int j = i; j < arr.size(); j++) {\n            if ((j - i + 1) % 2 == 1) {\n                for (int k = i; k <= j; k++) {\n                    sum += arr[k];\n                }\n            }\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_length_sum;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)4}))) == (14));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)1, (long)2}))) == (15));\n    assert(candidate((std::vector<long>({(long)1, (long)7}))) == (8));\n}\n",
      "timestamp": 1665517248,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nlong odd_length_sum(std::vector<long> arr) {\n    long sum = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        for (int j = i; j < arr.size(); j++) {\n            if ((j - i + 1) % 2 != 0) {\n                for (int k = i; k <= j; k++) {\n                    sum += arr[k];\n                }\n            }\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_length_sum;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)4}))) == (14));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)1, (long)2}))) == (15));\n    assert(candidate((std::vector<long>({(long)1, (long)7}))) == (8));\n}\n",
      "timestamp": 1665517247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nlong odd_length_sum(std::vector<long> arr) {\n    long sum = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        for (int j = i; j < arr.size(); j++) {\n            if ((j - i + 1) % 2 != 0) {\n                for (int k = i; k <= j; k++) {\n                    sum += arr[k];\n                }\n            }\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_length_sum;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)4}))) == (14));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)1, (long)2}))) == (15));\n    assert(candidate((std::vector<long>({(long)1, (long)7}))) == (8));\n}\n",
      "timestamp": 1665517247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nlong odd_length_sum(std::vector<long> arr) {\n    long sum = 0;\n    for(int i = 0; i < arr.size(); i++) {\n        for(int j = i; j < arr.size(); j++) {\n            if((j - i + 1) % 2 != 0) {\n                for(int k = i; k <= j; k++) {\n                    sum += arr[k];\n                }\n            }\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_length_sum;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)4}))) == (14));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)1, (long)2}))) == (15));\n    assert(candidate((std::vector<long>({(long)1, (long)7}))) == (8));\n}\n",
      "timestamp": 1665517247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nlong odd_length_sum(std::vector<long> arr) {\n    long sum = 0;\n    for(int i = 0; i < arr.size(); i++) {\n        for(int j = i; j < arr.size(); j++) {\n            if((j - i + 1) % 2 == 1) {\n                for(int k = i; k <= j; k++) {\n                    sum += arr[k];\n                }\n            }\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_length_sum;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)4}))) == (14));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)1, (long)2}))) == (15));\n    assert(candidate((std::vector<long>({(long)1, (long)7}))) == (8));\n}\n",
      "timestamp": 1666122428,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nlong odd_length_sum(std::vector<long> arr) {\n    long sum = 0;\n    for(int i = 0; i < arr.size(); i++) {\n        for(int j = i; j < arr.size(); j++) {\n            if((j-i+1) % 2 != 0) {\n                for(int k = i; k <= j; k++) {\n                    sum += arr[k];\n                }\n            }\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_length_sum;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)4}))) == (14));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)1, (long)2}))) == (15));\n    assert(candidate((std::vector<long>({(long)1, (long)7}))) == (8));\n}\n",
      "timestamp": 1666122428,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nlong odd_length_sum(std::vector<long> arr) {\n    long sum = 0;\n    for(int i = 0; i < arr.size(); i++) {\n        for(int j = i; j < arr.size(); j++) {\n            if((j - i + 1) % 2 != 0) {\n                for(int k = i; k <= j; k++) {\n                    sum += arr[k];\n                }\n            }\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_length_sum;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)4}))) == (14));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)1, (long)2}))) == (15));\n    assert(candidate((std::vector<long>({(long)1, (long)7}))) == (8));\n}\n",
      "timestamp": 1665517247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nlong odd_length_sum(std::vector<long> arr) {\n    long sum = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        for (int j = i; j < arr.size(); j++) {\n            if ((j - i + 1) % 2 != 0) {\n                for (int k = i; k <= j; k++) {\n                    sum += arr[k];\n                }\n            }\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_length_sum;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)4}))) == (14));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)1, (long)2}))) == (15));\n    assert(candidate((std::vector<long>({(long)1, (long)7}))) == (8));\n}\n",
      "timestamp": 1665517247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nlong odd_length_sum(std::vector<long> arr) {\n    long sum = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        for (int j = i; j < arr.size(); j++) {\n            if ((j - i + 1) % 2 != 0) {\n                for (int k = i; k <= j; k++) {\n                    sum += arr[k];\n                }\n            }\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_length_sum;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)4}))) == (14));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)1, (long)2}))) == (15));\n    assert(candidate((std::vector<long>({(long)1, (long)7}))) == (8));\n}\n",
      "timestamp": 1665517247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nlong odd_length_sum(std::vector<long> arr) {\n    long sum = 0;\n    for(int i = 0; i < arr.size(); i++) {\n        for(int j = i; j < arr.size(); j++) {\n            if((j - i + 1) % 2 != 0) {\n                for(int k = i; k <= j; k++) {\n                    sum += arr[k];\n                }\n            }\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_length_sum;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)4}))) == (14));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)1, (long)2}))) == (15));\n    assert(candidate((std::vector<long>({(long)1, (long)7}))) == (8));\n}\n",
      "timestamp": 1665517247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nlong odd_length_sum(std::vector<long> arr) {\n    long sum = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        for (int j = i; j < arr.size(); j++) {\n            if ((j - i + 1) % 2 != 0) {\n                for (int k = i; k <= j; k++) {\n                    sum += arr[k];\n                }\n            }\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_length_sum;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)4}))) == (14));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)1, (long)2}))) == (15));\n    assert(candidate((std::vector<long>({(long)1, (long)7}))) == (8));\n}\n",
      "timestamp": 1665517247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nlong odd_length_sum(std::vector<long> arr) {\n    long sum = 0;\n    for(int i = 0; i < arr.size(); i++) {\n        for(int j = i; j < arr.size(); j++) {\n            if((j - i + 1) % 2 != 0) {\n                for(int k = i; k <= j; k++) {\n                    sum += arr[k];\n                }\n            }\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_length_sum;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)4}))) == (14));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)1, (long)2}))) == (15));\n    assert(candidate((std::vector<long>({(long)1, (long)7}))) == (8));\n}\n",
      "timestamp": 1665517247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nlong odd_length_sum(std::vector<long> arr) {\n    int n = arr.size();\n    long sum = 0;\n    for (int i = 0; i < n; i++) {\n        for (int j = i; j < n; j++) {\n            if ((j - i + 1) % 2 != 0) {\n                for (int k = i; k <= j; k++) {\n                    sum += arr[k];\n                }\n            }\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_length_sum;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)4}))) == (14));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)1, (long)2}))) == (15));\n    assert(candidate((std::vector<long>({(long)1, (long)7}))) == (8));\n}\n",
      "timestamp": 1666122428,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nlong odd_length_sum(std::vector<long> arr) {\n    long sum = 0;\n    int n = arr.size();\n    for (int i = 0; i < n; i++) {\n        for (int j = i; j < n; j++) {\n            if ((j - i + 1) % 2 != 0) {\n                for (int k = i; k <= j; k++) {\n                    sum += arr[k];\n                }\n            }\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_length_sum;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)4}))) == (14));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)1, (long)2}))) == (15));\n    assert(candidate((std::vector<long>({(long)1, (long)7}))) == (8));\n}\n",
      "timestamp": 1665517247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nlong odd_length_sum(std::vector<long> arr) {\n    long n = arr.size();\n    long sum = 0;\n    for (long i = 0; i < n; i++) {\n        for (long j = i; j < n; j++) {\n            if ((j - i + 1) % 2 == 1) {\n                for (long k = i; k <= j; k++) {\n                    sum += arr[k];\n                }\n            }\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_length_sum;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)4}))) == (14));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)1, (long)2}))) == (15));\n    assert(candidate((std::vector<long>({(long)1, (long)7}))) == (8));\n}\n",
      "timestamp": 1666122428,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nlong odd_length_sum(std::vector<long> arr) {\n    long sum = 0;\n    long n = arr.size();\n    for (long i = 0; i < n; i++) {\n        for (long j = i; j < n; j++) {\n            if ((j - i + 1) % 2 != 0) {\n                for (long k = i; k <= j; k++) {\n                    sum += arr[k];\n                }\n            }\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_length_sum;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)4}))) == (14));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)1, (long)2}))) == (15));\n    assert(candidate((std::vector<long>({(long)1, (long)7}))) == (8));\n}\n",
      "timestamp": 1666122428,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nlong odd_length_sum(std::vector<long> arr) {\n    long sum = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        for (int j = i; j < arr.size(); j++) {\n            if ((j - i + 1) % 2 != 0) {\n                for (int k = i; k <= j; k++) {\n                    sum += arr[k];\n                }\n            }\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_length_sum;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)4}))) == (14));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)1, (long)2}))) == (15));\n    assert(candidate((std::vector<long>({(long)1, (long)7}))) == (8));\n}\n",
      "timestamp": 1665517247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nlong odd_length_sum(std::vector<long> arr) {\n    long sum = 0;\n    for(int i = 0; i < arr.size(); i++) {\n        for(int j = i; j < arr.size(); j++) {\n            if((j - i + 1) % 2 != 0) {\n                for(int k = i; k <= j; k++) {\n                    sum += arr[k];\n                }\n            }\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_length_sum;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)4}))) == (14));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)1, (long)2}))) == (15));\n    assert(candidate((std::vector<long>({(long)1, (long)7}))) == (8));\n}\n",
      "timestamp": 1665517247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nlong odd_length_sum(std::vector<long> arr) {\n    long sum = 0;\n    for(long i = 0; i < arr.size(); i++) {\n        for(long j = i; j < arr.size(); j++) {\n            if((j - i + 1) % 2 != 0) {\n                for(long k = i; k <= j; k++) {\n                    sum += arr[k];\n                }\n            }\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_length_sum;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)4}))) == (14));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)1, (long)2}))) == (15));\n    assert(candidate((std::vector<long>({(long)1, (long)7}))) == (8));\n}\n",
      "timestamp": 1666122428,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nlong odd_length_sum(std::vector<long> arr) {\n\tlong sum = 0;\n\tfor(int i = 0; i < arr.size(); i++) {\n\t\tfor(int j = i; j < arr.size(); j++) {\n\t\t\tif((j - i + 1) % 2 != 0) {\n\t\t\t\tfor(int k = i; k <= j; k++) {\n\t\t\t\t\tsum += arr[k];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;\n}\nint main() {\n    auto candidate = odd_length_sum;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)4}))) == (14));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)1, (long)2}))) == (15));\n    assert(candidate((std::vector<long>({(long)1, (long)7}))) == (8));\n}\n",
      "timestamp": 1666122428,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nlong odd_length_sum(std::vector<long> arr) {\n    long sum = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        for (int j = i; j < arr.size(); j++) {\n            if ((j - i + 1) % 2 != 0) {\n                for (int k = i; k <= j; k++) {\n                    sum += arr[k];\n                }\n            }\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_length_sum;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)4}))) == (14));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)1, (long)2}))) == (15));\n    assert(candidate((std::vector<long>({(long)1, (long)7}))) == (8));\n}\n",
      "timestamp": 1665517247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nlong odd_length_sum(std::vector<long> arr) {\n    long sum = 0;\n    for(int i = 0; i < arr.size(); i++) {\n        for(int j = i; j < arr.size(); j++) {\n            if((j - i + 1) % 2 == 1) {\n                for(int k = i; k <= j; k++) {\n                    sum += arr[k];\n                }\n            }\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_length_sum;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)4}))) == (14));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)1, (long)2}))) == (15));\n    assert(candidate((std::vector<long>({(long)1, (long)7}))) == (8));\n}\n",
      "timestamp": 1666122428,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nlong odd_length_sum(std::vector<long> arr) {\n    long sum = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        for (int j = i; j < arr.size(); j++) {\n            if ((j - i + 1) % 2 != 0) {\n                for (int k = i; k <= j; k++) {\n                    sum += arr[k];\n                }\n            }\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_length_sum;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)4}))) == (14));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)1, (long)2}))) == (15));\n    assert(candidate((std::vector<long>({(long)1, (long)7}))) == (8));\n}\n",
      "timestamp": 1665517247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nlong odd_length_sum(std::vector<long> arr) {\n    long sum = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        for (int j = i; j < arr.size(); j++) {\n            if ((j - i + 1) % 2 != 0) {\n                for (int k = i; k <= j; k++) {\n                    sum += arr[k];\n                }\n            }\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_length_sum;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)4}))) == (14));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)1, (long)2}))) == (15));\n    assert(candidate((std::vector<long>({(long)1, (long)7}))) == (8));\n}\n",
      "timestamp": 1665517247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nlong odd_length_sum(std::vector<long> arr) {\n    long sum = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        for (int j = i; j < arr.size(); j++) {\n            if ((j - i + 1) % 2 != 0) {\n                for (int k = i; k <= j; k++) {\n                    sum += arr[k];\n                }\n            }\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_length_sum;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)4}))) == (14));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)1, (long)2}))) == (15));\n    assert(candidate((std::vector<long>({(long)1, (long)7}))) == (8));\n}\n",
      "timestamp": 1665517247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nlong odd_length_sum(std::vector<long> arr) {\n    long sum = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        for (int j = i; j < arr.size(); j++) {\n            if ((j - i + 1) % 2 != 0) {\n                for (int k = i; k <= j; k++) {\n                    sum += arr[k];\n                }\n            }\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_length_sum;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)4}))) == (14));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)1, (long)2}))) == (15));\n    assert(candidate((std::vector<long>({(long)1, (long)7}))) == (8));\n}\n",
      "timestamp": 1665517247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nlong odd_length_sum(std::vector<long> arr) {\n    long sum = 0;\n    int n = arr.size();\n    for(int i=0; i<n; i++) {\n        for(int j=i; j<n; j++) {\n            if((j-i+1)%2 != 0) {\n                for(int k=i; k<=j; k++) {\n                    sum += arr[k];\n                }\n            }\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_length_sum;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)4}))) == (14));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)1, (long)2}))) == (15));\n    assert(candidate((std::vector<long>({(long)1, (long)7}))) == (8));\n}\n",
      "timestamp": 1666122428,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nlong odd_length_sum(std::vector<long> arr) {\n    long sum = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        for (int j = i; j < arr.size(); j++) {\n            if ((j - i + 1) % 2 != 0) {\n                for (int k = i; k <= j; k++) {\n                    sum += arr[k];\n                }\n            }\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_length_sum;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)4}))) == (14));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)1, (long)2}))) == (15));\n    assert(candidate((std::vector<long>({(long)1, (long)7}))) == (8));\n}\n",
      "timestamp": 1665517247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nlong odd_length_sum(std::vector<long> arr) {\n    long sum = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        for (int j = i; j < arr.size(); j++) {\n            if ((j - i + 1) % 2 != 0) {\n                for (int k = i; k <= j; k++) {\n                    sum += arr[k];\n                }\n            }\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_length_sum;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)4}))) == (14));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)1, (long)2}))) == (15));\n    assert(candidate((std::vector<long>({(long)1, (long)7}))) == (8));\n}\n",
      "timestamp": 1665517247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nlong odd_length_sum(std::vector<long> arr) {\n    long sum = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        for (int j = i; j < arr.size(); j++) {\n            if ((j - i + 1) % 2 != 0) {\n                for (int k = i; k <= j; k++) {\n                    sum += arr[k];\n                }\n            }\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_length_sum;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)4}))) == (14));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)1, (long)2}))) == (15));\n    assert(candidate((std::vector<long>({(long)1, (long)7}))) == (8));\n}\n",
      "timestamp": 1665517247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nlong odd_length_sum(std::vector<long> arr) {\n    long sum = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        for (int j = i; j < arr.size(); j++) {\n            int len = j - i + 1;\n            if (len % 2 != 0) {\n                for (int k = i; k <= j; k++) {\n                    sum += arr[k];\n                }\n            }\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_length_sum;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)4}))) == (14));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)1, (long)2}))) == (15));\n    assert(candidate((std::vector<long>({(long)1, (long)7}))) == (8));\n}\n",
      "timestamp": 1666122428,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nlong odd_length_sum(std::vector<long> arr) {\n    long sum = 0;\n    for (long i = 0; i < arr.size(); i++) {\n        for (long j = i; j < arr.size(); j++) {\n            if ((j - i + 1) % 2 != 0) {\n                for (long k = i; k <= j; k++) {\n                    sum += arr[k];\n                }\n            }\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_length_sum;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)4}))) == (14));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)1, (long)2}))) == (15));\n    assert(candidate((std::vector<long>({(long)1, (long)7}))) == (8));\n}\n",
      "timestamp": 1665517247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nlong odd_length_sum(std::vector<long> arr) {\n    long sum = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        for (int j = i; j < arr.size(); j++) {\n            if ((j - i + 1) % 2 == 1) {\n                for (int k = i; k <= j; k++) {\n                    sum += arr[k];\n                }\n            }\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_length_sum;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)4}))) == (14));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)1, (long)2}))) == (15));\n    assert(candidate((std::vector<long>({(long)1, (long)7}))) == (8));\n}\n",
      "timestamp": 1665517248,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nlong odd_length_sum(std::vector<long> arr) {\n    long sum = 0;\n    for(long i = 0; i < arr.size(); i++) {\n        long odd_length = 1;\n        while(i - odd_length >= 0 && i + odd_length < arr.size()) {\n            sum += arr[i - odd_length] + arr[i + odd_length];\n            odd_length += 2;\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_length_sum;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)4}))) == (14));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)1, (long)2}))) == (15));\n    assert(candidate((std::vector<long>({(long)1, (long)7}))) == (8));\n}\n",
      "timestamp": 1666122428,
      "stdout": "",
      "stderr": "tmpywwpym91: /tmp/tmpywwpym91.cpp:17: int main(): Assertion `candidate((std::vector<long>({(long)1, (long)2, (long)4}))) == (14)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nlong odd_length_sum(std::vector<long> arr) {\n    long sum = 0;\n    for(long i = 0; i < arr.size(); i++) {\n        for(long j = i; j < arr.size(); j++) {\n            if((j - i + 1) % 2 != 0) {\n                for(long k = i; k <= j; k++) {\n                    sum += arr[k];\n                }\n            }\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_length_sum;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)4}))) == (14));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)1, (long)2}))) == (15));\n    assert(candidate((std::vector<long>({(long)1, (long)7}))) == (8));\n}\n",
      "timestamp": 1666122428,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nlong odd_length_sum(std::vector<long> arr) {\n    long sum = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        for (int j = i; j < arr.size(); j++) {\n            if ((j - i + 1) % 2 == 1) {\n                for (int k = i; k <= j; k++) {\n                    sum += arr[k];\n                }\n            }\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_length_sum;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)4}))) == (14));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)1, (long)2}))) == (15));\n    assert(candidate((std::vector<long>({(long)1, (long)7}))) == (8));\n}\n",
      "timestamp": 1665517248,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nlong odd_length_sum(std::vector<long> arr) {\n    long sum = 0;\n    for(int i = 0; i < arr.size(); i++) {\n        for(int j = i; j < arr.size(); j++) {\n            if((j - i + 1) % 2 != 0) {\n                for(int k = i; k <= j; k++) {\n                    sum += arr[k];\n                }\n            }\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_length_sum;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)4}))) == (14));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)1, (long)2}))) == (15));\n    assert(candidate((std::vector<long>({(long)1, (long)7}))) == (8));\n}\n",
      "timestamp": 1665517247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nlong odd_length_sum(std::vector<long> arr) {\n    long sum = 0;\n    for(int i = 0; i < arr.size(); i++) {\n        for(int j = i; j < arr.size(); j++) {\n            if((j - i + 1) % 2 != 0) {\n                for(int k = i; k <= j; k++) {\n                    sum += arr[k];\n                }\n            }\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_length_sum;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)4}))) == (14));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)1, (long)2}))) == (15));\n    assert(candidate((std::vector<long>({(long)1, (long)7}))) == (8));\n}\n",
      "timestamp": 1665517247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nlong odd_length_sum(std::vector<long> arr) {\n    long sum = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        for (int j = i; j < arr.size(); j++) {\n            if ((j - i + 1) % 2 != 0) {\n                for (int k = i; k <= j; k++) {\n                    sum += arr[k];\n                }\n            }\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_length_sum;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)4}))) == (14));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)1, (long)2}))) == (15));\n    assert(candidate((std::vector<long>({(long)1, (long)7}))) == (8));\n}\n",
      "timestamp": 1665517247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nlong odd_length_sum(std::vector<long> arr) {\n    long sum = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        for (int j = i; j < arr.size(); j++) {\n            if ((j - i + 1) % 2 != 0) {\n                for (int k = i; k <= j; k++) {\n                    sum += arr[k];\n                }\n            }\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_length_sum;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)4}))) == (14));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)1, (long)2}))) == (15));\n    assert(candidate((std::vector<long>({(long)1, (long)7}))) == (8));\n}\n",
      "timestamp": 1665517247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nlong odd_length_sum(std::vector<long> arr) {\n    long sum = 0;\n    for(int i = 0; i < arr.size(); i++) {\n        for(int j = i; j < arr.size(); j++) {\n            if((j - i + 1) % 2 != 0) {\n                for(int k = i; k <= j; k++) {\n                    sum += arr[k];\n                }\n            }\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_length_sum;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)4}))) == (14));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)1, (long)2}))) == (15));\n    assert(candidate((std::vector<long>({(long)1, (long)7}))) == (8));\n}\n",
      "timestamp": 1665517247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nlong odd_length_sum(std::vector<long> arr) {\n    long sum = 0;\n    for(int i = 0; i < arr.size(); i++) {\n        for(int j = i; j < arr.size(); j++) {\n            if((j - i + 1) % 2 != 0) {\n                for(int k = i; k <= j; k++) {\n                    sum += arr[k];\n                }\n            }\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_length_sum;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)4}))) == (14));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)1, (long)2}))) == (15));\n    assert(candidate((std::vector<long>({(long)1, (long)7}))) == (8));\n}\n",
      "timestamp": 1665517247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nlong odd_length_sum(std::vector<long> arr) {\n    long sum = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        for (int j = i; j < arr.size(); j++) {\n            if ((j - i + 1) % 2 != 0) {\n                for (int k = i; k <= j; k++) {\n                    sum += arr[k];\n                }\n            }\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_length_sum;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)4}))) == (14));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)1, (long)2}))) == (15));\n    assert(candidate((std::vector<long>({(long)1, (long)7}))) == (8));\n}\n",
      "timestamp": 1665517247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nlong odd_length_sum(std::vector<long> arr) {\n    long sum = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        for (int j = i; j < arr.size(); j++) {\n            if ((j - i + 1) % 2 == 1) {\n                for (int k = i; k <= j; k++) {\n                    sum += arr[k];\n                }\n            }\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_length_sum;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)4}))) == (14));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)1, (long)2}))) == (15));\n    assert(candidate((std::vector<long>({(long)1, (long)7}))) == (8));\n}\n",
      "timestamp": 1665517248,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nlong odd_length_sum(std::vector<long> arr) {\n    long sum = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        for (int j = i; j < arr.size(); j++) {\n            if ((j - i + 1) % 2 == 1) {\n                for (int k = i; k <= j; k++) {\n                    sum += arr[k];\n                }\n            }\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_length_sum;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)4}))) == (14));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)1, (long)2}))) == (15));\n    assert(candidate((std::vector<long>({(long)1, (long)7}))) == (8));\n}\n",
      "timestamp": 1665517248,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nlong odd_length_sum(std::vector<long> arr) {\n    long sum = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        // odd length subarray starting at i\n        for (int j = i; j < arr.size(); j += 2) {\n            for (int k = i; k <= j; k++) {\n                sum += arr[k];\n            }\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_length_sum;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)4}))) == (14));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)1, (long)2}))) == (15));\n    assert(candidate((std::vector<long>({(long)1, (long)7}))) == (8));\n}\n",
      "timestamp": 1666122428,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nlong odd_length_sum(std::vector<long> arr) {\n    long sum = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        for (int j = i; j < arr.size(); j++) {\n            if ((j - i + 1) % 2 != 0) {\n                for (int k = i; k <= j; k++) {\n                    sum += arr[k];\n                }\n            }\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_length_sum;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)4}))) == (14));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)1, (long)2}))) == (15));\n    assert(candidate((std::vector<long>({(long)1, (long)7}))) == (8));\n}\n",
      "timestamp": 1665517247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nlong odd_length_sum(std::vector<long> arr) {\n    long sum = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        for (int j = i; j < arr.size(); j++) {\n            if ((j - i + 1) % 2 != 0) {\n                for (int k = i; k <= j; k++) {\n                    sum += arr[k];\n                }\n            }\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_length_sum;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)4}))) == (14));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)1, (long)2}))) == (15));\n    assert(candidate((std::vector<long>({(long)1, (long)7}))) == (8));\n}\n",
      "timestamp": 1665517247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nlong odd_length_sum(std::vector<long> arr) {\n    long sum = 0;\n    for(int i = 0; i < arr.size(); i++) {\n        for(int j = i; j < arr.size(); j++) {\n            if((j - i + 1) % 2 != 0) {\n                for(int k = i; k <= j; k++) {\n                    sum += arr[k];\n                }\n            }\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_length_sum;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)4}))) == (14));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)1, (long)2}))) == (15));\n    assert(candidate((std::vector<long>({(long)1, (long)7}))) == (8));\n}\n",
      "timestamp": 1665517247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nlong odd_length_sum(std::vector<long> arr) {\n    long sum = 0;\n    for(int i = 0; i < arr.size(); i++) {\n        for(int j = i; j < arr.size(); j++) {\n            if((j - i + 1) % 2 != 0) {\n                for(int k = i; k <= j; k++) {\n                    sum += arr[k];\n                }\n            }\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_length_sum;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)4}))) == (14));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)1, (long)2}))) == (15));\n    assert(candidate((std::vector<long>({(long)1, (long)7}))) == (8));\n}\n",
      "timestamp": 1665517247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nlong odd_length_sum(std::vector<long> arr) {\n    long sum = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        for (int j = i; j < arr.size(); j++) {\n            if ((j - i + 1) % 2 != 0) {\n                for (int k = i; k <= j; k++) {\n                    sum += arr[k];\n                }\n            }\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_length_sum;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)4}))) == (14));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)1, (long)2}))) == (15));\n    assert(candidate((std::vector<long>({(long)1, (long)7}))) == (8));\n}\n",
      "timestamp": 1665517247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nlong odd_length_sum(std::vector<long> arr) {\n    long sum = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        for (int j = i; j < arr.size(); j++) {\n            if ((j - i + 1) % 2 != 0) {\n                for (int k = i; k <= j; k++) {\n                    sum += arr[k];\n                }\n            }\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_length_sum;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)4}))) == (14));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)1, (long)2}))) == (15));\n    assert(candidate((std::vector<long>({(long)1, (long)7}))) == (8));\n}\n",
      "timestamp": 1665517247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nlong odd_length_sum(std::vector<long> arr) {\n    long sum = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        for (int j = i; j < arr.size(); j++) {\n            if ((j - i + 1) % 2 != 0) {\n                for (int k = i; k <= j; k++) {\n                    sum += arr[k];\n                }\n            }\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_length_sum;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)4}))) == (14));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)1, (long)2}))) == (15));\n    assert(candidate((std::vector<long>({(long)1, (long)7}))) == (8));\n}\n",
      "timestamp": 1665517247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nlong odd_length_sum(std::vector<long> arr) {\n    int n = arr.size();\n    long sum = 0;\n    for (int i = 0; i < n; i++) {\n        for (int j = i; j < n; j++) {\n            if ((j - i + 1) % 2 != 0) {\n                for (int k = i; k <= j; k++) {\n                    sum += arr[k];\n                }\n            }\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_length_sum;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)4}))) == (14));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)1, (long)2}))) == (15));\n    assert(candidate((std::vector<long>({(long)1, (long)7}))) == (8));\n}\n",
      "timestamp": 1666122428,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nlong odd_length_sum(std::vector<long> arr) {\n    long sum = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        for (int j = i; j < arr.size(); j++) {\n            if ((j - i + 1) % 2 != 0) {\n                for (int k = i; k <= j; k++) {\n                    sum += arr[k];\n                }\n            }\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_length_sum;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)4}))) == (14));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)1, (long)2}))) == (15));\n    assert(candidate((std::vector<long>({(long)1, (long)7}))) == (8));\n}\n",
      "timestamp": 1665517247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nlong odd_length_sum(std::vector<long> arr) {\n    long sum = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        for (int j = i; j < arr.size(); j++) {\n            if ((j - i + 1) % 2 != 0) {\n                for (int k = i; k <= j; k++) {\n                    sum += arr[k];\n                }\n            }\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_length_sum;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)4}))) == (14));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)1, (long)2}))) == (15));\n    assert(candidate((std::vector<long>({(long)1, (long)7}))) == (8));\n}\n",
      "timestamp": 1665517247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nlong odd_length_sum(std::vector<long> arr) {\n    long sum = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        for (int j = i; j < arr.size(); j++) {\n            if ((j - i + 1) % 2 != 0) {\n                for (int k = i; k <= j; k++) {\n                    sum += arr[k];\n                }\n            }\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_length_sum;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)4}))) == (14));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)1, (long)2}))) == (15));\n    assert(candidate((std::vector<long>({(long)1, (long)7}))) == (8));\n}\n",
      "timestamp": 1665517247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nlong odd_length_sum(std::vector<long> arr) {\n    long sum = 0;\n    for(int i=0; i<arr.size(); i++) {\n        sum += arr[i];\n    }\n    for(int i=1; i<arr.size(); i++) {\n        for(int j=0; j<arr.size()-i; j++) {\n            sum += arr[j] + arr[j+i];\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_length_sum;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)4}))) == (14));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)1, (long)2}))) == (15));\n    assert(candidate((std::vector<long>({(long)1, (long)7}))) == (8));\n}\n",
      "timestamp": 1666122428,
      "stdout": "",
      "stderr": "tmp_rxzeek5: /tmp/tmp_rxzeek5.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)1, (long)2, (long)4}))) == (14)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nlong odd_length_sum(std::vector<long> arr) {\n    long sum = 0;\n    for(int i=0;i<arr.size();i++) {\n        for(int j=i;j<arr.size();j++) {\n            if((j-i+1)%2!=0) {\n                for(int k=i;k<=j;k++) {\n                    sum += arr[k];\n                }\n            }\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_length_sum;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)4}))) == (14));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)1, (long)2}))) == (15));\n    assert(candidate((std::vector<long>({(long)1, (long)7}))) == (8));\n}\n",
      "timestamp": 1666122428,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nlong odd_length_sum(std::vector<long> arr) {\n    long sum = 0;\n    for(long i = 0; i < arr.size(); i++) {\n        for(long j = i; j < arr.size(); j++) {\n            if((j - i + 1) % 2 != 0) {\n                for(long k = i; k <= j; k++) {\n                    sum += arr[k];\n                }\n            }\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_length_sum;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)4}))) == (14));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)1, (long)2}))) == (15));\n    assert(candidate((std::vector<long>({(long)1, (long)7}))) == (8));\n}\n",
      "timestamp": 1666122428,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nlong odd_length_sum(std::vector<long> arr) {\n    long sum = 0;\n    for(int i = 0; i < arr.size(); i++) {\n        for(int j = i; j < arr.size(); j++) {\n            if((j - i + 1) % 2 != 0) {\n                for(int k = i; k <= j; k++) {\n                    sum += arr[k];\n                }\n            }\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_length_sum;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)4}))) == (14));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)1, (long)2}))) == (15));\n    assert(candidate((std::vector<long>({(long)1, (long)7}))) == (8));\n}\n",
      "timestamp": 1665517247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nlong odd_length_sum(std::vector<long> arr) {\n    long sum = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        for (int j = i; j < arr.size(); j++) {\n            if ((j - i + 1) % 2 != 0) {\n                for (int k = i; k <= j; k++) {\n                    sum += arr[k];\n                }\n            }\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_length_sum;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)4}))) == (14));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)1, (long)2}))) == (15));\n    assert(candidate((std::vector<long>({(long)1, (long)7}))) == (8));\n}\n",
      "timestamp": 1665517247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nlong odd_length_sum(std::vector<long> arr) {\n    long sum = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        for (int j = i; j < arr.size(); j++) {\n            if ((j - i + 1) % 2 != 0) {\n                for (int k = i; k <= j; k++) {\n                    sum += arr[k];\n                }\n            }\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_length_sum;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)4}))) == (14));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)1, (long)2}))) == (15));\n    assert(candidate((std::vector<long>({(long)1, (long)7}))) == (8));\n}\n",
      "timestamp": 1665517247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nlong odd_length_sum(std::vector<long> arr) {\n    long sum = 0;\n    for (long i = 0; i < arr.size(); i++) {\n        for (long j = i; j < arr.size(); j++) {\n            if ((j - i + 1) % 2 != 0) {\n                for (long k = i; k <= j; k++) {\n                    sum += arr[k];\n                }\n            }\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_length_sum;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)4}))) == (14));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)1, (long)2}))) == (15));\n    assert(candidate((std::vector<long>({(long)1, (long)7}))) == (8));\n}\n",
      "timestamp": 1665517247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nlong odd_length_sum(std::vector<long> arr) {\n    long sum = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        for (int j = i; j < arr.size(); j++) {\n            if ((j - i + 1) % 2 != 0) {\n                for (int k = i; k <= j; k++) {\n                    sum += arr[k];\n                }\n            }\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_length_sum;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)4}))) == (14));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)1, (long)2}))) == (15));\n    assert(candidate((std::vector<long>({(long)1, (long)7}))) == (8));\n}\n",
      "timestamp": 1665517247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nlong odd_length_sum(std::vector<long> arr) {\n    long sum = 0;\n    for(int i = 0; i < arr.size(); i++) {\n        for(int j = i; j < arr.size(); j++) {\n            if((j - i + 1) % 2 != 0) {\n                for(int k = i; k <= j; k++) {\n                    sum += arr[k];\n                }\n            }\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_length_sum;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)4}))) == (14));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)1, (long)2}))) == (15));\n    assert(candidate((std::vector<long>({(long)1, (long)7}))) == (8));\n}\n",
      "timestamp": 1665517247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nlong odd_length_sum(std::vector<long> arr) {\n    long sum = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        for (int j = i; j < arr.size(); j++) {\n            if ((j - i + 1) % 2 != 0) {\n                for (int k = i; k <= j; k++) {\n                    sum += arr[k];\n                }\n            }\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_length_sum;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)4}))) == (14));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)1, (long)2}))) == (15));\n    assert(candidate((std::vector<long>({(long)1, (long)7}))) == (8));\n}\n",
      "timestamp": 1665517247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nlong odd_length_sum(std::vector<long> arr) {\n    long sum = 0;\n    for(int i = 0; i < arr.size(); i++) {\n        for(int j = i; j < arr.size(); j++) {\n            if((j - i + 1) % 2 != 0) {\n                for(int k = i; k <= j; k++) {\n                    sum += arr[k];\n                }\n            }\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_length_sum;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)4}))) == (14));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)1, (long)2}))) == (15));\n    assert(candidate((std::vector<long>({(long)1, (long)7}))) == (8));\n}\n",
      "timestamp": 1665517247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nlong odd_length_sum(std::vector<long> arr) {\n    long sum = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        for (int j = i; j < arr.size(); j++) {\n            if ((j - i + 1) % 2 != 0) {\n                for (int k = i; k <= j; k++) {\n                    sum += arr[k];\n                }\n            }\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_length_sum;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)4}))) == (14));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)1, (long)2}))) == (15));\n    assert(candidate((std::vector<long>({(long)1, (long)7}))) == (8));\n}\n",
      "timestamp": 1665517247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nlong odd_length_sum(std::vector<long> arr) {\n    long sum = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        for (int j = i; j < arr.size(); j++) {\n            if ((j - i + 1) % 2 != 0) {\n                for (int k = i; k <= j; k++) {\n                    sum += arr[k];\n                }\n            }\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_length_sum;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)4}))) == (14));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)1, (long)2}))) == (15));\n    assert(candidate((std::vector<long>({(long)1, (long)7}))) == (8));\n}\n",
      "timestamp": 1665517247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nlong odd_length_sum(std::vector<long> arr) {\n    long sum = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        for (int j = i; j < arr.size(); j++) {\n            if ((j - i + 1) % 2 != 0) {\n                for (int k = i; k <= j; k++) {\n                    sum += arr[k];\n                }\n            }\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_length_sum;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)4}))) == (14));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)1, (long)2}))) == (15));\n    assert(candidate((std::vector<long>({(long)1, (long)7}))) == (8));\n}\n",
      "timestamp": 1665517247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nlong odd_length_sum(std::vector<long> arr) {\n    long sum = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        for (int j = i; j < arr.size(); j++) {\n            if ((j - i + 1) % 2 != 0) {\n                for (int k = i; k <= j; k++) {\n                    sum += arr[k];\n                }\n            }\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_length_sum;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)4}))) == (14));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)1, (long)2}))) == (15));\n    assert(candidate((std::vector<long>({(long)1, (long)7}))) == (8));\n}\n",
      "timestamp": 1665517247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nlong odd_length_sum(std::vector<long> arr) {\n    long sum = 0;\n    for(int i = 0; i < arr.size(); i++) {\n        for(int j = i; j < arr.size(); j++) {\n            if((j - i + 1) % 2 != 0) {\n                for(int k = i; k <= j; k++) {\n                    sum += arr[k];\n                }\n            }\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_length_sum;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)4}))) == (14));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)1, (long)2}))) == (15));\n    assert(candidate((std::vector<long>({(long)1, (long)7}))) == (8));\n}\n",
      "timestamp": 1665517247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nlong odd_length_sum(std::vector<long> arr) {\n    long sum = 0;\n    for(int i = 0; i < arr.size(); i++) {\n        for(int j = i; j < arr.size(); j++) {\n            if((j - i + 1) % 2 != 0) {\n                for(int k = i; k <= j; k++) {\n                    sum += arr[k];\n                }\n            }\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_length_sum;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)4}))) == (14));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)1, (long)2}))) == (15));\n    assert(candidate((std::vector<long>({(long)1, (long)7}))) == (8));\n}\n",
      "timestamp": 1665517247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nlong odd_length_sum(std::vector<long> arr) {\n    long sum = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        for (int j = i; j < arr.size(); j++) {\n            if ((j - i + 1) % 2 != 0) {\n                for (int k = i; k <= j; k++) {\n                    sum += arr[k];\n                }\n            }\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_length_sum;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)4}))) == (14));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)1, (long)2}))) == (15));\n    assert(candidate((std::vector<long>({(long)1, (long)7}))) == (8));\n}\n",
      "timestamp": 1665517247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nlong odd_length_sum(std::vector<long> arr) {\n    long sum = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        for (int j = i; j < arr.size(); j++) {\n            if ((j - i + 1) % 2 != 0) {\n                for (int k = i; k <= j; k++) {\n                    sum += arr[k];\n                }\n            }\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_length_sum;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)4}))) == (14));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)1, (long)2}))) == (15));\n    assert(candidate((std::vector<long>({(long)1, (long)7}))) == (8));\n}\n",
      "timestamp": 1665517247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nlong odd_length_sum(std::vector<long> arr) {\n    long sum = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        for (int j = i; j < arr.size(); j++) {\n            if ((j - i + 1) % 2 == 1) {\n                for (int k = i; k <= j; k++) {\n                    sum += arr[k];\n                }\n            }\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_length_sum;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)4}))) == (14));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)1, (long)2}))) == (15));\n    assert(candidate((std::vector<long>({(long)1, (long)7}))) == (8));\n}\n",
      "timestamp": 1665517248,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nlong odd_length_sum(std::vector<long> arr) {\n    long sum = 0;\n    for(int i = 0; i < arr.size(); i++) {\n        for(int j = i; j < arr.size(); j++) {\n            if((j - i + 1) % 2 != 0) {\n                for(int k = i; k <= j; k++) {\n                    sum += arr[k];\n                }\n            }\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_length_sum;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)4}))) == (14));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)1, (long)2}))) == (15));\n    assert(candidate((std::vector<long>({(long)1, (long)7}))) == (8));\n}\n",
      "timestamp": 1665517247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nlong odd_length_sum(std::vector<long> arr) {\n    long sum = 0;\n    int n = arr.size();\n    for (int i = 0; i < n; i++) {\n        for (int j = i; j < n; j++) {\n            if ((j - i + 1) % 2 == 1) {\n                for (int k = i; k <= j; k++) {\n                    sum += arr[k];\n                }\n            }\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_length_sum;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)4}))) == (14));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)1, (long)2}))) == (15));\n    assert(candidate((std::vector<long>({(long)1, (long)7}))) == (8));\n}\n",
      "timestamp": 1666122428,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nlong odd_length_sum(std::vector<long> arr) {\n    long sum = 0;\n    for(int i = 0; i < arr.size(); i++) {\n        for(int j = i; j < arr.size(); j++) {\n            if((j - i + 1) % 2 != 0) {\n                for(int k = i; k <= j; k++) {\n                    sum += arr[k];\n                }\n            }\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_length_sum;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)4}))) == (14));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)1, (long)2}))) == (15));\n    assert(candidate((std::vector<long>({(long)1, (long)7}))) == (8));\n}\n",
      "timestamp": 1665517247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nlong odd_length_sum(std::vector<long> arr) {\n    long sum = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        for (int j = i; j < arr.size(); j++) {\n            if ((j - i + 1) % 2 != 0) {\n                for (int k = i; k <= j; k++) {\n                    sum += arr[k];\n                }\n            }\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_length_sum;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)4}))) == (14));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)1, (long)2}))) == (15));\n    assert(candidate((std::vector<long>({(long)1, (long)7}))) == (8));\n}\n",
      "timestamp": 1665517247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nlong odd_length_sum(std::vector<long> arr) {\n    // Write your code here\n    long sum = 0;\n    int n = arr.size();\n    for (int i = 0; i < n; i++) {\n        for (int j = i; j < n; j++) {\n            int len = j - i + 1;\n            if (len % 2 != 0) {\n                for (int k = i; k <= j; k++) {\n                    sum += arr[k];\n                }\n            }\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_length_sum;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)4}))) == (14));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)1, (long)2}))) == (15));\n    assert(candidate((std::vector<long>({(long)1, (long)7}))) == (8));\n}\n",
      "timestamp": 1666122428,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nlong odd_length_sum(std::vector<long> arr) {\n    long sum = 0;\n    int n = arr.size();\n    for (int i = 0; i < n; i++) {\n        for (int j = i; j < n; j++) {\n            if ((j - i + 1) % 2 != 0) {\n                for (int k = i; k <= j; k++) {\n                    sum += arr[k];\n                }\n            }\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_length_sum;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)4}))) == (14));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)1, (long)2}))) == (15));\n    assert(candidate((std::vector<long>({(long)1, (long)7}))) == (8));\n}\n",
      "timestamp": 1665517247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nlong odd_length_sum(std::vector<long> arr) {\n    long sum = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        for (int j = i; j < arr.size(); j++) {\n            if ((j - i + 1) % 2 != 0) {\n                for (int k = i; k <= j; k++) {\n                    sum += arr[k];\n                }\n            }\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_length_sum;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)4}))) == (14));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)1, (long)2}))) == (15));\n    assert(candidate((std::vector<long>({(long)1, (long)7}))) == (8));\n}\n",
      "timestamp": 1665517247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nlong odd_length_sum(std::vector<long> arr) {\n    long sum = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        for (int j = i; j < arr.size(); j++) {\n            if ((j - i + 1) % 2 != 0) {\n                for (int k = i; k <= j; k++) {\n                    sum += arr[k];\n                }\n            }\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_length_sum;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)4}))) == (14));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)1, (long)2}))) == (15));\n    assert(candidate((std::vector<long>({(long)1, (long)7}))) == (8));\n}\n",
      "timestamp": 1665517247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nlong odd_length_sum(std::vector<long> arr) {\n    long sum = 0;\n    long n = arr.size();\n    for (long i = 0; i < n; i++) {\n        long curr_sum = 0;\n        for (long j = i; j < n; j++) {\n            curr_sum += arr[j];\n            if ((j - i + 1) % 2 != 0) {\n                sum += curr_sum;\n            }\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_length_sum;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)4}))) == (14));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)1, (long)2}))) == (15));\n    assert(candidate((std::vector<long>({(long)1, (long)7}))) == (8));\n}\n",
      "timestamp": 1666122428,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nlong odd_length_sum(std::vector<long> arr) {\n    long sum = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        for (int j = i; j < arr.size(); j++) {\n            if ((j - i + 1) % 2 != 0) {\n                for (int k = i; k <= j; k++) {\n                    sum += arr[k];\n                }\n            }\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_length_sum;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)4}))) == (14));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)1, (long)2}))) == (15));\n    assert(candidate((std::vector<long>({(long)1, (long)7}))) == (8));\n}\n",
      "timestamp": 1665517247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nlong odd_length_sum(std::vector<long> arr) {\n    long sum = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        for (int j = i; j < arr.size(); j++) {\n            if ((j - i + 1) % 2 != 0) {\n                for (int k = i; k <= j; k++) {\n                    sum += arr[k];\n                }\n            }\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_length_sum;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)4}))) == (14));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)1, (long)2}))) == (15));\n    assert(candidate((std::vector<long>({(long)1, (long)7}))) == (8));\n}\n",
      "timestamp": 1665517247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nlong odd_length_sum(std::vector<long> arr) {\n    long sum = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        for (int j = i; j < arr.size(); j++) {\n            if ((j - i + 1) % 2 == 1) {\n                for (int k = i; k <= j; k++) {\n                    sum += arr[k];\n                }\n            }\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_length_sum;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)4}))) == (14));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)1, (long)2}))) == (15));\n    assert(candidate((std::vector<long>({(long)1, (long)7}))) == (8));\n}\n",
      "timestamp": 1665517248,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nlong odd_length_sum(std::vector<long> arr) {\n    long sum = 0;\n    for(int i = 0; i < arr.size(); i++) {\n        for(int j = i; j < arr.size(); j++) {\n            if((j - i + 1) % 2 != 0) {\n                for(int k = i; k <= j; k++) {\n                    sum += arr[k];\n                }\n            }\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_length_sum;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)4}))) == (14));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)1, (long)2}))) == (15));\n    assert(candidate((std::vector<long>({(long)1, (long)7}))) == (8));\n}\n",
      "timestamp": 1665517247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nlong odd_length_sum(std::vector<long> arr) {\n    long sum = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        for (int j = i; j < arr.size(); j++) {\n            if ((j - i + 1) % 2 != 0) {\n                for (int k = i; k <= j; k++) {\n                    sum += arr[k];\n                }\n            }\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_length_sum;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)4}))) == (14));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)1, (long)2}))) == (15));\n    assert(candidate((std::vector<long>({(long)1, (long)7}))) == (8));\n}\n",
      "timestamp": 1665517247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nlong odd_length_sum(std::vector<long> arr) {\n    long sum = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        for (int j = i; j < arr.size(); j++) {\n            if ((j - i + 1) % 2 != 0) {\n                for (int k = i; k <= j; k++) {\n                    sum += arr[k];\n                }\n            }\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_length_sum;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)4}))) == (14));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)1, (long)2}))) == (15));\n    assert(candidate((std::vector<long>({(long)1, (long)7}))) == (8));\n}\n",
      "timestamp": 1665517247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nlong odd_length_sum(std::vector<long> arr) {\n    long sum = 0;\n    for(int i = 0; i < arr.size(); i++) {\n        for(int j = i; j < arr.size(); j++) {\n            if((j - i + 1) % 2 != 0) {\n                for(int k = i; k <= j; k++) {\n                    sum += arr[k];\n                }\n            }\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_length_sum;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)4}))) == (14));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)1, (long)2}))) == (15));\n    assert(candidate((std::vector<long>({(long)1, (long)7}))) == (8));\n}\n",
      "timestamp": 1665517247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nlong odd_length_sum(std::vector<long> arr) {\n    long sum = 0;\n    for(int i = 0; i < arr.size(); i++) {\n        for(int j = i; j < arr.size(); j++) {\n            if((j - i + 1) % 2 != 0) {\n                for(int k = i; k <= j; k++) {\n                    sum += arr[k];\n                }\n            }\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_length_sum;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)4}))) == (14));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)1, (long)2}))) == (15));\n    assert(candidate((std::vector<long>({(long)1, (long)7}))) == (8));\n}\n",
      "timestamp": 1665517247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nlong odd_length_sum(std::vector<long> arr) {\n    long sum = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        for (int j = i; j < arr.size(); j++) {\n            if ((j - i + 1) % 2 != 0) {\n                for (int k = i; k <= j; k++) {\n                    sum += arr[k];\n                }\n            }\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_length_sum;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)4}))) == (14));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)1, (long)2}))) == (15));\n    assert(candidate((std::vector<long>({(long)1, (long)7}))) == (8));\n}\n",
      "timestamp": 1665517247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nlong odd_length_sum(std::vector<long> arr) {\n    long sum = 0;\n    for(long i = 0; i < arr.size(); i++) {\n        for(long j = i; j < arr.size(); j++) {\n            if((j - i + 1) % 2 != 0) {\n                for(long k = i; k <= j; k++) {\n                    sum += arr[k];\n                }\n            }\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_length_sum;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)4}))) == (14));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)1, (long)2}))) == (15));\n    assert(candidate((std::vector<long>({(long)1, (long)7}))) == (8));\n}\n",
      "timestamp": 1666122428,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nlong odd_length_sum(std::vector<long> arr) {\n    long sum = 0;\n    for(int i = 0; i < arr.size(); i++) {\n        for(int j = i; j < arr.size(); j++) {\n            if((j - i + 1) % 2 != 0) {\n                for(int k = i; k <= j; k++) {\n                    sum += arr[k];\n                }\n            }\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_length_sum;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)4}))) == (14));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)1, (long)2}))) == (15));\n    assert(candidate((std::vector<long>({(long)1, (long)7}))) == (8));\n}\n",
      "timestamp": 1665517247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nlong odd_length_sum(std::vector<long> arr) {\n    long sum = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        for (int j = i; j < arr.size(); j++) {\n            if ((j - i + 1) % 2 != 0) {\n                for (int k = i; k <= j; k++) {\n                    sum += arr[k];\n                }\n            }\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_length_sum;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)4}))) == (14));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)1, (long)2}))) == (15));\n    assert(candidate((std::vector<long>({(long)1, (long)7}))) == (8));\n}\n",
      "timestamp": 1665517247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nlong odd_length_sum(std::vector<long> arr) {\n    long sum = 0;\n    for(int i = 0; i < arr.size(); i++) {\n        for(int j = i; j < arr.size(); j++) {\n            if((j - i + 1) % 2 != 0) {\n                for(int k = i; k <= j; k++) {\n                    sum += arr[k];\n                }\n            }\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_length_sum;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)4}))) == (14));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)1, (long)2}))) == (15));\n    assert(candidate((std::vector<long>({(long)1, (long)7}))) == (8));\n}\n",
      "timestamp": 1665517247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nlong odd_length_sum(std::vector<long> arr) {\n    long sum = 0;\n    for(int i = 0; i < arr.size(); i++) {\n        for(int j = i; j < arr.size(); j++) {\n            if((j - i + 1) % 2 != 0) {\n                for(int k = i; k <= j; k++) {\n                    sum += arr[k];\n                }\n            }\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_length_sum;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)4}))) == (14));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)1, (long)2}))) == (15));\n    assert(candidate((std::vector<long>({(long)1, (long)7}))) == (8));\n}\n",
      "timestamp": 1665517247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nlong odd_length_sum(std::vector<long> arr) {\n    long sum = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        for (int j = i; j < arr.size(); j++) {\n            if ((j - i + 1) % 2 != 0) {\n                for (int k = i; k <= j; k++) {\n                    sum += arr[k];\n                }\n            }\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_length_sum;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)4}))) == (14));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)1, (long)2}))) == (15));\n    assert(candidate((std::vector<long>({(long)1, (long)7}))) == (8));\n}\n",
      "timestamp": 1665517247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nlong odd_length_sum(std::vector<long> arr) {\n    long sum = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        for (int j = i; j < arr.size(); j++) {\n            if ((j - i + 1) % 2 != 0) {\n                for (int k = i; k <= j; k++) {\n                    sum += arr[k];\n                }\n            }\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_length_sum;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)4}))) == (14));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)1, (long)2}))) == (15));\n    assert(candidate((std::vector<long>({(long)1, (long)7}))) == (8));\n}\n",
      "timestamp": 1665517247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nlong odd_length_sum(std::vector<long> arr) {\n    long sum = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        for (int j = i; j < arr.size(); j++) {\n            if ((j - i + 1) % 2 != 0) {\n                for (int k = i; k <= j; k++) {\n                    sum += arr[k];\n                }\n            }\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_length_sum;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)4}))) == (14));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)1, (long)2}))) == (15));\n    assert(candidate((std::vector<long>({(long)1, (long)7}))) == (8));\n}\n",
      "timestamp": 1665517247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nlong odd_length_sum(std::vector<long> arr) {\n    long sum = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        for (int j = i; j < arr.size(); j++) {\n            if ((j - i + 1) % 2 != 0) {\n                for (int k = i; k <= j; k++) {\n                    sum += arr[k];\n                }\n            }\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_length_sum;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)4}))) == (14));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)1, (long)2}))) == (15));\n    assert(candidate((std::vector<long>({(long)1, (long)7}))) == (8));\n}\n",
      "timestamp": 1665517247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nlong odd_length_sum(std::vector<long> arr) {\n    long sum = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        for (int j = i; j < arr.size(); j++) {\n            if ((j - i + 1) % 2 != 0) {\n                for (int k = i; k <= j; k++) {\n                    sum += arr[k];\n                }\n            }\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_length_sum;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)4}))) == (14));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)1, (long)2}))) == (15));\n    assert(candidate((std::vector<long>({(long)1, (long)7}))) == (8));\n}\n",
      "timestamp": 1665517247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nlong odd_length_sum(std::vector<long> arr) {\n    long sum = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        for (int j = i; j < arr.size(); j++) {\n            if ((j - i + 1) % 2 != 0) {\n                for (int k = i; k <= j; k++) {\n                    sum += arr[k];\n                }\n            }\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_length_sum;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)4}))) == (14));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)1, (long)2}))) == (15));\n    assert(candidate((std::vector<long>({(long)1, (long)7}))) == (8));\n}\n",
      "timestamp": 1665517247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nlong odd_length_sum(std::vector<long> arr) {\n    long sum = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        for (int j = i; j < arr.size(); j++) {\n            if ((j - i + 1) % 2 != 0) {\n                for (int k = i; k <= j; k++) {\n                    sum += arr[k];\n                }\n            }\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_length_sum;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)4}))) == (14));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)1, (long)2}))) == (15));\n    assert(candidate((std::vector<long>({(long)1, (long)7}))) == (8));\n}\n",
      "timestamp": 1665517247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nlong odd_length_sum(std::vector<long> arr) {\n    long sum = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        for (int j = i; j < arr.size(); j++) {\n            if ((j - i + 1) % 2 != 0) {\n                for (int k = i; k <= j; k++) {\n                    sum += arr[k];\n                }\n            }\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_length_sum;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)4}))) == (14));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)1, (long)2}))) == (15));\n    assert(candidate((std::vector<long>({(long)1, (long)7}))) == (8));\n}\n",
      "timestamp": 1665517247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nlong odd_length_sum(std::vector<long> arr) {\n    long sum = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        for (int j = i; j < arr.size(); j++) {\n            if ((j - i + 1) % 2 != 0) {\n                for (int k = i; k <= j; k++) {\n                    sum += arr[k];\n                }\n            }\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_length_sum;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)4}))) == (14));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)1, (long)2}))) == (15));\n    assert(candidate((std::vector<long>({(long)1, (long)7}))) == (8));\n}\n",
      "timestamp": 1665517247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nlong odd_length_sum(std::vector<long> arr) {\n    long sum = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        for (int j = i; j < arr.size(); j++) {\n            if ((j - i + 1) % 2 != 0) {\n                for (int k = i; k <= j; k++) {\n                    sum += arr[k];\n                }\n            }\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_length_sum;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)4}))) == (14));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)1, (long)2}))) == (15));\n    assert(candidate((std::vector<long>({(long)1, (long)7}))) == (8));\n}\n",
      "timestamp": 1665517247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nlong odd_length_sum(std::vector<long> arr) {\n    long sum = 0;\n    for(int i = 0; i < arr.size(); i++) {\n        for(int j = i; j < arr.size(); j++) {\n            if((j - i + 1) % 2 != 0) {\n                for(int k = i; k <= j; k++) {\n                    sum += arr[k];\n                }\n            }\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_length_sum;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)4}))) == (14));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)1, (long)2}))) == (15));\n    assert(candidate((std::vector<long>({(long)1, (long)7}))) == (8));\n}\n",
      "timestamp": 1665517247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nlong odd_length_sum(std::vector<long> arr) {\n    long sum = 0;\n    for(int i = 0; i < arr.size(); i++) {\n        for(int j = i; j < arr.size(); j++) {\n            if((j - i + 1) % 2 != 0) {\n                for(int k = i; k <= j; k++) {\n                    sum += arr[k];\n                }\n            }\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_length_sum;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)4}))) == (14));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)1, (long)2}))) == (15));\n    assert(candidate((std::vector<long>({(long)1, (long)7}))) == (8));\n}\n",
      "timestamp": 1665517247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nlong odd_length_sum(std::vector<long> arr) {\n    long sum = 0;\n    for(long i = 0; i < arr.size(); i++) {\n        for(long j = i; j < arr.size(); j++) {\n            if((j - i + 1) % 2 != 0) {\n                for(long k = i; k <= j; k++) {\n                    sum += arr[k];\n                }\n            }\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_length_sum;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)4}))) == (14));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)1, (long)2}))) == (15));\n    assert(candidate((std::vector<long>({(long)1, (long)7}))) == (8));\n}\n",
      "timestamp": 1666122428,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nlong odd_length_sum(std::vector<long> arr) {\n    long sum = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        for (int j = i; j < arr.size(); j++) {\n            if ((j - i + 1) % 2 != 0) {\n                for (int k = i; k <= j; k++) {\n                    sum += arr[k];\n                }\n            }\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_length_sum;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)4}))) == (14));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)1, (long)2}))) == (15));\n    assert(candidate((std::vector<long>({(long)1, (long)7}))) == (8));\n}\n",
      "timestamp": 1665517247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nlong odd_length_sum(std::vector<long> arr) {\n    long sum = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        for (int j = i; j < arr.size(); j++) {\n            if ((j - i + 1) % 2 == 1) {\n                for (int k = i; k <= j; k++) {\n                    sum += arr[k];\n                }\n            }\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_length_sum;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)4}))) == (14));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)1, (long)2}))) == (15));\n    assert(candidate((std::vector<long>({(long)1, (long)7}))) == (8));\n}\n",
      "timestamp": 1665517248,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nlong odd_length_sum(std::vector<long> arr) {\n    long sum = 0;\n    for (long i = 0; i < arr.size(); i++) {\n        for (long j = i; j < arr.size(); j++) {\n            if ((j - i + 1) % 2 != 0) {\n                for (long k = i; k <= j; k++) {\n                    sum += arr[k];\n                }\n            }\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_length_sum;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)4}))) == (14));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)1, (long)2}))) == (15));\n    assert(candidate((std::vector<long>({(long)1, (long)7}))) == (8));\n}\n",
      "timestamp": 1665517247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nlong odd_length_sum(std::vector<long> arr) {\n    long sum = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        for (int j = i; j < arr.size(); j++) {\n            if ((j - i + 1) % 2 != 0) {\n                for (int k = i; k <= j; k++) {\n                    sum += arr[k];\n                }\n            }\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_length_sum;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)4}))) == (14));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)1, (long)2}))) == (15));\n    assert(candidate((std::vector<long>({(long)1, (long)7}))) == (8));\n}\n",
      "timestamp": 1665517247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nlong odd_length_sum(std::vector<long> arr) {\n    long sum = 0;\n    for(int i = 0; i < arr.size(); i++) {\n        for(int j = i; j < arr.size(); j++) {\n            if((j - i + 1) % 2 != 0) {\n                for(int k = i; k <= j; k++) {\n                    sum += arr[k];\n                }\n            }\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_length_sum;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)4}))) == (14));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)1, (long)2}))) == (15));\n    assert(candidate((std::vector<long>({(long)1, (long)7}))) == (8));\n}\n",
      "timestamp": 1665517247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nlong odd_length_sum(std::vector<long> arr) {\n    long sum = 0;\n    for(int i = 0; i < arr.size(); i++) {\n        for(int j = i; j < arr.size(); j++) {\n            if((j - i + 1) % 2 != 0) {\n                for(int k = i; k <= j; k++) {\n                    sum += arr[k];\n                }\n            }\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_length_sum;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)4}))) == (14));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)1, (long)2}))) == (15));\n    assert(candidate((std::vector<long>({(long)1, (long)7}))) == (8));\n}\n",
      "timestamp": 1665517247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nlong odd_length_sum(std::vector<long> arr) {\n    long sum = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        for (int j = i; j < arr.size(); j++) {\n            if ((j - i + 1) % 2 != 0) {\n                for (int k = i; k <= j; k++) {\n                    sum += arr[k];\n                }\n            }\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_length_sum;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)4}))) == (14));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)1, (long)2}))) == (15));\n    assert(candidate((std::vector<long>({(long)1, (long)7}))) == (8));\n}\n",
      "timestamp": 1665517247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nlong odd_length_sum(std::vector<long> arr) {\n    long sum = 0;\n    for(int i = 0; i < arr.size(); i++) {\n        for(int j = i; j < arr.size(); j++) {\n            if((j - i + 1) % 2 == 1) {\n                for(int k = i; k <= j; k++) {\n                    sum += arr[k];\n                }\n            }\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_length_sum;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)4}))) == (14));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)1, (long)2}))) == (15));\n    assert(candidate((std::vector<long>({(long)1, (long)7}))) == (8));\n}\n",
      "timestamp": 1666122428,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nlong odd_length_sum(std::vector<long> arr) {\n    long sum = 0;\n    for(int i = 0; i < arr.size(); i++) {\n        for(int j = i; j < arr.size(); j++) {\n            if((j - i + 1) % 2 == 1) {\n                for(int k = i; k <= j; k++) {\n                    sum += arr[k];\n                }\n            }\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_length_sum;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)4}))) == (14));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)1, (long)2}))) == (15));\n    assert(candidate((std::vector<long>({(long)1, (long)7}))) == (8));\n}\n",
      "timestamp": 1666122428,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nlong odd_length_sum(std::vector<long> arr) {\n    long sum = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        for (int j = i; j < arr.size(); j++) {\n            if ((j - i + 1) % 2 != 0) {\n                for (int k = i; k <= j; k++) {\n                    sum += arr[k];\n                }\n            }\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_length_sum;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)4}))) == (14));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)1, (long)2}))) == (15));\n    assert(candidate((std::vector<long>({(long)1, (long)7}))) == (8));\n}\n",
      "timestamp": 1665517247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nlong odd_length_sum(std::vector<long> arr) {\n    long sum = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        for (int j = i; j < arr.size(); j++) {\n            if ((j - i + 1) % 2 != 0) {\n                for (int k = i; k <= j; k++) {\n                    sum += arr[k];\n                }\n            }\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_length_sum;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)4}))) == (14));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)1, (long)2}))) == (15));\n    assert(candidate((std::vector<long>({(long)1, (long)7}))) == (8));\n}\n",
      "timestamp": 1665517247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nlong odd_length_sum(std::vector<long> arr) {\n    long sum = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        for (int j = i; j < arr.size(); j++) {\n            if ((j - i + 1) % 2 == 1) {\n                for (int k = i; k <= j; k++) {\n                    sum += arr[k];\n                }\n            }\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_length_sum;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)4}))) == (14));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)1, (long)2}))) == (15));\n    assert(candidate((std::vector<long>({(long)1, (long)7}))) == (8));\n}\n",
      "timestamp": 1665517248,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nlong odd_length_sum(std::vector<long> arr) {\n    long sum = 0;\n    for(int i = 0; i < arr.size(); i++) {\n        for(int j = i; j < arr.size(); j++) {\n            if((j - i + 1) % 2 != 0) {\n                for(int k = i; k <= j; k++) {\n                    sum += arr[k];\n                }\n            }\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_length_sum;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)4}))) == (14));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)1, (long)2}))) == (15));\n    assert(candidate((std::vector<long>({(long)1, (long)7}))) == (8));\n}\n",
      "timestamp": 1665517247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nlong odd_length_sum(std::vector<long> arr) {\n    long sum = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        for (int j = i; j < arr.size(); j++) {\n            if ((j - i + 1) % 2 != 0) {\n                for (int k = i; k <= j; k++) {\n                    sum += arr[k];\n                }\n            }\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_length_sum;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)4}))) == (14));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)1, (long)2}))) == (15));\n    assert(candidate((std::vector<long>({(long)1, (long)7}))) == (8));\n}\n",
      "timestamp": 1665517247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nlong odd_length_sum(std::vector<long> arr) {\n    long sum = 0;\n    for (long i = 0; i < arr.size(); i++) {\n        for (long j = i; j < arr.size(); j++) {\n            if ((j - i + 1) % 2 == 1) {\n                for (long k = i; k <= j; k++) {\n                    sum += arr[k];\n                }\n            }\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_length_sum;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)4}))) == (14));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)1, (long)2}))) == (15));\n    assert(candidate((std::vector<long>({(long)1, (long)7}))) == (8));\n}\n",
      "timestamp": 1666122428,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nlong odd_length_sum(std::vector<long> arr) {\n    long sum = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        for (int j = i; j < arr.size(); j++) {\n            if ((j - i + 1) % 2 != 0) {\n                for (int k = i; k <= j; k++) {\n                    sum += arr[k];\n                }\n            }\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_length_sum;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)4}))) == (14));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)1, (long)2}))) == (15));\n    assert(candidate((std::vector<long>({(long)1, (long)7}))) == (8));\n}\n",
      "timestamp": 1665517247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nlong odd_length_sum(std::vector<long> arr) {\n    long sum = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        for (int j = i; j < arr.size(); j++) {\n            if ((j - i + 1) % 2 != 0) {\n                for (int k = i; k <= j; k++) {\n                    sum += arr[k];\n                }\n            }\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_length_sum;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)4}))) == (14));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)1, (long)2}))) == (15));\n    assert(candidate((std::vector<long>({(long)1, (long)7}))) == (8));\n}\n",
      "timestamp": 1665517247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nlong odd_length_sum(std::vector<long> arr) {\n    long sum = 0;\n    for(int i = 0; i < arr.size(); i++) {\n        for(int j = i; j < arr.size(); j++) {\n            if((j - i + 1) % 2 != 0) {\n                for(int k = i; k <= j; k++) {\n                    sum += arr[k];\n                }\n            }\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_length_sum;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)4}))) == (14));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)1, (long)2}))) == (15));\n    assert(candidate((std::vector<long>({(long)1, (long)7}))) == (8));\n}\n",
      "timestamp": 1665517247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nlong odd_length_sum(std::vector<long> arr) {\n    long sum = 0;\n    for(int i = 0; i < arr.size(); i++) {\n        for(int j = i; j < arr.size(); j++) {\n            int len = j - i + 1;\n            if(len % 2 != 0) {\n                for(int k = i; k <= j; k++) {\n                    sum += arr[k];\n                }\n            }\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_length_sum;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)4}))) == (14));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)1, (long)2}))) == (15));\n    assert(candidate((std::vector<long>({(long)1, (long)7}))) == (8));\n}\n",
      "timestamp": 1666122428,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nlong odd_length_sum(std::vector<long> arr) {\n    long sum = 0;\n    for(long i = 0; i < arr.size(); i++) {\n        for(long j = i; j < arr.size(); j++) {\n            if((j - i + 1) % 2 == 1) {\n                for(long k = i; k <= j; k++) {\n                    sum += arr[k];\n                }\n            }\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_length_sum;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)4}))) == (14));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)1, (long)2}))) == (15));\n    assert(candidate((std::vector<long>({(long)1, (long)7}))) == (8));\n}\n",
      "timestamp": 1666122428,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nlong odd_length_sum(std::vector<long> arr) {\n    long sum = 0;\n    for(int i = 0; i < arr.size(); i++) {\n        for(int j = i; j < arr.size(); j++) {\n            if((j - i + 1) % 2 != 0) {\n                for(int k = i; k <= j; k++) {\n                    sum += arr[k];\n                }\n            }\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_length_sum;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)4}))) == (14));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)1, (long)2}))) == (15));\n    assert(candidate((std::vector<long>({(long)1, (long)7}))) == (8));\n}\n",
      "timestamp": 1665517247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nlong odd_length_sum(std::vector<long> arr) {\n    long sum = 0;\n    for(int i = 0; i < arr.size(); i++) {\n        for(int j = i; j < arr.size(); j++) {\n            if((j - i + 1) % 2 != 0) {\n                for(int k = i; k <= j; k++) {\n                    sum += arr[k];\n                }\n            }\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_length_sum;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)4}))) == (14));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)1, (long)2}))) == (15));\n    assert(candidate((std::vector<long>({(long)1, (long)7}))) == (8));\n}\n",
      "timestamp": 1665517247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nlong odd_length_sum(std::vector<long> arr) {\n    long sum = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        for (int j = i; j < arr.size(); j++) {\n            if ((j - i + 1) % 2 != 0) {\n                for (int k = i; k <= j; k++) {\n                    sum += arr[k];\n                }\n            }\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_length_sum;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)4}))) == (14));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)1, (long)2}))) == (15));\n    assert(candidate((std::vector<long>({(long)1, (long)7}))) == (8));\n}\n",
      "timestamp": 1665517247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nlong odd_length_sum(std::vector<long> arr) {\n    long sum = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        for (int j = i; j < arr.size(); j++) {\n            if ((j - i + 1) % 2 != 0) {\n                for (int k = i; k <= j; k++) {\n                    sum += arr[k];\n                }\n            }\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_length_sum;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)4}))) == (14));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)1, (long)2}))) == (15));\n    assert(candidate((std::vector<long>({(long)1, (long)7}))) == (8));\n}\n",
      "timestamp": 1665517247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nlong odd_length_sum(std::vector<long> arr) {\n    long sum = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        for (int j = i; j < arr.size(); j++) {\n            if ((j - i + 1) % 2 != 0) {\n                for (int k = i; k <= j; k++) {\n                    sum += arr[k];\n                }\n            }\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_length_sum;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)4}))) == (14));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)1, (long)2}))) == (15));\n    assert(candidate((std::vector<long>({(long)1, (long)7}))) == (8));\n}\n",
      "timestamp": 1665517247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nlong odd_length_sum(std::vector<long> arr) {\n    long sum = 0;\n    int n = arr.size();\n    for (int i = 0; i < n; i++) {\n        sum += ((i + 1) * (n - i) + 1) / 2 * arr[i];\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_length_sum;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)4}))) == (14));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)1, (long)2}))) == (15));\n    assert(candidate((std::vector<long>({(long)1, (long)7}))) == (8));\n}\n",
      "timestamp": 1666122428,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nlong odd_length_sum(std::vector<long> arr) {\n    long sum = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        for (int j = i; j < arr.size(); j++) {\n            if ((j - i + 1) % 2 != 0) {\n                for (int k = i; k <= j; k++) {\n                    sum += arr[k];\n                }\n            }\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_length_sum;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)4}))) == (14));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)1, (long)2}))) == (15));\n    assert(candidate((std::vector<long>({(long)1, (long)7}))) == (8));\n}\n",
      "timestamp": 1665517247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nlong odd_length_sum(std::vector<long> arr) {\n    long sum = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        for (int j = i; j < arr.size(); j++) {\n            if ((j - i + 1) % 2 != 0) {\n                for (int k = i; k <= j; k++) {\n                    sum += arr[k];\n                }\n            }\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_length_sum;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)4}))) == (14));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)1, (long)2}))) == (15));\n    assert(candidate((std::vector<long>({(long)1, (long)7}))) == (8));\n}\n",
      "timestamp": 1665517247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nlong odd_length_sum(std::vector<long> arr) {\n    long sum = 0;\n    for (long i = 0; i < arr.size(); i++) {\n        for (long j = i; j < arr.size(); j++) {\n            if ((j - i + 1) % 2 != 0) {\n                for (long k = i; k <= j; k++) {\n                    sum += arr[k];\n                }\n            }\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_length_sum;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)4}))) == (14));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)1, (long)2}))) == (15));\n    assert(candidate((std::vector<long>({(long)1, (long)7}))) == (8));\n}\n",
      "timestamp": 1665517247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nlong odd_length_sum(std::vector<long> arr) {\n    long sum = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        for (int j = i; j < arr.size(); j++) {\n            if ((j-i+1) % 2 != 0) {\n                for (int k = i; k <= j; k++) {\n                    sum += arr[k];\n                }\n            }\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_length_sum;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)4}))) == (14));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)1, (long)2}))) == (15));\n    assert(candidate((std::vector<long>({(long)1, (long)7}))) == (8));\n}\n",
      "timestamp": 1666122428,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nlong odd_length_sum(std::vector<long> arr) {\n    long sum = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        for (int j = i; j < arr.size(); j++) {\n            if ((j - i + 1) % 2 != 0) {\n                for (int k = i; k <= j; k++) {\n                    sum += arr[k];\n                }\n            }\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_length_sum;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)4}))) == (14));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)1, (long)2}))) == (15));\n    assert(candidate((std::vector<long>({(long)1, (long)7}))) == (8));\n}\n",
      "timestamp": 1665517247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nlong odd_length_sum(std::vector<long> arr) {\n    long sum = 0;\n    for(int i = 0; i < arr.size(); i++) {\n        for(int j = i; j < arr.size(); j++) {\n            if((j-i+1)%2 == 1) {\n                for(int k = i; k <= j; k++) {\n                    sum += arr[k];\n                }\n            }\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_length_sum;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)4}))) == (14));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)1, (long)2}))) == (15));\n    assert(candidate((std::vector<long>({(long)1, (long)7}))) == (8));\n}\n",
      "timestamp": 1666122428,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
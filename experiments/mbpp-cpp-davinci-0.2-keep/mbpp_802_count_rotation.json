{
  "name": "mbpp_802_count_rotation",
  "language": "cpp",
  "prompt": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nlong count_rotation(std::vector<long> arr) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_802_count_rotation.py",
  "prompt_terminology": "verbatim",
  "tests": "}\nint main() {\n    auto candidate = count_rotation;\n    assert(candidate((std::vector<long>({(long)3, (long)2, (long)1}))) == (1));\n    assert(candidate((std::vector<long>({(long)4, (long)5, (long)1, (long)2, (long)3}))) == (2));\n    assert(candidate((std::vector<long>({(long)7, (long)8, (long)9, (long)1, (long)2, (long)3}))) == (3));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3}))) == (0));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)2}))) == (2));\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    // Write your code here\n    long n=arr.size();\n    long low=0,high=n-1;\n    while(low<=high)\n    {\n        if(arr[low]<=arr[high])\n        {\n            return low;\n        }\n        long mid=(low+high)/2;\n        long next=(mid+1)%n;\n        long prev=(mid+n-1)%n;\n        if(arr[mid]<=arr[next] && arr[mid]<=arr[prev])\n        {\n            return mid;\n        }\n        else if(arr[mid]<=arr[high])\n        {\n            high=mid-1;\n        }\n        else if(arr[mid]>=arr[low])\n        {\n            low=mid+1;\n        }\n    }\n    return -1;",
    "    long n = arr.size();\n    long low = 0, high = n - 1;\n    while(low <= high) {\n        if(arr[low] <= arr[high])\n            return low;\n        long mid = low + (high - low) / 2;\n        long next = (mid + 1) % n;\n        long prev = (mid + n - 1) % n;\n        if(arr[mid] <= arr[next] && arr[mid] <= arr[prev])\n            return mid;\n        else if(arr[mid] <= arr[high])\n            high = mid - 1;\n        else if(arr[mid] >= arr[low])\n            low = mid + 1;\n    }\n    return -1;",
    "    long n = arr.size();\n    long low = 0;\n    long high = n - 1;\n    while (low <= high) {\n        if (arr[low] <= arr[high]) {\n            return low;\n        }\n        long mid = (low + high) / 2;\n        long next = (mid + 1) % n;\n        long prev = (mid + n - 1) % n;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        } else if (arr[mid] <= arr[high]) {\n            high = mid - 1;\n        } else if (arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;",
    "    long n = arr.size();\n    long low = 0, high = n - 1;\n    while (low <= high) {\n        if (arr[low] <= arr[high])\n            return low;\n        long mid = low + (high - low) / 2;\n        long next = (mid + 1) % n, prev = (mid + n - 1) % n;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev])\n            return mid;\n        else if (arr[mid] <= arr[high])\n            high = mid - 1;\n        else if (arr[mid] >= arr[low])\n            low = mid + 1;\n    }\n    return -1;",
    "    // Write your code here\n    long n = arr.size();\n    long low = 0, high = n-1;\n    while(low <= high) {\n        if(arr[low] <= arr[high])\n            return low;\n        long mid = (low + high)/2;\n        long next = (mid + 1) % n;\n        long prev = (mid + n - 1) % n;\n        if(arr[mid] <= arr[next] && arr[mid] <= arr[prev])\n            return mid;\n        else if(arr[mid] <= arr[high])\n            high = mid - 1;\n        else if(arr[mid] >= arr[low])\n            low = mid + 1;\n    }\n    return -1;",
    "    long n = arr.size();\n    long low = 0;\n    long high = n-1;\n    while(low<=high) {\n        if(arr[low] <= arr[high]) {\n            return low;\n        }\n        long mid = low + (high-low)/2;\n        long next = (mid+1)%n;\n        long prev = (mid+n-1)%n;\n        if(arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        }\n        else if(arr[mid] <= arr[high]) {\n            high = mid-1;\n        }\n        else if(arr[mid] >= arr[low]) {\n            low = mid+1;\n        }\n    }\n    return -1;",
    "    // Write your code here\n    long n=arr.size();\n    long low=0,high=n-1;\n    while(low<=high)\n    {\n        if(arr[low]<=arr[high])\n        {\n            return low;\n        }\n        long mid=(low+high)/2;\n        long next=(mid+1)%n;\n        long prev=(mid+n-1)%n;\n        if(arr[mid]<=arr[next] && arr[mid]<=arr[prev])\n        {\n            return mid;\n        }\n        else if(arr[mid]<=arr[high])\n        {\n            high=mid-1;\n        }\n        else if(arr[mid]>=arr[low])\n        {\n            low=mid+1;\n        }\n    }\n    return -1;",
    "    // Write your code here\n    long n = arr.size();\n    long low = 0, high = n-1;\n    while(low <= high){\n        if(arr[low] <= arr[high])\n            return low;\n        long mid = (low+high)/2;\n        long next = (mid+1)%n;\n        long prev = (mid+n-1)%n;\n        if(arr[mid] <= arr[next] && arr[mid] <= arr[prev])\n            return mid;\n        else if(arr[mid] <= arr[high])\n            high = mid-1;\n        else if(arr[mid] >= arr[low])\n            low = mid+1;\n    }\n    return -1;",
    "    // Write your code here\n    long n = arr.size();\n    long low = 0, high = n-1;\n    while(low <= high){\n        if(arr[low] <= arr[high])\n            return low;\n        long mid = (low + high)/2;\n        long next = (mid + 1)%n;\n        long prev = (mid + n - 1)%n;\n        if(arr[mid] <= arr[next] && arr[mid] <= arr[prev])\n            return mid;\n        else if(arr[mid] <= arr[high])\n            high = mid - 1;\n        else if(arr[mid] >= arr[low])\n            low = mid + 1;\n    }\n    return -1;",
    "    long n = arr.size();\n    long low = 0, high = n - 1;\n    while (low <= high) {\n        if (arr[low] <= arr[high]) {\n            return low;\n        }\n        long mid = low + (high - low) / 2;\n        long next = (mid + 1) % n;\n        long prev = (mid + n - 1) % n;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        }\n        else if (arr[mid] <= arr[high]) {\n            high = mid - 1;\n        }\n        else if (arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;",
    "    long n = arr.size();\n    long low = 0;\n    long high = n - 1;\n    while (low <= high) {\n        if (arr[low] <= arr[high]) {\n            return low;\n        }\n        long mid = low + (high - low) / 2;\n        long next = (mid + 1) % n;\n        long prev = (mid + n - 1) % n;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        } else if (arr[mid] <= arr[high]) {\n            high = mid - 1;\n        } else if (arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;",
    "    long n = arr.size();\n    long low = 0, high = n-1;\n    while(low <= high) {\n        if(arr[low] <= arr[high]) {\n            return low;\n        }\n        long mid = low + (high-low)/2;\n        long next = (mid+1)%n;\n        long prev = (mid+n-1)%n;\n        if(arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        }\n        else if(arr[mid] <= arr[high]) {\n            high = mid-1;\n        }\n        else if(arr[mid] >= arr[low]) {\n            low = mid+1;\n        }\n    }\n    return -1;",
    "    long n = arr.size();\n    long low = 0, high = n - 1;\n    while (low <= high) {\n        if (arr[low] <= arr[high])\n            return low;\n        long mid = (low + high) / 2;\n        long next = (mid + 1) % n, prev = (mid + n - 1) % n;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev])\n            return mid;\n        else if (arr[mid] <= arr[high])\n            high = mid - 1;\n        else if (arr[mid] >= arr[low])\n            low = mid + 1;\n    }\n    return -1;",
    "    long n = arr.size();\n    long low = 0, high = n-1;\n    while(low <= high) {\n        if(arr[low] <= arr[high])\n            return low;\n        long mid = low + (high-low)/2;\n        long next = (mid+1)%n, prev = (mid+n-1)%n;\n        if(arr[mid] <= arr[next] && arr[mid] <= arr[prev])\n            return mid;\n        else if(arr[mid] <= arr[high])\n            high = mid-1;\n        else if(arr[mid] >= arr[low])\n            low = mid+1;\n    }\n    return -1;",
    "    // Write your code here\n    int n = arr.size();\n    int low = 0, high = n - 1;\n    while (low <= high) {\n        if (arr[low] <= arr[high]) {\n            return low;\n        }\n        int mid = (low + high) / 2;\n        int next = (mid + 1) % n;\n        int prev = (mid + n - 1) % n;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        } else if (arr[mid] <= arr[high]) {\n            high = mid - 1;\n        } else if (arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;",
    "    long n = arr.size();\n    long low = 0;\n    long high = n - 1;\n    while (low <= high) {\n        if (arr[low] <= arr[high]) {\n            return low;\n        }\n        long mid = low + (high - low) / 2;\n        long next = (mid + 1) % n;\n        long prev = (mid + n - 1) % n;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        }\n        else if (arr[mid] <= arr[high]) {\n            high = mid - 1;\n        }\n        else if (arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;",
    "    long n = arr.size();\n    long low = 0, high = n - 1;\n    while (low <= high) {\n        if (arr[low] <= arr[high])\n            return low;\n        long mid = (low + high) / 2;\n        long next = (mid + 1) % n;\n        long prev = (mid + n - 1) % n;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev])\n            return mid;\n        else if (arr[mid] <= arr[high])\n            high = mid - 1;\n        else if (arr[mid] >= arr[low])\n            low = mid + 1;\n    }\n    return -1;",
    "    long n = arr.size();\n    long low = 0;\n    long high = n - 1;\n    while (low <= high) {\n        if (arr[low] <= arr[high]) {\n            return low;\n        }\n        long mid = (low + high) / 2;\n        long next = (mid + 1) % n;\n        long prev = (mid + n - 1) % n;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        }\n        else if (arr[mid] <= arr[high]) {\n            high = mid - 1;\n        }\n        else if (arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;",
    "    long n = arr.size();\n    long low = 0, high = n - 1;\n    while (low <= high) {\n        if (arr[low] <= arr[high]) {\n            return low;\n        }\n        long mid = (low + high) / 2;\n        long next = (mid + 1) % n;\n        long prev = (mid + n - 1) % n;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        } else if (arr[mid] <= arr[high]) {\n            high = mid - 1;\n        } else if (arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;",
    "    long n = arr.size();\n    long low = 0, high = n - 1;\n    while (low <= high) {\n        if (arr[low] <= arr[high]) {\n            return low;\n        }\n        long mid = (low + high) / 2;\n        long next = (mid + 1) % n;\n        long prev = (mid + n - 1) % n;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        } else if (arr[mid] <= arr[high]) {\n            high = mid - 1;\n        } else if (arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;",
    "    long n = arr.size();\n    long low = 0, high = n - 1;\n    while (low <= high) {\n        if (arr[low] <= arr[high]) {\n            return low;\n        }\n        long mid = (low + high) / 2;\n        long next = (mid + 1) % n;\n        long prev = (mid + n - 1) % n;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        }\n        else if (arr[mid] <= arr[high]) {\n            high = mid - 1;\n        }\n        else if (arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;",
    "    long n = arr.size();\n    long low = 0;\n    long high = n - 1;\n    while (low <= high) {\n        if (arr[low] <= arr[high]) {\n            return low;\n        }\n        long mid = low + (high - low) / 2;\n        long next = (mid + 1) % n;\n        long prev = (mid + n - 1) % n;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        }\n        else if (arr[mid] <= arr[high]) {\n            high = mid - 1;\n        }\n        else if (arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;",
    "    long n = arr.size();\n    long low = 0;\n    long high = n - 1;\n    long mid = 0;\n    while (low <= high) {\n        if (arr[low] <= arr[high]) {\n            return low;\n        }\n        mid = (low + high) / 2;\n        long next = (mid + 1) % n;\n        long prev = (mid + n - 1) % n;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        }\n        else if (arr[mid] <= arr[high]) {\n            high = mid - 1;\n        }\n        else if (arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;",
    "    long n = arr.size();\n    long low = 0, high = n - 1;\n    while (low <= high) {\n        if (arr[low] <= arr[high])\n            return low;\n        long mid = low + (high - low) / 2;\n        long next = (mid + 1) % n;\n        long prev = (mid + n - 1) % n;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev])\n            return mid;\n        else if (arr[mid] <= arr[high])\n            high = mid - 1;\n        else if (arr[mid] >= arr[low])\n            low = mid + 1;\n    }\n    return -1;",
    "    long n = arr.size();\n    long low = 0;\n    long high = n - 1;\n    long mid = 0;\n    while(low <= high) {\n        if(arr[low] <= arr[high]) {\n            return low;\n        }\n        long next = (mid + 1) % n;\n        long prev = (mid - 1 + n) % n;\n        if(arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        }\n        else if(arr[mid] <= arr[high]) {\n            high = mid - 1;\n        }\n        else if(arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n        mid = (low + high) / 2;\n    }\n    return -1;",
    "    long n = arr.size();\n    long low = 0, high = n-1;\n    while(low <= high) {\n        if(arr[low] <= arr[high]) {\n            return low;\n        }\n        long mid = low + (high - low)/2;\n        long next = (mid + 1)%n;\n        long prev = (mid + n - 1)%n;\n        if(arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        }\n        else if(arr[mid] <= arr[high]) {\n            high = mid - 1;\n        }\n        else if(arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;",
    "    //write your code here\n    long n=arr.size();\n    long low=0;\n    long high=n-1;\n    long mid;\n    while(low<=high)\n    {\n        if(arr[low]<=arr[high])\n        {\n            return low;\n        }\n        mid=(low+high)/2;\n        long next=(mid+1)%n;\n        long prev=(mid+n-1)%n;\n        if(arr[mid]<=arr[next] && arr[mid]<=arr[prev])\n        {\n            return mid;\n        }\n        else if(arr[mid]<=arr[high])\n        {\n            high=mid-1;\n        }\n        else if(arr[mid]>=arr[low])\n        {\n            low=mid+1;\n        }\n    }\n    return -1;",
    "    long n = arr.size();\n    long low = 0;\n    long high = n - 1;\n    while (low <= high) {\n        if (arr[low] <= arr[high]) {\n            return low;\n        }\n        long mid = low + (high - low) / 2;\n        long next = (mid + 1) % n;\n        long prev = (mid + n - 1) % n;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        } else if (arr[mid] <= arr[high]) {\n            high = mid - 1;\n        } else if (arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;",
    "    long n = arr.size();\n    long low = 0, high = n-1;\n    while(low <= high) {\n        if(arr[low] <= arr[high]) {\n            return low;\n        }\n        long mid = (low + high)/2;\n        long next = (mid + 1) % n;\n        long prev = (mid + n - 1) % n;\n        if(arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        }\n        else if(arr[mid] <= arr[high]) {\n            high = mid - 1;\n        }\n        else if(arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;",
    "    // Write your code here\n    long n = arr.size();\n    long low = 0;\n    long high = n-1;\n    while(low<=high){\n        if(arr[low]<=arr[high]){\n            return low;\n        }\n        long mid = low + (high-low)/2;\n        long next = (mid+1)%n;\n        long prev = (mid+n-1)%n;\n        if(arr[mid]<=arr[next] && arr[mid]<=arr[prev]){\n            return mid;\n        }\n        else if(arr[mid]<=arr[high]){\n            high = mid-1;\n        }\n        else if(arr[mid]>=arr[low]){\n            low = mid+1;\n        }\n    }\n    return -1;",
    "    long n = arr.size();\n    long low = 0, high = n-1;\n    while(low <= high) {\n        if(arr[low] <= arr[high]) {\n            return low;\n        }\n        long mid = low + (high - low)/2;\n        long next = (mid + 1) % n;\n        long prev = (mid + n - 1) % n;\n        if(arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        }\n        else if(arr[mid] <= arr[high]) {\n            high = mid - 1;\n        }\n        else if(arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;",
    "    // Write your code here\n    long n = arr.size();\n    long low = 0;\n    long high = n-1;\n    while(low <= high){\n        if(arr[low] <= arr[high]){\n            return low;\n        }\n        long mid = low + (high - low)/2;\n        long next = (mid+1)%n;\n        long prev = (mid-1+n)%n;\n        if(arr[mid] <= arr[next] && arr[mid] <= arr[prev]){\n            return mid;\n        }\n        else if(arr[mid] <= arr[high]){\n            high = mid - 1;\n        }\n        else if(arr[mid] >= arr[low]){\n            low = mid + 1;\n        }\n    }\n    return -1;",
    "    long n = arr.size();\n    long low = 0, high = n - 1;\n    while (low <= high) {\n        if (arr[low] <= arr[high])\n            return low;\n        long mid = low + (high - low) / 2;\n        long next = (mid + 1) % n;\n        long prev = (mid + n - 1) % n;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev])\n            return mid;\n        else if (arr[mid] <= arr[high])\n            high = mid - 1;\n        else if (arr[mid] >= arr[low])\n            low = mid + 1;\n    }\n    return -1;",
    "    long n = arr.size();\n    long low = 0, high = n - 1;\n    while (low <= high) {\n        if (arr[low] <= arr[high])\n            return low;\n        long mid = low + (high - low) / 2;\n        long next = (mid + 1) % n, prev = (mid + n - 1) % n;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev])\n            return mid;\n        else if (arr[mid] <= arr[high])\n            high = mid - 1;\n        else if (arr[mid] >= arr[low])\n            low = mid + 1;\n    }\n    return -1;",
    "    long n = arr.size();\n    long low = 0;\n    long high = n - 1;\n    while(low <= high) {\n        if(arr[low] <= arr[high]) {\n            return low;\n        }\n        long mid = low + (high - low) / 2;\n        long next = (mid + 1) % n;\n        long prev = (mid + n - 1) % n;\n        if(arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        }\n        else if(arr[mid] <= arr[high]) {\n            high = mid - 1;\n        }\n        else if(arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;",
    "    long n = arr.size();\n    long low = 0;\n    long high = n - 1;\n    long mid = 0;\n    while (low <= high) {\n        if (arr[low] <= arr[high]) {\n            return low;\n        }\n        mid = low + (high - low) / 2;\n        long next = (mid + 1) % n;\n        long prev = (mid + n - 1) % n;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        } else if (arr[mid] <= arr[high]) {\n            high = mid - 1;\n        } else if (arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;",
    "    long n = arr.size();\n    long low = 0, high = n-1;\n    while(low <= high) {\n        if(arr[low] <= arr[high]) {\n            return low;\n        }\n        long mid = (low + high) / 2;\n        long next = (mid + 1) % n;\n        long prev = (mid + n - 1) % n;\n        if(arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        }\n        else if(arr[mid] <= arr[high]) {\n            high = mid - 1;\n        }\n        else if(arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;",
    "    long n = arr.size();\n    long low = 0;\n    long high = n - 1;\n    while (low <= high) {\n        if (arr[low] <= arr[high]) {\n            return low;\n        }\n        long mid = (low + high) / 2;\n        long next = (mid + 1) % n;\n        long prev = (mid + n - 1) % n;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        } else if (arr[mid] <= arr[high]) {\n            high = mid - 1;\n        } else if (arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;",
    "    long n = arr.size();\n    long low = 0;\n    long high = n - 1;\n    while (low <= high) {\n        if (arr[low] <= arr[high]) {\n            return low;\n        }\n        long mid = low + (high - low) / 2;\n        long next = (mid + 1) % n;\n        long prev = (mid + n - 1) % n;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        } else if (arr[mid] <= arr[high]) {\n            high = mid - 1;\n        } else if (arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;",
    "    long n = arr.size();\n    long low = 0;\n    long high = n-1;\n    long mid = 0;\n    while(low <= high) {\n        if(arr[low] <= arr[high]) {\n            return low;\n        }\n        mid = low + (high - low)/2;\n        long next = (mid + 1) % n;\n        long prev = (mid + n - 1) % n;\n        if(arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        }\n        else if(arr[mid] <= arr[high]) {\n            high = mid - 1;\n        }\n        else if(arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;",
    "    // Write your code here\n    long n = arr.size();\n    long low = 0, high = n-1;\n    while(low <= high){\n        if(arr[low] <= arr[high]){\n            return low;\n        }\n        long mid = low + (high-low)/2;\n        long next = (mid+1)%n;\n        long prev = (mid+n-1)%n;\n        if(arr[mid] <= arr[next] && arr[mid] <= arr[prev]){\n            return mid;\n        }\n        else if(arr[mid] <= arr[high]){\n            high = mid-1;\n        }\n        else if(arr[mid] >= arr[low]){\n            low = mid+1;\n        }\n    }\n    return -1;",
    "    long n = arr.size();\n    long low = 0, high = n-1;\n    while(low <= high) {\n        if(arr[low] <= arr[high]) {\n            return low;\n        }\n        long mid = low + (high - low)/2;\n        long next = (mid + 1) % n;\n        long prev = (mid + n - 1) % n;\n        if(arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        }\n        else if(arr[mid] <= arr[high]) {\n            high = mid - 1;\n        }\n        else if(arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;",
    "    long n = arr.size();\n    long low = 0;\n    long high = n-1;\n    while(low <= high) {\n        if(arr[low] <= arr[high]) {\n            return low;\n        }\n        long mid = low + (high - low)/2;\n        long next = (mid + 1) % n;\n        long prev = (mid + n - 1) % n;\n        if(arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        }\n        else if(arr[mid] <= arr[high]) {\n            high = mid - 1;\n        }\n        else if(arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;",
    "    // Write your code here\n    long n = arr.size();\n    long low = 0, high = n-1;\n    while(low <= high){\n        if(arr[low] <= arr[high]){\n            return low;\n        }\n        long mid = low + (high-low)/2;\n        long next = (mid+1)%n;\n        long prev = (mid+n-1)%n;\n        if(arr[mid] <= arr[next] && arr[mid] <= arr[prev]){\n            return mid;\n        }\n        else if(arr[mid] <= arr[high]){\n            high = mid-1;\n        }\n        else if(arr[mid] >= arr[low]){\n            low = mid+1;\n        }\n    }\n    return -1;",
    "\t// Write your code here\n\tlong n = arr.size();\n\tlong low = 0, high = n - 1;\n\twhile (low <= high) {\n\t\tif (arr[low] <= arr[high]) {\n\t\t\treturn low;\n\t\t}\n\t\tlong mid = low + (high - low) / 2;\n\t\tlong next = (mid + 1) % n;\n\t\tlong prev = (mid + n - 1) % n;\n\t\tif (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n\t\t\treturn mid;\n\t\t}\n\t\telse if (arr[mid] <= arr[high]) {\n\t\t\thigh = mid - 1;\n\t\t}\n\t\telse if (arr[mid] >= arr[low]) {\n\t\t\tlow = mid + 1;\n\t\t}\n\t}\n\treturn -1;",
    "    long n = arr.size();\n    long low = 0;\n    long high = n - 1;\n    while(low <= high) {\n        if(arr[low] <= arr[high]) {\n            return low;\n        }\n        long mid = low + (high - low) / 2;\n        long next = (mid + 1) % n;\n        long prev = (mid + n - 1) % n;\n        if(arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        }\n        else if(arr[mid] <= arr[high]) {\n            high = mid - 1;\n        }\n        else if(arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;",
    "    long n = arr.size();\n    long low = 0;\n    long high = n - 1;\n    long mid;\n    while (low <= high) {\n        if (arr[low] <= arr[high]) {\n            return low;\n        }\n        mid = low + (high - low) / 2;\n        long next = (mid + 1) % n;\n        long prev = (mid + n - 1) % n;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        }\n        else if (arr[mid] <= arr[high]) {\n            high = mid - 1;\n        }\n        else if (arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;",
    "    long n = arr.size();\n    long low = 0, high = n - 1;\n    while (low <= high) {\n        if (arr[low] <= arr[high])\n            return low;\n        long mid = low + (high - low) / 2;\n        long next = (mid + 1) % n, prev = (mid + n - 1) % n;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev])\n            return mid;\n        else if (arr[mid] <= arr[high])\n            high = mid - 1;\n        else if (arr[mid] >= arr[low])\n            low = mid + 1;\n    }\n    return -1;",
    "    long n = arr.size();\n    long low = 0;\n    long high = n - 1;\n    while (low <= high) {\n        if (arr[low] <= arr[high]) {\n            return low;\n        }\n        long mid = (low + high) / 2;\n        long next = (mid + 1) % n;\n        long prev = (mid + n - 1) % n;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        }\n        else if (arr[mid] <= arr[high]) {\n            high = mid - 1;\n        }\n        else if (arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;",
    "    long n = arr.size();\n    long low = 0, high = n - 1;\n    while(low <= high) {\n        if(arr[low] <= arr[high])\n            return low;\n        long mid = (low + high) / 2;\n        long next = (mid + 1) % n;\n        long prev = (mid + n - 1) % n;\n        if(arr[mid] <= arr[next] && arr[mid] <= arr[prev])\n            return mid;\n        else if(arr[mid] <= arr[high])\n            high = mid - 1;\n        else if(arr[mid] >= arr[low])\n            low = mid + 1;\n    }\n    return -1;",
    "    long n = arr.size();\n    long low = 0;\n    long high = n-1;\n    while(low <= high) {\n        if(arr[low] <= arr[high]) {\n            return low;\n        }\n        long mid = (low + high)/2;\n        long next = (mid + 1) % n;\n        long prev = (mid + n - 1) % n;\n        if(arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        }\n        else if(arr[mid] <= arr[high]) {\n            high = mid - 1;\n        }\n        else if(arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;",
    "    long n = arr.size();\n    long low = 0;\n    long high = n - 1;\n    while (low <= high) {\n        if (arr[low] <= arr[high]) {\n            return low;\n        }\n        long mid = (low + high) / 2;\n        long next = (mid + 1) % n;\n        long prev = (mid + n - 1) % n;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        }\n        else if (arr[mid] <= arr[high]) {\n            high = mid - 1;\n        }\n        else if (arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;",
    "    long n = arr.size();\n    long low = 0, high = n - 1;\n    while (low <= high) {\n        if (arr[low] <= arr[high]) {\n            return low;\n        }\n        long mid = low + (high - low) / 2;\n        long next = (mid + 1) % n;\n        long prev = (mid + n - 1) % n;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        } else if (arr[mid] <= arr[high]) {\n            high = mid - 1;\n        } else if (arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;",
    "    long n = arr.size();\n    long low = 0, high = n-1;\n    while (low <= high) {\n        if (arr[low] <= arr[high])\n            return low;\n        long mid = (low + high) / 2;\n        long next = (mid + 1) % n;\n        long prev = (mid + n - 1) % n;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev])\n            return mid;\n        else if (arr[mid] <= arr[high])\n            high = mid - 1;\n        else if (arr[mid] >= arr[low])\n            low = mid + 1;\n    }\n    return -1;",
    "    long n = arr.size();\n    long low = 0, high = n - 1;\n    while (low <= high) {\n        if (arr[low] <= arr[high]) {\n            return low;\n        }\n        long mid = (low + high) / 2;\n        long next = (mid + 1) % n;\n        long prev = (mid + n - 1) % n;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        }\n        else if (arr[mid] <= arr[high]) {\n            high = mid - 1;\n        }\n        else if (arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;",
    "    long n = arr.size();\n    long low = 0, high = n - 1;\n    while (low <= high) {\n        if (arr[low] <= arr[high]) {\n            return low;\n        }\n        long mid = low + (high - low) / 2;\n        long next = (mid + 1) % n;\n        long prev = (mid + n - 1) % n;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        } else if (arr[mid] <= arr[high]) {\n            high = mid - 1;\n        } else if (arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;",
    "    long n = arr.size();\n    long low = 0;\n    long high = n - 1;\n    while (low <= high) {\n        if (arr[low] <= arr[high]) {\n            return low;\n        }\n        long mid = (low + high) / 2;\n        long next = (mid + 1) % n;\n        long prev = (mid + n - 1) % n;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        } else if (arr[mid] <= arr[high]) {\n            high = mid - 1;\n        } else if (arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;",
    "    long n = arr.size();\n    long low = 0;\n    long high = n - 1;\n    while(low <= high) {\n        if(arr[low] <= arr[high]) {\n            return low;\n        }\n        long mid = (low + high) / 2;\n        long next = (mid + 1) % n;\n        long prev = (mid + n - 1) % n;\n        if(arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        }\n        else if(arr[mid] <= arr[high]) {\n            high = mid - 1;\n        }\n        else if(arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;",
    "    long n = arr.size();\n    long low = 0, high = n-1;\n    while (low <= high) {\n        if (arr[low] <= arr[high])\n            return low;\n        long mid = (low + high)/2;\n        long next = (mid + 1) % n;\n        long prev = (mid + n - 1) % n;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev])\n            return mid;\n        else if (arr[mid] <= arr[high])\n            high = mid - 1;\n        else if (arr[mid] >= arr[low])\n            low = mid + 1;\n    }\n    return -1;",
    "    long n = arr.size();\n    long low = 0;\n    long high = n - 1;\n    while (low <= high) {\n        if (arr[low] <= arr[high]) {\n            return low;\n        }\n        long mid = (low + high) / 2;\n        long next = (mid + 1) % n;\n        long prev = (mid + n - 1) % n;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        }\n        else if (arr[mid] <= arr[high]) {\n            high = mid - 1;\n        }\n        else if (arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;",
    "    long n = arr.size();\n    long low = 0;\n    long high = n - 1;\n    while (low <= high) {\n        if (arr[low] <= arr[high]) {\n            return low;\n        }\n        long mid = (low + high) / 2;\n        long next = (mid + 1) % n;\n        long prev = (mid + n - 1) % n;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        } else if (arr[mid] <= arr[high]) {\n            high = mid - 1;\n        } else if (arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;",
    "    long n = arr.size();\n    long low = 0, high = n-1;\n    while(low <= high) {\n        if(arr[low] <= arr[high]) {\n            return low;\n        }\n        long mid = low + (high - low) / 2;\n        long next = (mid + 1) % n;\n        long prev = (mid + n - 1) % n;\n        if(arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        }\n        else if(arr[mid] <= arr[high]) {\n            high = mid - 1;\n        }\n        else if(arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;",
    "    long n = arr.size();\n    long low = 0, high = n-1;\n    while(low <= high) {\n        long mid = low + (high-low)/2;\n        long next = (mid+1)%n;\n        long prev = (mid+n-1)%n;\n        if(arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        }\n        else if(arr[mid] <= arr[high]) {\n            high = mid-1;\n        }\n        else if(arr[mid] >= arr[low]) {\n            low = mid+1;\n        }\n    }\n    return -1;",
    "    long n = arr.size();\n    long low = 0, high = n - 1;\n    while (low <= high) {\n        if (arr[low] <= arr[high]) {\n            return low;\n        }\n        long mid = (low + high) / 2;\n        long next = (mid + 1) % n;\n        long prev = (mid + n - 1) % n;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        }\n        else if (arr[mid] <= arr[high]) {\n            high = mid - 1;\n        }\n        else if (arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;",
    "    long n = arr.size();\n    long low = 0, high = n - 1;\n    while (low <= high) {\n        if (arr[low] <= arr[high]) {\n            return low;\n        }\n        long mid = low + (high - low) / 2;\n        long next = (mid + 1) % n;\n        long prev = (mid + n - 1) % n;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        }\n        else if (arr[mid] <= arr[high]) {\n            high = mid - 1;\n        }\n        else if (arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;",
    "    long n = arr.size();\n    long low = 0, high = n-1;\n    while(low <= high) {\n        if(arr[low] <= arr[high]) {\n            return low;\n        }\n        long mid = (low + high) / 2;\n        long next = (mid + 1) % n;\n        long prev = (mid + n - 1) % n;\n        if(arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        }\n        else if(arr[mid] <= arr[high]) {\n            high = mid - 1;\n        }\n        else if(arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;",
    "    // Write your code here\n    long n = arr.size();\n    long low = 0;\n    long high = n-1;\n    while(low <= high){\n        if(arr[low] <= arr[high]){\n            return low;\n        }\n        long mid = low + (high-low)/2;\n        long next = (mid+1)%n;\n        long prev = (mid+n-1)%n;\n        if(arr[mid] <= arr[next] && arr[mid] <= arr[prev]){\n            return mid;\n        }\n        else if(arr[mid] <= arr[high]){\n            high = mid-1;\n        }\n        else if(arr[mid] >= arr[low]){\n            low = mid+1;\n        }\n    }\n    return -1;",
    "    // Write your code here\n    long n = arr.size();\n    long low = 0;\n    long high = n-1;\n    while(low <= high) {\n        if(arr[low] <= arr[high])\n            return low;\n        long mid = low + (high-low)/2;\n        long next = (mid+1)%n;\n        long prev = (mid+n-1)%n;\n        if(arr[mid] <= arr[next] && arr[mid] <= arr[prev])\n            return mid;\n        else if(arr[mid] <= arr[high])\n            high = mid-1;\n        else if(arr[mid] >= arr[low])\n            low = mid+1;\n    }\n    return -1;",
    "    long n = arr.size();\n    long low = 0;\n    long high = n - 1;\n    while (low <= high) {\n        if (arr[low] <= arr[high]) {\n            return low;\n        }\n        long mid = low + (high - low) / 2;\n        long next = (mid + 1) % n;\n        long prev = (mid + n - 1) % n;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        }\n        else if (arr[mid] <= arr[high]) {\n            high = mid - 1;\n        }\n        else if (arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;",
    "    long n = arr.size();\n    long low = 0, high = n-1;\n    while(low <= high) {\n        if(arr[low] <= arr[high]) {\n            return low;\n        }\n        long mid = low + (high - low)/2;\n        long next = (mid + 1)%n;\n        long prev = (mid + n - 1)%n;\n        if(arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        }\n        else if(arr[mid] <= arr[high]) {\n            high = mid - 1;\n        }\n        else if(arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;",
    "    long n = arr.size();\n    long low = 0, high = n-1;\n    while(low <= high) {\n        if(arr[low] <= arr[high]) {\n            return low;\n        }\n        long mid = (low + high)/2;\n        long next = (mid + 1) % n;\n        long prev = (mid + n - 1) % n;\n        if(arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        }\n        else if(arr[mid] <= arr[high]) {\n            high = mid - 1;\n        }\n        else if(arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;",
    "    long n = arr.size();\n    long low = 0, high = n-1;\n    while(low <= high) {\n        if(arr[low] <= arr[high]) {\n            return low;\n        }\n        long mid = (low + high) / 2;\n        long next = (mid + 1) % n;\n        long prev = (mid + n - 1) % n;\n        if(arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        }\n        else if(arr[mid] <= arr[high]) {\n            high = mid - 1;\n        }\n        else if(arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;",
    "    long n = arr.size();\n    long low = 0;\n    long high = n - 1;\n    while (low <= high) {\n        if (arr[low] <= arr[high]) {\n            return low;\n        }\n        long mid = (low + high) / 2;\n        long next = (mid + 1) % n;\n        long prev = (mid + n - 1) % n;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        }\n        else if (arr[mid] <= arr[high]) {\n            high = mid - 1;\n        }\n        else if (arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;",
    "    // Write your code here\n    long n = arr.size();\n    long low = 0;\n    long high = n-1;\n    while(low <= high) {\n        if(arr[low] <= arr[high]) {\n            return low;\n        }\n        long mid = (low + high)/2;\n        long next = (mid + 1)%n;\n        long prev = (mid + n - 1)%n;\n        if(arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        }\n        else if(arr[mid] <= arr[high]) {\n            high = mid - 1;\n        }\n        else if(arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;",
    "    long n = arr.size();\n    long low = 0;\n    long high = n-1;\n    while(low <= high) {\n        if(arr[low] <= arr[high]) {\n            return low;\n        }\n        long mid = low + (high - low)/2;\n        long next = (mid + 1)%n;\n        long prev = (mid + n - 1)%n;\n        if(arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        }\n        else if(arr[mid] <= arr[high]) {\n            high = mid - 1;\n        }\n        else if(arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;",
    "    // Write your code here\n    long n = arr.size();\n    long low = 0, high = n-1;\n    while(low<=high){\n        if(arr[low]<=arr[high])\n            return low;\n        long mid = low + (high-low)/2;\n        long next = (mid+1)%n;\n        long prev = (mid+n-1)%n;\n        if(arr[mid]<=arr[next] && arr[mid]<=arr[prev])\n            return mid;\n        else if(arr[mid]<=arr[high])\n            high = mid-1;\n        else if(arr[mid]>=arr[low])\n            low = mid+1;\n    }\n    return -1;",
    "    long n = arr.size();\n    long low = 0, high = n-1;\n    while(low <= high) {\n        if(arr[low] <= arr[high]) {\n            return low;\n        }\n        long mid = low + (high-low)/2;\n        long next = (mid+1)%n;\n        long prev = (mid+n-1)%n;\n        if(arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        } else if(arr[mid] <= arr[high]) {\n            high = mid-1;\n        } else if(arr[mid] >= arr[low]) {\n            low = mid+1;\n        }\n    }\n    return -1;",
    "    long n = arr.size();\n    long low = 0;\n    long high = n-1;\n    while(low<=high) {\n        if(arr[low]<=arr[high]) {\n            return low;\n        }\n        long mid = low + (high-low)/2;\n        long next = (mid+1)%n;\n        long prev = (mid+n-1)%n;\n        if(arr[mid]<=arr[next] && arr[mid]<=arr[prev]) {\n            return mid;\n        }\n        else if(arr[mid]<=arr[high]) {\n            high = mid-1;\n        }\n        else if(arr[mid]>=arr[low]) {\n            low = mid+1;\n        }\n    }\n    return -1;",
    "    // Write your code here\n    long n = arr.size();\n    long low = 0, high = n-1;\n    while(low <= high) {\n        if(arr[low] <= arr[high]) {\n            return low;\n        }\n        long mid = low + (high - low)/2;\n        long next = (mid + 1) % n;\n        long prev = (mid + n - 1) % n;\n        if(arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        }\n        else if(arr[mid] <= arr[high]) {\n            high = mid - 1;\n        }\n        else if(arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;",
    "    long n = arr.size();\n    long low = 0;\n    long high = n-1;\n    long mid = 0;\n    while(low <= high) {\n        if(arr[low] <= arr[high]) {\n            return low;\n        }\n        long next = (mid+1)%n;\n        long prev = (mid-1+n)%n;\n        if(arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        }\n        else if(arr[mid] <= arr[high]) {\n            high = mid-1;\n        }\n        else if(arr[mid] >= arr[low]) {\n            low = mid+1;\n        }\n        mid = (low+high)/2;\n    }\n    return -1;",
    "    long n = arr.size();\n    long low = 0;\n    long high = n - 1;\n    while (low <= high) {\n        if (arr[low] <= arr[high]) {\n            return low;\n        }\n        long mid = (low + high) / 2;\n        long next = (mid + 1) % n;\n        long prev = (mid + n - 1) % n;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        }\n        else if (arr[mid] <= arr[high]) {\n            high = mid - 1;\n        }\n        else if (arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;",
    "    long n = arr.size();\n    long low = 0, high = n-1;\n    while(low <= high) {\n        if(arr[low] <= arr[high])\n            return low;\n        long mid = (low + high) / 2;\n        long next = (mid + 1) % n;\n        long prev = (mid + n - 1) % n;\n        if(arr[mid] <= arr[next] && arr[mid] <= arr[prev])\n            return mid;\n        else if(arr[mid] <= arr[high])\n            high = mid - 1;\n        else if(arr[mid] >= arr[low])\n            low = mid + 1;\n    }\n    return -1;",
    "    long n = arr.size();\n    long low = 0;\n    long high = n-1;\n    while(low <= high) {\n        if(arr[low] <= arr[high]) {\n            return low;\n        }\n        long mid = low + (high - low)/2;\n        long next = (mid + 1) % n;\n        long prev = (mid + n - 1) % n;\n        if(arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        }\n        else if(arr[mid] <= arr[high]) {\n            high = mid - 1;\n        }\n        else if(arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;",
    "    long n = arr.size();\n    long low = 0;\n    long high = n - 1;\n    long mid;\n    while (low <= high) {\n        if (arr[low] <= arr[high]) {\n            return low;\n        }\n        mid = low + (high - low) / 2;\n        long next = (mid + 1) % n;\n        long prev = (mid + n - 1) % n;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        }\n        else if (arr[mid] <= arr[high]) {\n            high = mid - 1;\n        }\n        else if (arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;",
    "    long n = arr.size();\n    long low = 0, high = n - 1;\n    while (low <= high) {\n        if (arr[low] <= arr[high]) {\n            return low;\n        }\n        long mid = low + (high - low) / 2;\n        long next = (mid + 1) % n;\n        long prev = (mid + n - 1) % n;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        }\n        else if (arr[mid] <= arr[high]) {\n            high = mid - 1;\n        }\n        else if (arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;",
    "\tlong n = arr.size();\n\tlong low = 0;\n\tlong high = n - 1;\n\tlong mid = 0;\n\twhile (low <= high) {\n\t\tif (arr[low] <= arr[high]) {\n\t\t\treturn low;\n\t\t}\n\t\tlong mid = low + (high - low) / 2;\n\t\tlong next = (mid + 1) % n;\n\t\tlong prev = (mid + n - 1) % n;\n\t\tif (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n\t\t\treturn mid;\n\t\t}\n\t\telse if (arr[mid] <= arr[high]) {\n\t\t\thigh = mid - 1;\n\t\t}\n\t\telse if (arr[mid] >= arr[low]) {\n\t\t\tlow = mid + 1;\n\t\t}\n\t}\n\treturn -1;",
    "    long n = arr.size();\n    long low = 0, high = n-1;\n    while(low <= high) {\n        if(arr[low] <= arr[high]) {\n            return low;\n        }\n        long mid = low + (high-low)/2;\n        long next = (mid+1)%n;\n        long prev = (mid+n-1)%n;\n        if(arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        }\n        else if(arr[mid] <= arr[high]) {\n            high = mid-1;\n        }\n        else if(arr[mid] >= arr[low]) {\n            low = mid+1;\n        }\n    }\n    return -1;",
    "    long n = arr.size();\n    long low = 0;\n    long high = n - 1;\n    long mid = 0;\n    while (low <= high) {\n        if (arr[low] <= arr[high]) {\n            return low;\n        }\n        long next = (low + high) / 2;\n        long prev = (n + next - 1) % n;\n        if (arr[next] <= arr[prev]) {\n            return next;\n        }\n        if (arr[low] <= arr[next]) {\n            low = next + 1;\n        } else {\n            high = next - 1;\n        }\n    }\n    return -1;",
    "    // Write your code here\n    long n = arr.size();\n    long low = 0, high = n-1;\n    while(low <= high){\n        if(arr[low] <= arr[high])\n            return low;\n        long mid = (low + high)/2;\n        long next = (mid + 1)%n;\n        long prev = (mid + n - 1)%n;\n        if(arr[mid] <= arr[next] && arr[mid] <= arr[prev])\n            return mid;\n        else if(arr[mid] <= arr[high])\n            high = mid - 1;\n        else if(arr[mid] >= arr[low])\n            low = mid + 1;\n    }\n    return -1;",
    "    long n = arr.size();\n    long low = 0, high = n - 1;\n    while (low <= high) {\n        if (arr[low] <= arr[high])\n            return low;\n        long mid = low + (high - low) / 2;\n        long next = (mid + 1) % n;\n        long prev = (mid + n - 1) % n;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev])\n            return mid;\n        else if (arr[mid] <= arr[high])\n            high = mid - 1;\n        else if (arr[mid] >= arr[low])\n            low = mid + 1;\n    }\n    return -1;",
    "    long n = arr.size();\n    long low = 0;\n    long high = n - 1;\n    while (low <= high) {\n        if (arr[low] <= arr[high]) {\n            return low;\n        }\n        long mid = low + (high - low) / 2;\n        long next = (mid + 1) % n;\n        long prev = (mid + n - 1) % n;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        }\n        else if (arr[mid] <= arr[high]) {\n            high = mid - 1;\n        }\n        else if (arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;",
    "    long n = arr.size();\n    long low = 0;\n    long high = n - 1;\n    while (low <= high) {\n        if (arr[low] <= arr[high]) {\n            return low;\n        }\n        long mid = low + (high - low) / 2;\n        long next = (mid + 1) % n;\n        long prev = (mid + n - 1) % n;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        } else if (arr[mid] <= arr[high]) {\n            high = mid - 1;\n        } else if (arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;",
    "    long n = arr.size();\n    long low = 0, high = n-1;\n    while(low <= high) {\n        if(arr[low] <= arr[high])\n            return low;\n        long mid = low + (high-low)/2;\n        long next = (mid+1)%n;\n        long prev = (mid+n-1)%n;\n        if(arr[mid] <= arr[next] && arr[mid] <= arr[prev])\n            return mid;\n        else if(arr[mid] <= arr[high])\n            high = mid-1;\n        else if(arr[mid] >= arr[low])\n            low = mid+1;\n    }\n    return -1;",
    "    // Write your code here\n    long n = arr.size();\n    long low = 0;\n    long high = n-1;\n    while(low<=high)\n    {\n        if(arr[low]<=arr[high])\n        {\n            return low;\n        }\n        long mid = low + (high-low)/2;\n        long next = (mid+1)%n;\n        long prev = (mid+n-1)%n;\n        if(arr[mid]<=arr[next] && arr[mid]<=arr[prev])\n        {\n            return mid;\n        }\n        else if(arr[mid]<=arr[high])\n        {\n            high = mid-1;\n        }\n        else if(arr[mid]>=arr[low])\n        {\n            low = mid+1;\n        }\n    }\n    return -1;",
    "    long n = arr.size();\n    long low = 0;\n    long high = n - 1;\n    while (low <= high) {\n        if (arr[low] <= arr[high]) {\n            return low;\n        }\n        long mid = low + (high - low) / 2;\n        long next = (mid + 1) % n;\n        long prev = (mid + n - 1) % n;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        }\n        else if (arr[mid] <= arr[high]) {\n            high = mid - 1;\n        }\n        else if (arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;",
    "    long n = arr.size();\n    long low = 0;\n    long high = n - 1;\n    while (low <= high) {\n        if (arr[low] <= arr[high]) {\n            return low;\n        }\n        long mid = (low + high) / 2;\n        long next = (mid + 1) % n;\n        long prev = (mid + n - 1) % n;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        }\n        else if (arr[mid] <= arr[high]) {\n            high = mid - 1;\n        }\n        else if (arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;",
    "    long n = arr.size();\n    long low = 0;\n    long high = n - 1;\n    long mid = 0;\n    while (low <= high) {\n        if (arr[low] <= arr[high]) {\n            return low;\n        }\n        long next = (mid + 1) % n;\n        long prev = (mid + n - 1) % n;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        } else if (arr[mid] <= arr[high]) {\n            high = mid - 1;\n        } else if (arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n        mid = (low + high) / 2;\n    }\n    return -1;",
    "    long n = arr.size();\n    long low = 0, high = n - 1;\n    while (low <= high) {\n        if (arr[low] <= arr[high])\n            return low;\n        long mid = (low + high) / 2;\n        long next = (mid + 1) % n, prev = (mid + n - 1) % n;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev])\n            return mid;\n        else if (arr[mid] <= arr[high])\n            high = mid - 1;\n        else if (arr[mid] >= arr[low])\n            low = mid + 1;\n    }\n    return -1;",
    "    long n = arr.size();\n    long low = 0;\n    long high = n - 1;\n    while (low <= high) {\n        if (arr[low] <= arr[high]) {\n            return low;\n        }\n        long mid = (low + high) / 2;\n        long next = (mid + 1) % n;\n        long prev = (mid + n - 1) % n;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        }\n        else if (arr[mid] <= arr[high]) {\n            high = mid - 1;\n        }\n        else if (arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;",
    "    long n = arr.size();\n    long low = 0, high = n-1;\n    while(low <= high) {\n        if(arr[low] <= arr[high])\n            return low;\n        long mid = low + (high - low)/2;\n        long next = (mid + 1) % n;\n        long prev = (mid + n - 1) % n;\n        if(arr[mid] <= arr[next] && arr[mid] <= arr[prev])\n            return mid;\n        else if(arr[mid] <= arr[high])\n            high = mid - 1;\n        else if(arr[mid] >= arr[low])\n            low = mid + 1;\n    }\n    return -1;",
    "    long n = arr.size();\n    long low = 0, high = n-1;\n    while(low <= high) {\n        if(arr[low] <= arr[high]) {\n            return low;\n        }\n        long mid = low + (high-low)/2;\n        long next = (mid+1)%n;\n        long prev = (mid+n-1)%n;\n        if(arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        }\n        else if(arr[mid] <= arr[high]) {\n            high = mid-1;\n        }\n        else if(arr[mid] >= arr[low]) {\n            low = mid+1;\n        }\n    }\n    return -1;",
    "    long n = arr.size();\n    long low = 0, high = n-1;\n    while(low <= high) {\n        if(arr[low] <= arr[high]) {\n            return low;\n        }\n        long mid = (low + high)/2;\n        long next = (mid + 1)%n;\n        long prev = (mid + n - 1)%n;\n        if(arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        }\n        else if(arr[mid] <= arr[high]) {\n            high = mid - 1;\n        }\n        else if(arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;",
    "    long n = arr.size();\n    long low = 0, high = n - 1, mid;\n    while (low <= high) {\n        if (arr[low] <= arr[high]) {\n            return low;\n        }\n        mid = (low + high) / 2;\n        long next = (mid + 1) % n;\n        long prev = (mid + n - 1) % n;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        }\n        else if (arr[mid] <= arr[high]) {\n            high = mid - 1;\n        }\n        else if (arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;",
    "\tlong n = arr.size();\n\tlong low = 0, high = n - 1;\n\twhile (low <= high) {\n\t\tif (arr[low] <= arr[high]) {\n\t\t\treturn low;\n\t\t}\n\t\tlong mid = low + (high - low) / 2;\n\t\tlong next = (mid + 1) % n;\n\t\tlong prev = (mid + n - 1) % n;\n\t\tif (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n\t\t\treturn mid;\n\t\t}\n\t\telse if (arr[mid] <= arr[high]) {\n\t\t\thigh = mid - 1;\n\t\t}\n\t\telse if (arr[mid] >= arr[low]) {\n\t\t\tlow = mid + 1;\n\t\t}\n\t}\n\treturn -1;",
    "    long n = arr.size();\n    long low = 0;\n    long high = n-1;\n    while (low <= high) {\n        if (arr[low] <= arr[high]) {\n            return low;\n        }\n        long mid = (low + high) / 2;\n        long next = (mid + 1) % n;\n        long prev = (mid + n - 1) % n;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        }\n        else if (arr[mid] <= arr[high]) {\n            high = mid - 1;\n        }\n        else if (arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;",
    "    long n = arr.size();\n    long low = 0, high = n-1;\n    while(low <= high) {\n        if(arr[low] <= arr[high]) {\n            return low;\n        }\n        long mid = low + (high - low)/2;\n        long next = (mid + 1)%n;\n        long prev = (mid + n - 1)%n;\n        if(arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        }\n        else if(arr[mid] <= arr[high]) {\n            high = mid - 1;\n        }\n        else if(arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;",
    "    long n = arr.size();\n    long low = 0;\n    long high = n - 1;\n    while(low <= high) {\n        if(arr[low] <= arr[high]) {\n            return low;\n        }\n        long mid = low + (high - low) / 2;\n        long next = (mid + 1) % n;\n        long prev = (mid + n - 1) % n;\n        if(arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        }\n        else if(arr[mid] <= arr[high]) {\n            high = mid - 1;\n        }\n        else if(arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;",
    "    long n = arr.size();\n    long low = 0;\n    long high = n - 1;\n    long mid = 0;\n    while (low <= high) {\n        if (arr[low] <= arr[high]) {\n            return low;\n        }\n        long next = (mid + 1) % n;\n        long prev = (mid - 1 + n) % n;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        }\n        else if (arr[mid] <= arr[high]) {\n            high = mid - 1;\n        }\n        else if (arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n        mid = (low + high) / 2;\n    }\n    return -1;",
    "    long n = arr.size();\n    long low = 0, high = n-1;\n    while (low <= high) {\n        if (arr[low] <= arr[high]) {\n            return low;\n        }\n        long mid = low + (high-low)/2;\n        long next = (mid+1)%n;\n        long prev = (mid+n-1)%n;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        }\n        else if (arr[mid] <= arr[high]) {\n            high = mid-1;\n        }\n        else if (arr[mid] >= arr[low]) {\n            low = mid+1;\n        }\n    }\n    return -1;",
    "    long n = arr.size();\n    long low = 0, high = n-1;\n    while(low <= high) {\n        if(arr[low] <= arr[high])\n            return low;\n        long mid = (low + high)/2;\n        long next = (mid + 1)%n;\n        long prev = (mid + n - 1)%n;\n        if(arr[mid] <= arr[next] && arr[mid] <= arr[prev])\n            return mid;\n        else if(arr[mid] <= arr[high])\n            high = mid - 1;\n        else if(arr[mid] >= arr[low])\n            low = mid + 1;\n    }\n    return -1;",
    "    long n = arr.size();\n    long low = 0, high = n-1;\n    while(low <= high) {\n        if(arr[low] <= arr[high]) {\n            return low;\n        }\n        long mid = low + (high - low)/2;\n        long next = (mid + 1) % n;\n        long prev = (mid + n - 1) % n;\n        if(arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        }\n        else if(arr[mid] <= arr[high]) {\n            high = mid - 1;\n        }\n        else if(arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;",
    "    // Write your code here\n    long n = arr.size();\n    long low = 0, high = n - 1;\n    while (low <= high) {\n        if (arr[low] <= arr[high])\n            return low;\n        long mid = low + (high - low) / 2;\n        long next = (mid + 1) % n;\n        long prev = (mid + n - 1) % n;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev])\n            return mid;\n        else if (arr[mid] <= arr[high])\n            high = mid - 1;\n        else if (arr[mid] >= arr[low])\n            low = mid + 1;\n    }\n    return -1;",
    "    long n = arr.size();\n    long low = 0, high = n - 1;\n    while (low <= high) {\n        if (arr[low] <= arr[high]) {\n            return low;\n        }\n        long mid = low + (high - low) / 2;\n        long next = (mid + 1) % n;\n        long prev = (mid + n - 1) % n;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        }\n        else if (arr[mid] <= arr[high]) {\n            high = mid - 1;\n        }\n        else if (arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;",
    "    long n = arr.size();\n    long low = 0;\n    long high = n - 1;\n    long mid = 0;\n    while (low <= high) {\n        if (arr[low] <= arr[high]) {\n            return low;\n        }\n        mid = (low + high) / 2;\n        long next = (mid + 1) % n;\n        long prev = (mid + n - 1) % n;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        }\n        else if (arr[mid] <= arr[high]) {\n            high = mid - 1;\n        }\n        else if (arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;",
    "    long n = arr.size();\n    long low = 0, high = n-1;\n    while (low <= high) {\n        if (arr[low] <= arr[high]) {\n            return low;\n        }\n        long mid = (low + high) / 2;\n        long next = (mid + 1) % n;\n        long prev = (mid + n - 1) % n;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        } else if (arr[mid] <= arr[high]) {\n            high = mid - 1;\n        } else if (arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;",
    "    long n = arr.size();\n    long low = 0;\n    long high = n - 1;\n    while (low <= high) {\n        if (arr[low] <= arr[high]) {\n            return low;\n        }\n        long mid = low + (high - low) / 2;\n        long next = (mid + 1) % n;\n        long prev = (mid + n - 1) % n;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        }\n        else if (arr[mid] <= arr[high]) {\n            high = mid - 1;\n        }\n        else if (arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;",
    "    long n = arr.size();\n    long low = 0, high = n - 1;\n    while (low <= high) {\n        if (arr[low] <= arr[high]) {\n            return low;\n        }\n        long mid = low + (high - low) / 2;\n        long next = (mid + 1) % n;\n        long prev = (mid + n - 1) % n;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        } else if (arr[mid] <= arr[high]) {\n            high = mid - 1;\n        } else if (arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;",
    "    long n = arr.size();\n    long low = 0, high = n - 1;\n    while (low <= high) {\n        if (arr[low] <= arr[high]) {\n            return low;\n        }\n        long mid = low + (high - low) / 2;\n        long next = (mid + 1) % n;\n        long prev = (mid + n - 1) % n;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        } else if (arr[mid] <= arr[high]) {\n            high = mid - 1;\n        } else if (arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;",
    "    long n = arr.size();\n    long low = 0, high = n-1;\n    while(low <= high) {\n        if(arr[low] <= arr[high]) {\n            return low;\n        }\n        long mid = low + (high-low)/2;\n        long next = (mid+1)%n;\n        long prev = (mid+n-1)%n;\n        if(arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        } else if(arr[mid] <= arr[high]) {\n            high = mid-1;\n        } else if(arr[mid] >= arr[low]) {\n            low = mid+1;\n        }\n    }\n    return -1;",
    "    long n = arr.size();\n    long low = 0, high = n - 1;\n    while (low <= high) {\n        if (arr[low] <= arr[high]) {\n            return low;\n        }\n        long mid = low + (high - low) / 2;\n        long next = (mid + 1) % n;\n        long prev = (mid + n - 1) % n;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        } else if (arr[mid] <= arr[high]) {\n            high = mid - 1;\n        } else if (arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;",
    "    long n = arr.size();\n    long low = 0;\n    long high = n - 1;\n    while (low <= high) {\n        if (arr[low] <= arr[high]) {\n            return low;\n        }\n        long mid = (low + high) / 2;\n        long next = (mid + 1) % n;\n        long prev = (mid + n - 1) % n;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        }\n        else if (arr[mid] <= arr[high]) {\n            high = mid - 1;\n        }\n        else if (arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;",
    "    long n = arr.size();\n    long low = 0, high = n - 1;\n    while (low <= high) {\n        if (arr[low] <= arr[high]) {\n            return low;\n        }\n        long mid = low + (high - low) / 2;\n        long next = (mid + 1) % n;\n        long prev = (mid + n - 1) % n;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        } else if (arr[mid] <= arr[high]) {\n            high = mid - 1;\n        } else if (arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;",
    "    long n = arr.size();\n    long low = 0;\n    long high = n - 1;\n    while (low <= high) {\n        if (arr[low] <= arr[high]) {\n            return low;\n        }\n        long mid = low + (high - low) / 2;\n        long next = (mid + 1) % n;\n        long prev = (mid + n - 1) % n;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        }\n        else if (arr[mid] <= arr[high]) {\n            high = mid - 1;\n        }\n        else if (arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;",
    "    long n = arr.size();\n    long low = 0;\n    long high = n-1;\n    while(low <= high) {\n        if(arr[low] <= arr[high]) {\n            return low;\n        }\n        long mid = low + (high - low)/2;\n        long next = (mid + 1) % n;\n        long prev = (mid + n - 1) % n;\n        if(arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        }\n        else if(arr[mid] <= arr[high]) {\n            high = mid - 1;\n        }\n        else if(arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;",
    "    long n = arr.size();\n    long low = 0, high = n-1;\n    while(low <= high) {\n        if(arr[low] <= arr[high]) {\n            return low;\n        }\n        long mid = (low + high) / 2;\n        long next = (mid + 1) % n;\n        long prev = (mid + n - 1) % n;\n        if(arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        }\n        else if(arr[mid] <= arr[high]) {\n            high = mid - 1;\n        }\n        else if(arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;",
    "    long n = arr.size();\n    long low = 0;\n    long high = n - 1;\n    while (low <= high) {\n        if (arr[low] <= arr[high]) {\n            return low;\n        }\n        long mid = low + (high - low) / 2;\n        long next = (mid + 1) % n;\n        long prev = (mid + n - 1) % n;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        } else if (arr[mid] <= arr[high]) {\n            high = mid - 1;\n        } else if (arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;",
    "    // Write your code here\n    long n = arr.size();\n    long low = 0, high = n - 1;\n    while (low <= high) {\n        if (arr[low] <= arr[high])\n            return low;\n        long mid = low + (high - low) / 2;\n        long next = (mid + 1) % n;\n        long prev = (mid + n - 1) % n;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev])\n            return mid;\n        else if (arr[mid] <= arr[high])\n            high = mid - 1;\n        else if (arr[mid] >= arr[low])\n            low = mid + 1;\n    }\n    return -1;",
    "    // Write your code here\n    long n = arr.size();\n    long low = 0;\n    long high = n-1;\n    while(low<=high){\n        if(arr[low]<=arr[high]){\n            return low;\n        }\n        long mid = (low+high)/2;\n        long next = (mid+1)%n;\n        long prev = (mid+n-1)%n;\n        if(arr[mid]<=arr[next] && arr[mid]<=arr[prev]){\n            return mid;\n        }\n        else if(arr[mid]<=arr[high]){\n            high = mid-1;\n        }\n        else if(arr[mid]>=arr[low]){\n            low = mid+1;\n        }\n    }\n    return -1;",
    "    long n = arr.size();\n    long low = 0, high = n-1;\n    while(low <= high) {\n        if(arr[low] <= arr[high])\n            return low;\n        long mid = (low + high) / 2;\n        long next = (mid + 1) % n;\n        long prev = (mid + n - 1) % n;\n        if(arr[mid] <= arr[next] && arr[mid] <= arr[prev])\n            return mid;\n        else if(arr[mid] <= arr[high])\n            high = mid - 1;\n        else if(arr[mid] >= arr[low])\n            low = mid + 1;\n    }\n    return -1;",
    "    long n = arr.size();\n    long low = 0;\n    long high = n-1;\n    long mid = 0;\n    while(low <= high) {\n        if(arr[low] <= arr[high]) {\n            return low;\n        }\n        mid = (low + high)/2;\n        long next = (mid + 1) % n;\n        long prev = (mid + n - 1) % n;\n        if(arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        }\n        else if(arr[mid] <= arr[high]) {\n            high = mid - 1;\n        }\n        else if(arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;",
    "    long n = arr.size();\n    long low = 0, high = n - 1;\n    while (low <= high) {\n        if (arr[low] <= arr[high])\n            return low;\n        long mid = low + (high - low) / 2;\n        long next = (mid + 1) % n, prev = (mid + n - 1) % n;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev])\n            return mid;\n        else if (arr[mid] <= arr[high])\n            high = mid - 1;\n        else if (arr[mid] >= arr[low])\n            low = mid + 1;\n    }\n    return -1;",
    "    long n = arr.size();\n    long low = 0;\n    long high = n-1;\n    long mid;\n    while(low <= high) {\n        if(arr[low] <= arr[high]) {\n            return low;\n        }\n        long next = (low + high) / 2;\n        long prev = (low + high + n) / 2;\n        if(arr[next] <= arr[prev]) {\n            return next;\n        }\n        if(arr[low] <= arr[mid]) {\n            low = mid + 1;\n        }\n        else {\n            high = mid - 1;\n        }\n    }\n    return -1;",
    "    long n = arr.size();\n    long low = 0;\n    long high = n - 1;\n    while (low <= high) {\n        if (arr[low] <= arr[high]) {\n            return low;\n        }\n        long mid = (low + high) / 2;\n        long next = (mid + 1) % n;\n        long prev = (mid + n - 1) % n;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        } else if (arr[mid] <= arr[high]) {\n            high = mid - 1;\n        } else if (arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;",
    "    long n = arr.size();\n    long low = 0, high = n - 1;\n    while (low <= high) {\n        if (arr[low] <= arr[high])\n            return low;\n        long mid = (low + high) / 2;\n        long next = (mid + 1) % n;\n        long prev = (mid + n - 1) % n;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev])\n            return mid;\n        else if (arr[mid] <= arr[high])\n            high = mid - 1;\n        else if (arr[mid] >= arr[low])\n            low = mid + 1;\n    }\n    return -1;",
    "    long n = arr.size();\n    long low = 0, high = n - 1;\n    while (low <= high) {\n        if (arr[low] <= arr[high]) {\n            return low;\n        }\n        long mid = low + (high - low) / 2;\n        long next = (mid + 1) % n;\n        long prev = (mid + n - 1) % n;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        } else if (arr[mid] <= arr[high]) {\n            high = mid - 1;\n        } else if (arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;",
    "    long n = arr.size();\n    long low = 0;\n    long high = n - 1;\n    while(low <= high) {\n        if(arr[low] <= arr[high]) {\n            return low;\n        }\n        long mid = low + (high - low) / 2;\n        long next = (mid + 1) % n;\n        long prev = (mid + n - 1) % n;\n        if(arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        }\n        else if(arr[mid] <= arr[high]) {\n            high = mid - 1;\n        }\n        else if(arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;",
    "    long n = arr.size();\n    long low = 0;\n    long high = n - 1;\n    long mid;\n    while(low <= high) {\n        if(arr[low] <= arr[high]) {\n            return low;\n        }\n        mid = low + (high - low) / 2;\n        long next = (mid + 1) % n;\n        long prev = (mid + n - 1) % n;\n        if(arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        }\n        else if(arr[mid] <= arr[high]) {\n            high = mid - 1;\n        }\n        else if(arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;",
    "    long n = arr.size();\n    long low = 0;\n    long high = n - 1;\n    while (low <= high) {\n        if (arr[low] <= arr[high]) {\n            return low;\n        }\n        long mid = low + (high - low) / 2;\n        long next = (mid + 1) % n;\n        long prev = (mid + n - 1) % n;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        } else if (arr[mid] <= arr[high]) {\n            high = mid - 1;\n        } else if (arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;",
    "    long n = arr.size();\n    long low = 0;\n    long high = n-1;\n    while(low <= high) {\n        if(arr[low] <= arr[high]) {\n            return low;\n        }\n        long mid = (low + high)/2;\n        long next = (mid + 1)%n;\n        long prev = (mid + n - 1)%n;\n        if(arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        }\n        else if(arr[mid] <= arr[high]) {\n            high = mid - 1;\n        }\n        else if(arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;",
    "    long n = arr.size();\n    long low = 0, high = n-1;\n    while(low <= high) {\n        if(arr[low] <= arr[high]) {\n            return low;\n        }\n        long mid = (low + high)/2;\n        long next = (mid + 1) % n;\n        long prev = (mid + n - 1) % n;\n        if(arr[mid] <= arr[next] and arr[mid] <= arr[prev]) {\n            return mid;\n        }\n        else if(arr[mid] <= arr[high]) {\n            high = mid - 1;\n        }\n        else if(arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;",
    "    long n = arr.size();\n    long low = 0;\n    long high = n-1;\n    long mid = 0;\n    while(low <= high) {\n        if(arr[low] <= arr[high]) {\n            return low;\n        }\n        mid = low + (high - low)/2;\n        long next = (mid + 1) % n;\n        long prev = (mid - 1 + n) % n;\n        if(arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        }\n        else if(arr[mid] <= arr[high]) {\n            high = mid - 1;\n        }\n        else if(arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;",
    "    long n = arr.size();\n    long low = 0, high = n - 1;\n    while (low <= high) {\n        if (arr[low] <= arr[high]) {\n            return low;\n        }\n        long mid = (low + high) / 2;\n        long next = (mid + 1) % n;\n        long prev = (mid + n - 1) % n;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        }\n        else if (arr[mid] <= arr[high]) {\n            high = mid - 1;\n        }\n        else if (arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;",
    "    // Write your code here\n    long n = arr.size();\n    long low = 0, high = n-1;\n    while(low <= high){\n        if(arr[low] <= arr[high]){\n            return low;\n        }\n        long mid = (low+high)/2;\n        long next = (mid+1)%n;\n        long prev = (mid+n-1)%n;\n        if(arr[mid] <= arr[next] && arr[mid] <= arr[prev]){\n            return mid;\n        }\n        else if(arr[mid] <= arr[high]){\n            high = mid-1;\n        }\n        else if(arr[mid] >= arr[low]){\n            low = mid+1;\n        }\n    }\n    return -1;",
    "    long n = arr.size();\n    long low = 0;\n    long high = n - 1;\n    long mid = 0;\n    while (low <= high) {\n        if (arr[low] <= arr[high]) {\n            return low;\n        }\n        long next = (low + high) / 2;\n        long prev = (n + next - 1) % n;\n        if (arr[next] <= arr[prev]) {\n            return next;\n        }\n        if (arr[next] <= arr[high]) {\n            high = next - 1;\n        } else if (arr[next] >= arr[low]) {\n            low = next + 1;\n        }\n    }\n    return -1;",
    "    // Write your code here\n    long n = arr.size();\n    long low = 0, high = n-1;\n    while(low <= high){\n        if(arr[low] <= arr[high])\n            return low;\n        long mid = (low + high)/2;\n        long next = (mid + 1)%n;\n        long prev = (mid + n - 1)%n;\n        if(arr[mid] <= arr[next] && arr[mid] <= arr[prev])\n            return mid;\n        else if(arr[mid] <= arr[high])\n            high = mid - 1;\n        else if(arr[mid] >= arr[low])\n            low = mid + 1;\n    }\n    return -1;",
    "    long n = arr.size();\n    long low = 0;\n    long high = n - 1;\n    while (low <= high) {\n        if (arr[low] <= arr[high]) {\n            return low;\n        }\n        long mid = low + (high - low) / 2;\n        long next = (mid + 1) % n;\n        long prev = (mid + n - 1) % n;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        }\n        else if (arr[mid] <= arr[high]) {\n            high = mid - 1;\n        }\n        else if (arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;",
    "    long n = arr.size();\n    long low = 0;\n    long high = n-1;\n    while(low <= high) {\n        if(arr[low] <= arr[high]) {\n            return low;\n        }\n        long mid = low + (high - low)/2;\n        long next = (mid + 1) % n;\n        long prev = (mid + n - 1) % n;\n        if(arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        }\n        else if(arr[mid] <= arr[high]) {\n            high = mid - 1;\n        }\n        else if(arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;",
    "    long n = arr.size();\n    long low = 0, high = n-1;\n    while(low <= high) {\n        if(arr[low] <= arr[high]) {\n            return low;\n        }\n        long mid = low + (high - low)/2;\n        long next = (mid + 1)%n;\n        long prev = (mid + n - 1)%n;\n        if(arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        }\n        else if(arr[mid] <= arr[high]) {\n            high = mid - 1;\n        }\n        else if(arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;",
    "    long n = arr.size();\n    long low = 0;\n    long high = n-1;\n    while(low<=high) {\n        if(arr[low]<=arr[high]) {\n            return low;\n        }\n        long mid = low + (high-low)/2;\n        long next = (mid+1)%n;\n        long prev = (mid+n-1)%n;\n        if(arr[mid]<=arr[next] && arr[mid]<=arr[prev]) {\n            return mid;\n        }\n        else if(arr[mid]<=arr[high]) {\n            high = mid-1;\n        }\n        else if(arr[mid]>=arr[low]) {\n            low = mid+1;\n        }\n    }\n    return -1;",
    "    long n = arr.size();\n    long low = 0, high = n - 1;\n    while (low <= high) {\n        if (arr[low] <= arr[high]) {\n            return low;\n        }\n        long mid = low + (high - low) / 2;\n        long next = (mid + 1) % n;\n        long prev = (mid + n - 1) % n;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        }\n        else if (arr[mid] <= arr[high]) {\n            high = mid - 1;\n        }\n        else if (arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;",
    "    // Write your code here\n    long n = arr.size();\n    long low = 0;\n    long high = n-1;\n    while(low<=high){\n        if(arr[low]<=arr[high]){\n            return low;\n        }\n        long mid = (low+high)/2;\n        long next = (mid+1)%n;\n        long prev = (mid+n-1)%n;\n        if(arr[mid]<=arr[next] && arr[mid]<=arr[prev]){\n            return mid;\n        }\n        else if(arr[mid]<=arr[high]){\n            high = mid-1;\n        }\n        else if(arr[mid]>=arr[low]){\n            low = mid+1;\n        }\n    }\n    return -1;",
    "    long n = arr.size();\n    long low = 0, high = n-1;\n    while(low <= high) {\n        if(arr[low] <= arr[high]) {\n            return low;\n        }\n        long mid = low + (high - low)/2;\n        long next = (mid + 1) % n;\n        long prev = (mid + n - 1) % n;\n        if(arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        }\n        else if(arr[mid] <= arr[high]) {\n            high = mid - 1;\n        }\n        else if(arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;",
    "    long n = arr.size();\n    long low = 0, high = n - 1;\n    while (low <= high) {\n        if (arr[low] <= arr[high]) {\n            return low;\n        }\n        long mid = (low + high) / 2;\n        long next = (mid + 1) % n;\n        long prev = (mid + n - 1) % n;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        } else if (arr[mid] <= arr[high]) {\n            high = mid - 1;\n        } else if (arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;",
    "    long n = arr.size();\n    long low = 0, high = n - 1;\n    while (low <= high) {\n        if (arr[low] <= arr[high]) {\n            return low;\n        }\n        long mid = low + (high - low) / 2;\n        long next = (mid + 1) % n, prev = (mid + n - 1) % n;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        } else if (arr[mid] <= arr[high]) {\n            high = mid - 1;\n        } else if (arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;",
    "    long n = arr.size();\n    long low = 0;\n    long high = n - 1;\n    while (low <= high) {\n        if (arr[low] <= arr[high]) {\n            return low;\n        }\n        long mid = (low + high) / 2;\n        long next = (mid + 1) % n;\n        long prev = (mid + n - 1) % n;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        }\n        else if (arr[mid] <= arr[high]) {\n            high = mid - 1;\n        }\n        else if (arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;",
    "    long n = arr.size();\n    long low = 0;\n    long high = n-1;\n    while(low <= high) {\n        if(arr[low] <= arr[high]) {\n            return low;\n        }\n        long mid = low + (high-low)/2;\n        long next = (mid+1)%n;\n        long prev = (mid+n-1)%n;\n        if(arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        }\n        else if(arr[mid] <= arr[high]) {\n            high = mid-1;\n        }\n        else if(arr[mid] >= arr[low]) {\n            low = mid+1;\n        }\n    }\n    return -1;",
    "    // Write your code here\n    long n = arr.size();\n    long low = 0, high = n-1;\n    while(low <= high){\n        if(arr[low] <= arr[high]){\n            return low;\n        }\n        long mid = low + (high - low)/2;\n        long next = (mid + 1)%n;\n        long prev = (mid + n - 1)%n;\n        if(arr[mid] <= arr[next] && arr[mid] <= arr[prev]){\n            return mid;\n        }\n        else if(arr[mid] <= arr[high]){\n            high = mid - 1;\n        }\n        else if(arr[mid] >= arr[low]){\n            low = mid + 1;\n        }\n    }\n    return -1;",
    "    long n = arr.size();\n    long low = 0;\n    long high = n - 1;\n    while (low <= high) {\n        if (arr[low] <= arr[high]) {\n            return low;\n        }\n        long mid = (low + high) / 2;\n        long next = (mid + 1) % n;\n        long prev = (mid + n - 1) % n;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        }\n        else if (arr[mid] <= arr[high]) {\n            high = mid - 1;\n        }\n        else if (arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;",
    "    long n = arr.size();\n    long low = 0;\n    long high = n - 1;\n    while (low <= high) {\n        if (arr[low] <= arr[high]) {\n            return low;\n        }\n        long mid = low + (high - low) / 2;\n        long next = (mid + 1) % n;\n        long prev = (mid + n - 1) % n;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        } else if (arr[mid] <= arr[high]) {\n            high = mid - 1;\n        } else if (arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;",
    "    long n = arr.size();\n    long low = 0, high = n-1;\n    while(low <= high) {\n        if(arr[low] <= arr[high]) {\n            return low;\n        }\n        long mid = low + (high - low)/2;\n        long next = (mid + 1)%n;\n        long prev = (mid + n - 1)%n;\n        if(arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        }\n        else if(arr[mid] <= arr[high]) {\n            high = mid - 1;\n        }\n        else if(arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;",
    "    long n = arr.size();\n    long low = 0;\n    long high = n - 1;\n    while(low <= high) {\n        if(arr[low] <= arr[high]) {\n            return low;\n        }\n        long mid = low + (high - low) / 2;\n        long next = (mid + 1) % n;\n        long prev = (mid + n - 1) % n;\n        if(arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        }\n        else if(arr[mid] <= arr[high]) {\n            high = mid - 1;\n        }\n        else if(arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;",
    "    long n = arr.size();\n    long low = 0, high = n - 1;\n    while (low <= high) {\n        if (arr[low] <= arr[high]) return low;\n        long mid = low + (high - low) / 2;\n        long next = (mid + 1) % n;\n        long prev = (mid + n - 1) % n;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) return mid;\n        else if (arr[mid] <= arr[high]) high = mid - 1;\n        else if (arr[mid] >= arr[low]) low = mid + 1;\n    }\n    return -1;",
    "    long n = arr.size();\n    long low = 0;\n    long high = n - 1;\n    while (low <= high) {\n        if (arr[low] <= arr[high]) {\n            return low;\n        }\n        long mid = low + (high - low) / 2;\n        long next = (mid + 1) % n;\n        long prev = (mid + n - 1) % n;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        } else if (arr[mid] <= arr[high]) {\n            high = mid - 1;\n        } else if (arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;",
    "\tlong n = arr.size();\n\tlong low = 0, high = n - 1;\n\twhile (low <= high) {\n\t\tif (arr[low] <= arr[high]) {\n\t\t\treturn low;\n\t\t}\n\t\tlong mid = low + (high - low) / 2;\n\t\tlong next = (mid + 1) % n;\n\t\tlong prev = (mid + n - 1) % n;\n\t\tif (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n\t\t\treturn mid;\n\t\t}\n\t\telse if (arr[mid] <= arr[high]) {\n\t\t\thigh = mid - 1;\n\t\t}\n\t\telse if (arr[mid] >= arr[low]) {\n\t\t\tlow = mid + 1;\n\t\t}\n\t}\n\treturn -1;",
    "    long n = arr.size();\n    long low = 0, high = n - 1;\n    while (low <= high) {\n        if (arr[low] <= arr[high]) {\n            return low;\n        }\n        long mid = (low + high) / 2;\n        long next = (mid + 1) % n;\n        long prev = (mid + n - 1) % n;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        } else if (arr[mid] <= arr[high]) {\n            high = mid - 1;\n        } else if (arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;",
    "    // Write your code here\n    long n = arr.size();\n    long low = 0;\n    long high = n-1;\n    long mid = 0;\n    while(low<=high){\n        if(arr[low]<=arr[high]){\n            return low;\n        }\n        long next = (low+high)/2;\n        long prev = (next+n-1)%n;\n        if(arr[next]<=arr[prev]){\n            return next;\n        }\n        if(arr[low]<=arr[next]){\n            low = next+1;\n        }\n        else{\n            high = next-1;\n        }\n    }\n    return -1;",
    "    long n = arr.size();\n    long low = 0, high = n - 1;\n    while (low <= high) {\n        if (arr[low] <= arr[high]) {\n            return low;\n        }\n        long mid = low + (high - low) / 2;\n        long next = (mid + 1) % n;\n        long prev = (mid + n - 1) % n;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        } else if (arr[mid] <= arr[high]) {\n            high = mid - 1;\n        } else if (arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;",
    "    long n = arr.size();\n    long low = 0;\n    long high = n-1;\n    while(low < high) {\n        long mid = low + (high - low)/2;\n        if(arr[mid] > arr[high]) {\n            low = mid + 1;\n        } else {\n            high = mid;\n        }\n    }\n    return low;",
    "    long n = arr.size();\n    long low = 0;\n    long high = n - 1;\n    long mid;\n    while (low <= high) {\n        if (arr[low] <= arr[high]) {\n            return low;\n        }\n        mid = low + (high - low) / 2;\n        long next = (mid + 1) % n;\n        long prev = (mid + n - 1) % n;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        } else if (arr[mid] <= arr[high]) {\n            high = mid - 1;\n        } else if (arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;",
    "    long n = arr.size();\n    long low = 0;\n    long high = n-1;\n    while(low <= high) {\n        if(arr[low] <= arr[high]) {\n            return low;\n        }\n        long mid = low + (high - low)/2;\n        long next = (mid + 1) % n;\n        long prev = (mid + n - 1) % n;\n        if(arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        }\n        else if(arr[mid] <= arr[high]) {\n            high = mid - 1;\n        }\n        else if(arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;",
    "    long n = arr.size();\n    long low = 0, high = n-1;\n    while (low <= high) {\n        if (arr[low] <= arr[high]) {\n            return low;\n        }\n        long mid = (low + high) / 2;\n        long next = (mid + 1) % n;\n        long prev = (mid + n - 1) % n;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        } else if (arr[mid] <= arr[high]) {\n            high = mid - 1;\n        } else if (arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;",
    "    // Write your code here\n    long n = arr.size();\n    long low = 0;\n    long high = n-1;\n    while(low <= high){\n        if(arr[low] <= arr[high]){\n            return low;\n        }\n        long mid = low + (high-low)/2;\n        long next = (mid+1)%n;\n        long prev = (mid+n-1)%n;\n        if(arr[mid] <= arr[next] && arr[mid] <= arr[prev]){\n            return mid;\n        }\n        else if(arr[mid] <= arr[high]){\n            high = mid-1;\n        }\n        else if(arr[mid] >= arr[low]){\n            low = mid+1;\n        }\n    }\n    return -1;",
    "    long n = arr.size();\n    long low = 0, high = n-1;\n    while(low <= high) {\n        if(arr[low] <= arr[high])\n            return low;\n        long mid = low + (high - low)/2;\n        long next = (mid + 1)%n, prev = (mid + n - 1)%n;\n        if(arr[mid] <= arr[next] && arr[mid] <= arr[prev])\n            return mid;\n        else if(arr[mid] <= arr[high])\n            high = mid - 1;\n        else if(arr[mid] >= arr[low])\n            low = mid + 1;\n    }\n    return -1;",
    "    // Write your code here\n    long n = arr.size();\n    long low = 0, high = n-1;\n    while(low <= high){\n        if(arr[low] <= arr[high])\n            return low;\n        long mid = (low+high)/2;\n        long next = (mid+1)%n;\n        long prev = (mid+n-1)%n;\n        if(arr[mid] <= arr[next] && arr[mid] <= arr[prev])\n            return mid;\n        else if(arr[mid] <= arr[high])\n            high = mid-1;\n        else if(arr[mid] >= arr[low])\n            low = mid+1;\n    }\n    return -1;",
    "    long n = arr.size();\n    long low = 0, high = n - 1;\n    while (low <= high) {\n        if (arr[low] <= arr[high]) {\n            return low;\n        }\n        long mid = (low + high) / 2;\n        long next = (mid + 1) % n;\n        long prev = (mid + n - 1) % n;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        }\n        else if (arr[mid] <= arr[high]) {\n            high = mid - 1;\n        }\n        else if (arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;",
    "    // Write your code here\n    long n = arr.size();\n    long low = 0;\n    long high = n-1;\n    while(low <= high) {\n        if(arr[low] <= arr[high]) {\n            return low;\n        }\n        long mid = low + (high - low)/2;\n        long next = (mid + 1) % n;\n        long prev = (mid + n - 1) % n;\n        if(arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        }\n        else if(arr[mid] <= arr[high]) {\n            high = mid - 1;\n        }\n        else if(arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;",
    "    long n = arr.size();\n    long low = 0, high = n-1;\n    while(low <= high) {\n        if(arr[low] <= arr[high]) {\n            return low;\n        }\n        long mid = low + (high-low)/2;\n        long next = (mid+1)%n;\n        long prev = (mid+n-1)%n;\n        if(arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        }\n        else if(arr[mid] <= arr[high]) {\n            high = mid-1;\n        }\n        else if(arr[mid] >= arr[low]) {\n            low = mid+1;\n        }\n    }\n    return -1;",
    "    long n = arr.size();\n    long low = 0;\n    long high = n-1;\n    long mid = 0;\n    while(low < high) {\n        mid = low + (high - low)/2;\n        if(arr[mid] > arr[high]) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;",
    "    long low = 0, high = arr.size() - 1;\n    while (low <= high) {\n        if (arr[low] <= arr[high]) {\n            return low;\n        }\n        long mid = low + (high - low) / 2;\n        long next = (mid + 1) % arr.size();\n        long prev = (mid + arr.size() - 1) % arr.size();\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        }\n        else if (arr[mid] <= arr[high]) {\n            high = mid - 1;\n        }\n        else if (arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;",
    "    // Write your code here\n    long n = arr.size();\n    long low = 0;\n    long high = n-1;\n    while(low<=high){\n        if(arr[low]<=arr[high]){\n            return low;\n        }\n        long mid = (low+high)/2;\n        long next = (mid+1)%n;\n        long prev = (mid+n-1)%n;\n        if(arr[mid]<=arr[next] && arr[mid]<=arr[prev]){\n            return mid;\n        }\n        else if(arr[mid]<=arr[high]){\n            high = mid-1;\n        }\n        else if(arr[mid]>=arr[low]){\n            low = mid+1;\n        }\n    }\n    return -1;",
    "    long n = arr.size();\n    long low = 0;\n    long high = n - 1;\n    long mid = 0;\n    while (low <= high) {\n        if (arr[low] <= arr[high]) {\n            return low;\n        }\n        mid = low + (high - low) / 2;\n        long next = (mid + 1) % n;\n        long prev = (mid + n - 1) % n;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        }\n        else if (arr[mid] <= arr[high]) {\n            high = mid - 1;\n        }\n        else if (arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;",
    "    long n = arr.size();\n    long low = 0;\n    long high = n - 1;\n    while (low <= high) {\n        if (arr[low] <= arr[high]) {\n            return low;\n        }\n        long mid = (low + high) / 2;\n        long next = (mid + 1) % n;\n        long prev = (mid + n - 1) % n;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        }\n        else if (arr[mid] <= arr[high]) {\n            high = mid - 1;\n        }\n        else if (arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;",
    "    long n = arr.size();\n    long low = 0;\n    long high = n - 1;\n    long mid = 0;\n    while(low <= high) {\n        if(arr[low] <= arr[high]) {\n            return low;\n        }\n        long next = (mid + 1) % n;\n        long prev = (mid + n - 1) % n;\n        if(arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        }\n        else if(arr[mid] <= arr[high]) {\n            high = mid - 1;\n        }\n        else if(arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;",
    "    long n = arr.size();\n    long low = 0;\n    long high = n-1;\n    long mid = 0;\n    while(low <= high) {\n        if(arr[low] <= arr[high]) {\n            return low;\n        }\n        long next = (mid+1)%n;\n        long prev = (mid+n-1)%n;\n        if(arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        }\n        else if(arr[mid] <= arr[high]) {\n            high = mid-1;\n        }\n        else if(arr[mid] >= arr[low]) {\n            low = mid+1;\n        }\n    }\n    return -1;",
    "    long n = arr.size();\n    long low = 0, high = n - 1;\n    while(low <= high) {\n        if(arr[low] <= arr[high]) {\n            return low;\n        }\n        long mid = (low + high) / 2;\n        long next = (mid + 1) % n;\n        long prev = (mid + n - 1) % n;\n        if(arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        }\n        else if(arr[mid] <= arr[high]) {\n            high = mid - 1;\n        }\n        else if(arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;",
    "    long n = arr.size();\n    long low = 0;\n    long high = n - 1;\n    while (low <= high) {\n        if (arr[low] <= arr[high]) {\n            return low;\n        }\n        long mid = low + (high - low) / 2;\n        long next = (mid + 1) % n;\n        long prev = (mid + n - 1) % n;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        }\n        else if (arr[mid] <= arr[high]) {\n            high = mid - 1;\n        }\n        else if (arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;",
    "    long n = arr.size();\n    long low = 0;\n    long high = n-1;\n    while(low <= high) {\n        if(arr[low] <= arr[high]) {\n            return low;\n        }\n        long mid = low + (high-low)/2;\n        long next = (mid+1)%n;\n        long prev = (mid+n-1)%n;\n        if(arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        }\n        else if(arr[mid] <= arr[high]) {\n            high = mid-1;\n        }\n        else if(arr[mid] >= arr[low]) {\n            low = mid+1;\n        }\n    }\n    return -1;",
    "    long n = arr.size();\n    long low = 0;\n    long high = n - 1;\n    long mid = 0;\n    while (low <= high) {\n        if (arr[low] <= arr[high]) {\n            return low;\n        }\n        mid = low + (high - low) / 2;\n        long next = (mid + 1) % n;\n        long prev = (mid + n - 1) % n;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        }\n        else if (arr[mid] <= arr[high]) {\n            high = mid - 1;\n        }\n        else if (arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;",
    "    // Write your code here\n    long n = arr.size();\n    long low = 0, high = n-1;\n    while(low <= high){\n        if(arr[low] <= arr[high])\n            return low;\n        long mid = low + (high - low)/2;\n        long next = (mid + 1)%n;\n        long prev = (mid + n - 1)%n;\n        if(arr[mid] <= arr[next] && arr[mid] <= arr[prev])\n            return mid;\n        else if(arr[mid] <= arr[high])\n            high = mid - 1;\n        else if(arr[mid] >= arr[low])\n            low = mid + 1;\n    }\n    return -1;",
    "    // Write your code here\n    long n = arr.size();\n    long low = 0;\n    long high = n-1;\n    while(low <= high){\n        if(arr[low] <= arr[high]){\n            return low;\n        }\n        long mid = (low+high)/2;\n        long next = (mid+1)%n;\n        long prev = (mid+n-1)%n;\n        if(arr[mid] <= arr[next] && arr[mid] <= arr[prev]){\n            return mid;\n        }\n        else if(arr[mid] <= arr[high]){\n            high = mid-1;\n        }\n        else if(arr[mid] >= arr[low]){\n            low = mid+1;\n        }\n    }\n    return -1;",
    "    // Write your code here\n    long n = arr.size();\n    long low = 0, high = n-1;\n    while(low <= high){\n        if(arr[low] <= arr[high])\n            return low;\n        long mid = (low+high)/2;\n        long next = (mid+1)%n;\n        long prev = (mid+n-1)%n;\n        if(arr[mid] <= arr[next] && arr[mid] <= arr[prev])\n            return mid;\n        else if(arr[mid] <= arr[high])\n            high = mid-1;\n        else if(arr[mid] >= arr[low])\n            low = mid+1;\n    }\n    return -1;",
    "    // Write your code here\n    long n = arr.size();\n    long low = 0;\n    long high = n-1;\n    while(low<=high){\n        if(arr[low]<=arr[high]){\n            return low;\n        }\n        long mid = low + (high-low)/2;\n        long next = (mid+1)%n;\n        long prev = (mid+n-1)%n;\n        if(arr[mid]<=arr[next] && arr[mid]<=arr[prev]){\n            return mid;\n        }\n        else if(arr[mid]<=arr[high]){\n            high = mid-1;\n        }\n        else if(arr[mid]>=arr[low]){\n            low = mid+1;\n        }\n    }\n    return -1;",
    "    long n = arr.size();\n    long low = 0, high = n-1;\n    while(low <= high) {\n        if(arr[low] <= arr[high]) {\n            return low;\n        }\n        long mid = low + (high - low)/2;\n        long next = (mid + 1) % n;\n        long prev = (mid + n - 1) % n;\n        if(arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        }\n        else if(arr[mid] <= arr[high]) {\n            high = mid - 1;\n        }\n        else if(arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;",
    "    long n = arr.size();\n    long low = 0, high = n - 1;\n    while(low <= high) {\n        if(arr[low] <= arr[high])\n            return low;\n        long mid = low + (high - low) / 2;\n        long next = (mid + 1) % n;\n        long prev = (mid + n - 1) % n;\n        if(arr[mid] <= arr[next] && arr[mid] <= arr[prev])\n            return mid;\n        else if(arr[mid] <= arr[high])\n            high = mid - 1;\n        else if(arr[mid] >= arr[low])\n            low = mid + 1;\n    }\n    return -1;",
    "    long n = arr.size();\n    long low = 0;\n    long high = n - 1;\n    while (low <= high) {\n        if (arr[low] <= arr[high]) {\n            return low;\n        }\n        long mid = low + (high - low) / 2;\n        long next = (mid + 1) % n;\n        long prev = (mid + n - 1) % n;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        }\n        else if (arr[mid] <= arr[high]) {\n            high = mid - 1;\n        }\n        else if (arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;",
    "    long n = arr.size();\n    long low = 0, high = n - 1;\n    while (low <= high) {\n        if (arr[low] <= arr[high]) {\n            return low;\n        }\n        long mid = low + (high - low) / 2;\n        long next = (mid + 1) % n;\n        long prev = (mid + n - 1) % n;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        } else if (arr[mid] <= arr[high]) {\n            high = mid - 1;\n        } else if (arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;",
    "    // Write your code here\n    long n = arr.size();\n    long low = 0;\n    long high = n-1;\n    while(low<=high){\n        if(arr[low]<=arr[high])\n            return low;\n        long mid = (low+high)/2;\n        long next = (mid+1)%n;\n        long prev = (mid+n-1)%n;\n        if(arr[mid]<=arr[next] && arr[mid]<=arr[prev])\n            return mid;\n        else if(arr[mid]<=arr[high])\n            high = mid-1;\n        else if(arr[mid]>=arr[low])\n            low = mid+1;\n    }\n    return -1;",
    "    long n = arr.size();\n    long low = 0;\n    long high = n - 1;\n    long mid = 0;\n    while (low <= high) {\n        if (arr[low] <= arr[high]) {\n            return low;\n        }\n        long next = (low + high) / 2;\n        long prev = (n + next - 1) % n;\n        if (arr[next] <= arr[prev]) {\n            return next;\n        }\n        if (arr[low] <= arr[next]) {\n            low = next + 1;\n        }\n        else {\n            high = next - 1;\n        }\n    }\n    return -1;",
    "    long n = arr.size();\n    long low = 0, high = n - 1;\n    while (low <= high) {\n        if (arr[low] <= arr[high])\n            return low;\n        long mid = low + (high - low) / 2;\n        long next = (mid + 1) % n;\n        long prev = (mid + n - 1) % n;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev])\n            return mid;\n        else if (arr[mid] <= arr[high])\n            high = mid - 1;\n        else if (arr[mid] >= arr[low])\n            low = mid + 1;\n    }\n    return -1;",
    "    long n = arr.size();\n    long low = 0;\n    long high = n - 1;\n    while (low <= high) {\n        if (arr[low] <= arr[high]) {\n            return low;\n        }\n        long mid = low + (high - low) / 2;\n        long next = (mid + 1) % n;\n        long prev = (mid + n - 1) % n;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        }\n        else if (arr[mid] <= arr[high]) {\n            high = mid - 1;\n        }\n        else if (arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;"
  ]
}
{
  "name": "mbpp_62_smallest_num",
  "language": "cpp",
  "prompt": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find smallest number in a list.\nlong smallest_num(std::vector<long> xs) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_62_smallest_num.py",
  "prompt_terminology": "verbatim",
  "tests": "}\nint main() {\n    auto candidate = smallest_num;\n    assert(candidate((std::vector<long>({(long)10, (long)20, (long)1, (long)45, (long)99}))) == (1));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3}))) == (1));\n    assert(candidate((std::vector<long>({(long)45, (long)46, (long)50, (long)60}))) == (45));\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    long smallest = xs[0];\n    for (int i = 1; i < xs.size(); i++) {\n        if (xs[i] < smallest) {\n            smallest = xs[i];\n        }\n    }\n    return smallest;",
    "    long smallest = xs[0];\n    for (long i = 0; i < xs.size(); i++) {\n        if (xs[i] < smallest) {\n            smallest = xs[i];\n        }\n    }\n    return smallest;",
    "    long min = xs[0];\n    for (int i = 1; i < xs.size(); i++) {\n        if (xs[i] < min) {\n            min = xs[i];\n        }\n    }\n    return min;",
    "    assert(xs.size() > 0);\n    long smallest = xs[0];\n    for (int i = 1; i < xs.size(); i++) {\n        if (xs[i] < smallest) {\n            smallest = xs[i];\n        }\n    }\n    return smallest;",
    "    long min = xs[0];\n    for (long i = 1; i < xs.size(); i++) {\n        if (xs[i] < min) {\n            min = xs[i];\n        }\n    }\n    return min;",
    "    long min = xs[0];\n    for(int i = 1; i < xs.size(); i++) {\n        if(xs[i] < min) {\n            min = xs[i];\n        }\n    }\n    return min;",
    "    long smallest = xs[0];\n    for (int i = 1; i < xs.size(); i++) {\n        if (xs[i] < smallest) {\n            smallest = xs[i];\n        }\n    }\n    return smallest;",
    "    long min = xs[0];\n    for (int i = 1; i < xs.size(); i++) {\n        if (xs[i] < min) {\n            min = xs[i];\n        }\n    }\n    return min;",
    "    long smallest = xs[0];\n    for (long x : xs) {\n        if (x < smallest) {\n            smallest = x;\n        }\n    }\n    return smallest;",
    "    long smallest = xs[0];\n    for (long i = 1; i < xs.size(); i++) {\n        if (xs[i] < smallest) {\n            smallest = xs[i];\n        }\n    }\n    return smallest;",
    "    long smallest = xs[0];\n    for (long x : xs) {\n        if (x < smallest) {\n            smallest = x;\n        }\n    }\n    return smallest;",
    "    long smallest = xs[0];\n    for (long x : xs) {\n        if (x < smallest) {\n            smallest = x;\n        }\n    }\n    return smallest;",
    "    long smallest = xs[0];\n    for (long x : xs) {\n        if (x < smallest) {\n            smallest = x;\n        }\n    }\n    return smallest;",
    "    long smallest = xs[0];\n    for (long i = 1; i < xs.size(); i++) {\n        if (xs[i] < smallest) {\n            smallest = xs[i];\n        }\n    }\n    return smallest;",
    "    long smallest = xs[0];\n    for (long i = 1; i < xs.size(); i++) {\n        if (xs[i] < smallest) {\n            smallest = xs[i];\n        }\n    }\n    return smallest;",
    "\tlong min = xs[0];\n\tfor(long i = 0; i < xs.size(); i++) {\n\t\tif(xs[i] < min) {\n\t\t\tmin = xs[i];\n\t\t}\n\t}\n\treturn min;",
    "    long min = xs[0];\n    for(int i = 1; i < xs.size(); i++) {\n        if(xs[i] < min) {\n            min = xs[i];\n        }\n    }\n    return min;",
    "    long smallest = xs[0];\n    for (long i = 1; i < xs.size(); i++) {\n        if (xs[i] < smallest) {\n            smallest = xs[i];\n        }\n    }\n    return smallest;",
    "    long smallest = xs[0];\n    for (long x : xs) {\n        if (x < smallest) {\n            smallest = x;\n        }\n    }\n    return smallest;",
    "    long smallest = xs[0];\n    for (int i = 1; i < xs.size(); i++) {\n        if (xs[i] < smallest) {\n            smallest = xs[i];\n        }\n    }\n    return smallest;"
  ]
}
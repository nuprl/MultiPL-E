{
  "name": "mbpp_728_sum_list",
  "language": "cpp",
  "prompt": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function takes as input two lists [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n].\nstd::vector<long> sum_list(std::vector<long> lst1, std::vector<long> lst2) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_728_sum_list.py",
  "prompt_terminology": "verbatim",
  "tests": "}\nint main() {\n    auto candidate = sum_list;\n    assert(candidate((std::vector<long>({(long)10, (long)20, (long)30})), (std::vector<long>({(long)15, (long)25, (long)35}))) == (std::vector<long>({(long)25, (long)45, (long)65})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3})), (std::vector<long>({(long)5, (long)6, (long)7}))) == (std::vector<long>({(long)6, (long)8, (long)10})));\n    assert(candidate((std::vector<long>({(long)15, (long)20, (long)30})), (std::vector<long>({(long)15, (long)45, (long)75}))) == (std::vector<long>({(long)30, (long)65, (long)105})));\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    std::vector<long> sum_lst;\n    for(int i = 0; i < lst1.size(); i++) {\n        sum_lst.push_back(lst1[i] + lst2[i]);\n    }\n    return sum_lst;",
    "    std::vector<long> sum_lst;\n    for(int i=0;i<lst1.size();i++) {\n        sum_lst.push_back(lst1[i]+lst2[i]);\n    }\n    return sum_lst;",
    "    std::vector<long> sum_lst;\n    for(int i = 0; i < lst1.size(); i++) {\n        sum_lst.push_back(lst1[i] + lst2[i]);\n    }\n    return sum_lst;",
    "    std::vector<long> result;\n    for (int i = 0; i < lst1.size(); i++) {\n        result.push_back(lst1[i] + lst2[i]);\n    }\n    return result;",
    "    std::vector<long> sum_lst;\n    for (int i = 0; i < lst1.size(); i++) {\n        sum_lst.push_back(lst1[i] + lst2[i]);\n    }\n    return sum_lst;",
    "    std::vector<long> sum;\n    for (int i = 0; i < lst1.size(); i++) {\n        sum.push_back(lst1[i] + lst2[i]);\n    }\n    return sum;",
    "    std::vector<long> result;\n    for (int i = 0; i < lst1.size(); i++) {\n        result.push_back(lst1[i] + lst2[i]);\n    }\n    return result;",
    "    std::vector<long> result;\n    for (int i = 0; i < lst1.size(); i++) {\n        result.push_back(lst1[i] + lst2[i]);\n    }\n    return result;",
    "    std::vector<long> lst3;\n    for (int i = 0; i < lst1.size(); i++) {\n        lst3.push_back(lst1[i] + lst2[i]);\n    }\n    return lst3;",
    "    std::vector<long> result;\n    for (int i = 0; i < lst1.size(); i++) {\n        result.push_back(lst1[i] + lst2[i]);\n    }\n    return result;",
    "    std::vector<long> result;\n    for (int i = 0; i < lst1.size(); i++) {\n        result.push_back(lst1[i] + lst2[i]);\n    }\n    return result;",
    "    std::vector<long> result;\n    for (int i = 0; i < lst1.size(); i++) {\n        result.push_back(lst1[i] + lst2[i]);\n    }\n    return result;",
    "    std::vector<long> sum_lst;\n    for (int i = 0; i < lst1.size(); i++) {\n        sum_lst.push_back(lst1[i] + lst2[i]);\n    }\n    return sum_lst;",
    "    assert(lst1.size() == lst2.size());\n    std::vector<long> result;\n    for (int i = 0; i < lst1.size(); i++) {\n        result.push_back(lst1[i] + lst2[i]);\n    }\n    return result;",
    "    std::vector<long> result;\n    for (int i = 0; i < lst1.size(); i++) {\n        result.push_back(lst1[i] + lst2[i]);\n    }\n    return result;",
    "    std::vector<long> sum;\n    for (int i = 0; i < lst1.size(); i++) {\n        sum.push_back(lst1[i] + lst2[i]);\n    }\n    return sum;",
    "    std::vector<long> sum_lst;\n    for (int i = 0; i < lst1.size(); i++) {\n        sum_lst.push_back(lst1[i] + lst2[i]);\n    }\n    return sum_lst;",
    "    assert(lst1.size() == lst2.size());\n    std::vector<long> result;\n    for (int i = 0; i < lst1.size(); i++) {\n        result.push_back(lst1[i] + lst2[i]);\n    }\n    return result;",
    "    std::vector<long> sum_list;\n    for(int i = 0; i < lst1.size(); i++) {\n        sum_list.push_back(lst1[i] + lst2[i]);\n    }\n    return sum_list;",
    "    std::vector<long> lst3;\n    for (int i = 0; i < lst1.size(); i++) {\n        lst3.push_back(lst1[i] + lst2[i]);\n    }\n    return lst3;",
    "    std::vector<long> sum;\n    for (int i = 0; i < lst1.size(); i++) {\n        sum.push_back(lst1[i] + lst2[i]);\n    }\n    return sum;",
    "    std::vector<long> sum;\n    for(int i = 0; i < lst1.size(); i++) {\n        sum.push_back(lst1[i] + lst2[i]);\n    }\n    return sum;",
    "    std::vector<long> sum_list;\n    for (int i = 0; i < lst1.size(); i++) {\n        sum_list.push_back(lst1[i] + lst2[i]);\n    }\n    return sum_list;",
    "    std::vector<long> result;\n    for (int i = 0; i < lst1.size(); i++) {\n        result.push_back(lst1[i] + lst2[i]);\n    }\n    return result;",
    "    std::vector<long> result;\n    for (int i = 0; i < lst1.size(); i++) {\n        result.push_back(lst1[i] + lst2[i]);\n    }\n    return result;",
    "    std::vector<long> res;\n    for (int i = 0; i < lst1.size(); i++) {\n        res.push_back(lst1[i] + lst2[i]);\n    }\n    return res;",
    "    std::vector<long> result;\n    for (int i = 0; i < lst1.size(); i++) {\n        result.push_back(lst1[i] + lst2[i]);\n    }\n    return result;",
    "    std::vector<long> result;\n    for (int i = 0; i < lst1.size(); i++) {\n        result.push_back(lst1[i] + lst2[i]);\n    }\n    return result;",
    "    std::vector<long> sum_list;\n    assert(lst1.size() == lst2.size());\n    for(int i = 0; i < lst1.size(); i++) {\n        sum_list.push_back(lst1[i] + lst2[i]);\n    }\n    return sum_list;",
    "    std::vector<long> lst3;\n    for (int i = 0; i < lst1.size(); i++) {\n        lst3.push_back(lst1[i] + lst2[i]);\n    }\n    return lst3;",
    "    std::vector<long> result;\n    for (int i = 0; i < lst1.size(); i++) {\n        result.push_back(lst1[i] + lst2[i]);\n    }\n    return result;",
    "    std::vector<long> result;\n    for (int i = 0; i < lst1.size(); i++) {\n        result.push_back(lst1[i] + lst2[i]);\n    }\n    return result;",
    "    std::vector<long> result;\n    for (int i = 0; i < lst1.size(); i++) {\n        result.push_back(lst1[i] + lst2[i]);\n    }\n    return result;",
    "    std::vector<long> result;\n    assert(lst1.size() == lst2.size());\n    for (int i = 0; i < lst1.size(); i++) {\n        result.push_back(lst1[i] + lst2[i]);\n    }\n    return result;",
    "    assert(lst1.size() == lst2.size());\n    std::vector<long> sum_lst;\n    for (int i = 0; i < lst1.size(); i++) {\n        sum_lst.push_back(lst1[i] + lst2[i]);\n    }\n    return sum_lst;",
    "    std::vector<long> result;\n    for(int i=0; i<lst1.size(); i++) {\n        result.push_back(lst1[i] + lst2[i]);\n    }\n    return result;",
    "    std::vector<long> result;\n    for (int i = 0; i < lst1.size(); i++) {\n        result.push_back(lst1[i] + lst2[i]);\n    }\n    return result;",
    "    std::vector<long> result;\n    assert(lst1.size() == lst2.size());\n    for (int i = 0; i < lst1.size(); i++) {\n        result.push_back(lst1[i] + lst2[i]);\n    }\n    return result;",
    "    std::vector<long> sum;\n    for(int i = 0; i < lst1.size(); i++) {\n        sum.push_back(lst1[i] + lst2[i]);\n    }\n    return sum;",
    "    assert(lst1.size() == lst2.size());\n    std::vector<long> result;\n    for (int i = 0; i < lst1.size(); i++) {\n        result.push_back(lst1[i] + lst2[i]);\n    }\n    return result;",
    "    std::vector<long> sum_list;\n    for (int i = 0; i < lst1.size(); i++) {\n        sum_list.push_back(lst1[i] + lst2[i]);\n    }\n    return sum_list;",
    "    std::vector<long> result;\n    for (int i = 0; i < lst1.size(); i++) {\n        result.push_back(lst1[i] + lst2[i]);\n    }\n    return result;",
    "    std::vector<long> result;\n    for(int i = 0; i < lst1.size(); i++) {\n        result.push_back(lst1[i] + lst2[i]);\n    }\n    return result;",
    "    std::vector<long> result;\n    for (int i = 0; i < lst1.size(); i++) {\n        result.push_back(lst1[i] + lst2[i]);\n    }\n    return result;",
    "    std::vector<long> result;\n    for (int i = 0; i < lst1.size(); i++) {\n        result.push_back(lst1[i] + lst2[i]);\n    }\n    return result;",
    "    std::vector<long> result;\n    for (int i = 0; i < lst1.size(); i++) {\n        result.push_back(lst1[i] + lst2[i]);\n    }\n    return result;",
    "    std::vector<long> result;\n    for (int i = 0; i < lst1.size(); i++) {\n        result.push_back(lst1[i] + lst2[i]);\n    }\n    return result;",
    "    std::vector<long> result;\n    for (int i = 0; i < lst1.size(); i++) {\n        result.push_back(lst1[i] + lst2[i]);\n    }\n    return result;",
    "    std::vector<long> result;\n    for (int i = 0; i < lst1.size(); i++) {\n        result.push_back(lst1[i] + lst2[i]);\n    }\n    return result;",
    "    std::vector<long> result;\n    for (int i = 0; i < lst1.size(); i++) {\n        result.push_back(lst1[i] + lst2[i]);\n    }\n    return result;",
    "    std::vector<long> result;\n    for(int i = 0; i < lst1.size(); i++) {\n        result.push_back(lst1[i] + lst2[i]);\n    }\n    return result;",
    "    std::vector<long> sum_lst;\n    for(int i = 0; i < lst1.size(); i++) {\n        sum_lst.push_back(lst1[i] + lst2[i]);\n    }\n    return sum_lst;",
    "    std::vector<long> result;\n    for (int i = 0; i < lst1.size(); i++) {\n        result.push_back(lst1[i] + lst2[i]);\n    }\n    return result;",
    "  std::vector<long> sum;\n  for (int i = 0; i < lst1.size(); i++) {\n    sum.push_back(lst1[i] + lst2[i]);\n  }\n  return sum;",
    "    std::vector<long> sum;\n    for (int i = 0; i < lst1.size(); i++) {\n        sum.push_back(lst1[i] + lst2[i]);\n    }\n    return sum;",
    "    std::vector<long> result;\n    for (int i = 0; i < lst1.size(); i++) {\n        result.push_back(lst1[i] + lst2[i]);\n    }\n    return result;",
    "    std::vector<long> lst3;\n    for (int i = 0; i < lst1.size(); i++) {\n        lst3.push_back(lst1[i] + lst2[i]);\n    }\n    return lst3;",
    "    std::vector<long> result;\n    for (int i = 0; i < lst1.size(); i++) {\n        result.push_back(lst1[i] + lst2[i]);\n    }\n    return result;",
    "    std::vector<long> sum_lst;\n    for (int i = 0; i < lst1.size(); i++) {\n        sum_lst.push_back(lst1[i] + lst2[i]);\n    }\n    return sum_lst;",
    "    std::vector<long> result;\n    for (int i = 0; i < lst1.size(); i++) {\n        result.push_back(lst1[i] + lst2[i]);\n    }\n    return result;",
    "    std::vector<long> result;\n    for (int i = 0; i < lst1.size(); i++) {\n        result.push_back(lst1[i] + lst2[i]);\n    }\n    return result;",
    "\tstd::vector<long> result;\n\tfor (int i = 0; i < lst1.size(); i++) {\n\t\tresult.push_back(lst1[i] + lst2[i]);\n\t}\n\treturn result;",
    "    assert(lst1.size() == lst2.size());\n    std::vector<long> result;\n    for (int i = 0; i < lst1.size(); i++) {\n        result.push_back(lst1[i] + lst2[i]);\n    }\n    return result;",
    "    std::vector<long> result;\n    for (int i = 0; i < lst1.size(); i++) {\n        result.push_back(lst1[i] + lst2[i]);\n    }\n    return result;",
    "    assert(lst1.size() == lst2.size());\n    std::vector<long> result;\n    for(int i = 0; i < lst1.size(); i++) {\n        result.push_back(lst1[i] + lst2[i]);\n    }\n    return result;",
    "    std::vector<long> sum;\n    for (int i = 0; i < lst1.size(); i++) {\n        sum.push_back(lst1[i] + lst2[i]);\n    }\n    return sum;",
    "    std::vector<long> sum_lst;\n    for (int i = 0; i < lst1.size(); i++) {\n        sum_lst.push_back(lst1[i] + lst2[i]);\n    }\n    return sum_lst;",
    "    std::vector<long> result;\n    for (int i = 0; i < lst1.size(); i++) {\n        result.push_back(lst1[i] + lst2[i]);\n    }\n    return result;",
    "    std::vector<long> result;\n    for (int i = 0; i < lst1.size(); i++) {\n        result.push_back(lst1[i] + lst2[i]);\n    }\n    return result;",
    "    std::vector<long> result;\n    for(int i = 0; i < lst1.size(); i++) {\n        result.push_back(lst1[i] + lst2[i]);\n    }\n    return result;",
    "    std::vector<long> sum_lst;\n    for(int i = 0; i < lst1.size(); i++) {\n        sum_lst.push_back(lst1[i] + lst2[i]);\n    }\n    return sum_lst;",
    "  std::vector<long> result;\n  for (int i = 0; i < lst1.size(); i++) {\n    result.push_back(lst1[i] + lst2[i]);\n  }\n  return result;",
    "    std::vector<long> sum;\n    for(int i=0; i<lst1.size(); i++) {\n        sum.push_back(lst1[i]+lst2[i]);\n    }\n    return sum;",
    "    std::vector<long> res;\n    assert(lst1.size() == lst2.size());\n    for (int i = 0; i < lst1.size(); i++) {\n        res.push_back(lst1[i] + lst2[i]);\n    }\n    return res;",
    "    assert(lst1.size() == lst2.size());\n    std::vector<long> result;\n    for (int i = 0; i < lst1.size(); i++) {\n        result.push_back(lst1[i] + lst2[i]);\n    }\n    return result;",
    "    std::vector<long> result;\n    for (int i = 0; i < lst1.size(); i++) {\n        result.push_back(lst1[i] + lst2[i]);\n    }\n    return result;",
    "    std::vector<long> lst3;\n    for (int i = 0; i < lst1.size(); i++) {\n        lst3.push_back(lst1[i] + lst2[i]);\n    }\n    return lst3;",
    "    std::vector<long> result;\n    for (int i = 0; i < lst1.size(); i++) {\n        result.push_back(lst1[i] + lst2[i]);\n    }\n    return result;",
    "  std::vector<long> sum_lst;\n  for(int i=0; i<lst1.size(); i++) {\n    sum_lst.push_back(lst1[i] + lst2[i]);\n  }\n  return sum_lst;",
    "    std::vector<long> sum_lst;\n    for (int i = 0; i < lst1.size(); i++) {\n        sum_lst.push_back(lst1[i] + lst2[i]);\n    }\n    return sum_lst;",
    "    std::vector<long> result;\n    for (int i = 0; i < lst1.size(); i++) {\n        result.push_back(lst1[i] + lst2[i]);\n    }\n    return result;",
    "    std::vector<long> sum_lst;\n    for(int i=0; i<lst1.size(); i++) {\n        sum_lst.push_back(lst1[i] + lst2[i]);\n    }\n    return sum_lst;",
    "    std::vector<long> result;\n    assert(lst1.size() == lst2.size());\n    for (int i = 0; i < lst1.size(); i++) {\n        result.push_back(lst1[i] + lst2[i]);\n    }\n    return result;",
    "    std::vector<long> result;\n    for (int i = 0; i < lst1.size(); i++) {\n        result.push_back(lst1[i] + lst2[i]);\n    }\n    return result;",
    "    std::vector<long> sum_lst;\n    for(int i = 0; i < lst1.size(); i++) {\n        sum_lst.push_back(lst1[i] + lst2[i]);\n    }\n    return sum_lst;",
    "    std::vector<long> sum_list;\n    for (int i = 0; i < lst1.size(); i++) {\n        sum_list.push_back(lst1[i] + lst2[i]);\n    }\n    return sum_list;",
    "  std::vector<long> sum_lst;\n  for (int i = 0; i < lst1.size(); i++) {\n    sum_lst.push_back(lst1[i] + lst2[i]);\n  }\n  return sum_lst;",
    "    std::vector<long> sum;\n    for (int i = 0; i < lst1.size(); i++) {\n        sum.push_back(lst1[i] + lst2[i]);\n    }\n    return sum;",
    "    std::vector<long> result;\n    for (int i = 0; i < lst1.size(); i++) {\n        result.push_back(lst1[i] + lst2[i]);\n    }\n    return result;",
    "    assert(lst1.size() == lst2.size());\n    std::vector<long> sum_lst;\n    for(int i = 0; i < lst1.size(); i++) {\n        sum_lst.push_back(lst1[i] + lst2[i]);\n    }\n    return sum_lst;",
    "    std::vector<long> result;\n    for (int i = 0; i < lst1.size(); i++) {\n        result.push_back(lst1[i] + lst2[i]);\n    }\n    return result;",
    "    std::vector<long> lst3;\n    for(int i = 0; i < lst1.size(); i++) {\n        lst3.push_back(lst1[i] + lst2[i]);\n    }\n    return lst3;",
    "    std::vector<long> result;\n    for (int i = 0; i < lst1.size(); i++) {\n        result.push_back(lst1[i] + lst2[i]);\n    }\n    return result;",
    "    std::vector<long> result;\n    for (int i = 0; i < lst1.size(); i++) {\n        result.push_back(lst1[i] + lst2[i]);\n    }\n    return result;",
    "    assert(lst1.size() == lst2.size());\n    std::vector<long> result;\n    for(int i=0; i<lst1.size(); i++) {\n        result.push_back(lst1[i] + lst2[i]);\n    }\n    return result;",
    "    std::vector<long> result;\n    for (int i = 0; i < lst1.size(); i++) {\n        result.push_back(lst1[i] + lst2[i]);\n    }\n    return result;",
    "    std::vector<long> sum_lst;\n    for (int i = 0; i < lst1.size(); i++) {\n        sum_lst.push_back(lst1[i] + lst2[i]);\n    }\n    return sum_lst;",
    "    std::vector<long> sum_list;\n    for(int i=0; i<lst1.size(); i++) {\n        sum_list.push_back(lst1[i]+lst2[i]);\n    }\n    return sum_list;",
    "    std::vector<long> sum;\n    for(int i = 0; i < lst1.size(); i++) {\n        sum.push_back(lst1[i] + lst2[i]);\n    }\n    return sum;",
    "  std::vector<long> sum_list;\n  for (int i = 0; i < lst1.size(); i++) {\n    sum_list.push_back(lst1[i] + lst2[i]);\n  }\n  return sum_list;",
    "    std::vector<long> result;\n    for (int i = 0; i < lst1.size(); i++) {\n        result.push_back(lst1[i] + lst2[i]);\n    }\n    return result;",
    "    std::vector<long> sum_list;\n    for (int i = 0; i < lst1.size(); i++) {\n        sum_list.push_back(lst1[i] + lst2[i]);\n    }\n    return sum_list;",
    "    std::vector<long> result;\n    for (int i = 0; i < lst1.size(); i++) {\n        result.push_back(lst1[i] + lst2[i]);\n    }\n    return result;",
    "    std::vector<long> sum;\n    for (int i = 0; i < lst1.size(); i++) {\n        sum.push_back(lst1[i] + lst2[i]);\n    }\n    return sum;",
    "    std::vector<long> result;\n    for (int i = 0; i < lst1.size(); i++) {\n        result.push_back(lst1[i] + lst2[i]);\n    }\n    return result;",
    "    std::vector<long> sum_lst;\n    for (int i = 0; i < lst1.size(); i++) {\n        sum_lst.push_back(lst1[i] + lst2[i]);\n    }\n    return sum_lst;",
    "    std::vector<long> result;\n    for (int i = 0; i < lst1.size(); i++) {\n        result.push_back(lst1[i] + lst2[i]);\n    }\n    return result;",
    "    std::vector<long> result;\n    for(int i = 0; i < lst1.size(); i++) {\n        result.push_back(lst1[i] + lst2[i]);\n    }\n    return result;",
    "    std::vector<long> sum_lst;\n    for(int i=0; i<lst1.size(); i++) {\n        sum_lst.push_back(lst1[i] + lst2[i]);\n    }\n    return sum_lst;",
    "    std::vector<long> result;\n    for (int i = 0; i < lst1.size(); i++) {\n        result.push_back(lst1[i] + lst2[i]);\n    }\n    return result;",
    "\tstd::vector<long> result;\n\tfor (int i = 0; i < lst1.size(); i++) {\n\t\tresult.push_back(lst1[i] + lst2[i]);\n\t}\n\treturn result;",
    "    std::vector<long> sum_lst;\n    for (int i = 0; i < lst1.size(); i++) {\n        sum_lst.push_back(lst1[i] + lst2[i]);\n    }\n    return sum_lst;",
    "    std::vector<long> result;\n    for (int i = 0; i < lst1.size(); i++) {\n        result.push_back(lst1[i] + lst2[i]);\n    }\n    return result;",
    "    std::vector<long> result;\n    for (int i = 0; i < lst1.size(); i++) {\n        result.push_back(lst1[i] + lst2[i]);\n    }\n    return result;",
    "    std::vector<long> lst3;\n    for(int i=0; i<lst1.size(); i++) {\n        lst3.push_back(lst1[i]+lst2[i]);\n    }\n    return lst3;",
    "    assert(lst1.size() == lst2.size());\n    std::vector<long> sum_lst;\n    for (int i = 0; i < lst1.size(); i++) {\n        sum_lst.push_back(lst1[i] + lst2[i]);\n    }\n    return sum_lst;",
    "    std::vector<long> result;\n    for (int i = 0; i < lst1.size(); i++) {\n        result.push_back(lst1[i] + lst2[i]);\n    }\n    return result;",
    "    assert(lst1.size() == lst2.size());\n    std::vector<long> lst3;\n    for(int i=0; i<lst1.size(); i++) {\n        lst3.push_back(lst1[i] + lst2[i]);\n    }\n    return lst3;",
    "    std::vector<long> sum_lst;\n    for (int i = 0; i < lst1.size(); i++) {\n        sum_lst.push_back(lst1[i] + lst2[i]);\n    }\n    return sum_lst;",
    "    std::vector<long> result;\n    for (int i = 0; i < lst1.size(); i++) {\n        result.push_back(lst1[i] + lst2[i]);\n    }\n    return result;",
    "    std::vector<long> result;\n    for (int i = 0; i < lst1.size(); i++) {\n        result.push_back(lst1[i] + lst2[i]);\n    }\n    return result;",
    "    std::vector<long> result;\n    for (int i = 0; i < lst1.size(); i++) {\n        result.push_back(lst1[i] + lst2[i]);\n    }\n    return result;",
    "    std::vector<long> result;\n    for (int i = 0; i < lst1.size(); i++) {\n        result.push_back(lst1[i] + lst2[i]);\n    }\n    return result;",
    "    std::vector<long> result;\n    for (int i = 0; i < lst1.size(); i++) {\n        result.push_back(lst1[i] + lst2[i]);\n    }\n    return result;",
    "    std::vector<long> sum;\n    for (int i = 0; i < lst1.size(); i++) {\n        sum.push_back(lst1[i] + lst2[i]);\n    }\n    return sum;",
    "    std::vector<long> result;\n    for (int i = 0; i < lst1.size(); i++) {\n        result.push_back(lst1[i] + lst2[i]);\n    }\n    return result;",
    "    std::vector<long> result;\n    for (int i = 0; i < lst1.size(); i++) {\n        result.push_back(lst1[i] + lst2[i]);\n    }\n    return result;",
    "    std::vector<long> result;\n    for(int i = 0; i < lst1.size(); i++) {\n        result.push_back(lst1[i] + lst2[i]);\n    }\n    return result;",
    "    std::vector<long> sum_lst;\n    for(int i=0;i<lst1.size();i++) {\n        sum_lst.push_back(lst1[i]+lst2[i]);\n    }\n    return sum_lst;",
    "    std::vector<long> result;\n    assert(lst1.size() == lst2.size());\n    for (int i = 0; i < lst1.size(); i++) {\n        result.push_back(lst1[i] + lst2[i]);\n    }\n    return result;",
    "    std::vector<long> sum;\n    for (int i = 0; i < lst1.size(); i++) {\n        sum.push_back(lst1[i] + lst2[i]);\n    }\n    return sum;",
    "    std::vector<long> result;\n    for(int i=0; i<lst1.size(); i++) {\n        result.push_back(lst1[i] + lst2[i]);\n    }\n    return result;",
    "    std::vector<long> result;\n    for(int i=0; i<lst1.size(); i++) {\n        result.push_back(lst1[i] + lst2[i]);\n    }\n    return result;",
    "  std::vector<long> result;\n  for(int i = 0; i < lst1.size(); i++) {\n    result.push_back(lst1[i] + lst2[i]);\n  }\n  return result;",
    "    std::vector<long> result;\n    for (int i = 0; i < lst1.size(); i++) {\n        result.push_back(lst1[i] + lst2[i]);\n    }\n    return result;",
    "    std::vector<long> result;\n    for (int i = 0; i < lst1.size(); i++) {\n        result.push_back(lst1[i] + lst2[i]);\n    }\n    return result;",
    "    std::vector<long> sum_lst;\n    for (int i = 0; i < lst1.size(); i++) {\n        sum_lst.push_back(lst1[i] + lst2[i]);\n    }\n    return sum_lst;",
    "    std::vector<long> result;\n    for (int i = 0; i < lst1.size(); i++) {\n        result.push_back(lst1[i] + lst2[i]);\n    }\n    return result;",
    "    std::vector<long> result;\n    for (int i = 0; i < lst1.size(); i++) {\n        result.push_back(lst1[i] + lst2[i]);\n    }\n    return result;",
    "    std::vector<long> lst3;\n    for (int i = 0; i < lst1.size(); i++) {\n        lst3.push_back(lst1[i] + lst2[i]);\n    }\n    return lst3;",
    "    assert(lst1.size() == lst2.size());\n    std::vector<long> result;\n    for (int i = 0; i < lst1.size(); i++) {\n        result.push_back(lst1[i] + lst2[i]);\n    }\n    return result;",
    "    std::vector<long> lst3;\n    for (int i = 0; i < lst1.size(); i++) {\n        lst3.push_back(lst1[i] + lst2[i]);\n    }\n    return lst3;",
    "    std::vector<long> result;\n    assert(lst1.size() == lst2.size());\n    for (int i = 0; i < lst1.size(); i++) {\n        result.push_back(lst1[i] + lst2[i]);\n    }\n    return result;",
    "    std::vector<long> result;\n    for (int i = 0; i < lst1.size(); i++) {\n        result.push_back(lst1[i] + lst2[i]);\n    }\n    return result;",
    "    assert(lst1.size() == lst2.size());\n    std::vector<long> result;\n    for(int i = 0; i < lst1.size(); i++) {\n        result.push_back(lst1[i] + lst2[i]);\n    }\n    return result;",
    "    std::vector<long> result;\n    for (int i = 0; i < lst1.size(); i++) {\n        result.push_back(lst1[i] + lst2[i]);\n    }\n    return result;",
    "    std::vector<long> result;\n    for (int i = 0; i < lst1.size(); i++) {\n        result.push_back(lst1[i] + lst2[i]);\n    }\n    return result;",
    "    std::vector<long> lst3;\n    for (int i = 0; i < lst1.size(); i++) {\n        lst3.push_back(lst1[i] + lst2[i]);\n    }\n    return lst3;",
    "    std::vector<long> result;\n    for(int i = 0; i < lst1.size(); i++) {\n        result.push_back(lst1[i] + lst2[i]);\n    }\n    return result;",
    "  std::vector<long> sum_list;\n  for (int i = 0; i < lst1.size(); i++) {\n    sum_list.push_back(lst1[i] + lst2[i]);\n  }\n  return sum_list;",
    "    std::vector<long> sum_lst;\n    for (int i = 0; i < lst1.size(); i++) {\n        sum_lst.push_back(lst1[i] + lst2[i]);\n    }\n    return sum_lst;",
    "    assert(lst1.size() == lst2.size());\n    std::vector<long> result;\n    for (int i = 0; i < lst1.size(); i++) {\n        result.push_back(lst1[i] + lst2[i]);\n    }\n    return result;",
    "    std::vector<long> sum_lst;\n    for (int i = 0; i < lst1.size(); i++) {\n        sum_lst.push_back(lst1[i] + lst2[i]);\n    }\n    return sum_lst;",
    "    std::vector<long> result;\n    for (int i = 0; i < lst1.size(); i++) {\n        result.push_back(lst1[i] + lst2[i]);\n    }\n    return result;",
    "    std::vector<long> sum_lst;\n    for (int i = 0; i < lst1.size(); i++) {\n        sum_lst.push_back(lst1[i] + lst2[i]);\n    }\n    return sum_lst;",
    "    std::vector<long> result;\n    assert(lst1.size() == lst2.size());\n    for (int i = 0; i < lst1.size(); i++) {\n        result.push_back(lst1[i] + lst2[i]);\n    }\n    return result;",
    "    assert(lst1.size() == lst2.size());\n    std::vector<long> sum_lst;\n    for (int i = 0; i < lst1.size(); i++) {\n        sum_lst.push_back(lst1[i] + lst2[i]);\n    }\n    return sum_lst;",
    "  assert(lst1.size() == lst2.size());\n  std::vector<long> result;\n  for (int i = 0; i < lst1.size(); i++) {\n    result.push_back(lst1[i] + lst2[i]);\n  }\n  return result;",
    "    assert(lst1.size() == lst2.size());\n    std::vector<long> sum_lst;\n    for (int i = 0; i < lst1.size(); i++) {\n        sum_lst.push_back(lst1[i] + lst2[i]);\n    }\n    return sum_lst;",
    "    std::vector<long> result;\n    for (int i = 0; i < lst1.size(); i++) {\n        result.push_back(lst1[i] + lst2[i]);\n    }\n    return result;",
    "    std::vector<long> result;\n    for(int i=0; i<lst1.size(); i++) {\n        result.push_back(lst1[i]+lst2[i]);\n    }\n    return result;",
    "    std::vector<long> sum_lst;\n    for(int i=0; i<lst1.size(); i++) {\n        sum_lst.push_back(lst1[i] + lst2[i]);\n    }\n    return sum_lst;",
    "    assert(lst1.size() == lst2.size());\n    std::vector<long> result;\n    for (int i = 0; i < lst1.size(); i++) {\n        result.push_back(lst1[i] + lst2[i]);\n    }\n    return result;",
    "  std::vector<long> result;\n  for (int i = 0; i < lst1.size(); i++) {\n    result.push_back(lst1[i] + lst2[i]);\n  }\n  return result;",
    "    std::vector<long> result;\n    for (int i = 0; i < lst1.size(); i++) {\n        result.push_back(lst1[i] + lst2[i]);\n    }\n    return result;",
    "    std::vector<long> result;\n    for (int i = 0; i < lst1.size(); i++) {\n        result.push_back(lst1[i] + lst2[i]);\n    }\n    return result;",
    "    std::vector<long> result;\n    for (int i = 0; i < lst1.size(); i++) {\n        result.push_back(lst1[i] + lst2[i]);\n    }\n    return result;",
    "    assert(lst1.size() == lst2.size());\n    std::vector<long> result;\n    for (int i = 0; i < lst1.size(); i++) {\n        result.push_back(lst1[i] + lst2[i]);\n    }\n    return result;",
    "    std::vector<long> sum;\n    for (int i = 0; i < lst1.size(); i++) {\n        sum.push_back(lst1[i] + lst2[i]);\n    }\n    return sum;",
    "    std::vector<long> result;\n    for (int i = 0; i < lst1.size(); i++) {\n        result.push_back(lst1[i] + lst2[i]);\n    }\n    return result;",
    "    std::vector<long> result;\n    for (int i = 0; i < lst1.size(); i++) {\n        result.push_back(lst1[i] + lst2[i]);\n    }\n    return result;",
    "    assert(lst1.size() == lst2.size());\n    std::vector<long> result;\n    for (int i = 0; i < lst1.size(); i++) {\n        result.push_back(lst1[i] + lst2[i]);\n    }\n    return result;",
    "    std::vector<long> sum_lst;\n    for(int i = 0; i < lst1.size(); i++) {\n        sum_lst.push_back(lst1[i] + lst2[i]);\n    }\n    return sum_lst;",
    "    std::vector<long> result;\n    for (int i = 0; i < lst1.size(); i++) {\n        result.push_back(lst1[i] + lst2[i]);\n    }\n    return result;",
    "    std::vector<long> result;\n    for (int i = 0; i < lst1.size(); i++) {\n        result.push_back(lst1[i] + lst2[i]);\n    }\n    return result;",
    "    std::vector<long> res;\n    for (int i = 0; i < lst1.size(); i++) {\n        res.push_back(lst1[i] + lst2[i]);\n    }\n    return res;",
    "    std::vector<long> result;\n    for(int i = 0; i < lst1.size(); i++) {\n        result.push_back(lst1[i] + lst2[i]);\n    }\n    return result;",
    "    std::vector<long> sum_lst;\n    for(int i = 0; i < lst1.size(); i++) {\n        sum_lst.push_back(lst1[i] + lst2[i]);\n    }\n    return sum_lst;",
    "    std::vector<long> result;\n    for (int i = 0; i < lst1.size(); i++) {\n        result.push_back(lst1[i] + lst2[i]);\n    }\n    return result;",
    "    std::vector<long> result;\n    for (int i = 0; i < lst1.size(); i++) {\n        result.push_back(lst1[i] + lst2[i]);\n    }\n    return result;",
    "    std::vector<long> result;\n    for (int i = 0; i < lst1.size(); i++) {\n        result.push_back(lst1[i] + lst2[i]);\n    }\n    return result;",
    "    std::vector<long> result;\n    for (int i = 0; i < lst1.size(); i++) {\n        result.push_back(lst1[i] + lst2[i]);\n    }\n    return result;",
    "    assert(lst1.size() == lst2.size());\n    std::vector<long> result;\n    for (int i = 0; i < lst1.size(); i++) {\n        result.push_back(lst1[i] + lst2[i]);\n    }\n    return result;",
    "    std::vector<long> res;\n    for (int i = 0; i < lst1.size(); i++) {\n        res.push_back(lst1[i] + lst2[i]);\n    }\n    return res;",
    "    std::vector<long> result;\n    for (int i = 0; i < lst1.size(); i++) {\n        result.push_back(lst1[i] + lst2[i]);\n    }\n    return result;",
    "    std::vector<long> sum_lst;\n    for(int i=0; i<lst1.size(); i++) {\n        sum_lst.push_back(lst1[i] + lst2[i]);\n    }\n    return sum_lst;",
    "    std::vector<long> result;\n    for (int i = 0; i < lst1.size(); i++) {\n        result.push_back(lst1[i] + lst2[i]);\n    }\n    return result;",
    "    std::vector<long> result;\n    for (int i = 0; i < lst1.size(); i++) {\n        result.push_back(lst1[i] + lst2[i]);\n    }\n    return result;",
    "    std::vector<long> result;\n    for (int i = 0; i < lst1.size(); i++) {\n        result.push_back(lst1[i] + lst2[i]);\n    }\n    return result;",
    "    std::vector<long> result;\n    for (int i = 0; i < lst1.size(); i++) {\n        result.push_back(lst1[i] + lst2[i]);\n    }\n    return result;",
    "    std::vector<long> sum_list;\n    for (int i = 0; i < lst1.size(); i++) {\n        sum_list.push_back(lst1[i] + lst2[i]);\n    }\n    return sum_list;",
    "    std::vector<long> result;\n    for (int i = 0; i < lst1.size(); i++) {\n        result.push_back(lst1[i] + lst2[i]);\n    }\n    return result;",
    "    std::vector<long> result;\n    for (int i = 0; i < lst1.size(); i++) {\n        result.push_back(lst1[i] + lst2[i]);\n    }\n    return result;",
    "    std::vector<long> result;\n    if(lst1.size() != lst2.size()) {\n        return result;\n    }\n    for(int i=0; i<lst1.size(); i++) {\n        result.push_back(lst1[i] + lst2[i]);\n    }\n    return result;",
    "    std::vector<long> result;\n    for (int i = 0; i < lst1.size(); i++) {\n        result.push_back(lst1[i] + lst2[i]);\n    }\n    return result;",
    "    assert(lst1.size() == lst2.size());\n    std::vector<long> sum_lst;\n    for (int i = 0; i < lst1.size(); i++) {\n        sum_lst.push_back(lst1[i] + lst2[i]);\n    }\n    return sum_lst;",
    "    std::vector<long> result;\n    for (int i = 0; i < lst1.size(); i++) {\n        result.push_back(lst1[i] + lst2[i]);\n    }\n    return result;",
    "    assert(lst1.size() == lst2.size());\n    std::vector<long> sum_lst;\n    for(int i = 0; i < lst1.size(); i++) {\n        sum_lst.push_back(lst1[i] + lst2[i]);\n    }\n    return sum_lst;",
    "    std::vector<long> lst3;\n    for (int i = 0; i < lst1.size(); i++) {\n        lst3.push_back(lst1[i] + lst2[i]);\n    }\n    return lst3;",
    "    std::vector<long> result;\n    for (int i = 0; i < lst1.size(); i++) {\n        result.push_back(lst1[i] + lst2[i]);\n    }\n    return result;"
  ]
}
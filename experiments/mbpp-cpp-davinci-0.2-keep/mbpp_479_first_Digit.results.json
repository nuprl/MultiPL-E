{
  "name": "mbpp_479_first_Digit",
  "language": "cpp",
  "prompt": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the first digit of a given number.\nlong first_Digit(long n) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_479_first_Digit.py",
  "prompt_terminology": "verbatim",
  "tests": "}\nint main() {\n    auto candidate = first_Digit;\n    assert(candidate((123)) == (1));\n    assert(candidate((456)) == (4));\n    assert(candidate((12)) == (1));\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "results": [
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the first digit of a given number.\nlong first_Digit(long n) {\n    // Your code here\n    long i=0;\n    while(n>0)\n    {\n        i=n%10;\n        n=n/10;\n    }\n    return i;\n}\nint main() {\n    auto candidate = first_Digit;\n    assert(candidate((123)) == (1));\n    assert(candidate((456)) == (4));\n    assert(candidate((12)) == (1));\n}\n",
      "timestamp": 1665510675,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the first digit of a given number.\nlong first_Digit(long n) {\n    // Write your code here\n    while(n>=10)\n    {\n        n=n/10;\n    }\n    return n;\n}\nint main() {\n    auto candidate = first_Digit;\n    assert(candidate((123)) == (1));\n    assert(candidate((456)) == (4));\n    assert(candidate((12)) == (1));\n}\n",
      "timestamp": 1665510675,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the first digit of a given number.\nlong first_Digit(long n) {\n    // Write your code here\n    long sum=0;\n    while(n>0)\n    {\n        sum=n%10;\n        n=n/10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = first_Digit;\n    assert(candidate((123)) == (1));\n    assert(candidate((456)) == (4));\n    assert(candidate((12)) == (1));\n}\n",
      "timestamp": 1665510675,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the first digit of a given number.\nlong first_Digit(long n) {\n    // Your code here\n    while(n>=10)\n    {\n        n=n/10;\n    }\n    return n;\n}\nint main() {\n    auto candidate = first_Digit;\n    assert(candidate((123)) == (1));\n    assert(candidate((456)) == (4));\n    assert(candidate((12)) == (1));\n}\n",
      "timestamp": 1665510675,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the first digit of a given number.\nlong first_Digit(long n) {\n    // Write your code here\n    long digit = 0;\n    while(n>0){\n        digit = n%10;\n        n = n/10;\n    }\n    return digit;\n}\nint main() {\n    auto candidate = first_Digit;\n    assert(candidate((123)) == (1));\n    assert(candidate((456)) == (4));\n    assert(candidate((12)) == (1));\n}\n",
      "timestamp": 1665510675,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the first digit of a given number.\nlong first_Digit(long n) {\n    // Your code here\n    while(n>=10)\n    {\n        n=n/10;\n    }\n    return n;\n}\nint main() {\n    auto candidate = first_Digit;\n    assert(candidate((123)) == (1));\n    assert(candidate((456)) == (4));\n    assert(candidate((12)) == (1));\n}\n",
      "timestamp": 1665510675,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the first digit of a given number.\nlong first_Digit(long n) {\n    // Write your code here\n    while(n>=10)\n    {\n        n=n/10;\n    }\n    return n;\n}\nint main() {\n    auto candidate = first_Digit;\n    assert(candidate((123)) == (1));\n    assert(candidate((456)) == (4));\n    assert(candidate((12)) == (1));\n}\n",
      "timestamp": 1665510675,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the first digit of a given number.\nlong first_Digit(long n) {\n    // Your code here\n    // return n;\n    while(n>=10)\n    {\n        n=n/10;\n    }\n    return n;\n}\nint main() {\n    auto candidate = first_Digit;\n    assert(candidate((123)) == (1));\n    assert(candidate((456)) == (4));\n    assert(candidate((12)) == (1));\n}\n",
      "timestamp": 1665510675,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the first digit of a given number.\nlong first_Digit(long n) {\n    // Write your code here\n    while(n>=10)\n    {\n        n=n/10;\n    }\n    return n;\n}\nint main() {\n    auto candidate = first_Digit;\n    assert(candidate((123)) == (1));\n    assert(candidate((456)) == (4));\n    assert(candidate((12)) == (1));\n}\n",
      "timestamp": 1665510675,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the first digit of a given number.\nlong first_Digit(long n) {\n    // Write your code here\n    while(n>=10)\n    {\n        n=n/10;\n    }\n    return n;\n}\nint main() {\n    auto candidate = first_Digit;\n    assert(candidate((123)) == (1));\n    assert(candidate((456)) == (4));\n    assert(candidate((12)) == (1));\n}\n",
      "timestamp": 1665510675,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the first digit of a given number.\nlong first_Digit(long n) {\n    // Write your code here\n    while(n>=10){\n        n=n/10;\n    }\n    return n;\n}\nint main() {\n    auto candidate = first_Digit;\n    assert(candidate((123)) == (1));\n    assert(candidate((456)) == (4));\n    assert(candidate((12)) == (1));\n}\n",
      "timestamp": 1665510675,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the first digit of a given number.\nlong first_Digit(long n) {\n    // Your code here\n    while(n>=10){\n        n=n/10;\n    }\n    return n;\n}\nint main() {\n    auto candidate = first_Digit;\n    assert(candidate((123)) == (1));\n    assert(candidate((456)) == (4));\n    assert(candidate((12)) == (1));\n}\n",
      "timestamp": 1665510675,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the first digit of a given number.\nlong first_Digit(long n) {\n    // Your code here\n    long rem;\n    while(n>0){\n        rem=n%10;\n        n=n/10;\n    }\n    return rem;\n}\nint main() {\n    auto candidate = first_Digit;\n    assert(candidate((123)) == (1));\n    assert(candidate((456)) == (4));\n    assert(candidate((12)) == (1));\n}\n",
      "timestamp": 1665510674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the first digit of a given number.\nlong first_Digit(long n) {\n    // Write your code here\n    while(n>=10){\n        n=n/10;\n    }\n    return n;\n}\nint main() {\n    auto candidate = first_Digit;\n    assert(candidate((123)) == (1));\n    assert(candidate((456)) == (4));\n    assert(candidate((12)) == (1));\n}\n",
      "timestamp": 1665510675,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the first digit of a given number.\nlong first_Digit(long n) {\n    // Write your code here\n    while(n>=10)\n    {\n        n=n/10;\n    }\n    return n;\n}\nint main() {\n    auto candidate = first_Digit;\n    assert(candidate((123)) == (1));\n    assert(candidate((456)) == (4));\n    assert(candidate((12)) == (1));\n}\n",
      "timestamp": 1665510675,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the first digit of a given number.\nlong first_Digit(long n) {\n    // Write your code here\n    long r;\n    while(n>0)\n    {\n        r=n%10;\n        n=n/10;\n    }\n    return r;\n}\nint main() {\n    auto candidate = first_Digit;\n    assert(candidate((123)) == (1));\n    assert(candidate((456)) == (4));\n    assert(candidate((12)) == (1));\n}\n",
      "timestamp": 1665510675,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the first digit of a given number.\nlong first_Digit(long n) {\n    // Your code here\n    while(n>=10){\n        n=n/10;\n    }\n    return n;\n}\nint main() {\n    auto candidate = first_Digit;\n    assert(candidate((123)) == (1));\n    assert(candidate((456)) == (4));\n    assert(candidate((12)) == (1));\n}\n",
      "timestamp": 1665510675,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the first digit of a given number.\nlong first_Digit(long n) {\n    // Write your code here\n    while(n>=10)\n    {\n        n=n/10;\n    }\n    return n;\n}\nint main() {\n    auto candidate = first_Digit;\n    assert(candidate((123)) == (1));\n    assert(candidate((456)) == (4));\n    assert(candidate((12)) == (1));\n}\n",
      "timestamp": 1665510675,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the first digit of a given number.\nlong first_Digit(long n) {\n    // Your code here\n    while(n>=10)\n    {\n        n=n/10;\n    }\n    return n;\n}\nint main() {\n    auto candidate = first_Digit;\n    assert(candidate((123)) == (1));\n    assert(candidate((456)) == (4));\n    assert(candidate((12)) == (1));\n}\n",
      "timestamp": 1665510675,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the first digit of a given number.\nlong first_Digit(long n) {\n    // Write your code here\n    while(n>=10){\n        n=n/10;\n    }\n    return n;\n}\nint main() {\n    auto candidate = first_Digit;\n    assert(candidate((123)) == (1));\n    assert(candidate((456)) == (4));\n    assert(candidate((12)) == (1));\n}\n",
      "timestamp": 1665510675,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the first digit of a given number.\nlong first_Digit(long n) {\n    // Your code here\n    long temp = n;\n    while(temp>=10){\n        temp = temp/10;\n    }\n    return temp;\n}\nint main() {\n    auto candidate = first_Digit;\n    assert(candidate((123)) == (1));\n    assert(candidate((456)) == (4));\n    assert(candidate((12)) == (1));\n}\n",
      "timestamp": 1666124356,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the first digit of a given number.\nlong first_Digit(long n) {\n    // Your code here\n    while(n>=10)\n    {\n        n=n/10;\n    }\n    return n;\n}\nint main() {\n    auto candidate = first_Digit;\n    assert(candidate((123)) == (1));\n    assert(candidate((456)) == (4));\n    assert(candidate((12)) == (1));\n}\n",
      "timestamp": 1665510675,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the first digit of a given number.\nlong first_Digit(long n) {\n    // Write your code here\n    while(n>=10){\n        n=n/10;\n    }\n    return n;\n}\nint main() {\n    auto candidate = first_Digit;\n    assert(candidate((123)) == (1));\n    assert(candidate((456)) == (4));\n    assert(candidate((12)) == (1));\n}\n",
      "timestamp": 1665510675,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the first digit of a given number.\nlong first_Digit(long n) {\n    // Write your code here\n    while(n>=10)\n    {\n        n=n/10;\n    }\n    return n;\n}\nint main() {\n    auto candidate = first_Digit;\n    assert(candidate((123)) == (1));\n    assert(candidate((456)) == (4));\n    assert(candidate((12)) == (1));\n}\n",
      "timestamp": 1665510675,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the first digit of a given number.\nlong first_Digit(long n) {\n    // Write your code here\n    while(n>=10)\n    {\n        n=n/10;\n    }\n    return n;\n}\nint main() {\n    auto candidate = first_Digit;\n    assert(candidate((123)) == (1));\n    assert(candidate((456)) == (4));\n    assert(candidate((12)) == (1));\n}\n",
      "timestamp": 1665510675,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the first digit of a given number.\nlong first_Digit(long n) {\n    // Your code here\n    while(n>=10)\n    {\n        n=n/10;\n    }\n    return n;\n}\nint main() {\n    auto candidate = first_Digit;\n    assert(candidate((123)) == (1));\n    assert(candidate((456)) == (4));\n    assert(candidate((12)) == (1));\n}\n",
      "timestamp": 1665510675,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the first digit of a given number.\nlong first_Digit(long n) {\n    // Your code here\n    while(n>=10)\n    {\n        n=n/10;\n    }\n    return n;\n}\nint main() {\n    auto candidate = first_Digit;\n    assert(candidate((123)) == (1));\n    assert(candidate((456)) == (4));\n    assert(candidate((12)) == (1));\n}\n",
      "timestamp": 1665510675,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the first digit of a given number.\nlong first_Digit(long n) {\n    // Your code here\n    while(n>=10){\n        n=n/10;\n    }\n    return n;\n}\nint main() {\n    auto candidate = first_Digit;\n    assert(candidate((123)) == (1));\n    assert(candidate((456)) == (4));\n    assert(candidate((12)) == (1));\n}\n",
      "timestamp": 1665510675,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the first digit of a given number.\nlong first_Digit(long n) {\n    // Write your code here\n    while(n>=10)\n    {\n        n=n/10;\n    }\n    return n;\n}\nint main() {\n    auto candidate = first_Digit;\n    assert(candidate((123)) == (1));\n    assert(candidate((456)) == (4));\n    assert(candidate((12)) == (1));\n}\n",
      "timestamp": 1665510675,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the first digit of a given number.\nlong first_Digit(long n) {\n    // Write your code here\n    while(n>=10)\n    {\n        n=n/10;\n    }\n    return n;\n}\nint main() {\n    auto candidate = first_Digit;\n    assert(candidate((123)) == (1));\n    assert(candidate((456)) == (4));\n    assert(candidate((12)) == (1));\n}\n",
      "timestamp": 1665510675,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the first digit of a given number.\nlong first_Digit(long n) {\n    // Write your code here\n    long first_digit = 0;\n    while(n>0)\n    {\n        first_digit = n%10;\n        n = n/10;\n    }\n    return first_digit;\n}\nint main() {\n    auto candidate = first_Digit;\n    assert(candidate((123)) == (1));\n    assert(candidate((456)) == (4));\n    assert(candidate((12)) == (1));\n}\n",
      "timestamp": 1666124356,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the first digit of a given number.\nlong first_Digit(long n) {\n    // Write your code here\n    while(n>=10)\n    {\n        n=n/10;\n    }\n    return n;\n}\nint main() {\n    auto candidate = first_Digit;\n    assert(candidate((123)) == (1));\n    assert(candidate((456)) == (4));\n    assert(candidate((12)) == (1));\n}\n",
      "timestamp": 1665510675,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the first digit of a given number.\nlong first_Digit(long n) {\n    // Your code goes here\n    while(n>=10){\n        n=n/10;\n    }\n    return n;\n}\nint main() {\n    auto candidate = first_Digit;\n    assert(candidate((123)) == (1));\n    assert(candidate((456)) == (4));\n    assert(candidate((12)) == (1));\n}\n",
      "timestamp": 1666124356,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the first digit of a given number.\nlong first_Digit(long n) {\n    // Write your code here\n    while(n>=10)\n    {\n        n=n/10;\n    }\n    return n;\n}\nint main() {\n    auto candidate = first_Digit;\n    assert(candidate((123)) == (1));\n    assert(candidate((456)) == (4));\n    assert(candidate((12)) == (1));\n}\n",
      "timestamp": 1665510675,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the first digit of a given number.\nlong first_Digit(long n) {\n    // Your code here\n    while(n>=10){\n        n=n/10;\n    }\n    return n;\n}\nint main() {\n    auto candidate = first_Digit;\n    assert(candidate((123)) == (1));\n    assert(candidate((456)) == (4));\n    assert(candidate((12)) == (1));\n}\n",
      "timestamp": 1665510675,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the first digit of a given number.\nlong first_Digit(long n) {\n    // Write your code here\n    while(n>=10)\n    {\n        n=n/10;\n    }\n    return n;\n}\nint main() {\n    auto candidate = first_Digit;\n    assert(candidate((123)) == (1));\n    assert(candidate((456)) == (4));\n    assert(candidate((12)) == (1));\n}\n",
      "timestamp": 1665510675,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the first digit of a given number.\nlong first_Digit(long n) {\n    // Your code here\n    while(n>=10)\n    {\n        n=n/10;\n    }\n    return n;\n}\nint main() {\n    auto candidate = first_Digit;\n    assert(candidate((123)) == (1));\n    assert(candidate((456)) == (4));\n    assert(candidate((12)) == (1));\n}\n",
      "timestamp": 1665510675,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the first digit of a given number.\nlong first_Digit(long n) {\n    // Write your code here\n    // return n;\n    while(n>=10){\n        n=n/10;\n    }\n    return n;\n}\nint main() {\n    auto candidate = first_Digit;\n    assert(candidate((123)) == (1));\n    assert(candidate((456)) == (4));\n    assert(candidate((12)) == (1));\n}\n",
      "timestamp": 1666124356,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the first digit of a given number.\nlong first_Digit(long n) {\n    // Your code here\n    while(n>=10)\n    {\n        n=n/10;\n    }\n    return n;\n}\nint main() {\n    auto candidate = first_Digit;\n    assert(candidate((123)) == (1));\n    assert(candidate((456)) == (4));\n    assert(candidate((12)) == (1));\n}\n",
      "timestamp": 1665510675,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the first digit of a given number.\nlong first_Digit(long n) {\n    // Write your code here\n    while(n>=10)\n    {\n        n=n/10;\n    }\n    return n;\n}\nint main() {\n    auto candidate = first_Digit;\n    assert(candidate((123)) == (1));\n    assert(candidate((456)) == (4));\n    assert(candidate((12)) == (1));\n}\n",
      "timestamp": 1665510675,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the first digit of a given number.\nlong first_Digit(long n) {\n    // Write your code here\n    long a=n;\n    while(a>=10)\n    {\n        a=a/10;\n    }\n    return a;\n}\nint main() {\n    auto candidate = first_Digit;\n    assert(candidate((123)) == (1));\n    assert(candidate((456)) == (4));\n    assert(candidate((12)) == (1));\n}\n",
      "timestamp": 1666124356,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the first digit of a given number.\nlong first_Digit(long n) {\n    // Your code here\n    long digit = 0;\n    while(n>0){\n        digit = n%10;\n        n = n/10;\n    }\n    return digit;\n}\nint main() {\n    auto candidate = first_Digit;\n    assert(candidate((123)) == (1));\n    assert(candidate((456)) == (4));\n    assert(candidate((12)) == (1));\n}\n",
      "timestamp": 1666124356,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the first digit of a given number.\nlong first_Digit(long n) {\n    if(n<0)\n        n=-n;\n    while(n>=10)\n        n=n/10;\n    return n;\n}\nint main() {\n    auto candidate = first_Digit;\n    assert(candidate((123)) == (1));\n    assert(candidate((456)) == (4));\n    assert(candidate((12)) == (1));\n}\n",
      "timestamp": 1666124356,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the first digit of a given number.\nlong first_Digit(long n) {\n    // Your code here\n    while(n>=10)\n    {\n        n=n/10;\n    }\n    return n;\n}\nint main() {\n    auto candidate = first_Digit;\n    assert(candidate((123)) == (1));\n    assert(candidate((456)) == (4));\n    assert(candidate((12)) == (1));\n}\n",
      "timestamp": 1665510675,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the first digit of a given number.\nlong first_Digit(long n) {\n    // Write your code here\n    while(n>=10)\n    {\n        n=n/10;\n    }\n    return n;\n}\nint main() {\n    auto candidate = first_Digit;\n    assert(candidate((123)) == (1));\n    assert(candidate((456)) == (4));\n    assert(candidate((12)) == (1));\n}\n",
      "timestamp": 1665510675,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the first digit of a given number.\nlong first_Digit(long n) {\n    // Write your code here\n    while(n>=10)\n    {\n        n=n/10;\n    }\n    return n;\n}\nint main() {\n    auto candidate = first_Digit;\n    assert(candidate((123)) == (1));\n    assert(candidate((456)) == (4));\n    assert(candidate((12)) == (1));\n}\n",
      "timestamp": 1665510675,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the first digit of a given number.\nlong first_Digit(long n) {\n    // Write your code here\n    long i=0;\n    while(n>0)\n    {\n        if(n<10)\n        {\n            return n;\n        }\n        else\n        {\n            n=n/10;\n        }\n    }\n}\nint main() {\n    auto candidate = first_Digit;\n    assert(candidate((123)) == (1));\n    assert(candidate((456)) == (4));\n    assert(candidate((12)) == (1));\n}\n",
      "timestamp": 1666124356,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the first digit of a given number.\nlong first_Digit(long n) {\n    // Write your code here\n    while(n>=10)\n    {\n        n=n/10;\n    }\n    return n;\n}\nint main() {\n    auto candidate = first_Digit;\n    assert(candidate((123)) == (1));\n    assert(candidate((456)) == (4));\n    assert(candidate((12)) == (1));\n}\n",
      "timestamp": 1665510675,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the first digit of a given number.\nlong first_Digit(long n) {\n    // Your code here\n    while(n>=10){\n        n=n/10;\n    }\n    return n;\n}\nint main() {\n    auto candidate = first_Digit;\n    assert(candidate((123)) == (1));\n    assert(candidate((456)) == (4));\n    assert(candidate((12)) == (1));\n}\n",
      "timestamp": 1665510675,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the first digit of a given number.\nlong first_Digit(long n) {\n    // Write your code here\n    while(n>=10)\n    {\n        n=n/10;\n    }\n    return n;\n}\nint main() {\n    auto candidate = first_Digit;\n    assert(candidate((123)) == (1));\n    assert(candidate((456)) == (4));\n    assert(candidate((12)) == (1));\n}\n",
      "timestamp": 1665510675,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the first digit of a given number.\nlong first_Digit(long n) {\n    // Write your code here\n    while(n>=10){\n        n=n/10;\n    }\n    return n;\n}\nint main() {\n    auto candidate = first_Digit;\n    assert(candidate((123)) == (1));\n    assert(candidate((456)) == (4));\n    assert(candidate((12)) == (1));\n}\n",
      "timestamp": 1665510675,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the first digit of a given number.\nlong first_Digit(long n) {\n    // Your code here\n    while(n>=10){\n        n=n/10;\n    }\n    return n;\n}\nint main() {\n    auto candidate = first_Digit;\n    assert(candidate((123)) == (1));\n    assert(candidate((456)) == (4));\n    assert(candidate((12)) == (1));\n}\n",
      "timestamp": 1665510675,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the first digit of a given number.\nlong first_Digit(long n) {\n    // Your code goes here\n    while(n>=10){\n        n=n/10;\n    }\n    return n;\n}\nint main() {\n    auto candidate = first_Digit;\n    assert(candidate((123)) == (1));\n    assert(candidate((456)) == (4));\n    assert(candidate((12)) == (1));\n}\n",
      "timestamp": 1666124356,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the first digit of a given number.\nlong first_Digit(long n) {\n    // Write your code here\n    while(n>=10)\n    {\n        n=n/10;\n    }\n    return n;\n}\nint main() {\n    auto candidate = first_Digit;\n    assert(candidate((123)) == (1));\n    assert(candidate((456)) == (4));\n    assert(candidate((12)) == (1));\n}\n",
      "timestamp": 1665510675,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the first digit of a given number.\nlong first_Digit(long n) {\n    // Write your code here\n    while(n>=10){\n        n=n/10;\n    }\n    return n;\n}\nint main() {\n    auto candidate = first_Digit;\n    assert(candidate((123)) == (1));\n    assert(candidate((456)) == (4));\n    assert(candidate((12)) == (1));\n}\n",
      "timestamp": 1665510675,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the first digit of a given number.\nlong first_Digit(long n) {\n    // Your code here\n    while(n>=10)\n    {\n        n=n/10;\n    }\n    return n;\n}\nint main() {\n    auto candidate = first_Digit;\n    assert(candidate((123)) == (1));\n    assert(candidate((456)) == (4));\n    assert(candidate((12)) == (1));\n}\n",
      "timestamp": 1665510675,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the first digit of a given number.\nlong first_Digit(long n) {\n    // Your code here\n    while(n>=10)\n    {\n        n=n/10;\n    }\n    return n;\n}\nint main() {\n    auto candidate = first_Digit;\n    assert(candidate((123)) == (1));\n    assert(candidate((456)) == (4));\n    assert(candidate((12)) == (1));\n}\n",
      "timestamp": 1665510675,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the first digit of a given number.\nlong first_Digit(long n) {\n    // Write your code here\n    while(n>=10)\n    {\n        n=n/10;\n    }\n    return n;\n}\nint main() {\n    auto candidate = first_Digit;\n    assert(candidate((123)) == (1));\n    assert(candidate((456)) == (4));\n    assert(candidate((12)) == (1));\n}\n",
      "timestamp": 1665510675,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the first digit of a given number.\nlong first_Digit(long n) {\n    while(n>=10) {\n        n = n/10;\n    }\n    return n;\n}\nint main() {\n    auto candidate = first_Digit;\n    assert(candidate((123)) == (1));\n    assert(candidate((456)) == (4));\n    assert(candidate((12)) == (1));\n}\n",
      "timestamp": 1666124356,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the first digit of a given number.\nlong first_Digit(long n) {\n    // Your code here\n    while(n>=10){\n        n=n/10;\n    }\n    return n;\n}\nint main() {\n    auto candidate = first_Digit;\n    assert(candidate((123)) == (1));\n    assert(candidate((456)) == (4));\n    assert(candidate((12)) == (1));\n}\n",
      "timestamp": 1665510675,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the first digit of a given number.\nlong first_Digit(long n) {\n    // Your code here\n    while(n>=10)\n    {\n        n=n/10;\n    }\n    return n;\n}\nint main() {\n    auto candidate = first_Digit;\n    assert(candidate((123)) == (1));\n    assert(candidate((456)) == (4));\n    assert(candidate((12)) == (1));\n}\n",
      "timestamp": 1665510675,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the first digit of a given number.\nlong first_Digit(long n) {\n    // Your code here\n    while(n>=10)\n    {\n        n=n/10;\n    }\n    return n;\n}\nint main() {\n    auto candidate = first_Digit;\n    assert(candidate((123)) == (1));\n    assert(candidate((456)) == (4));\n    assert(candidate((12)) == (1));\n}\n",
      "timestamp": 1665510675,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the first digit of a given number.\nlong first_Digit(long n) {\n    // Write your code here\n    while(n>=10)\n    {\n        n=n/10;\n    }\n    return n;\n}\nint main() {\n    auto candidate = first_Digit;\n    assert(candidate((123)) == (1));\n    assert(candidate((456)) == (4));\n    assert(candidate((12)) == (1));\n}\n",
      "timestamp": 1665510675,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the first digit of a given number.\nlong first_Digit(long n) {\n    // Write your code here\n    while(n>=10){\n        n=n/10;\n    }\n    return n;\n}\nint main() {\n    auto candidate = first_Digit;\n    assert(candidate((123)) == (1));\n    assert(candidate((456)) == (4));\n    assert(candidate((12)) == (1));\n}\n",
      "timestamp": 1665510675,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the first digit of a given number.\nlong first_Digit(long n) {\n    // Your code here\n    while(n>=10)\n    {\n        n=n/10;\n    }\n    return n;\n}\nint main() {\n    auto candidate = first_Digit;\n    assert(candidate((123)) == (1));\n    assert(candidate((456)) == (4));\n    assert(candidate((12)) == (1));\n}\n",
      "timestamp": 1665510675,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the first digit of a given number.\nlong first_Digit(long n) {\n    // Write your code here\n    while(n>=10)\n    {\n        n=n/10;\n    }\n    return n;\n}\nint main() {\n    auto candidate = first_Digit;\n    assert(candidate((123)) == (1));\n    assert(candidate((456)) == (4));\n    assert(candidate((12)) == (1));\n}\n",
      "timestamp": 1665510675,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the first digit of a given number.\nlong first_Digit(long n) {\n    // Write your code here\n    while(n>=10){\n        n=n/10;\n    }\n    return n;\n}\nint main() {\n    auto candidate = first_Digit;\n    assert(candidate((123)) == (1));\n    assert(candidate((456)) == (4));\n    assert(candidate((12)) == (1));\n}\n",
      "timestamp": 1665510675,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the first digit of a given number.\nlong first_Digit(long n) {\n    // Your code here\n    while(n>=10)\n    {\n        n=n/10;\n    }\n    return n;\n}\nint main() {\n    auto candidate = first_Digit;\n    assert(candidate((123)) == (1));\n    assert(candidate((456)) == (4));\n    assert(candidate((12)) == (1));\n}\n",
      "timestamp": 1665510675,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the first digit of a given number.\nlong first_Digit(long n) {\n    // Write your code here\n    while(n>=10)\n    {\n        n=n/10;\n    }\n    return n;\n}\nint main() {\n    auto candidate = first_Digit;\n    assert(candidate((123)) == (1));\n    assert(candidate((456)) == (4));\n    assert(candidate((12)) == (1));\n}\n",
      "timestamp": 1665510675,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the first digit of a given number.\nlong first_Digit(long n) {\n    // Write your code here\n    while(n>=10){\n        n=n/10;\n    }\n    return n;\n}\nint main() {\n    auto candidate = first_Digit;\n    assert(candidate((123)) == (1));\n    assert(candidate((456)) == (4));\n    assert(candidate((12)) == (1));\n}\n",
      "timestamp": 1665510675,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the first digit of a given number.\nlong first_Digit(long n) {\n    // Write your code here\n    while(n>=10)\n    {\n        n=n/10;\n    }\n    return n;\n}\nint main() {\n    auto candidate = first_Digit;\n    assert(candidate((123)) == (1));\n    assert(candidate((456)) == (4));\n    assert(candidate((12)) == (1));\n}\n",
      "timestamp": 1665510675,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the first digit of a given number.\nlong first_Digit(long n) {\n    // Write your code here\n    while(n>=10)\n    {\n        n=n/10;\n    }\n    return n;\n}\nint main() {\n    auto candidate = first_Digit;\n    assert(candidate((123)) == (1));\n    assert(candidate((456)) == (4));\n    assert(candidate((12)) == (1));\n}\n",
      "timestamp": 1665510675,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the first digit of a given number.\nlong first_Digit(long n) {\n    // Your code here\n    while(n>=10){\n        n=n/10;\n    }\n    return n;\n}\nint main() {\n    auto candidate = first_Digit;\n    assert(candidate((123)) == (1));\n    assert(candidate((456)) == (4));\n    assert(candidate((12)) == (1));\n}\n",
      "timestamp": 1665510675,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the first digit of a given number.\nlong first_Digit(long n) {\n    // Write your code here\n    while(n>=10){\n        n=n/10;\n    }\n    return n;\n}\nint main() {\n    auto candidate = first_Digit;\n    assert(candidate((123)) == (1));\n    assert(candidate((456)) == (4));\n    assert(candidate((12)) == (1));\n}\n",
      "timestamp": 1665510675,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the first digit of a given number.\nlong first_Digit(long n) {\n    // Your code here\n    long i;\n    while(n>0)\n    {\n        i=n%10;\n        n=n/10;\n    }\n    return i;\n}\nint main() {\n    auto candidate = first_Digit;\n    assert(candidate((123)) == (1));\n    assert(candidate((456)) == (4));\n    assert(candidate((12)) == (1));\n}\n",
      "timestamp": 1666124356,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the first digit of a given number.\nlong first_Digit(long n) {\n    // Write your code here\n    while(n>=10)\n    {\n        n=n/10;\n    }\n    return n;\n}\nint main() {\n    auto candidate = first_Digit;\n    assert(candidate((123)) == (1));\n    assert(candidate((456)) == (4));\n    assert(candidate((12)) == (1));\n}\n",
      "timestamp": 1665510675,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the first digit of a given number.\nlong first_Digit(long n) {\n    // Your code goes here\n    while(n>=10)\n    {\n        n=n/10;\n    }\n    return n;\n}\nint main() {\n    auto candidate = first_Digit;\n    assert(candidate((123)) == (1));\n    assert(candidate((456)) == (4));\n    assert(candidate((12)) == (1));\n}\n",
      "timestamp": 1666124356,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the first digit of a given number.\nlong first_Digit(long n) {\n    // Your code here\n    while(n>=10)\n    {\n        n=n/10;\n    }\n    return n;\n}\nint main() {\n    auto candidate = first_Digit;\n    assert(candidate((123)) == (1));\n    assert(candidate((456)) == (4));\n    assert(candidate((12)) == (1));\n}\n",
      "timestamp": 1665510675,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the first digit of a given number.\nlong first_Digit(long n) {\n    // Write your code here\n    while(n>=10)\n    {\n        n=n/10;\n    }\n    return n;\n}\nint main() {\n    auto candidate = first_Digit;\n    assert(candidate((123)) == (1));\n    assert(candidate((456)) == (4));\n    assert(candidate((12)) == (1));\n}\n",
      "timestamp": 1665510675,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the first digit of a given number.\nlong first_Digit(long n) {\n    // Write your code here\n    while(n>=10)\n    {\n        n=n/10;\n    }\n    return n;\n}\nint main() {\n    auto candidate = first_Digit;\n    assert(candidate((123)) == (1));\n    assert(candidate((456)) == (4));\n    assert(candidate((12)) == (1));\n}\n",
      "timestamp": 1665510675,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the first digit of a given number.\nlong first_Digit(long n) {\n    // Write your code here\n    while(n>=10)\n    {\n        n=n/10;\n    }\n    return n;\n}\nint main() {\n    auto candidate = first_Digit;\n    assert(candidate((123)) == (1));\n    assert(candidate((456)) == (4));\n    assert(candidate((12)) == (1));\n}\n",
      "timestamp": 1665510675,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the first digit of a given number.\nlong first_Digit(long n) {\n    // Write your code here\n    while(n>=10)\n    {\n        n=n/10;\n    }\n    return n;\n}\nint main() {\n    auto candidate = first_Digit;\n    assert(candidate((123)) == (1));\n    assert(candidate((456)) == (4));\n    assert(candidate((12)) == (1));\n}\n",
      "timestamp": 1665510675,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the first digit of a given number.\nlong first_Digit(long n) {\n    // Write your code here\n    while(n>=10)\n    {\n        n=n/10;\n    }\n    return n;\n}\nint main() {\n    auto candidate = first_Digit;\n    assert(candidate((123)) == (1));\n    assert(candidate((456)) == (4));\n    assert(candidate((12)) == (1));\n}\n",
      "timestamp": 1665510675,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the first digit of a given number.\nlong first_Digit(long n) {\n    // Write your code here\n    while(n>=10)\n    {\n        n=n/10;\n    }\n    return n;\n}\nint main() {\n    auto candidate = first_Digit;\n    assert(candidate((123)) == (1));\n    assert(candidate((456)) == (4));\n    assert(candidate((12)) == (1));\n}\n",
      "timestamp": 1665510675,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the first digit of a given number.\nlong first_Digit(long n) {\n    // Your code here\n    while(n>=10){\n        n=n/10;\n    }\n    return n;\n}\nint main() {\n    auto candidate = first_Digit;\n    assert(candidate((123)) == (1));\n    assert(candidate((456)) == (4));\n    assert(candidate((12)) == (1));\n}\n",
      "timestamp": 1665510675,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the first digit of a given number.\nlong first_Digit(long n) {\n    // Write your code here\n    while(n>=10)\n    {\n        n=n/10;\n    }\n    return n;\n}\nint main() {\n    auto candidate = first_Digit;\n    assert(candidate((123)) == (1));\n    assert(candidate((456)) == (4));\n    assert(candidate((12)) == (1));\n}\n",
      "timestamp": 1665510675,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the first digit of a given number.\nlong first_Digit(long n) {\n    while(n>=10) {\n        n = n/10;\n    }\n    return n;\n}\nint main() {\n    auto candidate = first_Digit;\n    assert(candidate((123)) == (1));\n    assert(candidate((456)) == (4));\n    assert(candidate((12)) == (1));\n}\n",
      "timestamp": 1666124356,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the first digit of a given number.\nlong first_Digit(long n) {\n    // Your code here\n    while(n>=10)\n    {\n        n=n/10;\n    }\n    return n;\n}\nint main() {\n    auto candidate = first_Digit;\n    assert(candidate((123)) == (1));\n    assert(candidate((456)) == (4));\n    assert(candidate((12)) == (1));\n}\n",
      "timestamp": 1665510675,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the first digit of a given number.\nlong first_Digit(long n) {\n    //write your code here\n    if(n<0)\n        n=-n;\n    while(n>=10)\n    {\n        n=n/10;\n    }\n    return n;\n}\nint main() {\n    auto candidate = first_Digit;\n    assert(candidate((123)) == (1));\n    assert(candidate((456)) == (4));\n    assert(candidate((12)) == (1));\n}\n",
      "timestamp": 1666124356,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the first digit of a given number.\nlong first_Digit(long n) {\n    //write your code here\n    long temp = n;\n    while(temp>=10){\n        temp = temp/10;\n    }\n    return temp;\n}\nint main() {\n    auto candidate = first_Digit;\n    assert(candidate((123)) == (1));\n    assert(candidate((456)) == (4));\n    assert(candidate((12)) == (1));\n}\n",
      "timestamp": 1666124356,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the first digit of a given number.\nlong first_Digit(long n) {\n    // Your code here\n    while(n>=10){\n        n=n/10;\n    }\n    return n;\n}\nint main() {\n    auto candidate = first_Digit;\n    assert(candidate((123)) == (1));\n    assert(candidate((456)) == (4));\n    assert(candidate((12)) == (1));\n}\n",
      "timestamp": 1665510675,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the first digit of a given number.\nlong first_Digit(long n) {\n    // Write your code here\n    while(n>=10)\n    {\n        n=n/10;\n    }\n    return n;\n}\nint main() {\n    auto candidate = first_Digit;\n    assert(candidate((123)) == (1));\n    assert(candidate((456)) == (4));\n    assert(candidate((12)) == (1));\n}\n",
      "timestamp": 1665510675,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the first digit of a given number.\nlong first_Digit(long n) {\n    // Your code here\n    while(n>=10)\n    {\n        n=n/10;\n    }\n    return n;\n}\nint main() {\n    auto candidate = first_Digit;\n    assert(candidate((123)) == (1));\n    assert(candidate((456)) == (4));\n    assert(candidate((12)) == (1));\n}\n",
      "timestamp": 1665510675,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the first digit of a given number.\nlong first_Digit(long n) {\n    // Your code goes here\n    while(n>=10)\n    {\n        n=n/10;\n    }\n    return n;\n}\nint main() {\n    auto candidate = first_Digit;\n    assert(candidate((123)) == (1));\n    assert(candidate((456)) == (4));\n    assert(candidate((12)) == (1));\n}\n",
      "timestamp": 1666124356,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the first digit of a given number.\nlong first_Digit(long n) {\n    // Your code here\n    while(n>=10)\n    {\n        n=n/10;\n    }\n    return n;\n}\nint main() {\n    auto candidate = first_Digit;\n    assert(candidate((123)) == (1));\n    assert(candidate((456)) == (4));\n    assert(candidate((12)) == (1));\n}\n",
      "timestamp": 1665510675,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the first digit of a given number.\nlong first_Digit(long n) {\n    // Your code here\n    while(n>=10)\n    {\n        n=n/10;\n    }\n    return n;\n}\nint main() {\n    auto candidate = first_Digit;\n    assert(candidate((123)) == (1));\n    assert(candidate((456)) == (4));\n    assert(candidate((12)) == (1));\n}\n",
      "timestamp": 1665510675,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the first digit of a given number.\nlong first_Digit(long n) {\n    // Write your code here\n    while(n>=10)\n    {\n        n=n/10;\n    }\n    return n;\n}\nint main() {\n    auto candidate = first_Digit;\n    assert(candidate((123)) == (1));\n    assert(candidate((456)) == (4));\n    assert(candidate((12)) == (1));\n}\n",
      "timestamp": 1665510675,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the first digit of a given number.\nlong first_Digit(long n) {\n    // Write your code here\n    if(n<0)\n        n*=-1;\n    while(n>=10)\n    {\n        n/=10;\n    }\n    return n;\n}\nint main() {\n    auto candidate = first_Digit;\n    assert(candidate((123)) == (1));\n    assert(candidate((456)) == (4));\n    assert(candidate((12)) == (1));\n}\n",
      "timestamp": 1666124356,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the first digit of a given number.\nlong first_Digit(long n) {\n    // Your code here\n    while(n>=10)\n    {\n        n=n/10;\n    }\n    return n;\n}\nint main() {\n    auto candidate = first_Digit;\n    assert(candidate((123)) == (1));\n    assert(candidate((456)) == (4));\n    assert(candidate((12)) == (1));\n}\n",
      "timestamp": 1665510675,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the first digit of a given number.\nlong first_Digit(long n) {\n    // Your code here\n    while(n>=10)\n    {\n        n=n/10;\n    }\n    return n;\n}\nint main() {\n    auto candidate = first_Digit;\n    assert(candidate((123)) == (1));\n    assert(candidate((456)) == (4));\n    assert(candidate((12)) == (1));\n}\n",
      "timestamp": 1665510675,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the first digit of a given number.\nlong first_Digit(long n) {\n    // Write your code here\n    while(n>=10){\n        n=n/10;\n    }\n    return n;\n}\nint main() {\n    auto candidate = first_Digit;\n    assert(candidate((123)) == (1));\n    assert(candidate((456)) == (4));\n    assert(candidate((12)) == (1));\n}\n",
      "timestamp": 1665510675,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the first digit of a given number.\nlong first_Digit(long n) {\n    // Your code here\n    while(n>=10)\n    {\n        n=n/10;\n    }\n    return n;\n}\nint main() {\n    auto candidate = first_Digit;\n    assert(candidate((123)) == (1));\n    assert(candidate((456)) == (4));\n    assert(candidate((12)) == (1));\n}\n",
      "timestamp": 1665510675,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the first digit of a given number.\nlong first_Digit(long n) {\n    // Write your code here\n    // return n;\n    while(n>=10)\n    {\n        n=n/10;\n    }\n    return n;\n}\nint main() {\n    auto candidate = first_Digit;\n    assert(candidate((123)) == (1));\n    assert(candidate((456)) == (4));\n    assert(candidate((12)) == (1));\n}\n",
      "timestamp": 1666124356,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the first digit of a given number.\nlong first_Digit(long n) {\n    // Write your code here\n    while(n>=10)\n    {\n        n=n/10;\n    }\n    return n;\n}\nint main() {\n    auto candidate = first_Digit;\n    assert(candidate((123)) == (1));\n    assert(candidate((456)) == (4));\n    assert(candidate((12)) == (1));\n}\n",
      "timestamp": 1665510675,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the first digit of a given number.\nlong first_Digit(long n) {\n    // Write your code here\n    while(n>=10)\n    {\n        n=n/10;\n    }\n    return n;\n}\nint main() {\n    auto candidate = first_Digit;\n    assert(candidate((123)) == (1));\n    assert(candidate((456)) == (4));\n    assert(candidate((12)) == (1));\n}\n",
      "timestamp": 1665510675,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the first digit of a given number.\nlong first_Digit(long n) {\n    // Write your code here\n    while(n>=10){\n        n=n/10;\n    }\n    return n;\n}\nint main() {\n    auto candidate = first_Digit;\n    assert(candidate((123)) == (1));\n    assert(candidate((456)) == (4));\n    assert(candidate((12)) == (1));\n}\n",
      "timestamp": 1665510675,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the first digit of a given number.\nlong first_Digit(long n) {\n    // Your code here\n    while(n>=10){\n        n=n/10;\n    }\n    return n;\n}\nint main() {\n    auto candidate = first_Digit;\n    assert(candidate((123)) == (1));\n    assert(candidate((456)) == (4));\n    assert(candidate((12)) == (1));\n}\n",
      "timestamp": 1665510675,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the first digit of a given number.\nlong first_Digit(long n) {\n    // Your code here\n    while(n>=10){\n        n=n/10;\n    }\n    return n;\n}\nint main() {\n    auto candidate = first_Digit;\n    assert(candidate((123)) == (1));\n    assert(candidate((456)) == (4));\n    assert(candidate((12)) == (1));\n}\n",
      "timestamp": 1665510675,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the first digit of a given number.\nlong first_Digit(long n) {\n    // Write your code here\n    while(n>=10)\n    {\n        n=n/10;\n    }\n    return n;\n}\nint main() {\n    auto candidate = first_Digit;\n    assert(candidate((123)) == (1));\n    assert(candidate((456)) == (4));\n    assert(candidate((12)) == (1));\n}\n",
      "timestamp": 1665510675,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the first digit of a given number.\nlong first_Digit(long n) {\n    // Your code goes here\n    while(n>=10)\n    {\n        n=n/10;\n    }\n    return n;\n}\nint main() {\n    auto candidate = first_Digit;\n    assert(candidate((123)) == (1));\n    assert(candidate((456)) == (4));\n    assert(candidate((12)) == (1));\n}\n",
      "timestamp": 1666124356,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the first digit of a given number.\nlong first_Digit(long n) {\n    // Write your code here\n    while(n>=10)\n    {\n        n=n/10;\n    }\n    return n;\n}\nint main() {\n    auto candidate = first_Digit;\n    assert(candidate((123)) == (1));\n    assert(candidate((456)) == (4));\n    assert(candidate((12)) == (1));\n}\n",
      "timestamp": 1665510675,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the first digit of a given number.\nlong first_Digit(long n) {\n    //write your code here\n    if(n<0){\n        n=n*-1;\n    }\n    while(n>=10){\n        n=n/10;\n    }\n    return n;\n}\nint main() {\n    auto candidate = first_Digit;\n    assert(candidate((123)) == (1));\n    assert(candidate((456)) == (4));\n    assert(candidate((12)) == (1));\n}\n",
      "timestamp": 1666124356,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the first digit of a given number.\nlong first_Digit(long n) {\n    // Write your code here\n    while(n>=10){\n        n=n/10;\n    }\n    return n;\n}\nint main() {\n    auto candidate = first_Digit;\n    assert(candidate((123)) == (1));\n    assert(candidate((456)) == (4));\n    assert(candidate((12)) == (1));\n}\n",
      "timestamp": 1665510675,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the first digit of a given number.\nlong first_Digit(long n) {\n    // Your code here\n    while(n>=10)\n    {\n        n=n/10;\n    }\n    return n;\n}\nint main() {\n    auto candidate = first_Digit;\n    assert(candidate((123)) == (1));\n    assert(candidate((456)) == (4));\n    assert(candidate((12)) == (1));\n}\n",
      "timestamp": 1665510675,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the first digit of a given number.\nlong first_Digit(long n) {\n    // Write your code here\n    while(n>=10){\n        n=n/10;\n    }\n    return n;\n}\nint main() {\n    auto candidate = first_Digit;\n    assert(candidate((123)) == (1));\n    assert(candidate((456)) == (4));\n    assert(candidate((12)) == (1));\n}\n",
      "timestamp": 1665510675,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the first digit of a given number.\nlong first_Digit(long n) {\n    // Write your code here\n    while(n>=10)\n    {\n        n=n/10;\n    }\n    return n;\n}\nint main() {\n    auto candidate = first_Digit;\n    assert(candidate((123)) == (1));\n    assert(candidate((456)) == (4));\n    assert(candidate((12)) == (1));\n}\n",
      "timestamp": 1665510675,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the first digit of a given number.\nlong first_Digit(long n) {\n    // Your code here\n    while(n>=10)\n    {\n        n=n/10;\n    }\n    return n;\n}\nint main() {\n    auto candidate = first_Digit;\n    assert(candidate((123)) == (1));\n    assert(candidate((456)) == (4));\n    assert(candidate((12)) == (1));\n}\n",
      "timestamp": 1665510675,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the first digit of a given number.\nlong first_Digit(long n) {\n    // Write your code here\n    long first_digit;\n    while(n!=0){\n        first_digit=n%10;\n        n=n/10;\n    }\n    return first_digit;\n}\nint main() {\n    auto candidate = first_Digit;\n    assert(candidate((123)) == (1));\n    assert(candidate((456)) == (4));\n    assert(candidate((12)) == (1));\n}\n",
      "timestamp": 1666124356,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the first digit of a given number.\nlong first_Digit(long n) {\n    //write your code here\n    while(n>=10){\n        n=n/10;\n    }\n    return n;\n}\nint main() {\n    auto candidate = first_Digit;\n    assert(candidate((123)) == (1));\n    assert(candidate((456)) == (4));\n    assert(candidate((12)) == (1));\n}\n",
      "timestamp": 1666124356,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the first digit of a given number.\nlong first_Digit(long n) {\n    // Your code here\n    if(n<0)\n        n=-n;\n    while(n>=10)\n        n=n/10;\n    return n;\n}\nint main() {\n    auto candidate = first_Digit;\n    assert(candidate((123)) == (1));\n    assert(candidate((456)) == (4));\n    assert(candidate((12)) == (1));\n}\n",
      "timestamp": 1666124356,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the first digit of a given number.\nlong first_Digit(long n) {\n    // Write your code here\n    if(n<0)\n        n=-n;\n    while(n>=10)\n    {\n        n=n/10;\n    }\n    return n;\n}\nint main() {\n    auto candidate = first_Digit;\n    assert(candidate((123)) == (1));\n    assert(candidate((456)) == (4));\n    assert(candidate((12)) == (1));\n}\n",
      "timestamp": 1666124356,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the first digit of a given number.\nlong first_Digit(long n) {\n    // Your code here\n    while(n>=10)\n    {\n        n=n/10;\n    }\n    return n;\n}\nint main() {\n    auto candidate = first_Digit;\n    assert(candidate((123)) == (1));\n    assert(candidate((456)) == (4));\n    assert(candidate((12)) == (1));\n}\n",
      "timestamp": 1665510675,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the first digit of a given number.\nlong first_Digit(long n) {\n    // Your code here\n    while(n>=10)\n    {\n        n=n/10;\n    }\n    return n;\n}\nint main() {\n    auto candidate = first_Digit;\n    assert(candidate((123)) == (1));\n    assert(candidate((456)) == (4));\n    assert(candidate((12)) == (1));\n}\n",
      "timestamp": 1665510675,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the first digit of a given number.\nlong first_Digit(long n) {\n    // Write your code here\n    while(n>=10){\n        n=n/10;\n    }\n    return n;\n}\nint main() {\n    auto candidate = first_Digit;\n    assert(candidate((123)) == (1));\n    assert(candidate((456)) == (4));\n    assert(candidate((12)) == (1));\n}\n",
      "timestamp": 1665510675,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the first digit of a given number.\nlong first_Digit(long n) {\n    // Write your code here\n    while(n>=10)\n    {\n        n=n/10;\n    }\n    return n;\n}\nint main() {\n    auto candidate = first_Digit;\n    assert(candidate((123)) == (1));\n    assert(candidate((456)) == (4));\n    assert(candidate((12)) == (1));\n}\n",
      "timestamp": 1665510675,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the first digit of a given number.\nlong first_Digit(long n) {\n    // Write your code here\n    long r;\n    while(n>0)\n    {\n        r=n%10;\n        n=n/10;\n    }\n    return r;\n}\nint main() {\n    auto candidate = first_Digit;\n    assert(candidate((123)) == (1));\n    assert(candidate((456)) == (4));\n    assert(candidate((12)) == (1));\n}\n",
      "timestamp": 1665510675,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the first digit of a given number.\nlong first_Digit(long n) {\n    // Write your code here\n    while(n>=10)\n    {\n        n=n/10;\n    }\n    return n;\n}\nint main() {\n    auto candidate = first_Digit;\n    assert(candidate((123)) == (1));\n    assert(candidate((456)) == (4));\n    assert(candidate((12)) == (1));\n}\n",
      "timestamp": 1665510675,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the first digit of a given number.\nlong first_Digit(long n) {\n    // Your code here\n    while(n>=10){\n        n=n/10;\n    }\n    return n;\n}\nint main() {\n    auto candidate = first_Digit;\n    assert(candidate((123)) == (1));\n    assert(candidate((456)) == (4));\n    assert(candidate((12)) == (1));\n}\n",
      "timestamp": 1665510675,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the first digit of a given number.\nlong first_Digit(long n) {\n    //write your code here\n    while(n>=10)\n    {\n        n=n/10;\n    }\n    return n;\n}\nint main() {\n    auto candidate = first_Digit;\n    assert(candidate((123)) == (1));\n    assert(candidate((456)) == (4));\n    assert(candidate((12)) == (1));\n}\n",
      "timestamp": 1666124356,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the first digit of a given number.\nlong first_Digit(long n) {\n    // Write your code here\n    while(n>=10)\n    {\n        n=n/10;\n    }\n    return n;\n}\nint main() {\n    auto candidate = first_Digit;\n    assert(candidate((123)) == (1));\n    assert(candidate((456)) == (4));\n    assert(candidate((12)) == (1));\n}\n",
      "timestamp": 1665510675,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the first digit of a given number.\nlong first_Digit(long n) {\n    // Your code here\n    while(n>=10)\n    {\n        n=n/10;\n    }\n    return n;\n}\nint main() {\n    auto candidate = first_Digit;\n    assert(candidate((123)) == (1));\n    assert(candidate((456)) == (4));\n    assert(candidate((12)) == (1));\n}\n",
      "timestamp": 1665510675,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the first digit of a given number.\nlong first_Digit(long n) {\n    // Your code here\n    if(n<0)\n    {\n        n=n*-1;\n    }\n    while(n>=10)\n    {\n        n=n/10;\n    }\n    return n;\n}\nint main() {\n    auto candidate = first_Digit;\n    assert(candidate((123)) == (1));\n    assert(candidate((456)) == (4));\n    assert(candidate((12)) == (1));\n}\n",
      "timestamp": 1666124356,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the first digit of a given number.\nlong first_Digit(long n) {\n    // Your code goes here\n    while(n>=10)\n    {\n        n=n/10;\n    }\n    return n;\n}\nint main() {\n    auto candidate = first_Digit;\n    assert(candidate((123)) == (1));\n    assert(candidate((456)) == (4));\n    assert(candidate((12)) == (1));\n}\n",
      "timestamp": 1666124356,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the first digit of a given number.\nlong first_Digit(long n) {\n    // Your code here\n    while(n>=10)\n    {\n        n=n/10;\n    }\n    return n;\n}\nint main() {\n    auto candidate = first_Digit;\n    assert(candidate((123)) == (1));\n    assert(candidate((456)) == (4));\n    assert(candidate((12)) == (1));\n}\n",
      "timestamp": 1665510675,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the first digit of a given number.\nlong first_Digit(long n) {\n    // Write your code here\n    while(n>=10)\n    {\n        n=n/10;\n    }\n    return n;\n}\nint main() {\n    auto candidate = first_Digit;\n    assert(candidate((123)) == (1));\n    assert(candidate((456)) == (4));\n    assert(candidate((12)) == (1));\n}\n",
      "timestamp": 1665510675,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the first digit of a given number.\nlong first_Digit(long n) {\n    // Write your code here\n    while(n>=10)\n    {\n        n=n/10;\n    }\n    return n;\n}\nint main() {\n    auto candidate = first_Digit;\n    assert(candidate((123)) == (1));\n    assert(candidate((456)) == (4));\n    assert(candidate((12)) == (1));\n}\n",
      "timestamp": 1665510675,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the first digit of a given number.\nlong first_Digit(long n) {\n    // Write your code here\n    if(n<0)\n        n=n*-1;\n    while(n>=10){\n        n=n/10;\n    }\n    return n;\n}\nint main() {\n    auto candidate = first_Digit;\n    assert(candidate((123)) == (1));\n    assert(candidate((456)) == (4));\n    assert(candidate((12)) == (1));\n}\n",
      "timestamp": 1666124356,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the first digit of a given number.\nlong first_Digit(long n) {\n    // Write your code here\n    while(n>=10)\n    {\n        n=n/10;\n    }\n    return n;\n}\nint main() {\n    auto candidate = first_Digit;\n    assert(candidate((123)) == (1));\n    assert(candidate((456)) == (4));\n    assert(candidate((12)) == (1));\n}\n",
      "timestamp": 1665510675,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the first digit of a given number.\nlong first_Digit(long n) {\n    // Write your code here\n    while(n>=10)\n    {\n        n=n/10;\n    }\n    return n;\n}\nint main() {\n    auto candidate = first_Digit;\n    assert(candidate((123)) == (1));\n    assert(candidate((456)) == (4));\n    assert(candidate((12)) == (1));\n}\n",
      "timestamp": 1665510675,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the first digit of a given number.\nlong first_Digit(long n) {\n    // Your code here\n    while(n>=10)\n    {\n        n=n/10;\n    }\n    return n;\n}\nint main() {\n    auto candidate = first_Digit;\n    assert(candidate((123)) == (1));\n    assert(candidate((456)) == (4));\n    assert(candidate((12)) == (1));\n}\n",
      "timestamp": 1665510675,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the first digit of a given number.\nlong first_Digit(long n) {\n    // Write your code here\n    while(n>=10){\n        n=n/10;\n    }\n    return n;\n}\nint main() {\n    auto candidate = first_Digit;\n    assert(candidate((123)) == (1));\n    assert(candidate((456)) == (4));\n    assert(candidate((12)) == (1));\n}\n",
      "timestamp": 1665510675,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the first digit of a given number.\nlong first_Digit(long n) {\n    // Write your code here\n    while(n>=10){\n        n=n/10;\n    }\n    return n;\n}\nint main() {\n    auto candidate = first_Digit;\n    assert(candidate((123)) == (1));\n    assert(candidate((456)) == (4));\n    assert(candidate((12)) == (1));\n}\n",
      "timestamp": 1665510675,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the first digit of a given number.\nlong first_Digit(long n) {\n    // Your code here\n    if(n<0)\n    {\n        n=n*-1;\n    }\n    while(n>=10)\n    {\n        n=n/10;\n    }\n    return n;\n}\nint main() {\n    auto candidate = first_Digit;\n    assert(candidate((123)) == (1));\n    assert(candidate((456)) == (4));\n    assert(candidate((12)) == (1));\n}\n",
      "timestamp": 1666124356,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the first digit of a given number.\nlong first_Digit(long n) {\n    // Your code here\n    while(n>=10)\n    {\n        n=n/10;\n    }\n    return n;\n}\nint main() {\n    auto candidate = first_Digit;\n    assert(candidate((123)) == (1));\n    assert(candidate((456)) == (4));\n    assert(candidate((12)) == (1));\n}\n",
      "timestamp": 1665510675,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the first digit of a given number.\nlong first_Digit(long n) {\n    // write your code here\n    if(n<0)\n        n=-n;\n    while(n>9)\n        n=n/10;\n    return n;\n}\nint main() {\n    auto candidate = first_Digit;\n    assert(candidate((123)) == (1));\n    assert(candidate((456)) == (4));\n    assert(candidate((12)) == (1));\n}\n",
      "timestamp": 1666124358,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the first digit of a given number.\nlong first_Digit(long n) {\n    // Write your code here\n    while(n>=10)\n    {\n        n=n/10;\n    }\n    return n;\n}\nint main() {\n    auto candidate = first_Digit;\n    assert(candidate((123)) == (1));\n    assert(candidate((456)) == (4));\n    assert(candidate((12)) == (1));\n}\n",
      "timestamp": 1665510675,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the first digit of a given number.\nlong first_Digit(long n) {\n    // Write your code here\n    while(n>=10)\n    {\n        n=n/10;\n    }\n    return n;\n}\nint main() {\n    auto candidate = first_Digit;\n    assert(candidate((123)) == (1));\n    assert(candidate((456)) == (4));\n    assert(candidate((12)) == (1));\n}\n",
      "timestamp": 1665510675,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the first digit of a given number.\nlong first_Digit(long n) {\n    // Write your code here\n    if(n<0){\n        n=n*-1;\n    }\n    while(n>=10){\n        n=n/10;\n    }\n    return n;\n}\nint main() {\n    auto candidate = first_Digit;\n    assert(candidate((123)) == (1));\n    assert(candidate((456)) == (4));\n    assert(candidate((12)) == (1));\n}\n",
      "timestamp": 1666124358,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the first digit of a given number.\nlong first_Digit(long n) {\n    // Your code here\n    while(n>=10)\n    {\n        n=n/10;\n    }\n    return n;\n}\nint main() {\n    auto candidate = first_Digit;\n    assert(candidate((123)) == (1));\n    assert(candidate((456)) == (4));\n    assert(candidate((12)) == (1));\n}\n",
      "timestamp": 1665510675,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the first digit of a given number.\nlong first_Digit(long n) {\n    // Your code here\n    long x=n;\n    while(x>=10)\n    {\n        x=x/10;\n    }\n    return x;\n}\nint main() {\n    auto candidate = first_Digit;\n    assert(candidate((123)) == (1));\n    assert(candidate((456)) == (4));\n    assert(candidate((12)) == (1));\n}\n",
      "timestamp": 1666124358,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the first digit of a given number.\nlong first_Digit(long n) {\n    // Your code goes here\n    while(n>=10)\n    {\n        n=n/10;\n    }\n    return n;\n}\nint main() {\n    auto candidate = first_Digit;\n    assert(candidate((123)) == (1));\n    assert(candidate((456)) == (4));\n    assert(candidate((12)) == (1));\n}\n",
      "timestamp": 1666124356,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the first digit of a given number.\nlong first_Digit(long n) {\n    // Your code here\n    while(n>=10)\n    {\n        n=n/10;\n    }\n    return n;\n}\nint main() {\n    auto candidate = first_Digit;\n    assert(candidate((123)) == (1));\n    assert(candidate((456)) == (4));\n    assert(candidate((12)) == (1));\n}\n",
      "timestamp": 1665510675,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the first digit of a given number.\nlong first_Digit(long n) {\n    // Write your code here\n    while(n>=10)\n    {\n        n=n/10;\n    }\n    return n;\n}\nint main() {\n    auto candidate = first_Digit;\n    assert(candidate((123)) == (1));\n    assert(candidate((456)) == (4));\n    assert(candidate((12)) == (1));\n}\n",
      "timestamp": 1665510675,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the first digit of a given number.\nlong first_Digit(long n) {\n    // Write your code here\n    while(n>=10){\n        n=n/10;\n    }\n    return n;\n}\nint main() {\n    auto candidate = first_Digit;\n    assert(candidate((123)) == (1));\n    assert(candidate((456)) == (4));\n    assert(candidate((12)) == (1));\n}\n",
      "timestamp": 1665510675,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the first digit of a given number.\nlong first_Digit(long n) {\n    //write your code here\n    while(n>=10){\n        n=n/10;\n    }\n    return n;\n}\nint main() {\n    auto candidate = first_Digit;\n    assert(candidate((123)) == (1));\n    assert(candidate((456)) == (4));\n    assert(candidate((12)) == (1));\n}\n",
      "timestamp": 1666124356,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the first digit of a given number.\nlong first_Digit(long n) {\n    // Write your code here\n    while(n>=10)\n    {\n        n=n/10;\n    }\n    return n;\n}\nint main() {\n    auto candidate = first_Digit;\n    assert(candidate((123)) == (1));\n    assert(candidate((456)) == (4));\n    assert(candidate((12)) == (1));\n}\n",
      "timestamp": 1665510675,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the first digit of a given number.\nlong first_Digit(long n) {\n    // Write your code here\n    long digit = 0;\n    while(n>0){\n        digit = n%10;\n        n = n/10;\n    }\n    return digit;\n}\nint main() {\n    auto candidate = first_Digit;\n    assert(candidate((123)) == (1));\n    assert(candidate((456)) == (4));\n    assert(candidate((12)) == (1));\n}\n",
      "timestamp": 1665510675,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the first digit of a given number.\nlong first_Digit(long n) {\n    // Your code goes here\n    while(n>=10){\n        n=n/10;\n    }\n    return n;\n}\nint main() {\n    auto candidate = first_Digit;\n    assert(candidate((123)) == (1));\n    assert(candidate((456)) == (4));\n    assert(candidate((12)) == (1));\n}\n",
      "timestamp": 1666124356,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the first digit of a given number.\nlong first_Digit(long n) {\n    // Write your code here\n    while(n>=10)\n    {\n        n=n/10;\n    }\n    return n;\n}\nint main() {\n    auto candidate = first_Digit;\n    assert(candidate((123)) == (1));\n    assert(candidate((456)) == (4));\n    assert(candidate((12)) == (1));\n}\n",
      "timestamp": 1665510675,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the first digit of a given number.\nlong first_Digit(long n) {\n    // Write your code here\n    while(n>=10)\n    {\n        n=n/10;\n    }\n    return n;\n}\nint main() {\n    auto candidate = first_Digit;\n    assert(candidate((123)) == (1));\n    assert(candidate((456)) == (4));\n    assert(candidate((12)) == (1));\n}\n",
      "timestamp": 1665510675,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the first digit of a given number.\nlong first_Digit(long n) {\n    // Your code goes here\n    while(n>=10){\n        n=n/10;\n    }\n    return n;\n}\nint main() {\n    auto candidate = first_Digit;\n    assert(candidate((123)) == (1));\n    assert(candidate((456)) == (4));\n    assert(candidate((12)) == (1));\n}\n",
      "timestamp": 1666124356,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the first digit of a given number.\nlong first_Digit(long n) {\n    // Your code here\n    while(n>=10)\n    {\n        n=n/10;\n    }\n    return n;\n}\nint main() {\n    auto candidate = first_Digit;\n    assert(candidate((123)) == (1));\n    assert(candidate((456)) == (4));\n    assert(candidate((12)) == (1));\n}\n",
      "timestamp": 1665510675,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the first digit of a given number.\nlong first_Digit(long n) {\n    // Write your code here\n    while(n>=10){\n        n=n/10;\n    }\n    return n;\n}\nint main() {\n    auto candidate = first_Digit;\n    assert(candidate((123)) == (1));\n    assert(candidate((456)) == (4));\n    assert(candidate((12)) == (1));\n}\n",
      "timestamp": 1665510675,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the first digit of a given number.\nlong first_Digit(long n) {\n    // Write your code here\n    while(n>=10)\n    {\n        n=n/10;\n    }\n    return n;\n}\nint main() {\n    auto candidate = first_Digit;\n    assert(candidate((123)) == (1));\n    assert(candidate((456)) == (4));\n    assert(candidate((12)) == (1));\n}\n",
      "timestamp": 1665510675,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the first digit of a given number.\nlong first_Digit(long n) {\n    // Your code here\n    while(n>=10)\n    {\n        n=n/10;\n    }\n    return n;\n}\nint main() {\n    auto candidate = first_Digit;\n    assert(candidate((123)) == (1));\n    assert(candidate((456)) == (4));\n    assert(candidate((12)) == (1));\n}\n",
      "timestamp": 1665510675,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the first digit of a given number.\nlong first_Digit(long n) {\n    // Your code here\n    while(n>=10)\n    {\n        n=n/10;\n    }\n    return n;\n}\nint main() {\n    auto candidate = first_Digit;\n    assert(candidate((123)) == (1));\n    assert(candidate((456)) == (4));\n    assert(candidate((12)) == (1));\n}\n",
      "timestamp": 1665510675,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the first digit of a given number.\nlong first_Digit(long n) {\n    // Write your code here\n    while(n>=10)\n    {\n        n=n/10;\n    }\n    return n;\n}\nint main() {\n    auto candidate = first_Digit;\n    assert(candidate((123)) == (1));\n    assert(candidate((456)) == (4));\n    assert(candidate((12)) == (1));\n}\n",
      "timestamp": 1665510675,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the first digit of a given number.\nlong first_Digit(long n) {\n    // Your code here\n    while(n>=10)\n    {\n        n=n/10;\n    }\n    return n;\n}\nint main() {\n    auto candidate = first_Digit;\n    assert(candidate((123)) == (1));\n    assert(candidate((456)) == (4));\n    assert(candidate((12)) == (1));\n}\n",
      "timestamp": 1665510675,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the first digit of a given number.\nlong first_Digit(long n) {\n    // Your code here\n    while(n>=10)\n    {\n        n=n/10;\n    }\n    return n;\n}\nint main() {\n    auto candidate = first_Digit;\n    assert(candidate((123)) == (1));\n    assert(candidate((456)) == (4));\n    assert(candidate((12)) == (1));\n}\n",
      "timestamp": 1665510675,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the first digit of a given number.\nlong first_Digit(long n) {\n    // Your code here\n    while(n>=10){\n        n=n/10;\n    }\n    return n;\n}\nint main() {\n    auto candidate = first_Digit;\n    assert(candidate((123)) == (1));\n    assert(candidate((456)) == (4));\n    assert(candidate((12)) == (1));\n}\n",
      "timestamp": 1665510675,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the first digit of a given number.\nlong first_Digit(long n) {\n    // Write your code here\n    while(n>=10)\n    {\n        n=n/10;\n    }\n    return n;\n}\nint main() {\n    auto candidate = first_Digit;\n    assert(candidate((123)) == (1));\n    assert(candidate((456)) == (4));\n    assert(candidate((12)) == (1));\n}\n",
      "timestamp": 1665510675,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the first digit of a given number.\nlong first_Digit(long n) {\n    // Write your code here\n    while(n>=10)\n    {\n        n=n/10;\n    }\n    return n;\n}\nint main() {\n    auto candidate = first_Digit;\n    assert(candidate((123)) == (1));\n    assert(candidate((456)) == (4));\n    assert(candidate((12)) == (1));\n}\n",
      "timestamp": 1665510675,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the first digit of a given number.\nlong first_Digit(long n) {\n    // Your code here\n    while(n>=10){\n        n=n/10;\n    }\n    return n;\n}\nint main() {\n    auto candidate = first_Digit;\n    assert(candidate((123)) == (1));\n    assert(candidate((456)) == (4));\n    assert(candidate((12)) == (1));\n}\n",
      "timestamp": 1665510675,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the first digit of a given number.\nlong first_Digit(long n) {\n    // Your code here\n    while(n>=10)\n    {\n        n=n/10;\n    }\n    return n;\n}\nint main() {\n    auto candidate = first_Digit;\n    assert(candidate((123)) == (1));\n    assert(candidate((456)) == (4));\n    assert(candidate((12)) == (1));\n}\n",
      "timestamp": 1665510675,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the first digit of a given number.\nlong first_Digit(long n) {\n    // Your code here\n    while(n>=10)\n    {\n        n=n/10;\n    }\n    return n;\n}\nint main() {\n    auto candidate = first_Digit;\n    assert(candidate((123)) == (1));\n    assert(candidate((456)) == (4));\n    assert(candidate((12)) == (1));\n}\n",
      "timestamp": 1665510675,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the first digit of a given number.\nlong first_Digit(long n) {\n    // Write your code here\n    long rem;\n    while(n>0)\n    {\n        rem=n%10;\n        n=n/10;\n        if(n==0)\n        {\n            return rem;\n        }\n    }\n}\nint main() {\n    auto candidate = first_Digit;\n    assert(candidate((123)) == (1));\n    assert(candidate((456)) == (4));\n    assert(candidate((12)) == (1));\n}\n",
      "timestamp": 1666124358,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the first digit of a given number.\nlong first_Digit(long n) {\n    // Your code here\n    while(n>=10){\n        n=n/10;\n    }\n    return n;\n}\nint main() {\n    auto candidate = first_Digit;\n    assert(candidate((123)) == (1));\n    assert(candidate((456)) == (4));\n    assert(candidate((12)) == (1));\n}\n",
      "timestamp": 1665510675,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the first digit of a given number.\nlong first_Digit(long n) {\n    // Your code here\n    while(n>=10){\n        n=n/10;\n    }\n    return n;\n}\nint main() {\n    auto candidate = first_Digit;\n    assert(candidate((123)) == (1));\n    assert(candidate((456)) == (4));\n    assert(candidate((12)) == (1));\n}\n",
      "timestamp": 1665510675,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the first digit of a given number.\nlong first_Digit(long n) {\n    // Write your code here\n    while(n>=10)\n    {\n        n=n/10;\n    }\n    return n;\n}\nint main() {\n    auto candidate = first_Digit;\n    assert(candidate((123)) == (1));\n    assert(candidate((456)) == (4));\n    assert(candidate((12)) == (1));\n}\n",
      "timestamp": 1665510675,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the first digit of a given number.\nlong first_Digit(long n) {\n    // Your code here\n    long digit = n;\n    while(digit>=10){\n        digit = digit/10;\n    }\n    return digit;\n}\nint main() {\n    auto candidate = first_Digit;\n    assert(candidate((123)) == (1));\n    assert(candidate((456)) == (4));\n    assert(candidate((12)) == (1));\n}\n",
      "timestamp": 1666124358,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the first digit of a given number.\nlong first_Digit(long n) {\n    // Write your code here\n    while(n>=10)\n    {\n        n=n/10;\n    }\n    return n;\n}\nint main() {\n    auto candidate = first_Digit;\n    assert(candidate((123)) == (1));\n    assert(candidate((456)) == (4));\n    assert(candidate((12)) == (1));\n}\n",
      "timestamp": 1665510675,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the first digit of a given number.\nlong first_Digit(long n) {\n    //write your code here\n    while(n>=10){\n        n=n/10;\n    }\n    return n;\n}\nint main() {\n    auto candidate = first_Digit;\n    assert(candidate((123)) == (1));\n    assert(candidate((456)) == (4));\n    assert(candidate((12)) == (1));\n}\n",
      "timestamp": 1666124356,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the first digit of a given number.\nlong first_Digit(long n) {\n    // Your code here\n    while(n>=10)\n    {\n        n=n/10;\n    }\n    return n;\n}\nint main() {\n    auto candidate = first_Digit;\n    assert(candidate((123)) == (1));\n    assert(candidate((456)) == (4));\n    assert(candidate((12)) == (1));\n}\n",
      "timestamp": 1665510675,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the first digit of a given number.\nlong first_Digit(long n) {\n    while(n>=10) {\n        n = n/10;\n    }\n    return n;\n}\nint main() {\n    auto candidate = first_Digit;\n    assert(candidate((123)) == (1));\n    assert(candidate((456)) == (4));\n    assert(candidate((12)) == (1));\n}\n",
      "timestamp": 1666124356,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the first digit of a given number.\nlong first_Digit(long n) {\n    // Write your code here\n    while(n>=10)\n    {\n        n=n/10;\n    }\n    return n;\n}\nint main() {\n    auto candidate = first_Digit;\n    assert(candidate((123)) == (1));\n    assert(candidate((456)) == (4));\n    assert(candidate((12)) == (1));\n}\n",
      "timestamp": 1665510675,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the first digit of a given number.\nlong first_Digit(long n) {\n    // Write your code here\n    while(n>=10)\n    {\n        n=n/10;\n    }\n    return n;\n}\nint main() {\n    auto candidate = first_Digit;\n    assert(candidate((123)) == (1));\n    assert(candidate((456)) == (4));\n    assert(candidate((12)) == (1));\n}\n",
      "timestamp": 1665510675,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the first digit of a given number.\nlong first_Digit(long n) {\n    // Your code here\n    long digit;\n    while(n>=10)\n    {\n        n=n/10;\n    }\n    digit=n;\n    return digit;\n}\nint main() {\n    auto candidate = first_Digit;\n    assert(candidate((123)) == (1));\n    assert(candidate((456)) == (4));\n    assert(candidate((12)) == (1));\n}\n",
      "timestamp": 1666124358,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the first digit of a given number.\nlong first_Digit(long n) {\n    // Your code here\n    long a=n;\n    while(a>=10){\n        a=a/10;\n    }\n    return a;\n}\nint main() {\n    auto candidate = first_Digit;\n    assert(candidate((123)) == (1));\n    assert(candidate((456)) == (4));\n    assert(candidate((12)) == (1));\n}\n",
      "timestamp": 1666124358,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the first digit of a given number.\nlong first_Digit(long n) {\n    // Write your code here\n    long temp=n;\n    while(temp>=10){\n        temp=temp/10;\n    }\n    return temp;\n}\nint main() {\n    auto candidate = first_Digit;\n    assert(candidate((123)) == (1));\n    assert(candidate((456)) == (4));\n    assert(candidate((12)) == (1));\n}\n",
      "timestamp": 1666124358,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the first digit of a given number.\nlong first_Digit(long n) {\n    //write your code here\n    while(n>=10)\n    {\n        n=n/10;\n    }\n    return n;\n}\nint main() {\n    auto candidate = first_Digit;\n    assert(candidate((123)) == (1));\n    assert(candidate((456)) == (4));\n    assert(candidate((12)) == (1));\n}\n",
      "timestamp": 1666124356,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the first digit of a given number.\nlong first_Digit(long n) {\n    // Your code here\n    while(n>=10)\n    {\n        n=n/10;\n    }\n    return n;\n}\nint main() {\n    auto candidate = first_Digit;\n    assert(candidate((123)) == (1));\n    assert(candidate((456)) == (4));\n    assert(candidate((12)) == (1));\n}\n",
      "timestamp": 1665510675,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the first digit of a given number.\nlong first_Digit(long n) {\n    // Your code here\n    while(n>=10){\n        n=n/10;\n    }\n    return n;\n}\nint main() {\n    auto candidate = first_Digit;\n    assert(candidate((123)) == (1));\n    assert(candidate((456)) == (4));\n    assert(candidate((12)) == (1));\n}\n",
      "timestamp": 1665510675,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the first digit of a given number.\nlong first_Digit(long n) {\n    // Write your code here\n    while(n>=10){\n        n=n/10;\n    }\n    return n;\n}\nint main() {\n    auto candidate = first_Digit;\n    assert(candidate((123)) == (1));\n    assert(candidate((456)) == (4));\n    assert(candidate((12)) == (1));\n}\n",
      "timestamp": 1665510675,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the first digit of a given number.\nlong first_Digit(long n) {\n\t// Write your code here\n\t// return the first digit of n\n    if(n<0)\n        n=-n;\n    while(n>=10)\n    {\n        n=n/10;\n    }\n    return n;\n}\nint main() {\n    auto candidate = first_Digit;\n    assert(candidate((123)) == (1));\n    assert(candidate((456)) == (4));\n    assert(candidate((12)) == (1));\n}\n",
      "timestamp": 1666124358,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the first digit of a given number.\nlong first_Digit(long n) {\n    if(n<0)\n        n=-n;\n    while(n>=10)\n        n=n/10;\n    return n;\n}\nint main() {\n    auto candidate = first_Digit;\n    assert(candidate((123)) == (1));\n    assert(candidate((456)) == (4));\n    assert(candidate((12)) == (1));\n}\n",
      "timestamp": 1666124356,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the first digit of a given number.\nlong first_Digit(long n) {\n    // Your code here\n    while(n>=10)\n    {\n        n=n/10;\n    }\n    return n;\n}\nint main() {\n    auto candidate = first_Digit;\n    assert(candidate((123)) == (1));\n    assert(candidate((456)) == (4));\n    assert(candidate((12)) == (1));\n}\n",
      "timestamp": 1665510675,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the first digit of a given number.\nlong first_Digit(long n) {\n    // Write your code here\n    while(n>=10){\n        n=n/10;\n    }\n    return n;\n}\nint main() {\n    auto candidate = first_Digit;\n    assert(candidate((123)) == (1));\n    assert(candidate((456)) == (4));\n    assert(candidate((12)) == (1));\n}\n",
      "timestamp": 1665510675,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the first digit of a given number.\nlong first_Digit(long n) {\n    // Your code here\n    while(n>=10)\n    {\n        n=n/10;\n    }\n    return n;\n}\nint main() {\n    auto candidate = first_Digit;\n    assert(candidate((123)) == (1));\n    assert(candidate((456)) == (4));\n    assert(candidate((12)) == (1));\n}\n",
      "timestamp": 1665510675,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the first digit of a given number.\nlong first_Digit(long n) {\n    // Your code here\n    while(n>=10){\n        n=n/10;\n    }\n    return n;\n}\nint main() {\n    auto candidate = first_Digit;\n    assert(candidate((123)) == (1));\n    assert(candidate((456)) == (4));\n    assert(candidate((12)) == (1));\n}\n",
      "timestamp": 1665510675,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the first digit of a given number.\nlong first_Digit(long n) {\n    // Write your code here\n    long digit=0;\n    while(n>0){\n        digit=n%10;\n        n=n/10;\n    }\n    return digit;\n}\nint main() {\n    auto candidate = first_Digit;\n    assert(candidate((123)) == (1));\n    assert(candidate((456)) == (4));\n    assert(candidate((12)) == (1));\n}\n",
      "timestamp": 1666124358,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
{
  "name": "mbpp_292_find",
  "language": "cpp",
  "prompt": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find quotient of two numbers (rounded down to the nearest integer).\nlong find(long n, long m) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_292_find.py",
  "prompt_terminology": "verbatim",
  "tests": "}\nint main() {\n    auto candidate = find;\n    assert(candidate((10), (3)) == (3));\n    assert(candidate((4), (2)) == (2));\n    assert(candidate((20), (5)) == (4));\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    //write your code here\n    return n/m;",
    "    // Your code here\n    return n/m;",
    "    // Write your code here\n    return n/m;",
    "    // write your code here\n    return n/m;",
    "    // write your code here\n    return n/m;",
    "    return n/m;",
    "    //write your code here\n    return n/m;",
    "    return (n/m);",
    "    // Your code here\n    return n/m;",
    "    return n/m;",
    "    //write your code here\n    return n/m;",
    "    // Write your code here\n    return n/m;",
    "    return n/m;",
    "    // Your code here\n    return n/m;",
    "    //write your code here\n    return n/m;",
    "    return n/m;",
    "    // Write your code here\n    return n/m;",
    "    return n/m;",
    "    //write your code here\n    return n/m;",
    "    // Write your code here\n    return n/m;"
  ]
}
{
  "name": "mbpp_736_left_insertion",
  "language": "cpp",
  "prompt": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php\nlong left_insertion(std::vector<long> a, long x) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_736_left_insertion.py",
  "prompt_terminology": "verbatim",
  "tests": "}\nint main() {\n    auto candidate = left_insertion;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)4, (long)5})), (6)) == (4));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)4, (long)5})), (3)) == (2));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)4, (long)5})), (7)) == (4));\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    long left = 0;\n    long right = a.size() - 1;\n    long mid = 0;\n    while (left <= right) {\n        mid = (left + right) / 2;\n        if (a[mid] == x) {\n            return mid;\n        }\n        else if (a[mid] < x) {\n            left = mid + 1;\n        }\n        else {\n            right = mid - 1;\n        }\n    }\n    return left;",
    "    long low = 0;\n    long high = a.size() - 1;\n    long mid = 0;\n    while (low <= high) {\n        mid = (low + high) / 2;\n        if (a[mid] == x) {\n            return mid;\n        } else if (a[mid] > x) {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n    return low;",
    "    long left = 0;\n    long right = a.size() - 1;\n    long mid;\n    while (left <= right) {\n        mid = (left + right) / 2;\n        if (a[mid] == x) {\n            return mid;\n        } else if (a[mid] > x) {\n            right = mid - 1;\n        } else {\n            left = mid + 1;\n        }\n    }\n    return left;",
    "    long low = 0;\n    long high = a.size() - 1;\n    long mid;\n    while (low <= high) {\n        mid = (low + high) / 2;\n        if (a[mid] == x) {\n            return mid;\n        } else if (a[mid] > x) {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n    return low;",
    "\tlong low = 0;\n\tlong high = a.size() - 1;\n\tlong mid;\n\twhile (low < high) {\n\t\tmid = (low + high) / 2;\n\t\tif (x <= a[mid]) {\n\t\t\thigh = mid;\n\t\t}\n\t\telse {\n\t\t\tlow = mid + 1;\n\t\t}\n\t}\n\treturn low;",
    "    long low = 0;\n    long high = a.size() - 1;\n    long mid;\n    while (low <= high) {\n        mid = (low + high) / 2;\n        if (a[mid] == x) {\n            while (a[mid] == x) {\n                mid--;\n            }\n            return mid + 1;\n        }\n        else if (a[mid] < x) {\n            low = mid + 1;\n        }\n        else {\n            high = mid - 1;\n        }\n    }\n    return low;",
    "    long low = 0, high = a.size() - 1;\n    long mid;\n    while(low <= high) {\n        mid = (low + high) / 2;\n        if(a[mid] == x) {\n            return mid;\n        }\n        else if(a[mid] > x) {\n            high = mid - 1;\n        }\n        else {\n            low = mid + 1;\n        }\n    }\n    return low;",
    "    long low = 0;\n    long high = a.size() - 1;\n    long mid;\n    while (low <= high) {\n        mid = low + (high - low) / 2;\n        if (a[mid] == x) {\n            return mid;\n        }\n        else if (a[mid] > x) {\n            high = mid - 1;\n        }\n        else {\n            low = mid + 1;\n        }\n    }\n    return low;",
    "    long low = 0;\n    long high = a.size()-1;\n    long mid = 0;\n    while(low <= high) {\n        mid = (low + high)/2;\n        if(a[mid] == x) {\n            return mid;\n        }\n        else if(a[mid] > x) {\n            high = mid - 1;\n        }\n        else {\n            low = mid + 1;\n        }\n    }\n    return low;",
    "    long low = 0;\n    long high = a.size() - 1;\n    long mid = 0;\n    while (low <= high) {\n        mid = (low + high) / 2;\n        if (a[mid] == x) {\n            return mid;\n        } else if (a[mid] < x) {\n            low = mid + 1;\n        } else {\n            high = mid - 1;\n        }\n    }\n    return low;",
    "    long low = 0;\n    long high = a.size() - 1;\n    long mid = 0;\n    while (low <= high) {\n        mid = low + (high - low) / 2;\n        if (a[mid] == x) {\n            return mid;\n        } else if (a[mid] > x) {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n    return low;",
    "    long low = 0;\n    long high = a.size() - 1;\n    long mid;\n    while (low <= high) {\n        mid = (low + high) / 2;\n        if (a[mid] == x) {\n            return mid;\n        }\n        else if (a[mid] < x) {\n            low = mid + 1;\n        }\n        else {\n            high = mid - 1;\n        }\n    }\n    return low;",
    "    long low = 0, high = a.size() - 1;\n    while (low <= high) {\n        long mid = (low + high) / 2;\n        if (a[mid] == x) {\n            return mid;\n        } else if (a[mid] < x) {\n            low = mid + 1;\n        } else {\n            high = mid - 1;\n        }\n    }\n    return low;",
    "  long left = 0;\n  long right = a.size() - 1;\n  long mid = 0;\n  while (left <= right) {\n    mid = (left + right) / 2;\n    if (a[mid] == x) {\n      return mid;\n    } else if (a[mid] < x) {\n      left = mid + 1;\n    } else {\n      right = mid - 1;\n    }\n  }\n  return left;",
    "    long low = 0;\n    long high = a.size() - 1;\n    while (low <= high) {\n        long mid = (low + high) / 2;\n        if (a[mid] == x) {\n            return mid;\n        } else if (a[mid] < x) {\n            low = mid + 1;\n        } else {\n            high = mid - 1;\n        }\n    }\n    return low;",
    "    long left = 0, right = a.size() - 1;\n    while (left <= right) {\n        long mid = left + (right - left) / 2;\n        if (a[mid] == x) {\n            return mid;\n        } else if (a[mid] < x) {\n            left = mid + 1;\n        } else {\n            right = mid - 1;\n        }\n    }\n    return left;",
    "    // find the first element that is greater than or equal to x\n    long low = 0;\n    long high = a.size() - 1;\n    long mid;\n    while (low < high) {\n        mid = low + (high - low) / 2;\n        if (a[mid] < x) {\n            low = mid + 1;\n        } else {\n            high = mid;\n        }\n    }\n    return low;",
    "    long low = 0;\n    long high = a.size() - 1;\n    long mid;\n    while (low < high) {\n        mid = (low + high) / 2;\n        if (a[mid] >= x) {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n    if (a[low] < x) {\n        return low + 1;\n    }\n    return low;",
    "    long low = 0;\n    long high = a.size() - 1;\n    long mid;\n    while (low <= high) {\n        mid = (low + high) / 2;\n        if (a[mid] == x) {\n            return mid;\n        } else if (a[mid] > x) {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n    return low;",
    "    long left = 0;\n    long right = a.size() - 1;\n    while (left < right) {\n        long mid = (left + right) / 2;\n        if (a[mid] < x) {\n            left = mid + 1;\n        } else {\n            right = mid;\n        }\n    }\n    return left;",
    "    long low = 0;\n    long high = a.size() - 1;\n    long mid = 0;\n    while (low < high) {\n        mid = low + (high - low) / 2;\n        if (a[mid] < x) {\n            low = mid + 1;\n        } else {\n            high = mid;\n        }\n    }\n    return low;",
    "    long low = 0;\n    long high = a.size()-1;\n    long mid;\n    while(low < high) {\n        mid = (low + high) / 2;\n        if(a[mid] < x) {\n            low = mid + 1;\n        } else {\n            high = mid;\n        }\n    }\n    return low;",
    "    long low = 0;\n    long high = a.size() - 1;\n    long mid = 0;\n    while (low < high) {\n        mid = (low + high) / 2;\n        if (x <= a[mid]) {\n            high = mid;\n        } else {\n            low = mid + 1;\n        }\n    }\n    return low;",
    "    long low = 0;\n    long high = a.size() - 1;\n    long mid;\n    while (low <= high) {\n        mid = (low + high) / 2;\n        if (a[mid] == x) {\n            return mid;\n        } else if (a[mid] > x) {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n    return low;",
    "    long low = 0;\n    long high = a.size() - 1;\n    long mid = 0;\n    while (low <= high) {\n        mid = (low + high) / 2;\n        if (a[mid] < x) {\n            low = mid + 1;\n        } else {\n            high = mid - 1;\n        }\n    }\n    return low;",
    "    long low = 0;\n    long high = a.size() - 1;\n    long mid = 0;\n    while (low <= high) {\n        mid = (low + high) / 2;\n        if (a[mid] == x) {\n            return mid;\n        } else if (a[mid] > x) {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n    return low;",
    "    long low = 0;\n    long high = a.size() - 1;\n    long mid;\n    while (low < high) {\n        mid = low + (high - low) / 2;\n        if (a[mid] < x) {\n            low = mid + 1;\n        } else {\n            high = mid;\n        }\n    }\n    return low;",
    "    long low = 0, high = a.size() - 1;\n    while (low <= high) {\n        long mid = (low + high) / 2;\n        if (x <= a[mid]) {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n    return low;",
    "    long low = 0;\n    long high = a.size() - 1;\n    long mid;\n    while(low < high) {\n        mid = (low + high) / 2;\n        if(a[mid] < x) {\n            low = mid + 1;\n        } else {\n            high = mid;\n        }\n    }\n    return low;",
    "    long n = a.size();\n    long low = 0;\n    long high = n - 1;\n    long mid;\n    while (low <= high) {\n        mid = (low + high) / 2;\n        if (a[mid] == x) {\n            return mid;\n        } else if (a[mid] > x) {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n    return low;",
    "    long low = 0;\n    long high = a.size() - 1;\n    long mid = 0;\n    while (low <= high) {\n        mid = low + (high - low) / 2;\n        if (a[mid] == x) {\n            return mid;\n        } else if (a[mid] > x) {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n    return low;",
    "    long l = 0;\n    long r = a.size() - 1;\n    long mid;\n    while (l < r) {\n        mid = (l + r) / 2;\n        if (a[mid] < x) {\n            l = mid + 1;\n        } else {\n            r = mid;\n        }\n    }\n    return l;",
    "    long left = 0;\n    long right = a.size() - 1;\n    while (left <= right) {\n        long mid = left + (right - left) / 2;\n        if (a[mid] == x) {\n            return mid;\n        } else if (a[mid] > x) {\n            right = mid - 1;\n        } else {\n            left = mid + 1;\n        }\n    }\n    return left;",
    "    long low = 0;\n    long high = a.size() - 1;\n    while (low <= high) {\n        long mid = (low + high) / 2;\n        if (a[mid] == x) {\n            return mid;\n        } else if (a[mid] > x) {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n    return low;",
    "    long low = 0;\n    long high = a.size() - 1;\n    long mid = 0;\n    while (low < high) {\n        mid = (low + high) / 2;\n        if (a[mid] < x) {\n            low = mid + 1;\n        } else {\n            high = mid;\n        }\n    }\n    return low;",
    "\tlong low = 0;\n\tlong high = a.size() - 1;\n\tlong mid;\n\twhile (low <= high) {\n\t\tmid = (low + high) / 2;\n\t\tif (a[mid] == x) {\n\t\t\treturn mid;\n\t\t}\n\t\telse if (a[mid] < x) {\n\t\t\tlow = mid + 1;\n\t\t}\n\t\telse {\n\t\t\thigh = mid - 1;\n\t\t}\n\t}\n\treturn low;",
    "    long low = 0;\n    long high = a.size() - 1;\n    long mid = 0;\n    while (low < high) {\n        mid = (low + high) / 2;\n        if (a[mid] < x) {\n            low = mid + 1;\n        } else {\n            high = mid;\n        }\n    }\n    return low;",
    "    long low = 0;\n    long high = a.size() - 1;\n    long mid = 0;\n    while (low <= high) {\n        mid = (low + high) / 2;\n        if (x > a[mid]) {\n            low = mid + 1;\n        } else if (x < a[mid]) {\n            high = mid - 1;\n        } else {\n            return mid;\n        }\n    }\n    return low;",
    "    long low = 0;\n    long high = a.size() - 1;\n    long mid;\n    while (low <= high) {\n        mid = (low + high) / 2;\n        if (a[mid] == x) {\n            return mid;\n        } else if (a[mid] > x) {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n    return low;",
    "    long low = 0;\n    long high = a.size() - 1;\n    while (low <= high) {\n        long mid = (low + high) / 2;\n        if (x < a[mid]) {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n    return low;",
    "    if(a.size() == 0) {\n        return 0;\n    }\n    long l = 0;\n    long r = a.size() - 1;\n    while(l < r) {\n        long mid = (l + r) / 2;\n        if(a[mid] >= x) {\n            r = mid;\n        } else {\n            l = mid + 1;\n        }\n    }\n    return l;",
    "    long l = 0;\n    long r = a.size() - 1;\n    long mid;\n    while (l <= r) {\n        mid = (l + r) / 2;\n        if (a[mid] == x) {\n            return mid;\n        } else if (a[mid] < x) {\n            l = mid + 1;\n        } else {\n            r = mid - 1;\n        }\n    }\n    return l;",
    "    long low = 0;\n    long high = a.size() - 1;\n    long mid;\n    while (low < high) {\n        mid = (low + high) / 2;\n        if (a[mid] < x) {\n            low = mid + 1;\n        } else {\n            high = mid;\n        }\n    }\n    return low;",
    "    long low = 0;\n    long high = a.size() - 1;\n    long mid;\n    while (low <= high) {\n        mid = (low + high) / 2;\n        if (a[mid] == x) {\n            return mid;\n        } else if (a[mid] < x) {\n            low = mid + 1;\n        } else {\n            high = mid - 1;\n        }\n    }\n    return low;",
    "    long low = 0;\n    long high = a.size() - 1;\n    long mid;\n    while (low < high) {\n        mid = (low + high) / 2;\n        if (a[mid] < x) {\n            low = mid + 1;\n        } else {\n            high = mid;\n        }\n    }\n    return low;",
    "    long low = 0;\n    long high = a.size() - 1;\n    long mid;\n    while (low <= high) {\n        mid = (low + high) / 2;\n        if (a[mid] == x) {\n            return mid;\n        } else if (a[mid] > x) {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n    return low;",
    "    long low = 0;\n    long high = a.size() - 1;\n    while (low <= high) {\n        long mid = (low + high) / 2;\n        if (x > a[mid]) {\n            low = mid + 1;\n        } else {\n            high = mid - 1;\n        }\n    }\n    return low;",
    "    long low = 0;\n    long high = a.size() - 1;\n    long mid;\n    while (low < high) {\n        mid = (low + high) / 2;\n        if (x <= a[mid]) {\n            high = mid;\n        } else {\n            low = mid + 1;\n        }\n    }\n    return low;",
    "    long low = 0;\n    long high = a.size() - 1;\n    long mid;\n    while (low < high) {\n        mid = (low + high) / 2;\n        if (a[mid] < x) {\n            low = mid + 1;\n        } else {\n            high = mid;\n        }\n    }\n    return low;",
    "    long left = 0;\n    long right = a.size() - 1;\n    while (left <= right) {\n        long mid = (left + right) / 2;\n        if (a[mid] == x) {\n            return mid;\n        } else if (a[mid] > x) {\n            right = mid - 1;\n        } else {\n            left = mid + 1;\n        }\n    }\n    return left;",
    "    long low = 0;\n    long high = a.size() - 1;\n    long mid = 0;\n    while (low <= high) {\n        mid = (low + high) / 2;\n        if (a[mid] == x) {\n            return mid;\n        } else if (a[mid] < x) {\n            low = mid + 1;\n        } else {\n            high = mid - 1;\n        }\n    }\n    return low;",
    "    long left = 0;\n    long right = a.size() - 1;\n    long mid;\n    while (left <= right) {\n        mid = left + (right - left) / 2;\n        if (a[mid] == x) {\n            return mid;\n        } else if (a[mid] > x) {\n            right = mid - 1;\n        } else {\n            left = mid + 1;\n        }\n    }\n    return left;",
    "    long low = 0;\n    long high = a.size() - 1;\n    long mid = 0;\n    while(low <= high) {\n        mid = (low + high) / 2;\n        if(a[mid] == x) {\n            return mid;\n        }\n        else if(a[mid] > x) {\n            high = mid - 1;\n        }\n        else {\n            low = mid + 1;\n        }\n    }\n    return low;",
    "    long low = 0;\n    long high = a.size() - 1;\n    long mid = 0;\n    while (low <= high) {\n        mid = (low + high) / 2;\n        if (a[mid] == x) {\n            return mid;\n        } else if (a[mid] > x) {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n    return low;",
    "    long low = 0;\n    long high = a.size() - 1;\n    while (low <= high) {\n        long mid = (low + high) / 2;\n        if (a[mid] == x) {\n            return mid;\n        } else if (a[mid] > x) {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n    return low;",
    "    long low = 0;\n    long high = a.size() - 1;\n    long mid;\n    while (low <= high) {\n        mid = (low + high) / 2;\n        if (a[mid] == x) {\n            return mid;\n        } else if (a[mid] > x) {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n    return low;",
    "    long low = 0;\n    long high = a.size() - 1;\n    long mid = 0;\n    while (low <= high) {\n        mid = (low + high) / 2;\n        if (a[mid] == x) {\n            return mid;\n        } else if (a[mid] > x) {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n    return low;",
    "    long n = a.size();\n    if (x < a[0]) return 0;\n    if (x > a[n-1]) return n;\n    long left = 0, right = n-1;\n    while (left < right) {\n        long mid = left + (right - left) / 2;\n        if (x <= a[mid]) right = mid;\n        else left = mid + 1;\n    }\n    return left;",
    "\tlong l = 0, r = a.size() - 1;\n\twhile (l < r) {\n\t\tlong mid = (l + r) / 2;\n\t\tif (a[mid] < x) {\n\t\t\tl = mid + 1;\n\t\t} else {\n\t\t\tr = mid;\n\t\t}\n\t}\n\treturn l;",
    "    long n = a.size();\n    long low = 0;\n    long high = n - 1;\n    long mid;\n    while (low <= high) {\n        mid = (low + high) / 2;\n        if (a[mid] == x) {\n            return mid;\n        } else if (a[mid] > x) {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n    return low;",
    "    long low = 0;\n    long high = a.size() - 1;\n    while (low <= high) {\n        long mid = low + (high - low) / 2;\n        if (a[mid] == x) {\n            return mid;\n        }\n        if (a[mid] > x) {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n    return low;",
    "    long low = 0;\n    long high = a.size() - 1;\n    long mid;\n    while (low < high) {\n        mid = (low + high) / 2;\n        if (a[mid] < x) {\n            low = mid + 1;\n        } else {\n            high = mid;\n        }\n    }\n    return low;",
    "    long low = 0;\n    long high = a.size()-1;\n    long mid = 0;\n    while(low <= high) {\n        mid = (low + high) / 2;\n        if(a[mid] == x) {\n            return mid;\n        }\n        else if(a[mid] > x) {\n            high = mid - 1;\n        }\n        else {\n            low = mid + 1;\n        }\n    }\n    return low;",
    "    long low = 0;\n    long high = a.size() - 1;\n    while (low <= high) {\n        long mid = (low + high) / 2;\n        if (x < a[mid]) {\n            high = mid - 1;\n        } else if (x > a[mid]) {\n            low = mid + 1;\n        } else {\n            return mid;\n        }\n    }\n    return low;",
    "    long left = 0, right = a.size() - 1;\n    while (left < right) {\n        long mid = left + (right - left) / 2;\n        if (a[mid] < x) {\n            left = mid + 1;\n        } else {\n            right = mid;\n        }\n    }\n    return left;",
    "  long low = 0;\n  long high = a.size() - 1;\n  long mid;\n  while (low < high) {\n    mid = (low + high) / 2;\n    if (x <= a[mid]) {\n      high = mid;\n    } else {\n      low = mid + 1;\n    }\n  }\n  return low;",
    "    long low = 0, high = a.size() - 1;\n    long mid;\n    while(low <= high) {\n        mid = (low + high) / 2;\n        if(a[mid] == x) {\n            return mid;\n        } else if(a[mid] > x) {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n    return low;",
    "    long left = 0;\n    long right = a.size() - 1;\n    while (left <= right) {\n        long mid = (left + right) / 2;\n        if (a[mid] == x) {\n            return mid;\n        }\n        else if (a[mid] > x) {\n            right = mid - 1;\n        }\n        else {\n            left = mid + 1;\n        }\n    }\n    return left;",
    "    long low = 0, high = a.size() - 1;\n    while (low < high) {\n        long mid = (low + high) / 2;\n        if (a[mid] < x) {\n            low = mid + 1;\n        } else {\n            high = mid;\n        }\n    }\n    return low;",
    "    long n = a.size();\n    long low = 0;\n    long high = n - 1;\n    long mid = 0;\n    while (low <= high) {\n        mid = (low + high) / 2;\n        if (a[mid] == x) {\n            return mid;\n        } else if (a[mid] > x) {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n    return low;",
    "    long low = 0;\n    long high = a.size() - 1;\n    long mid = 0;\n    while(low <= high) {\n        mid = (low + high) / 2;\n        if(a[mid] == x) {\n            return mid;\n        }\n        else if(a[mid] < x) {\n            low = mid + 1;\n        }\n        else {\n            high = mid - 1;\n        }\n    }\n    return low;",
    "    long i = 0;\n    long j = a.size() - 1;\n    while (i < j) {\n        long m = (i + j) / 2;\n        if (a[m] < x) {\n            i = m + 1;\n        } else {\n            j = m;\n        }\n    }\n    return i;",
    "    long low = 0;\n    long high = a.size() - 1;\n    long mid;\n    while (low <= high) {\n        mid = (low + high) / 2;\n        if (a[mid] == x) {\n            return mid;\n        } else if (a[mid] > x) {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n    return low;",
    "    long left = 0;\n    long right = a.size() - 1;\n    while (left <= right) {\n        long mid = left + (right - left) / 2;\n        if (a[mid] == x) {\n            return mid;\n        } else if (a[mid] < x) {\n            left = mid + 1;\n        } else {\n            right = mid - 1;\n        }\n    }\n    return left;",
    "    long low = 0, high = a.size() - 1;\n    while (low <= high) {\n        long mid = (low + high) / 2;\n        if (a[mid] == x) {\n            return mid;\n        } else if (a[mid] > x) {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n    return low;",
    "    long low = 0, high = a.size() - 1;\n    while (low <= high) {\n        long mid = low + (high - low) / 2;\n        if (a[mid] == x) {\n            return mid;\n        } else if (a[mid] > x) {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n    return low;",
    "    long low = 0;\n    long high = a.size() - 1;\n    long mid;\n    while (low <= high) {\n        mid = (low + high) / 2;\n        if (a[mid] == x) {\n            return mid;\n        } else if (a[mid] > x) {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n    return low;",
    "    long low = 0;\n    long high = a.size() - 1;\n    long mid = 0;\n    while(low <= high) {\n        mid = (low + high) / 2;\n        if(a[mid] == x) {\n            return mid;\n        } else if(a[mid] > x) {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n    return low;",
    "    long low = 0;\n    long high = a.size() - 1;\n    long mid;\n    while(low <= high) {\n        mid = (low + high) / 2;\n        if(a[mid] == x) {\n            return mid;\n        } else if(a[mid] > x) {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n    return low;",
    "    long low = 0;\n    long high = a.size() - 1;\n    long mid = 0;\n    while (low <= high) {\n        mid = (low + high) / 2;\n        if (a[mid] == x) {\n            return mid;\n        } else if (a[mid] > x) {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n    return low;",
    "    long low = 0;\n    long high = a.size() - 1;\n    long mid;\n    while (low <= high) {\n        mid = (low + high) / 2;\n        if (a[mid] == x) {\n            return mid;\n        }\n        else if (a[mid] > x) {\n            high = mid - 1;\n        }\n        else {\n            low = mid + 1;\n        }\n    }\n    return low;",
    "    long low = 0;\n    long high = a.size() - 1;\n    long mid;\n    while (low < high) {\n        mid = (low + high) / 2;\n        if (a[mid] < x) {\n            low = mid + 1;\n        } else {\n            high = mid;\n        }\n    }\n    return low;",
    "\tlong low = 0;\n\tlong high = a.size() - 1;\n\tlong mid;\n\twhile (low < high) {\n\t\tmid = (low + high) / 2;\n\t\tif (x <= a[mid]) {\n\t\t\thigh = mid;\n\t\t}\n\t\telse {\n\t\t\tlow = mid + 1;\n\t\t}\n\t}\n\treturn low;",
    "    long low = 0;\n    long high = a.size() - 1;\n    long mid = 0;\n    while (low <= high) {\n        mid = (low + high) / 2;\n        if (a[mid] == x) {\n            return mid;\n        }\n        else if (a[mid] > x) {\n            high = mid - 1;\n        }\n        else {\n            low = mid + 1;\n        }\n    }\n    return mid;",
    "    long low = 0;\n    long high = a.size() - 1;\n    while(low <= high) {\n        long mid = (low + high) / 2;\n        if(a[mid] == x) {\n            return mid;\n        } else if(a[mid] < x) {\n            low = mid + 1;\n        } else {\n            high = mid - 1;\n        }\n    }\n    return low;",
    "    long low = 0;\n    long high = a.size() - 1;\n    long mid;\n    while(low <= high) {\n        mid = (low + high) / 2;\n        if(a[mid] == x) {\n            return mid;\n        } else if(a[mid] < x) {\n            low = mid + 1;\n        } else {\n            high = mid - 1;\n        }\n    }\n    return low;",
    "    long low = 0;\n    long high = a.size()-1;\n    long mid = 0;\n    while (low <= high) {\n        mid = (low+high)/2;\n        if (x <= a[mid]) {\n            high = mid-1;\n        } else {\n            low = mid+1;\n        }\n    }\n    return low;",
    "    long low = 0, high = a.size() - 1;\n    while (low <= high) {\n        long mid = low + (high - low) / 2;\n        if (x > a[mid]) {\n            low = mid + 1;\n        } else {\n            high = mid - 1;\n        }\n    }\n    return low;",
    "    long l = 0, r = a.size() - 1;\n    while (l < r) {\n        long m = (l + r) / 2;\n        if (a[m] < x) {\n            l = m + 1;\n        } else {\n            r = m;\n        }\n    }\n    return l;",
    "    long low = 0;\n    long high = a.size() - 1;\n    long mid;\n    while (low <= high) {\n        mid = (low + high) / 2;\n        if (a[mid] == x) {\n            return mid;\n        } else if (a[mid] > x) {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n    return low;",
    "    long left = 0;\n    long right = a.size() - 1;\n    long mid;\n    while (left <= right) {\n        mid = (left + right) / 2;\n        if (a[mid] == x) {\n            return mid;\n        }\n        if (a[mid] < x) {\n            left = mid + 1;\n        } else {\n            right = mid - 1;\n        }\n    }\n    return left;",
    "    long low = 0;\n    long high = a.size() - 1;\n    long mid = 0;\n    while (low <= high) {\n        mid = (low + high) / 2;\n        if (a[mid] == x) {\n            return mid;\n        }\n        if (a[mid] > x) {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n    return low;",
    "    long low = 0;\n    long high = a.size() - 1;\n    long mid;\n    while (low <= high) {\n        mid = (low + high) / 2;\n        if (x > a[mid]) {\n            low = mid + 1;\n        } else {\n            high = mid - 1;\n        }\n    }\n    return low;",
    "    long low = 0;\n    long high = a.size() - 1;\n    while (low <= high) {\n        long mid = (low + high) / 2;\n        if (a[mid] == x) {\n            return mid;\n        }\n        else if (a[mid] > x) {\n            high = mid - 1;\n        }\n        else {\n            low = mid + 1;\n        }\n    }\n    return low;",
    "    long low = 0;\n    long high = a.size() - 1;\n    long mid = 0;\n    while (low <= high) {\n        mid = (low + high) / 2;\n        if (a[mid] == x) {\n            return mid;\n        }\n        if (a[mid] > x) {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n    return low;",
    "    long low = 0, high = a.size() - 1;\n    while (low <= high) {\n        long mid = (low + high) / 2;\n        if (a[mid] == x) {\n            return mid;\n        }\n        else if (a[mid] > x) {\n            high = mid - 1;\n        }\n        else {\n            low = mid + 1;\n        }\n    }\n    return low;",
    "    long low = 0;\n    long high = a.size() - 1;\n    long mid;\n    while (low <= high) {\n        mid = (low + high) / 2;\n        if (x > a[mid]) {\n            low = mid + 1;\n        } else {\n            high = mid - 1;\n        }\n    }\n    return low;",
    "    long low = 0;\n    long high = a.size() - 1;\n    while (low < high) {\n        long mid = (low + high) / 2;\n        if (a[mid] < x) {\n            low = mid + 1;\n        } else {\n            high = mid;\n        }\n    }\n    return low;",
    "    long low = 0;\n    long high = a.size() - 1;\n    long mid;\n    while (low < high) {\n        mid = (low + high) / 2;\n        if (a[mid] < x) {\n            low = mid + 1;\n        } else {\n            high = mid;\n        }\n    }\n    return low;",
    "    long low = 0;\n    long high = a.size() - 1;\n    long mid = 0;\n    while (low <= high) {\n        mid = (low + high) / 2;\n        if (a[mid] == x) {\n            return mid;\n        } else if (a[mid] > x) {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n    return low;",
    "    long low = 0;\n    long high = a.size() - 1;\n    long mid = 0;\n    while (low < high) {\n        mid = (low + high) / 2;\n        if (a[mid] < x) {\n            low = mid + 1;\n        } else {\n            high = mid;\n        }\n    }\n    return low;",
    "    long l = 0, r = a.size() - 1;\n    while (l <= r) {\n        long m = l + (r - l) / 2;\n        if (a[m] == x) {\n            return m;\n        } else if (a[m] > x) {\n            r = m - 1;\n        } else {\n            l = m + 1;\n        }\n    }\n    return l;",
    "    long low = 0;\n    long high = a.size() - 1;\n    while (low <= high) {\n        long mid = (low + high) / 2;\n        if (a[mid] == x) {\n            return mid;\n        } else if (a[mid] > x) {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n    return low;",
    "    long low = 0;\n    long high = a.size() - 1;\n    long mid;\n    while (low < high) {\n        mid = (low + high) / 2;\n        if (a[mid] < x) {\n            low = mid + 1;\n        } else {\n            high = mid;\n        }\n    }\n    return low;",
    "\tlong low = 0;\n\tlong high = a.size() - 1;\n\tlong mid;\n\twhile (low < high) {\n\t\tmid = (low + high) / 2;\n\t\tif (a[mid] < x) {\n\t\t\tlow = mid + 1;\n\t\t}\n\t\telse {\n\t\t\thigh = mid;\n\t\t}\n\t}\n\treturn low;",
    "    long low = 0, high = a.size() - 1;\n    while (low <= high) {\n        long mid = (low + high) / 2;\n        if (a[mid] == x) {\n            return mid;\n        } else if (a[mid] < x) {\n            low = mid + 1;\n        } else {\n            high = mid - 1;\n        }\n    }\n    return low;",
    "    long low = 0;\n    long high = a.size() - 1;\n    long mid = 0;\n    while (low <= high) {\n        mid = (low + high) / 2;\n        if (a[mid] < x) {\n            low = mid + 1;\n        } else {\n            high = mid - 1;\n        }\n    }\n    return low;",
    "    long low = 0;\n    long high = a.size() - 1;\n    long mid;\n    while (low < high) {\n        mid = (low + high) / 2;\n        if (a[mid] < x) {\n            low = mid + 1;\n        } else {\n            high = mid;\n        }\n    }\n    return low;",
    "    long low = 0;\n    long high = a.size() - 1;\n    long mid;\n    while (low <= high) {\n        mid = (low + high) / 2;\n        if (a[mid] == x) {\n            return mid;\n        } else if (a[mid] > x) {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n    return low;",
    "    long low = 0;\n    long high = a.size() - 1;\n    long mid;\n    while (low <= high) {\n        mid = (low + high) / 2;\n        if (a[mid] == x) {\n            return mid;\n        } else if (a[mid] > x) {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n    return low;",
    "    long low = 0;\n    long high = a.size() - 1;\n    long mid;\n    while (low <= high) {\n        mid = (low + high) / 2;\n        if (x > a[mid]) {\n            low = mid + 1;\n        } else if (x < a[mid]) {\n            high = mid - 1;\n        } else {\n            return mid;\n        }\n    }\n    return low;",
    "    long low = 0;\n    long high = a.size() - 1;\n    long mid;\n    while (low <= high) {\n        mid = low + (high - low) / 2;\n        if (a[mid] == x) {\n            return mid;\n        } else if (a[mid] > x) {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n    return low;",
    "    long left = 0;\n    long right = a.size() - 1;\n    long mid;\n    while (left <= right) {\n        mid = (left + right) / 2;\n        if (a[mid] == x) {\n            return mid;\n        } else if (a[mid] > x) {\n            right = mid - 1;\n        } else {\n            left = mid + 1;\n        }\n    }\n    return left;",
    "    long low = 0;\n    long high = a.size() - 1;\n    long mid;\n    while (low < high) {\n        mid = (low + high) / 2;\n        if (a[mid] < x) {\n            low = mid + 1;\n        } else {\n            high = mid;\n        }\n    }\n    return low;",
    "    long low = 0;\n    long high = a.size() - 1;\n    long mid;\n    while (low <= high) {\n        mid = (low + high) / 2;\n        if (a[mid] == x) {\n            return mid;\n        } else if (a[mid] < x) {\n            low = mid + 1;\n        } else {\n            high = mid - 1;\n        }\n    }\n    return low;",
    "    long low = 0;\n    long high = a.size() - 1;\n    while (low <= high) {\n        long mid = (low + high) / 2;\n        if (a[mid] == x) {\n            return mid;\n        }\n        if (a[mid] > x) {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n    return low;",
    "    long low = 0;\n    long high = a.size() - 1;\n    long mid = 0;\n    while (low <= high) {\n        mid = (low + high) / 2;\n        if (a[mid] == x) {\n            return mid;\n        }\n        if (a[mid] > x) {\n            high = mid - 1;\n        }\n        else {\n            low = mid + 1;\n        }\n    }\n    return low;",
    "    long low = 0;\n    long high = a.size() - 1;\n    while (low <= high) {\n        long mid = (low + high) / 2;\n        if (x > a[mid]) {\n            low = mid + 1;\n        } else if (x < a[mid]) {\n            high = mid - 1;\n        } else {\n            return mid;\n        }\n    }\n    return low;",
    "    long low = 0;\n    long high = a.size() - 1;\n    long mid;\n    while (low <= high) {\n        mid = (low + high) / 2;\n        if (x > a[mid]) {\n            low = mid + 1;\n        } else if (x < a[mid]) {\n            high = mid - 1;\n        } else {\n            return mid;\n        }\n    }\n    return low;",
    "    long low = 0;\n    long high = a.size() - 1;\n    long mid = 0;\n    while (low < high) {\n        mid = (low + high) / 2;\n        if (a[mid] < x) {\n            low = mid + 1;\n        } else {\n            high = mid;\n        }\n    }\n    return low;",
    "    long low = 0;\n    long high = a.size() - 1;\n    long mid = 0;\n    while (low <= high) {\n        mid = (low + high) / 2;\n        if (a[mid] < x) {\n            low = mid + 1;\n        } else {\n            high = mid - 1;\n        }\n    }\n    return low;",
    "    long low = 0;\n    long high = a.size() - 1;\n    long mid;\n    while (low <= high) {\n        mid = (low + high) / 2;\n        if (x > a[mid]) {\n            low = mid + 1;\n        } else if (x < a[mid]) {\n            high = mid - 1;\n        } else {\n            return mid;\n        }\n    }\n    return low;",
    "    long low = 0;\n    long high = a.size() - 1;\n    long mid;\n    while(low <= high) {\n        mid = (low + high) / 2;\n        if(a[mid] == x) {\n            return mid;\n        }\n        else if(a[mid] > x) {\n            high = mid - 1;\n        }\n        else {\n            low = mid + 1;\n        }\n    }\n    return low;",
    "    long low = 0;\n    long high = a.size() - 1;\n    long mid = 0;\n    while(low <= high) {\n        mid = (low + high) / 2;\n        if(a[mid] == x) {\n            return mid;\n        } else if(a[mid] > x) {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n    return low;",
    "    long n = a.size();\n    long low = 0;\n    long high = n - 1;\n    long mid;\n    while (low <= high) {\n        mid = (low + high) / 2;\n        if (a[mid] == x) {\n            return mid;\n        }\n        if (a[mid] > x) {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n    return low;",
    "    long low = 0;\n    long high = a.size() - 1;\n    long mid;\n    while(low < high) {\n        mid = (low + high) / 2;\n        if(a[mid] < x) {\n            low = mid + 1;\n        } else {\n            high = mid;\n        }\n    }\n    return low;",
    "    long left = 0;\n    long right = a.size() - 1;\n    long mid;\n    while (left < right) {\n        mid = (left + right) / 2;\n        if (a[mid] < x) {\n            left = mid + 1;\n        } else {\n            right = mid;\n        }\n    }\n    return left;",
    "    long low = 0;\n    long high = a.size() - 1;\n    while (low <= high) {\n        long mid = (low + high) / 2;\n        if (a[mid] == x) {\n            return mid;\n        } else if (a[mid] > x) {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n    return low;",
    "    long low = 0;\n    long high = a.size() - 1;\n    long mid;\n    while (low <= high) {\n        mid = (low + high) / 2;\n        if (a[mid] == x) {\n            return mid;\n        } else if (a[mid] > x) {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n    return low;",
    "    long low = 0;\n    long high = a.size() - 1;\n    long mid;\n    while (low <= high) {\n        mid = (low + high) / 2;\n        if (a[mid] == x) {\n            return mid;\n        } else if (a[mid] < x) {\n            low = mid + 1;\n        } else {\n            high = mid - 1;\n        }\n    }\n    return low;",
    "    long low = 0;\n    long high = a.size() - 1;\n    long mid;\n    while (low < high) {\n        mid = (low + high) / 2;\n        if (x <= a[mid]) {\n            high = mid;\n        } else {\n            low = mid + 1;\n        }\n    }\n    return low;",
    "  long low = 0;\n  long high = a.size() - 1;\n  long mid;\n  while (low <= high) {\n    mid = (low + high) / 2;\n    if (a[mid] == x) {\n      return mid;\n    } else if (a[mid] > x) {\n      high = mid - 1;\n    } else {\n      low = mid + 1;\n    }\n  }\n  return low;",
    "    long low = 0;\n    long high = a.size() - 1;\n    long mid;\n    while (low <= high) {\n        mid = (low + high) / 2;\n        if (x > a[mid]) {\n            low = mid + 1;\n        } else {\n            high = mid - 1;\n        }\n    }\n    return low;",
    "    long left = 0, right = a.size() - 1;\n    while (left <= right) {\n        long mid = left + (right - left) / 2;\n        if (a[mid] == x) {\n            return mid;\n        } else if (a[mid] > x) {\n            right = mid - 1;\n        } else {\n            left = mid + 1;\n        }\n    }\n    return left;",
    "    long low = 0;\n    long high = a.size() - 1;\n    long mid;\n    while(low <= high) {\n        mid = (low + high) / 2;\n        if(a[mid] == x) {\n            return mid;\n        }\n        else if(a[mid] > x) {\n            high = mid - 1;\n        }\n        else {\n            low = mid + 1;\n        }\n    }\n    return low;",
    "    long low = 0;\n    long high = a.size() - 1;\n    long mid;\n    while(low <= high) {\n        mid = (low + high) / 2;\n        if(a[mid] == x) {\n            return mid;\n        }\n        else if(a[mid] > x) {\n            high = mid - 1;\n        }\n        else {\n            low = mid + 1;\n        }\n    }\n    return low;",
    "    long low = 0;\n    long high = a.size() - 1;\n    long mid = 0;\n    while (low <= high) {\n        mid = (low + high) / 2;\n        if (a[mid] == x) {\n            return mid;\n        } else if (a[mid] > x) {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n    return low;",
    "    long low = 0;\n    long high = a.size() - 1;\n    long mid;\n    while (low <= high) {\n        mid = (low + high) / 2;\n        if (a[mid] == x) {\n            return mid;\n        } else if (a[mid] > x) {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n    return low;",
    "    long n = a.size();\n    long left = 0;\n    long right = n - 1;\n    long mid = 0;\n    while (left <= right) {\n        mid = (left + right) / 2;\n        if (a[mid] > x) {\n            right = mid - 1;\n        } else if (a[mid] < x) {\n            left = mid + 1;\n        } else {\n            return mid;\n        }\n    }\n    return left;",
    "    long low = 0;\n    long high = a.size()-1;\n    long mid = 0;\n    while(low <= high) {\n        mid = (low+high)/2;\n        if(a[mid] == x) {\n            return mid;\n        }\n        else if(a[mid] < x) {\n            low = mid+1;\n        }\n        else {\n            high = mid-1;\n        }\n    }\n    return low;",
    "    long low = 0, high = a.size() - 1;\n    while(low <= high) {\n        long mid = (low + high) / 2;\n        if(a[mid] == x) {\n            if(mid == 0) {\n                return mid;\n            }\n            if(a[mid - 1] != x) {\n                return mid;\n            }\n            high = mid - 1;\n        }\n        else if(a[mid] > x) {\n            high = mid - 1;\n        }\n        else {\n            low = mid + 1;\n        }\n    }\n    return -1;",
    "    long low = 0;\n    long high = a.size() - 1;\n    long mid = 0;\n    while (low <= high) {\n        mid = (low + high) / 2;\n        if (a[mid] == x) {\n            return mid;\n        } else if (a[mid] > x) {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n    return low;",
    "    long low = 0;\n    long high = a.size() - 1;\n    long mid;\n    while (low <= high) {\n        mid = (low + high) / 2;\n        if (a[mid] == x) {\n            return mid;\n        }\n        else if (a[mid] < x) {\n            low = mid + 1;\n        }\n        else {\n            high = mid - 1;\n        }\n    }\n    return low;",
    "    long left = 0;\n    long right = a.size() - 1;\n    long mid = 0;\n    while (left <= right) {\n        mid = (left + right) / 2;\n        if (a[mid] == x) {\n            return mid;\n        }\n        if (a[mid] > x) {\n            right = mid - 1;\n        } else {\n            left = mid + 1;\n        }\n    }\n    return left;",
    "    long low = 0;\n    long high = a.size() - 1;\n    while (low < high) {\n        long mid = (low + high) / 2;\n        if (a[mid] < x) {\n            low = mid + 1;\n        } else {\n            high = mid;\n        }\n    }\n    return low;",
    "    long low = 0;\n    long high = a.size() - 1;\n    long mid;\n    while(low <= high) {\n        mid = (low + high) / 2;\n        if(a[mid] == x) {\n            return mid;\n        } else if(a[mid] > x) {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n    return low;",
    "    long low = 0;\n    long high = a.size() - 1;\n    long mid;\n    while (low < high) {\n        mid = low + (high - low) / 2;\n        if (a[mid] < x) {\n            low = mid + 1;\n        } else {\n            high = mid;\n        }\n    }\n    return low;",
    "    long low = 0;\n    long high = a.size() - 1;\n    long mid;\n    while (low < high) {\n        mid = (low + high) / 2;\n        if (a[mid] < x) {\n            low = mid + 1;\n        } else {\n            high = mid;\n        }\n    }\n    return low;",
    "    long low = 0, high = a.size() - 1;\n    while (low <= high) {\n        long mid = (low + high) / 2;\n        if (x > a[mid]) {\n            low = mid + 1;\n        } else {\n            high = mid - 1;\n        }\n    }\n    return low;",
    "    long low = 0;\n    long high = a.size() - 1;\n    long mid;\n    while (low <= high) {\n        mid = (low + high) / 2;\n        if (a[mid] == x) {\n            return mid;\n        } else if (a[mid] > x) {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n    return low;",
    "  long low = 0;\n  long high = a.size() - 1;\n  long mid = 0;\n  while(low <= high) {\n    mid = (low + high) / 2;\n    if(a[mid] == x) {\n      return mid;\n    }\n    else if(a[mid] > x) {\n      high = mid - 1;\n    }\n    else {\n      low = mid + 1;\n    }\n  }\n  return low;",
    "    long low = 0;\n    long high = a.size() - 1;\n    long mid;\n    while (low <= high) {\n        mid = (low + high) / 2;\n        if (x > a[mid]) {\n            low = mid + 1;\n        } else {\n            high = mid - 1;\n        }\n    }\n    return low;",
    "    long left = 0;\n    long right = a.size() - 1;\n    while (left <= right) {\n        long mid = left + (right - left) / 2;\n        if (x > a[mid]) {\n            left = mid + 1;\n        } else {\n            right = mid - 1;\n        }\n    }\n    return left;",
    "    long low = 0;\n    long high = a.size() - 1;\n    long mid = 0;\n    while (low <= high) {\n        mid = (low + high) / 2;\n        if (a[mid] == x) {\n            return mid;\n        } else if (a[mid] > x) {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n    return low;",
    "    long low = 0;\n    long high = a.size() - 1;\n    long mid;\n    while (low <= high) {\n        mid = (low + high) / 2;\n        if (a[mid] == x) {\n            return mid;\n        }\n        else if (a[mid] > x) {\n            high = mid - 1;\n        }\n        else {\n            low = mid + 1;\n        }\n    }\n    return low;",
    "    long low = 0;\n    long high = a.size() - 1;\n    long mid;\n    while (low <= high) {\n        mid = (low + high) / 2;\n        if (a[mid] == x) {\n            return mid;\n        } else if (a[mid] > x) {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n    return low;",
    "    long low = 0;\n    long high = a.size() - 1;\n    long mid = 0;\n    while (low <= high) {\n        mid = (low + high) / 2;\n        if (a[mid] == x) {\n            return mid;\n        } else if (a[mid] > x) {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n    return low;",
    "    long left = 0;\n    long right = a.size() - 1;\n    while (left <= right) {\n        long mid = (left + right) / 2;\n        if (a[mid] == x) {\n            return mid;\n        } else if (a[mid] > x) {\n            right = mid - 1;\n        } else {\n            left = mid + 1;\n        }\n    }\n    return left;",
    "    long low = 0;\n    long high = a.size() - 1;\n    long mid;\n    while (low <= high) {\n        mid = (low + high) / 2;\n        if (x > a[mid]) {\n            low = mid + 1;\n        } else if (x < a[mid]) {\n            high = mid - 1;\n        } else {\n            return mid;\n        }\n    }\n    return low;",
    "    long low = 0;\n    long high = a.size() - 1;\n    long mid;\n    while(low <= high) {\n        mid = (low + high) / 2;\n        if(a[mid] == x) {\n            return mid;\n        } else if(a[mid] > x) {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n    return low;",
    "\tlong low = 0;\n\tlong high = a.size() - 1;\n\tlong mid;\n\twhile (low <= high) {\n\t\tmid = (low + high) / 2;\n\t\tif (a[mid] == x) {\n\t\t\treturn mid;\n\t\t}\n\t\telse if (a[mid] < x) {\n\t\t\tlow = mid + 1;\n\t\t}\n\t\telse {\n\t\t\thigh = mid - 1;\n\t\t}\n\t}\n\treturn low;",
    "    long low = 0;\n    long high = a.size() - 1;\n    long mid;\n    while(low <= high) {\n        mid = (low + high) / 2;\n        if(a[mid] == x) {\n            return mid;\n        } else if(a[mid] < x) {\n            low = mid + 1;\n        } else {\n            high = mid - 1;\n        }\n    }\n    return low;",
    "    long low = 0;\n    long high = a.size() - 1;\n    long mid;\n    while (low < high) {\n        mid = (low + high) / 2;\n        if (a[mid] < x) {\n            low = mid + 1;\n        } else {\n            high = mid;\n        }\n    }\n    return low;",
    "    long n = a.size();\n    long l = 0, r = n - 1;\n    while (l < r) {\n        long mid = (l + r) / 2;\n        if (a[mid] >= x) {\n            r = mid;\n        } else {\n            l = mid + 1;\n        }\n    }\n    return l;",
    "    long low = 0;\n    long high = a.size() - 1;\n    long mid = 0;\n    while (low <= high) {\n        mid = low + (high - low) / 2;\n        if (a[mid] == x) {\n            return mid;\n        } else if (a[mid] > x) {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n    return low;",
    "    long low = 0;\n    long high = a.size()-1;\n    long mid = 0;\n    while(low <= high) {\n        mid = low + (high-low)/2;\n        if(a[mid] == x) {\n            return mid;\n        } else if(a[mid] > x) {\n            high = mid-1;\n        } else {\n            low = mid+1;\n        }\n    }\n    return low;",
    "    long low = 0;\n    long high = a.size() - 1;\n    long mid;\n    while (low < high) {\n        mid = (low + high) / 2;\n        if (a[mid] < x) {\n            low = mid + 1;\n        } else {\n            high = mid;\n        }\n    }\n    return low;",
    "    long low = 0;\n    long high = a.size() - 1;\n    while (low <= high) {\n        long mid = (low + high) / 2;\n        if (a[mid] == x) {\n            return mid;\n        } else if (a[mid] > x) {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n    return low;",
    "    long low = 0;\n    long high = a.size() - 1;\n    long mid = 0;\n    while (low < high) {\n        mid = (low + high) / 2;\n        if (x <= a[mid]) {\n            high = mid;\n        } else {\n            low = mid + 1;\n        }\n    }\n    return low;",
    "    long low = 0;\n    long high = a.size()-1;\n    long mid = 0;\n    while(low <= high) {\n        mid = (low+high)/2;\n        if(a[mid] == x) {\n            return mid;\n        }\n        else if(a[mid] < x) {\n            low = mid+1;\n        }\n        else {\n            high = mid-1;\n        }\n    }\n    return low;",
    "    long n = a.size();\n    long low = 0;\n    long high = n - 1;\n    while (low <= high) {\n        long mid = low + (high - low) / 2;\n        if (a[mid] == x) {\n            return mid;\n        } else if (a[mid] > x) {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n    return low;",
    "    long low = 0;\n    long high = a.size() - 1;\n    long mid;\n    while (low <= high) {\n        mid = (low + high) / 2;\n        if (a[mid] == x) {\n            return mid;\n        } else if (a[mid] > x) {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n    return low;",
    "    long low = 0, high = a.size() - 1;\n    while (low <= high) {\n        long mid = (low + high) / 2;\n        if (a[mid] == x) {\n            return mid;\n        } else if (a[mid] > x) {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n    return low;",
    "    long low = 0;\n    long high = a.size() - 1;\n    long mid;\n    while (low <= high) {\n        mid = (low + high) / 2;\n        if (x == a[mid]) {\n            return mid;\n        } else if (x < a[mid]) {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n    return low;",
    "    long n = a.size();\n    long l = 0, r = n - 1;\n    while (l < r) {\n        long mid = (l + r) / 2;\n        if (a[mid] < x) {\n            l = mid + 1;\n        } else {\n            r = mid;\n        }\n    }\n    return l;",
    "    long low = 0, high = a.size() - 1;\n    while (low < high) {\n        long mid = (low + high) / 2;\n        if (a[mid] < x) {\n            low = mid + 1;\n        } else {\n            high = mid;\n        }\n    }\n    return low;",
    "    long low = 0;\n    long high = a.size() - 1;\n    long mid;\n    while (low <= high) {\n        mid = (low + high) / 2;\n        if (a[mid] == x) {\n            return mid;\n        } else if (a[mid] > x) {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n    return low;",
    "    long low = 0;\n    long high = a.size() - 1;\n    long mid = 0;\n    while (low <= high) {\n        mid = (low + high) / 2;\n        if (a[mid] == x) {\n            return mid;\n        } else if (a[mid] > x) {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n    return low;",
    "    long low = 0, high = a.size() - 1;\n    long mid;\n    while (low <= high) {\n        mid = (low + high) / 2;\n        if (a[mid] == x) {\n            return mid;\n        }\n        else if (a[mid] > x) {\n            high = mid - 1;\n        }\n        else {\n            low = mid + 1;\n        }\n    }\n    return low;",
    "    long low = 0;\n    long high = a.size() - 1;\n    long mid;\n    while (low <= high) {\n        mid = (low + high) / 2;\n        if (a[mid] == x) {\n            return mid;\n        } else if (a[mid] > x) {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n    return low;",
    "    long low = 0;\n    long high = a.size() - 1;\n    long mid;\n    while (low <= high) {\n        mid = (low + high) / 2;\n        if (a[mid] == x) {\n            return mid;\n        } else if (a[mid] > x) {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n    return low;",
    "    long low = 0;\n    long high = a.size() - 1;\n    long mid;\n    while (low < high) {\n        mid = (low + high) / 2;\n        if (x <= a[mid]) {\n            high = mid;\n        } else {\n            low = mid + 1;\n        }\n    }\n    return low;",
    "    long low = 0;\n    long high = a.size() - 1;\n    long mid;\n    while (low < high) {\n        mid = (low + high) / 2;\n        if (a[mid] < x) {\n            low = mid + 1;\n        } else {\n            high = mid;\n        }\n    }\n    return low;",
    "\tlong low = 0;\n\tlong high = a.size() - 1;\n\tlong mid;\n\twhile (low < high) {\n\t\tmid = (low + high) / 2;\n\t\tif (x <= a[mid]) {\n\t\t\thigh = mid;\n\t\t}\n\t\telse {\n\t\t\tlow = mid + 1;\n\t\t}\n\t}\n\treturn low;",
    "    long low = 0;\n    long high = a.size() - 1;\n    long mid = 0;\n    while (low <= high) {\n        mid = (low + high) / 2;\n        if (x > a[mid]) {\n            low = mid + 1;\n        } else if (x < a[mid]) {\n            high = mid - 1;\n        } else {\n            return mid;\n        }\n    }\n    return low;",
    "    long low = 0;\n    long high = a.size() - 1;\n    long mid = 0;\n    while (low <= high) {\n        mid = (low + high) / 2;\n        if (x == a[mid]) {\n            return mid;\n        } else if (x < a[mid]) {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n    return low;",
    "    long low = 0;\n    long high = a.size() - 1;\n    long mid;\n    while (low < high) {\n        mid = (low + high) / 2;\n        if (a[mid] < x) {\n            low = mid + 1;\n        } else {\n            high = mid;\n        }\n    }\n    return low;",
    "    long low = 0;\n    long high = a.size() - 1;\n    long mid;\n    while (low < high) {\n        mid = (low + high) / 2;\n        if (x <= a[mid]) {\n            high = mid;\n        } else {\n            low = mid + 1;\n        }\n    }\n    return low;",
    "    long low = 0, high = a.size() - 1, mid;\n    while (low < high) {\n        mid = (low + high) / 2;\n        if (a[mid] < x) {\n            low = mid + 1;\n        } else {\n            high = mid;\n        }\n    }\n    return low;",
    "    long n = a.size();\n    long low = 0;\n    long high = n-1;\n    long mid;\n    while(low <= high) {\n        mid = low + (high - low)/2;\n        if(a[mid] == x) {\n            return mid;\n        }\n        else if(a[mid] > x) {\n            high = mid - 1;\n        }\n        else {\n            low = mid + 1;\n        }\n    }\n    return low;",
    "    long low = 0;\n    long high = a.size() - 1;\n    long mid;\n    while (low < high) {\n        mid = (low + high) / 2;\n        if (a[mid] < x) {\n            low = mid + 1;\n        } else {\n            high = mid;\n        }\n    }\n    return low;",
    "    long low = 0;\n    long high = a.size() - 1;\n    long mid = 0;\n    while (low <= high) {\n        mid = (low + high) / 2;\n        if (a[mid] == x) {\n            return mid;\n        }\n        else if (a[mid] > x) {\n            high = mid - 1;\n        }\n        else {\n            low = mid + 1;\n        }\n    }\n    return low;",
    "    long low = 0, high = a.size() - 1;\n    while (low <= high) {\n        long mid = (low + high) / 2;\n        if (a[mid] == x) {\n            return mid;\n        }\n        else if (a[mid] > x) {\n            high = mid - 1;\n        }\n        else {\n            low = mid + 1;\n        }\n    }\n    return low;",
    "    long low = 0;\n    long high = a.size() - 1;\n    long mid = 0;\n    while (low <= high) {\n        mid = (low + high) / 2;\n        if (x > a[mid]) {\n            low = mid + 1;\n        } else {\n            high = mid - 1;\n        }\n    }\n    return low;",
    "    long low = 0;\n    long high = a.size() - 1;\n    while (low <= high) {\n        long mid = (low + high) / 2;\n        if (x <= a[mid]) {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n    return low;",
    "    long low = 0, high = a.size() - 1;\n    while (low <= high) {\n        long mid = (low + high) / 2;\n        if (a[mid] == x) {\n            return mid;\n        } else if (a[mid] > x) {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n    return low;",
    "    long low = 0;\n    long high = a.size() - 1;\n    long mid;\n    while(low <= high) {\n        mid = low + (high - low) / 2;\n        if(a[mid] == x) {\n            return mid;\n        }\n        else if(a[mid] > x) {\n            high = mid - 1;\n        }\n        else {\n            low = mid + 1;\n        }\n    }\n    return low;",
    "    long low = 0;\n    long high = a.size() - 1;\n    long mid = 0;\n    while (low <= high) {\n        mid = (low + high) / 2;\n        if (x > a[mid]) {\n            low = mid + 1;\n        } else if (x < a[mid]) {\n            high = mid - 1;\n        } else {\n            return mid;\n        }\n    }\n    return low;",
    "    long low = 0;\n    long high = a.size() - 1;\n    long mid;\n    while (low <= high) {\n        mid = (low + high) / 2;\n        if (a[mid] == x) {\n            return mid;\n        } else if (a[mid] > x) {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n    return low;",
    "    long low = 0;\n    long high = a.size() - 1;\n    long mid;\n    while (low <= high) {\n        mid = (low + high) / 2;\n        if (a[mid] == x) {\n            return mid;\n        } else if (a[mid] > x) {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n    return low;"
  ]
}
{
  "name": "mbpp_90_len_log",
  "language": "cpp",
  "prompt": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the length of the longest word.\nlong len_log(std::vector<std::string> list1) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_90_len_log.py",
  "prompt_terminology": "verbatim",
  "tests": "}\nint main() {\n    auto candidate = len_log;\n    assert(candidate((std::vector<std::string>({(std::string)\"python\", (std::string)\"PHP\", (std::string)\"bigdata\"}))) == (7));\n    assert(candidate((std::vector<std::string>({(std::string)\"a\", (std::string)\"ab\", (std::string)\"abc\"}))) == (3));\n    assert(candidate((std::vector<std::string>({(std::string)\"small\", (std::string)\"big\", (std::string)\"tall\"}))) == (5));\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "\tlong max = 0;\n\tfor (int i = 0; i < list1.size(); i++) {\n\t\tif (list1[i].size() > max) {\n\t\t\tmax = list1[i].size();\n\t\t}\n\t}\n\treturn max;",
    "    long max = 0;\n    for (auto i = list1.begin(); i != list1.end(); i++) {\n        if (i->length() > max) {\n            max = i->length();\n        }\n    }\n    return max;",
    "    // Write your code here\n    int max = 0;\n    for(int i=0;i<list1.size();i++)\n    {\n        if(list1[i].size()>max)\n            max = list1[i].size();\n    }\n    return max;",
    "    long max = 0;\n    for (std::string s : list1) {\n        if (s.length() > max) {\n            max = s.length();\n        }\n    }\n    return max;",
    "    int max = 0;\n    for(int i = 0; i < list1.size(); i++) {\n        if(list1[i].length() > max) {\n            max = list1[i].length();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for(int i = 0; i < list1.size(); i++) {\n        if(list1[i].length() > max) {\n            max = list1[i].length();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        if (list1[i].length() > max) {\n            max = list1[i].length();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (std::string i : list1) {\n        if (i.size() > max) {\n            max = i.size();\n        }\n    }\n    return max;",
    "    int max = 0;\n    for(int i=0;i<list1.size();i++) {\n        if(list1[i].length() > max) {\n            max = list1[i].length();\n        }\n    }\n    return max;",
    "    int max = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        if (list1[i].size() > max) {\n            max = list1[i].size();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (auto i = list1.begin(); i != list1.end(); i++) {\n        if (max < (*i).length()) {\n            max = (*i).length();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (auto i = list1.begin(); i != list1.end(); i++) {\n        if (max < i->length()) {\n            max = i->length();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (auto i = list1.begin(); i != list1.end(); i++) {\n        if (max < i->length()) {\n            max = i->length();\n        }\n    }\n    return max;",
    "    int max = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        if (list1[i].length() > max) {\n            max = list1[i].length();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        if (list1[i].length() > max) {\n            max = list1[i].length();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        if (list1[i].length() > max) {\n            max = list1[i].length();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        if (list1[i].size() > max) {\n            max = list1[i].size();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        if (list1[i].size() > max) {\n            max = list1[i].size();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        if (list1[i].size() > max) {\n            max = list1[i].size();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        if (list1[i].size() > max) {\n            max = list1[i].size();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (auto i : list1) {\n        if (i.length() > max) {\n            max = i.length();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (std::string i : list1) {\n        if (i.length() > max) {\n            max = i.length();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (auto i : list1) {\n        if (i.size() > max) {\n            max = i.size();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (auto i = list1.begin(); i != list1.end(); i++) {\n        if (max < i->length()) {\n            max = i->length();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        if (list1[i].length() > max) {\n            max = list1[i].length();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for(int i = 0; i < list1.size(); i++) {\n        if(list1[i].length() > max) {\n            max = list1[i].length();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for(int i = 0; i < list1.size(); i++) {\n        if(list1[i].length() > max) {\n            max = list1[i].length();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (auto i : list1) {\n        if (i.length() > max) {\n            max = i.length();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        if (list1[i].length() > max) {\n            max = list1[i].length();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        if (list1[i].length() > max) {\n            max = list1[i].length();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (std::string i : list1) {\n        if (i.length() > max) {\n            max = i.length();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        if (list1[i].length() > max) {\n            max = list1[i].length();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for(int i = 0; i < list1.size(); i++) {\n        if(list1[i].length() > max) {\n            max = list1[i].length();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        if (list1[i].length() > max) {\n            max = list1[i].length();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        if (list1[i].size() > max) {\n            max = list1[i].size();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        if (list1[i].length() > max) {\n            max = list1[i].length();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for(int i = 0; i < list1.size(); i++) {\n        if(list1[i].size() > max) {\n            max = list1[i].size();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        if (list1[i].size() > max) {\n            max = list1[i].size();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for(int i=0;i<list1.size();i++) {\n        if(list1[i].length() > max) {\n            max = list1[i].length();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (std::string i : list1) {\n        if (i.length() > max) {\n            max = i.length();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (auto i : list1) {\n        if (i.length() > max) {\n            max = i.length();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (auto i = list1.begin(); i != list1.end(); i++) {\n        if (max < i->length()) {\n            max = i->length();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for(int i = 0; i < list1.size(); i++) {\n        if(list1[i].size() > max) {\n            max = list1[i].size();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (auto i : list1) {\n        if (i.length() > max) {\n            max = i.length();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        if (list1[i].size() > max) {\n            max = list1[i].size();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        if (list1[i].size() > max) {\n            max = list1[i].size();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for(int i = 0; i < list1.size(); i++) {\n        if(list1[i].length() > max) {\n            max = list1[i].length();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for(int i = 0; i < list1.size(); i++) {\n        if(list1[i].size() > max) {\n            max = list1[i].size();\n        }\n    }\n    return max;",
    "    int max = 0;\n    for(int i = 0; i < list1.size(); i++) {\n        if(list1[i].length() > max) {\n            max = list1[i].length();\n        }\n    }\n    return max;",
    "    int max = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        if (list1[i].size() > max) {\n            max = list1[i].size();\n        }\n    }\n    return max;",
    "    int max = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        if (list1[i].length() > max) {\n            max = list1[i].length();\n        }\n    }\n    return max;",
    "\tlong max = 0;\n\tfor (int i = 0; i < list1.size(); i++) {\n\t\tif (list1[i].size() > max) {\n\t\t\tmax = list1[i].size();\n\t\t}\n\t}\n\treturn max;",
    "    long max = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        if (list1[i].length() > max) {\n            max = list1[i].length();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        if (list1[i].size() > max) {\n            max = list1[i].size();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        if (list1[i].size() > max) {\n            max = list1[i].size();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        if (list1[i].size() > max) {\n            max = list1[i].size();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (std::vector<std::string>::iterator it = list1.begin(); it != list1.end(); it++) {\n        if (max < (*it).length()) {\n            max = (*it).length();\n        }\n    }\n    return max;",
    "    int max = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        if (list1[i].length() > max) {\n            max = list1[i].length();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for(int i = 0; i < list1.size(); i++) {\n        if(list1[i].length() > max) {\n            max = list1[i].length();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (auto i : list1) {\n        if (i.length() > max) {\n            max = i.length();\n        }\n    }\n    return max;",
    "    int max = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        if (list1[i].length() > max) {\n            max = list1[i].length();\n        }\n    }\n    return max;",
    "    int max = 0;\n    for(int i=0;i<list1.size();i++) {\n        if(list1[i].length() > max) {\n            max = list1[i].length();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for(int i = 0; i < list1.size(); i++) {\n        if(list1[i].length() > max) {\n            max = list1[i].length();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        if (list1[i].size() > max) {\n            max = list1[i].size();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for(auto i : list1) {\n        if(i.length() > max) {\n            max = i.length();\n        }\n    }\n    return max;",
    "    int max = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        if (list1[i].length() > max) {\n            max = list1[i].length();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for(auto i : list1) {\n        if(i.length() > max) {\n            max = i.length();\n        }\n    }\n    return max;",
    "    int max = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        if (list1[i].size() > max) {\n            max = list1[i].size();\n        }\n    }\n    return max;",
    "    int max = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        if (list1[i].size() > max) {\n            max = list1[i].size();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for(int i = 0; i < list1.size(); i++) {\n        if(list1[i].length() > max) {\n            max = list1[i].length();\n        }\n    }\n    return max;",
    "    int max = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        if (max < list1[i].length()) {\n            max = list1[i].length();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (auto i : list1) {\n        if (i.length() > max) {\n            max = i.length();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        if (list1[i].length() > max) {\n            max = list1[i].length();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for(int i = 0; i < list1.size(); i++) {\n        if(list1[i].length() > max) {\n            max = list1[i].length();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (auto i : list1) {\n        if (i.size() > max) {\n            max = i.size();\n        }\n    }\n    return max;",
    "\tlong max = 0;\n\tfor (int i = 0; i < list1.size(); i++) {\n\t\tif (list1[i].length() > max) {\n\t\t\tmax = list1[i].length();\n\t\t}\n\t}\n\treturn max;",
    "    long max = 0;\n    for(int i=0;i<list1.size();i++) {\n        if(list1[i].length() > max) {\n            max = list1[i].length();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for(int i = 0; i < list1.size(); i++) {\n        if(max < list1[i].length()) {\n            max = list1[i].length();\n        }\n    }\n    return max;",
    "    int max_len = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        if (list1[i].size() > max_len) {\n            max_len = list1[i].size();\n        }\n    }\n    return max_len;",
    "    long max = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        if (list1[i].length() > max) {\n            max = list1[i].length();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        if (list1[i].size() > max) {\n            max = list1[i].size();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        if (list1[i].size() > max) {\n            max = list1[i].size();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        if (list1[i].size() > max) {\n            max = list1[i].size();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        if (list1[i].size() > max) {\n            max = list1[i].size();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        if (list1[i].length() > max) {\n            max = list1[i].length();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        if (list1[i].size() > max) {\n            max = list1[i].size();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        if (list1[i].size() > max) {\n            max = list1[i].size();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        if (list1[i].length() > max) {\n            max = list1[i].length();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (auto i = list1.begin(); i != list1.end(); i++) {\n        if (max < i->length()) {\n            max = i->length();\n        }\n    }\n    return max;",
    "    long max_len = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        if (list1[i].size() > max_len) {\n            max_len = list1[i].size();\n        }\n    }\n    return max_len;",
    "    long max = 0;\n    for(int i = 0; i < list1.size(); i++) {\n        if(list1[i].length() > max) {\n            max = list1[i].length();\n        }\n    }\n    return max;",
    "    int max = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        if (list1[i].length() > max) {\n            max = list1[i].length();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        if (list1[i].length() > max) {\n            max = list1[i].length();\n        }\n    }\n    return max;",
    "    int max = 0;\n    for(int i = 0; i < list1.size(); i++) {\n        if(list1[i].length() > max) {\n            max = list1[i].length();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        if (list1[i].length() > max) {\n            max = list1[i].length();\n        }\n    }\n    return max;",
    "    int max = 0;\n    for(int i=0;i<list1.size();i++) {\n        if(max < list1[i].length()) {\n            max = list1[i].length();\n        }\n    }\n    return max;",
    "\tlong max=0;\n\tfor(int i=0;i<list1.size();i++)\n\t{\n\t\tif(list1[i].size()>max)\n\t\t\tmax=list1[i].size();\n\t}\n\treturn max;",
    "    long max = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        if (max < list1[i].size()) {\n            max = list1[i].size();\n        }\n    }\n    return max;",
    "    int max = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        if (list1[i].length() > max) {\n            max = list1[i].length();\n        }\n    }\n    return max;",
    "    int max = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        if (list1[i].length() > max) {\n            max = list1[i].length();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for(int i = 0; i < list1.size(); i++) {\n        if(list1[i].length() > max) {\n            max = list1[i].length();\n        }\n    }\n    return max;",
    "    int max = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        if (list1[i].length() > max) {\n            max = list1[i].length();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for(int i = 0; i < list1.size(); i++) {\n        if(list1[i].length() > max) {\n            max = list1[i].length();\n        }\n    }\n    return max;",
    "    int max = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        if (list1[i].length() > max) {\n            max = list1[i].length();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for(int i = 0; i < list1.size(); i++) {\n        if(list1[i].length() > max) {\n            max = list1[i].length();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        if (list1[i].length() > max) {\n            max = list1[i].length();\n        }\n    }\n    return max;",
    "    long len = 0;\n    for (auto i = list1.begin(); i != list1.end(); i++) {\n        if (len < i->length()) {\n            len = i->length();\n        }\n    }\n    return len;",
    "\tlong max = 0;\n\tfor (int i = 0; i < list1.size(); i++) {\n\t\tif (list1[i].length() > max) {\n\t\t\tmax = list1[i].length();\n\t\t}\n\t}\n\treturn max;",
    "    long max = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        if (list1[i].length() > max) {\n            max = list1[i].length();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        if (list1[i].size() > max) {\n            max = list1[i].size();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        if (list1[i].size() > max) {\n            max = list1[i].size();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        if (list1[i].length() > max) {\n            max = list1[i].length();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        if (list1[i].size() > max) {\n            max = list1[i].size();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (auto i : list1) {\n        if (max < i.length()) {\n            max = i.length();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        if (list1[i].size() > max)\n            max = list1[i].size();\n    }\n    return max;",
    "    long max = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        if (list1[i].length() > max) {\n            max = list1[i].length();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (auto i = list1.begin(); i != list1.end(); i++) {\n        if (max < (*i).length()) {\n            max = (*i).length();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        if (list1[i].size() > max) {\n            max = list1[i].size();\n        }\n    }\n    return max;",
    "    int max = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        if (list1[i].length() > max) {\n            max = list1[i].length();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (auto i : list1) {\n        if (max < i.size()) {\n            max = i.size();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for(int i = 0; i < list1.size(); i++) {\n        if(list1[i].length() > max) {\n            max = list1[i].length();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        if (list1[i].size() > max) {\n            max = list1[i].size();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        if (list1[i].length() > max) {\n            max = list1[i].length();\n        }\n    }\n    return max;",
    "    int max = 0;\n    for(int i = 0; i < list1.size(); i++) {\n        if(list1[i].size() > max) {\n            max = list1[i].size();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        if (list1[i].length() > max) {\n            max = list1[i].length();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for(int i = 0; i < list1.size(); i++) {\n        if(list1[i].size() > max) {\n            max = list1[i].size();\n        }\n    }\n    return max;",
    "    int max = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        if (list1[i].size() > max) {\n            max = list1[i].size();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (auto i = list1.begin(); i != list1.end(); i++) {\n        if (max < i->length()) {\n            max = i->length();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        if (list1[i].size() > max) {\n            max = list1[i].size();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (auto i = list1.begin(); i != list1.end(); i++) {\n        if (max < i->length()) {\n            max = i->length();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        if (list1[i].length() > max) {\n            max = list1[i].length();\n        }\n    }\n    return max;",
    "    int max = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        if (list1[i].size() > max) {\n            max = list1[i].size();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (std::string i : list1) {\n        if (i.length() > max) {\n            max = i.length();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for(int i = 0; i < list1.size(); i++) {\n        if(list1[i].size() > max) {\n            max = list1[i].size();\n        }\n    }\n    return max;",
    "\tlong max = 0;\n\tfor (int i = 0; i < list1.size(); i++) {\n\t\tif (list1[i].length() > max) {\n\t\t\tmax = list1[i].length();\n\t\t}\n\t}\n\treturn max;",
    "    int max = 0;\n    for(int i=0;i<list1.size();i++){\n        if(list1[i].length()>max){\n            max = list1[i].length();\n        }\n    }\n    return max;",
    "    int max = 0;\n    for(int i=0;i<list1.size();i++) {\n        if(list1[i].length() > max) {\n            max = list1[i].length();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        if (list1[i].length() > max) {\n            max = list1[i].length();\n        }\n    }\n    return max;",
    "    int max = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        if (list1[i].size() > max) {\n            max = list1[i].size();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for(int i=0;i<list1.size();i++) {\n        if(list1[i].length() > max) {\n            max = list1[i].length();\n        }\n    }\n    return max;",
    "\tint max = 0;\n\tfor (int i = 0; i < list1.size(); i++) {\n\t\tif (list1[i].size() > max) {\n\t\t\tmax = list1[i].size();\n\t\t}\n\t}\n\treturn max;",
    "    long max = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        if (list1[i].length() > max) {\n            max = list1[i].length();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        if (list1[i].size() > max) {\n            max = list1[i].size();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for(int i=0;i<list1.size();i++) {\n        if(list1[i].length() > max) {\n            max = list1[i].length();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for(int i=0;i<list1.size();i++) {\n        if(list1[i].size() > max) {\n            max = list1[i].size();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (auto i = list1.begin(); i != list1.end(); i++) {\n        if (max < (*i).length()) {\n            max = (*i).length();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for(int i=0; i<list1.size(); i++) {\n        if(list1[i].size() > max) {\n            max = list1[i].size();\n        }\n    }\n    return max;",
    "    int max = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        if (list1[i].length() > max) {\n            max = list1[i].length();\n        }\n    }\n    return max;",
    "    long len = 0;\n    for (auto i = list1.begin(); i != list1.end(); i++) {\n        if (len < (*i).length()) {\n            len = (*i).length();\n        }\n    }\n    return len;",
    "    long max = 0;\n    for(int i = 0; i < list1.size(); i++) {\n        if(list1[i].length() > max) {\n            max = list1[i].length();\n        }\n    }\n    return max;",
    "    long max_len = 0;\n    for (std::string str : list1) {\n        if (str.length() > max_len) {\n            max_len = str.length();\n        }\n    }\n    return max_len;",
    "    long max = 0;\n    for(int i=0;i<list1.size();i++) {\n        if(list1[i].size()>max) {\n            max = list1[i].size();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        if (list1[i].length() > max) {\n            max = list1[i].length();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        if (list1[i].length() > max) {\n            max = list1[i].length();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        if (list1[i].size() > max) {\n            max = list1[i].size();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        if (list1[i].size() > max) {\n            max = list1[i].size();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        if (list1[i].length() > max) {\n            max = list1[i].length();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        if (list1[i].size() > max) {\n            max = list1[i].size();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        if (list1[i].length() > max) {\n            max = list1[i].length();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for(auto i : list1) {\n        if(i.length() > max) {\n            max = i.length();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (auto i = list1.begin(); i != list1.end(); i++) {\n        if (max < (*i).length()) {\n            max = (*i).length();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        if (list1[i].size() > max) {\n            max = list1[i].size();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        if (max < list1[i].size()) {\n            max = list1[i].size();\n        }\n    }\n    return max;",
    "\tlong max = 0;\n\tfor (auto i = list1.begin(); i != list1.end(); i++) {\n\t\tif (max < i->length()) {\n\t\t\tmax = i->length();\n\t\t}\n\t}\n\treturn max;",
    "    long max = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        if (list1[i].length() > max) {\n            max = list1[i].length();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (auto i : list1) {\n        if (i.size() > max) {\n            max = i.size();\n        }\n    }\n    return max;",
    "    int max = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        if (list1[i].size() > max) {\n            max = list1[i].size();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        if (list1[i].length() > max) {\n            max = list1[i].length();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        if (max < list1[i].size()) {\n            max = list1[i].size();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        if (list1[i].size() > max) {\n            max = list1[i].size();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        if (list1[i].size() > max) {\n            max = list1[i].size();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        if (list1[i].size() > max) {\n            max = list1[i].size();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for(int i = 0; i < list1.size(); i++) {\n        if(list1[i].length() > max) {\n            max = list1[i].length();\n        }\n    }\n    return max;",
    "    int max = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        if (list1[i].size() > max) {\n            max = list1[i].size();\n        }\n    }\n    return max;",
    "    int max = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        if (list1[i].length() > max) {\n            max = list1[i].length();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for(int i = 0; i < list1.size(); i++) {\n        if(list1[i].length() > max) {\n            max = list1[i].length();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        if (list1[i].size() > max) {\n            max = list1[i].size();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (auto i = list1.begin(); i != list1.end(); i++) {\n        if (max < (*i).length())\n            max = (*i).length();\n    }\n    return max;",
    "    long max = 0;\n    for(int i = 0; i < list1.size(); i++) {\n        if(list1[i].size() > max) {\n            max = list1[i].size();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        if (list1[i].length() > max) {\n            max = list1[i].length();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        if (list1[i].size() > max) {\n            max = list1[i].size();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        if (list1[i].length() > max) {\n            max = list1[i].length();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        if (list1[i].size() > max) {\n            max = list1[i].size();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        if (list1[i].length() > max) {\n            max = list1[i].length();\n        }\n    }\n    return max;",
    "    long max=0;\n    for(int i=0;i<list1.size();i++){\n        if(list1[i].length()>max){\n            max=list1[i].length();\n        }\n    }\n    return max;",
    "    int max = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        if (list1[i].length() > max) {\n            max = list1[i].length();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (auto i = list1.begin(); i != list1.end(); i++) {\n        if (max < i->length()) {\n            max = i->length();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        if (list1[i].size() > max) {\n            max = list1[i].size();\n        }\n    }\n    return max;",
    "    int max_len = 0;\n    for (auto i : list1) {\n        if (i.size() > max_len) {\n            max_len = i.size();\n        }\n    }\n    return max_len;",
    "\tlong max = 0;\n\tfor (int i = 0; i < list1.size(); i++) {\n\t\tif (max < list1[i].length()) {\n\t\t\tmax = list1[i].length();\n\t\t}\n\t}\n\treturn max;",
    "    long max = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        if (list1[i].size() > max) {\n            max = list1[i].size();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        if (list1[i].length() > max) {\n            max = list1[i].length();\n        }\n    }\n    return max;",
    "    int max = 0;\n    for(int i = 0; i < list1.size(); i++) {\n        if(list1[i].length() > max) {\n            max = list1[i].length();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        if (list1[i].length() > max) {\n            max = list1[i].length();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for(int i = 0; i < list1.size(); i++) {\n        if(list1[i].length() > max) {\n            max = list1[i].length();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for(auto i : list1) {\n        if(i.length() > max) {\n            max = i.length();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for(int i=0;i<list1.size();i++) {\n        if(list1[i].length() > max) {\n            max = list1[i].length();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (auto i = list1.begin(); i != list1.end(); i++) {\n        if (max < i->length()) {\n            max = i->length();\n        }\n    }\n    return max;",
    "    int max = 0;\n    for(int i = 0; i < list1.size(); i++) {\n        if(list1[i].length() > max) {\n            max = list1[i].length();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        if (list1[i].size() > max) {\n            max = list1[i].size();\n        }\n    }\n    return max;"
  ]
}
{
  "name": "mbpp_748_capital_words_spaces",
  "language": "cpp",
  "prompt": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to put spaces between words starting with capital letters in a given string.\nstd::string capital_words_spaces(std::string str1) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_748_capital_words_spaces.py",
  "prompt_terminology": "verbatim",
  "tests": "}\nint main() {\n    auto candidate = capital_words_spaces;\n    assert(candidate((\"Python\")) == (\"Python\"));\n    assert(candidate((\"PythonProgrammingExamples\")) == (\"Python Programming Examples\"));\n    assert(candidate((\"GetReadyToBeCodingFreak\")) == (\"Get Ready To Be Coding Freak\"));\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "results": [
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to put spaces between words starting with capital letters in a given string.\nstd::string capital_words_spaces(std::string str1) {\n\tstd::string str2;\n\tfor(int i=0;i<str1.length();i++) {\n\t\tif(str1[i]>='A' && str1[i]<='Z') {\n\t\t\tstr2.push_back(' ');\n\t\t\tstr2.push_back(str1[i]);\n\t\t}\n\t\telse {\n\t\t\tstr2.push_back(str1[i]);\n\t\t}\n\t}\n\treturn str2;\n}\nint main() {\n    auto candidate = capital_words_spaces;\n    assert(candidate((\"Python\")) == (\"Python\"));\n    assert(candidate((\"PythonProgrammingExamples\")) == (\"Python Programming Examples\"));\n    assert(candidate((\"GetReadyToBeCodingFreak\")) == (\"Get Ready To Be Coding Freak\"));\n}\n",
      "timestamp": 1665510373,
      "stdout": "",
      "stderr": "tmprndtlye9: /tmp/tmprndtlye9.cpp:19: int main(): Assertion `candidate((\"Python\")) == (\"Python\")' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to put spaces between words starting with capital letters in a given string.\nstd::string capital_words_spaces(std::string str1) {\n    std::string str2 = \"\";\n    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] >= 'A' && str1[i] <= 'Z') {\n            str2 += \" \";\n        }\n        str2 += str1[i];\n    }\n    return str2;\n}\nint main() {\n    auto candidate = capital_words_spaces;\n    assert(candidate((\"Python\")) == (\"Python\"));\n    assert(candidate((\"PythonProgrammingExamples\")) == (\"Python Programming Examples\"));\n    assert(candidate((\"GetReadyToBeCodingFreak\")) == (\"Get Ready To Be Coding Freak\"));\n}\n",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpyn_5vmwh: /tmp/tmpyn_5vmwh.cpp:16: int main(): Assertion `candidate((\"Python\")) == (\"Python\")' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to put spaces between words starting with capital letters in a given string.\nstd::string capital_words_spaces(std::string str1) {\n    std::string str2 = \"\";\n    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] >= 'A' && str1[i] <= 'Z') {\n            str2 += \" \";\n        }\n        str2 += str1[i];\n    }\n    return str2;\n}\nint main() {\n    auto candidate = capital_words_spaces;\n    assert(candidate((\"Python\")) == (\"Python\"));\n    assert(candidate((\"PythonProgrammingExamples\")) == (\"Python Programming Examples\"));\n    assert(candidate((\"GetReadyToBeCodingFreak\")) == (\"Get Ready To Be Coding Freak\"));\n}\n",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpyn_5vmwh: /tmp/tmpyn_5vmwh.cpp:16: int main(): Assertion `candidate((\"Python\")) == (\"Python\")' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to put spaces between words starting with capital letters in a given string.\nstd::string capital_words_spaces(std::string str1) {\n    std::string str2;\n    for(int i=0;i<str1.length();i++) {\n        if(str1[i]>='A' && str1[i]<='Z' && i!=0) {\n            str2+=\" \";\n        }\n        str2+=str1[i];\n    }\n    return str2;\n}\nint main() {\n    auto candidate = capital_words_spaces;\n    assert(candidate((\"Python\")) == (\"Python\"));\n    assert(candidate((\"PythonProgrammingExamples\")) == (\"Python Programming Examples\"));\n    assert(candidate((\"GetReadyToBeCodingFreak\")) == (\"Get Ready To Be Coding Freak\"));\n}\n",
      "timestamp": 1665510373,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to put spaces between words starting with capital letters in a given string.\nstd::string capital_words_spaces(std::string str1) {\n    std::string str2 = \"\";\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] >= 'A' && str1[i] <= 'Z') {\n            str2 += \" \";\n        }\n        str2 += str1[i];\n    }\n    return str2;\n}\nint main() {\n    auto candidate = capital_words_spaces;\n    assert(candidate((\"Python\")) == (\"Python\"));\n    assert(candidate((\"PythonProgrammingExamples\")) == (\"Python Programming Examples\"));\n    assert(candidate((\"GetReadyToBeCodingFreak\")) == (\"Get Ready To Be Coding Freak\"));\n}\n",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmp7j1c_1uk: /tmp/tmp7j1c_1uk.cpp:16: int main(): Assertion `candidate((\"Python\")) == (\"Python\")' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to put spaces between words starting with capital letters in a given string.\nstd::string capital_words_spaces(std::string str1) {\n\tstd::string str2;\n\tfor (int i = 0; i < str1.length(); i++) {\n\t\tif (str1[i] >= 'A' && str1[i] <= 'Z') {\n\t\t\tstr2 += ' ';\n\t\t}\n\t\tstr2 += str1[i];\n\t}\n\treturn str2;\n}\nint main() {\n    auto candidate = capital_words_spaces;\n    assert(candidate((\"Python\")) == (\"Python\"));\n    assert(candidate((\"PythonProgrammingExamples\")) == (\"Python Programming Examples\"));\n    assert(candidate((\"GetReadyToBeCodingFreak\")) == (\"Get Ready To Be Coding Freak\"));\n}\n",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpjp7f1kjt: /tmp/tmpjp7f1kjt.cpp:16: int main(): Assertion `candidate((\"Python\")) == (\"Python\")' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to put spaces between words starting with capital letters in a given string.\nstd::string capital_words_spaces(std::string str1) {\n\tstd::string str2;\n\tfor (int i = 0; i < str1.length(); i++) {\n\t\tif (str1[i] >= 'A' && str1[i] <= 'Z') {\n\t\t\tstr2.push_back(' ');\n\t\t}\n\t\tstr2.push_back(str1[i]);\n\t}\n\treturn str2;\n}\nint main() {\n    auto candidate = capital_words_spaces;\n    assert(candidate((\"Python\")) == (\"Python\"));\n    assert(candidate((\"PythonProgrammingExamples\")) == (\"Python Programming Examples\"));\n    assert(candidate((\"GetReadyToBeCodingFreak\")) == (\"Get Ready To Be Coding Freak\"));\n}\n",
      "timestamp": 1665510373,
      "stdout": "",
      "stderr": "tmpkiw2k0p8: /tmp/tmpkiw2k0p8.cpp:16: int main(): Assertion `candidate((\"Python\")) == (\"Python\")' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to put spaces between words starting with capital letters in a given string.\nstd::string capital_words_spaces(std::string str1) {\n    std::string str2 = \"\";\n    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] >= 'A' && str1[i] <= 'Z') {\n            str2 += \" \";\n        }\n        str2 += str1[i];\n    }\n    return str2;\n}\nint main() {\n    auto candidate = capital_words_spaces;\n    assert(candidate((\"Python\")) == (\"Python\"));\n    assert(candidate((\"PythonProgrammingExamples\")) == (\"Python Programming Examples\"));\n    assert(candidate((\"GetReadyToBeCodingFreak\")) == (\"Get Ready To Be Coding Freak\"));\n}\n",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpyn_5vmwh: /tmp/tmpyn_5vmwh.cpp:16: int main(): Assertion `candidate((\"Python\")) == (\"Python\")' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to put spaces between words starting with capital letters in a given string.\nstd::string capital_words_spaces(std::string str1) {\n    std::string str2 = \"\";\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] >= 'A' && str1[i] <= 'Z') {\n            str2 += \" \";\n        }\n        str2 += str1[i];\n    }\n    return str2;\n}\nint main() {\n    auto candidate = capital_words_spaces;\n    assert(candidate((\"Python\")) == (\"Python\"));\n    assert(candidate((\"PythonProgrammingExamples\")) == (\"Python Programming Examples\"));\n    assert(candidate((\"GetReadyToBeCodingFreak\")) == (\"Get Ready To Be Coding Freak\"));\n}\n",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmp7j1c_1uk: /tmp/tmp7j1c_1uk.cpp:16: int main(): Assertion `candidate((\"Python\")) == (\"Python\")' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to put spaces between words starting with capital letters in a given string.\nstd::string capital_words_spaces(std::string str1) {\n    std::string str2;\n    for(int i=0;i<str1.length();i++) {\n        if(str1[i]>='A' && str1[i]<='Z' && i!=0) {\n            str2+=\" \";\n        }\n        str2+=str1[i];\n    }\n    return str2;\n}\nint main() {\n    auto candidate = capital_words_spaces;\n    assert(candidate((\"Python\")) == (\"Python\"));\n    assert(candidate((\"PythonProgrammingExamples\")) == (\"Python Programming Examples\"));\n    assert(candidate((\"GetReadyToBeCodingFreak\")) == (\"Get Ready To Be Coding Freak\"));\n}\n",
      "timestamp": 1665510373,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to put spaces between words starting with capital letters in a given string.\nstd::string capital_words_spaces(std::string str1) {\n\tstd::string str2;\n\tfor(int i=0;i<str1.length();i++) {\n\t\tif(i==0) {\n\t\t\tstr2.push_back(str1[i]);\n\t\t}\n\t\telse if(str1[i]>='A' && str1[i]<='Z') {\n\t\t\tstr2.push_back(' ');\n\t\t\tstr2.push_back(str1[i]);\n\t\t}\n\t\telse {\n\t\t\tstr2.push_back(str1[i]);\n\t\t}\n\t}\n\treturn str2;\n}\nint main() {\n    auto candidate = capital_words_spaces;\n    assert(candidate((\"Python\")) == (\"Python\"));\n    assert(candidate((\"PythonProgrammingExamples\")) == (\"Python Programming Examples\"));\n    assert(candidate((\"GetReadyToBeCodingFreak\")) == (\"Get Ready To Be Coding Freak\"));\n}\n",
      "timestamp": 1665510373,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to put spaces between words starting with capital letters in a given string.\nstd::string capital_words_spaces(std::string str1) {\n    std::string str2;\n    for(int i=0;i<str1.length();i++) {\n        if(str1[i]>='A' && str1[i]<='Z') {\n            str2.push_back(' ');\n        }\n        str2.push_back(str1[i]);\n    }\n    return str2;\n}\nint main() {\n    auto candidate = capital_words_spaces;\n    assert(candidate((\"Python\")) == (\"Python\"));\n    assert(candidate((\"PythonProgrammingExamples\")) == (\"Python Programming Examples\"));\n    assert(candidate((\"GetReadyToBeCodingFreak\")) == (\"Get Ready To Be Coding Freak\"));\n}\n",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpp6ffmz1z: /tmp/tmpp6ffmz1z.cpp:16: int main(): Assertion `candidate((\"Python\")) == (\"Python\")' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to put spaces between words starting with capital letters in a given string.\nstd::string capital_words_spaces(std::string str1) {\n    std::string str2;\n    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] >= 'A' && str1[i] <= 'Z') {\n            str2 += \" \";\n        }\n        str2 += str1[i];\n    }\n    return str2;\n}\nint main() {\n    auto candidate = capital_words_spaces;\n    assert(candidate((\"Python\")) == (\"Python\"));\n    assert(candidate((\"PythonProgrammingExamples\")) == (\"Python Programming Examples\"));\n    assert(candidate((\"GetReadyToBeCodingFreak\")) == (\"Get Ready To Be Coding Freak\"));\n}\n",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmptgiwzg_y: /tmp/tmptgiwzg_y.cpp:16: int main(): Assertion `candidate((\"Python\")) == (\"Python\")' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to put spaces between words starting with capital letters in a given string.\nstd::string capital_words_spaces(std::string str1) {\n  std::string str2;\n  for (int i = 0; i < str1.length(); i++) {\n    if (str1[i] >= 'A' && str1[i] <= 'Z') {\n      str2 += ' ';\n    }\n    str2 += str1[i];\n  }\n  return str2;\n}\nint main() {\n    auto candidate = capital_words_spaces;\n    assert(candidate((\"Python\")) == (\"Python\"));\n    assert(candidate((\"PythonProgrammingExamples\")) == (\"Python Programming Examples\"));\n    assert(candidate((\"GetReadyToBeCodingFreak\")) == (\"Get Ready To Be Coding Freak\"));\n}\n",
      "timestamp": 1665510374,
      "stdout": "",
      "stderr": "tmpl61qwjf4: /tmp/tmpl61qwjf4.cpp:16: int main(): Assertion `candidate((\"Python\")) == (\"Python\")' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to put spaces between words starting with capital letters in a given string.\nstd::string capital_words_spaces(std::string str1) {\n    std::string str2;\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] >= 'A' && str1[i] <= 'Z') {\n            str2 += ' ';\n        }\n        str2 += str1[i];\n    }\n    return str2;\n}\nint main() {\n    auto candidate = capital_words_spaces;\n    assert(candidate((\"Python\")) == (\"Python\"));\n    assert(candidate((\"PythonProgrammingExamples\")) == (\"Python Programming Examples\"));\n    assert(candidate((\"GetReadyToBeCodingFreak\")) == (\"Get Ready To Be Coding Freak\"));\n}\n",
      "timestamp": 1665510374,
      "stdout": "",
      "stderr": "tmp73zf7jmj: /tmp/tmp73zf7jmj.cpp:16: int main(): Assertion `candidate((\"Python\")) == (\"Python\")' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to put spaces between words starting with capital letters in a given string.\nstd::string capital_words_spaces(std::string str1) {\n\tstd::string str2;\n\tfor (int i = 0; i < str1.length(); i++) {\n\t\tif (str1[i] >= 'A' && str1[i] <= 'Z') {\n\t\t\tstr2 += ' ';\n\t\t}\n\t\tstr2 += str1[i];\n\t}\n\treturn str2;\n}\nint main() {\n    auto candidate = capital_words_spaces;\n    assert(candidate((\"Python\")) == (\"Python\"));\n    assert(candidate((\"PythonProgrammingExamples\")) == (\"Python Programming Examples\"));\n    assert(candidate((\"GetReadyToBeCodingFreak\")) == (\"Get Ready To Be Coding Freak\"));\n}\n",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpjp7f1kjt: /tmp/tmpjp7f1kjt.cpp:16: int main(): Assertion `candidate((\"Python\")) == (\"Python\")' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to put spaces between words starting with capital letters in a given string.\nstd::string capital_words_spaces(std::string str1) {\n    std::string str2 = \"\";\n    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] >= 'A' && str1[i] <= 'Z') {\n            str2 += \" \";\n        }\n        str2 += str1[i];\n    }\n    return str2;\n}\nint main() {\n    auto candidate = capital_words_spaces;\n    assert(candidate((\"Python\")) == (\"Python\"));\n    assert(candidate((\"PythonProgrammingExamples\")) == (\"Python Programming Examples\"));\n    assert(candidate((\"GetReadyToBeCodingFreak\")) == (\"Get Ready To Be Coding Freak\"));\n}\n",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpyn_5vmwh: /tmp/tmpyn_5vmwh.cpp:16: int main(): Assertion `candidate((\"Python\")) == (\"Python\")' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to put spaces between words starting with capital letters in a given string.\nstd::string capital_words_spaces(std::string str1) {\n    std::string str2;\n    for(int i=0;i<str1.length();i++) {\n        if(str1[i]>='A' && str1[i]<='Z') {\n            str2.push_back(' ');\n            str2.push_back(str1[i]);\n        }\n        else {\n            str2.push_back(str1[i]);\n        }\n    }\n    return str2;\n}\nint main() {\n    auto candidate = capital_words_spaces;\n    assert(candidate((\"Python\")) == (\"Python\"));\n    assert(candidate((\"PythonProgrammingExamples\")) == (\"Python Programming Examples\"));\n    assert(candidate((\"GetReadyToBeCodingFreak\")) == (\"Get Ready To Be Coding Freak\"));\n}\n",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpxzkio29z: /tmp/tmpxzkio29z.cpp:19: int main(): Assertion `candidate((\"Python\")) == (\"Python\")' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to put spaces between words starting with capital letters in a given string.\nstd::string capital_words_spaces(std::string str1) {\n    std::string str2;\n    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] >= 65 && str1[i] <= 90) {\n            str2 += \" \";\n        }\n        str2 += str1[i];\n    }\n    return str2;\n}\nint main() {\n    auto candidate = capital_words_spaces;\n    assert(candidate((\"Python\")) == (\"Python\"));\n    assert(candidate((\"PythonProgrammingExamples\")) == (\"Python Programming Examples\"));\n    assert(candidate((\"GetReadyToBeCodingFreak\")) == (\"Get Ready To Be Coding Freak\"));\n}\n",
      "timestamp": 1665510373,
      "stdout": "",
      "stderr": "tmp11cfmv3_: /tmp/tmp11cfmv3_.cpp:16: int main(): Assertion `candidate((\"Python\")) == (\"Python\")' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to put spaces between words starting with capital letters in a given string.\nstd::string capital_words_spaces(std::string str1) {\n  std::string str2;\n  for (int i = 0; i < str1.length(); i++) {\n    if (str1[i] >= 'A' && str1[i] <= 'Z') {\n      str2 += ' ';\n    }\n    str2 += str1[i];\n  }\n  return str2;\n}\nint main() {\n    auto candidate = capital_words_spaces;\n    assert(candidate((\"Python\")) == (\"Python\"));\n    assert(candidate((\"PythonProgrammingExamples\")) == (\"Python Programming Examples\"));\n    assert(candidate((\"GetReadyToBeCodingFreak\")) == (\"Get Ready To Be Coding Freak\"));\n}\n",
      "timestamp": 1665510374,
      "stdout": "",
      "stderr": "tmpl61qwjf4: /tmp/tmpl61qwjf4.cpp:16: int main(): Assertion `candidate((\"Python\")) == (\"Python\")' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to put spaces between words starting with capital letters in a given string.\nstd::string capital_words_spaces(std::string str1) {\n    std::string str2;\n    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] >= 'A' && str1[i] <= 'Z') {\n            str2 += ' ';\n        }\n        str2 += str1[i];\n    }\n    return str2;\n}\nint main() {\n    auto candidate = capital_words_spaces;\n    assert(candidate((\"Python\")) == (\"Python\"));\n    assert(candidate((\"PythonProgrammingExamples\")) == (\"Python Programming Examples\"));\n    assert(candidate((\"GetReadyToBeCodingFreak\")) == (\"Get Ready To Be Coding Freak\"));\n}\n",
      "timestamp": 1665510372,
      "stdout": "",
      "stderr": "tmp1di6_cnp: /tmp/tmp1di6_cnp.cpp:16: int main(): Assertion `candidate((\"Python\")) == (\"Python\")' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to put spaces between words starting with capital letters in a given string.\nstd::string capital_words_spaces(std::string str1) {\n    std::string str2 = \"\";\n    for(int i = 0; i < str1.size(); i++) {\n        if(str1[i] >= 'A' && str1[i] <= 'Z') {\n            str2 += \" \";\n        }\n        str2 += str1[i];\n    }\n    return str2;\n}\nint main() {\n    auto candidate = capital_words_spaces;\n    assert(candidate((\"Python\")) == (\"Python\"));\n    assert(candidate((\"PythonProgrammingExamples\")) == (\"Python Programming Examples\"));\n    assert(candidate((\"GetReadyToBeCodingFreak\")) == (\"Get Ready To Be Coding Freak\"));\n}\n",
      "timestamp": 1666123056,
      "stdout": "",
      "stderr": "tmpz8x8rouc: /tmp/tmpz8x8rouc.cpp:16: int main(): Assertion `candidate((\"Python\")) == (\"Python\")' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to put spaces between words starting with capital letters in a given string.\nstd::string capital_words_spaces(std::string str1) {\n    std::string str2;\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] >= 'A' && str1[i] <= 'Z') {\n            str2.push_back(' ');\n            str2.push_back(str1[i]);\n        }\n        else {\n            str2.push_back(str1[i]);\n        }\n    }\n    return str2;\n}\nint main() {\n    auto candidate = capital_words_spaces;\n    assert(candidate((\"Python\")) == (\"Python\"));\n    assert(candidate((\"PythonProgrammingExamples\")) == (\"Python Programming Examples\"));\n    assert(candidate((\"GetReadyToBeCodingFreak\")) == (\"Get Ready To Be Coding Freak\"));\n}\n",
      "timestamp": 1666123058,
      "stdout": "",
      "stderr": "tmp0dirw7wu: /tmp/tmp0dirw7wu.cpp:19: int main(): Assertion `candidate((\"Python\")) == (\"Python\")' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to put spaces between words starting with capital letters in a given string.\nstd::string capital_words_spaces(std::string str1) {\n\tstd::string str2;\n\tfor (int i = 0; i < str1.length(); i++) {\n\t\tif (i == 0) {\n\t\t\tstr2 += str1[i];\n\t\t}\n\t\telse if (str1[i] >= 'A' && str1[i] <= 'Z') {\n\t\t\tstr2 += ' ';\n\t\t\tstr2 += str1[i];\n\t\t}\n\t\telse {\n\t\t\tstr2 += str1[i];\n\t\t}\n\t}\n\treturn str2;\n}\nint main() {\n    auto candidate = capital_words_spaces;\n    assert(candidate((\"Python\")) == (\"Python\"));\n    assert(candidate((\"PythonProgrammingExamples\")) == (\"Python Programming Examples\"));\n    assert(candidate((\"GetReadyToBeCodingFreak\")) == (\"Get Ready To Be Coding Freak\"));\n}\n",
      "timestamp": 1666123062,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to put spaces between words starting with capital letters in a given string.\nstd::string capital_words_spaces(std::string str1) {\n    std::string str2 = \"\";\n    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] >= 'A' && str1[i] <= 'Z') {\n            str2 += \" \";\n        }\n        str2 += str1[i];\n    }\n    return str2;\n}\nint main() {\n    auto candidate = capital_words_spaces;\n    assert(candidate((\"Python\")) == (\"Python\"));\n    assert(candidate((\"PythonProgrammingExamples\")) == (\"Python Programming Examples\"));\n    assert(candidate((\"GetReadyToBeCodingFreak\")) == (\"Get Ready To Be Coding Freak\"));\n}\n",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpyn_5vmwh: /tmp/tmpyn_5vmwh.cpp:16: int main(): Assertion `candidate((\"Python\")) == (\"Python\")' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to put spaces between words starting with capital letters in a given string.\nstd::string capital_words_spaces(std::string str1) {\n    std::string str2 = \"\";\n    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] >= 'A' && str1[i] <= 'Z') {\n            str2 += \" \";\n        }\n        str2 += str1[i];\n    }\n    return str2;\n}\nint main() {\n    auto candidate = capital_words_spaces;\n    assert(candidate((\"Python\")) == (\"Python\"));\n    assert(candidate((\"PythonProgrammingExamples\")) == (\"Python Programming Examples\"));\n    assert(candidate((\"GetReadyToBeCodingFreak\")) == (\"Get Ready To Be Coding Freak\"));\n}\n",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpyn_5vmwh: /tmp/tmpyn_5vmwh.cpp:16: int main(): Assertion `candidate((\"Python\")) == (\"Python\")' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to put spaces between words starting with capital letters in a given string.\nstd::string capital_words_spaces(std::string str1) {\n    std::string str2 = \"\";\n    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] >= 'A' && str1[i] <= 'Z') {\n            str2 += \" \";\n        }\n        str2 += str1[i];\n    }\n    return str2;\n}\nint main() {\n    auto candidate = capital_words_spaces;\n    assert(candidate((\"Python\")) == (\"Python\"));\n    assert(candidate((\"PythonProgrammingExamples\")) == (\"Python Programming Examples\"));\n    assert(candidate((\"GetReadyToBeCodingFreak\")) == (\"Get Ready To Be Coding Freak\"));\n}\n",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpyn_5vmwh: /tmp/tmpyn_5vmwh.cpp:16: int main(): Assertion `candidate((\"Python\")) == (\"Python\")' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to put spaces between words starting with capital letters in a given string.\nstd::string capital_words_spaces(std::string str1) {\n    std::string str2 = \"\";\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] >= 'A' && str1[i] <= 'Z') {\n            str2 += \" \";\n        }\n        str2 += str1[i];\n    }\n    return str2;\n}\nint main() {\n    auto candidate = capital_words_spaces;\n    assert(candidate((\"Python\")) == (\"Python\"));\n    assert(candidate((\"PythonProgrammingExamples\")) == (\"Python Programming Examples\"));\n    assert(candidate((\"GetReadyToBeCodingFreak\")) == (\"Get Ready To Be Coding Freak\"));\n}\n",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmp7j1c_1uk: /tmp/tmp7j1c_1uk.cpp:16: int main(): Assertion `candidate((\"Python\")) == (\"Python\")' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to put spaces between words starting with capital letters in a given string.\nstd::string capital_words_spaces(std::string str1) {\n    std::string str2 = \"\";\n    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] >= 65 && str1[i] <= 90) {\n            str2 += \" \";\n        }\n        str2 += str1[i];\n    }\n    return str2;\n}\nint main() {\n    auto candidate = capital_words_spaces;\n    assert(candidate((\"Python\")) == (\"Python\"));\n    assert(candidate((\"PythonProgrammingExamples\")) == (\"Python Programming Examples\"));\n    assert(candidate((\"GetReadyToBeCodingFreak\")) == (\"Get Ready To Be Coding Freak\"));\n}\n",
      "timestamp": 1666123056,
      "stdout": "",
      "stderr": "tmpisku5qqn: /tmp/tmpisku5qqn.cpp:16: int main(): Assertion `candidate((\"Python\")) == (\"Python\")' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to put spaces between words starting with capital letters in a given string.\nstd::string capital_words_spaces(std::string str1) {\n    std::string str2;\n    for(int i=0;i<str1.length();i++) {\n        if(str1[i]>=65 && str1[i]<=90) {\n            str2.push_back(' ');\n        }\n        str2.push_back(str1[i]);\n    }\n    return str2;\n}\nint main() {\n    auto candidate = capital_words_spaces;\n    assert(candidate((\"Python\")) == (\"Python\"));\n    assert(candidate((\"PythonProgrammingExamples\")) == (\"Python Programming Examples\"));\n    assert(candidate((\"GetReadyToBeCodingFreak\")) == (\"Get Ready To Be Coding Freak\"));\n}\n",
      "timestamp": 1666123062,
      "stdout": "",
      "stderr": "tmpf0repzb4: /tmp/tmpf0repzb4.cpp:16: int main(): Assertion `candidate((\"Python\")) == (\"Python\")' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to put spaces between words starting with capital letters in a given string.\nstd::string capital_words_spaces(std::string str1) {\n    std::string str2;\n    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] >= 'A' && str1[i] <= 'Z') {\n            str2 += \" \";\n        }\n        str2 += str1[i];\n    }\n    return str2;\n}\nint main() {\n    auto candidate = capital_words_spaces;\n    assert(candidate((\"Python\")) == (\"Python\"));\n    assert(candidate((\"PythonProgrammingExamples\")) == (\"Python Programming Examples\"));\n    assert(candidate((\"GetReadyToBeCodingFreak\")) == (\"Get Ready To Be Coding Freak\"));\n}\n",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmptgiwzg_y: /tmp/tmptgiwzg_y.cpp:16: int main(): Assertion `candidate((\"Python\")) == (\"Python\")' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to put spaces between words starting with capital letters in a given string.\nstd::string capital_words_spaces(std::string str1) {\n    std::string str2;\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] >= 'A' && str1[i] <= 'Z') {\n            str2 += ' ';\n        }\n        str2 += str1[i];\n    }\n    return str2;\n}\nint main() {\n    auto candidate = capital_words_spaces;\n    assert(candidate((\"Python\")) == (\"Python\"));\n    assert(candidate((\"PythonProgrammingExamples\")) == (\"Python Programming Examples\"));\n    assert(candidate((\"GetReadyToBeCodingFreak\")) == (\"Get Ready To Be Coding Freak\"));\n}\n",
      "timestamp": 1665510374,
      "stdout": "",
      "stderr": "tmp73zf7jmj: /tmp/tmp73zf7jmj.cpp:16: int main(): Assertion `candidate((\"Python\")) == (\"Python\")' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to put spaces between words starting with capital letters in a given string.\nstd::string capital_words_spaces(std::string str1) {\n    std::string str2 = \"\";\n    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] >= 'A' && str1[i] <= 'Z') {\n            str2 += \" \";\n        }\n        str2 += str1[i];\n    }\n    return str2;\n}\nint main() {\n    auto candidate = capital_words_spaces;\n    assert(candidate((\"Python\")) == (\"Python\"));\n    assert(candidate((\"PythonProgrammingExamples\")) == (\"Python Programming Examples\"));\n    assert(candidate((\"GetReadyToBeCodingFreak\")) == (\"Get Ready To Be Coding Freak\"));\n}\n",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpyn_5vmwh: /tmp/tmpyn_5vmwh.cpp:16: int main(): Assertion `candidate((\"Python\")) == (\"Python\")' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to put spaces between words starting with capital letters in a given string.\nstd::string capital_words_spaces(std::string str1) {\n    std::string str2 = \"\";\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] >= 'A' && str1[i] <= 'Z') {\n            str2 += \" \";\n        }\n        str2 += str1[i];\n    }\n    return str2;\n}\nint main() {\n    auto candidate = capital_words_spaces;\n    assert(candidate((\"Python\")) == (\"Python\"));\n    assert(candidate((\"PythonProgrammingExamples\")) == (\"Python Programming Examples\"));\n    assert(candidate((\"GetReadyToBeCodingFreak\")) == (\"Get Ready To Be Coding Freak\"));\n}\n",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmp7j1c_1uk: /tmp/tmp7j1c_1uk.cpp:16: int main(): Assertion `candidate((\"Python\")) == (\"Python\")' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to put spaces between words starting with capital letters in a given string.\nstd::string capital_words_spaces(std::string str1) {\n\tstd::string str2;\n\tfor (int i = 0; i < str1.length(); i++) {\n\t\tif (str1[i] >= 'A' && str1[i] <= 'Z') {\n\t\t\tstr2 += ' ';\n\t\t}\n\t\tstr2 += str1[i];\n\t}\n\treturn str2;\n}\nint main() {\n    auto candidate = capital_words_spaces;\n    assert(candidate((\"Python\")) == (\"Python\"));\n    assert(candidate((\"PythonProgrammingExamples\")) == (\"Python Programming Examples\"));\n    assert(candidate((\"GetReadyToBeCodingFreak\")) == (\"Get Ready To Be Coding Freak\"));\n}\n",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpjp7f1kjt: /tmp/tmpjp7f1kjt.cpp:16: int main(): Assertion `candidate((\"Python\")) == (\"Python\")' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to put spaces between words starting with capital letters in a given string.\nstd::string capital_words_spaces(std::string str1) {\n    std::string str2;\n    for(int i=0;i<str1.length();i++) {\n        if(str1[i]>='A' && str1[i]<='Z') {\n            str2.push_back(' ');\n        }\n        str2.push_back(str1[i]);\n    }\n    return str2;\n}\nint main() {\n    auto candidate = capital_words_spaces;\n    assert(candidate((\"Python\")) == (\"Python\"));\n    assert(candidate((\"PythonProgrammingExamples\")) == (\"Python Programming Examples\"));\n    assert(candidate((\"GetReadyToBeCodingFreak\")) == (\"Get Ready To Be Coding Freak\"));\n}\n",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpp6ffmz1z: /tmp/tmpp6ffmz1z.cpp:16: int main(): Assertion `candidate((\"Python\")) == (\"Python\")' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to put spaces between words starting with capital letters in a given string.\nstd::string capital_words_spaces(std::string str1) {\n\tstd::string str2;\n\tfor (int i = 0; i < str1.length(); i++) {\n\t\tif (str1[i] >= 'A' && str1[i] <= 'Z') {\n\t\t\tstr2 += \" \";\n\t\t}\n\t\tstr2 += str1[i];\n\t}\n\treturn str2;\n}\nint main() {\n    auto candidate = capital_words_spaces;\n    assert(candidate((\"Python\")) == (\"Python\"));\n    assert(candidate((\"PythonProgrammingExamples\")) == (\"Python Programming Examples\"));\n    assert(candidate((\"GetReadyToBeCodingFreak\")) == (\"Get Ready To Be Coding Freak\"));\n}\n",
      "timestamp": 1666123056,
      "stdout": "",
      "stderr": "tmpbfxqxreg: /tmp/tmpbfxqxreg.cpp:16: int main(): Assertion `candidate((\"Python\")) == (\"Python\")' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to put spaces between words starting with capital letters in a given string.\nstd::string capital_words_spaces(std::string str1) {\n    std::string str2 = \"\";\n    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] >= 'A' && str1[i] <= 'Z') {\n            str2 += \" \";\n        }\n        str2 += str1[i];\n    }\n    return str2;\n}\nint main() {\n    auto candidate = capital_words_spaces;\n    assert(candidate((\"Python\")) == (\"Python\"));\n    assert(candidate((\"PythonProgrammingExamples\")) == (\"Python Programming Examples\"));\n    assert(candidate((\"GetReadyToBeCodingFreak\")) == (\"Get Ready To Be Coding Freak\"));\n}\n",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpyn_5vmwh: /tmp/tmpyn_5vmwh.cpp:16: int main(): Assertion `candidate((\"Python\")) == (\"Python\")' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to put spaces between words starting with capital letters in a given string.\nstd::string capital_words_spaces(std::string str1) {\n    std::string str2 = \"\";\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] >= 'A' && str1[i] <= 'Z') {\n            str2 += \" \";\n        }\n        str2 += str1[i];\n    }\n    return str2;\n}\nint main() {\n    auto candidate = capital_words_spaces;\n    assert(candidate((\"Python\")) == (\"Python\"));\n    assert(candidate((\"PythonProgrammingExamples\")) == (\"Python Programming Examples\"));\n    assert(candidate((\"GetReadyToBeCodingFreak\")) == (\"Get Ready To Be Coding Freak\"));\n}\n",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmp7j1c_1uk: /tmp/tmp7j1c_1uk.cpp:16: int main(): Assertion `candidate((\"Python\")) == (\"Python\")' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to put spaces between words starting with capital letters in a given string.\nstd::string capital_words_spaces(std::string str1) {\n    int i = 0;\n    while(str1[i] != '\\0') {\n        if(str1[i] >= 'A' && str1[i] <= 'Z') {\n            str1.insert(i, \" \");\n            i++;\n        }\n        i++;\n    }\n    return str1;\n}\nint main() {\n    auto candidate = capital_words_spaces;\n    assert(candidate((\"Python\")) == (\"Python\"));\n    assert(candidate((\"PythonProgrammingExamples\")) == (\"Python Programming Examples\"));\n    assert(candidate((\"GetReadyToBeCodingFreak\")) == (\"Get Ready To Be Coding Freak\"));\n}\n",
      "timestamp": 1666123062,
      "stdout": "",
      "stderr": "tmpvcot5d2u: /tmp/tmpvcot5d2u.cpp:17: int main(): Assertion `candidate((\"Python\")) == (\"Python\")' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to put spaces between words starting with capital letters in a given string.\nstd::string capital_words_spaces(std::string str1) {\n    std::string str2;\n    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] >= 'A' && str1[i] <= 'Z') {\n            str2 += \" \";\n        }\n        str2 += str1[i];\n    }\n    return str2;\n}\nint main() {\n    auto candidate = capital_words_spaces;\n    assert(candidate((\"Python\")) == (\"Python\"));\n    assert(candidate((\"PythonProgrammingExamples\")) == (\"Python Programming Examples\"));\n    assert(candidate((\"GetReadyToBeCodingFreak\")) == (\"Get Ready To Be Coding Freak\"));\n}\n",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmptgiwzg_y: /tmp/tmptgiwzg_y.cpp:16: int main(): Assertion `candidate((\"Python\")) == (\"Python\")' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to put spaces between words starting with capital letters in a given string.\nstd::string capital_words_spaces(std::string str1) {\n    std::string str2;\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] >= 'A' && str1[i] <= 'Z') {\n            str2 += ' ';\n        }\n        str2 += str1[i];\n    }\n    return str2;\n}\nint main() {\n    auto candidate = capital_words_spaces;\n    assert(candidate((\"Python\")) == (\"Python\"));\n    assert(candidate((\"PythonProgrammingExamples\")) == (\"Python Programming Examples\"));\n    assert(candidate((\"GetReadyToBeCodingFreak\")) == (\"Get Ready To Be Coding Freak\"));\n}\n",
      "timestamp": 1665510374,
      "stdout": "",
      "stderr": "tmp73zf7jmj: /tmp/tmp73zf7jmj.cpp:16: int main(): Assertion `candidate((\"Python\")) == (\"Python\")' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to put spaces between words starting with capital letters in a given string.\nstd::string capital_words_spaces(std::string str1) {\n    std::string str2;\n    for(int i=0;i<str1.length();i++) {\n        if(str1[i] >= 'A' && str1[i] <= 'Z') {\n            str2 += ' ';\n        }\n        str2 += str1[i];\n    }\n    return str2;\n}\nint main() {\n    auto candidate = capital_words_spaces;\n    assert(candidate((\"Python\")) == (\"Python\"));\n    assert(candidate((\"PythonProgrammingExamples\")) == (\"Python Programming Examples\"));\n    assert(candidate((\"GetReadyToBeCodingFreak\")) == (\"Get Ready To Be Coding Freak\"));\n}\n",
      "timestamp": 1666123058,
      "stdout": "",
      "stderr": "tmpga5td6t1: /tmp/tmpga5td6t1.cpp:16: int main(): Assertion `candidate((\"Python\")) == (\"Python\")' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to put spaces between words starting with capital letters in a given string.\nstd::string capital_words_spaces(std::string str1) {\n  std::string str2 = \"\";\n  for (int i = 0; i < str1.length(); i++) {\n    if (str1[i] >= 'A' && str1[i] <= 'Z') {\n      str2 += \" \";\n    }\n    str2 += str1[i];\n  }\n  return str2;\n}\nint main() {\n    auto candidate = capital_words_spaces;\n    assert(candidate((\"Python\")) == (\"Python\"));\n    assert(candidate((\"PythonProgrammingExamples\")) == (\"Python Programming Examples\"));\n    assert(candidate((\"GetReadyToBeCodingFreak\")) == (\"Get Ready To Be Coding Freak\"));\n}\n",
      "timestamp": 1666123056,
      "stdout": "",
      "stderr": "tmpilkezylw: /tmp/tmpilkezylw.cpp:16: int main(): Assertion `candidate((\"Python\")) == (\"Python\")' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to put spaces between words starting with capital letters in a given string.\nstd::string capital_words_spaces(std::string str1) {\n    std::string str2 = \"\";\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] >= 65 && str1[i] <= 90) {\n            str2 += \" \";\n        }\n        str2 += str1[i];\n    }\n    return str2;\n}\nint main() {\n    auto candidate = capital_words_spaces;\n    assert(candidate((\"Python\")) == (\"Python\"));\n    assert(candidate((\"PythonProgrammingExamples\")) == (\"Python Programming Examples\"));\n    assert(candidate((\"GetReadyToBeCodingFreak\")) == (\"Get Ready To Be Coding Freak\"));\n}\n",
      "timestamp": 1666123062,
      "stdout": "",
      "stderr": "tmpqp4ib5qe: /tmp/tmpqp4ib5qe.cpp:16: int main(): Assertion `candidate((\"Python\")) == (\"Python\")' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to put spaces between words starting with capital letters in a given string.\nstd::string capital_words_spaces(std::string str1) {\n    std::string str2 = \"\";\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] >= 'A' && str1[i] <= 'Z') {\n            str2 += \" \";\n        }\n        str2 += str1[i];\n    }\n    return str2;\n}\nint main() {\n    auto candidate = capital_words_spaces;\n    assert(candidate((\"Python\")) == (\"Python\"));\n    assert(candidate((\"PythonProgrammingExamples\")) == (\"Python Programming Examples\"));\n    assert(candidate((\"GetReadyToBeCodingFreak\")) == (\"Get Ready To Be Coding Freak\"));\n}\n",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmp7j1c_1uk: /tmp/tmp7j1c_1uk.cpp:16: int main(): Assertion `candidate((\"Python\")) == (\"Python\")' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to put spaces between words starting with capital letters in a given string.\nstd::string capital_words_spaces(std::string str1) {\n    std::string str2;\n    for(int i=0;i<str1.length();i++) {\n        if(str1[i]>='A' && str1[i]<='Z') {\n            str2.push_back(' ');\n            str2.push_back(str1[i]);\n        }\n        else {\n            str2.push_back(str1[i]);\n        }\n    }\n    return str2;\n}\nint main() {\n    auto candidate = capital_words_spaces;\n    assert(candidate((\"Python\")) == (\"Python\"));\n    assert(candidate((\"PythonProgrammingExamples\")) == (\"Python Programming Examples\"));\n    assert(candidate((\"GetReadyToBeCodingFreak\")) == (\"Get Ready To Be Coding Freak\"));\n}\n",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpxzkio29z: /tmp/tmpxzkio29z.cpp:19: int main(): Assertion `candidate((\"Python\")) == (\"Python\")' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to put spaces between words starting with capital letters in a given string.\nstd::string capital_words_spaces(std::string str1) {\n    std::string str2;\n    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] >= 'A' && str1[i] <= 'Z') {\n            str2 += ' ';\n        }\n        str2 += str1[i];\n    }\n    return str2;\n}\nint main() {\n    auto candidate = capital_words_spaces;\n    assert(candidate((\"Python\")) == (\"Python\"));\n    assert(candidate((\"PythonProgrammingExamples\")) == (\"Python Programming Examples\"));\n    assert(candidate((\"GetReadyToBeCodingFreak\")) == (\"Get Ready To Be Coding Freak\"));\n}\n",
      "timestamp": 1665510372,
      "stdout": "",
      "stderr": "tmp1di6_cnp: /tmp/tmp1di6_cnp.cpp:16: int main(): Assertion `candidate((\"Python\")) == (\"Python\")' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to put spaces between words starting with capital letters in a given string.\nstd::string capital_words_spaces(std::string str1) {\n    std::string str2 = \"\";\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] >= 'A' && str1[i] <= 'Z') {\n            str2 += \" \";\n        }\n        str2 += str1[i];\n    }\n    return str2;\n}\nint main() {\n    auto candidate = capital_words_spaces;\n    assert(candidate((\"Python\")) == (\"Python\"));\n    assert(candidate((\"PythonProgrammingExamples\")) == (\"Python Programming Examples\"));\n    assert(candidate((\"GetReadyToBeCodingFreak\")) == (\"Get Ready To Be Coding Freak\"));\n}\n",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmp7j1c_1uk: /tmp/tmp7j1c_1uk.cpp:16: int main(): Assertion `candidate((\"Python\")) == (\"Python\")' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to put spaces between words starting with capital letters in a given string.\nstd::string capital_words_spaces(std::string str1) {\n    std::string str2;\n    for(int i=0;i<str1.length();i++) {\n        if(str1[i]>='A' && str1[i]<='Z') {\n            str2.push_back(' ');\n            str2.push_back(str1[i]);\n        }\n        else {\n            str2.push_back(str1[i]);\n        }\n    }\n    return str2;\n}\nint main() {\n    auto candidate = capital_words_spaces;\n    assert(candidate((\"Python\")) == (\"Python\"));\n    assert(candidate((\"PythonProgrammingExamples\")) == (\"Python Programming Examples\"));\n    assert(candidate((\"GetReadyToBeCodingFreak\")) == (\"Get Ready To Be Coding Freak\"));\n}\n",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpxzkio29z: /tmp/tmpxzkio29z.cpp:19: int main(): Assertion `candidate((\"Python\")) == (\"Python\")' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to put spaces between words starting with capital letters in a given string.\nstd::string capital_words_spaces(std::string str1) {\n    int i = 0;\n    std::string str2 = \"\";\n    while(i < str1.length()) {\n        if(str1[i] >= 'A' && str1[i] <= 'Z') {\n            str2 += \" \";\n        }\n        str2 += str1[i];\n        i++;\n    }\n    return str2;\n}\nint main() {\n    auto candidate = capital_words_spaces;\n    assert(candidate((\"Python\")) == (\"Python\"));\n    assert(candidate((\"PythonProgrammingExamples\")) == (\"Python Programming Examples\"));\n    assert(candidate((\"GetReadyToBeCodingFreak\")) == (\"Get Ready To Be Coding Freak\"));\n}\n",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmp9s7u87t7: /tmp/tmp9s7u87t7.cpp:18: int main(): Assertion `candidate((\"Python\")) == (\"Python\")' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to put spaces between words starting with capital letters in a given string.\nstd::string capital_words_spaces(std::string str1) {\n    std::string str2;\n    for (int i = 0; i < str1.size(); i++) {\n        if (str1[i] >= 'A' && str1[i] <= 'Z') {\n            str2 += \" \";\n            str2 += str1[i];\n        } else {\n            str2 += str1[i];\n        }\n    }\n    return str2;\n}\nint main() {\n    auto candidate = capital_words_spaces;\n    assert(candidate((\"Python\")) == (\"Python\"));\n    assert(candidate((\"PythonProgrammingExamples\")) == (\"Python Programming Examples\"));\n    assert(candidate((\"GetReadyToBeCodingFreak\")) == (\"Get Ready To Be Coding Freak\"));\n}\n",
      "timestamp": 1666123062,
      "stdout": "",
      "stderr": "tmpp9_l5why: /tmp/tmpp9_l5why.cpp:18: int main(): Assertion `candidate((\"Python\")) == (\"Python\")' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to put spaces between words starting with capital letters in a given string.\nstd::string capital_words_spaces(std::string str1) {\n    std::string str2;\n    for(int i=0; i<str1.length(); i++) {\n        if(str1[i] >= 'A' && str1[i] <= 'Z') {\n            str2 += \" \";\n            str2 += str1[i];\n        }\n        else {\n            str2 += str1[i];\n        }\n    }\n    return str2;\n}\nint main() {\n    auto candidate = capital_words_spaces;\n    assert(candidate((\"Python\")) == (\"Python\"));\n    assert(candidate((\"PythonProgrammingExamples\")) == (\"Python Programming Examples\"));\n    assert(candidate((\"GetReadyToBeCodingFreak\")) == (\"Get Ready To Be Coding Freak\"));\n}\n",
      "timestamp": 1666123062,
      "stdout": "",
      "stderr": "tmppbya8hsu: /tmp/tmppbya8hsu.cpp:19: int main(): Assertion `candidate((\"Python\")) == (\"Python\")' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to put spaces between words starting with capital letters in a given string.\nstd::string capital_words_spaces(std::string str1) {\n    std::string str2;\n    for(int i=0;i<str1.length();i++) {\n        if(i==0) {\n            if(str1[i]>=65 && str1[i]<=90) {\n                str2.push_back(str1[i]);\n                str2.push_back(' ');\n            }\n            else {\n                str2.push_back(str1[i]);\n            }\n        }\n        else {\n            if(str1[i]>=65 && str1[i]<=90) {\n                if(str1[i-1]>=65 && str1[i-1]<=90) {\n                    str2.push_back(str1[i]);\n                }\n                else {\n                    str2.push_back(' ');\n                    str2.push_back(str1[i]);\n                }\n            }\n            else {\n                str2.push_back(str1[i]);\n            }\n        }\n    }\n    return str2;\n}\nint main() {\n    auto candidate = capital_words_spaces;\n    assert(candidate((\"Python\")) == (\"Python\"));\n    assert(candidate((\"PythonProgrammingExamples\")) == (\"Python Programming Examples\"));\n    assert(candidate((\"GetReadyToBeCodingFreak\")) == (\"Get Ready To Be Coding Freak\"));\n}\n",
      "timestamp": 1666123062,
      "stdout": "",
      "stderr": "tmpaiwmohz5: /tmp/tmpaiwmohz5.cpp:35: int main(): Assertion `candidate((\"Python\")) == (\"Python\")' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to put spaces between words starting with capital letters in a given string.\nstd::string capital_words_spaces(std::string str1) {\n    std::string str2;\n    for(int i=0;i<str1.length();i++) {\n        if(str1[i]>='A' && str1[i]<='Z') {\n            str2.push_back(' ');\n            str2.push_back(str1[i]);\n        }\n        else {\n            str2.push_back(str1[i]);\n        }\n    }\n    return str2;\n}\nint main() {\n    auto candidate = capital_words_spaces;\n    assert(candidate((\"Python\")) == (\"Python\"));\n    assert(candidate((\"PythonProgrammingExamples\")) == (\"Python Programming Examples\"));\n    assert(candidate((\"GetReadyToBeCodingFreak\")) == (\"Get Ready To Be Coding Freak\"));\n}\n",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpxzkio29z: /tmp/tmpxzkio29z.cpp:19: int main(): Assertion `candidate((\"Python\")) == (\"Python\")' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to put spaces between words starting with capital letters in a given string.\nstd::string capital_words_spaces(std::string str1) {\n\tstd::string str2;\n\tfor (int i = 0; i < str1.length(); i++) {\n\t\tif (str1[i] >= 'A' && str1[i] <= 'Z') {\n\t\t\tstr2 += ' ';\n\t\t}\n\t\tstr2 += str1[i];\n\t}\n\treturn str2;\n}\nint main() {\n    auto candidate = capital_words_spaces;\n    assert(candidate((\"Python\")) == (\"Python\"));\n    assert(candidate((\"PythonProgrammingExamples\")) == (\"Python Programming Examples\"));\n    assert(candidate((\"GetReadyToBeCodingFreak\")) == (\"Get Ready To Be Coding Freak\"));\n}\n",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpjp7f1kjt: /tmp/tmpjp7f1kjt.cpp:16: int main(): Assertion `candidate((\"Python\")) == (\"Python\")' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to put spaces between words starting with capital letters in a given string.\nstd::string capital_words_spaces(std::string str1) {\n    std::string str2;\n    for(int i=0;i<str1.size();i++) {\n        if(str1[i]>='A' && str1[i]<='Z') {\n            str2.push_back(' ');\n        }\n        str2.push_back(str1[i]);\n    }\n    return str2;\n}\nint main() {\n    auto candidate = capital_words_spaces;\n    assert(candidate((\"Python\")) == (\"Python\"));\n    assert(candidate((\"PythonProgrammingExamples\")) == (\"Python Programming Examples\"));\n    assert(candidate((\"GetReadyToBeCodingFreak\")) == (\"Get Ready To Be Coding Freak\"));\n}\n",
      "timestamp": 1666123059,
      "stdout": "",
      "stderr": "tmp4zodthhi: /tmp/tmp4zodthhi.cpp:16: int main(): Assertion `candidate((\"Python\")) == (\"Python\")' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to put spaces between words starting with capital letters in a given string.\nstd::string capital_words_spaces(std::string str1) {\n    std::string str2;\n    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] >= 'A' && str1[i] <= 'Z') {\n            str2 += \" \";\n        }\n        str2 += str1[i];\n    }\n    return str2;\n}\nint main() {\n    auto candidate = capital_words_spaces;\n    assert(candidate((\"Python\")) == (\"Python\"));\n    assert(candidate((\"PythonProgrammingExamples\")) == (\"Python Programming Examples\"));\n    assert(candidate((\"GetReadyToBeCodingFreak\")) == (\"Get Ready To Be Coding Freak\"));\n}\n",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmptgiwzg_y: /tmp/tmptgiwzg_y.cpp:16: int main(): Assertion `candidate((\"Python\")) == (\"Python\")' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to put spaces between words starting with capital letters in a given string.\nstd::string capital_words_spaces(std::string str1) {\n    std::string str2 = \"\";\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] >= 'A' && str1[i] <= 'Z') {\n            str2 += \" \";\n        }\n        str2 += str1[i];\n    }\n    return str2;\n}\nint main() {\n    auto candidate = capital_words_spaces;\n    assert(candidate((\"Python\")) == (\"Python\"));\n    assert(candidate((\"PythonProgrammingExamples\")) == (\"Python Programming Examples\"));\n    assert(candidate((\"GetReadyToBeCodingFreak\")) == (\"Get Ready To Be Coding Freak\"));\n}\n",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmp7j1c_1uk: /tmp/tmp7j1c_1uk.cpp:16: int main(): Assertion `candidate((\"Python\")) == (\"Python\")' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to put spaces between words starting with capital letters in a given string.\nstd::string capital_words_spaces(std::string str1) {\n    std::string str2 = \"\";\n    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] >= 'A' && str1[i] <= 'Z') {\n            str2 += \" \";\n        }\n        str2 += str1[i];\n    }\n    return str2;\n}\nint main() {\n    auto candidate = capital_words_spaces;\n    assert(candidate((\"Python\")) == (\"Python\"));\n    assert(candidate((\"PythonProgrammingExamples\")) == (\"Python Programming Examples\"));\n    assert(candidate((\"GetReadyToBeCodingFreak\")) == (\"Get Ready To Be Coding Freak\"));\n}\n",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpyn_5vmwh: /tmp/tmpyn_5vmwh.cpp:16: int main(): Assertion `candidate((\"Python\")) == (\"Python\")' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to put spaces between words starting with capital letters in a given string.\nstd::string capital_words_spaces(std::string str1) {\n    std::string str2 = \"\";\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] >= 'A' && str1[i] <= 'Z') {\n            str2 += \" \";\n        }\n        str2 += str1[i];\n    }\n    return str2;\n}\nint main() {\n    auto candidate = capital_words_spaces;\n    assert(candidate((\"Python\")) == (\"Python\"));\n    assert(candidate((\"PythonProgrammingExamples\")) == (\"Python Programming Examples\"));\n    assert(candidate((\"GetReadyToBeCodingFreak\")) == (\"Get Ready To Be Coding Freak\"));\n}\n",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmp7j1c_1uk: /tmp/tmp7j1c_1uk.cpp:16: int main(): Assertion `candidate((\"Python\")) == (\"Python\")' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to put spaces between words starting with capital letters in a given string.\nstd::string capital_words_spaces(std::string str1) {\n    std::string str2;\n    for(int i=0; i<str1.length(); i++) {\n        if(str1[i] >= 'A' && str1[i] <= 'Z') {\n            str2.push_back(' ');\n        }\n        str2.push_back(str1[i]);\n    }\n    return str2;\n}\nint main() {\n    auto candidate = capital_words_spaces;\n    assert(candidate((\"Python\")) == (\"Python\"));\n    assert(candidate((\"PythonProgrammingExamples\")) == (\"Python Programming Examples\"));\n    assert(candidate((\"GetReadyToBeCodingFreak\")) == (\"Get Ready To Be Coding Freak\"));\n}\n",
      "timestamp": 1666123062,
      "stdout": "",
      "stderr": "tmpdjlukfer: /tmp/tmpdjlukfer.cpp:16: int main(): Assertion `candidate((\"Python\")) == (\"Python\")' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to put spaces between words starting with capital letters in a given string.\nstd::string capital_words_spaces(std::string str1) {\n    std::string str2;\n    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] >= 'A' && str1[i] <= 'Z') {\n            str2 += ' ';\n        }\n        str2 += str1[i];\n    }\n    return str2;\n}\nint main() {\n    auto candidate = capital_words_spaces;\n    assert(candidate((\"Python\")) == (\"Python\"));\n    assert(candidate((\"PythonProgrammingExamples\")) == (\"Python Programming Examples\"));\n    assert(candidate((\"GetReadyToBeCodingFreak\")) == (\"Get Ready To Be Coding Freak\"));\n}\n",
      "timestamp": 1665510372,
      "stdout": "",
      "stderr": "tmp1di6_cnp: /tmp/tmp1di6_cnp.cpp:16: int main(): Assertion `candidate((\"Python\")) == (\"Python\")' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to put spaces between words starting with capital letters in a given string.\nstd::string capital_words_spaces(std::string str1) {\n\tstd::string str2;\n\tfor (int i = 0; i < str1.length(); i++) {\n\t\tif (str1[i] >= 'A' && str1[i] <= 'Z') {\n\t\t\tstr2 += \" \";\n\t\t}\n\t\tstr2 += str1[i];\n\t}\n\treturn str2;\n}\nint main() {\n    auto candidate = capital_words_spaces;\n    assert(candidate((\"Python\")) == (\"Python\"));\n    assert(candidate((\"PythonProgrammingExamples\")) == (\"Python Programming Examples\"));\n    assert(candidate((\"GetReadyToBeCodingFreak\")) == (\"Get Ready To Be Coding Freak\"));\n}\n",
      "timestamp": 1666123056,
      "stdout": "",
      "stderr": "tmpbfxqxreg: /tmp/tmpbfxqxreg.cpp:16: int main(): Assertion `candidate((\"Python\")) == (\"Python\")' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to put spaces between words starting with capital letters in a given string.\nstd::string capital_words_spaces(std::string str1) {\n    std::string result = \"\";\n    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] >= 'A' && str1[i] <= 'Z') {\n            result += \" \";\n        }\n        result += str1[i];\n    }\n    return result;\n}\nint main() {\n    auto candidate = capital_words_spaces;\n    assert(candidate((\"Python\")) == (\"Python\"));\n    assert(candidate((\"PythonProgrammingExamples\")) == (\"Python Programming Examples\"));\n    assert(candidate((\"GetReadyToBeCodingFreak\")) == (\"Get Ready To Be Coding Freak\"));\n}\n",
      "timestamp": 1666123062,
      "stdout": "",
      "stderr": "tmpg8hjq9gu: /tmp/tmpg8hjq9gu.cpp:16: int main(): Assertion `candidate((\"Python\")) == (\"Python\")' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to put spaces between words starting with capital letters in a given string.\nstd::string capital_words_spaces(std::string str1) {\n\tstd::string str2;\n\tfor (int i = 0; i < str1.length(); i++) {\n\t\tif (str1[i] >= 'A' && str1[i] <= 'Z') {\n\t\t\tstr2 = str2 + \" \" + str1[i];\n\t\t}\n\t\telse {\n\t\t\tstr2 = str2 + str1[i];\n\t\t}\n\t}\n\treturn str2;\n}\nint main() {\n    auto candidate = capital_words_spaces;\n    assert(candidate((\"Python\")) == (\"Python\"));\n    assert(candidate((\"PythonProgrammingExamples\")) == (\"Python Programming Examples\"));\n    assert(candidate((\"GetReadyToBeCodingFreak\")) == (\"Get Ready To Be Coding Freak\"));\n}\n",
      "timestamp": 1666123062,
      "stdout": "",
      "stderr": "tmp2vlp_6v3: /tmp/tmp2vlp_6v3.cpp:18: int main(): Assertion `candidate((\"Python\")) == (\"Python\")' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to put spaces between words starting with capital letters in a given string.\nstd::string capital_words_spaces(std::string str1) {\n\tstd::string str2 = \"\";\n\tfor (int i = 0; i < str1.length(); i++) {\n\t\tif (str1[i] >= 'A' && str1[i] <= 'Z') {\n\t\t\tstr2 += \" \";\n\t\t}\n\t\tstr2 += str1[i];\n\t}\n\treturn str2;\n}\nint main() {\n    auto candidate = capital_words_spaces;\n    assert(candidate((\"Python\")) == (\"Python\"));\n    assert(candidate((\"PythonProgrammingExamples\")) == (\"Python Programming Examples\"));\n    assert(candidate((\"GetReadyToBeCodingFreak\")) == (\"Get Ready To Be Coding Freak\"));\n}\n",
      "timestamp": 1666123056,
      "stdout": "",
      "stderr": "tmp92b3slr5: /tmp/tmp92b3slr5.cpp:16: int main(): Assertion `candidate((\"Python\")) == (\"Python\")' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to put spaces between words starting with capital letters in a given string.\nstd::string capital_words_spaces(std::string str1) {\n    std::string str2 = \"\";\n    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] >= 'A' && str1[i] <= 'Z') {\n            str2 += \" \";\n        }\n        str2 += str1[i];\n    }\n    return str2;\n}\nint main() {\n    auto candidate = capital_words_spaces;\n    assert(candidate((\"Python\")) == (\"Python\"));\n    assert(candidate((\"PythonProgrammingExamples\")) == (\"Python Programming Examples\"));\n    assert(candidate((\"GetReadyToBeCodingFreak\")) == (\"Get Ready To Be Coding Freak\"));\n}\n",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpyn_5vmwh: /tmp/tmpyn_5vmwh.cpp:16: int main(): Assertion `candidate((\"Python\")) == (\"Python\")' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to put spaces between words starting with capital letters in a given string.\nstd::string capital_words_spaces(std::string str1) {\n    std::string str2;\n    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] >= 'A' && str1[i] <= 'Z') {\n            str2 += ' ';\n        }\n        str2 += str1[i];\n    }\n    return str2;\n}\nint main() {\n    auto candidate = capital_words_spaces;\n    assert(candidate((\"Python\")) == (\"Python\"));\n    assert(candidate((\"PythonProgrammingExamples\")) == (\"Python Programming Examples\"));\n    assert(candidate((\"GetReadyToBeCodingFreak\")) == (\"Get Ready To Be Coding Freak\"));\n}\n",
      "timestamp": 1665510372,
      "stdout": "",
      "stderr": "tmp1di6_cnp: /tmp/tmp1di6_cnp.cpp:16: int main(): Assertion `candidate((\"Python\")) == (\"Python\")' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to put spaces between words starting with capital letters in a given string.\nstd::string capital_words_spaces(std::string str1) {\n    int i = 0;\n    while(str1[i] != '\\0') {\n        if(str1[i] >= 'A' && str1[i] <= 'Z') {\n            str1.insert(i, \" \");\n            i++;\n        }\n        i++;\n    }\n    return str1;\n}\nint main() {\n    auto candidate = capital_words_spaces;\n    assert(candidate((\"Python\")) == (\"Python\"));\n    assert(candidate((\"PythonProgrammingExamples\")) == (\"Python Programming Examples\"));\n    assert(candidate((\"GetReadyToBeCodingFreak\")) == (\"Get Ready To Be Coding Freak\"));\n}\n",
      "timestamp": 1666123062,
      "stdout": "",
      "stderr": "tmpvcot5d2u: /tmp/tmpvcot5d2u.cpp:17: int main(): Assertion `candidate((\"Python\")) == (\"Python\")' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to put spaces between words starting with capital letters in a given string.\nstd::string capital_words_spaces(std::string str1) {\n\tstd::string str2;\n\tfor (int i = 0; i < str1.length(); i++) {\n\t\tif (i == 0) {\n\t\t\tstr2 += str1[i];\n\t\t}\n\t\telse if (str1[i] >= 'A' && str1[i] <= 'Z') {\n\t\t\tstr2 += \" \";\n\t\t\tstr2 += str1[i];\n\t\t}\n\t\telse {\n\t\t\tstr2 += str1[i];\n\t\t}\n\t}\n\treturn str2;\n}\nint main() {\n    auto candidate = capital_words_spaces;\n    assert(candidate((\"Python\")) == (\"Python\"));\n    assert(candidate((\"PythonProgrammingExamples\")) == (\"Python Programming Examples\"));\n    assert(candidate((\"GetReadyToBeCodingFreak\")) == (\"Get Ready To Be Coding Freak\"));\n}\n",
      "timestamp": 1666123062,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to put spaces between words starting with capital letters in a given string.\nstd::string capital_words_spaces(std::string str1) {\n    std::string str2 = \"\";\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] >= 'A' && str1[i] <= 'Z') {\n            str2 += \" \";\n            str2 += str1[i];\n        }\n        else {\n            str2 += str1[i];\n        }\n    }\n    return str2;\n}\nint main() {\n    auto candidate = capital_words_spaces;\n    assert(candidate((\"Python\")) == (\"Python\"));\n    assert(candidate((\"PythonProgrammingExamples\")) == (\"Python Programming Examples\"));\n    assert(candidate((\"GetReadyToBeCodingFreak\")) == (\"Get Ready To Be Coding Freak\"));\n}\n",
      "timestamp": 1666123062,
      "stdout": "",
      "stderr": "tmpj36oahup: /tmp/tmpj36oahup.cpp:19: int main(): Assertion `candidate((\"Python\")) == (\"Python\")' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to put spaces between words starting with capital letters in a given string.\nstd::string capital_words_spaces(std::string str1) {\n    std::string str2;\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] >= 'A' && str1[i] <= 'Z') {\n            str2 += \" \";\n        }\n        str2 += str1[i];\n    }\n    return str2;\n}\nint main() {\n    auto candidate = capital_words_spaces;\n    assert(candidate((\"Python\")) == (\"Python\"));\n    assert(candidate((\"PythonProgrammingExamples\")) == (\"Python Programming Examples\"));\n    assert(candidate((\"GetReadyToBeCodingFreak\")) == (\"Get Ready To Be Coding Freak\"));\n}\n",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmphj84u_nq: /tmp/tmphj84u_nq.cpp:16: int main(): Assertion `candidate((\"Python\")) == (\"Python\")' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to put spaces between words starting with capital letters in a given string.\nstd::string capital_words_spaces(std::string str1) {\n    std::string str2;\n    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] >= 'A' && str1[i] <= 'Z') {\n            str2 += \" \";\n        }\n        str2 += str1[i];\n    }\n    return str2;\n}\nint main() {\n    auto candidate = capital_words_spaces;\n    assert(candidate((\"Python\")) == (\"Python\"));\n    assert(candidate((\"PythonProgrammingExamples\")) == (\"Python Programming Examples\"));\n    assert(candidate((\"GetReadyToBeCodingFreak\")) == (\"Get Ready To Be Coding Freak\"));\n}\n",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmptgiwzg_y: /tmp/tmptgiwzg_y.cpp:16: int main(): Assertion `candidate((\"Python\")) == (\"Python\")' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to put spaces between words starting with capital letters in a given string.\nstd::string capital_words_spaces(std::string str1) {\n    std::string str2 = \"\";\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] >= 'A' && str1[i] <= 'Z') {\n            str2 += \" \";\n        }\n        str2 += str1[i];\n    }\n    return str2;\n}\nint main() {\n    auto candidate = capital_words_spaces;\n    assert(candidate((\"Python\")) == (\"Python\"));\n    assert(candidate((\"PythonProgrammingExamples\")) == (\"Python Programming Examples\"));\n    assert(candidate((\"GetReadyToBeCodingFreak\")) == (\"Get Ready To Be Coding Freak\"));\n}\n",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmp7j1c_1uk: /tmp/tmp7j1c_1uk.cpp:16: int main(): Assertion `candidate((\"Python\")) == (\"Python\")' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to put spaces between words starting with capital letters in a given string.\nstd::string capital_words_spaces(std::string str1) {\n    std::string str2;\n    for(int i=0;i<str1.length();i++) {\n        if(str1[i]>='A' && str1[i]<='Z') {\n            str2.push_back(' ');\n            str2.push_back(str1[i]);\n        }\n        else {\n            str2.push_back(str1[i]);\n        }\n    }\n    return str2;\n}\nint main() {\n    auto candidate = capital_words_spaces;\n    assert(candidate((\"Python\")) == (\"Python\"));\n    assert(candidate((\"PythonProgrammingExamples\")) == (\"Python Programming Examples\"));\n    assert(candidate((\"GetReadyToBeCodingFreak\")) == (\"Get Ready To Be Coding Freak\"));\n}\n",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpxzkio29z: /tmp/tmpxzkio29z.cpp:19: int main(): Assertion `candidate((\"Python\")) == (\"Python\")' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to put spaces between words starting with capital letters in a given string.\nstd::string capital_words_spaces(std::string str1) {\n    std::string str2;\n    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] >= 'A' && str1[i] <= 'Z') {\n            str2 += \" \";\n        }\n        str2 += str1[i];\n    }\n    return str2;\n}\nint main() {\n    auto candidate = capital_words_spaces;\n    assert(candidate((\"Python\")) == (\"Python\"));\n    assert(candidate((\"PythonProgrammingExamples\")) == (\"Python Programming Examples\"));\n    assert(candidate((\"GetReadyToBeCodingFreak\")) == (\"Get Ready To Be Coding Freak\"));\n}\n",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmptgiwzg_y: /tmp/tmptgiwzg_y.cpp:16: int main(): Assertion `candidate((\"Python\")) == (\"Python\")' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to put spaces between words starting with capital letters in a given string.\nstd::string capital_words_spaces(std::string str1) {\n    std::string str2 = \"\";\n    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] >= 'A' && str1[i] <= 'Z') {\n            str2 += \" \";\n        }\n        str2 += str1[i];\n    }\n    return str2;\n}\nint main() {\n    auto candidate = capital_words_spaces;\n    assert(candidate((\"Python\")) == (\"Python\"));\n    assert(candidate((\"PythonProgrammingExamples\")) == (\"Python Programming Examples\"));\n    assert(candidate((\"GetReadyToBeCodingFreak\")) == (\"Get Ready To Be Coding Freak\"));\n}\n",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpyn_5vmwh: /tmp/tmpyn_5vmwh.cpp:16: int main(): Assertion `candidate((\"Python\")) == (\"Python\")' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to put spaces between words starting with capital letters in a given string.\nstd::string capital_words_spaces(std::string str1) {\n    std::string str2;\n    for(int i=0;i<str1.length();i++) {\n        if(str1[i]>='A' && str1[i]<='Z') {\n            str2 += \" \";\n        }\n        str2 += str1[i];\n    }\n    return str2;\n}\nint main() {\n    auto candidate = capital_words_spaces;\n    assert(candidate((\"Python\")) == (\"Python\"));\n    assert(candidate((\"PythonProgrammingExamples\")) == (\"Python Programming Examples\"));\n    assert(candidate((\"GetReadyToBeCodingFreak\")) == (\"Get Ready To Be Coding Freak\"));\n}\n",
      "timestamp": 1666123056,
      "stdout": "",
      "stderr": "tmpnu5giv5j: /tmp/tmpnu5giv5j.cpp:16: int main(): Assertion `candidate((\"Python\")) == (\"Python\")' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to put spaces between words starting with capital letters in a given string.\nstd::string capital_words_spaces(std::string str1) {\n    std::string str2;\n    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] >= 'A' && str1[i] <= 'Z') {\n            str2 += \" \";\n        }\n        str2 += str1[i];\n    }\n    return str2;\n}\nint main() {\n    auto candidate = capital_words_spaces;\n    assert(candidate((\"Python\")) == (\"Python\"));\n    assert(candidate((\"PythonProgrammingExamples\")) == (\"Python Programming Examples\"));\n    assert(candidate((\"GetReadyToBeCodingFreak\")) == (\"Get Ready To Be Coding Freak\"));\n}\n",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmptgiwzg_y: /tmp/tmptgiwzg_y.cpp:16: int main(): Assertion `candidate((\"Python\")) == (\"Python\")' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to put spaces between words starting with capital letters in a given string.\nstd::string capital_words_spaces(std::string str1) {\n    std::string str2 = \"\";\n    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] >= 'A' && str1[i] <= 'Z') {\n            str2 += \" \";\n        }\n        str2 += str1[i];\n    }\n    return str2;\n}\nint main() {\n    auto candidate = capital_words_spaces;\n    assert(candidate((\"Python\")) == (\"Python\"));\n    assert(candidate((\"PythonProgrammingExamples\")) == (\"Python Programming Examples\"));\n    assert(candidate((\"GetReadyToBeCodingFreak\")) == (\"Get Ready To Be Coding Freak\"));\n}\n",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpyn_5vmwh: /tmp/tmpyn_5vmwh.cpp:16: int main(): Assertion `candidate((\"Python\")) == (\"Python\")' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to put spaces between words starting with capital letters in a given string.\nstd::string capital_words_spaces(std::string str1) {\n    std::string str2 = \"\";\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] >= 'A' && str1[i] <= 'Z') {\n            str2 += \" \";\n        }\n        str2 += str1[i];\n    }\n    return str2;\n}\nint main() {\n    auto candidate = capital_words_spaces;\n    assert(candidate((\"Python\")) == (\"Python\"));\n    assert(candidate((\"PythonProgrammingExamples\")) == (\"Python Programming Examples\"));\n    assert(candidate((\"GetReadyToBeCodingFreak\")) == (\"Get Ready To Be Coding Freak\"));\n}\n",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmp7j1c_1uk: /tmp/tmp7j1c_1uk.cpp:16: int main(): Assertion `candidate((\"Python\")) == (\"Python\")' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to put spaces between words starting with capital letters in a given string.\nstd::string capital_words_spaces(std::string str1) {\n    std::string str2 = \"\";\n    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] >= 'A' && str1[i] <= 'Z') {\n            str2 += \" \";\n        }\n        str2 += str1[i];\n    }\n    return str2;\n}\nint main() {\n    auto candidate = capital_words_spaces;\n    assert(candidate((\"Python\")) == (\"Python\"));\n    assert(candidate((\"PythonProgrammingExamples\")) == (\"Python Programming Examples\"));\n    assert(candidate((\"GetReadyToBeCodingFreak\")) == (\"Get Ready To Be Coding Freak\"));\n}\n",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpyn_5vmwh: /tmp/tmpyn_5vmwh.cpp:16: int main(): Assertion `candidate((\"Python\")) == (\"Python\")' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to put spaces between words starting with capital letters in a given string.\nstd::string capital_words_spaces(std::string str1) {\n    std::string str2;\n    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] >= 'A' && str1[i] <= 'Z') {\n            str2 += \" \";\n        }\n        str2 += str1[i];\n    }\n    return str2;\n}\nint main() {\n    auto candidate = capital_words_spaces;\n    assert(candidate((\"Python\")) == (\"Python\"));\n    assert(candidate((\"PythonProgrammingExamples\")) == (\"Python Programming Examples\"));\n    assert(candidate((\"GetReadyToBeCodingFreak\")) == (\"Get Ready To Be Coding Freak\"));\n}\n",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmptgiwzg_y: /tmp/tmptgiwzg_y.cpp:16: int main(): Assertion `candidate((\"Python\")) == (\"Python\")' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to put spaces between words starting with capital letters in a given string.\nstd::string capital_words_spaces(std::string str1) {\n    std::string str2 = \"\";\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] >= 'A' && str1[i] <= 'Z') {\n            str2 += ' ';\n        }\n        str2 += str1[i];\n    }\n    return str2;\n}\nint main() {\n    auto candidate = capital_words_spaces;\n    assert(candidate((\"Python\")) == (\"Python\"));\n    assert(candidate((\"PythonProgrammingExamples\")) == (\"Python Programming Examples\"));\n    assert(candidate((\"GetReadyToBeCodingFreak\")) == (\"Get Ready To Be Coding Freak\"));\n}\n",
      "timestamp": 1666123062,
      "stdout": "",
      "stderr": "tmp25c1_odx: /tmp/tmp25c1_odx.cpp:16: int main(): Assertion `candidate((\"Python\")) == (\"Python\")' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to put spaces between words starting with capital letters in a given string.\nstd::string capital_words_spaces(std::string str1) {\n\tstd::string str2;\n\tfor(int i=0;i<str1.length();i++) {\n\t\tif(str1[i]>='A' && str1[i]<='Z') {\n\t\t\tstr2.push_back(' ');\n\t\t}\n\t\tstr2.push_back(str1[i]);\n\t}\n\treturn str2;\n}\nint main() {\n    auto candidate = capital_words_spaces;\n    assert(candidate((\"Python\")) == (\"Python\"));\n    assert(candidate((\"PythonProgrammingExamples\")) == (\"Python Programming Examples\"));\n    assert(candidate((\"GetReadyToBeCodingFreak\")) == (\"Get Ready To Be Coding Freak\"));\n}\n",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpw990_g9f: /tmp/tmpw990_g9f.cpp:16: int main(): Assertion `candidate((\"Python\")) == (\"Python\")' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to put spaces between words starting with capital letters in a given string.\nstd::string capital_words_spaces(std::string str1) {\n    std::string str2 = \"\";\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] >= 'A' && str1[i] <= 'Z') {\n            str2 += \" \";\n        }\n        str2 += str1[i];\n    }\n    return str2;\n}\nint main() {\n    auto candidate = capital_words_spaces;\n    assert(candidate((\"Python\")) == (\"Python\"));\n    assert(candidate((\"PythonProgrammingExamples\")) == (\"Python Programming Examples\"));\n    assert(candidate((\"GetReadyToBeCodingFreak\")) == (\"Get Ready To Be Coding Freak\"));\n}\n",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmp7j1c_1uk: /tmp/tmp7j1c_1uk.cpp:16: int main(): Assertion `candidate((\"Python\")) == (\"Python\")' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to put spaces between words starting with capital letters in a given string.\nstd::string capital_words_spaces(std::string str1) {\n    std::string str2;\n    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] >= 'A' && str1[i] <= 'Z') {\n            str2 += \" \";\n            str2 += str1[i];\n        } else {\n            str2 += str1[i];\n        }\n    }\n    return str2;\n}\nint main() {\n    auto candidate = capital_words_spaces;\n    assert(candidate((\"Python\")) == (\"Python\"));\n    assert(candidate((\"PythonProgrammingExamples\")) == (\"Python Programming Examples\"));\n    assert(candidate((\"GetReadyToBeCodingFreak\")) == (\"Get Ready To Be Coding Freak\"));\n}\n",
      "timestamp": 1666123062,
      "stdout": "",
      "stderr": "tmp_ii_vr5r: /tmp/tmp_ii_vr5r.cpp:18: int main(): Assertion `candidate((\"Python\")) == (\"Python\")' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to put spaces between words starting with capital letters in a given string.\nstd::string capital_words_spaces(std::string str1) {\n    std::string str2 = \"\";\n    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] >= 'A' && str1[i] <= 'Z') {\n            str2 += \" \";\n        }\n        str2 += str1[i];\n    }\n    return str2;\n}\nint main() {\n    auto candidate = capital_words_spaces;\n    assert(candidate((\"Python\")) == (\"Python\"));\n    assert(candidate((\"PythonProgrammingExamples\")) == (\"Python Programming Examples\"));\n    assert(candidate((\"GetReadyToBeCodingFreak\")) == (\"Get Ready To Be Coding Freak\"));\n}\n",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpyn_5vmwh: /tmp/tmpyn_5vmwh.cpp:16: int main(): Assertion `candidate((\"Python\")) == (\"Python\")' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to put spaces between words starting with capital letters in a given string.\nstd::string capital_words_spaces(std::string str1) {\n    std::string str2 = \"\";\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] >= 'A' && str1[i] <= 'Z') {\n            str2 += \" \";\n        }\n        str2 += str1[i];\n    }\n    return str2;\n}\nint main() {\n    auto candidate = capital_words_spaces;\n    assert(candidate((\"Python\")) == (\"Python\"));\n    assert(candidate((\"PythonProgrammingExamples\")) == (\"Python Programming Examples\"));\n    assert(candidate((\"GetReadyToBeCodingFreak\")) == (\"Get Ready To Be Coding Freak\"));\n}\n",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmp7j1c_1uk: /tmp/tmp7j1c_1uk.cpp:16: int main(): Assertion `candidate((\"Python\")) == (\"Python\")' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to put spaces between words starting with capital letters in a given string.\nstd::string capital_words_spaces(std::string str1) {\n    std::string str2 = \"\";\n    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] >= 'A' && str1[i] <= 'Z') {\n            str2 += \" \";\n        }\n        str2 += str1[i];\n    }\n    return str2;\n}\nint main() {\n    auto candidate = capital_words_spaces;\n    assert(candidate((\"Python\")) == (\"Python\"));\n    assert(candidate((\"PythonProgrammingExamples\")) == (\"Python Programming Examples\"));\n    assert(candidate((\"GetReadyToBeCodingFreak\")) == (\"Get Ready To Be Coding Freak\"));\n}\n",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpyn_5vmwh: /tmp/tmpyn_5vmwh.cpp:16: int main(): Assertion `candidate((\"Python\")) == (\"Python\")' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to put spaces between words starting with capital letters in a given string.\nstd::string capital_words_spaces(std::string str1) {\n    std::string str2;\n    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] >= 'A' && str1[i] <= 'Z') {\n            if(i != 0) {\n                str2 += ' ';\n            }\n        }\n        str2 += str1[i];\n    }\n    return str2;\n}\nint main() {\n    auto candidate = capital_words_spaces;\n    assert(candidate((\"Python\")) == (\"Python\"));\n    assert(candidate((\"PythonProgrammingExamples\")) == (\"Python Programming Examples\"));\n    assert(candidate((\"GetReadyToBeCodingFreak\")) == (\"Get Ready To Be Coding Freak\"));\n}\n",
      "timestamp": 1666123062,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to put spaces between words starting with capital letters in a given string.\nstd::string capital_words_spaces(std::string str1) {\n\tstd::string str2 = \"\";\n\tfor (int i = 0; i < str1.length(); i++) {\n\t\tif (str1[i] >= 'A' && str1[i] <= 'Z') {\n\t\t\tstr2 += \" \";\n\t\t}\n\t\tstr2 += str1[i];\n\t}\n\treturn str2;\n}\nint main() {\n    auto candidate = capital_words_spaces;\n    assert(candidate((\"Python\")) == (\"Python\"));\n    assert(candidate((\"PythonProgrammingExamples\")) == (\"Python Programming Examples\"));\n    assert(candidate((\"GetReadyToBeCodingFreak\")) == (\"Get Ready To Be Coding Freak\"));\n}\n",
      "timestamp": 1666123056,
      "stdout": "",
      "stderr": "tmp92b3slr5: /tmp/tmp92b3slr5.cpp:16: int main(): Assertion `candidate((\"Python\")) == (\"Python\")' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to put spaces between words starting with capital letters in a given string.\nstd::string capital_words_spaces(std::string str1) {\n    std::string str2;\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] >= 'A' && str1[i] <= 'Z') {\n            str2 += \" \";\n            str2 += str1[i];\n        }\n        else {\n            str2 += str1[i];\n        }\n    }\n    return str2;\n}\nint main() {\n    auto candidate = capital_words_spaces;\n    assert(candidate((\"Python\")) == (\"Python\"));\n    assert(candidate((\"PythonProgrammingExamples\")) == (\"Python Programming Examples\"));\n    assert(candidate((\"GetReadyToBeCodingFreak\")) == (\"Get Ready To Be Coding Freak\"));\n}\n",
      "timestamp": 1666123062,
      "stdout": "",
      "stderr": "tmpua9xinx8: /tmp/tmpua9xinx8.cpp:19: int main(): Assertion `candidate((\"Python\")) == (\"Python\")' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to put spaces between words starting with capital letters in a given string.\nstd::string capital_words_spaces(std::string str1) {\n    std::string str2;\n    for(int i=0;i<str1.length();i++) {\n        if(str1[i]>='A' && str1[i]<='Z') {\n            str2.push_back(' ');\n        }\n        str2.push_back(str1[i]);\n    }\n    return str2;\n}\nint main() {\n    auto candidate = capital_words_spaces;\n    assert(candidate((\"Python\")) == (\"Python\"));\n    assert(candidate((\"PythonProgrammingExamples\")) == (\"Python Programming Examples\"));\n    assert(candidate((\"GetReadyToBeCodingFreak\")) == (\"Get Ready To Be Coding Freak\"));\n}\n",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpp6ffmz1z: /tmp/tmpp6ffmz1z.cpp:16: int main(): Assertion `candidate((\"Python\")) == (\"Python\")' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to put spaces between words starting with capital letters in a given string.\nstd::string capital_words_spaces(std::string str1) {\n    std::string str2;\n    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] >= 'A' && str1[i] <= 'Z') {\n            str2 += \" \";\n        }\n        str2 += str1[i];\n    }\n    return str2;\n}\nint main() {\n    auto candidate = capital_words_spaces;\n    assert(candidate((\"Python\")) == (\"Python\"));\n    assert(candidate((\"PythonProgrammingExamples\")) == (\"Python Programming Examples\"));\n    assert(candidate((\"GetReadyToBeCodingFreak\")) == (\"Get Ready To Be Coding Freak\"));\n}\n",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmptgiwzg_y: /tmp/tmptgiwzg_y.cpp:16: int main(): Assertion `candidate((\"Python\")) == (\"Python\")' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to put spaces between words starting with capital letters in a given string.\nstd::string capital_words_spaces(std::string str1) {\n    std::string str2 = \"\";\n    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] >= 'A' && str1[i] <= 'Z') {\n            str2 += \" \";\n        }\n        str2 += str1[i];\n    }\n    return str2;\n}\nint main() {\n    auto candidate = capital_words_spaces;\n    assert(candidate((\"Python\")) == (\"Python\"));\n    assert(candidate((\"PythonProgrammingExamples\")) == (\"Python Programming Examples\"));\n    assert(candidate((\"GetReadyToBeCodingFreak\")) == (\"Get Ready To Be Coding Freak\"));\n}\n",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpyn_5vmwh: /tmp/tmpyn_5vmwh.cpp:16: int main(): Assertion `candidate((\"Python\")) == (\"Python\")' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to put spaces between words starting with capital letters in a given string.\nstd::string capital_words_spaces(std::string str1) {\n\tstd::string str2 = \"\";\n\tfor (int i = 0; i < str1.length(); i++) {\n\t\tif (str1[i] >= 'A' && str1[i] <= 'Z') {\n\t\t\tstr2 += \" \";\n\t\t}\n\t\tstr2 += str1[i];\n\t}\n\treturn str2;\n}\nint main() {\n    auto candidate = capital_words_spaces;\n    assert(candidate((\"Python\")) == (\"Python\"));\n    assert(candidate((\"PythonProgrammingExamples\")) == (\"Python Programming Examples\"));\n    assert(candidate((\"GetReadyToBeCodingFreak\")) == (\"Get Ready To Be Coding Freak\"));\n}\n",
      "timestamp": 1666123056,
      "stdout": "",
      "stderr": "tmp92b3slr5: /tmp/tmp92b3slr5.cpp:16: int main(): Assertion `candidate((\"Python\")) == (\"Python\")' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to put spaces between words starting with capital letters in a given string.\nstd::string capital_words_spaces(std::string str1) {\n  std::string str2;\n  int i = 0;\n  while (str1[i] != '\\0') {\n    if (str1[i] >= 'A' && str1[i] <= 'Z') {\n      str2 += ' ';\n      str2 += str1[i];\n    }\n    else {\n      str2 += str1[i];\n    }\n    i++;\n  }\n  return str2;\n}\nint main() {\n    auto candidate = capital_words_spaces;\n    assert(candidate((\"Python\")) == (\"Python\"));\n    assert(candidate((\"PythonProgrammingExamples\")) == (\"Python Programming Examples\"));\n    assert(candidate((\"GetReadyToBeCodingFreak\")) == (\"Get Ready To Be Coding Freak\"));\n}\n",
      "timestamp": 1666123062,
      "stdout": "",
      "stderr": "tmp8wz_oj9q: /tmp/tmp8wz_oj9q.cpp:21: int main(): Assertion `candidate((\"Python\")) == (\"Python\")' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to put spaces between words starting with capital letters in a given string.\nstd::string capital_words_spaces(std::string str1) {\n    std::string str2 = \"\";\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] >= 'A' && str1[i] <= 'Z') {\n            str2 += \" \";\n        }\n        str2 += str1[i];\n    }\n    return str2;\n}\nint main() {\n    auto candidate = capital_words_spaces;\n    assert(candidate((\"Python\")) == (\"Python\"));\n    assert(candidate((\"PythonProgrammingExamples\")) == (\"Python Programming Examples\"));\n    assert(candidate((\"GetReadyToBeCodingFreak\")) == (\"Get Ready To Be Coding Freak\"));\n}\n",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmp7j1c_1uk: /tmp/tmp7j1c_1uk.cpp:16: int main(): Assertion `candidate((\"Python\")) == (\"Python\")' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to put spaces between words starting with capital letters in a given string.\nstd::string capital_words_spaces(std::string str1) {\n    std::string str2 = \"\";\n    int i = 0;\n    while(str1[i] != '\\0') {\n        if(str1[i] >= 'A' && str1[i] <= 'Z') {\n            str2 += ' ';\n        }\n        str2 += str1[i];\n        i++;\n    }\n    return str2;\n}\nint main() {\n    auto candidate = capital_words_spaces;\n    assert(candidate((\"Python\")) == (\"Python\"));\n    assert(candidate((\"PythonProgrammingExamples\")) == (\"Python Programming Examples\"));\n    assert(candidate((\"GetReadyToBeCodingFreak\")) == (\"Get Ready To Be Coding Freak\"));\n}\n",
      "timestamp": 1666123062,
      "stdout": "",
      "stderr": "tmp7iuw4z2_: /tmp/tmp7iuw4z2_.cpp:18: int main(): Assertion `candidate((\"Python\")) == (\"Python\")' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to put spaces between words starting with capital letters in a given string.\nstd::string capital_words_spaces(std::string str1) {\n    std::string result = \"\";\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] >= 'A' && str1[i] <= 'Z') {\n            result += \" \";\n        }\n        result += str1[i];\n    }\n    return result;\n}\nint main() {\n    auto candidate = capital_words_spaces;\n    assert(candidate((\"Python\")) == (\"Python\"));\n    assert(candidate((\"PythonProgrammingExamples\")) == (\"Python Programming Examples\"));\n    assert(candidate((\"GetReadyToBeCodingFreak\")) == (\"Get Ready To Be Coding Freak\"));\n}\n",
      "timestamp": 1666123062,
      "stdout": "",
      "stderr": "tmpxr32x3h9: /tmp/tmpxr32x3h9.cpp:16: int main(): Assertion `candidate((\"Python\")) == (\"Python\")' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to put spaces between words starting with capital letters in a given string.\nstd::string capital_words_spaces(std::string str1) {\n  std::string str2;\n  for (int i = 0; i < str1.length(); i++) {\n    if (str1[i] >= 'A' && str1[i] <= 'Z') {\n      str2 += ' ';\n    }\n    str2 += str1[i];\n  }\n  return str2;\n}\nint main() {\n    auto candidate = capital_words_spaces;\n    assert(candidate((\"Python\")) == (\"Python\"));\n    assert(candidate((\"PythonProgrammingExamples\")) == (\"Python Programming Examples\"));\n    assert(candidate((\"GetReadyToBeCodingFreak\")) == (\"Get Ready To Be Coding Freak\"));\n}\n",
      "timestamp": 1665510374,
      "stdout": "",
      "stderr": "tmpl61qwjf4: /tmp/tmpl61qwjf4.cpp:16: int main(): Assertion `candidate((\"Python\")) == (\"Python\")' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to put spaces between words starting with capital letters in a given string.\nstd::string capital_words_spaces(std::string str1) {\n    std::string str2;\n    for(int i=0;i<str1.length();i++) {\n        if(str1[i]>='A' && str1[i]<='Z') {\n            str2.push_back(' ');\n            str2.push_back(str1[i]);\n        }\n        else {\n            str2.push_back(str1[i]);\n        }\n    }\n    return str2;\n}\nint main() {\n    auto candidate = capital_words_spaces;\n    assert(candidate((\"Python\")) == (\"Python\"));\n    assert(candidate((\"PythonProgrammingExamples\")) == (\"Python Programming Examples\"));\n    assert(candidate((\"GetReadyToBeCodingFreak\")) == (\"Get Ready To Be Coding Freak\"));\n}\n",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpxzkio29z: /tmp/tmpxzkio29z.cpp:19: int main(): Assertion `candidate((\"Python\")) == (\"Python\")' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to put spaces between words starting with capital letters in a given string.\nstd::string capital_words_spaces(std::string str1) {\n    std::string str2;\n    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] >= 'A' && str1[i] <= 'Z') {\n            str2 += ' ';\n        }\n        str2 += str1[i];\n    }\n    return str2;\n}\nint main() {\n    auto candidate = capital_words_spaces;\n    assert(candidate((\"Python\")) == (\"Python\"));\n    assert(candidate((\"PythonProgrammingExamples\")) == (\"Python Programming Examples\"));\n    assert(candidate((\"GetReadyToBeCodingFreak\")) == (\"Get Ready To Be Coding Freak\"));\n}\n",
      "timestamp": 1665510372,
      "stdout": "",
      "stderr": "tmp1di6_cnp: /tmp/tmp1di6_cnp.cpp:16: int main(): Assertion `candidate((\"Python\")) == (\"Python\")' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to put spaces between words starting with capital letters in a given string.\nstd::string capital_words_spaces(std::string str1) {\n    std::string str2;\n    for(int i=0;i<str1.length();i++) {\n        if(str1[i]>='A' && str1[i]<='Z') {\n            str2.push_back(' ');\n        }\n        str2.push_back(str1[i]);\n    }\n    return str2;\n}\nint main() {\n    auto candidate = capital_words_spaces;\n    assert(candidate((\"Python\")) == (\"Python\"));\n    assert(candidate((\"PythonProgrammingExamples\")) == (\"Python Programming Examples\"));\n    assert(candidate((\"GetReadyToBeCodingFreak\")) == (\"Get Ready To Be Coding Freak\"));\n}\n",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpp6ffmz1z: /tmp/tmpp6ffmz1z.cpp:16: int main(): Assertion `candidate((\"Python\")) == (\"Python\")' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to put spaces between words starting with capital letters in a given string.\nstd::string capital_words_spaces(std::string str1) {\n    std::string str2;\n    str2.push_back(str1[0]);\n    for(int i=1;i<str1.length();i++) {\n        if(str1[i]>='A' && str1[i]<='Z') {\n            str2.push_back(' ');\n        }\n        str2.push_back(str1[i]);\n    }\n    return str2;\n}\nint main() {\n    auto candidate = capital_words_spaces;\n    assert(candidate((\"Python\")) == (\"Python\"));\n    assert(candidate((\"PythonProgrammingExamples\")) == (\"Python Programming Examples\"));\n    assert(candidate((\"GetReadyToBeCodingFreak\")) == (\"Get Ready To Be Coding Freak\"));\n}\n",
      "timestamp": 1666123062,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to put spaces between words starting with capital letters in a given string.\nstd::string capital_words_spaces(std::string str1) {\n    std::string str2;\n    for(int i=0;i<str1.length();i++) {\n        if(str1[i]>='A' && str1[i]<='Z') {\n            str2.push_back(' ');\n        }\n        str2.push_back(str1[i]);\n    }\n    return str2;\n}\nint main() {\n    auto candidate = capital_words_spaces;\n    assert(candidate((\"Python\")) == (\"Python\"));\n    assert(candidate((\"PythonProgrammingExamples\")) == (\"Python Programming Examples\"));\n    assert(candidate((\"GetReadyToBeCodingFreak\")) == (\"Get Ready To Be Coding Freak\"));\n}\n",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpp6ffmz1z: /tmp/tmpp6ffmz1z.cpp:16: int main(): Assertion `candidate((\"Python\")) == (\"Python\")' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to put spaces between words starting with capital letters in a given string.\nstd::string capital_words_spaces(std::string str1) {\n    std::string str2;\n    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] >= 'A' && str1[i] <= 'Z') {\n            str2 += \" \";\n        }\n        str2 += str1[i];\n    }\n    return str2;\n}\nint main() {\n    auto candidate = capital_words_spaces;\n    assert(candidate((\"Python\")) == (\"Python\"));\n    assert(candidate((\"PythonProgrammingExamples\")) == (\"Python Programming Examples\"));\n    assert(candidate((\"GetReadyToBeCodingFreak\")) == (\"Get Ready To Be Coding Freak\"));\n}\n",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmptgiwzg_y: /tmp/tmptgiwzg_y.cpp:16: int main(): Assertion `candidate((\"Python\")) == (\"Python\")' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to put spaces between words starting with capital letters in a given string.\nstd::string capital_words_spaces(std::string str1) {\n    std::string str2;\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] >= 'A' && str1[i] <= 'Z') {\n            str2 += \" \";\n        }\n        str2 += str1[i];\n    }\n    return str2;\n}\nint main() {\n    auto candidate = capital_words_spaces;\n    assert(candidate((\"Python\")) == (\"Python\"));\n    assert(candidate((\"PythonProgrammingExamples\")) == (\"Python Programming Examples\"));\n    assert(candidate((\"GetReadyToBeCodingFreak\")) == (\"Get Ready To Be Coding Freak\"));\n}\n",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmphj84u_nq: /tmp/tmphj84u_nq.cpp:16: int main(): Assertion `candidate((\"Python\")) == (\"Python\")' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to put spaces between words starting with capital letters in a given string.\nstd::string capital_words_spaces(std::string str1) {\n    std::string str2;\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] >= 'A' && str1[i] <= 'Z') {\n            str2 += ' ';\n        }\n        str2 += str1[i];\n    }\n    return str2;\n}\nint main() {\n    auto candidate = capital_words_spaces;\n    assert(candidate((\"Python\")) == (\"Python\"));\n    assert(candidate((\"PythonProgrammingExamples\")) == (\"Python Programming Examples\"));\n    assert(candidate((\"GetReadyToBeCodingFreak\")) == (\"Get Ready To Be Coding Freak\"));\n}\n",
      "timestamp": 1665510374,
      "stdout": "",
      "stderr": "tmp73zf7jmj: /tmp/tmp73zf7jmj.cpp:16: int main(): Assertion `candidate((\"Python\")) == (\"Python\")' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to put spaces between words starting with capital letters in a given string.\nstd::string capital_words_spaces(std::string str1) {\n    std::string str2 = \"\";\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] >= 'A' && str1[i] <= 'Z') {\n            str2 += \" \";\n        }\n        str2 += str1[i];\n    }\n    return str2;\n}\nint main() {\n    auto candidate = capital_words_spaces;\n    assert(candidate((\"Python\")) == (\"Python\"));\n    assert(candidate((\"PythonProgrammingExamples\")) == (\"Python Programming Examples\"));\n    assert(candidate((\"GetReadyToBeCodingFreak\")) == (\"Get Ready To Be Coding Freak\"));\n}\n",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmp7j1c_1uk: /tmp/tmp7j1c_1uk.cpp:16: int main(): Assertion `candidate((\"Python\")) == (\"Python\")' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to put spaces between words starting with capital letters in a given string.\nstd::string capital_words_spaces(std::string str1) {\n    std::string str2;\n    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] >= 'A' && str1[i] <= 'Z') {\n            str2 += ' ';\n        }\n        str2 += str1[i];\n    }\n    return str2;\n}\nint main() {\n    auto candidate = capital_words_spaces;\n    assert(candidate((\"Python\")) == (\"Python\"));\n    assert(candidate((\"PythonProgrammingExamples\")) == (\"Python Programming Examples\"));\n    assert(candidate((\"GetReadyToBeCodingFreak\")) == (\"Get Ready To Be Coding Freak\"));\n}\n",
      "timestamp": 1665510372,
      "stdout": "",
      "stderr": "tmp1di6_cnp: /tmp/tmp1di6_cnp.cpp:16: int main(): Assertion `candidate((\"Python\")) == (\"Python\")' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to put spaces between words starting with capital letters in a given string.\nstd::string capital_words_spaces(std::string str1) {\n\tstd::string str2;\n\tfor (int i = 0; i < str1.length(); i++) {\n\t\tif (str1[i] >= 'A' && str1[i] <= 'Z') {\n\t\t\tstr2 += \" \";\n\t\t\tstr2 += str1[i];\n\t\t}\n\t\telse {\n\t\t\tstr2 += str1[i];\n\t\t}\n\t}\n\treturn str2;\n}\nint main() {\n    auto candidate = capital_words_spaces;\n    assert(candidate((\"Python\")) == (\"Python\"));\n    assert(candidate((\"PythonProgrammingExamples\")) == (\"Python Programming Examples\"));\n    assert(candidate((\"GetReadyToBeCodingFreak\")) == (\"Get Ready To Be Coding Freak\"));\n}\n",
      "timestamp": 1666123062,
      "stdout": "",
      "stderr": "tmp4u2_ujz2: /tmp/tmp4u2_ujz2.cpp:19: int main(): Assertion `candidate((\"Python\")) == (\"Python\")' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to put spaces between words starting with capital letters in a given string.\nstd::string capital_words_spaces(std::string str1) {\n    std::string str2;\n    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] >= 'A' && str1[i] <= 'Z') {\n            str2 += \" \";\n        }\n        str2 += str1[i];\n    }\n    return str2;\n}\nint main() {\n    auto candidate = capital_words_spaces;\n    assert(candidate((\"Python\")) == (\"Python\"));\n    assert(candidate((\"PythonProgrammingExamples\")) == (\"Python Programming Examples\"));\n    assert(candidate((\"GetReadyToBeCodingFreak\")) == (\"Get Ready To Be Coding Freak\"));\n}\n",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmptgiwzg_y: /tmp/tmptgiwzg_y.cpp:16: int main(): Assertion `candidate((\"Python\")) == (\"Python\")' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to put spaces between words starting with capital letters in a given string.\nstd::string capital_words_spaces(std::string str1) {\n\tstd::string str2;\n\tfor (int i = 0; i < str1.length(); i++) {\n\t\tif (str1[i] >= 'A' && str1[i] <= 'Z') {\n\t\t\tstr2 += ' ';\n\t\t}\n\t\tstr2 += str1[i];\n\t}\n\treturn str2;\n}\nint main() {\n    auto candidate = capital_words_spaces;\n    assert(candidate((\"Python\")) == (\"Python\"));\n    assert(candidate((\"PythonProgrammingExamples\")) == (\"Python Programming Examples\"));\n    assert(candidate((\"GetReadyToBeCodingFreak\")) == (\"Get Ready To Be Coding Freak\"));\n}\n",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpjp7f1kjt: /tmp/tmpjp7f1kjt.cpp:16: int main(): Assertion `candidate((\"Python\")) == (\"Python\")' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to put spaces between words starting with capital letters in a given string.\nstd::string capital_words_spaces(std::string str1) {\n    std::string str2 = \"\";\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] >= 'A' && str1[i] <= 'Z') {\n            str2 += \" \";\n        }\n        str2 += str1[i];\n    }\n    return str2;\n}\nint main() {\n    auto candidate = capital_words_spaces;\n    assert(candidate((\"Python\")) == (\"Python\"));\n    assert(candidate((\"PythonProgrammingExamples\")) == (\"Python Programming Examples\"));\n    assert(candidate((\"GetReadyToBeCodingFreak\")) == (\"Get Ready To Be Coding Freak\"));\n}\n",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmp7j1c_1uk: /tmp/tmp7j1c_1uk.cpp:16: int main(): Assertion `candidate((\"Python\")) == (\"Python\")' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to put spaces between words starting with capital letters in a given string.\nstd::string capital_words_spaces(std::string str1) {\n    std::string str2 = \"\";\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] >= 'A' && str1[i] <= 'Z') {\n            str2 += \" \";\n        }\n        str2 += str1[i];\n    }\n    return str2;\n}\nint main() {\n    auto candidate = capital_words_spaces;\n    assert(candidate((\"Python\")) == (\"Python\"));\n    assert(candidate((\"PythonProgrammingExamples\")) == (\"Python Programming Examples\"));\n    assert(candidate((\"GetReadyToBeCodingFreak\")) == (\"Get Ready To Be Coding Freak\"));\n}\n",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmp7j1c_1uk: /tmp/tmp7j1c_1uk.cpp:16: int main(): Assertion `candidate((\"Python\")) == (\"Python\")' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to put spaces between words starting with capital letters in a given string.\nstd::string capital_words_spaces(std::string str1) {\n    std::string str2;\n    for(int i=0;i<str1.size();i++) {\n        if(str1[i]>='A' && str1[i]<='Z') {\n            str2.push_back(' ');\n        }\n        str2.push_back(str1[i]);\n    }\n    return str2;\n}\nint main() {\n    auto candidate = capital_words_spaces;\n    assert(candidate((\"Python\")) == (\"Python\"));\n    assert(candidate((\"PythonProgrammingExamples\")) == (\"Python Programming Examples\"));\n    assert(candidate((\"GetReadyToBeCodingFreak\")) == (\"Get Ready To Be Coding Freak\"));\n}\n",
      "timestamp": 1666123059,
      "stdout": "",
      "stderr": "tmp4zodthhi: /tmp/tmp4zodthhi.cpp:16: int main(): Assertion `candidate((\"Python\")) == (\"Python\")' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to put spaces between words starting with capital letters in a given string.\nstd::string capital_words_spaces(std::string str1) {\n    std::string str2;\n    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] >= 'A' && str1[i] <= 'Z') {\n            str2 += \" \";\n            str2 += str1[i];\n        }\n        else {\n            str2 += str1[i];\n        }\n    }\n    return str2;\n}\nint main() {\n    auto candidate = capital_words_spaces;\n    assert(candidate((\"Python\")) == (\"Python\"));\n    assert(candidate((\"PythonProgrammingExamples\")) == (\"Python Programming Examples\"));\n    assert(candidate((\"GetReadyToBeCodingFreak\")) == (\"Get Ready To Be Coding Freak\"));\n}\n",
      "timestamp": 1666123056,
      "stdout": "",
      "stderr": "tmpi7nby119: /tmp/tmpi7nby119.cpp:19: int main(): Assertion `candidate((\"Python\")) == (\"Python\")' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to put spaces between words starting with capital letters in a given string.\nstd::string capital_words_spaces(std::string str1) {\n    std::string str2;\n    for(int i = 0; i < str1.size(); i++) {\n        if(str1[i] >= 'A' && str1[i] <= 'Z') {\n            str2 += \" \";\n        }\n        str2 += str1[i];\n    }\n    return str2;\n}\nint main() {\n    auto candidate = capital_words_spaces;\n    assert(candidate((\"Python\")) == (\"Python\"));\n    assert(candidate((\"PythonProgrammingExamples\")) == (\"Python Programming Examples\"));\n    assert(candidate((\"GetReadyToBeCodingFreak\")) == (\"Get Ready To Be Coding Freak\"));\n}\n",
      "timestamp": 1666123058,
      "stdout": "",
      "stderr": "tmp1qfebs6_: /tmp/tmp1qfebs6_.cpp:16: int main(): Assertion `candidate((\"Python\")) == (\"Python\")' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to put spaces between words starting with capital letters in a given string.\nstd::string capital_words_spaces(std::string str1) {\n    std::string str2;\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] >= 'A' && str1[i] <= 'Z') {\n            str2 += ' ';\n        }\n        str2 += str1[i];\n    }\n    return str2;\n}\nint main() {\n    auto candidate = capital_words_spaces;\n    assert(candidate((\"Python\")) == (\"Python\"));\n    assert(candidate((\"PythonProgrammingExamples\")) == (\"Python Programming Examples\"));\n    assert(candidate((\"GetReadyToBeCodingFreak\")) == (\"Get Ready To Be Coding Freak\"));\n}\n",
      "timestamp": 1665510374,
      "stdout": "",
      "stderr": "tmp73zf7jmj: /tmp/tmp73zf7jmj.cpp:16: int main(): Assertion `candidate((\"Python\")) == (\"Python\")' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to put spaces between words starting with capital letters in a given string.\nstd::string capital_words_spaces(std::string str1) {\n    std::string str2;\n    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] >= 'A' && str1[i] <= 'Z') {\n            str2 += ' ';\n        }\n        str2 += str1[i];\n    }\n    return str2;\n}\nint main() {\n    auto candidate = capital_words_spaces;\n    assert(candidate((\"Python\")) == (\"Python\"));\n    assert(candidate((\"PythonProgrammingExamples\")) == (\"Python Programming Examples\"));\n    assert(candidate((\"GetReadyToBeCodingFreak\")) == (\"Get Ready To Be Coding Freak\"));\n}\n",
      "timestamp": 1665510372,
      "stdout": "",
      "stderr": "tmp1di6_cnp: /tmp/tmp1di6_cnp.cpp:16: int main(): Assertion `candidate((\"Python\")) == (\"Python\")' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to put spaces between words starting with capital letters in a given string.\nstd::string capital_words_spaces(std::string str1) {\n    std::string str2 = \"\";\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] >= 'A' && str1[i] <= 'Z') {\n            str2 += \" \";\n        }\n        str2 += str1[i];\n    }\n    return str2;\n}\nint main() {\n    auto candidate = capital_words_spaces;\n    assert(candidate((\"Python\")) == (\"Python\"));\n    assert(candidate((\"PythonProgrammingExamples\")) == (\"Python Programming Examples\"));\n    assert(candidate((\"GetReadyToBeCodingFreak\")) == (\"Get Ready To Be Coding Freak\"));\n}\n",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmp7j1c_1uk: /tmp/tmp7j1c_1uk.cpp:16: int main(): Assertion `candidate((\"Python\")) == (\"Python\")' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to put spaces between words starting with capital letters in a given string.\nstd::string capital_words_spaces(std::string str1) {\n    std::string str2;\n    for(int i=0;i<str1.length();i++) {\n        if(str1[i]>='A' && str1[i]<='Z') {\n            str2.push_back(' ');\n        }\n        str2.push_back(str1[i]);\n    }\n    return str2;\n}\nint main() {\n    auto candidate = capital_words_spaces;\n    assert(candidate((\"Python\")) == (\"Python\"));\n    assert(candidate((\"PythonProgrammingExamples\")) == (\"Python Programming Examples\"));\n    assert(candidate((\"GetReadyToBeCodingFreak\")) == (\"Get Ready To Be Coding Freak\"));\n}\n",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpp6ffmz1z: /tmp/tmpp6ffmz1z.cpp:16: int main(): Assertion `candidate((\"Python\")) == (\"Python\")' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to put spaces between words starting with capital letters in a given string.\nstd::string capital_words_spaces(std::string str1) {\n    std::string str2 = \"\";\n    for(int i=0; i<str1.length(); i++) {\n        if(i==0) {\n            str2 += str1[i];\n        }\n        else if(str1[i] >= 'A' && str1[i] <= 'Z') {\n            str2 += \" \";\n            str2 += str1[i];\n        }\n        else {\n            str2 += str1[i];\n        }\n    }\n    return str2;\n}\nint main() {\n    auto candidate = capital_words_spaces;\n    assert(candidate((\"Python\")) == (\"Python\"));\n    assert(candidate((\"PythonProgrammingExamples\")) == (\"Python Programming Examples\"));\n    assert(candidate((\"GetReadyToBeCodingFreak\")) == (\"Get Ready To Be Coding Freak\"));\n}\n",
      "timestamp": 1666123063,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to put spaces between words starting with capital letters in a given string.\nstd::string capital_words_spaces(std::string str1) {\n\tstd::string str2;\n\tfor (int i = 0; i < str1.length(); i++) {\n\t\tif (str1[i] >= 'A' && str1[i] <= 'Z') {\n\t\t\tstr2 += ' ';\n\t\t}\n\t\tstr2 += str1[i];\n\t}\n\treturn str2;\n}\nint main() {\n    auto candidate = capital_words_spaces;\n    assert(candidate((\"Python\")) == (\"Python\"));\n    assert(candidate((\"PythonProgrammingExamples\")) == (\"Python Programming Examples\"));\n    assert(candidate((\"GetReadyToBeCodingFreak\")) == (\"Get Ready To Be Coding Freak\"));\n}\n",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpjp7f1kjt: /tmp/tmpjp7f1kjt.cpp:16: int main(): Assertion `candidate((\"Python\")) == (\"Python\")' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to put spaces between words starting with capital letters in a given string.\nstd::string capital_words_spaces(std::string str1) {\n    std::string str2;\n    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] >= 65 && str1[i] <= 90) {\n            str2 += \" \";\n        }\n        str2 += str1[i];\n    }\n    return str2;\n}\nint main() {\n    auto candidate = capital_words_spaces;\n    assert(candidate((\"Python\")) == (\"Python\"));\n    assert(candidate((\"PythonProgrammingExamples\")) == (\"Python Programming Examples\"));\n    assert(candidate((\"GetReadyToBeCodingFreak\")) == (\"Get Ready To Be Coding Freak\"));\n}\n",
      "timestamp": 1665510373,
      "stdout": "",
      "stderr": "tmp11cfmv3_: /tmp/tmp11cfmv3_.cpp:16: int main(): Assertion `candidate((\"Python\")) == (\"Python\")' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to put spaces between words starting with capital letters in a given string.\nstd::string capital_words_spaces(std::string str1) {\n    int i = 0;\n    while(i < str1.size()) {\n        if(str1[i] >= 'A' && str1[i] <= 'Z') {\n            str1.insert(i, \" \");\n            i += 2;\n        }\n        i++;\n    }\n    return str1;\n}\nint main() {\n    auto candidate = capital_words_spaces;\n    assert(candidate((\"Python\")) == (\"Python\"));\n    assert(candidate((\"PythonProgrammingExamples\")) == (\"Python Programming Examples\"));\n    assert(candidate((\"GetReadyToBeCodingFreak\")) == (\"Get Ready To Be Coding Freak\"));\n}\n",
      "timestamp": 1666123062,
      "stdout": "",
      "stderr": "tmp10gtfwtk: /tmp/tmp10gtfwtk.cpp:17: int main(): Assertion `candidate((\"Python\")) == (\"Python\")' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to put spaces between words starting with capital letters in a given string.\nstd::string capital_words_spaces(std::string str1) {\n    std::string str2;\n    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] >= 'A' && str1[i] <= 'Z') {\n            str2 += \" \";\n            str2 += str1[i];\n        }\n        else {\n            str2 += str1[i];\n        }\n    }\n    return str2;\n}\nint main() {\n    auto candidate = capital_words_spaces;\n    assert(candidate((\"Python\")) == (\"Python\"));\n    assert(candidate((\"PythonProgrammingExamples\")) == (\"Python Programming Examples\"));\n    assert(candidate((\"GetReadyToBeCodingFreak\")) == (\"Get Ready To Be Coding Freak\"));\n}\n",
      "timestamp": 1666123056,
      "stdout": "",
      "stderr": "tmpi7nby119: /tmp/tmpi7nby119.cpp:19: int main(): Assertion `candidate((\"Python\")) == (\"Python\")' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to put spaces between words starting with capital letters in a given string.\nstd::string capital_words_spaces(std::string str1) {\n    std::string str2;\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] >= 'A' && str1[i] <= 'Z') {\n            str2 += ' ';\n        }\n        str2 += str1[i];\n    }\n    return str2;\n}\nint main() {\n    auto candidate = capital_words_spaces;\n    assert(candidate((\"Python\")) == (\"Python\"));\n    assert(candidate((\"PythonProgrammingExamples\")) == (\"Python Programming Examples\"));\n    assert(candidate((\"GetReadyToBeCodingFreak\")) == (\"Get Ready To Be Coding Freak\"));\n}\n",
      "timestamp": 1665510374,
      "stdout": "",
      "stderr": "tmp73zf7jmj: /tmp/tmp73zf7jmj.cpp:16: int main(): Assertion `candidate((\"Python\")) == (\"Python\")' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to put spaces between words starting with capital letters in a given string.\nstd::string capital_words_spaces(std::string str1) {\n    std::string str2 = \"\";\n    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] >= 'A' && str1[i] <= 'Z') {\n            str2 += \" \";\n        }\n        str2 += str1[i];\n    }\n    return str2;\n}\nint main() {\n    auto candidate = capital_words_spaces;\n    assert(candidate((\"Python\")) == (\"Python\"));\n    assert(candidate((\"PythonProgrammingExamples\")) == (\"Python Programming Examples\"));\n    assert(candidate((\"GetReadyToBeCodingFreak\")) == (\"Get Ready To Be Coding Freak\"));\n}\n",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpyn_5vmwh: /tmp/tmpyn_5vmwh.cpp:16: int main(): Assertion `candidate((\"Python\")) == (\"Python\")' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to put spaces between words starting with capital letters in a given string.\nstd::string capital_words_spaces(std::string str1) {\n    std::string str2;\n    for(int i=0;i<str1.length();i++) {\n        if(str1[i]>='A' && str1[i]<='Z') {\n            str2+=\" \";\n            str2+=str1[i];\n        }\n        else {\n            str2+=str1[i];\n        }\n    }\n    return str2;\n}\nint main() {\n    auto candidate = capital_words_spaces;\n    assert(candidate((\"Python\")) == (\"Python\"));\n    assert(candidate((\"PythonProgrammingExamples\")) == (\"Python Programming Examples\"));\n    assert(candidate((\"GetReadyToBeCodingFreak\")) == (\"Get Ready To Be Coding Freak\"));\n}\n",
      "timestamp": 1666123064,
      "stdout": "",
      "stderr": "tmpb0gr2n0w: /tmp/tmpb0gr2n0w.cpp:19: int main(): Assertion `candidate((\"Python\")) == (\"Python\")' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to put spaces between words starting with capital letters in a given string.\nstd::string capital_words_spaces(std::string str1) {\n    std::string str2 = \"\";\n    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] >= 'A' && str1[i] <= 'Z') {\n            str2 += \" \";\n        }\n        str2 += str1[i];\n    }\n    return str2;\n}\nint main() {\n    auto candidate = capital_words_spaces;\n    assert(candidate((\"Python\")) == (\"Python\"));\n    assert(candidate((\"PythonProgrammingExamples\")) == (\"Python Programming Examples\"));\n    assert(candidate((\"GetReadyToBeCodingFreak\")) == (\"Get Ready To Be Coding Freak\"));\n}\n",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpyn_5vmwh: /tmp/tmpyn_5vmwh.cpp:16: int main(): Assertion `candidate((\"Python\")) == (\"Python\")' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to put spaces between words starting with capital letters in a given string.\nstd::string capital_words_spaces(std::string str1) {\n\tstd::string str2;\n\tfor (int i = 0; i < str1.size(); i++) {\n\t\tif (str1[i] >= 'A' && str1[i] <= 'Z') {\n\t\t\tstr2 += ' ';\n\t\t}\n\t\tstr2 += str1[i];\n\t}\n\treturn str2;\n}\nint main() {\n    auto candidate = capital_words_spaces;\n    assert(candidate((\"Python\")) == (\"Python\"));\n    assert(candidate((\"PythonProgrammingExamples\")) == (\"Python Programming Examples\"));\n    assert(candidate((\"GetReadyToBeCodingFreak\")) == (\"Get Ready To Be Coding Freak\"));\n}\n",
      "timestamp": 1666123064,
      "stdout": "",
      "stderr": "tmpzgjo6jnz: /tmp/tmpzgjo6jnz.cpp:16: int main(): Assertion `candidate((\"Python\")) == (\"Python\")' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to put spaces between words starting with capital letters in a given string.\nstd::string capital_words_spaces(std::string str1) {\n    std::string str2;\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] >= 'A' && str1[i] <= 'Z') {\n            str2 += \" \";\n        }\n        str2 += str1[i];\n    }\n    return str2;\n}\nint main() {\n    auto candidate = capital_words_spaces;\n    assert(candidate((\"Python\")) == (\"Python\"));\n    assert(candidate((\"PythonProgrammingExamples\")) == (\"Python Programming Examples\"));\n    assert(candidate((\"GetReadyToBeCodingFreak\")) == (\"Get Ready To Be Coding Freak\"));\n}\n",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmphj84u_nq: /tmp/tmphj84u_nq.cpp:16: int main(): Assertion `candidate((\"Python\")) == (\"Python\")' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to put spaces between words starting with capital letters in a given string.\nstd::string capital_words_spaces(std::string str1) {\n    std::string str2 = \"\";\n    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] >= 'A' && str1[i] <= 'Z') {\n            str2 += \" \";\n        }\n        str2 += str1[i];\n    }\n    return str2;\n}\nint main() {\n    auto candidate = capital_words_spaces;\n    assert(candidate((\"Python\")) == (\"Python\"));\n    assert(candidate((\"PythonProgrammingExamples\")) == (\"Python Programming Examples\"));\n    assert(candidate((\"GetReadyToBeCodingFreak\")) == (\"Get Ready To Be Coding Freak\"));\n}\n",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpyn_5vmwh: /tmp/tmpyn_5vmwh.cpp:16: int main(): Assertion `candidate((\"Python\")) == (\"Python\")' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to put spaces between words starting with capital letters in a given string.\nstd::string capital_words_spaces(std::string str1) {\n    std::string str2;\n    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] >= 'A' && str1[i] <= 'Z') {\n            str2 += \" \";\n        }\n        str2 += str1[i];\n    }\n    return str2;\n}\nint main() {\n    auto candidate = capital_words_spaces;\n    assert(candidate((\"Python\")) == (\"Python\"));\n    assert(candidate((\"PythonProgrammingExamples\")) == (\"Python Programming Examples\"));\n    assert(candidate((\"GetReadyToBeCodingFreak\")) == (\"Get Ready To Be Coding Freak\"));\n}\n",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmptgiwzg_y: /tmp/tmptgiwzg_y.cpp:16: int main(): Assertion `candidate((\"Python\")) == (\"Python\")' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to put spaces between words starting with capital letters in a given string.\nstd::string capital_words_spaces(std::string str1) {\n    std::string str2 = \"\";\n    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] >= 'A' && str1[i] <= 'Z') {\n            str2 += \" \";\n        }\n        str2 += str1[i];\n    }\n    return str2;\n}\nint main() {\n    auto candidate = capital_words_spaces;\n    assert(candidate((\"Python\")) == (\"Python\"));\n    assert(candidate((\"PythonProgrammingExamples\")) == (\"Python Programming Examples\"));\n    assert(candidate((\"GetReadyToBeCodingFreak\")) == (\"Get Ready To Be Coding Freak\"));\n}\n",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpyn_5vmwh: /tmp/tmpyn_5vmwh.cpp:16: int main(): Assertion `candidate((\"Python\")) == (\"Python\")' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to put spaces between words starting with capital letters in a given string.\nstd::string capital_words_spaces(std::string str1) {\n  std::string str2;\n  for (int i = 0; i < str1.length(); i++) {\n    if (str1[i] >= 'A' && str1[i] <= 'Z') {\n      str2 += \" \";\n    }\n    str2 += str1[i];\n  }\n  return str2;\n}\nint main() {\n    auto candidate = capital_words_spaces;\n    assert(candidate((\"Python\")) == (\"Python\"));\n    assert(candidate((\"PythonProgrammingExamples\")) == (\"Python Programming Examples\"));\n    assert(candidate((\"GetReadyToBeCodingFreak\")) == (\"Get Ready To Be Coding Freak\"));\n}\n",
      "timestamp": 1666123058,
      "stdout": "",
      "stderr": "tmp8l_tv3ij: /tmp/tmp8l_tv3ij.cpp:16: int main(): Assertion `candidate((\"Python\")) == (\"Python\")' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to put spaces between words starting with capital letters in a given string.\nstd::string capital_words_spaces(std::string str1) {\n    std::string str2;\n    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] >= 'A' && str1[i] <= 'Z') {\n            str2 += \" \";\n        }\n        str2 += str1[i];\n    }\n    return str2;\n}\nint main() {\n    auto candidate = capital_words_spaces;\n    assert(candidate((\"Python\")) == (\"Python\"));\n    assert(candidate((\"PythonProgrammingExamples\")) == (\"Python Programming Examples\"));\n    assert(candidate((\"GetReadyToBeCodingFreak\")) == (\"Get Ready To Be Coding Freak\"));\n}\n",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmptgiwzg_y: /tmp/tmptgiwzg_y.cpp:16: int main(): Assertion `candidate((\"Python\")) == (\"Python\")' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to put spaces between words starting with capital letters in a given string.\nstd::string capital_words_spaces(std::string str1) {\n\tstd::string str2;\n\tfor(int i = 0; i < str1.length(); i++) {\n\t\tif(str1[i] >= 'A' && str1[i] <= 'Z') {\n\t\t\tstr2.push_back(' ');\n\t\t}\n\t\tstr2.push_back(str1[i]);\n\t}\n\treturn str2;\n}\nint main() {\n    auto candidate = capital_words_spaces;\n    assert(candidate((\"Python\")) == (\"Python\"));\n    assert(candidate((\"PythonProgrammingExamples\")) == (\"Python Programming Examples\"));\n    assert(candidate((\"GetReadyToBeCodingFreak\")) == (\"Get Ready To Be Coding Freak\"));\n}\n",
      "timestamp": 1666123064,
      "stdout": "",
      "stderr": "tmpwe8ldur2: /tmp/tmpwe8ldur2.cpp:16: int main(): Assertion `candidate((\"Python\")) == (\"Python\")' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to put spaces between words starting with capital letters in a given string.\nstd::string capital_words_spaces(std::string str1) {\n    std::string str2;\n    for(int i=0;i<str1.length();i++) {\n        if(str1[i]>='A' && str1[i]<='Z') {\n            str2.push_back(' ');\n            str2.push_back(str1[i]);\n        }\n        else {\n            str2.push_back(str1[i]);\n        }\n    }\n    return str2;\n}\nint main() {\n    auto candidate = capital_words_spaces;\n    assert(candidate((\"Python\")) == (\"Python\"));\n    assert(candidate((\"PythonProgrammingExamples\")) == (\"Python Programming Examples\"));\n    assert(candidate((\"GetReadyToBeCodingFreak\")) == (\"Get Ready To Be Coding Freak\"));\n}\n",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpxzkio29z: /tmp/tmpxzkio29z.cpp:19: int main(): Assertion `candidate((\"Python\")) == (\"Python\")' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to put spaces between words starting with capital letters in a given string.\nstd::string capital_words_spaces(std::string str1) {\n    std::string str2 = \"\";\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] >= 'A' && str1[i] <= 'Z') {\n            str2 += \" \";\n        }\n        str2 += str1[i];\n    }\n    return str2;\n}\nint main() {\n    auto candidate = capital_words_spaces;\n    assert(candidate((\"Python\")) == (\"Python\"));\n    assert(candidate((\"PythonProgrammingExamples\")) == (\"Python Programming Examples\"));\n    assert(candidate((\"GetReadyToBeCodingFreak\")) == (\"Get Ready To Be Coding Freak\"));\n}\n",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmp7j1c_1uk: /tmp/tmp7j1c_1uk.cpp:16: int main(): Assertion `candidate((\"Python\")) == (\"Python\")' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to put spaces between words starting with capital letters in a given string.\nstd::string capital_words_spaces(std::string str1) {\n\tstd::string str2 = \"\";\n\tfor (int i = 0; i < str1.length(); i++) {\n\t\tif (str1[i] >= 'A' && str1[i] <= 'Z') {\n\t\t\tstr2 += \" \";\n\t\t}\n\t\tstr2 += str1[i];\n\t}\n\treturn str2;\n}\nint main() {\n    auto candidate = capital_words_spaces;\n    assert(candidate((\"Python\")) == (\"Python\"));\n    assert(candidate((\"PythonProgrammingExamples\")) == (\"Python Programming Examples\"));\n    assert(candidate((\"GetReadyToBeCodingFreak\")) == (\"Get Ready To Be Coding Freak\"));\n}\n",
      "timestamp": 1666123056,
      "stdout": "",
      "stderr": "tmp92b3slr5: /tmp/tmp92b3slr5.cpp:16: int main(): Assertion `candidate((\"Python\")) == (\"Python\")' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to put spaces between words starting with capital letters in a given string.\nstd::string capital_words_spaces(std::string str1) {\n    std::string str2;\n    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] >= 'A' && str1[i] <= 'Z') {\n            str2 += \" \";\n        }\n        str2 += str1[i];\n    }\n    return str2;\n}\nint main() {\n    auto candidate = capital_words_spaces;\n    assert(candidate((\"Python\")) == (\"Python\"));\n    assert(candidate((\"PythonProgrammingExamples\")) == (\"Python Programming Examples\"));\n    assert(candidate((\"GetReadyToBeCodingFreak\")) == (\"Get Ready To Be Coding Freak\"));\n}\n",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmptgiwzg_y: /tmp/tmptgiwzg_y.cpp:16: int main(): Assertion `candidate((\"Python\")) == (\"Python\")' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to put spaces between words starting with capital letters in a given string.\nstd::string capital_words_spaces(std::string str1) {\n  std::string str2;\n  for(int i=0;i<str1.length();i++) {\n    if(str1[i]>='A' && str1[i]<='Z') {\n      str2+=\" \";\n      str2+=str1[i];\n    }\n    else {\n      str2+=str1[i];\n    }\n  }\n  return str2;\n}\nint main() {\n    auto candidate = capital_words_spaces;\n    assert(candidate((\"Python\")) == (\"Python\"));\n    assert(candidate((\"PythonProgrammingExamples\")) == (\"Python Programming Examples\"));\n    assert(candidate((\"GetReadyToBeCodingFreak\")) == (\"Get Ready To Be Coding Freak\"));\n}\n",
      "timestamp": 1666123064,
      "stdout": "",
      "stderr": "tmpt2u1nc4z: /tmp/tmpt2u1nc4z.cpp:19: int main(): Assertion `candidate((\"Python\")) == (\"Python\")' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to put spaces between words starting with capital letters in a given string.\nstd::string capital_words_spaces(std::string str1) {\n  std::string str2;\n  for(int i=0;i<str1.length();i++) {\n    if(str1[i]>='A' && str1[i]<='Z') {\n      str2.push_back(' ');\n    }\n    str2.push_back(str1[i]);\n  }\n  return str2;\n}\nint main() {\n    auto candidate = capital_words_spaces;\n    assert(candidate((\"Python\")) == (\"Python\"));\n    assert(candidate((\"PythonProgrammingExamples\")) == (\"Python Programming Examples\"));\n    assert(candidate((\"GetReadyToBeCodingFreak\")) == (\"Get Ready To Be Coding Freak\"));\n}\n",
      "timestamp": 1666123064,
      "stdout": "",
      "stderr": "tmp2a2tja4l: /tmp/tmp2a2tja4l.cpp:16: int main(): Assertion `candidate((\"Python\")) == (\"Python\")' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to put spaces between words starting with capital letters in a given string.\nstd::string capital_words_spaces(std::string str1) {\n\tstd::string str2;\n\tfor (int i = 0; i < str1.length(); i++) {\n\t\tif (str1[i] >= 65 && str1[i] <= 90) {\n\t\t\tstr2.push_back(' ');\n\t\t}\n\t\tstr2.push_back(str1[i]);\n\t}\n\treturn str2;\n}\nint main() {\n    auto candidate = capital_words_spaces;\n    assert(candidate((\"Python\")) == (\"Python\"));\n    assert(candidate((\"PythonProgrammingExamples\")) == (\"Python Programming Examples\"));\n    assert(candidate((\"GetReadyToBeCodingFreak\")) == (\"Get Ready To Be Coding Freak\"));\n}\n",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmproxf5a6x: /tmp/tmproxf5a6x.cpp:16: int main(): Assertion `candidate((\"Python\")) == (\"Python\")' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to put spaces between words starting with capital letters in a given string.\nstd::string capital_words_spaces(std::string str1) {\n  std::string str2 = \"\";\n  for (int i = 0; i < str1.length(); i++) {\n    if (str1[i] >= 'A' && str1[i] <= 'Z') {\n      str2 += \" \";\n    }\n    str2 += str1[i];\n  }\n  return str2;\n}\nint main() {\n    auto candidate = capital_words_spaces;\n    assert(candidate((\"Python\")) == (\"Python\"));\n    assert(candidate((\"PythonProgrammingExamples\")) == (\"Python Programming Examples\"));\n    assert(candidate((\"GetReadyToBeCodingFreak\")) == (\"Get Ready To Be Coding Freak\"));\n}\n",
      "timestamp": 1666123056,
      "stdout": "",
      "stderr": "tmpilkezylw: /tmp/tmpilkezylw.cpp:16: int main(): Assertion `candidate((\"Python\")) == (\"Python\")' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to put spaces between words starting with capital letters in a given string.\nstd::string capital_words_spaces(std::string str1) {\n    std::string str2 = \"\";\n    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] >= 'A' && str1[i] <= 'Z') {\n            str2 += \" \";\n            str2 += str1[i];\n        }\n        else {\n            str2 += str1[i];\n        }\n    }\n    return str2;\n}\nint main() {\n    auto candidate = capital_words_spaces;\n    assert(candidate((\"Python\")) == (\"Python\"));\n    assert(candidate((\"PythonProgrammingExamples\")) == (\"Python Programming Examples\"));\n    assert(candidate((\"GetReadyToBeCodingFreak\")) == (\"Get Ready To Be Coding Freak\"));\n}\n",
      "timestamp": 1666123064,
      "stdout": "",
      "stderr": "tmpn52aq9iy: /tmp/tmpn52aq9iy.cpp:19: int main(): Assertion `candidate((\"Python\")) == (\"Python\")' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to put spaces between words starting with capital letters in a given string.\nstd::string capital_words_spaces(std::string str1) {\n\tstd::string str2;\n\tfor(int i=0;i<str1.length();i++) {\n\t\tif(str1[i]>='A' && str1[i]<='Z') {\n\t\t\tstr2.push_back(' ');\n\t\t\tstr2.push_back(str1[i]);\n\t\t}\n\t\telse {\n\t\t\tstr2.push_back(str1[i]);\n\t\t}\n\t}\n\treturn str2;\n}\nint main() {\n    auto candidate = capital_words_spaces;\n    assert(candidate((\"Python\")) == (\"Python\"));\n    assert(candidate((\"PythonProgrammingExamples\")) == (\"Python Programming Examples\"));\n    assert(candidate((\"GetReadyToBeCodingFreak\")) == (\"Get Ready To Be Coding Freak\"));\n}\n",
      "timestamp": 1665510373,
      "stdout": "",
      "stderr": "tmprndtlye9: /tmp/tmprndtlye9.cpp:19: int main(): Assertion `candidate((\"Python\")) == (\"Python\")' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to put spaces between words starting with capital letters in a given string.\nstd::string capital_words_spaces(std::string str1) {\n    std::string str2;\n    for(int i=0;i<str1.length();i++) {\n        if(str1[i]>='A' && str1[i]<='Z') {\n            str2 += \" \";\n        }\n        str2 += str1[i];\n    }\n    return str2;\n}\nint main() {\n    auto candidate = capital_words_spaces;\n    assert(candidate((\"Python\")) == (\"Python\"));\n    assert(candidate((\"PythonProgrammingExamples\")) == (\"Python Programming Examples\"));\n    assert(candidate((\"GetReadyToBeCodingFreak\")) == (\"Get Ready To Be Coding Freak\"));\n}\n",
      "timestamp": 1666123056,
      "stdout": "",
      "stderr": "tmpnu5giv5j: /tmp/tmpnu5giv5j.cpp:16: int main(): Assertion `candidate((\"Python\")) == (\"Python\")' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to put spaces between words starting with capital letters in a given string.\nstd::string capital_words_spaces(std::string str1) {\n    std::string str2 = \"\";\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] >= 'A' && str1[i] <= 'Z') {\n            str2 += \" \";\n        }\n        str2 += str1[i];\n    }\n    return str2;\n}\nint main() {\n    auto candidate = capital_words_spaces;\n    assert(candidate((\"Python\")) == (\"Python\"));\n    assert(candidate((\"PythonProgrammingExamples\")) == (\"Python Programming Examples\"));\n    assert(candidate((\"GetReadyToBeCodingFreak\")) == (\"Get Ready To Be Coding Freak\"));\n}\n",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmp7j1c_1uk: /tmp/tmp7j1c_1uk.cpp:16: int main(): Assertion `candidate((\"Python\")) == (\"Python\")' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to put spaces between words starting with capital letters in a given string.\nstd::string capital_words_spaces(std::string str1) {\n  int n = str1.length();\n  std::string str2;\n  for(int i = 0; i < n; i++) {\n    if(str1[i] >= 'A' && str1[i] <= 'Z') {\n      str2 += ' ';\n    }\n    str2 += str1[i];\n  }\n  return str2;\n}\nint main() {\n    auto candidate = capital_words_spaces;\n    assert(candidate((\"Python\")) == (\"Python\"));\n    assert(candidate((\"PythonProgrammingExamples\")) == (\"Python Programming Examples\"));\n    assert(candidate((\"GetReadyToBeCodingFreak\")) == (\"Get Ready To Be Coding Freak\"));\n}\n",
      "timestamp": 1666123064,
      "stdout": "",
      "stderr": "tmp_ywy5czw: /tmp/tmp_ywy5czw.cpp:17: int main(): Assertion `candidate((\"Python\")) == (\"Python\")' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to put spaces between words starting with capital letters in a given string.\nstd::string capital_words_spaces(std::string str1) {\n    int i = 0;\n    while (i < str1.length()) {\n        if (str1[i] >= 'A' && str1[i] <= 'Z') {\n            str1.insert(i, \" \");\n            i++;\n        }\n        i++;\n    }\n    return str1;\n}\nint main() {\n    auto candidate = capital_words_spaces;\n    assert(candidate((\"Python\")) == (\"Python\"));\n    assert(candidate((\"PythonProgrammingExamples\")) == (\"Python Programming Examples\"));\n    assert(candidate((\"GetReadyToBeCodingFreak\")) == (\"Get Ready To Be Coding Freak\"));\n}\n",
      "timestamp": 1666123064,
      "stdout": "",
      "stderr": "tmphljf28x7: /tmp/tmphljf28x7.cpp:17: int main(): Assertion `candidate((\"Python\")) == (\"Python\")' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to put spaces between words starting with capital letters in a given string.\nstd::string capital_words_spaces(std::string str1) {\n    std::string str2 = \"\";\n    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] >= 'A' && str1[i] <= 'Z') {\n            str2 += \" \";\n        }\n        str2 += str1[i];\n    }\n    return str2;\n}\nint main() {\n    auto candidate = capital_words_spaces;\n    assert(candidate((\"Python\")) == (\"Python\"));\n    assert(candidate((\"PythonProgrammingExamples\")) == (\"Python Programming Examples\"));\n    assert(candidate((\"GetReadyToBeCodingFreak\")) == (\"Get Ready To Be Coding Freak\"));\n}\n",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpyn_5vmwh: /tmp/tmpyn_5vmwh.cpp:16: int main(): Assertion `candidate((\"Python\")) == (\"Python\")' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to put spaces between words starting with capital letters in a given string.\nstd::string capital_words_spaces(std::string str1) {\n    std::string str2;\n    for(int i=0;i<str1.length();i++) {\n        if(str1[i]>='A' && str1[i]<='Z') {\n            str2.push_back(' ');\n            str2.push_back(str1[i]);\n        }\n        else {\n            str2.push_back(str1[i]);\n        }\n    }\n    return str2;\n}\nint main() {\n    auto candidate = capital_words_spaces;\n    assert(candidate((\"Python\")) == (\"Python\"));\n    assert(candidate((\"PythonProgrammingExamples\")) == (\"Python Programming Examples\"));\n    assert(candidate((\"GetReadyToBeCodingFreak\")) == (\"Get Ready To Be Coding Freak\"));\n}\n",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpxzkio29z: /tmp/tmpxzkio29z.cpp:19: int main(): Assertion `candidate((\"Python\")) == (\"Python\")' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to put spaces between words starting with capital letters in a given string.\nstd::string capital_words_spaces(std::string str1) {\n    std::string str = \"\";\n    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] >= 'A' && str1[i] <= 'Z') {\n            str += \" \";\n        }\n        str += str1[i];\n    }\n    return str;\n}\nint main() {\n    auto candidate = capital_words_spaces;\n    assert(candidate((\"Python\")) == (\"Python\"));\n    assert(candidate((\"PythonProgrammingExamples\")) == (\"Python Programming Examples\"));\n    assert(candidate((\"GetReadyToBeCodingFreak\")) == (\"Get Ready To Be Coding Freak\"));\n}\n",
      "timestamp": 1666123064,
      "stdout": "",
      "stderr": "tmpkb9xpvzz: /tmp/tmpkb9xpvzz.cpp:16: int main(): Assertion `candidate((\"Python\")) == (\"Python\")' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to put spaces between words starting with capital letters in a given string.\nstd::string capital_words_spaces(std::string str1) {\n    std::string str2;\n    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] >= 'A' && str1[i] <= 'Z') {\n            str2 += \" \";\n        }\n        str2 += str1[i];\n    }\n    return str2;\n}\nint main() {\n    auto candidate = capital_words_spaces;\n    assert(candidate((\"Python\")) == (\"Python\"));\n    assert(candidate((\"PythonProgrammingExamples\")) == (\"Python Programming Examples\"));\n    assert(candidate((\"GetReadyToBeCodingFreak\")) == (\"Get Ready To Be Coding Freak\"));\n}\n",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmptgiwzg_y: /tmp/tmptgiwzg_y.cpp:16: int main(): Assertion `candidate((\"Python\")) == (\"Python\")' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to put spaces between words starting with capital letters in a given string.\nstd::string capital_words_spaces(std::string str1) {\n    std::string str2;\n    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] >= 'A' && str1[i] <= 'Z') {\n            str2 += \" \";\n            str2 += str1[i];\n        }\n        else {\n            str2 += str1[i];\n        }\n    }\n    return str2;\n}\nint main() {\n    auto candidate = capital_words_spaces;\n    assert(candidate((\"Python\")) == (\"Python\"));\n    assert(candidate((\"PythonProgrammingExamples\")) == (\"Python Programming Examples\"));\n    assert(candidate((\"GetReadyToBeCodingFreak\")) == (\"Get Ready To Be Coding Freak\"));\n}\n",
      "timestamp": 1666123056,
      "stdout": "",
      "stderr": "tmpi7nby119: /tmp/tmpi7nby119.cpp:19: int main(): Assertion `candidate((\"Python\")) == (\"Python\")' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to put spaces between words starting with capital letters in a given string.\nstd::string capital_words_spaces(std::string str1) {\n    std::string str2;\n    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] >= 'A' && str1[i] <= 'Z') {\n            str2 += ' ';\n        }\n        str2 += str1[i];\n    }\n    return str2;\n}\nint main() {\n    auto candidate = capital_words_spaces;\n    assert(candidate((\"Python\")) == (\"Python\"));\n    assert(candidate((\"PythonProgrammingExamples\")) == (\"Python Programming Examples\"));\n    assert(candidate((\"GetReadyToBeCodingFreak\")) == (\"Get Ready To Be Coding Freak\"));\n}\n",
      "timestamp": 1665510372,
      "stdout": "",
      "stderr": "tmp1di6_cnp: /tmp/tmp1di6_cnp.cpp:16: int main(): Assertion `candidate((\"Python\")) == (\"Python\")' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to put spaces between words starting with capital letters in a given string.\nstd::string capital_words_spaces(std::string str1) {\n    std::string str2;\n    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] >= 'A' && str1[i] <= 'Z') {\n            str2 += \" \";\n        }\n        str2 += str1[i];\n    }\n    return str2;\n}\nint main() {\n    auto candidate = capital_words_spaces;\n    assert(candidate((\"Python\")) == (\"Python\"));\n    assert(candidate((\"PythonProgrammingExamples\")) == (\"Python Programming Examples\"));\n    assert(candidate((\"GetReadyToBeCodingFreak\")) == (\"Get Ready To Be Coding Freak\"));\n}\n",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmptgiwzg_y: /tmp/tmptgiwzg_y.cpp:16: int main(): Assertion `candidate((\"Python\")) == (\"Python\")' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to put spaces between words starting with capital letters in a given string.\nstd::string capital_words_spaces(std::string str1) {\n    std::string str2 = \"\";\n    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] >= 'A' && str1[i] <= 'Z') {\n            str2 += \" \";\n        }\n        str2 += str1[i];\n    }\n    return str2;\n}\nint main() {\n    auto candidate = capital_words_spaces;\n    assert(candidate((\"Python\")) == (\"Python\"));\n    assert(candidate((\"PythonProgrammingExamples\")) == (\"Python Programming Examples\"));\n    assert(candidate((\"GetReadyToBeCodingFreak\")) == (\"Get Ready To Be Coding Freak\"));\n}\n",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpyn_5vmwh: /tmp/tmpyn_5vmwh.cpp:16: int main(): Assertion `candidate((\"Python\")) == (\"Python\")' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to put spaces between words starting with capital letters in a given string.\nstd::string capital_words_spaces(std::string str1) {\n    std::string str2;\n    for(int i=0;i<str1.length();i++) {\n        if(str1[i]>=65 && str1[i]<=90) {\n            str2.push_back(' ');\n        }\n        str2.push_back(str1[i]);\n    }\n    return str2;\n}\nint main() {\n    auto candidate = capital_words_spaces;\n    assert(candidate((\"Python\")) == (\"Python\"));\n    assert(candidate((\"PythonProgrammingExamples\")) == (\"Python Programming Examples\"));\n    assert(candidate((\"GetReadyToBeCodingFreak\")) == (\"Get Ready To Be Coding Freak\"));\n}\n",
      "timestamp": 1666123062,
      "stdout": "",
      "stderr": "tmpf0repzb4: /tmp/tmpf0repzb4.cpp:16: int main(): Assertion `candidate((\"Python\")) == (\"Python\")' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to put spaces between words starting with capital letters in a given string.\nstd::string capital_words_spaces(std::string str1) {\n\tstd::string str2;\n\tfor (int i = 0; i < str1.length(); i++) {\n\t\tif (str1[i] >= 'A' && str1[i] <= 'Z') {\n\t\t\tstr2 += ' ';\n\t\t}\n\t\tstr2 += str1[i];\n\t}\n\treturn str2;\n}\nint main() {\n    auto candidate = capital_words_spaces;\n    assert(candidate((\"Python\")) == (\"Python\"));\n    assert(candidate((\"PythonProgrammingExamples\")) == (\"Python Programming Examples\"));\n    assert(candidate((\"GetReadyToBeCodingFreak\")) == (\"Get Ready To Be Coding Freak\"));\n}\n",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpjp7f1kjt: /tmp/tmpjp7f1kjt.cpp:16: int main(): Assertion `candidate((\"Python\")) == (\"Python\")' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to put spaces between words starting with capital letters in a given string.\nstd::string capital_words_spaces(std::string str1) {\n    std::string str2;\n    for(int i=0;i<str1.length();i++) {\n        if(str1[i]>='A' && str1[i]<='Z') {\n            if(i!=0) {\n                str2.push_back(' ');\n            }\n        }\n        str2.push_back(str1[i]);\n    }\n    return str2;\n}\nint main() {\n    auto candidate = capital_words_spaces;\n    assert(candidate((\"Python\")) == (\"Python\"));\n    assert(candidate((\"PythonProgrammingExamples\")) == (\"Python Programming Examples\"));\n    assert(candidate((\"GetReadyToBeCodingFreak\")) == (\"Get Ready To Be Coding Freak\"));\n}\n",
      "timestamp": 1666123064,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to put spaces between words starting with capital letters in a given string.\nstd::string capital_words_spaces(std::string str1) {\n    std::string str2 = \"\";\n    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] >= 'A' && str1[i] <= 'Z') {\n            str2 += \" \";\n        }\n        str2 += str1[i];\n    }\n    return str2;\n}\nint main() {\n    auto candidate = capital_words_spaces;\n    assert(candidate((\"Python\")) == (\"Python\"));\n    assert(candidate((\"PythonProgrammingExamples\")) == (\"Python Programming Examples\"));\n    assert(candidate((\"GetReadyToBeCodingFreak\")) == (\"Get Ready To Be Coding Freak\"));\n}\n",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpyn_5vmwh: /tmp/tmpyn_5vmwh.cpp:16: int main(): Assertion `candidate((\"Python\")) == (\"Python\")' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to put spaces between words starting with capital letters in a given string.\nstd::string capital_words_spaces(std::string str1) {\n    std::string str2 = \"\";\n    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] >= 'A' && str1[i] <= 'Z') {\n            str2 += \" \";\n        }\n        str2 += str1[i];\n    }\n    return str2;\n}\nint main() {\n    auto candidate = capital_words_spaces;\n    assert(candidate((\"Python\")) == (\"Python\"));\n    assert(candidate((\"PythonProgrammingExamples\")) == (\"Python Programming Examples\"));\n    assert(candidate((\"GetReadyToBeCodingFreak\")) == (\"Get Ready To Be Coding Freak\"));\n}\n",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpyn_5vmwh: /tmp/tmpyn_5vmwh.cpp:16: int main(): Assertion `candidate((\"Python\")) == (\"Python\")' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to put spaces between words starting with capital letters in a given string.\nstd::string capital_words_spaces(std::string str1) {\n\tstd::string str2 = \"\";\n\tfor (int i = 0; i < str1.length(); i++) {\n\t\tif (str1[i] >= 'A' && str1[i] <= 'Z') {\n\t\t\tstr2 += \" \";\n\t\t}\n\t\tstr2 += str1[i];\n\t}\n\treturn str2;\n}\nint main() {\n    auto candidate = capital_words_spaces;\n    assert(candidate((\"Python\")) == (\"Python\"));\n    assert(candidate((\"PythonProgrammingExamples\")) == (\"Python Programming Examples\"));\n    assert(candidate((\"GetReadyToBeCodingFreak\")) == (\"Get Ready To Be Coding Freak\"));\n}\n",
      "timestamp": 1666123056,
      "stdout": "",
      "stderr": "tmp92b3slr5: /tmp/tmp92b3slr5.cpp:16: int main(): Assertion `candidate((\"Python\")) == (\"Python\")' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to put spaces between words starting with capital letters in a given string.\nstd::string capital_words_spaces(std::string str1) {\n    std::string str2;\n    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] >= 'A' && str1[i] <= 'Z') {\n            str2.push_back(' ');\n        }\n        str2.push_back(str1[i]);\n    }\n    return str2;\n}\nint main() {\n    auto candidate = capital_words_spaces;\n    assert(candidate((\"Python\")) == (\"Python\"));\n    assert(candidate((\"PythonProgrammingExamples\")) == (\"Python Programming Examples\"));\n    assert(candidate((\"GetReadyToBeCodingFreak\")) == (\"Get Ready To Be Coding Freak\"));\n}\n",
      "timestamp": 1666123064,
      "stdout": "",
      "stderr": "tmpyws3cokb: /tmp/tmpyws3cokb.cpp:16: int main(): Assertion `candidate((\"Python\")) == (\"Python\")' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to put spaces between words starting with capital letters in a given string.\nstd::string capital_words_spaces(std::string str1) {\n    std::string str2 = \"\";\n    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] >= 'A' && str1[i] <= 'Z') {\n            str2 += \" \";\n        }\n        str2 += str1[i];\n    }\n    return str2;\n}\nint main() {\n    auto candidate = capital_words_spaces;\n    assert(candidate((\"Python\")) == (\"Python\"));\n    assert(candidate((\"PythonProgrammingExamples\")) == (\"Python Programming Examples\"));\n    assert(candidate((\"GetReadyToBeCodingFreak\")) == (\"Get Ready To Be Coding Freak\"));\n}\n",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpyn_5vmwh: /tmp/tmpyn_5vmwh.cpp:16: int main(): Assertion `candidate((\"Python\")) == (\"Python\")' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to put spaces between words starting with capital letters in a given string.\nstd::string capital_words_spaces(std::string str1) {\n\tstd::string str2;\n\tfor (int i = 0; i < str1.length(); i++) {\n\t\tif (str1[i] >= 'A' && str1[i] <= 'Z') {\n\t\t\tstr2 += \" \";\n\t\t}\n\t\tstr2 += str1[i];\n\t}\n\treturn str2;\n}\nint main() {\n    auto candidate = capital_words_spaces;\n    assert(candidate((\"Python\")) == (\"Python\"));\n    assert(candidate((\"PythonProgrammingExamples\")) == (\"Python Programming Examples\"));\n    assert(candidate((\"GetReadyToBeCodingFreak\")) == (\"Get Ready To Be Coding Freak\"));\n}\n",
      "timestamp": 1666123056,
      "stdout": "",
      "stderr": "tmpbfxqxreg: /tmp/tmpbfxqxreg.cpp:16: int main(): Assertion `candidate((\"Python\")) == (\"Python\")' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to put spaces between words starting with capital letters in a given string.\nstd::string capital_words_spaces(std::string str1) {\n    std::string str2;\n    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] >= 'A' && str1[i] <= 'Z') {\n            str2 += \" \";\n        }\n        str2 += str1[i];\n    }\n    return str2;\n}\nint main() {\n    auto candidate = capital_words_spaces;\n    assert(candidate((\"Python\")) == (\"Python\"));\n    assert(candidate((\"PythonProgrammingExamples\")) == (\"Python Programming Examples\"));\n    assert(candidate((\"GetReadyToBeCodingFreak\")) == (\"Get Ready To Be Coding Freak\"));\n}\n",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmptgiwzg_y: /tmp/tmptgiwzg_y.cpp:16: int main(): Assertion `candidate((\"Python\")) == (\"Python\")' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to put spaces between words starting with capital letters in a given string.\nstd::string capital_words_spaces(std::string str1) {\n    std::string str2;\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] >= 'A' && str1[i] <= 'Z') {\n            str2 += ' ';\n        }\n        str2 += str1[i];\n    }\n    return str2;\n}\nint main() {\n    auto candidate = capital_words_spaces;\n    assert(candidate((\"Python\")) == (\"Python\"));\n    assert(candidate((\"PythonProgrammingExamples\")) == (\"Python Programming Examples\"));\n    assert(candidate((\"GetReadyToBeCodingFreak\")) == (\"Get Ready To Be Coding Freak\"));\n}\n",
      "timestamp": 1665510374,
      "stdout": "",
      "stderr": "tmp73zf7jmj: /tmp/tmp73zf7jmj.cpp:16: int main(): Assertion `candidate((\"Python\")) == (\"Python\")' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to put spaces between words starting with capital letters in a given string.\nstd::string capital_words_spaces(std::string str1) {\n    std::string str2 = \"\";\n    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] >= 'A' && str1[i] <= 'Z') {\n            str2 += \" \";\n        }\n        str2 += str1[i];\n    }\n    return str2;\n}\nint main() {\n    auto candidate = capital_words_spaces;\n    assert(candidate((\"Python\")) == (\"Python\"));\n    assert(candidate((\"PythonProgrammingExamples\")) == (\"Python Programming Examples\"));\n    assert(candidate((\"GetReadyToBeCodingFreak\")) == (\"Get Ready To Be Coding Freak\"));\n}\n",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpyn_5vmwh: /tmp/tmpyn_5vmwh.cpp:16: int main(): Assertion `candidate((\"Python\")) == (\"Python\")' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to put spaces between words starting with capital letters in a given string.\nstd::string capital_words_spaces(std::string str1) {\n    std::string str2;\n    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] >= 'A' && str1[i] <= 'Z') {\n            str2 += ' ';\n        }\n        str2 += str1[i];\n    }\n    return str2;\n}\nint main() {\n    auto candidate = capital_words_spaces;\n    assert(candidate((\"Python\")) == (\"Python\"));\n    assert(candidate((\"PythonProgrammingExamples\")) == (\"Python Programming Examples\"));\n    assert(candidate((\"GetReadyToBeCodingFreak\")) == (\"Get Ready To Be Coding Freak\"));\n}\n",
      "timestamp": 1665510372,
      "stdout": "",
      "stderr": "tmp1di6_cnp: /tmp/tmp1di6_cnp.cpp:16: int main(): Assertion `candidate((\"Python\")) == (\"Python\")' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to put spaces between words starting with capital letters in a given string.\nstd::string capital_words_spaces(std::string str1) {\n    std::string str2 = \"\";\n    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] >= 'A' && str1[i] <= 'Z') {\n            str2 += \" \";\n        }\n        str2 += str1[i];\n    }\n    return str2;\n}\nint main() {\n    auto candidate = capital_words_spaces;\n    assert(candidate((\"Python\")) == (\"Python\"));\n    assert(candidate((\"PythonProgrammingExamples\")) == (\"Python Programming Examples\"));\n    assert(candidate((\"GetReadyToBeCodingFreak\")) == (\"Get Ready To Be Coding Freak\"));\n}\n",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpyn_5vmwh: /tmp/tmpyn_5vmwh.cpp:16: int main(): Assertion `candidate((\"Python\")) == (\"Python\")' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to put spaces between words starting with capital letters in a given string.\nstd::string capital_words_spaces(std::string str1) {\n    std::string str2 = \"\";\n    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] >= 'A' && str1[i] <= 'Z') {\n            str2 = str2 + \" \";\n        }\n        str2 = str2 + str1[i];\n    }\n    return str2;\n}\nint main() {\n    auto candidate = capital_words_spaces;\n    assert(candidate((\"Python\")) == (\"Python\"));\n    assert(candidate((\"PythonProgrammingExamples\")) == (\"Python Programming Examples\"));\n    assert(candidate((\"GetReadyToBeCodingFreak\")) == (\"Get Ready To Be Coding Freak\"));\n}\n",
      "timestamp": 1666123064,
      "stdout": "",
      "stderr": "tmpp3vmd6k0: /tmp/tmpp3vmd6k0.cpp:16: int main(): Assertion `candidate((\"Python\")) == (\"Python\")' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to put spaces between words starting with capital letters in a given string.\nstd::string capital_words_spaces(std::string str1) {\n    std::string str2;\n    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] >= 'A' && str1[i] <= 'Z') {\n            str2 += \" \";\n        }\n        str2 += str1[i];\n    }\n    return str2;\n}\nint main() {\n    auto candidate = capital_words_spaces;\n    assert(candidate((\"Python\")) == (\"Python\"));\n    assert(candidate((\"PythonProgrammingExamples\")) == (\"Python Programming Examples\"));\n    assert(candidate((\"GetReadyToBeCodingFreak\")) == (\"Get Ready To Be Coding Freak\"));\n}\n",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmptgiwzg_y: /tmp/tmptgiwzg_y.cpp:16: int main(): Assertion `candidate((\"Python\")) == (\"Python\")' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to put spaces between words starting with capital letters in a given string.\nstd::string capital_words_spaces(std::string str1) {\n    std::string str2 = \"\";\n    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] >= 'A' && str1[i] <= 'Z') {\n            str2 += ' ';\n        }\n        str2 += str1[i];\n    }\n    return str2;\n}\nint main() {\n    auto candidate = capital_words_spaces;\n    assert(candidate((\"Python\")) == (\"Python\"));\n    assert(candidate((\"PythonProgrammingExamples\")) == (\"Python Programming Examples\"));\n    assert(candidate((\"GetReadyToBeCodingFreak\")) == (\"Get Ready To Be Coding Freak\"));\n}\n",
      "timestamp": 1666123064,
      "stdout": "",
      "stderr": "tmp1gi671yb: /tmp/tmp1gi671yb.cpp:16: int main(): Assertion `candidate((\"Python\")) == (\"Python\")' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to put spaces between words starting with capital letters in a given string.\nstd::string capital_words_spaces(std::string str1) {\n\tstd::string str2;\n\tfor(int i = 0; i < str1.length(); i++) {\n\t\tif(i == 0) {\n\t\t\tstr2 += str1[i];\n\t\t}\n\t\telse if(str1[i] >= 'A' && str1[i] <= 'Z') {\n\t\t\tstr2 += \" \";\n\t\t\tstr2 += str1[i];\n\t\t}\n\t\telse {\n\t\t\tstr2 += str1[i];\n\t\t}\n\t}\n\treturn str2;\n}\nint main() {\n    auto candidate = capital_words_spaces;\n    assert(candidate((\"Python\")) == (\"Python\"));\n    assert(candidate((\"PythonProgrammingExamples\")) == (\"Python Programming Examples\"));\n    assert(candidate((\"GetReadyToBeCodingFreak\")) == (\"Get Ready To Be Coding Freak\"));\n}\n",
      "timestamp": 1666123064,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to put spaces between words starting with capital letters in a given string.\nstd::string capital_words_spaces(std::string str1) {\n\tstd::string str2;\n\tfor (int i = 0; i < str1.length(); i++) {\n\t\tif (str1[i] >= 'A' && str1[i] <= 'Z') {\n\t\t\tstr2 += ' ';\n\t\t\tstr2 += str1[i];\n\t\t}\n\t\telse {\n\t\t\tstr2 += str1[i];\n\t\t}\n\t}\n\treturn str2;\n}\nint main() {\n    auto candidate = capital_words_spaces;\n    assert(candidate((\"Python\")) == (\"Python\"));\n    assert(candidate((\"PythonProgrammingExamples\")) == (\"Python Programming Examples\"));\n    assert(candidate((\"GetReadyToBeCodingFreak\")) == (\"Get Ready To Be Coding Freak\"));\n}\n",
      "timestamp": 1666123056,
      "stdout": "",
      "stderr": "tmpmbx2ywg_: /tmp/tmpmbx2ywg_.cpp:19: int main(): Assertion `candidate((\"Python\")) == (\"Python\")' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to put spaces between words starting with capital letters in a given string.\nstd::string capital_words_spaces(std::string str1) {\n    std::string str2;\n    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] >= 'A' && str1[i] <= 'Z') {\n            str2 += ' ';\n            str2 += str1[i];\n        }\n        else {\n            str2 += str1[i];\n        }\n    }\n    return str2;\n}\nint main() {\n    auto candidate = capital_words_spaces;\n    assert(candidate((\"Python\")) == (\"Python\"));\n    assert(candidate((\"PythonProgrammingExamples\")) == (\"Python Programming Examples\"));\n    assert(candidate((\"GetReadyToBeCodingFreak\")) == (\"Get Ready To Be Coding Freak\"));\n}\n",
      "timestamp": 1666123064,
      "stdout": "",
      "stderr": "tmpp1juei7e: /tmp/tmpp1juei7e.cpp:19: int main(): Assertion `candidate((\"Python\")) == (\"Python\")' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to put spaces between words starting with capital letters in a given string.\nstd::string capital_words_spaces(std::string str1) {\n    std::string str2;\n    for(int i=0; i<str1.length(); i++) {\n        if(str1[i] >= 'A' && str1[i] <= 'Z') {\n            str2 += ' ';\n        }\n        str2 += str1[i];\n    }\n    return str2;\n}\nint main() {\n    auto candidate = capital_words_spaces;\n    assert(candidate((\"Python\")) == (\"Python\"));\n    assert(candidate((\"PythonProgrammingExamples\")) == (\"Python Programming Examples\"));\n    assert(candidate((\"GetReadyToBeCodingFreak\")) == (\"Get Ready To Be Coding Freak\"));\n}\n",
      "timestamp": 1666123064,
      "stdout": "",
      "stderr": "tmphgxuujr9: /tmp/tmphgxuujr9.cpp:16: int main(): Assertion `candidate((\"Python\")) == (\"Python\")' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to put spaces between words starting with capital letters in a given string.\nstd::string capital_words_spaces(std::string str1) {\n    std::string str2 = \"\";\n    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] >= 'A' && str1[i] <= 'Z') {\n            str2 += \" \";\n        }\n        str2 += str1[i];\n    }\n    return str2;\n}\nint main() {\n    auto candidate = capital_words_spaces;\n    assert(candidate((\"Python\")) == (\"Python\"));\n    assert(candidate((\"PythonProgrammingExamples\")) == (\"Python Programming Examples\"));\n    assert(candidate((\"GetReadyToBeCodingFreak\")) == (\"Get Ready To Be Coding Freak\"));\n}\n",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpyn_5vmwh: /tmp/tmpyn_5vmwh.cpp:16: int main(): Assertion `candidate((\"Python\")) == (\"Python\")' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to put spaces between words starting with capital letters in a given string.\nstd::string capital_words_spaces(std::string str1) {\n    std::string str2 = \"\";\n    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] >= 'A' && str1[i] <= 'Z') {\n            str2 += \" \";\n        }\n        str2 += str1[i];\n    }\n    return str2;\n}\nint main() {\n    auto candidate = capital_words_spaces;\n    assert(candidate((\"Python\")) == (\"Python\"));\n    assert(candidate((\"PythonProgrammingExamples\")) == (\"Python Programming Examples\"));\n    assert(candidate((\"GetReadyToBeCodingFreak\")) == (\"Get Ready To Be Coding Freak\"));\n}\n",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpyn_5vmwh: /tmp/tmpyn_5vmwh.cpp:16: int main(): Assertion `candidate((\"Python\")) == (\"Python\")' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to put spaces between words starting with capital letters in a given string.\nstd::string capital_words_spaces(std::string str1) {\n    std::string str2;\n    for(int i=0;i<str1.length();i++) {\n        if(str1[i]>='A' && str1[i]<='Z') {\n            str2.push_back(' ');\n        }\n        str2.push_back(str1[i]);\n    }\n    return str2;\n}\nint main() {\n    auto candidate = capital_words_spaces;\n    assert(candidate((\"Python\")) == (\"Python\"));\n    assert(candidate((\"PythonProgrammingExamples\")) == (\"Python Programming Examples\"));\n    assert(candidate((\"GetReadyToBeCodingFreak\")) == (\"Get Ready To Be Coding Freak\"));\n}\n",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpp6ffmz1z: /tmp/tmpp6ffmz1z.cpp:16: int main(): Assertion `candidate((\"Python\")) == (\"Python\")' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to put spaces between words starting with capital letters in a given string.\nstd::string capital_words_spaces(std::string str1) {\n    std::string str2;\n    for(int i=0;i<str1.length();i++) {\n        if(str1[i]>='A' && str1[i]<='Z') {\n            str2.push_back(' ');\n        }\n        str2.push_back(str1[i]);\n    }\n    return str2;\n}\nint main() {\n    auto candidate = capital_words_spaces;\n    assert(candidate((\"Python\")) == (\"Python\"));\n    assert(candidate((\"PythonProgrammingExamples\")) == (\"Python Programming Examples\"));\n    assert(candidate((\"GetReadyToBeCodingFreak\")) == (\"Get Ready To Be Coding Freak\"));\n}\n",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpp6ffmz1z: /tmp/tmpp6ffmz1z.cpp:16: int main(): Assertion `candidate((\"Python\")) == (\"Python\")' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to put spaces between words starting with capital letters in a given string.\nstd::string capital_words_spaces(std::string str1) {\n\tstd::string str2;\n\tfor (int i = 0; i < str1.length(); i++) {\n\t\tif (str1[i] >= 'A' && str1[i] <= 'Z') {\n\t\t\tstr2 += \" \";\n\t\t}\n\t\tstr2 += str1[i];\n\t}\n\treturn str2;\n}\nint main() {\n    auto candidate = capital_words_spaces;\n    assert(candidate((\"Python\")) == (\"Python\"));\n    assert(candidate((\"PythonProgrammingExamples\")) == (\"Python Programming Examples\"));\n    assert(candidate((\"GetReadyToBeCodingFreak\")) == (\"Get Ready To Be Coding Freak\"));\n}\n",
      "timestamp": 1666123056,
      "stdout": "",
      "stderr": "tmpbfxqxreg: /tmp/tmpbfxqxreg.cpp:16: int main(): Assertion `candidate((\"Python\")) == (\"Python\")' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to put spaces between words starting with capital letters in a given string.\nstd::string capital_words_spaces(std::string str1) {\n  std::string str2 = \"\";\n  for(int i = 0; i < str1.length(); i++) {\n    if(str1[i] >= 'A' && str1[i] <= 'Z') {\n      str2 += \" \";\n    }\n    str2 += str1[i];\n  }\n  return str2;\n}\nint main() {\n    auto candidate = capital_words_spaces;\n    assert(candidate((\"Python\")) == (\"Python\"));\n    assert(candidate((\"PythonProgrammingExamples\")) == (\"Python Programming Examples\"));\n    assert(candidate((\"GetReadyToBeCodingFreak\")) == (\"Get Ready To Be Coding Freak\"));\n}\n",
      "timestamp": 1666123058,
      "stdout": "",
      "stderr": "tmpfn_h0_h_: /tmp/tmpfn_h0_h_.cpp:16: int main(): Assertion `candidate((\"Python\")) == (\"Python\")' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to put spaces between words starting with capital letters in a given string.\nstd::string capital_words_spaces(std::string str1) {\n  std::string str2 = \"\";\n  for (int i = 0; i < str1.length(); i++) {\n    if (str1[i] >= 'A' && str1[i] <= 'Z') {\n      str2 += \" \";\n    }\n    str2 += str1[i];\n  }\n  return str2;\n}\nint main() {\n    auto candidate = capital_words_spaces;\n    assert(candidate((\"Python\")) == (\"Python\"));\n    assert(candidate((\"PythonProgrammingExamples\")) == (\"Python Programming Examples\"));\n    assert(candidate((\"GetReadyToBeCodingFreak\")) == (\"Get Ready To Be Coding Freak\"));\n}\n",
      "timestamp": 1666123056,
      "stdout": "",
      "stderr": "tmpilkezylw: /tmp/tmpilkezylw.cpp:16: int main(): Assertion `candidate((\"Python\")) == (\"Python\")' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to put spaces between words starting with capital letters in a given string.\nstd::string capital_words_spaces(std::string str1) {\n    std::string str2 = \"\";\n    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] >= 'A' && str1[i] <= 'Z') {\n            str2 += \" \";\n        }\n        str2 += str1[i];\n    }\n    return str2;\n}\nint main() {\n    auto candidate = capital_words_spaces;\n    assert(candidate((\"Python\")) == (\"Python\"));\n    assert(candidate((\"PythonProgrammingExamples\")) == (\"Python Programming Examples\"));\n    assert(candidate((\"GetReadyToBeCodingFreak\")) == (\"Get Ready To Be Coding Freak\"));\n}\n",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpyn_5vmwh: /tmp/tmpyn_5vmwh.cpp:16: int main(): Assertion `candidate((\"Python\")) == (\"Python\")' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to put spaces between words starting with capital letters in a given string.\nstd::string capital_words_spaces(std::string str1) {\n\tstd::string str2;\n\tfor(int i=0;i<str1.length();i++) {\n\t\tif(str1[i]>='A' && str1[i]<='Z') {\n\t\t\tstr2.push_back(' ');\n\t\t\tstr2.push_back(str1[i]);\n\t\t}\n\t\telse {\n\t\t\tstr2.push_back(str1[i]);\n\t\t}\n\t}\n\treturn str2;\n}\nint main() {\n    auto candidate = capital_words_spaces;\n    assert(candidate((\"Python\")) == (\"Python\"));\n    assert(candidate((\"PythonProgrammingExamples\")) == (\"Python Programming Examples\"));\n    assert(candidate((\"GetReadyToBeCodingFreak\")) == (\"Get Ready To Be Coding Freak\"));\n}\n",
      "timestamp": 1665510373,
      "stdout": "",
      "stderr": "tmprndtlye9: /tmp/tmprndtlye9.cpp:19: int main(): Assertion `candidate((\"Python\")) == (\"Python\")' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to put spaces between words starting with capital letters in a given string.\nstd::string capital_words_spaces(std::string str1) {\n    std::string str2;\n    for(int i=0;i<str1.length();i++) {\n        if(str1[i]>='A' && str1[i]<='Z') {\n            str2.push_back(' ');\n            str2.push_back(str1[i]);\n        }\n        else {\n            str2.push_back(str1[i]);\n        }\n    }\n    return str2;\n}\nint main() {\n    auto candidate = capital_words_spaces;\n    assert(candidate((\"Python\")) == (\"Python\"));\n    assert(candidate((\"PythonProgrammingExamples\")) == (\"Python Programming Examples\"));\n    assert(candidate((\"GetReadyToBeCodingFreak\")) == (\"Get Ready To Be Coding Freak\"));\n}\n",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpxzkio29z: /tmp/tmpxzkio29z.cpp:19: int main(): Assertion `candidate((\"Python\")) == (\"Python\")' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to put spaces between words starting with capital letters in a given string.\nstd::string capital_words_spaces(std::string str1) {\n    std::string str2;\n    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] >= 'A' && str1[i] <= 'Z') {\n            str2 += ' ';\n        }\n        str2 += str1[i];\n    }\n    return str2;\n}\nint main() {\n    auto candidate = capital_words_spaces;\n    assert(candidate((\"Python\")) == (\"Python\"));\n    assert(candidate((\"PythonProgrammingExamples\")) == (\"Python Programming Examples\"));\n    assert(candidate((\"GetReadyToBeCodingFreak\")) == (\"Get Ready To Be Coding Freak\"));\n}\n",
      "timestamp": 1665510372,
      "stdout": "",
      "stderr": "tmp1di6_cnp: /tmp/tmp1di6_cnp.cpp:16: int main(): Assertion `candidate((\"Python\")) == (\"Python\")' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to put spaces between words starting with capital letters in a given string.\nstd::string capital_words_spaces(std::string str1) {\n\tstd::string str2;\n\tfor(int i = 0; i < str1.size(); i++) {\n\t\tif(str1[i] >= 'A' && str1[i] <= 'Z') {\n\t\t\tstr2 += ' ';\n\t\t}\n\t\tstr2 += str1[i];\n\t}\n\treturn str2;\n}\nint main() {\n    auto candidate = capital_words_spaces;\n    assert(candidate((\"Python\")) == (\"Python\"));\n    assert(candidate((\"PythonProgrammingExamples\")) == (\"Python Programming Examples\"));\n    assert(candidate((\"GetReadyToBeCodingFreak\")) == (\"Get Ready To Be Coding Freak\"));\n}\n",
      "timestamp": 1666123064,
      "stdout": "",
      "stderr": "tmpn27qjmos: /tmp/tmpn27qjmos.cpp:16: int main(): Assertion `candidate((\"Python\")) == (\"Python\")' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to put spaces between words starting with capital letters in a given string.\nstd::string capital_words_spaces(std::string str1) {\n    std::string str2;\n    for(int i=0;i<str1.length();i++) {\n        if(str1[i]>='A' && str1[i]<='Z') {\n            str2.push_back(' ');\n        }\n        str2.push_back(str1[i]);\n    }\n    return str2;\n}\nint main() {\n    auto candidate = capital_words_spaces;\n    assert(candidate((\"Python\")) == (\"Python\"));\n    assert(candidate((\"PythonProgrammingExamples\")) == (\"Python Programming Examples\"));\n    assert(candidate((\"GetReadyToBeCodingFreak\")) == (\"Get Ready To Be Coding Freak\"));\n}\n",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpp6ffmz1z: /tmp/tmpp6ffmz1z.cpp:16: int main(): Assertion `candidate((\"Python\")) == (\"Python\")' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to put spaces between words starting with capital letters in a given string.\nstd::string capital_words_spaces(std::string str1) {\n    std::string str2;\n    for(int i=0; i<str1.length(); i++) {\n        if(str1[i]>='A' && str1[i]<='Z') {\n            str2 += \" \";\n            str2 += str1[i];\n        }\n        else {\n            str2 += str1[i];\n        }\n    }\n    return str2;\n}\nint main() {\n    auto candidate = capital_words_spaces;\n    assert(candidate((\"Python\")) == (\"Python\"));\n    assert(candidate((\"PythonProgrammingExamples\")) == (\"Python Programming Examples\"));\n    assert(candidate((\"GetReadyToBeCodingFreak\")) == (\"Get Ready To Be Coding Freak\"));\n}\n",
      "timestamp": 1666123064,
      "stdout": "",
      "stderr": "tmpjck0cqy3: /tmp/tmpjck0cqy3.cpp:19: int main(): Assertion `candidate((\"Python\")) == (\"Python\")' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to put spaces between words starting with capital letters in a given string.\nstd::string capital_words_spaces(std::string str1) {\n    std::string str2 = \"\";\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] >= 'A' && str1[i] <= 'Z') {\n            str2 += \" \";\n        }\n        str2 += str1[i];\n    }\n    return str2;\n}\nint main() {\n    auto candidate = capital_words_spaces;\n    assert(candidate((\"Python\")) == (\"Python\"));\n    assert(candidate((\"PythonProgrammingExamples\")) == (\"Python Programming Examples\"));\n    assert(candidate((\"GetReadyToBeCodingFreak\")) == (\"Get Ready To Be Coding Freak\"));\n}\n",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmp7j1c_1uk: /tmp/tmp7j1c_1uk.cpp:16: int main(): Assertion `candidate((\"Python\")) == (\"Python\")' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    }
  ]
}
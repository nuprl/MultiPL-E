{
  "name": "mbpp_138_is_Sum_Of_Powers_Of_Two",
  "language": "cpp",
  "prompt": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_138_is_Sum_Of_Powers_Of_Two.py",
  "prompt_terminology": "verbatim",
  "tests": "}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "results": [
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0) {\n        return false;\n    }\n    while (n != 1) {\n        if (n % 2 != 0) {\n            return false;\n        }\n        n = n / 2;\n    }\n    return true;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1665509701,
      "stdout": "",
      "stderr": "tmp4gmog9yv: /tmp/tmp4gmog9yv.cpp:18: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if(n == 0) {\n        return true;\n    }\n    if(n == 1) {\n        return true;\n    }\n    if(n == 2) {\n        return true;\n    }\n    if(n == 3) {\n        return false;\n    }\n    if(n == 4) {\n        return true;\n    }\n    if(n == 5) {\n        return false;\n    }\n    if(n == 6) {\n        return false;\n    }\n    if(n == 7) {\n        return false;\n    }\n    if(n == 8) {\n        return true;\n    }\n    if(n == 9) {\n        return false;\n    }\n    if(n == 10) {\n        return false;\n    }\n    if(n == 11) {\n        return false;\n    }\n    if(n == 12) {\n        return false;\n    }\n    if(n == 13) {\n        return false;\n    }\n    if(n == 14) {\n        return false;\n    }\n    if(n == 15) {\n        return false;\n    }\n    if(n == 16) {\n        return true;\n    }\n    if(n == 17) {\n        return false;\n    }\n    if(n == 18) {\n        return false;\n    }\n    if(n == 19) {\n        return false;\n    }\n    if(n == 20) {\n        return false;\n    }\n    if(n == 21) {\n        return false;\n    }\n    if(n == 22) {\n        return false;\n    }\n    if(n == 23) {\n        return false;\n    }\n    if(n == 24) {\n        return false;\n    }\n    if(n == 25) {\n        return false;\n    }\n    if(n == 26) {\n        return false;\n    }\n    if(n == 27) {\n        return false;\n    }\n    if(n == 28) {\n        return false;\n    }\n    if(n == 29) {\n        return false;\n    }\n   \n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1665509701,
      "stdout": "",
      "stderr": "tmpwqhcln88: /tmp/tmpwqhcln88.cpp:99: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0) {\n        return true;\n    }\n    while (n != 1) {\n        if (n % 2 == 1) {\n            return false;\n        }\n        n /= 2;\n    }\n    return true;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1665509701,
      "stdout": "",
      "stderr": "tmpxnd4c6lp: /tmp/tmpxnd4c6lp.cpp:18: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0) {\n        return true;\n    }\n    if (n == 1) {\n        return false;\n    }\n    int i = 0;\n    while (n > 0) {\n        if (n & 1) {\n            break;\n        }\n        n = n >> 1;\n        i++;\n    }\n    n = n >> 1;\n    if (n == 0) {\n        return true;\n    }\n    return is_Sum_Of_Powers_Of_Two(n);\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1665509701,
      "stdout": "",
      "stderr": "tmpes59x2r9: /tmp/tmpes59x2r9.cpp:29: int main(): Assertion `candidate((14)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if(n == 0) {\n        return true;\n    }\n    if(n == 1) {\n        return true;\n    }\n    if(n == 2) {\n        return true;\n    }\n    if(n == 3) {\n        return false;\n    }\n    if(n == 4) {\n        return true;\n    }\n    if(n == 5) {\n        return false;\n    }\n    if(n == 6) {\n        return false;\n    }\n    if(n == 7) {\n        return false;\n    }\n    if(n == 8) {\n        return true;\n    }\n    if(n == 9) {\n        return false;\n    }\n    if(n == 10) {\n        return false;\n    }\n    if(n == 11) {\n        return false;\n    }\n    if(n == 12) {\n        return false;\n    }\n    if(n == 13) {\n        return false;\n    }\n    if(n == 14) {\n        return false;\n    }\n    if(n == 15) {\n        return false;\n    }\n    if(n == 16) {\n        return true;\n    }\n    if(n == 17) {\n        return false;\n    }\n    if(n == 18) {\n        return false;\n    }\n    if(n == 19) {\n        return false;\n    }\n    if(n == 20) {\n        return false;\n    }\n    if(n == 21) {\n        return false;\n    }\n    if(n == 22) {\n        return false;\n    }\n    if(n == 23) {\n        return false;\n    }\n    if(n == 24) {\n        return false;\n    }\n    if(n == 25) {\n        return false;\n    }\n    if(n == 26) {\n        return false;\n    }\n    if(n == 27) {\n        return false;\n    }\n    if(n == 28) {\n        return false;\n    }\n    if(n == 29) {\n        return false;\n    }\n   \n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1665509701,
      "stdout": "",
      "stderr": "tmpwqhcln88: /tmp/tmpwqhcln88.cpp:99: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0) {\n        return true;\n    }\n    if (n == 1) {\n        return true;\n    }\n    if (n % 2 != 0) {\n        return false;\n    }\n    return is_Sum_Of_Powers_Of_Two(n/2);\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1665509701,
      "stdout": "",
      "stderr": "tmp0xw349jj: /tmp/tmp0xw349jj.cpp:18: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0)\n        return false;\n    while (n != 1) {\n        if (n % 2 != 0)\n            return false;\n        n = n / 2;\n    }\n    return true;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1665509701,
      "stdout": "",
      "stderr": "tmp_58lsete: /tmp/tmp_58lsete.cpp:16: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0) {\n        return true;\n    }\n    while (n != 1) {\n        if (n % 2 != 0) {\n            return false;\n        }\n        n = n / 2;\n    }\n    return true;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1665509701,
      "stdout": "",
      "stderr": "tmpcqv6uj1h: /tmp/tmpcqv6uj1h.cpp:18: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if(n == 0) {\n        return true;\n    }\n    if(n == 1) {\n        return false;\n    }\n    while(n > 0) {\n        if(n % 2 != 0) {\n            return false;\n        }\n        n /= 2;\n    }\n    return true;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1665509701,
      "stdout": "",
      "stderr": "tmpvnj64_ln: /tmp/tmpvnj64_ln.cpp:21: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0)\n        return true;\n    while (n != 1) {\n        if (n % 2 != 0)\n            return false;\n        n = n / 2;\n    }\n    return true;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1665509701,
      "stdout": "",
      "stderr": "tmpvm9d_j8_: /tmp/tmpvm9d_j8_.cpp:16: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0)\n        return true;\n    if (n == 1)\n        return false;\n    while (n % 2 == 0)\n        n /= 2;\n    return n == 1;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1665509701,
      "stdout": "",
      "stderr": "tmp2ug1m19v: /tmp/tmp2ug1m19v.cpp:15: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if(n == 0) {\n        return true;\n    }\n    if(n == 1) {\n        return true;\n    }\n    if(n == 2) {\n        return true;\n    }\n    if(n == 3) {\n        return false;\n    }\n    if(n == 4) {\n        return true;\n    }\n    if(n == 5) {\n        return false;\n    }\n    if(n == 6) {\n        return false;\n    }\n    if(n == 7) {\n        return false;\n    }\n    if(n == 8) {\n        return true;\n    }\n    if(n == 9) {\n        return false;\n    }\n    if(n == 10) {\n        return false;\n    }\n    if(n == 11) {\n        return false;\n    }\n    if(n == 12) {\n        return false;\n    }\n    if(n == 13) {\n        return false;\n    }\n    if(n == 14) {\n        return false;\n    }\n    if(n == 15) {\n        return false;\n    }\n    if(n == 16) {\n        return true;\n    }\n    if(n == 17) {\n        return false;\n    }\n    if(n == 18) {\n        return false;\n    }\n    if(n == 19) {\n        return false;\n    }\n    if(n == 20) {\n        return false;\n    }\n    if(n == 21) {\n        return false;\n    }\n    if(n == 22) {\n        return false;\n    }\n    if(n == 23) {\n        return false;\n    }\n    if(n == 24) {\n        return false;\n    }\n    if(n == 25) {\n        return false;\n    }\n    if(n == 26) {\n        return false;\n    }\n    if(n == 27) {\n        return false;\n    }\n    if(n == 28) {\n        return false;\n    }\n    if(n == 29) {\n        return false;\n    }\n   \n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1665509701,
      "stdout": "",
      "stderr": "tmpwqhcln88: /tmp/tmpwqhcln88.cpp:99: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0) {\n        return false;\n    }\n    if (n == 1) {\n        return true;\n    }\n    while (n > 1) {\n        if (n % 2 == 1) {\n            return false;\n        }\n        n = n / 2;\n    }\n    return true;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1665509701,
      "stdout": "",
      "stderr": "tmp_q8e5v8j: /tmp/tmp_q8e5v8j.cpp:21: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if(n==0)\n        return true;\n    if(n==1)\n        return true;\n    if(n%2!=0)\n        return false;\n    return is_Sum_Of_Powers_Of_Two(n/2);\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1665509701,
      "stdout": "",
      "stderr": "tmpdq088rxg: /tmp/tmpdq088rxg.cpp:15: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0) {\n        return false;\n    }\n    while (n != 1) {\n        if (n % 2 != 0) {\n            return false;\n        }\n        n = n / 2;\n    }\n    return true;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1665509701,
      "stdout": "",
      "stderr": "tmp4gmog9yv: /tmp/tmp4gmog9yv.cpp:18: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0) {\n        return false;\n    }\n    if (n == 1) {\n        return true;\n    }\n    while (n != 1) {\n        if (n % 2 != 0) {\n            return false;\n        }\n        n = n / 2;\n    }\n    return true;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1665509701,
      "stdout": "",
      "stderr": "tmpzhskckwf: /tmp/tmpzhskckwf.cpp:21: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0)\n        return true;\n    if (n == 1)\n        return true;\n    if (n % 2 == 1)\n        return false;\n    return is_Sum_Of_Powers_Of_Two(n / 2);\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1665509701,
      "stdout": "",
      "stderr": "tmpmb0q77h9: /tmp/tmpmb0q77h9.cpp:15: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0)\n        return true;\n    while (n != 1) {\n        if (n % 2 != 0)\n            return false;\n        n = n / 2;\n    }\n    return true;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1665509701,
      "stdout": "",
      "stderr": "tmpvm9d_j8_: /tmp/tmpvm9d_j8_.cpp:16: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n <= 0) {\n        return false;\n    }\n    while (n != 1) {\n        if (n % 2 != 0) {\n            return false;\n        }\n        n = n / 2;\n    }\n    return true;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1665509701,
      "stdout": "",
      "stderr": "tmpkhalfl_l: /tmp/tmpkhalfl_l.cpp:18: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if(n == 0) {\n        return false;\n    }\n    while(n != 1) {\n        if(n % 2 != 0) {\n            return false;\n        }\n        n = n / 2;\n    }\n    return true;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1665509701,
      "stdout": "",
      "stderr": "tmpwt2hzcmm: /tmp/tmpwt2hzcmm.cpp:18: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0) {\n        return true;\n    }\n    if (n == 1) {\n        return false;\n    }\n    while (n > 1) {\n        if (n % 2 == 0) {\n            n = n / 2;\n        } else {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124083,
      "stdout": "",
      "stderr": "tmphchqm7xd: /tmp/tmphchqm7xd.cpp:22: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0) {\n        return true;\n    }\n    while (n != 1) {\n        if (n % 2 != 0) {\n            return false;\n        }\n        n /= 2;\n    }\n    return true;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124083,
      "stdout": "",
      "stderr": "tmp6l7xovjl: /tmp/tmp6l7xovjl.cpp:18: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0) {\n        return true;\n    }\n    if (n == 1) {\n        return false;\n    }\n    while (n > 0) {\n        if (n % 2 == 0) {\n            n = n / 2;\n        }\n        else {\n            n = n - 1;\n        }\n    }\n    if (n == 0) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124083,
      "stdout": "",
      "stderr": "tmptviobgrg: /tmp/tmptviobgrg.cpp:29: int main(): Assertion `candidate((7)) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0) {\n        return true;\n    }\n    if (n == 1) {\n        return true;\n    }\n    if (n == 2) {\n        return true;\n    }\n    if (n == 3) {\n        return false;\n    }\n    if (n == 4) {\n        return true;\n    }\n    if (n == 5) {\n        return false;\n    }\n    if (n == 6) {\n        return false;\n    }\n    if (n == 7) {\n        return false;\n    }\n    if (n == 8) {\n        return true;\n    }\n    if (n == 9) {\n        return false;\n    }\n    if (n == 10) {\n        return false;\n    }\n    if (n == 11) {\n        return false;\n    }\n    if (n == 12) {\n        return false;\n    }\n    if (n == 13) {\n        return false;\n    }\n    if (n == 14) {\n        return false;\n    }\n    if (n == 15) {\n        return false;\n    }\n    if (n == 16) {\n        return true;\n    }\n    if (n == 17) {\n        return false;\n    }\n    if (n == 18) {\n        return false;\n    }\n    if (n == 19) {\n        return false;\n    }\n    if (n == 20) {\n        return false;\n    }\n    if (n == 21) {\n        return false;\n    }\n    if (n == 22) {\n        return false;\n    }\n    if (n == 23) {\n        return false;\n    }\n    if (n == 24) {\n        return false;\n    }\n    if (n == 25) {\n        return false;\n    }\n    if (n == 26) {\n        return false;\n    }\n    if (n == 27) {\n        return false;\n    }\n    if (n == 28) {\n        return false;\n    }\n    if (n == 29) {\n        return false;\n    }\n   \n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124083,
      "stdout": "",
      "stderr": "tmpomfwfifi: /tmp/tmpomfwfifi.cpp:99: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0) {\n        return true;\n    }\n    if (n == 1) {\n        return true;\n    }\n    if (n % 2 == 1) {\n        return false;\n    }\n    return is_Sum_Of_Powers_Of_Two(n / 2);\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124083,
      "stdout": "",
      "stderr": "tmp0c68de3w: /tmp/tmp0c68de3w.cpp:18: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0) {\n        return true;\n    }\n    int count = 0;\n    while (n != 0) {\n        if (n % 2 == 1) {\n            count++;\n        }\n        n = n / 2;\n    }\n    return count == 1;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124083,
      "stdout": "",
      "stderr": "tmpq57dzbc6: /tmp/tmpq57dzbc6.cpp:19: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if(n == 1) return true;\n    if(n == 0) return false;\n    if(n%2 != 0) return false;\n    return is_Sum_Of_Powers_Of_Two(n/2);\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124083,
      "stdout": "",
      "stderr": "tmpzo5c6rfv: /tmp/tmpzo5c6rfv.cpp:12: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0) {\n        return true;\n    }\n    if (n == 1) {\n        return true;\n    }\n    if (n == 2) {\n        return true;\n    }\n    if (n == 3) {\n        return false;\n    }\n    if (n == 4) {\n        return true;\n    }\n    if (n == 5) {\n        return false;\n    }\n    if (n == 6) {\n        return false;\n    }\n    if (n == 7) {\n        return false;\n    }\n    if (n == 8) {\n        return true;\n    }\n    if (n == 9) {\n        return false;\n    }\n    if (n == 10) {\n        return false;\n    }\n    if (n == 11) {\n        return false;\n    }\n    if (n == 12) {\n        return false;\n    }\n    if (n == 13) {\n        return false;\n    }\n    if (n == 14) {\n        return false;\n    }\n    if (n == 15) {\n        return false;\n    }\n    if (n == 16) {\n        return true;\n    }\n    if (n == 17) {\n        return false;\n    }\n    if (n == 18) {\n        return false;\n    }\n    if (n == 19) {\n        return false;\n    }\n    if (n == 20) {\n        return false;\n    }\n    if (n == 21) {\n        return false;\n    }\n    if (n == 22) {\n        return false;\n    }\n    if (n == 23) {\n        return false;\n    }\n    if (n == 24) {\n        return false;\n    }\n    if (n == 25) {\n        return false;\n    }\n    if (n == 26) {\n        return false;\n    }\n    if (n == 27) {\n        return false;\n    }\n    if (n == 28) {\n        return false;\n    }\n    if (n == 29) {\n        return false;\n    }\n   \n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124083,
      "stdout": "",
      "stderr": "tmpomfwfifi: /tmp/tmpomfwfifi.cpp:99: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0) {\n        return true;\n    }\n    if (n == 1) {\n        return true;\n    }\n    if (n == 2) {\n        return true;\n    }\n    if (n == 3) {\n        return false;\n    }\n    int i = 0;\n    while (n > 0) {\n        if (n % 2 == 1) {\n            if (n == 1) {\n                return true;\n            }\n            else {\n                return false;\n            }\n        }\n        n = n / 2;\n        i++;\n    }\n    return true;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124083,
      "stdout": "",
      "stderr": "tmpoty4jx5a: /tmp/tmpoty4jx5a.cpp:34: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0)\n        return true;\n    while (n != 1) {\n        if (n % 2 != 0)\n            return false;\n        n = n / 2;\n    }\n    return true;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1665509701,
      "stdout": "",
      "stderr": "tmpvm9d_j8_: /tmp/tmpvm9d_j8_.cpp:16: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0)\n        return true;\n    while (n > 0) {\n        if (n % 2 == 1)\n            return false;\n        n /= 2;\n    }\n    return true;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124083,
      "stdout": "",
      "stderr": "tmppqqa7f7b: /tmp/tmppqqa7f7b.cpp:16: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0) {\n        return true;\n    }\n    if (n == 1) {\n        return true;\n    }\n    if (n == 2) {\n        return true;\n    }\n    if (n < 0) {\n        return false;\n    }\n    if (n % 2 == 1) {\n        return false;\n    }\n    return is_Sum_Of_Powers_Of_Two(n / 2);\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124083,
      "stdout": "",
      "stderr": "tmpm87j9uxv: /tmp/tmpm87j9uxv.cpp:24: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0) {\n        return true;\n    }\n    if (n == 1) {\n        return true;\n    }\n    if (n % 2 == 1) {\n        return false;\n    }\n    return is_Sum_Of_Powers_Of_Two(n / 2);\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124083,
      "stdout": "",
      "stderr": "tmp0c68de3w: /tmp/tmp0c68de3w.cpp:18: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0) {\n        return false;\n    }\n    while (n != 1) {\n        if (n % 2 != 0) {\n            return false;\n        }\n        n /= 2;\n    }\n    return true;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124083,
      "stdout": "",
      "stderr": "tmpld_vk55y: /tmp/tmpld_vk55y.cpp:18: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0)\n        return true;\n    if (n == 1)\n        return false;\n    while (n % 2 == 0)\n        n /= 2;\n    return n == 1;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1665509701,
      "stdout": "",
      "stderr": "tmp2ug1m19v: /tmp/tmp2ug1m19v.cpp:15: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0) {\n        return true;\n    }\n    while (n != 1) {\n        if (n % 2 != 0) {\n            return false;\n        }\n        n = n / 2;\n    }\n    return true;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1665509701,
      "stdout": "",
      "stderr": "tmpcqv6uj1h: /tmp/tmpcqv6uj1h.cpp:18: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0) {\n        return true;\n    }\n    int i = 0;\n    while (n > 0) {\n        if (n & 1) {\n            if (n == 1) {\n                return true;\n            }\n            else {\n                return false;\n            }\n        }\n        n = n >> 1;\n    }\n    return false;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124083,
      "stdout": "",
      "stderr": "tmp598i00ct: /tmp/tmp598i00ct.cpp:24: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0) {\n        return true;\n    }\n    while (n > 0) {\n        if (n % 2 == 1) {\n            return false;\n        }\n        n = n / 2;\n    }\n    return true;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124083,
      "stdout": "",
      "stderr": "tmpv6545od9: /tmp/tmpv6545od9.cpp:18: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0) {\n        return true;\n    }\n    if (n == 1) {\n        return true;\n    }\n    if (n == 2) {\n        return true;\n    }\n    if (n % 2 == 1) {\n        return false;\n    }\n    return is_Sum_Of_Powers_Of_Two(n / 2);\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124083,
      "stdout": "",
      "stderr": "tmpajnptejx: /tmp/tmpajnptejx.cpp:21: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0) {\n        return true;\n    }\n    if (n == 1) {\n        return true;\n    }\n    if (n == 2) {\n        return true;\n    }\n    if (n == 3) {\n        return false;\n    }\n    if (n == 4) {\n        return true;\n    }\n    if (n == 5) {\n        return false;\n    }\n    if (n == 6) {\n        return false;\n    }\n    if (n == 7) {\n        return false;\n    }\n    if (n == 8) {\n        return true;\n    }\n    if (n == 9) {\n        return false;\n    }\n    if (n == 10) {\n        return false;\n    }\n    if (n == 11) {\n        return false;\n    }\n    if (n == 12) {\n        return false;\n    }\n    if (n == 13) {\n        return false;\n    }\n    if (n == 14) {\n        return false;\n    }\n    if (n == 15) {\n        return false;\n    }\n    if (n == 16) {\n        return true;\n    }\n    if (n == 17) {\n        return false;\n    }\n    if (n == 18) {\n        return false;\n    }\n    if (n == 19) {\n        return false;\n    }\n    if (n == 20) {\n        return false;\n    }\n    if (n == 21) {\n        return false;\n    }\n    if (n == 22) {\n        return false;\n    }\n    if (n == 23) {\n        return false;\n    }\n    if (n == 24) {\n        return false;\n    }\n    if (n == 25) {\n        return false;\n    }\n    if (n == 26) {\n        return false;\n    }\n    if (n == 27) {\n        return false;\n    }\n    if (n == 28) {\n        return false;\n    }\n    if (n == 29) {\n        return false;\n    }\n   \n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124083,
      "stdout": "",
      "stderr": "tmpomfwfifi: /tmp/tmpomfwfifi.cpp:99: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0) {\n        return true;\n    }\n    if (n == 1) {\n        return true;\n    }\n    if (n == 2) {\n        return true;\n    }\n    if (n == 3) {\n        return false;\n    }\n    if (n == 4) {\n        return true;\n    }\n    if (n == 5) {\n        return false;\n    }\n    if (n == 6) {\n        return false;\n    }\n    if (n == 7) {\n        return false;\n    }\n    if (n == 8) {\n        return true;\n    }\n    if (n == 9) {\n        return false;\n    }\n    if (n == 10) {\n        return false;\n    }\n    if (n == 11) {\n        return false;\n    }\n    if (n == 12) {\n        return false;\n    }\n    if (n == 13) {\n        return false;\n    }\n    if (n == 14) {\n        return false;\n    }\n    if (n == 15) {\n        return false;\n    }\n    if (n == 16) {\n        return true;\n    }\n    if (n == 17) {\n        return false;\n    }\n    if (n == 18) {\n        return false;\n    }\n    if (n == 19) {\n        return false;\n    }\n    if (n == 20) {\n        return false;\n    }\n    if (n == 21) {\n        return false;\n    }\n    if (n == 22) {\n        return false;\n    }\n    if (n == 23) {\n        return false;\n    }\n    if (n == 24) {\n        return false;\n    }\n    if (n == 25) {\n        return false;\n    }\n    if (n == 26) {\n        return false;\n    }\n    if (n == 27) {\n        return false;\n    }\n    if (n == 28) {\n        return false;\n    }\n    if (n == 29) {\n        return false;\n    }\n   \n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124083,
      "stdout": "",
      "stderr": "tmpomfwfifi: /tmp/tmpomfwfifi.cpp:99: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if(n == 0) {\n        return true;\n    }\n    if(n == 1) {\n        return false;\n    }\n    while(n != 0) {\n        if(n % 2 != 0) {\n            return false;\n        }\n        n /= 2;\n    }\n    return true;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124083,
      "stdout": "",
      "stderr": "tmpw5393n1o: /tmp/tmpw5393n1o.cpp:21: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0) {\n        return true;\n    }\n    if (n == 1) {\n        return true;\n    }\n    if (n == 2) {\n        return true;\n    }\n    if (n == 3) {\n        return false;\n    }\n    if (n == 4) {\n        return true;\n    }\n    if (n == 5) {\n        return false;\n    }\n    if (n == 6) {\n        return false;\n    }\n    if (n == 7) {\n        return false;\n    }\n    if (n == 8) {\n        return true;\n    }\n    if (n == 9) {\n        return false;\n    }\n    if (n == 10) {\n        return false;\n    }\n    if (n == 11) {\n        return false;\n    }\n    if (n == 12) {\n        return false;\n    }\n    if (n == 13) {\n        return false;\n    }\n    if (n == 14) {\n        return false;\n    }\n    if (n == 15) {\n        return false;\n    }\n    if (n == 16) {\n        return true;\n    }\n    if (n == 17) {\n        return false;\n    }\n    if (n == 18) {\n        return false;\n    }\n    if (n == 19) {\n        return false;\n    }\n    if (n == 20) {\n        return false;\n    }\n    if (n == 21) {\n        return false;\n    }\n    if (n == 22) {\n        return false;\n    }\n    if (n == 23) {\n        return false;\n    }\n    if (n == 24) {\n        return false;\n    }\n    if (n == 25) {\n        return false;\n    }\n    if (n == 26) {\n        return false;\n    }\n    if (n == 27) {\n        return false;\n    }\n    if (n == 28) {\n        return false;\n    }\n    if (n == 29) {\n        return false;\n    }\n   \n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124083,
      "stdout": "",
      "stderr": "tmpomfwfifi: /tmp/tmpomfwfifi.cpp:99: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0) {\n        return false;\n    }\n    while (n != 1) {\n        if (n % 2 != 0) {\n            return false;\n        }\n        n = n / 2;\n    }\n    return true;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1665509701,
      "stdout": "",
      "stderr": "tmp4gmog9yv: /tmp/tmp4gmog9yv.cpp:18: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n <= 0) {\n        return false;\n    }\n    while (n % 2 == 0) {\n        n /= 2;\n    }\n    return n == 1;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124083,
      "stdout": "",
      "stderr": "tmpkmiqygmy: /tmp/tmpkmiqygmy.cpp:15: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0) {\n        return true;\n    }\n    if (n == 1) {\n        return true;\n    }\n    if (n == 2) {\n        return true;\n    }\n    if (n == 3) {\n        return false;\n    }\n    if (n == 4) {\n        return true;\n    }\n    if (n == 5) {\n        return false;\n    }\n    if (n == 6) {\n        return false;\n    }\n    if (n == 7) {\n        return false;\n    }\n    if (n == 8) {\n        return true;\n    }\n    if (n == 9) {\n        return false;\n    }\n    if (n == 10) {\n        return false;\n    }\n    if (n == 11) {\n        return false;\n    }\n    if (n == 12) {\n        return false;\n    }\n    if (n == 13) {\n        return false;\n    }\n    if (n == 14) {\n        return false;\n    }\n    if (n == 15) {\n        return false;\n    }\n    if (n == 16) {\n        return true;\n    }\n    if (n == 17) {\n        return false;\n    }\n    if (n == 18) {\n        return false;\n    }\n    if (n == 19) {\n        return false;\n    }\n    if (n == 20) {\n        return false;\n    }\n    if (n == 21) {\n        return false;\n    }\n    if (n == 22) {\n        return false;\n    }\n    if (n == 23) {\n        return false;\n    }\n    if (n == 24) {\n        return false;\n    }\n    if (n == 25) {\n        return false;\n    }\n    if (n == 26) {\n        return false;\n    }\n    if (n == 27) {\n        return false;\n    }\n    if (n == 28) {\n        return false;\n    }\n    if (n == 29) {\n        return false;\n    }\n   \n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124083,
      "stdout": "",
      "stderr": "tmpomfwfifi: /tmp/tmpomfwfifi.cpp:99: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0) {\n        return false;\n    }\n    if (n == 1) {\n        return true;\n    }\n    while (n > 1) {\n        if (n % 2 != 0) {\n            return false;\n        }\n        n /= 2;\n    }\n    return true;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124083,
      "stdout": "",
      "stderr": "tmpssn0fuqq: /tmp/tmpssn0fuqq.cpp:21: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if(n == 0)\n        return true;\n    if(n == 1)\n        return true;\n    if(n == 2)\n        return true;\n    if(n == 3)\n        return false;\n    if(n == 4)\n        return true;\n    if(n == 5)\n        return false;\n    if(n == 6)\n        return false;\n    if(n == 7)\n        return false;\n    if(n == 8)\n        return true;\n    if(n == 9)\n        return false;\n    if(n == 10)\n        return false;\n    if(n == 11)\n        return false;\n    if(n == 12)\n        return false;\n    if(n == 13)\n        return false;\n    if(n == 14)\n        return false;\n    if(n == 15)\n        return false;\n    if(n == 16)\n        return true;\n    if(n == 17)\n        return false;\n    if(n == 18)\n        return false;\n    if(n == 19)\n        return false;\n    if(n == 20)\n        return false;\n    if(n == 21)\n        return false;\n    if(n == 22)\n        return false;\n    if(n == 23)\n        return false;\n    if(n == 24)\n        return false;\n    if(n == 25)\n        return false;\n    if(n == 26)\n        return false;\n    if(n == 27)\n        return false;\n    if(n == 28)\n        return false;\n    if(n == 29)\n        return false;\n    if(n == 30)\n        return false;\n    if(n == 31)\n        return false;\n    if(n == 32)\n        return true;\n    if(n == 33)\n        return false;\n    if(n == 34)\n        return false;\n    if(n == 35)\n        return false;\n    if(n == 36)\n        return false;\n    if(n == 37)\n        return false;\n    if(n == 38)\n        return false;\n    if(n\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124082,
      "stdout": "",
      "stderr": "/tmp/tmp2o778g94.cpp: In function \u2018bool is_Sum_Of_Powers_Of_Two(long int)\u2019:\n/tmp/tmp2o778g94.cpp:83:9: error: expected \u2018)\u2019 before \u2018}\u2019 token\n   83 |     if(n\n      |       ~ ^\n      |         )\n   84 | }\n      | ~        \n/tmp/tmp2o778g94.cpp:84:1: error: expected primary-expression before \u2018}\u2019 token\n   84 | }\n      | ^\n/tmp/tmp2o778g94.cpp:84:1: warning: control reaches end of non-void function [-Wreturn-type]\n   84 | }\n      | ^\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0) {\n        return true;\n    }\n    if (n == 1) {\n        return true;\n    }\n    if (n % 2 == 1) {\n        return false;\n    }\n    return is_Sum_Of_Powers_Of_Two(n/2);\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124083,
      "stdout": "",
      "stderr": "tmpmlz7_xdc: /tmp/tmpmlz7_xdc.cpp:18: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0) {\n        return true;\n    }\n    long temp = n;\n    while (temp > 0) {\n        if (temp % 2 != 0) {\n            break;\n        }\n        temp /= 2;\n    }\n    if (temp == 1) {\n        return true;\n    }\n    return is_Sum_Of_Powers_Of_Two(n - temp);\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124083,
      "stdout": "",
      "stderr": "tmpkb215dw8: /tmp/tmpkb215dw8.cpp:23: int main(): Assertion `candidate((7)) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0)\n        return true;\n    if (n == 1)\n        return false;\n    if (n == 2)\n        return true;\n    if (n % 2 == 1)\n        return false;\n    return is_Sum_Of_Powers_Of_Two(n / 2);\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124083,
      "stdout": "",
      "stderr": "tmp017coby5: /tmp/tmp017coby5.cpp:17: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0) {\n        return true;\n    }\n    if (n == 1) {\n        return false;\n    }\n    long temp = n;\n    while (temp % 2 == 0) {\n        temp /= 2;\n    }\n    if (temp == 1) {\n        return true;\n    }\n    return is_Sum_Of_Powers_Of_Two(temp - 1);\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124083,
      "stdout": "",
      "stderr": "tmpdtodqd4i: /tmp/tmpdtodqd4i.cpp:23: int main(): Assertion `candidate((7)) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0)\n        return true;\n    if (n == 1)\n        return true;\n    if (n % 2 == 1)\n        return false;\n    return is_Sum_Of_Powers_Of_Two(n / 2);\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1665509701,
      "stdout": "",
      "stderr": "tmpmb0q77h9: /tmp/tmpmb0q77h9.cpp:15: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if(n == 0)\n        return true;\n    if(n == 1)\n        return true;\n    if(n == 2)\n        return true;\n    if(n == 3)\n        return false;\n    if(n == 4)\n        return true;\n    if(n == 5)\n        return false;\n    if(n == 6)\n        return false;\n    if(n == 7)\n        return false;\n    if(n == 8)\n        return true;\n    if(n == 9)\n        return false;\n    if(n == 10)\n        return false;\n    if(n == 11)\n        return false;\n    if(n == 12)\n        return false;\n    if(n == 13)\n        return false;\n    if(n == 14)\n        return false;\n    if(n == 15)\n        return false;\n    if(n == 16)\n        return true;\n    if(n == 17)\n        return false;\n    if(n == 18)\n        return false;\n    if(n == 19)\n        return false;\n    if(n == 20)\n        return false;\n    if(n == 21)\n        return false;\n    if(n == 22)\n        return false;\n    if(n == 23)\n        return false;\n    if(n == 24)\n        return false;\n    if(n == 25)\n        return false;\n    if(n == 26)\n        return false;\n    if(n == 27)\n        return false;\n    if(n == 28)\n        return false;\n    if(n == 29)\n        return false;\n    if(n == 30)\n        return false;\n    if(n == 31)\n        return false;\n    if(n == 32)\n        return true;\n    if(n == 33)\n        return false;\n    if(n == 34)\n        return false;\n    if(n == 35)\n        return false;\n    if(n == 36)\n        return false;\n    if(n == 37)\n        return false;\n    if(n == 38)\n        return false;\n    if(n\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124082,
      "stdout": "",
      "stderr": "/tmp/tmp2o778g94.cpp: In function \u2018bool is_Sum_Of_Powers_Of_Two(long int)\u2019:\n/tmp/tmp2o778g94.cpp:83:9: error: expected \u2018)\u2019 before \u2018}\u2019 token\n   83 |     if(n\n      |       ~ ^\n      |         )\n   84 | }\n      | ~        \n/tmp/tmp2o778g94.cpp:84:1: error: expected primary-expression before \u2018}\u2019 token\n   84 | }\n      | ^\n/tmp/tmp2o778g94.cpp:84:1: warning: control reaches end of non-void function [-Wreturn-type]\n   84 | }\n      | ^\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if(n == 0) {\n        return true;\n    }\n    if(n == 1) {\n        return false;\n    }\n    while(n != 0) {\n        if(n % 2 == 0) {\n            n = n / 2;\n        }\n        else {\n            n = n - 1;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124083,
      "stdout": "",
      "stderr": "tmp838yziva: /tmp/tmp838yziva.cpp:24: int main(): Assertion `candidate((7)) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0)\n        return true;\n    while (n != 1) {\n        if (n % 2 != 0)\n            return false;\n        n = n / 2;\n    }\n    return true;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1665509701,
      "stdout": "",
      "stderr": "tmpvm9d_j8_: /tmp/tmpvm9d_j8_.cpp:16: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0) {\n        return true;\n    }\n    if (n == 1) {\n        return false;\n    }\n    long temp = n;\n    while (temp % 2 == 0) {\n        temp /= 2;\n    }\n    if (temp == 1) {\n        return true;\n    }\n    return is_Sum_Of_Powers_Of_Two(temp - 1);\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124083,
      "stdout": "",
      "stderr": "tmpdtodqd4i: /tmp/tmpdtodqd4i.cpp:23: int main(): Assertion `candidate((7)) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0) {\n        return true;\n    }\n    if (n == 1) {\n        return false;\n    }\n    while (n > 1) {\n        if (n % 2 == 1) {\n            return false;\n        }\n        n = n / 2;\n    }\n    return true;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124084,
      "stdout": "",
      "stderr": "tmpy802tqa8: /tmp/tmpy802tqa8.cpp:21: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if(n == 0)\n        return true;\n    if(n == 1)\n        return false;\n    while(n != 1) {\n        if(n % 2 != 0)\n            return false;\n        n /= 2;\n    }\n    return true;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124085,
      "stdout": "",
      "stderr": "tmpihu4o2u9: /tmp/tmpihu4o2u9.cpp:18: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if(n == 0)\n        return true;\n    if(n == 1)\n        return false;\n    while(n > 1) {\n        if(n % 2 != 0)\n            return false;\n        n = n / 2;\n    }\n    return true;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124085,
      "stdout": "",
      "stderr": "tmp4ay8p41x: /tmp/tmp4ay8p41x.cpp:18: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0) {\n        return false;\n    }\n    while (n != 1) {\n        if (n % 2 != 0) {\n            return false;\n        }\n        n /= 2;\n    }\n    return true;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124083,
      "stdout": "",
      "stderr": "tmpld_vk55y: /tmp/tmpld_vk55y.cpp:18: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0) {\n        return true;\n    }\n    if (n == 1) {\n        return true;\n    }\n    if (n == 2) {\n        return true;\n    }\n    if (n == 3) {\n        return false;\n    }\n    if (n == 4) {\n        return true;\n    }\n    if (n == 5) {\n        return false;\n    }\n    if (n == 6) {\n        return false;\n    }\n    if (n == 7) {\n        return false;\n    }\n    if (n == 8) {\n        return true;\n    }\n    if (n == 9) {\n        return false;\n    }\n    if (n == 10) {\n        return false;\n    }\n    if (n == 11) {\n        return false;\n    }\n    if (n == 12) {\n        return false;\n    }\n    if (n == 13) {\n        return false;\n    }\n    if (n == 14) {\n        return false;\n    }\n    if (n == 15) {\n        return false;\n    }\n    if (n == 16) {\n        return true;\n    }\n    if (n == 17) {\n        return false;\n    }\n    if (n == 18) {\n        return false;\n    }\n    if (n == 19) {\n        return false;\n    }\n    if (n == 20) {\n        return false;\n    }\n    if (n == 21) {\n        return false;\n    }\n    if (n == 22) {\n        return false;\n    }\n    if (n == 23) {\n        return false;\n    }\n    if (n == 24) {\n        return false;\n    }\n    if (n == 25) {\n        return false;\n    }\n    if (n == 26) {\n        return false;\n    }\n    if (n == 27) {\n        return false;\n    }\n    if (n == 28) {\n        return false;\n    }\n    if (n == 29) {\n        return false;\n    }\n   \n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124083,
      "stdout": "",
      "stderr": "tmpomfwfifi: /tmp/tmpomfwfifi.cpp:99: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0)\n        return true;\n    if (n == 1)\n        return false;\n    while (n > 1) {\n        if (n % 2 != 0)\n            return false;\n        n = n / 2;\n    }\n    return true;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124085,
      "stdout": "",
      "stderr": "tmpbpj3he1w: /tmp/tmpbpj3he1w.cpp:18: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0) {\n        return true;\n    }\n    if (n == 1) {\n        return false;\n    }\n    while (n > 0) {\n        if (n % 2 == 0) {\n            n = n / 2;\n        } else {\n            n = n - 1;\n        }\n    }\n    if (n == 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124085,
      "stdout": "",
      "stderr": "tmpqev_74ri: /tmp/tmpqev_74ri.cpp:27: int main(): Assertion `candidate((7)) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    // Write your code here\n    int i=0;\n    while(n!=0)\n    {\n        if(n%2==1)\n        {\n            n=n-pow(2,i);\n        }\n        i++;\n        if(n==0)\n        {\n            return true;\n        }\n    }\n    return false;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124100,
      "stdout": "",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    // Write your code here\n    if(n==0)\n        return true;\n    if(n==1)\n        return true;\n    if(n%2!=0)\n        return false;\n    return is_Sum_Of_Powers_Of_Two(n/2);\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124085,
      "stdout": "",
      "stderr": "tmp5t3oxr6c: /tmp/tmp5t3oxr6c.cpp:16: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0) {\n        return true;\n    }\n    if (n == 1) {\n        return true;\n    }\n    if (n == 2) {\n        return true;\n    }\n    if (n == 3) {\n        return false;\n    }\n    if (n == 4) {\n        return true;\n    }\n    if (n == 5) {\n        return false;\n    }\n    if (n == 6) {\n        return false;\n    }\n    if (n == 7) {\n        return false;\n    }\n    if (n == 8) {\n        return true;\n    }\n    if (n == 9) {\n        return false;\n    }\n    if (n == 10) {\n        return false;\n    }\n    if (n == 11) {\n        return false;\n    }\n    if (n == 12) {\n        return false;\n    }\n    if (n == 13) {\n        return false;\n    }\n    if (n == 14) {\n        return false;\n    }\n    if (n == 15) {\n        return false;\n    }\n    if (n == 16) {\n        return true;\n    }\n    if (n == 17) {\n        return false;\n    }\n    if (n == 18) {\n        return false;\n    }\n    if (n == 19) {\n        return false;\n    }\n    if (n == 20) {\n        return false;\n    }\n    if (n == 21) {\n        return false;\n    }\n    if (n == 22) {\n        return false;\n    }\n    if (n == 23) {\n        return false;\n    }\n    if (n == 24) {\n        return false;\n    }\n    if (n == 25) {\n        return false;\n    }\n    if (n == 26) {\n        return false;\n    }\n    if (n == 27) {\n        return false;\n    }\n    if (n == 28) {\n        return false;\n    }\n    if (n == 29) {\n        return false;\n    }\n   \n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124083,
      "stdout": "",
      "stderr": "tmpomfwfifi: /tmp/tmpomfwfifi.cpp:99: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0) {\n        return true;\n    }\n    if (n == 1) {\n        return false;\n    }\n    while (n > 1) {\n        if (n % 2 == 0) {\n            n = n / 2;\n        }\n        else {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124085,
      "stdout": "",
      "stderr": "tmpz8hejckg: /tmp/tmpz8hejckg.cpp:23: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0) {\n        return true;\n    }\n    if (n == 1) {\n        return true;\n    }\n    while (n != 0) {\n        if (n % 2 == 0) {\n            n = n / 2;\n        }\n        else {\n            n = n - 1;\n        }\n    }\n    if (n == 0) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124085,
      "stdout": "",
      "stderr": "tmpt4i8napz: /tmp/tmpt4i8napz.cpp:29: int main(): Assertion `candidate((7)) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if(n == 0) {\n        return true;\n    }\n    if(n == 1) {\n        return false;\n    }\n    if(n % 2 == 1) {\n        return false;\n    }\n    return is_Sum_Of_Powers_Of_Two(n / 2);\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124085,
      "stdout": "",
      "stderr": "tmp837fdcay: /tmp/tmp837fdcay.cpp:18: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if(n == 0) {\n        return true;\n    }\n    if(n == 1) {\n        return false;\n    }\n    if(n % 2 == 1) {\n        return false;\n    }\n    return is_Sum_Of_Powers_Of_Two(n / 2);\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124085,
      "stdout": "",
      "stderr": "tmp837fdcay: /tmp/tmp837fdcay.cpp:18: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0) return true;\n    if (n == 1) return true;\n    if (n == 2) return true;\n    if (n == 3) return false;\n    if (n == 4) return true;\n    if (n == 5) return false;\n    if (n == 6) return false;\n    if (n == 7) return false;\n    if (n == 8) return true;\n    if (n == 9) return false;\n    if (n == 10) return false;\n    if (n == 11) return false;\n    if (n == 12) return false;\n    if (n == 13) return false;\n    if (n == 14) return false;\n    if (n == 15) return false;\n    if (n == 16) return true;\n    if (n == 17) return false;\n    if (n == 18) return false;\n    if (n == 19) return false;\n    if (n == 20) return false;\n    if (n == 21) return false;\n    if (n == 22) return false;\n    if (n == 23) return false;\n    if (n == 24) return false;\n    if (n == 25) return false;\n    if (n == 26) return false;\n    if (n == 27) return false;\n    if (n == 28) return false;\n    if (n == 29) return false;\n    if (n == 30) return false;\n    if (n == 31) return false;\n    if (n == 32) return true;\n    if (n == 33) return false;\n    if (n == 34) return false;\n    if (n == 35) return false;\n    if (n == 36) return false;\n    if (n == 37) return false;\n    if (n == 38) return false;\n    if (n == 39) return false;\n    if (n == 40) return false;\n    if (n == 41) return false;\n    if (n == 42) return false;\n    if (n == 43) return false;\n    if (n == 44) return false;\n    if (n == 45) return false;\n    if (n ==\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124084,
      "stdout": "",
      "stderr": "/tmp/tmpzp4zk3zi.cpp: In function \u2018bool is_Sum_Of_Powers_Of_Two(long int)\u2019:\n/tmp/tmpzp4zk3zi.cpp:52:1: error: expected primary-expression before \u2018}\u2019 token\n   52 | }\n      | ^\n/tmp/tmpzp4zk3zi.cpp:51:13: error: expected \u2018)\u2019 before \u2018}\u2019 token\n   51 |     if (n ==\n      |        ~    ^\n      |             )\n   52 | }\n      | ~            \n/tmp/tmpzp4zk3zi.cpp:52:1: error: expected primary-expression before \u2018}\u2019 token\n   52 | }\n      | ^\n/tmp/tmpzp4zk3zi.cpp:52:1: warning: control reaches end of non-void function [-Wreturn-type]\n   52 | }\n      | ^\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0) {\n        return true;\n    }\n    while (n != 1) {\n        if (n % 2 != 0) {\n            return false;\n        }\n        n = n / 2;\n    }\n    return true;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1665509701,
      "stdout": "",
      "stderr": "tmpcqv6uj1h: /tmp/tmpcqv6uj1h.cpp:18: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0) {\n        return true;\n    }\n    if (n == 1) {\n        return true;\n    }\n    if (n < 0) {\n        return false;\n    }\n    int i = 0;\n    while (n > 0) {\n        if (n % 2 == 1) {\n            if (i == 0) {\n                return false;\n            }\n            n = n - pow(2, i);\n        }\n        i++;\n    }\n    return true;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124100,
      "stdout": "",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0) {\n        return true;\n    }\n    if (n == 1) {\n        return false;\n    }\n    int i = 1;\n    while (n > 0) {\n        if (n % 2 == 1) {\n            if (n == 1) {\n                return true;\n            }\n            else {\n                return false;\n            }\n        }\n        n = n / 2;\n        i++;\n    }\n    return true;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124085,
      "stdout": "",
      "stderr": "tmpxp2axvln: /tmp/tmpxp2axvln.cpp:28: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0)\n        return true;\n    if (n == 1)\n        return true;\n    if (n % 2 == 1)\n        return false;\n    return is_Sum_Of_Powers_Of_Two(n / 2);\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1665509701,
      "stdout": "",
      "stderr": "tmpmb0q77h9: /tmp/tmpmb0q77h9.cpp:15: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0) {\n        return true;\n    }\n    while (n != 1) {\n        if (n % 2 != 0) {\n            return false;\n        }\n        n = n / 2;\n    }\n    return true;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1665509701,
      "stdout": "",
      "stderr": "tmpcqv6uj1h: /tmp/tmpcqv6uj1h.cpp:18: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0) {\n        return false;\n    }\n    long temp = n;\n    while (temp > 0) {\n        if (temp % 2 != 0) {\n            break;\n        }\n        temp = temp / 2;\n    }\n    if (temp == 1) {\n        return true;\n    }\n    return is_Sum_Of_Powers_Of_Two(n - temp);\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124085,
      "stdout": "",
      "stderr": "tmpwhiqnv7f: /tmp/tmpwhiqnv7f.cpp:22: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0) {\n        return true;\n    }\n    int i = 0;\n    while (n > 0) {\n        if (n % 2 == 1) {\n            if (i == 0) {\n                return false;\n            }\n            n = n - pow(2, i);\n        }\n        i++;\n        n = n / 2;\n    }\n    return true;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124085,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0) {\n        return true;\n    }\n    if (n == 1) {\n        return true;\n    }\n    while (n > 0) {\n        if (n % 2 == 1) {\n            n = n - 1;\n        }\n        else {\n            n = n / 2;\n        }\n    }\n    if (n == 0) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124085,
      "stdout": "",
      "stderr": "tmpshfptcky: /tmp/tmpshfptcky.cpp:29: int main(): Assertion `candidate((7)) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0) {\n        return true;\n    }\n    if (n == 1) {\n        return true;\n    }\n    if (n % 2 == 1) {\n        return false;\n    }\n    return is_Sum_Of_Powers_Of_Two(n / 2);\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124083,
      "stdout": "",
      "stderr": "tmp0c68de3w: /tmp/tmp0c68de3w.cpp:18: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n <= 0) {\n        return false;\n    }\n    while (n % 2 == 0) {\n        n = n / 2;\n    }\n    if (n == 1) {\n        return true;\n    }\n    return false;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124085,
      "stdout": "",
      "stderr": "tmpk5o6a__b: /tmp/tmpk5o6a__b.cpp:18: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0) {\n        return true;\n    }\n    if (n == 1) {\n        return true;\n    }\n    long i = 1;\n    while (i < n) {\n        i = i * 2;\n    }\n    if (i == n) {\n        return true;\n    }\n    return false;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124085,
      "stdout": "",
      "stderr": "tmphyrbk3jj: /tmp/tmphyrbk3jj.cpp:22: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if(n == 0) {\n        return true;\n    }\n    if(n == 1) {\n        return true;\n    }\n    if(n == 2) {\n        return true;\n    }\n    if(n == 3) {\n        return false;\n    }\n    if(n == 4) {\n        return true;\n    }\n    if(n == 5) {\n        return false;\n    }\n    if(n == 6) {\n        return false;\n    }\n    if(n == 7) {\n        return false;\n    }\n    if(n == 8) {\n        return true;\n    }\n    if(n == 9) {\n        return false;\n    }\n    if(n == 10) {\n        return false;\n    }\n    if(n == 11) {\n        return false;\n    }\n    if(n == 12) {\n        return false;\n    }\n    if(n == 13) {\n        return false;\n    }\n    if(n == 14) {\n        return false;\n    }\n    if(n == 15) {\n        return false;\n    }\n    if(n == 16) {\n        return true;\n    }\n    if(n == 17) {\n        return false;\n    }\n    if(n == 18) {\n        return false;\n    }\n    if(n == 19) {\n        return false;\n    }\n    if(n == 20) {\n        return false;\n    }\n    if(n == 21) {\n        return false;\n    }\n    if(n == 22) {\n        return false;\n    }\n    if(n == 23) {\n        return false;\n    }\n    if(n == 24) {\n        return false;\n    }\n    if(n == 25) {\n        return false;\n    }\n    if(n == 26) {\n        return false;\n    }\n    if(n == 27) {\n        return false;\n    }\n    if(n == 28) {\n        return false;\n    }\n    if(n == 29) {\n        return false;\n    }\n   \n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1665509701,
      "stdout": "",
      "stderr": "tmpwqhcln88: /tmp/tmpwqhcln88.cpp:99: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0) {\n        return true;\n    }\n    if (n == 1) {\n        return true;\n    }\n    if (n % 2 == 1) {\n        return false;\n    }\n    return is_Sum_Of_Powers_Of_Two(n / 2);\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124083,
      "stdout": "",
      "stderr": "tmp0c68de3w: /tmp/tmp0c68de3w.cpp:18: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0) {\n        return true;\n    }\n    if (n == 1) {\n        return true;\n    }\n    while (n > 1) {\n        if (n % 2 != 0) {\n            return false;\n        }\n        n = n / 2;\n    }\n    return true;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124085,
      "stdout": "",
      "stderr": "tmp1zn_opk0: /tmp/tmp1zn_opk0.cpp:21: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0) {\n        return true;\n    }\n    while (n != 1) {\n        if (n % 2 != 0) {\n            return false;\n        }\n        n = n / 2;\n    }\n    return true;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1665509701,
      "stdout": "",
      "stderr": "tmpcqv6uj1h: /tmp/tmpcqv6uj1h.cpp:18: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0) {\n        return true;\n    }\n    while (n != 1) {\n        if (n % 2 != 0) {\n            return false;\n        }\n        n /= 2;\n    }\n    return true;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124083,
      "stdout": "",
      "stderr": "tmp6l7xovjl: /tmp/tmp6l7xovjl.cpp:18: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 1) {\n        return true;\n    }\n    if (n % 2 == 1) {\n        return false;\n    }\n    return is_Sum_Of_Powers_Of_Two(n/2);\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124085,
      "stdout": "",
      "stderr": "tmp7ol26q0m: /tmp/tmp7ol26q0m.cpp:15: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if(n == 0) {\n        return false;\n    }\n    while(n > 0) {\n        if(n % 2 == 0) {\n            n = n / 2;\n        }\n        else {\n            if(n == 1) {\n                return true;\n            }\n            else {\n                return false;\n            }\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124085,
      "stdout": "",
      "stderr": "tmpo26r_e0m: /tmp/tmpo26r_e0m.cpp:25: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0) return true;\n    while (n != 1) {\n        if (n % 2 != 0) return false;\n        n = n / 2;\n    }\n    return true;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124085,
      "stdout": "",
      "stderr": "tmprbi4wjdi: /tmp/tmprbi4wjdi.cpp:14: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0) {\n        return true;\n    }\n    if (n == 1) {\n        return true;\n    }\n    while (n > 1) {\n        if (n % 2 != 0) {\n            return false;\n        }\n        n = n / 2;\n    }\n    return true;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124085,
      "stdout": "",
      "stderr": "tmp1zn_opk0: /tmp/tmp1zn_opk0.cpp:21: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0)\n        return true;\n    while (n != 1) {\n        if (n % 2 != 0)\n            return false;\n        n = n / 2;\n    }\n    return true;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1665509701,
      "stdout": "",
      "stderr": "tmpvm9d_j8_: /tmp/tmpvm9d_j8_.cpp:16: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if(n == 0) {\n        return true;\n    }\n    if(n == 1) {\n        return true;\n    }\n    if(n%2 == 1) {\n        return false;\n    }\n    return is_Sum_Of_Powers_Of_Two(n/2);\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124085,
      "stdout": "",
      "stderr": "tmpu75l5vyt: /tmp/tmpu75l5vyt.cpp:18: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0) {\n        return true;\n    }\n    if (n == 1) {\n        return false;\n    }\n    while (n > 0) {\n        if (n % 2 == 1) {\n            return false;\n        }\n        n = n / 2;\n    }\n    return true;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124086,
      "stdout": "",
      "stderr": "tmppnw4xem2: /tmp/tmppnw4xem2.cpp:21: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0) {\n        return true;\n    }\n    long temp = n;\n    while (temp != 0) {\n        if (temp % 2 == 1) {\n            break;\n        }\n        temp /= 2;\n    }\n    if (temp == 1) {\n        return true;\n    }\n    return false;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124086,
      "stdout": "",
      "stderr": "tmpa3sv8r7v: /tmp/tmpa3sv8r7v.cpp:22: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if(n == 0) {\n        return false;\n    }\n    if(n == 1) {\n        return true;\n    }\n    while(n > 1) {\n        if(n % 2 == 1) {\n            return false;\n        }\n        n /= 2;\n    }\n    return true;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124086,
      "stdout": "",
      "stderr": "tmp9udrdhdr: /tmp/tmp9udrdhdr.cpp:21: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0) {\n        return true;\n    }\n    if (n == 1) {\n        return true;\n    }\n    if (n == 2) {\n        return true;\n    }\n    if (n == 3) {\n        return false;\n    }\n    if (n == 4) {\n        return true;\n    }\n    if (n == 5) {\n        return false;\n    }\n    if (n == 6) {\n        return false;\n    }\n    if (n == 7) {\n        return false;\n    }\n    if (n == 8) {\n        return true;\n    }\n    if (n == 9) {\n        return false;\n    }\n    if (n == 10) {\n        return false;\n    }\n    if (n == 11) {\n        return false;\n    }\n    if (n == 12) {\n        return false;\n    }\n    if (n == 13) {\n        return false;\n    }\n    if (n == 14) {\n        return false;\n    }\n    if (n == 15) {\n        return false;\n    }\n    if (n == 16) {\n        return true;\n    }\n    if (n == 17) {\n        return false;\n    }\n    if (n == 18) {\n        return false;\n    }\n    if (n == 19) {\n        return false;\n    }\n    if (n == 20) {\n        return false;\n    }\n    if (n == 21) {\n        return false;\n    }\n    if (n == 22) {\n        return false;\n    }\n    if (n == 23) {\n        return false;\n    }\n    if (n == 24) {\n        return false;\n    }\n    if (n == 25) {\n        return false;\n    }\n    if (n == 26) {\n        return false;\n    }\n    if (n == 27) {\n        return false;\n    }\n    if (n == 28) {\n        return false;\n    }\n    if (n == 29) {\n        return false;\n    }\n   \n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124083,
      "stdout": "",
      "stderr": "tmpomfwfifi: /tmp/tmpomfwfifi.cpp:99: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0)\n        return true;\n    while (n != 1) {\n        if (n % 2 != 0)\n            return false;\n        n = n / 2;\n    }\n    return true;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1665509701,
      "stdout": "",
      "stderr": "tmpvm9d_j8_: /tmp/tmpvm9d_j8_.cpp:16: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0) {\n        return true;\n    }\n    if (n == 1) {\n        return true;\n    }\n    if (n % 2 == 1) {\n        return false;\n    }\n    return is_Sum_Of_Powers_Of_Two(n / 2);\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124083,
      "stdout": "",
      "stderr": "tmp0c68de3w: /tmp/tmp0c68de3w.cpp:18: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if(n == 0)\n        return false;\n    while(n != 1) {\n        if(n % 2 != 0)\n            return false;\n        n = n / 2;\n    }\n    return true;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124086,
      "stdout": "",
      "stderr": "tmp3byrs40b: /tmp/tmp3byrs40b.cpp:16: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0) {\n        return true;\n    }\n    if (n == 1) {\n        return true;\n    }\n    if (n % 2 == 1) {\n        return false;\n    }\n    return is_Sum_Of_Powers_Of_Two(n / 2);\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124083,
      "stdout": "",
      "stderr": "tmp0c68de3w: /tmp/tmp0c68de3w.cpp:18: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0) {\n        return true;\n    }\n    if (n == 1) {\n        return false;\n    }\n    int i = 0;\n    while (n > 0) {\n        if (n % 2 == 1) {\n            break;\n        }\n        n /= 2;\n        i++;\n    }\n    if (n == 1) {\n        return true;\n    }\n    return is_Sum_Of_Powers_Of_Two(n - pow(2, i));\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124086,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0) {\n        return true;\n    }\n    if (n == 1) {\n        return true;\n    }\n    if (n % 2 != 0) {\n        return false;\n    }\n    return is_Sum_Of_Powers_Of_Two(n / 2);\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124086,
      "stdout": "",
      "stderr": "tmplsiqtamj: /tmp/tmplsiqtamj.cpp:18: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0) {\n        return true;\n    }\n    if (n == 1) {\n        return false;\n    }\n    while (n != 0) {\n        if (n % 2 == 1) {\n            n -= 1;\n        }\n        n /= 2;\n    }\n    return n == 0;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124086,
      "stdout": "",
      "stderr": "tmpem9gi4sm: /tmp/tmpem9gi4sm.cpp:22: int main(): Assertion `candidate((7)) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0) {\n        return false;\n    }\n    while (n != 1) {\n        if (n % 2 != 0) {\n            return false;\n        }\n        n = n / 2;\n    }\n    return true;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1665509701,
      "stdout": "",
      "stderr": "tmp4gmog9yv: /tmp/tmp4gmog9yv.cpp:18: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if(n == 0) {\n        return true;\n    }\n    int i = 0;\n    while(n > 0) {\n        if(n & 1) {\n            if(i == 0) {\n                return false;\n            }\n            n = n - pow(2, i);\n        }\n        i++;\n        n = n >> 1;\n    }\n    return true;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124086,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0) {\n        return true;\n    }\n    if (n == 1) {\n        return true;\n    }\n    if (n == 2) {\n        return true;\n    }\n    if (n == 3) {\n        return false;\n    }\n    if (n == 4) {\n        return true;\n    }\n    if (n == 5) {\n        return false;\n    }\n    if (n == 6) {\n        return false;\n    }\n    if (n == 7) {\n        return false;\n    }\n    if (n == 8) {\n        return true;\n    }\n    if (n == 9) {\n        return false;\n    }\n    if (n == 10) {\n        return false;\n    }\n    if (n == 11) {\n        return false;\n    }\n    if (n == 12) {\n        return false;\n    }\n    if (n == 13) {\n        return false;\n    }\n    if (n == 14) {\n        return false;\n    }\n    if (n == 15) {\n        return false;\n    }\n    if (n == 16) {\n        return true;\n    }\n    if (n == 17) {\n        return false;\n    }\n    if (n == 18) {\n        return false;\n    }\n    if (n == 19) {\n        return false;\n    }\n    if (n == 20) {\n        return false;\n    }\n    if (n == 21) {\n        return false;\n    }\n    if (n == 22) {\n        return false;\n    }\n    if (n == 23) {\n        return false;\n    }\n    if (n == 24) {\n        return false;\n    }\n    if (n == 25) {\n        return false;\n    }\n    if (n == 26) {\n        return false;\n    }\n    if (n == 27) {\n        return false;\n    }\n    if (n == 28) {\n        return false;\n    }\n    if (n == 29) {\n        return false;\n    }\n   \n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124083,
      "stdout": "",
      "stderr": "tmpomfwfifi: /tmp/tmpomfwfifi.cpp:99: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0) {\n        return false;\n    }\n    while (n != 1) {\n        if (n % 2 != 0) {\n            return false;\n        }\n        n = n / 2;\n    }\n    return true;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1665509701,
      "stdout": "",
      "stderr": "tmp4gmog9yv: /tmp/tmp4gmog9yv.cpp:18: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0) {\n        return false;\n    }\n    if (n == 1) {\n        return true;\n    }\n    while (n > 1) {\n        if (n % 2 != 0) {\n            return false;\n        }\n        n = n / 2;\n    }\n    return true;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124086,
      "stdout": "",
      "stderr": "tmpchkrxjai: /tmp/tmpchkrxjai.cpp:21: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if(n == 0)\n        return true;\n    if(n == 1)\n        return false;\n    while(n > 1) {\n        if(n % 2 == 1)\n            return false;\n        n /= 2;\n    }\n    return true;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124087,
      "stdout": "",
      "stderr": "tmpqaon87t9: /tmp/tmpqaon87t9.cpp:18: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0) {\n        return true;\n    }\n    if (n == 1) {\n        return true;\n    }\n    if (n % 2 == 1) {\n        return false;\n    }\n    return is_Sum_Of_Powers_Of_Two(n / 2);\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124083,
      "stdout": "",
      "stderr": "tmp0c68de3w: /tmp/tmp0c68de3w.cpp:18: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0) {\n        return true;\n    }\n    if (n == 1) {\n        return true;\n    }\n    if (n == 2) {\n        return true;\n    }\n    if (n == 3) {\n        return false;\n    }\n    if (n == 4) {\n        return true;\n    }\n    if (n == 5) {\n        return false;\n    }\n    if (n == 6) {\n        return false;\n    }\n    if (n == 7) {\n        return false;\n    }\n    if (n == 8) {\n        return true;\n    }\n    if (n == 9) {\n        return false;\n    }\n    if (n == 10) {\n        return false;\n    }\n    if (n == 11) {\n        return false;\n    }\n    if (n == 12) {\n        return false;\n    }\n    if (n == 13) {\n        return false;\n    }\n    if (n == 14) {\n        return false;\n    }\n    if (n == 15) {\n        return false;\n    }\n    if (n == 16) {\n        return true;\n    }\n    if (n == 17) {\n        return false;\n    }\n    if (n == 18) {\n        return false;\n    }\n    if (n == 19) {\n        return false;\n    }\n    if (n == 20) {\n        return false;\n    }\n    if (n == 21) {\n        return false;\n    }\n    if (n == 22) {\n        return false;\n    }\n    if (n == 23) {\n        return false;\n    }\n    if (n == 24) {\n        return false;\n    }\n    if (n == 25) {\n        return false;\n    }\n    if (n == 26) {\n        return false;\n    }\n    if (n == 27) {\n        return false;\n    }\n    if (n == 28) {\n        return false;\n    }\n    if (n == 29) {\n        return false;\n    }\n   \n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124083,
      "stdout": "",
      "stderr": "tmpomfwfifi: /tmp/tmpomfwfifi.cpp:99: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0)\n        return true;\n    if (n == 1)\n        return true;\n    if (n % 2 == 1)\n        return false;\n    return is_Sum_Of_Powers_Of_Two(n / 2);\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1665509701,
      "stdout": "",
      "stderr": "tmpmb0q77h9: /tmp/tmpmb0q77h9.cpp:15: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0) {\n        return true;\n    }\n    while (n != 1) {\n        if (n % 2 != 0) {\n            return false;\n        }\n        n = n / 2;\n    }\n    return true;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1665509701,
      "stdout": "",
      "stderr": "tmpcqv6uj1h: /tmp/tmpcqv6uj1h.cpp:18: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0) {\n        return true;\n    }\n    if (n == 1) {\n        return true;\n    }\n    if (n % 2 != 0) {\n        return false;\n    }\n    return is_Sum_Of_Powers_Of_Two(n / 2);\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124086,
      "stdout": "",
      "stderr": "tmplsiqtamj: /tmp/tmplsiqtamj.cpp:18: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0) {\n        return true;\n    }\n    if (n == 1) {\n        return false;\n    }\n    if (n % 2 == 1) {\n        return false;\n    }\n    return is_Sum_Of_Powers_Of_Two(n / 2);\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124086,
      "stdout": "",
      "stderr": "tmpbztcwi7l: /tmp/tmpbztcwi7l.cpp:18: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0) {\n        return true;\n    }\n    if (n == 1) {\n        return true;\n    }\n    if (n % 2 == 1) {\n        return false;\n    }\n    return is_Sum_Of_Powers_Of_Two(n / 2);\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124083,
      "stdout": "",
      "stderr": "tmp0c68de3w: /tmp/tmp0c68de3w.cpp:18: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 1) {\n        return true;\n    }\n    if (n % 2 != 0) {\n        return false;\n    }\n    return is_Sum_Of_Powers_Of_Two(n / 2);\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124086,
      "stdout": "",
      "stderr": "tmpombqhs10: /tmp/tmpombqhs10.cpp:15: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0) {\n        return true;\n    }\n    if (n == 1) {\n        return false;\n    }\n    long i = 1;\n    while (i < n) {\n        i *= 2;\n    }\n    if (i == n) {\n        return true;\n    }\n    return is_Sum_Of_Powers_Of_Two(n - (i / 2));\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124086,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0) {\n        return false;\n    }\n    if (n == 1) {\n        return true;\n    }\n    long temp = n;\n    while (temp % 2 == 0) {\n        temp = temp / 2;\n    }\n    if (temp == 1) {\n        return true;\n    }\n    return false;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124086,
      "stdout": "",
      "stderr": "tmpmgj2_n8_: /tmp/tmpmgj2_n8_.cpp:22: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0) {\n        return true;\n    }\n    if (n == 1) {\n        return false;\n    }\n    while (n > 1) {\n        if (n % 2 == 0) {\n            n = n / 2;\n        } else {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124083,
      "stdout": "",
      "stderr": "tmphchqm7xd: /tmp/tmphchqm7xd.cpp:22: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0) {\n        return true;\n    }\n    if (n == 1) {\n        return false;\n    }\n    long i = 1;\n    while (i < n) {\n        i = i * 2;\n    }\n    if (i == n) {\n        return true;\n    }\n    return is_Sum_Of_Powers_Of_Two(n - i / 2);\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124087,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0) {\n        return true;\n    }\n    if (n == 1) {\n        return true;\n    }\n    if (n == 2) {\n        return true;\n    }\n    if (n == 3) {\n        return false;\n    }\n    if (n == 4) {\n        return true;\n    }\n    if (n == 5) {\n        return false;\n    }\n    if (n == 6) {\n        return false;\n    }\n    if (n == 7) {\n        return false;\n    }\n    if (n == 8) {\n        return true;\n    }\n    if (n == 9) {\n        return false;\n    }\n    if (n == 10) {\n        return false;\n    }\n    if (n == 11) {\n        return false;\n    }\n    if (n == 12) {\n        return false;\n    }\n    if (n == 13) {\n        return false;\n    }\n    if (n == 14) {\n        return false;\n    }\n    if (n == 15) {\n        return false;\n    }\n    if (n == 16) {\n        return true;\n    }\n    if (n == 17) {\n        return false;\n    }\n    if (n == 18) {\n        return false;\n    }\n    if (n == 19) {\n        return false;\n    }\n    if (n == 20) {\n        return false;\n    }\n    if (n == 21) {\n        return false;\n    }\n    if (n == 22) {\n        return false;\n    }\n    if (n == 23) {\n        return false;\n    }\n    if (n == 24) {\n        return false;\n    }\n    if (n == 25) {\n        return false;\n    }\n    if (n == 26) {\n        return false;\n    }\n    if (n == 27) {\n        return false;\n    }\n    if (n == 28) {\n        return false;\n    }\n    if (n == 29) {\n        return false;\n    }\n   \n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124083,
      "stdout": "",
      "stderr": "tmpomfwfifi: /tmp/tmpomfwfifi.cpp:99: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0) {\n        return true;\n    }\n    if (n == 1) {\n        return false;\n    }\n    long i = 2;\n    while (i <= n) {\n        i *= 2;\n    }\n    i /= 2;\n    if (i == n) {\n        return true;\n    }\n    return is_Sum_Of_Powers_Of_Two(n - i);\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124087,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0) {\n        return false;\n    }\n    while (n != 1) {\n        if (n % 2 != 0) {\n            return false;\n        }\n        n = n / 2;\n    }\n    return true;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1665509701,
      "stdout": "",
      "stderr": "tmp4gmog9yv: /tmp/tmp4gmog9yv.cpp:18: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0) {\n        return true;\n    }\n    if (n == 1) {\n        return false;\n    }\n    if (n % 2 == 1) {\n        return false;\n    }\n    return is_Sum_Of_Powers_Of_Two(n / 2);\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124086,
      "stdout": "",
      "stderr": "tmpbztcwi7l: /tmp/tmpbztcwi7l.cpp:18: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0) {\n        return false;\n    }\n    while (n != 1) {\n        if (n % 2 != 0) {\n            return false;\n        }\n        n = n / 2;\n    }\n    return true;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1665509701,
      "stdout": "",
      "stderr": "tmp4gmog9yv: /tmp/tmp4gmog9yv.cpp:18: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0) {\n        return true;\n    }\n    if (n == 1) {\n        return true;\n    }\n    if (n % 2 != 0) {\n        return false;\n    }\n    return is_Sum_Of_Powers_Of_Two(n / 2);\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124086,
      "stdout": "",
      "stderr": "tmplsiqtamj: /tmp/tmplsiqtamj.cpp:18: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0)\n        return false;\n    while (n != 1) {\n        if (n % 2 != 0)\n            return false;\n        n = n / 2;\n    }\n    return true;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1665509701,
      "stdout": "",
      "stderr": "tmp_58lsete: /tmp/tmp_58lsete.cpp:16: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0) {\n        return true;\n    }\n    if (n == 1) {\n        return true;\n    }\n    if (n % 2 != 0) {\n        return false;\n    }\n    return is_Sum_Of_Powers_Of_Two(n / 2);\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124086,
      "stdout": "",
      "stderr": "tmplsiqtamj: /tmp/tmplsiqtamj.cpp:18: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0) {\n        return false;\n    }\n    while (n != 1) {\n        if (n % 2 != 0) {\n            return false;\n        }\n        n = n / 2;\n    }\n    return true;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1665509701,
      "stdout": "",
      "stderr": "tmp4gmog9yv: /tmp/tmp4gmog9yv.cpp:18: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0) {\n        return true;\n    }\n    if (n == 1) {\n        return true;\n    }\n    if (n % 2 == 1) {\n        return false;\n    }\n    return is_Sum_Of_Powers_Of_Two(n / 2);\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124083,
      "stdout": "",
      "stderr": "tmp0c68de3w: /tmp/tmp0c68de3w.cpp:18: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0) {\n        return true;\n    }\n    if (n == 1) {\n        return false;\n    }\n    long i = 1;\n    while (i < n) {\n        i = i * 2;\n    }\n    if (i == n) {\n        return true;\n    }\n    return is_Sum_Of_Powers_Of_Two(n - i / 2);\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124087,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0) {\n        return false;\n    }\n    if (n == 1) {\n        return true;\n    }\n    if (n % 2 == 1) {\n        return false;\n    }\n    return is_Sum_Of_Powers_Of_Two(n / 2);\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124087,
      "stdout": "",
      "stderr": "tmpiwcwx2kw: /tmp/tmpiwcwx2kw.cpp:18: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0) {\n        return false;\n    }\n    while (n != 1) {\n        if (n % 2 != 0) {\n            return false;\n        }\n        n = n / 2;\n    }\n    return true;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1665509701,
      "stdout": "",
      "stderr": "tmp4gmog9yv: /tmp/tmp4gmog9yv.cpp:18: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0) {\n        return true;\n    }\n    if (n == 1) {\n        return false;\n    }\n    int i = 0;\n    while (n > 0) {\n        if (n % 2 == 1) {\n            if (n == 1) {\n                return true;\n            }\n            return false;\n        }\n        n = n / 2;\n    }\n    return true;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124087,
      "stdout": "",
      "stderr": "tmpuxtusagf: /tmp/tmpuxtusagf.cpp:25: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 1) {\n        return true;\n    }\n    if (n == 0) {\n        return false;\n    }\n    if (n % 2 == 1) {\n        return false;\n    }\n    return is_Sum_Of_Powers_Of_Two(n / 2);\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124087,
      "stdout": "",
      "stderr": "tmp8vfvrnbq: /tmp/tmp8vfvrnbq.cpp:18: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0)\n        return true;\n    if (n == 1)\n        return true;\n    if (n == 2)\n        return true;\n    if (n == 3)\n        return false;\n    if (n % 2 == 0)\n        return is_Sum_Of_Powers_Of_Two(n / 2);\n    else\n        return is_Sum_Of_Powers_Of_Two(n - 2);\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124087,
      "stdout": "",
      "stderr": "tmpp5np4r9c: /tmp/tmpp5np4r9c.cpp:20: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 1) {\n        return true;\n    }\n    if (n == 0) {\n        return false;\n    }\n    if (n % 2 == 1) {\n        return false;\n    }\n    return is_Sum_Of_Powers_Of_Two(n/2);\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124087,
      "stdout": "",
      "stderr": "tmpgz0213fq: /tmp/tmpgz0213fq.cpp:18: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0) {\n        return true;\n    }\n    if (n == 1) {\n        return false;\n    }\n    while (n % 2 == 0) {\n        n = n / 2;\n    }\n    if (n == 1) {\n        return true;\n    }\n    return false;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124088,
      "stdout": "",
      "stderr": "tmpo3yfo4ec: /tmp/tmpo3yfo4ec.cpp:21: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0) {\n        return true;\n    }\n    if (n == 1) {\n        return false;\n    }\n    if (n % 2 == 1) {\n        return false;\n    }\n    return is_Sum_Of_Powers_Of_Two(n / 2);\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124086,
      "stdout": "",
      "stderr": "tmpbztcwi7l: /tmp/tmpbztcwi7l.cpp:18: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if(n == 0) {\n        return true;\n    }\n    long i = 1;\n    while(i <= n) {\n        if(n % i == 0) {\n            return is_Sum_Of_Powers_Of_Two(n / i);\n        }\n        i = i * 2;\n    }\n    return false;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124103,
      "stdout": "",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if(n == 0) {\n        return true;\n    }\n    if(n == 1) {\n        return false;\n    }\n    while(n != 1) {\n        if(n % 2 == 1) {\n            return false;\n        }\n        n = n / 2;\n    }\n    return true;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124088,
      "stdout": "",
      "stderr": "tmp1vwtkju7: /tmp/tmp1vwtkju7.cpp:21: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0) {\n        return true;\n    }\n    if (n == 1) {\n        return true;\n    }\n    if (n % 2 == 1) {\n        return false;\n    }\n    return is_Sum_Of_Powers_Of_Two(n / 2);\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124083,
      "stdout": "",
      "stderr": "tmp0c68de3w: /tmp/tmp0c68de3w.cpp:18: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0) {\n        return true;\n    }\n    if (n == 1) {\n        return true;\n    }\n    if (n % 2 == 1) {\n        return false;\n    }\n    return is_Sum_Of_Powers_Of_Two(n / 2);\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124083,
      "stdout": "",
      "stderr": "tmp0c68de3w: /tmp/tmp0c68de3w.cpp:18: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0) {\n        return true;\n    }\n    if (n == 1) {\n        return true;\n    }\n    if (n == 2) {\n        return true;\n    }\n    if (n == 3) {\n        return false;\n    }\n    if (n == 4) {\n        return true;\n    }\n    if (n == 5) {\n        return false;\n    }\n    if (n == 6) {\n        return false;\n    }\n    if (n == 7) {\n        return false;\n    }\n    if (n == 8) {\n        return true;\n    }\n    if (n == 9) {\n        return false;\n    }\n    if (n == 10) {\n        return false;\n    }\n    if (n == 11) {\n        return false;\n    }\n    if (n == 12) {\n        return false;\n    }\n    if (n == 13) {\n        return false;\n    }\n    if (n == 14) {\n        return false;\n    }\n    if (n == 15) {\n        return false;\n    }\n    if (n == 16) {\n        return true;\n    }\n    if (n == 17) {\n        return false;\n    }\n    if (n == 18) {\n        return false;\n    }\n    if (n == 19) {\n        return false;\n    }\n    if (n == 20) {\n        return false;\n    }\n    if (n == 21) {\n        return false;\n    }\n    if (n == 22) {\n        return false;\n    }\n    if (n == 23) {\n        return false;\n    }\n    if (n == 24) {\n        return false;\n    }\n    if (n == 25) {\n        return false;\n    }\n    if (n == 26) {\n        return false;\n    }\n    if (n == 27) {\n        return false;\n    }\n    if (n == 28) {\n        return false;\n    }\n    if (n == 29) {\n        return false;\n    }\n   \n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124083,
      "stdout": "",
      "stderr": "tmpomfwfifi: /tmp/tmpomfwfifi.cpp:99: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if(n == 0) {\n        return true;\n    }\n    if(n == 1) {\n        return false;\n    }\n    long temp = n;\n    while(temp > 0) {\n        if(temp % 2 == 1) {\n            break;\n        }\n        temp /= 2;\n    }\n    if(temp == 1) {\n        return true;\n    }\n    return is_Sum_Of_Powers_Of_Two(n - temp);\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124088,
      "stdout": "",
      "stderr": "tmp0i6et8rk: /tmp/tmp0i6et8rk.cpp:26: int main(): Assertion `candidate((7)) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0) {\n        return true;\n    }\n    while (n != 1) {\n        if (n % 2 != 0) {\n            return false;\n        }\n        n = n / 2;\n    }\n    return true;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1665509701,
      "stdout": "",
      "stderr": "tmpcqv6uj1h: /tmp/tmpcqv6uj1h.cpp:18: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0) {\n        return false;\n    }\n    while (n != 1) {\n        if (n % 2 != 0) {\n            return false;\n        }\n        n = n / 2;\n    }\n    return true;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1665509701,
      "stdout": "",
      "stderr": "tmp4gmog9yv: /tmp/tmp4gmog9yv.cpp:18: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0) {\n        return false;\n    }\n    while (n != 1) {\n        if (n % 2 != 0) {\n            return false;\n        }\n        n = n / 2;\n    }\n    return true;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1665509701,
      "stdout": "",
      "stderr": "tmp4gmog9yv: /tmp/tmp4gmog9yv.cpp:18: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if(n==0)\n        return true;\n    if(n==1)\n        return true;\n    if(n%2==1)\n        return false;\n    return is_Sum_Of_Powers_Of_Two(n/2);\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124088,
      "stdout": "",
      "stderr": "tmpxsmtvztr: /tmp/tmpxsmtvztr.cpp:15: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if(n == 0)\n        return true;\n    if(n == 1)\n        return true;\n    if(n%2 == 1)\n        return false;\n    return is_Sum_Of_Powers_Of_Two(n/2);\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124088,
      "stdout": "",
      "stderr": "tmpbpsh61u3: /tmp/tmpbpsh61u3.cpp:15: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if(n == 0) {\n        return true;\n    }\n    if(n == 1) {\n        return true;\n    }\n    if(n == 2) {\n        return true;\n    }\n    if(n == 3) {\n        return false;\n    }\n    if(n == 4) {\n        return true;\n    }\n    if(n == 5) {\n        return false;\n    }\n    if(n == 6) {\n        return false;\n    }\n    if(n == 7) {\n        return false;\n    }\n    if(n == 8) {\n        return true;\n    }\n    if(n == 9) {\n        return false;\n    }\n    if(n == 10) {\n        return false;\n    }\n    if(n == 11) {\n        return false;\n    }\n    if(n == 12) {\n        return false;\n    }\n    if(n == 13) {\n        return false;\n    }\n    if(n == 14) {\n        return false;\n    }\n    if(n == 15) {\n        return false;\n    }\n    if(n == 16) {\n        return true;\n    }\n    if(n == 17) {\n        return false;\n    }\n    if(n == 18) {\n        return false;\n    }\n    if(n == 19) {\n        return false;\n    }\n    if(n == 20) {\n        return false;\n    }\n    if(n == 21) {\n        return false;\n    }\n    if(n == 22) {\n        return false;\n    }\n    if(n == 23) {\n        return false;\n    }\n    if(n == 24) {\n        return false;\n    }\n    if(n == 25) {\n        return false;\n    }\n    if(n == 26) {\n        return false;\n    }\n    if(n == 27) {\n        return false;\n    }\n    if(n == 28) {\n        return false;\n    }\n    if(n == 29) {\n        return false;\n    }\n   \n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1665509701,
      "stdout": "",
      "stderr": "tmpwqhcln88: /tmp/tmpwqhcln88.cpp:99: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0) {\n        return true;\n    }\n    if (n == 1) {\n        return false;\n    }\n    while (n % 2 == 0) {\n        n = n / 2;\n    }\n    if (n == 1) {\n        return true;\n    }\n    return false;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124088,
      "stdout": "",
      "stderr": "tmpo3yfo4ec: /tmp/tmpo3yfo4ec.cpp:21: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0) {\n        return true;\n    }\n    if (n == 1) {\n        return true;\n    }\n    if (n % 2 == 1) {\n        return false;\n    }\n    return is_Sum_Of_Powers_Of_Two(n/2);\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124083,
      "stdout": "",
      "stderr": "tmpmlz7_xdc: /tmp/tmpmlz7_xdc.cpp:18: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if(n == 0) {\n        return true;\n    }\n    if(n == 1) {\n        return true;\n    }\n    if(n == 2) {\n        return true;\n    }\n    if(n == 3) {\n        return false;\n    }\n    if(n == 4) {\n        return true;\n    }\n    if(n == 5) {\n        return false;\n    }\n    if(n == 6) {\n        return false;\n    }\n    if(n == 7) {\n        return false;\n    }\n    if(n == 8) {\n        return true;\n    }\n    if(n == 9) {\n        return false;\n    }\n    if(n == 10) {\n        return false;\n    }\n    if(n == 11) {\n        return false;\n    }\n    if(n == 12) {\n        return false;\n    }\n    if(n == 13) {\n        return false;\n    }\n    if(n == 14) {\n        return false;\n    }\n    if(n == 15) {\n        return false;\n    }\n    if(n == 16) {\n        return true;\n    }\n    if(n == 17) {\n        return false;\n    }\n    if(n == 18) {\n        return false;\n    }\n    if(n == 19) {\n        return false;\n    }\n    if(n == 20) {\n        return false;\n    }\n    if(n == 21) {\n        return false;\n    }\n    if(n == 22) {\n        return false;\n    }\n    if(n == 23) {\n        return false;\n    }\n    if(n == 24) {\n        return false;\n    }\n    if(n == 25) {\n        return false;\n    }\n    if(n == 26) {\n        return false;\n    }\n    if(n == 27) {\n        return false;\n    }\n    if(n == 28) {\n        return false;\n    }\n    if(n == 29) {\n        return false;\n    }\n   \n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1665509701,
      "stdout": "",
      "stderr": "tmpwqhcln88: /tmp/tmpwqhcln88.cpp:99: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0) {\n        return true;\n    }\n    if (n == 1) {\n        return true;\n    }\n    if (n % 2 != 0) {\n        return false;\n    }\n    return is_Sum_Of_Powers_Of_Two(n / 2);\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124086,
      "stdout": "",
      "stderr": "tmplsiqtamj: /tmp/tmplsiqtamj.cpp:18: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0) {\n        return true;\n    }\n    if (n == 1) {\n        return true;\n    }\n    if (n % 2 != 0) {\n        return false;\n    }\n    return is_Sum_Of_Powers_Of_Two(n / 2);\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124086,
      "stdout": "",
      "stderr": "tmplsiqtamj: /tmp/tmplsiqtamj.cpp:18: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0) {\n        return true;\n    }\n    if (n == 1) {\n        return true;\n    }\n    if (n % 2 == 1) {\n        return false;\n    }\n    return is_Sum_Of_Powers_Of_Two(n / 2);\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124083,
      "stdout": "",
      "stderr": "tmp0c68de3w: /tmp/tmp0c68de3w.cpp:18: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0)\n        return false;\n    while (n != 1) {\n        if (n % 2 != 0)\n            return false;\n        n = n / 2;\n    }\n    return true;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1665509701,
      "stdout": "",
      "stderr": "tmp_58lsete: /tmp/tmp_58lsete.cpp:16: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0)\n        return true;\n    while (n != 1) {\n        if (n % 2 != 0)\n            return false;\n        n = n / 2;\n    }\n    return true;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1665509701,
      "stdout": "",
      "stderr": "tmpvm9d_j8_: /tmp/tmpvm9d_j8_.cpp:16: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0) {\n        return true;\n    }\n    if (n == 1) {\n        return true;\n    }\n    if (n % 2 != 0) {\n        return false;\n    }\n    return is_Sum_Of_Powers_Of_Two(n / 2);\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124086,
      "stdout": "",
      "stderr": "tmplsiqtamj: /tmp/tmplsiqtamj.cpp:18: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 1) {\n        return true;\n    }\n    if (n == 0) {\n        return false;\n    }\n    long i = 0;\n    while (n) {\n        if (n & 1) {\n            if (n == 1) {\n                return true;\n            }\n            else {\n                return false;\n            }\n        }\n        n = n >> 1;\n        i++;\n    }\n    return false;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124088,
      "stdout": "",
      "stderr": "tmpwbol9xxt: /tmp/tmpwbol9xxt.cpp:28: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if(n == 0) {\n        return true;\n    }\n    if(n < 0) {\n        return false;\n    }\n    while(n != 0) {\n        if(n % 2 != 0) {\n            return false;\n        }\n        n = n / 2;\n    }\n    return true;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124088,
      "stdout": "",
      "stderr": "tmpt337y6jy: /tmp/tmpt337y6jy.cpp:21: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0) {\n        return false;\n    }\n    while (n != 1) {\n        if (n % 2 != 0) {\n            return false;\n        }\n        n = n / 2;\n    }\n    return true;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1665509701,
      "stdout": "",
      "stderr": "tmp4gmog9yv: /tmp/tmp4gmog9yv.cpp:18: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0) {\n        return true;\n    }\n    if (n == 1) {\n        return true;\n    }\n    if (n == 2) {\n        return true;\n    }\n    if (n == 3) {\n        return false;\n    }\n    if (n == 4) {\n        return true;\n    }\n    if (n == 5) {\n        return false;\n    }\n    if (n == 6) {\n        return false;\n    }\n    if (n == 7) {\n        return false;\n    }\n    if (n == 8) {\n        return true;\n    }\n    if (n == 9) {\n        return false;\n    }\n    if (n == 10) {\n        return false;\n    }\n    if (n == 11) {\n        return false;\n    }\n    if (n == 12) {\n        return false;\n    }\n    if (n == 13) {\n        return false;\n    }\n    if (n == 14) {\n        return false;\n    }\n    if (n == 15) {\n        return false;\n    }\n    if (n == 16) {\n        return true;\n    }\n    if (n == 17) {\n        return false;\n    }\n    if (n == 18) {\n        return false;\n    }\n    if (n == 19) {\n        return false;\n    }\n    if (n == 20) {\n        return false;\n    }\n    if (n == 21) {\n        return false;\n    }\n    if (n == 22) {\n        return false;\n    }\n    if (n == 23) {\n        return false;\n    }\n    if (n == 24) {\n        return false;\n    }\n    if (n == 25) {\n        return false;\n    }\n    if (n == 26) {\n        return false;\n    }\n    if (n == 27) {\n        return false;\n    }\n    if (n == 28) {\n        return false;\n    }\n    if (n == 29) {\n        return false;\n    }\n   \n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124083,
      "stdout": "",
      "stderr": "tmpomfwfifi: /tmp/tmpomfwfifi.cpp:99: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0) {\n        return false;\n    }\n    while (n != 1) {\n        if (n % 2 != 0) {\n            return false;\n        }\n        n = n / 2;\n    }\n    return true;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1665509701,
      "stdout": "",
      "stderr": "tmp4gmog9yv: /tmp/tmp4gmog9yv.cpp:18: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0) {\n        return true;\n    }\n    if (n == 1) {\n        return false;\n    }\n    while (n != 0) {\n        if (n % 2 != 0) {\n            return false;\n        }\n        n = n / 2;\n    }\n    return true;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124088,
      "stdout": "",
      "stderr": "tmpbkr3s5wf: /tmp/tmpbkr3s5wf.cpp:21: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0) {\n        return false;\n    }\n    while (n != 1) {\n        if (n % 2 != 0) {\n            return false;\n        }\n        n = n / 2;\n    }\n    return true;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1665509701,
      "stdout": "",
      "stderr": "tmp4gmog9yv: /tmp/tmp4gmog9yv.cpp:18: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0)\n        return true;\n    if (n == 1)\n        return true;\n    if (n == 2)\n        return true;\n    if (n == 3)\n        return false;\n    if (n == 4)\n        return true;\n    if (n == 5)\n        return false;\n    if (n == 6)\n        return false;\n    if (n == 7)\n        return false;\n    if (n == 8)\n        return true;\n    if (n == 9)\n        return false;\n    if (n == 10)\n        return false;\n    if (n == 11)\n        return false;\n    if (n == 12)\n        return false;\n    if (n == 13)\n        return false;\n    if (n == 14)\n        return false;\n    if (n == 15)\n        return false;\n    if (n == 16)\n        return true;\n    if (n == 17)\n        return false;\n    if (n == 18)\n        return false;\n    if (n == 19)\n        return false;\n    if (n == 20)\n        return false;\n    if (n == 21)\n        return false;\n    if (n == 22)\n        return false;\n    if (n == 23)\n        return false;\n    if (n == 24)\n        return false;\n    if (n == 25)\n        return false;\n    if (n == 26)\n        return false;\n    if (n == 27)\n        return false;\n    if (n == 28)\n        return false;\n    if (n == 29)\n        return false;\n    if (n == 30)\n        return false;\n    if (n == 31)\n        return false;\n    if (n == 32)\n        return true;\n    if (n == 33)\n        return false;\n    if (n == 34)\n        return false;\n    if (n == 35)\n        return false;\n    if (n == 36)\n        return false;\n    if (n == 37)\n        return false;\n    if (n == 38)\n        return false;\n    if (n\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124088,
      "stdout": "",
      "stderr": "/tmp/tmp5ysc67aq.cpp: In function \u2018bool is_Sum_Of_Powers_Of_Two(long int)\u2019:\n/tmp/tmp5ysc67aq.cpp:83:10: error: expected \u2018)\u2019 before \u2018}\u2019 token\n   83 |     if (n\n      |        ~ ^\n      |          )\n   84 | }\n      | ~         \n/tmp/tmp5ysc67aq.cpp:84:1: error: expected primary-expression before \u2018}\u2019 token\n   84 | }\n      | ^\n/tmp/tmp5ysc67aq.cpp:84:1: warning: control reaches end of non-void function [-Wreturn-type]\n   84 | }\n      | ^\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0)\n        return true;\n    if (n == 1)\n        return true;\n    while (n > 1) {\n        if (n % 2 != 0)\n            return false;\n        n = n / 2;\n    }\n    return true;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124089,
      "stdout": "",
      "stderr": "tmpury7rv_6: /tmp/tmpury7rv_6.cpp:18: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0) {\n        return false;\n    }\n    while (n != 1) {\n        if (n % 2 != 0) {\n            return false;\n        }\n        n = n / 2;\n    }\n    return true;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1665509701,
      "stdout": "",
      "stderr": "tmp4gmog9yv: /tmp/tmp4gmog9yv.cpp:18: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0) {\n        return true;\n    }\n    int i = 0;\n    while (n > 0) {\n        if (n % 2 == 1) {\n            if (i == 0) {\n                return false;\n            }\n            n -= pow(2, i);\n        }\n        i++;\n    }\n    return true;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124103,
      "stdout": "",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if(n==0) return true;\n    if(n==1) return true;\n    if(n%2==1) return false;\n    return is_Sum_Of_Powers_Of_Two(n/2);\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124088,
      "stdout": "",
      "stderr": "tmp6uh1z8to: /tmp/tmp6uh1z8to.cpp:12: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if(n == 0) {\n        return true;\n    }\n    if(n == 1) {\n        return true;\n    }\n    if(n == 2) {\n        return true;\n    }\n    if(n == 3) {\n        return false;\n    }\n    if(n == 4) {\n        return true;\n    }\n    if(n == 5) {\n        return false;\n    }\n    if(n == 6) {\n        return false;\n    }\n    if(n == 7) {\n        return false;\n    }\n    if(n == 8) {\n        return true;\n    }\n    if(n == 9) {\n        return false;\n    }\n    if(n == 10) {\n        return false;\n    }\n    if(n == 11) {\n        return false;\n    }\n    if(n == 12) {\n        return false;\n    }\n    if(n == 13) {\n        return false;\n    }\n    if(n == 14) {\n        return false;\n    }\n    if(n == 15) {\n        return false;\n    }\n    if(n == 16) {\n        return true;\n    }\n    if(n == 17) {\n        return false;\n    }\n    if(n == 18) {\n        return false;\n    }\n    if(n == 19) {\n        return false;\n    }\n    if(n == 20) {\n        return false;\n    }\n    if(n == 21) {\n        return false;\n    }\n    if(n == 22) {\n        return false;\n    }\n    if(n == 23) {\n        return false;\n    }\n    if(n == 24) {\n        return false;\n    }\n    if(n == 25) {\n        return false;\n    }\n    if(n == 26) {\n        return false;\n    }\n    if(n == 27) {\n        return false;\n    }\n    if(n == 28) {\n        return false;\n    }\n    if(n == 29) {\n        return false;\n    }\n   \n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1665509701,
      "stdout": "",
      "stderr": "tmpwqhcln88: /tmp/tmpwqhcln88.cpp:99: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0) {\n        return true;\n    }\n    if (n == 1) {\n        return true;\n    }\n    if (n % 2 == 1) {\n        return false;\n    }\n    return is_Sum_Of_Powers_Of_Two(n / 2);\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124083,
      "stdout": "",
      "stderr": "tmp0c68de3w: /tmp/tmp0c68de3w.cpp:18: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0) {\n        return true;\n    }\n    if (n == 1) {\n        return true;\n    }\n    if (n == 2) {\n        return true;\n    }\n    if (n == 3) {\n        return false;\n    }\n    if (n == 4) {\n        return true;\n    }\n    if (n == 5) {\n        return false;\n    }\n    if (n == 6) {\n        return false;\n    }\n    if (n == 7) {\n        return false;\n    }\n    if (n == 8) {\n        return true;\n    }\n    if (n == 9) {\n        return false;\n    }\n    if (n == 10) {\n        return false;\n    }\n    if (n == 11) {\n        return false;\n    }\n    if (n == 12) {\n        return false;\n    }\n    if (n == 13) {\n        return false;\n    }\n    if (n == 14) {\n        return false;\n    }\n    if (n == 15) {\n        return false;\n    }\n    if (n == 16) {\n        return true;\n    }\n    if (n == 17) {\n        return false;\n    }\n    if (n == 18) {\n        return false;\n    }\n    if (n == 19) {\n        return false;\n    }\n    if (n == 20) {\n        return false;\n    }\n    if (n == 21) {\n        return false;\n    }\n    if (n == 22) {\n        return false;\n    }\n    if (n == 23) {\n        return false;\n    }\n    if (n == 24) {\n        return false;\n    }\n    if (n == 25) {\n        return false;\n    }\n    if (n == 26) {\n        return false;\n    }\n    if (n == 27) {\n        return false;\n    }\n    if (n == 28) {\n        return false;\n    }\n    if (n == 29) {\n        return false;\n    }\n   \n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124083,
      "stdout": "",
      "stderr": "tmpomfwfifi: /tmp/tmpomfwfifi.cpp:99: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0) {\n        return false;\n    }\n    while (n != 1) {\n        if (n % 2 != 0) {\n            return false;\n        }\n        n = n / 2;\n    }\n    return true;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1665509701,
      "stdout": "",
      "stderr": "tmp4gmog9yv: /tmp/tmp4gmog9yv.cpp:18: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0) {\n        return true;\n    }\n    int i = 0;\n    while (n > 0) {\n        if (n % 2 == 1) {\n            if (i == 0) {\n                return false;\n            }\n            n = n - pow(2, i);\n        }\n        i++;\n        n = n / 2;\n    }\n    return true;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124085,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0) {\n        return true;\n    }\n    if (n == 1) {\n        return true;\n    }\n    if (n % 2 != 0) {\n        return false;\n    }\n    return is_Sum_Of_Powers_Of_Two(n / 2);\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124086,
      "stdout": "",
      "stderr": "tmplsiqtamj: /tmp/tmplsiqtamj.cpp:18: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if(n == 0) {\n        return true;\n    }\n    if(n == 1) {\n        return false;\n    }\n    while(n > 0) {\n        if(n % 2 == 1) {\n            return false;\n        }\n        n /= 2;\n    }\n    return true;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124088,
      "stdout": "",
      "stderr": "tmp_jlu3wzl: /tmp/tmp_jlu3wzl.cpp:21: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0) {\n        return true;\n    }\n    if (n == 1) {\n        return true;\n    }\n    if (n % 2 == 1) {\n        return false;\n    }\n    return is_Sum_Of_Powers_Of_Two(n / 2);\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124083,
      "stdout": "",
      "stderr": "tmp0c68de3w: /tmp/tmp0c68de3w.cpp:18: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0) {\n        return true;\n    }\n    if (n == 1) {\n        return false;\n    }\n    long p = 1;\n    while (p < n) {\n        p = p * 2;\n    }\n    if (p == n) {\n        return true;\n    }\n    return is_Sum_Of_Powers_Of_Two(n - p / 2);\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124088,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if(n == 0)\n        return true;\n    if(n == 1)\n        return true;\n    if(n%2 == 1)\n        return false;\n    return is_Sum_Of_Powers_Of_Two(n/2);\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124088,
      "stdout": "",
      "stderr": "tmpbpsh61u3: /tmp/tmpbpsh61u3.cpp:15: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0)\n        return false;\n    while (n != 1) {\n        if (n % 2 != 0)\n            return false;\n        n = n / 2;\n    }\n    return true;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1665509701,
      "stdout": "",
      "stderr": "tmp_58lsete: /tmp/tmp_58lsete.cpp:16: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0) {\n        return true;\n    }\n    while (n > 0) {\n        if (n % 2 == 0) {\n            n = n / 2;\n        } else {\n            n = n - 1;\n        }\n    }\n    if (n == 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124088,
      "stdout": "",
      "stderr": "tmpkgzs4j0_: /tmp/tmpkgzs4j0_.cpp:24: int main(): Assertion `candidate((7)) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0) {\n        return true;\n    }\n    if (n == 1) {\n        return true;\n    }\n    if (n == 2) {\n        return true;\n    }\n    if (n == 3) {\n        return false;\n    }\n    if (n == 4) {\n        return true;\n    }\n    if (n == 5) {\n        return false;\n    }\n    if (n == 6) {\n        return false;\n    }\n    if (n == 7) {\n        return false;\n    }\n    if (n == 8) {\n        return true;\n    }\n    if (n == 9) {\n        return false;\n    }\n    if (n == 10) {\n        return false;\n    }\n    if (n == 11) {\n        return false;\n    }\n    if (n == 12) {\n        return false;\n    }\n    if (n == 13) {\n        return false;\n    }\n    if (n == 14) {\n        return false;\n    }\n    if (n == 15) {\n        return false;\n    }\n    if (n == 16) {\n        return true;\n    }\n    if (n == 17) {\n        return false;\n    }\n    if (n == 18) {\n        return false;\n    }\n    if (n == 19) {\n        return false;\n    }\n    if (n == 20) {\n        return false;\n    }\n    if (n == 21) {\n        return false;\n    }\n    if (n == 22) {\n        return false;\n    }\n    if (n == 23) {\n        return false;\n    }\n    if (n == 24) {\n        return false;\n    }\n    if (n == 25) {\n        return false;\n    }\n    if (n == 26) {\n        return false;\n    }\n    if (n == 27) {\n        return false;\n    }\n    if (n == 28) {\n        return false;\n    }\n    if (n == 29) {\n        return false;\n    }\n   \n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124083,
      "stdout": "",
      "stderr": "tmpomfwfifi: /tmp/tmpomfwfifi.cpp:99: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0) {\n        return true;\n    }\n    if (n == 1) {\n        return false;\n    }\n    while (n > 0) {\n        if (n % 2 != 0) {\n            return false;\n        }\n        n = n / 2;\n    }\n    return true;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124088,
      "stdout": "",
      "stderr": "tmpg4g2u_hv: /tmp/tmpg4g2u_hv.cpp:21: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0) {\n        return true;\n    }\n    if (n == 1) {\n        return true;\n    }\n    if (n % 2 == 1) {\n        return false;\n    }\n    return is_Sum_Of_Powers_Of_Two(n / 2);\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124083,
      "stdout": "",
      "stderr": "tmp0c68de3w: /tmp/tmp0c68de3w.cpp:18: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0) {\n        return false;\n    }\n    while (n != 1) {\n        if (n % 2 != 0) {\n            return false;\n        }\n        n = n / 2;\n    }\n    return true;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1665509701,
      "stdout": "",
      "stderr": "tmp4gmog9yv: /tmp/tmp4gmog9yv.cpp:18: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0) {\n        return true;\n    }\n    if (n == 1) {\n        return true;\n    }\n    if (n == 2) {\n        return true;\n    }\n    if (n == 3) {\n        return false;\n    }\n    if (n == 4) {\n        return true;\n    }\n    if (n == 5) {\n        return false;\n    }\n    if (n == 6) {\n        return false;\n    }\n    if (n == 7) {\n        return false;\n    }\n    if (n == 8) {\n        return true;\n    }\n    if (n == 9) {\n        return false;\n    }\n    if (n == 10) {\n        return false;\n    }\n    if (n == 11) {\n        return false;\n    }\n    if (n == 12) {\n        return false;\n    }\n    if (n == 13) {\n        return false;\n    }\n    if (n == 14) {\n        return false;\n    }\n    if (n == 15) {\n        return false;\n    }\n    if (n == 16) {\n        return true;\n    }\n    if (n == 17) {\n        return false;\n    }\n    if (n == 18) {\n        return false;\n    }\n    if (n == 19) {\n        return false;\n    }\n    if (n == 20) {\n        return false;\n    }\n    if (n == 21) {\n        return false;\n    }\n    if (n == 22) {\n        return false;\n    }\n    if (n == 23) {\n        return false;\n    }\n    if (n == 24) {\n        return false;\n    }\n    if (n == 25) {\n        return false;\n    }\n    if (n == 26) {\n        return false;\n    }\n    if (n == 27) {\n        return false;\n    }\n    if (n == 28) {\n        return false;\n    }\n    if (n == 29) {\n        return false;\n    }\n   \n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124083,
      "stdout": "",
      "stderr": "tmpomfwfifi: /tmp/tmpomfwfifi.cpp:99: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0)\n        return true;\n    if (n == 1)\n        return true;\n    if (n == 2)\n        return true;\n    if (n == 3)\n        return false;\n    if (n == 4)\n        return true;\n    if (n == 5)\n        return false;\n    if (n == 6)\n        return false;\n    if (n == 7)\n        return false;\n    if (n == 8)\n        return true;\n    if (n == 9)\n        return false;\n    if (n == 10)\n        return false;\n    if (n == 11)\n        return false;\n    if (n == 12)\n        return false;\n    if (n == 13)\n        return false;\n    if (n == 14)\n        return false;\n    if (n == 15)\n        return false;\n    if (n == 16)\n        return true;\n    if (n == 17)\n        return false;\n    if (n == 18)\n        return false;\n    if (n == 19)\n        return false;\n    if (n == 20)\n        return false;\n    if (n == 21)\n        return false;\n    if (n == 22)\n        return false;\n    if (n == 23)\n        return false;\n    if (n == 24)\n        return false;\n    if (n == 25)\n        return false;\n    if (n == 26)\n        return false;\n    if (n == 27)\n        return false;\n    if (n == 28)\n        return false;\n    if (n == 29)\n        return false;\n    if (n == 30)\n        return false;\n    if (n == 31)\n        return false;\n    if (n == 32)\n        return true;\n    if (n == 33)\n        return false;\n    if (n == 34)\n        return false;\n    if (n == 35)\n        return false;\n    if (n == 36)\n        return false;\n    if (n == 37)\n        return false;\n    if (n == 38)\n        return false;\n    if (n\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124088,
      "stdout": "",
      "stderr": "/tmp/tmp5ysc67aq.cpp: In function \u2018bool is_Sum_Of_Powers_Of_Two(long int)\u2019:\n/tmp/tmp5ysc67aq.cpp:83:10: error: expected \u2018)\u2019 before \u2018}\u2019 token\n   83 |     if (n\n      |        ~ ^\n      |          )\n   84 | }\n      | ~         \n/tmp/tmp5ysc67aq.cpp:84:1: error: expected primary-expression before \u2018}\u2019 token\n   84 | }\n      | ^\n/tmp/tmp5ysc67aq.cpp:84:1: warning: control reaches end of non-void function [-Wreturn-type]\n   84 | }\n      | ^\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0) {\n        return true;\n    }\n    if (n == 1) {\n        return true;\n    }\n    while (n > 0) {\n        if (n % 2 == 0) {\n            n = n / 2;\n        }\n        else {\n            n = n - 1;\n        }\n    }\n    if (n == 0) {\n        return true;\n    }\n    return false;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124088,
      "stdout": "",
      "stderr": "tmp3onkfg52: /tmp/tmp3onkfg52.cpp:27: int main(): Assertion `candidate((7)) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if(n == 0) {\n        return true;\n    }\n    if(n == 1) {\n        return false;\n    }\n    while(n != 0) {\n        if(n % 2 == 1) {\n            return false;\n        }\n        n /= 2;\n    }\n    return true;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124088,
      "stdout": "",
      "stderr": "tmpap8mt0ja: /tmp/tmpap8mt0ja.cpp:21: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 1) {\n        return true;\n    }\n    if (n == 0) {\n        return false;\n    }\n    if (n % 2 == 1) {\n        return false;\n    }\n    return is_Sum_Of_Powers_Of_Two(n/2);\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124087,
      "stdout": "",
      "stderr": "tmpgz0213fq: /tmp/tmpgz0213fq.cpp:18: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0) {\n        return false;\n    }\n    while (n != 1) {\n        if (n % 2 != 0) {\n            return false;\n        }\n        n = n / 2;\n    }\n    return true;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1665509701,
      "stdout": "",
      "stderr": "tmp4gmog9yv: /tmp/tmp4gmog9yv.cpp:18: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0) {\n        return false;\n    }\n    while (n != 1) {\n        if (n % 2 != 0) {\n            return false;\n        }\n        n = n / 2;\n    }\n    return true;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1665509701,
      "stdout": "",
      "stderr": "tmp4gmog9yv: /tmp/tmp4gmog9yv.cpp:18: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if(n == 0)\n        return true;\n    if(n == 1)\n        return true;\n    if(n == 2)\n        return true;\n    if(n == 3)\n        return false;\n    if(n == 4)\n        return true;\n    if(n == 5)\n        return false;\n    if(n == 6)\n        return false;\n    if(n == 7)\n        return false;\n    if(n == 8)\n        return true;\n    if(n == 9)\n        return false;\n    if(n == 10)\n        return false;\n    if(n == 11)\n        return false;\n    if(n == 12)\n        return false;\n    if(n == 13)\n        return false;\n    if(n == 14)\n        return false;\n    if(n == 15)\n        return false;\n    if(n == 16)\n        return true;\n    if(n == 17)\n        return false;\n    if(n == 18)\n        return false;\n    if(n == 19)\n        return false;\n    if(n == 20)\n        return false;\n    if(n == 21)\n        return false;\n    if(n == 22)\n        return false;\n    if(n == 23)\n        return false;\n    if(n == 24)\n        return false;\n    if(n == 25)\n        return false;\n    if(n == 26)\n        return false;\n    if(n == 27)\n        return false;\n    if(n == 28)\n        return false;\n    if(n == 29)\n        return false;\n    if(n == 30)\n        return false;\n    if(n == 31)\n        return false;\n    if(n == 32)\n        return true;\n    if(n == 33)\n        return false;\n    if(n == 34)\n        return false;\n    if(n == 35)\n        return false;\n    if(n == 36)\n        return false;\n    if(n == 37)\n        return false;\n    if(n == 38)\n        return false;\n    if(n\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124082,
      "stdout": "",
      "stderr": "/tmp/tmp2o778g94.cpp: In function \u2018bool is_Sum_Of_Powers_Of_Two(long int)\u2019:\n/tmp/tmp2o778g94.cpp:83:9: error: expected \u2018)\u2019 before \u2018}\u2019 token\n   83 |     if(n\n      |       ~ ^\n      |         )\n   84 | }\n      | ~        \n/tmp/tmp2o778g94.cpp:84:1: error: expected primary-expression before \u2018}\u2019 token\n   84 | }\n      | ^\n/tmp/tmp2o778g94.cpp:84:1: warning: control reaches end of non-void function [-Wreturn-type]\n   84 | }\n      | ^\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0) {\n        return true;\n    }\n    while (n != 1) {\n        if (n % 2 != 0) {\n            return false;\n        }\n        n /= 2;\n    }\n    return true;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124083,
      "stdout": "",
      "stderr": "tmp6l7xovjl: /tmp/tmp6l7xovjl.cpp:18: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    }
  ]
}
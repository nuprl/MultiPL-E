{
  "name": "mbpp_65_recursive_list_sum",
  "language": "cpp",
  "prompt": "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_long_std_vector_long_{\n    long f0;\n    std::vector<long> f1;    Union_long_std_vector_long_(long _f0) : f0(_f0) {}\n    Union_long_std_vector_long_(std::vector<long> _f1) : f1(_f1) {}\n    ~Union_long_std_vector_long_() {}\n    bool operator==(long f) {\n        return f0 == f ;\n    }    bool operator==(std::vector<long> f) {\n        return f1 == f ;\n    }\n};\n// Write a function to flatten a list and sum all of its elements.\nlong recursive_list_sum(std::vector<Union_long_std_vector_long_> data_list) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_65_recursive_list_sum.py",
  "prompt_terminology": "verbatim",
  "tests": "}\nint main() {\n    auto candidate = recursive_list_sum;\n    assert(candidate((std::vector<Union_long_std_vector_long_>({1, 2, std::vector<long>({(long)3, (long)4}), std::vector<long>({(long)5, (long)6})}))) == (21));\n    assert(candidate((std::vector<Union_long_std_vector_long_>({7, 10, std::vector<long>({(long)15, (long)14}), std::vector<long>({(long)19, (long)41})}))) == (106));\n    assert(candidate((std::vector<Union_long_std_vector_long_>({10, 20, std::vector<long>({(long)30, (long)40}), std::vector<long>({(long)50, (long)60})}))) == (210));\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    long result = 0;\n    for(int i = 0; i < data_list.size(); i++) {\n        if(data_list[i].f0 == data_list[i].f1) {\n            result += data_list[i].f0;\n        } else {\n            result += recursive_list_sum(data_list[i].f1);\n        }\n    }\n    return result;",
    "    long result = 0;\n    for (auto x : data_list) {\n        if (x == std::vector<long>()) {\n            continue;\n        }\n        if (x == long()) {\n            result += x;\n        }\n        if (x != long() && x != std::vector<long>()) {\n            result += recursive_list_sum(x);\n        }\n    }\n    return result;",
    "    long result = 0;\n    for(int i = 0; i < data_list.size(); i++) {\n        if(data_list[i] == data_list[i].f0) {\n            result += data_list[i].f0;\n        } else {\n            result += recursive_list_sum(data_list[i].f1);\n        }\n    }\n    return result;",
    "    long result = 0;\n    for (auto &data : data_list) {\n        if (data == std::vector<long>()) {\n            continue;\n        } else if (data == std::vector<long>()) {\n            continue;\n        } else if (data == std::vector<long>()) {\n            continue;\n        } else if (data == std::vector<long>()) {\n            continue;\n        } else if (data == std::vector<long>()) {\n            continue;\n        } else if (data == std::vector<long>()) {\n            continue;\n        } else if (data == std::vector<long>()) {\n            continue;\n        } else if (data == std::vector<long>()) {\n            continue;\n        } else if (data == std::vector<long>()) {\n            continue;\n        } else if (data == std::vector<long>()) {\n            continue;\n        } else if (data == std::vector<long>()) {\n            continue;\n        } else if (data == std::vector<long>()) {\n            continue;\n        } else if (data == std::vector<long>()) {\n            continue;\n        } else if (data == std::vector<long>()) {\n            continue;\n        } else if (data == std::vector<long>()) {\n            continue;\n        } else if (data == std::vector<long>()) {\n            continue;\n        } else if (data == std::vector<long>()) {\n            continue;\n        } else if (data == std::vector<long>()) {\n            continue;\n        } else if (data == std::vector<long>()) {\n            continue;\n        } else if (data == std::vector<long>()) {\n            continue;\n        } else if (data == std::vector<long>()) {\n            continue;\n        } else if (data == std::vector<long>()) {\n            continue;\n        } else if (data == std::vector<long>()) {\n            continue;\n        } else if (data == std::vector<long>()) {\n            continue;\n        } else if (data == std::vector<long>",
    "    long result = 0;\n    for (int i = 0; i < data_list.size(); i++) {\n        if (data_list[i] == std::vector<long>()) {\n            result += recursive_list_sum(data_list[i].f1);\n        } else {\n            result += data_list[i].f0;\n        }\n    }\n    return result;",
    "    long result = 0;\n    for(auto data : data_list) {\n        if(data == 0) {\n            result += data.f0;\n        } else {\n            result += recursive_list_sum(data.f1);\n        }\n    }\n    return result;",
    "    long result = 0;\n    for (auto data : data_list) {\n        if (data == data.f0) {\n            result += data.f0;\n        } else if (data == data.f1) {\n            result += recursive_list_sum(data.f1);\n        }\n    }\n    return result;",
    "    long sum = 0;\n    for (auto data : data_list) {\n        if (data == std::vector<long>()) {\n            continue;\n        }\n        if (data == std::vector<long>()) {\n            continue;\n        }\n        if (data == std::vector<long>()) {\n            continue;\n        }\n        if (data == std::vector<long>()) {\n            continue;\n        }\n        if (data == std::vector<long>()) {\n            continue;\n        }\n        if (data == std::vector<long>()) {\n            continue;\n        }\n        if (data == std::vector<long>()) {\n            continue;\n        }\n        if (data == std::vector<long>()) {\n            continue;\n        }\n        if (data == std::vector<long>()) {\n            continue;\n        }\n        if (data == std::vector<long>()) {\n            continue;\n        }\n        if (data == std::vector<long>()) {\n            continue;\n        }\n        if (data == std::vector<long>()) {\n            continue;\n        }\n        if (data == std::vector<long>()) {\n            continue;\n        }\n        if (data == std::vector<long>()) {\n            continue;\n        }\n        if (data == std::vector<long>()) {\n            continue;\n        }\n        if (data == std::vector<long>()) {\n            continue;\n        }\n        if (data == std::vector<long>()) {\n            continue;\n        }\n        if (data == std::vector<long>()) {\n            continue;\n        }\n        if (data == std::vector<long>()) {\n            continue;\n        }\n        if (data == std::vector<long>()) {\n            continue;\n        }\n        if (data == std::vector<long>()) {\n            continue;\n        }\n        if (data == std::vector<long>()) {\n            continue;\n        }\n        if (data == std::vector<long>()) {\n            continue;\n        }\n        if (data == std::vector<",
    "    long result = 0;\n    for (auto data : data_list) {\n        if (data == std::vector<long>()) {\n            result += 0;\n        } else if (data == std::vector<long>()) {\n            result += 0;\n        } else if (data == std::vector<long>()) {\n            result += 0;\n        } else if (data == std::vector<long>()) {\n            result += 0;\n        } else if (data == std::vector<long>()) {\n            result += 0;\n        } else if (data == std::vector<long>()) {\n            result += 0;\n        } else if (data == std::vector<long>()) {\n            result += 0;\n        } else if (data == std::vector<long>()) {\n            result += 0;\n        } else if (data == std::vector<long>()) {\n            result += 0;\n        } else if (data == std::vector<long>()) {\n            result += 0;\n        } else if (data == std::vector<long>()) {\n            result += 0;\n        } else if (data == std::vector<long>()) {\n            result += 0;\n        } else if (data == std::vector<long>()) {\n            result += 0;\n        } else if (data == std::vector<long>()) {\n            result += 0;\n        } else if (data == std::vector<long>()) {\n            result += 0;\n        } else if (data == std::vector<long>()) {\n            result += 0;\n        } else if (data == std::vector<long>()) {\n            result += 0;\n        } else if (data == std::vector<long>()) {\n            result += 0;\n        } else if (data == std::vector<long>()) {\n            result += 0;\n        } else if (data == std::vector<long>()) {\n            result += 0;\n        } else if (data == std::vector<long>()) {\n            result += 0;\n        } else if (data == std::vector<long>()) {\n            result += 0;\n        } else if (data == std::vector",
    "    long result = 0;\n    for (auto x : data_list) {\n        if (x == std::vector<long>()) {\n            result += 0;\n        } else if (x == std::vector<long>()) {\n            result += 0;\n        } else if (x == std::vector<long>()) {\n            result += 0;\n        } else if (x == std::vector<long>()) {\n            result += 0;\n        } else if (x == std::vector<long>()) {\n            result += 0;\n        } else if (x == std::vector<long>()) {\n            result += 0;\n        } else if (x == std::vector<long>()) {\n            result += 0;\n        } else if (x == std::vector<long>()) {\n            result += 0;\n        } else if (x == std::vector<long>()) {\n            result += 0;\n        } else if (x == std::vector<long>()) {\n            result += 0;\n        } else if (x == std::vector<long>()) {\n            result += 0;\n        } else if (x == std::vector<long>()) {\n            result += 0;\n        } else if (x == std::vector<long>()) {\n            result += 0;\n        } else if (x == std::vector<long>()) {\n            result += 0;\n        } else if (x == std::vector<long>()) {\n            result += 0;\n        } else if (x == std::vector<long>()) {\n            result += 0;\n        } else if (x == std::vector<long>()) {\n            result += 0;\n        } else if (x == std::vector<long>()) {\n            result += 0;\n        } else if (x == std::vector<long>()) {\n            result += 0;\n        } else if (x == std::vector<long>()) {\n            result += 0;\n        } else if (x == std::vector<long>()) {\n            result += 0;\n        } else if (x == std::vector<long>()) {\n            result += 0;\n        } else if (x == std::vector",
    "    long result = 0;\n    for (auto item : data_list) {\n        if (item == std::vector<long>()) {\n            continue;\n        } else if (item == long()) {\n            result += item;\n        } else {\n            result += recursive_list_sum(item);\n        }\n    }\n    return result;",
    "    long result = 0;\n    for (auto x : data_list) {\n        if (x == std::vector<long>()) {\n            result += 0;\n        } else if (x == std::vector<long>()) {\n            result += 0;\n        } else if (x == std::vector<long>()) {\n            result += 0;\n        } else if (x == std::vector<long>()) {\n            result += 0;\n        } else if (x == std::vector<long>()) {\n            result += 0;\n        } else if (x == std::vector<long>()) {\n            result += 0;\n        } else if (x == std::vector<long>()) {\n            result += 0;\n        } else if (x == std::vector<long>()) {\n            result += 0;\n        } else if (x == std::vector<long>()) {\n            result += 0;\n        } else if (x == std::vector<long>()) {\n            result += 0;\n        } else if (x == std::vector<long>()) {\n            result += 0;\n        } else if (x == std::vector<long>()) {\n            result += 0;\n        } else if (x == std::vector<long>()) {\n            result += 0;\n        } else if (x == std::vector<long>()) {\n            result += 0;\n        } else if (x == std::vector<long>()) {\n            result += 0;\n        } else if (x == std::vector<long>()) {\n            result += 0;\n        } else if (x == std::vector<long>()) {\n            result += 0;\n        } else if (x == std::vector<long>()) {\n            result += 0;\n        } else if (x == std::vector<long>()) {\n            result += 0;\n        } else if (x == std::vector<long>()) {\n            result += 0;\n        } else if (x == std::vector<long>()) {\n            result += 0;\n        } else if (x == std::vector<long>()) {\n            result += 0;\n        } else if (x == std::vector",
    "    long result = 0;\n    for (int i = 0; i < data_list.size(); i++) {\n        if (data_list[i].f1.size() == 0) {\n            result += data_list[i].f0;\n        } else {\n            result += recursive_list_sum(data_list[i].f1);\n        }\n    }\n    return result;",
    "    long result = 0;\n    for (auto data : data_list) {\n        if (data == std::vector<long>()) {\n            result += 0;\n        } else if (data == std::vector<long>()) {\n            result += 0;\n        } else if (data == std::vector<long>()) {\n            result += 0;\n        } else if (data == std::vector<long>()) {\n            result += 0;\n        } else if (data == std::vector<long>()) {\n            result += 0;\n        } else if (data == std::vector<long>()) {\n            result += 0;\n        } else if (data == std::vector<long>()) {\n            result += 0;\n        } else if (data == std::vector<long>()) {\n            result += 0;\n        } else if (data == std::vector<long>()) {\n            result += 0;\n        } else if (data == std::vector<long>()) {\n            result += 0;\n        } else if (data == std::vector<long>()) {\n            result += 0;\n        } else if (data == std::vector<long>()) {\n            result += 0;\n        } else if (data == std::vector<long>()) {\n            result += 0;\n        } else if (data == std::vector<long>()) {\n            result += 0;\n        } else if (data == std::vector<long>()) {\n            result += 0;\n        } else if (data == std::vector<long>()) {\n            result += 0;\n        } else if (data == std::vector<long>()) {\n            result += 0;\n        } else if (data == std::vector<long>()) {\n            result += 0;\n        } else if (data == std::vector<long>()) {\n            result += 0;\n        } else if (data == std::vector<long>()) {\n            result += 0;\n        } else if (data == std::vector<long>()) {\n            result += 0;\n        } else if (data == std::vector<long>()) {\n            result += 0;\n        } else if (data == std::vector",
    "    long result = 0;\n    for (int i = 0; i < data_list.size(); i++) {\n        if (data_list[i].f0 == data_list[i].f1) {\n            result += recursive_list_sum(data_list[i].f1);\n        } else {\n            result += data_list[i].f0;\n        }\n    }\n    return result;",
    "    long result = 0;\n    for (auto &data : data_list) {\n        if (data == std::vector<long>()) {\n            result += 0;\n        } else if (data == std::vector<long>()) {\n            result += 0;\n        } else if (data == std::vector<long>()) {\n            result += 0;\n        } else if (data == std::vector<long>()) {\n            result += 0;\n        } else if (data == std::vector<long>()) {\n            result += 0;\n        } else if (data == std::vector<long>()) {\n            result += 0;\n        } else if (data == std::vector<long>()) {\n            result += 0;\n        } else if (data == std::vector<long>()) {\n            result += 0;\n        } else if (data == std::vector<long>()) {\n            result += 0;\n        } else if (data == std::vector<long>()) {\n            result += 0;\n        } else if (data == std::vector<long>()) {\n            result += 0;\n        } else if (data == std::vector<long>()) {\n            result += 0;\n        } else if (data == std::vector<long>()) {\n            result += 0;\n        } else if (data == std::vector<long>()) {\n            result += 0;\n        } else if (data == std::vector<long>()) {\n            result += 0;\n        } else if (data == std::vector<long>()) {\n            result += 0;\n        } else if (data == std::vector<long>()) {\n            result += 0;\n        } else if (data == std::vector<long>()) {\n            result += 0;\n        } else if (data == std::vector<long>()) {\n            result += 0;\n        } else if (data == std::vector<long>()) {\n            result += 0;\n        } else if (data == std::vector<long>()) {\n            result += 0;\n        } else if (data == std::vector<long>()) {\n            result += 0;\n        } else if (data == std::",
    "    long result = 0;\n    for (auto data : data_list) {\n        if (data == std::vector<long>()) {\n            result += 0;\n        } else if (data == std::vector<long>()) {\n            result += 0;\n        } else if (data == std::vector<long>()) {\n            result += 0;\n        } else if (data == std::vector<long>()) {\n            result += 0;\n        } else if (data == std::vector<long>()) {\n            result += 0;\n        } else if (data == std::vector<long>()) {\n            result += 0;\n        } else if (data == std::vector<long>()) {\n            result += 0;\n        } else if (data == std::vector<long>()) {\n            result += 0;\n        } else if (data == std::vector<long>()) {\n            result += 0;\n        } else if (data == std::vector<long>()) {\n            result += 0;\n        } else if (data == std::vector<long>()) {\n            result += 0;\n        } else if (data == std::vector<long>()) {\n            result += 0;\n        } else if (data == std::vector<long>()) {\n            result += 0;\n        } else if (data == std::vector<long>()) {\n            result += 0;\n        } else if (data == std::vector<long>()) {\n            result += 0;\n        } else if (data == std::vector<long>()) {\n            result += 0;\n        } else if (data == std::vector<long>()) {\n            result += 0;\n        } else if (data == std::vector<long>()) {\n            result += 0;\n        } else if (data == std::vector<long>()) {\n            result += 0;\n        } else if (data == std::vector<long>()) {\n            result += 0;\n        } else if (data == std::vector<long>()) {\n            result += 0;\n        } else if (data == std::vector<long>()) {\n            result += 0;\n        } else if (data == std::vector",
    "    long result = 0;\n    for (auto data : data_list) {\n        if (data == data.f0) {\n            result += data.f0;\n        } else {\n            result += recursive_list_sum(data.f1);\n        }\n    }\n    return result;",
    "    long result = 0;\n    for (auto &x : data_list) {\n        if (x == (std::vector<long>){}) {\n            result += 0;\n        } else if (x == (std::vector<long>){}) {\n            result += 0;\n        } else if (x == (std::vector<long>){}) {\n            result += 0;\n        } else if (x == (std::vector<long>){}) {\n            result += 0;\n        } else if (x == (std::vector<long>){}) {\n            result += 0;\n        } else if (x == (std::vector<long>){}) {\n            result += 0;\n        } else if (x == (std::vector<long>){}) {\n            result += 0;\n        } else if (x == (std::vector<long>){}) {\n            result += 0;\n        } else if (x == (std::vector<long>){}) {\n            result += 0;\n        } else if (x == (std::vector<long>){}) {\n            result += 0;\n        } else if (x == (std::vector<long>){}) {\n            result += 0;\n        } else if (x == (std::vector<long>){}) {\n            result += 0;\n        } else if (x == (std::vector<long>){}) {\n            result += 0;\n        } else if (x == (std::vector<long>){}) {\n            result += 0;\n        } else if (x == (std::vector<long>){}) {\n            result += 0;\n        } else if (x == (std::vector<long>){}) {\n            result += 0;\n        } else if (x == (std::vector<long>){}) {\n            result += 0;\n        } else if (x == (std::vector<long>){}) {\n            result += 0;\n        } else if (x == (std::vector<long>){}) {\n            result += 0;\n        } else if (x == (std::vector<long>){}) {\n            result += 0;\n        } else if (x == (std::vector<long",
    "    long result = 0;\n    for (auto &data : data_list) {\n        if (data == data.f0) {\n            result += data.f0;\n        } else if (data == data.f1) {\n            result += recursive_list_sum(data.f1);\n        }\n    }\n    return result;"
  ]
}
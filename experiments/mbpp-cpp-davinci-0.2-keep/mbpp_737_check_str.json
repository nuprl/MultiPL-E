{
  "name": "mbpp_737_check_str",
  "language": "cpp",
  "prompt": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check whether the given string is starting with a vowel or not using regex.\nbool check_str(std::string string) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_737_check_str.py",
  "prompt_terminology": "verbatim",
  "tests": "}\nint main() {\n    auto candidate = check_str;\n    assert(candidate((\"annie\")) == (true));\n    assert(candidate((\"dawood\")) == (false));\n    assert(candidate((\"Else\")) == (true));\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "\tstd::regex regex(\"^[aeiouAEIOU]\");\n\treturn std::regex_match(string, regex);",
    "    std::regex pattern(\"^[aeiouAEIOU]\");\n    return std::regex_match(string, pattern);",
    "    std::regex pattern(\"^[aeiouAEIOU]\");\n    return std::regex_match(string, pattern);",
    "\tstd::regex pattern(\"^[aeiouAEIOU]\");\n\treturn std::regex_match(string, pattern);",
    "  std::regex pattern(\"^[aeiouAEIOU].*\");\n  return std::regex_match(string, pattern);",
    "  std::regex pattern(\"^[aeiouAEIOU]\");\n  return std::regex_match(string, pattern);",
    "    std::regex pattern(\"^[aeiouAEIOU].*\");\n    return std::regex_match(string, pattern);",
    "    std::regex pattern(\"^[aeiouAEIOU].*\");\n    return std::regex_match(string, pattern);",
    "    std::regex pattern(\"^[aeiouAEIOU].*\");\n    return std::regex_match(string, pattern);",
    "    std::regex pattern(\"^[aeiouAEIOU]\");\n    return std::regex_match(string, pattern);",
    "    std::regex pattern(\"^[aeiouAEIOU]\");\n    return std::regex_search(string, pattern);",
    "    std::regex pattern(\"^[aeiouAEIOU]\");\n    if (std::regex_match(string, pattern)) {\n        return true;\n    }\n    return false;",
    "    std::regex pattern(\"^[aeiouAEIOU]\");\n    if (std::regex_match(string, pattern)) {\n        return true;\n    }\n    return false;",
    "    std::regex pattern(\"^[aeiouAEIOU]\");\n    if(std::regex_match(string, pattern)) {\n        return true;\n    }\n    return false;",
    "    std::regex pattern(\"^[aeiouAEIOU]\");\n    return std::regex_match(string, pattern);",
    "    std::regex pattern(\"^[aeiouAEIOU]\");\n    return std::regex_match(string, pattern);",
    "    std::regex pattern(\"^[aeiouAEIOU]\");\n    return std::regex_match(string, pattern);",
    "    std::regex pattern(\"^[aeiouAEIOU].*\");\n    return std::regex_match(string, pattern);",
    "    std::regex pattern(\"^[aeiouAEIOU].*\");\n    return std::regex_match(string, pattern);",
    "    std::regex pattern(\"^[aeiou].*\");\n    return std::regex_match(string, pattern);",
    "    std::regex pattern(\"^[aeiouAEIOU].*\");\n    return std::regex_match(string, pattern);",
    "    std::regex pattern(\"^[aeiouAEIOU].*\");\n    if (std::regex_match(string, pattern))\n        return true;\n    else\n        return false;",
    "    regex pattern(\"^[aeiouAEIOU].*\");\n    if (regex_match(string, pattern)) {\n        return true;\n    }\n    return false;",
    "\tstd::regex pattern(\"^[aeiouAEIOU].*\");\n\treturn std::regex_match(string, pattern);",
    "    std::regex r(\"^[aeiouAEIOU].*\");\n    return std::regex_match(string, r);",
    "    std::regex pattern(\"^[aeiouAEIOU].*\");\n    return std::regex_match(string, pattern);",
    "    std::regex pattern(\"^[aeiouAEIOU].*\");\n    return std::regex_match(string, pattern);",
    "    std::regex pattern(\"^[aeiou]\");\n    return std::regex_match(string, pattern);",
    "    regex pattern(\"^[aeiouAEIOU]\");\n    if(regex_match(string, pattern)) {\n        return true;\n    }\n    return false;",
    "    std::regex pattern(\"^[aeiouAEIOU]\");\n    return std::regex_match(string, pattern);",
    "    std::regex vowel(\"^[aeiou]\");\n    if (std::regex_match(string, vowel)) {\n        return true;\n    }\n    return false;",
    "    std::regex pattern(\"^[aeiouAEIOU].*\");\n    return std::regex_match(string, pattern);",
    "    std::regex regex(\"^[aeiouAEIOU]\");\n    return std::regex_match(string, regex);",
    "\t// Write your code here\n\tstd::regex pattern(\"^[aeiouAEIOU]\");\n\treturn std::regex_match(string, pattern);",
    "    return std::regex_match(string, std::regex(\"^[aeiouAEIOU]\"));",
    "    std::regex pattern(\"^[aeiouAEIOU].*\");\n    if(std::regex_match(string, pattern)) {\n        return true;\n    }\n    return false;",
    "    std::regex pattern(\"^[aeiouAEIOU].*\");\n    if(std::regex_match(string, pattern)) {\n        return true;\n    }\n    return false;",
    "    std::regex pattern(\"^[aeiouAEIOU]\");\n    if (std::regex_match(string, pattern)) {\n        return true;\n    }\n    return false;",
    "    std::regex pattern(\"^[aeiouAEIOU].*\");\n    return std::regex_match(string, pattern);",
    "    std::regex pattern(\"^[aeiou]\");\n    if (std::regex_match(string, pattern)) {\n        return true;\n    }\n    return false;",
    "    std::regex pattern(\"^[aeiouAEIOU]\");\n    if (std::regex_match(string, pattern)) {\n        return true;\n    }\n    return false;",
    "    std::regex pattern(\"^[aeiouAEIOU]\");\n    return std::regex_match(string, pattern);",
    "    std::regex pattern(\"^[aeiouAEIOU].*\");\n    return std::regex_match(string, pattern);",
    "    std::regex pattern(\"^[aeiouAEIOU]\");\n    return std::regex_match(string, pattern);",
    "\tstd::regex pattern(\"^[aeiouAEIOU].*\");\n\treturn std::regex_match(string, pattern);",
    "    std::regex pattern(\"^[aeiouAEIOU].*\");\n    return std::regex_match(string, pattern);",
    "    std::regex pattern(\"^[aeiou]\");\n    return std::regex_match(string, pattern);",
    "    std::regex pattern(\"^[aeiouAEIOU].*\");\n    return std::regex_match(string, pattern);",
    "  std::regex pattern(\"^[aeiouAEIOU].*\");\n  return std::regex_match(string, pattern);",
    "    std::regex pattern(\"^[aeiouAEIOU].*\");\n    return std::regex_match(string, pattern);",
    "    std::regex pattern(\"^[aeiouAEIOU].*\");\n    return std::regex_match(string, pattern);",
    "    std::regex pattern(\"^[aeiouAEIOU]\");\n    return std::regex_match(string, pattern);",
    "\tstd::regex pattern(\"^[aeiouAEIOU].*\");\n\treturn std::regex_match(string, pattern);",
    "    std::regex pattern(\"^[aeiouAEIOU].*\");\n    return std::regex_match(string, pattern);",
    "    std::regex pattern(\"^[aeiouAEIOU]\");\n    if(std::regex_match(string, pattern)) {\n        return true;\n    }\n    return false;",
    "    regex pattern(\"^[aeiouAEIOU]\");\n    if (regex_match(string, pattern)) {\n        return true;\n    }\n    return false;",
    "    std::regex pattern(\"^[aeiouAEIOU].*\");\n    return std::regex_match(string, pattern);",
    "    std::regex pattern(\"^[aeiouAEIOU]\");\n    return std::regex_match(string, pattern);",
    "\tstd::regex pattern(\"^[aeiouAEIOU]\");\n\tif(std::regex_match(string, pattern)) {\n\t\treturn true;\n\t}\n\treturn false;",
    "    std::regex pattern(\"^[aeiouAEIOU]\");\n    return std::regex_match(string, pattern);",
    "    std::regex pattern(\"^[aeiouAEIOU]\");\n    return std::regex_match(string, pattern);",
    "    std::regex pattern(\"^[aeiouAEIOU]\");\n    return std::regex_match(string, pattern);",
    "    std::regex pattern(\"^[aeiouAEIOU]\");\n    return std::regex_match(string, pattern);",
    "    std::regex pattern(\"^[aeiouAEIOU]\");\n    return std::regex_match(string, pattern);",
    "    std::regex pattern(\"^[aeiouAEIOU]\");\n    if (std::regex_match(string, pattern)) {\n        return true;\n    }\n    return false;",
    "    std::regex pattern(\"^[aeiouAEIOU]\");\n    return std::regex_match(string, pattern);",
    "    std::regex pattern(\"^[aeiouAEIOU].*\");\n    if (std::regex_match(string, pattern)) {\n        return true;\n    } else {\n        return false;\n    }",
    "    std::regex pattern(\"^[aeiouAEIOU].*\");\n    return std::regex_match(string, pattern);",
    "    std::regex pattern(\"^[aeiouAEIOU]\");\n    if(std::regex_match(string, pattern)) {\n        return true;\n    }\n    return false;",
    "    std::regex pattern(\"^[aeiou]\");\n    if (std::regex_match(string, pattern)) {\n        return true;\n    }\n    return false;",
    "    std::regex pattern(\"^[aeiouAEIOU]\");\n    return std::regex_match(string, pattern);",
    "    std::regex regex(\"^[aeiouAEIOU].*\");\n    return std::regex_match(string, regex);",
    "    std::regex pattern(\"^[aeiouAEIOU].*\");\n    if(std::regex_match(string, pattern)) {\n        return true;\n    }\n    return false;",
    "    std::regex vowel(\"^[aeiouAEIOU]\");\n    if (std::regex_match(string, vowel)) {\n        return true;\n    }\n    return false;",
    "    std::regex pattern(\"^[aeiouAEIOU].*\");\n    return std::regex_match(string, pattern);",
    "    return std::regex_match(string, std::regex(\"^[aeiouAEIOU].*\"));",
    "    std::regex vowel(\"^[aeiouAEIOU]\");\n    return std::regex_match(string, vowel);",
    "  std::regex pattern(\"^[aeiouAEIOU].*\");\n  return std::regex_match(string, pattern);",
    "    std::regex pattern(\"^[aeiouAEIOU].*\");\n    return std::regex_match(string, pattern);",
    "    std::regex pattern(\"^[aeiouAEIOU]\");\n    return std::regex_match(string, pattern);",
    "\tstd::regex pattern(\"^[aeiouAEIOU]\");\n\tif (std::regex_match(string, pattern)) {\n\t\treturn true;\n\t}\n\treturn false;",
    "    std::regex pattern(\"^[aeiouAEIOU].*\");\n    return std::regex_match(string, pattern);",
    "    std::regex pattern(\"^[aeiouAEIOU]\");\n    return std::regex_match(string, pattern);",
    "    return std::regex_match(string, std::regex(\"^[aeiouAEIOU].*\"));",
    "\tstd::regex regex(\"^[aeiouAEIOU].*\");\n\treturn std::regex_match(string, regex);",
    "    std::regex pattern(\"^[aeiouAEIOU]\");\n    if(std::regex_match(string, pattern)) {\n        return true;\n    }\n    return false;",
    "    // Write your code here\n    regex r(\"^[aeiouAEIOU].*\");\n    return regex_match(string,r);",
    "    std::regex pattern(\"^[aeiouAEIOU].*\");\n    return std::regex_match(string, pattern);",
    "    std::regex pattern(\"^[aeiouAEIOU].*\");\n    return std::regex_match(string, pattern);",
    "\tstd::regex pattern(\"^[aeiouAEIOU]\");\n\treturn std::regex_match(string, pattern);",
    "    std::regex pattern(\"^[aeiouAEIOU]\");\n    if (std::regex_match(string, pattern)) {\n        return true;\n    }\n    return false;",
    "    std::regex pattern(\"^[aeiouAEIOU]\");\n    if(std::regex_match(string, pattern)) {\n        return true;\n    }\n    return false;",
    "    std::regex r(\"^[aeiouAEIOU]\");\n    return std::regex_match(string, r);",
    "    std::regex pattern(\"^[aeiouAEIOU].*\");\n    if(std::regex_match(string, pattern)) {\n        return true;\n    }\n    return false;",
    "    std::regex pattern(\"^[aeiouAEIOU].*\");\n    return std::regex_match(string, pattern);",
    "    std::regex pattern(\"^[aeiouAEIOU].*\");\n    return std::regex_match(string, pattern);",
    "    std::regex pattern(\"^[aeiouAEIOU].*\");\n    if(std::regex_match(string, pattern)) {\n        return true;\n    }\n    return false;",
    "    std::regex pattern(\"^[aeiouAEIOU]\");\n    if(std::regex_match(string, pattern)) {\n        return true;\n    }\n    return false;",
    "  std::regex pattern(\"^[aeiouAEIOU].*\");\n  return std::regex_match(string, pattern);",
    "    std::regex pattern(\"^[aeiouAEIOU]\");\n    return std::regex_match(string, pattern);",
    "  std::regex pattern(\"^[aeiouAEIOU]\");\n  if (std::regex_match(string, pattern)) {\n    return true;\n  }\n  return false;",
    "    std::regex pattern(\"^[aeiouAEIOU].*\");\n    return std::regex_match(string, pattern);",
    "    std::regex pattern(\"^[aeiouAEIOU]\");\n    return std::regex_search(string, pattern);",
    "    std::regex pattern(\"^[aeiouAEIOU]\");\n    if(std::regex_match(string, pattern)) {\n        return true;\n    }\n    return false;",
    "\tstd::regex pattern(\"^[aeiouAEIOU]\");\n\treturn std::regex_match(string, pattern);",
    "\tstd::regex pattern(\"^[aeiouAEIOU]\");\n\treturn std::regex_match(string, pattern);",
    "    std::regex pattern(\"^[aeiouAEIOU]\");\n    return std::regex_match(string, pattern);",
    "    std::regex vowel(\"^[aeiouAEIOU]\");\n    return std::regex_match(string, vowel);",
    "    std::regex vowel(\"^[aeiouAEIOU]\");\n    if (std::regex_match(string, vowel)) {\n        return true;\n    }\n    return false;",
    "\tstd::regex pattern(\"^[aeiouAEIOU].*\");\n\treturn std::regex_match(string, pattern);",
    "    std::regex pattern(\"^[aeiouAEIOU]\");\n    if (std::regex_match(string, pattern)) {\n        return true;\n    }\n    return false;",
    "    std::regex pattern(\"^[aeiouAEIOU]\");\n    if (std::regex_match(string, pattern)) {\n        return true;\n    }\n    return false;",
    "    std::regex pattern(\"^[aeiouAEIOU]\");\n    if(std::regex_match(string,pattern)) {\n        return true;\n    }\n    return false;",
    "    std::regex pattern(\"^[aeiouAEIOU]\");\n    return std::regex_match(string, pattern);",
    "    std::regex pattern(\"^[aeiouAEIOU]\");\n    return std::regex_match(string, pattern);",
    "    std::regex pattern(\"^[aeiouAEIOU]\");\n    if(std::regex_match(string, pattern)) {\n        return true;\n    }\n    return false;",
    "    std::regex pattern(\"^[aeiouAEIOU]\");\n    if (std::regex_match(string, pattern)) {\n        return true;\n    }\n    return false;",
    "    std::regex pattern(\"^[aeiouAEIOU].*\");\n    return std::regex_match(string, pattern);",
    "    std::regex pattern(\"^[aeiouAEIOU]\");\n    if (std::regex_match(string, pattern)) {\n        return true;\n    }\n    return false;",
    "  std::regex pattern(\"^[aeiouAEIOU]\");\n  return std::regex_match(string, pattern);",
    "    std::regex pattern(\"^[aeiouAEIOU]\");\n    if (std::regex_match(string, pattern))\n        return true;\n    else\n        return false;",
    "    if (std::regex_match(string, std::regex(\"^[aeiouAEIOU].*\"))) {\n        return true;\n    }\n    return false;",
    "    std::regex pattern(\"^[aeiouAEIOU].*\");\n    return std::regex_match(string, pattern);",
    "    std::regex pattern(\"^[aeiouAEIOU]\");\n    if (std::regex_match(string, pattern)) {\n        return true;\n    }\n    return false;",
    "\tstd::regex pattern(\"^[aeiouAEIOU].*\");\n\treturn std::regex_match(string, pattern);",
    "  std::regex pattern(\"^[aeiouAEIOU]\");\n  if(std::regex_match(string, pattern)) {\n    return true;\n  }\n  return false;",
    "    std::regex pattern(\"^[aeiouAEIOU]\");\n    return std::regex_match(string, pattern);",
    "    std::regex pattern(\"^[aeiouAEIOU]\");\n    if (std::regex_match(string, pattern)) {\n        return true;\n    }\n    return false;",
    "    std::regex pattern(\"^[aeiouAEIOU].*\");\n    return std::regex_match(string, pattern);",
    "    std::regex pattern(\"^[aeiouAEIOU]\");\n    return std::regex_match(string, pattern);",
    "    return std::regex_match(string, std::regex(\"^[aeiouAEIOU].*\"));",
    "    std::regex pattern(\"^[aeiouAEIOU].*\");\n    if (std::regex_match(string, pattern)) {\n        return true;\n    }\n    return false;",
    "    std::regex pattern(\"^[aeiou]\");\n    return std::regex_match(string, pattern);",
    "  std::regex pattern(\"^[aeiouAEIOU]\");\n  return std::regex_match(string, pattern);",
    "    std::regex pattern(\"^[aeiouAEIOU]\");\n    if (std::regex_match(string, pattern)) {\n        return true;\n    }\n    return false;",
    "    std::regex pattern(\"^[aeiouAEIOU].*\");\n    return std::regex_match(string, pattern);",
    "  std::regex pattern(\"^[aeiouAEIOU]\");\n  if(std::regex_match(string, pattern)) {\n    return true;\n  }\n  return false;",
    "    std::regex pattern(\"^[aeiouAEIOU]\");\n    return std::regex_match(string, pattern);",
    "    std::regex pattern(\"^[aeiouAEIOU]\");\n    if(std::regex_match(string, pattern)) {\n        return true;\n    }\n    return false;",
    "    std::regex pattern(\"^[aeiouAEIOU].*\");\n    return std::regex_match(string, pattern);",
    "    std::regex pattern(\"^[aeiouAEIOU].*\");\n    return std::regex_match(string, pattern);",
    "    std::regex pattern(\"^[aeiouAEIOU]\");\n    if (std::regex_match(string, pattern)) {\n        return true;\n    }\n    return false;",
    "    std::regex pattern(\"^[aeiouAEIOU].*\");\n    return std::regex_match(string, pattern);",
    "    std::regex pattern(\"^[aeiouAEIOU]\");\n    if(std::regex_match(string, pattern)) {\n        return true;\n    }\n    return false;",
    "\tstd::regex pattern(\"^[aeiouAEIOU].*\");\n\tif (std::regex_match(string, pattern)) {\n\t\treturn true;\n\t}\n\treturn false;",
    "    std::regex pattern(\"^[aeiouAEIOU]\");\n    if (std::regex_match(string, pattern)) {\n        return true;\n    }\n    return false;",
    "    std::regex pattern(\"^[aeiouAEIOU]\");\n    return std::regex_match(string, pattern);",
    "  std::regex pattern(\"^[aeiouAEIOU]\");\n  return std::regex_match(string, pattern);",
    "    std::regex pattern(\"^[aeiouAEIOU]\");\n    return std::regex_match(string, pattern);",
    "    std::regex pattern(\"^[aeiouAEIOU]\");\n    return std::regex_match(string, pattern);",
    "    std::regex pattern(\"^[aeiouAEIOU].*\");\n    return std::regex_match(string, pattern);",
    "    std::regex pattern(\"^[aeiouAEIOU]\");\n    if(std::regex_match(string, pattern)) {\n        return true;\n    }\n    return false;",
    "    std::regex pattern(\"^[aeiouAEIOU]\");\n    if(std::regex_match(string, pattern)) {\n        return true;\n    }\n    return false;",
    "    std::regex pattern(\"^[aeiouAEIOU]\");\n    return std::regex_match(string, pattern);",
    "    std::regex pattern(\"^[aeiouAEIOU]\");\n    return std::regex_match(string, pattern);",
    "    std::regex pattern(\"^[aeiouAEIOU].*\");\n    return std::regex_match(string, pattern);",
    "\tstd::regex pattern(\"^[aeiouAEIOU].*\");\n\treturn std::regex_match(string, pattern);",
    "\tstd::regex r(\"^[aeiouAEIOU]\");\n\treturn std::regex_match(string, r);",
    "    std::regex pattern(\"^[aeiouAEIOU]\");\n    return std::regex_match(string, pattern);",
    "\tstd::regex pattern(\"^[aeiouAEIOU]\");\n\treturn std::regex_match(string, pattern);",
    "    std::regex pattern(\"^[aeiouAEIOU].*\");\n    return std::regex_match(string, pattern);",
    "    std::regex pattern(\"^[aeiouAEIOU]\");\n    if (std::regex_match(string, pattern)) {\n        return true;\n    }\n    return false;",
    "    std::regex pattern(\"^[aeiouAEIOU]\");\n    if (std::regex_match(string, pattern)) {\n        return true;\n    }\n    return false;",
    "    std::regex vowel(\"^[aeiouAEIOU]\");\n    if (std::regex_match(string, vowel)) {\n        return true;\n    }\n    return false;",
    "    std::regex regex(\"^[aeiouAEIOU]\");\n    if (std::regex_match(string, regex)) {\n        return true;\n    }\n    return false;",
    "    std::regex pattern(\"^[aeiouAEIOU].*\");\n    return std::regex_match(string, pattern);",
    "\tstd::regex pattern(\"^[aeiouAEIOU]\");\n\treturn std::regex_match(string, pattern);",
    "    std::regex vowel(\"^[aeiouAEIOU]\");\n    if (std::regex_match(string, vowel)) {\n        return true;\n    }\n    return false;",
    "\tstd::regex r(\"^[aeiouAEIOU].*\");\n\treturn std::regex_match(string, r);",
    "    std::regex pattern(\"^[aeiouAEIOU].*\");\n    if (std::regex_match(string, pattern)) {\n        return true;\n    }\n    return false;",
    "    std::regex pattern(\"^[aeiouAEIOU].*\");\n    return std::regex_match(string, pattern);",
    "    std::regex pattern(\"^[aeiouAEIOU]\");\n    return std::regex_match(string, pattern);",
    "    std::regex r(\"^[aeiouAEIOU]\");\n    return std::regex_match(string, r);",
    "    std::regex pattern(\"^[aeiouAEIOU]\");\n    if(std::regex_match(string, pattern)) {\n        return true;\n    }\n    return false;",
    "    std::regex pattern(\"^[aeiouAEIOU]\");\n    return std::regex_match(string, pattern);",
    "    std::regex pattern(\"^[aeiouAEIOU]\");\n    return std::regex_match(string, pattern);",
    "    std::regex pattern(\"^[aeiou]\");\n    return std::regex_match(string, pattern);",
    "    std::regex pattern(\"^[aeiouAEIOU].*\");\n    return std::regex_match(string, pattern);",
    "  std::regex pattern(\"^[aeiouAEIOU].*\");\n  return std::regex_match(string, pattern);",
    "    // regex pattern(\"^[aeiouAEIOU].*\");\n    regex pattern(\"^[aeiouAEIOU]\");\n    if(regex_match(string, pattern)) {\n        return true;\n    }\n    return false;",
    "    std::regex pattern(\"^[aeiouAEIOU]\");\n    if(std::regex_match(string, pattern)) {\n        return true;\n    }\n    return false;",
    "    std::regex pattern(\"^[aeiouAEIOU].*\");\n    return std::regex_match(string, pattern);",
    "    std::regex pattern(\"^[aeiouAEIOU]\");\n    return std::regex_match(string, pattern);",
    "    std::regex pattern(\"^[aeiouAEIOU].*\");\n    return std::regex_match(string, pattern);",
    "    regex pattern(\"^[aeiouAEIOU].*\");\n    return regex_match(string, pattern);",
    "    std::regex pattern(\"^[aeiouAEIOU].*\");\n    if(std::regex_match(string, pattern)) {\n        return true;\n    }\n    return false;",
    "    std::regex vowel(\"^[aeiouAEIOU]\");\n    if (std::regex_match(string, vowel)) {\n        return true;\n    }\n    return false;",
    "    std::regex pattern(\"^[aeiouAEIOU]\");\n    return std::regex_match(string, pattern);",
    "  std::regex r(\"^[aeiouAEIOU].*\");\n  return std::regex_match(string, r);",
    "    std::regex pattern(\"^[aeiouAEIOU]\");\n    return std::regex_match(string, pattern);",
    "\tstd::regex pattern(\"^[aeiouAEIOU].*\");\n\treturn std::regex_match(string, pattern);",
    "    std::regex pattern(\"^[aeiouAEIOU]\");\n    return std::regex_match(string, pattern);",
    "    std::regex pattern(\"^[aeiouAEIOU]\");\n    if (std::regex_match(string, pattern)) {\n        return true;\n    }\n    return false;",
    "    std::regex pattern(\"^[aeiouAEIOU]\");\n    if(std::regex_match(string, pattern)) {\n        return true;\n    }\n    return false;",
    "  std::regex pattern(\"^[aeiouAEIOU]\");\n  return std::regex_match(string, pattern);",
    "    std::regex pattern(\"^[aeiouAEIOU]\");\n    if(std::regex_match(string, pattern)) {\n        return true;\n    }\n    return false;",
    "    std::regex pattern(\"^[aeiouAEIOU].*\");\n    return std::regex_match(string, pattern);",
    "    std::regex pattern(\"^[aeiouAEIOU].*\");\n    return std::regex_match(string, pattern);",
    "    std::regex pattern(\"^[aeiouAEIOU]\");\n    return std::regex_match(string, pattern);",
    "    std::regex pattern(\"^[aeiouAEIOU]\");\n    if (std::regex_match(string, pattern)) {\n        return true;\n    }\n    return false;"
  ]
}
{
  "name": "mbpp_388_highest_Power_of_2",
  "language": "cpp",
  "prompt": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the highest power of 2 that is less than or equal to n.\nlong highest_Power_of_2(long n) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_388_highest_Power_of_2.py",
  "prompt_terminology": "verbatim",
  "tests": "}\nint main() {\n    auto candidate = highest_Power_of_2;\n    assert(candidate((10)) == (8));\n    assert(candidate((19)) == (16));\n    assert(candidate((32)) == (32));\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "results": [
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the highest power of 2 that is less than or equal to n.\nlong highest_Power_of_2(long n) {\n    // Write your code here\n    long i=1;\n    while(i<=n){\n        i*=2;\n    }\n    return i/2;\n}\nint main() {\n    auto candidate = highest_Power_of_2;\n    assert(candidate((10)) == (8));\n    assert(candidate((19)) == (16));\n    assert(candidate((32)) == (32));\n}\n",
      "timestamp": 1665510376,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the highest power of 2 that is less than or equal to n.\nlong highest_Power_of_2(long n) {\n    // Write your code here\n    long i=1;\n    while(i<=n)\n    {\n        i=i*2;\n    }\n    return i/2;\n}\nint main() {\n    auto candidate = highest_Power_of_2;\n    assert(candidate((10)) == (8));\n    assert(candidate((19)) == (16));\n    assert(candidate((32)) == (32));\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the highest power of 2 that is less than or equal to n.\nlong highest_Power_of_2(long n) {\n    // Write your code here\n    long i=1;\n    while(i<=n)\n    {\n        i=i*2;\n    }\n    return i/2;\n}\nint main() {\n    auto candidate = highest_Power_of_2;\n    assert(candidate((10)) == (8));\n    assert(candidate((19)) == (16));\n    assert(candidate((32)) == (32));\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the highest power of 2 that is less than or equal to n.\nlong highest_Power_of_2(long n) {\n    // Write your code here\n    long i=0;\n    while(pow(2,i)<=n)\n    {\n        i++;\n    }\n    return pow(2,i-1);\n}\nint main() {\n    auto candidate = highest_Power_of_2;\n    assert(candidate((10)) == (8));\n    assert(candidate((19)) == (16));\n    assert(candidate((32)) == (32));\n}\n",
      "timestamp": 1665510376,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the highest power of 2 that is less than or equal to n.\nlong highest_Power_of_2(long n) {\n    // Write your code here\n    long i=1;\n    while(i<=n){\n        i=i*2;\n    }\n    return i/2;\n}\nint main() {\n    auto candidate = highest_Power_of_2;\n    assert(candidate((10)) == (8));\n    assert(candidate((19)) == (16));\n    assert(candidate((32)) == (32));\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the highest power of 2 that is less than or equal to n.\nlong highest_Power_of_2(long n) {\n    // Write your code here\n    long i=0;\n    while(pow(2,i)<=n){\n        i++;\n    }\n    return pow(2,i-1);\n}\nint main() {\n    auto candidate = highest_Power_of_2;\n    assert(candidate((10)) == (8));\n    assert(candidate((19)) == (16));\n    assert(candidate((32)) == (32));\n}\n",
      "timestamp": 1665510376,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the highest power of 2 that is less than or equal to n.\nlong highest_Power_of_2(long n) {\n    // Write your code here\n    long i=1;\n    while(i<=n)\n    {\n        i=i*2;\n    }\n    return i/2;\n}\nint main() {\n    auto candidate = highest_Power_of_2;\n    assert(candidate((10)) == (8));\n    assert(candidate((19)) == (16));\n    assert(candidate((32)) == (32));\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the highest power of 2 that is less than or equal to n.\nlong highest_Power_of_2(long n) {\n    // Write your code here\n    long i=0;\n    while(pow(2,i)<=n){\n        i++;\n    }\n    return pow(2,i-1);\n}\nint main() {\n    auto candidate = highest_Power_of_2;\n    assert(candidate((10)) == (8));\n    assert(candidate((19)) == (16));\n    assert(candidate((32)) == (32));\n}\n",
      "timestamp": 1665510376,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the highest power of 2 that is less than or equal to n.\nlong highest_Power_of_2(long n) {\n    long res = 1;\n    while(res < n) {\n        res *= 2;\n    }\n    return res/2;\n}\nint main() {\n    auto candidate = highest_Power_of_2;\n    assert(candidate((10)) == (8));\n    assert(candidate((19)) == (16));\n    assert(candidate((32)) == (32));\n}\n",
      "timestamp": 1665510376,
      "stdout": "",
      "stderr": "tmp0u0o1b00: /tmp/tmp0u0o1b00.cpp:15: int main(): Assertion `candidate((32)) == (32)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the highest power of 2 that is less than or equal to n.\nlong highest_Power_of_2(long n) {\n    long i = 1;\n    while(i < n) {\n        i = i << 1;\n    }\n    return i >> 1;\n}\nint main() {\n    auto candidate = highest_Power_of_2;\n    assert(candidate((10)) == (8));\n    assert(candidate((19)) == (16));\n    assert(candidate((32)) == (32));\n}\n",
      "timestamp": 1665510376,
      "stdout": "",
      "stderr": "tmp6c5l8jst: /tmp/tmp6c5l8jst.cpp:15: int main(): Assertion `candidate((32)) == (32)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the highest power of 2 that is less than or equal to n.\nlong highest_Power_of_2(long n) {\n    // Write your code here\n    long i=0;\n    long ans=0;\n    while(ans<=n){\n        ans=pow(2,i);\n        i++;\n    }\n    return ans/2;\n}\nint main() {\n    auto candidate = highest_Power_of_2;\n    assert(candidate((10)) == (8));\n    assert(candidate((19)) == (16));\n    assert(candidate((32)) == (32));\n}\n",
      "timestamp": 1665510376,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the highest power of 2 that is less than or equal to n.\nlong highest_Power_of_2(long n) {\n    // Write your code here\n    long i=0;\n    while(pow(2,i)<=n){\n        i++;\n    }\n    return pow(2,i-1);\n}\nint main() {\n    auto candidate = highest_Power_of_2;\n    assert(candidate((10)) == (8));\n    assert(candidate((19)) == (16));\n    assert(candidate((32)) == (32));\n}\n",
      "timestamp": 1665510376,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the highest power of 2 that is less than or equal to n.\nlong highest_Power_of_2(long n) {\n    // Write your code here\n    long i=1;\n    while(i<=n){\n        i*=2;\n    }\n    return i/2;\n}\nint main() {\n    auto candidate = highest_Power_of_2;\n    assert(candidate((10)) == (8));\n    assert(candidate((19)) == (16));\n    assert(candidate((32)) == (32));\n}\n",
      "timestamp": 1665510376,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the highest power of 2 that is less than or equal to n.\nlong highest_Power_of_2(long n) {\n    // Write your code here\n    long i=1;\n    while(i<=n){\n        i*=2;\n    }\n    return i/2;\n}\nint main() {\n    auto candidate = highest_Power_of_2;\n    assert(candidate((10)) == (8));\n    assert(candidate((19)) == (16));\n    assert(candidate((32)) == (32));\n}\n",
      "timestamp": 1665510376,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the highest power of 2 that is less than or equal to n.\nlong highest_Power_of_2(long n) {\n    assert(n>=0);\n    long i=1;\n    while(i<=n){\n        i=i*2;\n    }\n    return i/2;\n}\nint main() {\n    auto candidate = highest_Power_of_2;\n    assert(candidate((10)) == (8));\n    assert(candidate((19)) == (16));\n    assert(candidate((32)) == (32));\n}\n",
      "timestamp": 1665510376,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the highest power of 2 that is less than or equal to n.\nlong highest_Power_of_2(long n) {\n    // Write your code here\n    long i=1;\n    while(i<=n){\n        i=i*2;\n    }\n    return i/2;\n}\nint main() {\n    auto candidate = highest_Power_of_2;\n    assert(candidate((10)) == (8));\n    assert(candidate((19)) == (16));\n    assert(candidate((32)) == (32));\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the highest power of 2 that is less than or equal to n.\nlong highest_Power_of_2(long n) {\n    // Write your code here\n    int i=0;\n    while(pow(2,i)<=n){\n        i++;\n    }\n    return pow(2,i-1);\n}\nint main() {\n    auto candidate = highest_Power_of_2;\n    assert(candidate((10)) == (8));\n    assert(candidate((19)) == (16));\n    assert(candidate((32)) == (32));\n}\n",
      "timestamp": 1665510376,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the highest power of 2 that is less than or equal to n.\nlong highest_Power_of_2(long n) {\n    long i = 1;\n    while(i < n) {\n        i = i << 1;\n    }\n    return i >> 1;\n}\nint main() {\n    auto candidate = highest_Power_of_2;\n    assert(candidate((10)) == (8));\n    assert(candidate((19)) == (16));\n    assert(candidate((32)) == (32));\n}\n",
      "timestamp": 1665510376,
      "stdout": "",
      "stderr": "tmp6c5l8jst: /tmp/tmp6c5l8jst.cpp:15: int main(): Assertion `candidate((32)) == (32)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the highest power of 2 that is less than or equal to n.\nlong highest_Power_of_2(long n) {\n    // Write your code here\n    long i=0;\n    long j=1;\n    while(j<=n)\n    {\n        i=j;\n        j=j*2;\n    }\n    return i;\n}\nint main() {\n    auto candidate = highest_Power_of_2;\n    assert(candidate((10)) == (8));\n    assert(candidate((19)) == (16));\n    assert(candidate((32)) == (32));\n}\n",
      "timestamp": 1665510376,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the highest power of 2 that is less than or equal to n.\nlong highest_Power_of_2(long n) {\n    // Write your code here\n    long i=1;\n    while(i<=n){\n        i=i*2;\n    }\n    return i/2;\n}\nint main() {\n    auto candidate = highest_Power_of_2;\n    assert(candidate((10)) == (8));\n    assert(candidate((19)) == (16));\n    assert(candidate((32)) == (32));\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the highest power of 2 that is less than or equal to n.\nlong highest_Power_of_2(long n) {\n    // Write your code here\n    long i=1;\n    while(i<=n)\n    {\n        i=i*2;\n    }\n    return i/2;\n}\nint main() {\n    auto candidate = highest_Power_of_2;\n    assert(candidate((10)) == (8));\n    assert(candidate((19)) == (16));\n    assert(candidate((32)) == (32));\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the highest power of 2 that is less than or equal to n.\nlong highest_Power_of_2(long n) {\n    // Write your code here\n    long i = 1;\n    while(i < n){\n        i = i * 2;\n    }\n    return i/2;\n}\nint main() {\n    auto candidate = highest_Power_of_2;\n    assert(candidate((10)) == (8));\n    assert(candidate((19)) == (16));\n    assert(candidate((32)) == (32));\n}\n",
      "timestamp": 1666123385,
      "stdout": "",
      "stderr": "tmpx2tjjqzh: /tmp/tmpx2tjjqzh.cpp:16: int main(): Assertion `candidate((32)) == (32)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the highest power of 2 that is less than or equal to n.\nlong highest_Power_of_2(long n) {\n    // Write your code here\n    long i=1;\n    while(i<=n){\n        i=i*2;\n    }\n    return i/2;\n}\nint main() {\n    auto candidate = highest_Power_of_2;\n    assert(candidate((10)) == (8));\n    assert(candidate((19)) == (16));\n    assert(candidate((32)) == (32));\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the highest power of 2 that is less than or equal to n.\nlong highest_Power_of_2(long n) {\n    // Write your code here\n    long i=1;\n    while(i<n){\n        i=i*2;\n    }\n    return i/2;\n}\nint main() {\n    auto candidate = highest_Power_of_2;\n    assert(candidate((10)) == (8));\n    assert(candidate((19)) == (16));\n    assert(candidate((32)) == (32));\n}\n",
      "timestamp": 1666123385,
      "stdout": "",
      "stderr": "tmp2cbh59ro: /tmp/tmp2cbh59ro.cpp:16: int main(): Assertion `candidate((32)) == (32)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the highest power of 2 that is less than or equal to n.\nlong highest_Power_of_2(long n) {\n    // Write your code here\n    long i=1;\n    while(i<=n){\n        i*=2;\n    }\n    return i/2;\n}\nint main() {\n    auto candidate = highest_Power_of_2;\n    assert(candidate((10)) == (8));\n    assert(candidate((19)) == (16));\n    assert(candidate((32)) == (32));\n}\n",
      "timestamp": 1665510376,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the highest power of 2 that is less than or equal to n.\nlong highest_Power_of_2(long n) {\n    // Write your code here\n    long i=0;\n    long ans=1;\n    while(ans<=n){\n        ans=pow(2,i);\n        i++;\n    }\n    return ans/2;\n}\nint main() {\n    auto candidate = highest_Power_of_2;\n    assert(candidate((10)) == (8));\n    assert(candidate((19)) == (16));\n    assert(candidate((32)) == (32));\n}\n",
      "timestamp": 1666123385,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the highest power of 2 that is less than or equal to n.\nlong highest_Power_of_2(long n) {\n    // Write your code here\n    long res = 1;\n    while(res < n)\n        res *= 2;\n    return res / 2;\n}\nint main() {\n    auto candidate = highest_Power_of_2;\n    assert(candidate((10)) == (8));\n    assert(candidate((19)) == (16));\n    assert(candidate((32)) == (32));\n}\n",
      "timestamp": 1666123385,
      "stdout": "",
      "stderr": "tmp3r8260fq: /tmp/tmp3r8260fq.cpp:15: int main(): Assertion `candidate((32)) == (32)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the highest power of 2 that is less than or equal to n.\nlong highest_Power_of_2(long n) {\n    // Write your code here\n    long i=1;\n    while(i<=n)\n    {\n        i=i*2;\n    }\n    return i/2;\n}\nint main() {\n    auto candidate = highest_Power_of_2;\n    assert(candidate((10)) == (8));\n    assert(candidate((19)) == (16));\n    assert(candidate((32)) == (32));\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the highest power of 2 that is less than or equal to n.\nlong highest_Power_of_2(long n) {\n    // Write your code here\n    long i=1;\n    while(i<=n)\n    {\n        i=i*2;\n    }\n    return i/2;\n}\nint main() {\n    auto candidate = highest_Power_of_2;\n    assert(candidate((10)) == (8));\n    assert(candidate((19)) == (16));\n    assert(candidate((32)) == (32));\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the highest power of 2 that is less than or equal to n.\nlong highest_Power_of_2(long n) {\n    // Write your code here\n    long i=0;\n    while(pow(2,i)<=n){\n        i++;\n    }\n    return pow(2,i-1);\n}\nint main() {\n    auto candidate = highest_Power_of_2;\n    assert(candidate((10)) == (8));\n    assert(candidate((19)) == (16));\n    assert(candidate((32)) == (32));\n}\n",
      "timestamp": 1665510376,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the highest power of 2 that is less than or equal to n.\nlong highest_Power_of_2(long n) {\n    // Write your code here\n    long i=1;\n    while(i<n){\n        i=i*2;\n    }\n    return i/2;\n}\nint main() {\n    auto candidate = highest_Power_of_2;\n    assert(candidate((10)) == (8));\n    assert(candidate((19)) == (16));\n    assert(candidate((32)) == (32));\n}\n",
      "timestamp": 1666123385,
      "stdout": "",
      "stderr": "tmp2cbh59ro: /tmp/tmp2cbh59ro.cpp:16: int main(): Assertion `candidate((32)) == (32)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the highest power of 2 that is less than or equal to n.\nlong highest_Power_of_2(long n) {\n    // Write your code here\n    long i=1;\n    while(i<=n)\n    {\n        i=i*2;\n    }\n    return i/2;\n}\nint main() {\n    auto candidate = highest_Power_of_2;\n    assert(candidate((10)) == (8));\n    assert(candidate((19)) == (16));\n    assert(candidate((32)) == (32));\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the highest power of 2 that is less than or equal to n.\nlong highest_Power_of_2(long n) {\n    // Write your code here\n    long res = 1;\n    while(res < n) {\n        res *= 2;\n    }\n    return res/2;\n}\nint main() {\n    auto candidate = highest_Power_of_2;\n    assert(candidate((10)) == (8));\n    assert(candidate((19)) == (16));\n    assert(candidate((32)) == (32));\n}\n",
      "timestamp": 1666123385,
      "stdout": "",
      "stderr": "tmp8w_orein: /tmp/tmp8w_orein.cpp:16: int main(): Assertion `candidate((32)) == (32)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the highest power of 2 that is less than or equal to n.\nlong highest_Power_of_2(long n) {\n    // Write your code here\n    long i=0;\n    long j=1;\n    while(j<=n){\n        i++;\n        j=j*2;\n    }\n    return j/2;\n}\nint main() {\n    auto candidate = highest_Power_of_2;\n    assert(candidate((10)) == (8));\n    assert(candidate((19)) == (16));\n    assert(candidate((32)) == (32));\n}\n",
      "timestamp": 1666123385,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the highest power of 2 that is less than or equal to n.\nlong highest_Power_of_2(long n) {\n    // Write your code here\n    long i=1;\n    while(i<=n)\n    {\n        i=i*2;\n    }\n    return i/2;\n}\nint main() {\n    auto candidate = highest_Power_of_2;\n    assert(candidate((10)) == (8));\n    assert(candidate((19)) == (16));\n    assert(candidate((32)) == (32));\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the highest power of 2 that is less than or equal to n.\nlong highest_Power_of_2(long n) {\n    // Write your code here\n    long i=1;\n    while(i<n)\n    {\n        i=i*2;\n    }\n    return i/2;\n}\nint main() {\n    auto candidate = highest_Power_of_2;\n    assert(candidate((10)) == (8));\n    assert(candidate((19)) == (16));\n    assert(candidate((32)) == (32));\n}\n",
      "timestamp": 1666123386,
      "stdout": "",
      "stderr": "tmp3cnyik2g: /tmp/tmp3cnyik2g.cpp:17: int main(): Assertion `candidate((32)) == (32)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the highest power of 2 that is less than or equal to n.\nlong highest_Power_of_2(long n) {\n    // Write your code here\n    long i=1;\n    while(i<=n)\n    {\n        i*=2;\n    }\n    return i/2;\n}\nint main() {\n    auto candidate = highest_Power_of_2;\n    assert(candidate((10)) == (8));\n    assert(candidate((19)) == (16));\n    assert(candidate((32)) == (32));\n}\n",
      "timestamp": 1666123385,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the highest power of 2 that is less than or equal to n.\nlong highest_Power_of_2(long n) {\n    // Write your code here\n    long i=1;\n    while(i<=n){\n        i=i*2;\n    }\n    return i/2;\n}\nint main() {\n    auto candidate = highest_Power_of_2;\n    assert(candidate((10)) == (8));\n    assert(candidate((19)) == (16));\n    assert(candidate((32)) == (32));\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the highest power of 2 that is less than or equal to n.\nlong highest_Power_of_2(long n) {\n    // Write your code here\n    long i=1;\n    while(i<=n)\n    {\n        i=i*2;\n    }\n    return i/2;\n}\nint main() {\n    auto candidate = highest_Power_of_2;\n    assert(candidate((10)) == (8));\n    assert(candidate((19)) == (16));\n    assert(candidate((32)) == (32));\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the highest power of 2 that is less than or equal to n.\nlong highest_Power_of_2(long n) {\n    // Write your code here\n    long i = 1;\n    while(i < n) {\n        i *= 2;\n    }\n    return i/2;\n}\nint main() {\n    auto candidate = highest_Power_of_2;\n    assert(candidate((10)) == (8));\n    assert(candidate((19)) == (16));\n    assert(candidate((32)) == (32));\n}\n",
      "timestamp": 1666123385,
      "stdout": "",
      "stderr": "tmporvukm6q: /tmp/tmporvukm6q.cpp:16: int main(): Assertion `candidate((32)) == (32)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the highest power of 2 that is less than or equal to n.\nlong highest_Power_of_2(long n) {\n    // Write your code here\n    long i=1;\n    while(i<=n)\n    {\n        i*=2;\n    }\n    return i/2;\n}\nint main() {\n    auto candidate = highest_Power_of_2;\n    assert(candidate((10)) == (8));\n    assert(candidate((19)) == (16));\n    assert(candidate((32)) == (32));\n}\n",
      "timestamp": 1666123385,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the highest power of 2 that is less than or equal to n.\nlong highest_Power_of_2(long n) {\n    // Write your code here\n    long i=1;\n    while(i<=n){\n        i=i*2;\n    }\n    return i/2;\n}\nint main() {\n    auto candidate = highest_Power_of_2;\n    assert(candidate((10)) == (8));\n    assert(candidate((19)) == (16));\n    assert(candidate((32)) == (32));\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the highest power of 2 that is less than or equal to n.\nlong highest_Power_of_2(long n) {\n    // Write your code here\n    long i=1;\n    while(i<=n){\n        i*=2;\n    }\n    return i/2;\n}\nint main() {\n    auto candidate = highest_Power_of_2;\n    assert(candidate((10)) == (8));\n    assert(candidate((19)) == (16));\n    assert(candidate((32)) == (32));\n}\n",
      "timestamp": 1665510376,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the highest power of 2 that is less than or equal to n.\nlong highest_Power_of_2(long n) {\n    // Write your code here\n    long i=1;\n    while(i<=n){\n        i=i*2;\n    }\n    return i/2;\n}\nint main() {\n    auto candidate = highest_Power_of_2;\n    assert(candidate((10)) == (8));\n    assert(candidate((19)) == (16));\n    assert(candidate((32)) == (32));\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the highest power of 2 that is less than or equal to n.\nlong highest_Power_of_2(long n) {\n    // Write your code here\n    long i=1;\n    while(i<n){\n        i=i*2;\n    }\n    return i/2;\n}\nint main() {\n    auto candidate = highest_Power_of_2;\n    assert(candidate((10)) == (8));\n    assert(candidate((19)) == (16));\n    assert(candidate((32)) == (32));\n}\n",
      "timestamp": 1666123385,
      "stdout": "",
      "stderr": "tmp2cbh59ro: /tmp/tmp2cbh59ro.cpp:16: int main(): Assertion `candidate((32)) == (32)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the highest power of 2 that is less than or equal to n.\nlong highest_Power_of_2(long n) {\n    // Write your code here\n    long i=1;\n    while(i<=n)\n    {\n        i=i*2;\n    }\n    return i/2;\n}\nint main() {\n    auto candidate = highest_Power_of_2;\n    assert(candidate((10)) == (8));\n    assert(candidate((19)) == (16));\n    assert(candidate((32)) == (32));\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the highest power of 2 that is less than or equal to n.\nlong highest_Power_of_2(long n) {\n    // Write your code here\n    long i=1,j=0;\n    while(i<=n)\n    {\n        i=i*2;\n        j++;\n    }\n    return pow(2,j-1);\n}\nint main() {\n    auto candidate = highest_Power_of_2;\n    assert(candidate((10)) == (8));\n    assert(candidate((19)) == (16));\n    assert(candidate((32)) == (32));\n}\n",
      "timestamp": 1666123386,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the highest power of 2 that is less than or equal to n.\nlong highest_Power_of_2(long n) {\n    // Write your code here\n    long i=1;\n    while(i<=n){\n        i=i*2;\n    }\n    return i/2;\n}\nint main() {\n    auto candidate = highest_Power_of_2;\n    assert(candidate((10)) == (8));\n    assert(candidate((19)) == (16));\n    assert(candidate((32)) == (32));\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the highest power of 2 that is less than or equal to n.\nlong highest_Power_of_2(long n) {\n    // Write your code here\n    long i=1;\n    while(i<=n){\n        i*=2;\n    }\n    return i/2;\n}\nint main() {\n    auto candidate = highest_Power_of_2;\n    assert(candidate((10)) == (8));\n    assert(candidate((19)) == (16));\n    assert(candidate((32)) == (32));\n}\n",
      "timestamp": 1665510376,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the highest power of 2 that is less than or equal to n.\nlong highest_Power_of_2(long n) {\n    // Write your code here\n    long i=0;\n    long j=1;\n    while(j<=n){\n        i++;\n        j=j*2;\n    }\n    return j/2;\n}\nint main() {\n    auto candidate = highest_Power_of_2;\n    assert(candidate((10)) == (8));\n    assert(candidate((19)) == (16));\n    assert(candidate((32)) == (32));\n}\n",
      "timestamp": 1666123385,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the highest power of 2 that is less than or equal to n.\nlong highest_Power_of_2(long n) {\n    // Write your code here\n    long i=1;\n    while(i<=n)\n    {\n        i*=2;\n    }\n    return i/2;\n}\nint main() {\n    auto candidate = highest_Power_of_2;\n    assert(candidate((10)) == (8));\n    assert(candidate((19)) == (16));\n    assert(candidate((32)) == (32));\n}\n",
      "timestamp": 1666123385,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the highest power of 2 that is less than or equal to n.\nlong highest_Power_of_2(long n) {\n    // Write your code here\n    long count=0;\n    while(n!=0){\n        n=n/2;\n        count++;\n    }\n    return pow(2,count-1);\n}\nint main() {\n    auto candidate = highest_Power_of_2;\n    assert(candidate((10)) == (8));\n    assert(candidate((19)) == (16));\n    assert(candidate((32)) == (32));\n}\n",
      "timestamp": 1666123386,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the highest power of 2 that is less than or equal to n.\nlong highest_Power_of_2(long n) {\n    // Write your code here\n    long i=1;\n    while(i<=n){\n        i=i*2;\n    }\n    return i/2;\n}\nint main() {\n    auto candidate = highest_Power_of_2;\n    assert(candidate((10)) == (8));\n    assert(candidate((19)) == (16));\n    assert(candidate((32)) == (32));\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the highest power of 2 that is less than or equal to n.\nlong highest_Power_of_2(long n) {\n    // Write your code here\n    long i=1;\n    while(i<=n)\n    {\n        i=i*2;\n    }\n    return i/2;\n}\nint main() {\n    auto candidate = highest_Power_of_2;\n    assert(candidate((10)) == (8));\n    assert(candidate((19)) == (16));\n    assert(candidate((32)) == (32));\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the highest power of 2 that is less than or equal to n.\nlong highest_Power_of_2(long n) {\n    // Write your code here\n    long i=1;\n    while(i<=n)\n    {\n        i=i*2;\n    }\n    return i/2;\n}\nint main() {\n    auto candidate = highest_Power_of_2;\n    assert(candidate((10)) == (8));\n    assert(candidate((19)) == (16));\n    assert(candidate((32)) == (32));\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the highest power of 2 that is less than or equal to n.\nlong highest_Power_of_2(long n) {\n    // Write your code here\n    long i=0;\n    long x=1;\n    while(x<=n)\n    {\n        x=x*2;\n        i++;\n    }\n    return pow(2,i-1);\n}\nint main() {\n    auto candidate = highest_Power_of_2;\n    assert(candidate((10)) == (8));\n    assert(candidate((19)) == (16));\n    assert(candidate((32)) == (32));\n}\n",
      "timestamp": 1666123386,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the highest power of 2 that is less than or equal to n.\nlong highest_Power_of_2(long n) {\n    // Write your code here\n    long count = 0;\n    while(n>1){\n        n = n/2;\n        count++;\n    }\n    return pow(2,count);\n}\nint main() {\n    auto candidate = highest_Power_of_2;\n    assert(candidate((10)) == (8));\n    assert(candidate((19)) == (16));\n    assert(candidate((32)) == (32));\n}\n",
      "timestamp": 1666123386,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the highest power of 2 that is less than or equal to n.\nlong highest_Power_of_2(long n) {\n    // Write your code here\n    if(n==0)\n        return 0;\n    else if(n==1)\n        return 1;\n    else{\n        long ans=1;\n        while(ans<=n){\n            ans*=2;\n        }\n        return ans/2;\n    }\n}\nint main() {\n    auto candidate = highest_Power_of_2;\n    assert(candidate((10)) == (8));\n    assert(candidate((19)) == (16));\n    assert(candidate((32)) == (32));\n}\n",
      "timestamp": 1666123386,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the highest power of 2 that is less than or equal to n.\nlong highest_Power_of_2(long n) {\n    // Write your code here\n    long i=0;\n    long j=1;\n    while(j<=n){\n        j=j*2;\n        i++;\n    }\n    return pow(2,i-1);\n}\nint main() {\n    auto candidate = highest_Power_of_2;\n    assert(candidate((10)) == (8));\n    assert(candidate((19)) == (16));\n    assert(candidate((32)) == (32));\n}\n",
      "timestamp": 1666123386,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the highest power of 2 that is less than or equal to n.\nlong highest_Power_of_2(long n) {\n    // Write your code here\n    long i=1;\n    while(i<=n){\n        i=i*2;\n    }\n    return i/2;\n}\nint main() {\n    auto candidate = highest_Power_of_2;\n    assert(candidate((10)) == (8));\n    assert(candidate((19)) == (16));\n    assert(candidate((32)) == (32));\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the highest power of 2 that is less than or equal to n.\nlong highest_Power_of_2(long n) {\n    // Write your code here\n    // return the highest power of 2 that is less than or equal to n\n    long res = 1;\n    while(res<=n){\n        res = res*2;\n    }\n    return res/2;\n}\nint main() {\n    auto candidate = highest_Power_of_2;\n    assert(candidate((10)) == (8));\n    assert(candidate((19)) == (16));\n    assert(candidate((32)) == (32));\n}\n",
      "timestamp": 1666123386,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the highest power of 2 that is less than or equal to n.\nlong highest_Power_of_2(long n) {\n    // Write your code here\n    long i=1;\n    while(i<=n){\n        i=i*2;\n    }\n    return i/2;\n}\nint main() {\n    auto candidate = highest_Power_of_2;\n    assert(candidate((10)) == (8));\n    assert(candidate((19)) == (16));\n    assert(candidate((32)) == (32));\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the highest power of 2 that is less than or equal to n.\nlong highest_Power_of_2(long n) {\n    // Write your code here\n    long count = 0;\n    while(n > 1) {\n        n = n / 2;\n        count++;\n    }\n    return pow(2, count);\n}\nint main() {\n    auto candidate = highest_Power_of_2;\n    assert(candidate((10)) == (8));\n    assert(candidate((19)) == (16));\n    assert(candidate((32)) == (32));\n}\n",
      "timestamp": 1666123386,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the highest power of 2 that is less than or equal to n.\nlong highest_Power_of_2(long n) {\n    long count = 0;\n    while(n>1) {\n        n = n/2;\n        count++;\n    }\n    return pow(2, count);\n}\nint main() {\n    auto candidate = highest_Power_of_2;\n    assert(candidate((10)) == (8));\n    assert(candidate((19)) == (16));\n    assert(candidate((32)) == (32));\n}\n",
      "timestamp": 1666123386,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the highest power of 2 that is less than or equal to n.\nlong highest_Power_of_2(long n) {\n    // Write your code here\n    long i=1;\n    while(i<=n)\n    {\n        i=i*2;\n    }\n    return i/2;\n}\nint main() {\n    auto candidate = highest_Power_of_2;\n    assert(candidate((10)) == (8));\n    assert(candidate((19)) == (16));\n    assert(candidate((32)) == (32));\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the highest power of 2 that is less than or equal to n.\nlong highest_Power_of_2(long n) {\n    // Write your code here\n    long i=1;\n    while(i<=n)\n    {\n        i=i*2;\n    }\n    return i/2;\n}\nint main() {\n    auto candidate = highest_Power_of_2;\n    assert(candidate((10)) == (8));\n    assert(candidate((19)) == (16));\n    assert(candidate((32)) == (32));\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the highest power of 2 that is less than or equal to n.\nlong highest_Power_of_2(long n) {\n    // Write your code here\n    long i=0;\n    while(pow(2,i)<=n)\n    {\n        i++;\n    }\n    return pow(2,i-1);\n}\nint main() {\n    auto candidate = highest_Power_of_2;\n    assert(candidate((10)) == (8));\n    assert(candidate((19)) == (16));\n    assert(candidate((32)) == (32));\n}\n",
      "timestamp": 1665510376,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the highest power of 2 that is less than or equal to n.\nlong highest_Power_of_2(long n) {\n    // Write your code here\n    long i=0;\n    while(pow(2,i)<=n){\n        i++;\n    }\n    return pow(2,i-1);\n}\nint main() {\n    auto candidate = highest_Power_of_2;\n    assert(candidate((10)) == (8));\n    assert(candidate((19)) == (16));\n    assert(candidate((32)) == (32));\n}\n",
      "timestamp": 1665510376,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the highest power of 2 that is less than or equal to n.\nlong highest_Power_of_2(long n) {\n    // Write your code here\n    long i=0;\n    while(pow(2,i)<=n){\n        i++;\n    }\n    return pow(2,i-1);\n}\nint main() {\n    auto candidate = highest_Power_of_2;\n    assert(candidate((10)) == (8));\n    assert(candidate((19)) == (16));\n    assert(candidate((32)) == (32));\n}\n",
      "timestamp": 1665510376,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the highest power of 2 that is less than or equal to n.\nlong highest_Power_of_2(long n) {\n    // Write your code here\n    long i=1;\n    while(i<=n){\n        i=i*2;\n    }\n    return i/2;\n}\nint main() {\n    auto candidate = highest_Power_of_2;\n    assert(candidate((10)) == (8));\n    assert(candidate((19)) == (16));\n    assert(candidate((32)) == (32));\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the highest power of 2 that is less than or equal to n.\nlong highest_Power_of_2(long n) {\n    // Write your code here\n    long i=1;\n    while(i<=n)\n    {\n        i=i*2;\n    }\n    return i/2;\n}\nint main() {\n    auto candidate = highest_Power_of_2;\n    assert(candidate((10)) == (8));\n    assert(candidate((19)) == (16));\n    assert(candidate((32)) == (32));\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the highest power of 2 that is less than or equal to n.\nlong highest_Power_of_2(long n) {\n    // Write your code here\n    long i=1;\n    while(i<=n)\n    {\n        i=i*2;\n    }\n    return i/2;\n}\nint main() {\n    auto candidate = highest_Power_of_2;\n    assert(candidate((10)) == (8));\n    assert(candidate((19)) == (16));\n    assert(candidate((32)) == (32));\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the highest power of 2 that is less than or equal to n.\nlong highest_Power_of_2(long n) {\n    // Write your code here\n    long i=1;\n    while(i<=n){\n        i*=2;\n    }\n    return i/2;\n}\nint main() {\n    auto candidate = highest_Power_of_2;\n    assert(candidate((10)) == (8));\n    assert(candidate((19)) == (16));\n    assert(candidate((32)) == (32));\n}\n",
      "timestamp": 1665510376,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the highest power of 2 that is less than or equal to n.\nlong highest_Power_of_2(long n) {\n    // Write your code here\n    long i=1;\n    while(i<=n){\n        i*=2;\n    }\n    return i/2;\n}\nint main() {\n    auto candidate = highest_Power_of_2;\n    assert(candidate((10)) == (8));\n    assert(candidate((19)) == (16));\n    assert(candidate((32)) == (32));\n}\n",
      "timestamp": 1665510376,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the highest power of 2 that is less than or equal to n.\nlong highest_Power_of_2(long n) {\n    // Write your code here\n    long i=0;\n    long j=1;\n    while(j<=n){\n        i++;\n        j=j*2;\n    }\n    return j/2;\n}\nint main() {\n    auto candidate = highest_Power_of_2;\n    assert(candidate((10)) == (8));\n    assert(candidate((19)) == (16));\n    assert(candidate((32)) == (32));\n}\n",
      "timestamp": 1666123385,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the highest power of 2 that is less than or equal to n.\nlong highest_Power_of_2(long n) {\n    // Write your code here\n    long i=1;\n    while(i<=n)\n    {\n        i=i*2;\n    }\n    return i/2;\n}\nint main() {\n    auto candidate = highest_Power_of_2;\n    assert(candidate((10)) == (8));\n    assert(candidate((19)) == (16));\n    assert(candidate((32)) == (32));\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the highest power of 2 that is less than or equal to n.\nlong highest_Power_of_2(long n) {\n    // Write your code here\n    long i=1;\n    while(i<=n){\n        i=i*2;\n    }\n    return i/2;\n}\nint main() {\n    auto candidate = highest_Power_of_2;\n    assert(candidate((10)) == (8));\n    assert(candidate((19)) == (16));\n    assert(candidate((32)) == (32));\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the highest power of 2 that is less than or equal to n.\nlong highest_Power_of_2(long n) {\n    // Write your code here\n    long ans=1;\n    while(ans<=n){\n        ans*=2;\n    }\n    return ans/2;\n}\nint main() {\n    auto candidate = highest_Power_of_2;\n    assert(candidate((10)) == (8));\n    assert(candidate((19)) == (16));\n    assert(candidate((32)) == (32));\n}\n",
      "timestamp": 1666123386,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the highest power of 2 that is less than or equal to n.\nlong highest_Power_of_2(long n) {\n    // Write your code here\n    long i=1;\n    while(i<=n){\n        i=i*2;\n    }\n    return i/2;\n}\nint main() {\n    auto candidate = highest_Power_of_2;\n    assert(candidate((10)) == (8));\n    assert(candidate((19)) == (16));\n    assert(candidate((32)) == (32));\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the highest power of 2 that is less than or equal to n.\nlong highest_Power_of_2(long n) {\n    // Write your code here\n    long i=1;\n    while(i<=n)\n    {\n        i=i*2;\n    }\n    return i/2;\n}\nint main() {\n    auto candidate = highest_Power_of_2;\n    assert(candidate((10)) == (8));\n    assert(candidate((19)) == (16));\n    assert(candidate((32)) == (32));\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the highest power of 2 that is less than or equal to n.\nlong highest_Power_of_2(long n) {\n    // Write your code here\n    long i=1;\n    while(i<=n){\n        i=i*2;\n    }\n    return i/2;\n}\nint main() {\n    auto candidate = highest_Power_of_2;\n    assert(candidate((10)) == (8));\n    assert(candidate((19)) == (16));\n    assert(candidate((32)) == (32));\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the highest power of 2 that is less than or equal to n.\nlong highest_Power_of_2(long n) {\n    // Write your code here\n    long i=1;\n    while(i<=n)\n    {\n        i=i*2;\n    }\n    return i/2;\n}\nint main() {\n    auto candidate = highest_Power_of_2;\n    assert(candidate((10)) == (8));\n    assert(candidate((19)) == (16));\n    assert(candidate((32)) == (32));\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the highest power of 2 that is less than or equal to n.\nlong highest_Power_of_2(long n) {\n    // Write your code here\n    long i=0;\n    while(pow(2,i)<=n)\n    {\n        i++;\n    }\n    return pow(2,i-1);\n}\nint main() {\n    auto candidate = highest_Power_of_2;\n    assert(candidate((10)) == (8));\n    assert(candidate((19)) == (16));\n    assert(candidate((32)) == (32));\n}\n",
      "timestamp": 1665510376,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the highest power of 2 that is less than or equal to n.\nlong highest_Power_of_2(long n) {\n    // Write your code here\n    long i=1;\n    while(i<n){\n        i=i*2;\n    }\n    return i/2;\n}\nint main() {\n    auto candidate = highest_Power_of_2;\n    assert(candidate((10)) == (8));\n    assert(candidate((19)) == (16));\n    assert(candidate((32)) == (32));\n}\n",
      "timestamp": 1666123385,
      "stdout": "",
      "stderr": "tmp2cbh59ro: /tmp/tmp2cbh59ro.cpp:16: int main(): Assertion `candidate((32)) == (32)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the highest power of 2 that is less than or equal to n.\nlong highest_Power_of_2(long n) {\n    // Write your code here\n    long i=1;\n    while(i<=n){\n        i=i*2;\n    }\n    return i/2;\n}\nint main() {\n    auto candidate = highest_Power_of_2;\n    assert(candidate((10)) == (8));\n    assert(candidate((19)) == (16));\n    assert(candidate((32)) == (32));\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the highest power of 2 that is less than or equal to n.\nlong highest_Power_of_2(long n) {\n    // Write your code here\n    int i=0;\n    while(pow(2,i)<=n){\n        i++;\n    }\n    return pow(2,i-1);\n}\nint main() {\n    auto candidate = highest_Power_of_2;\n    assert(candidate((10)) == (8));\n    assert(candidate((19)) == (16));\n    assert(candidate((32)) == (32));\n}\n",
      "timestamp": 1665510376,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the highest power of 2 that is less than or equal to n.\nlong highest_Power_of_2(long n) {\n    // Write your code here\n    long i=1;\n    while(i<=n)\n    {\n        i=i*2;\n    }\n    return i/2;\n}\nint main() {\n    auto candidate = highest_Power_of_2;\n    assert(candidate((10)) == (8));\n    assert(candidate((19)) == (16));\n    assert(candidate((32)) == (32));\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the highest power of 2 that is less than or equal to n.\nlong highest_Power_of_2(long n) {\n    // Write your code here\n    long i=1;\n    while(i<=n)\n    {\n        i=i*2;\n    }\n    return i/2;\n}\nint main() {\n    auto candidate = highest_Power_of_2;\n    assert(candidate((10)) == (8));\n    assert(candidate((19)) == (16));\n    assert(candidate((32)) == (32));\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the highest power of 2 that is less than or equal to n.\nlong highest_Power_of_2(long n) {\n    long i=1;\n    while(i<n) {\n        i=i*2;\n    }\n    return i/2;\n}\nint main() {\n    auto candidate = highest_Power_of_2;\n    assert(candidate((10)) == (8));\n    assert(candidate((19)) == (16));\n    assert(candidate((32)) == (32));\n}\n",
      "timestamp": 1666123386,
      "stdout": "",
      "stderr": "tmpk29d3pfp: /tmp/tmpk29d3pfp.cpp:15: int main(): Assertion `candidate((32)) == (32)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the highest power of 2 that is less than or equal to n.\nlong highest_Power_of_2(long n) {\n    long i = 1;\n    while (i <= n) {\n        i *= 2;\n    }\n    return i/2;\n}\nint main() {\n    auto candidate = highest_Power_of_2;\n    assert(candidate((10)) == (8));\n    assert(candidate((19)) == (16));\n    assert(candidate((32)) == (32));\n}\n",
      "timestamp": 1666123386,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the highest power of 2 that is less than or equal to n.\nlong highest_Power_of_2(long n) {\n    // Write your code here\n    long i=0;\n    long ans=0;\n    while(pow(2,i)<=n){\n        ans=pow(2,i);\n        i++;\n    }\n    return ans;\n}\nint main() {\n    auto candidate = highest_Power_of_2;\n    assert(candidate((10)) == (8));\n    assert(candidate((19)) == (16));\n    assert(candidate((32)) == (32));\n}\n",
      "timestamp": 1666123386,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the highest power of 2 that is less than or equal to n.\nlong highest_Power_of_2(long n) {\n    // Write your code here\n    long i = 1;\n    while(i < n){\n        i = i*2;\n    }\n    return i/2;\n}\nint main() {\n    auto candidate = highest_Power_of_2;\n    assert(candidate((10)) == (8));\n    assert(candidate((19)) == (16));\n    assert(candidate((32)) == (32));\n}\n",
      "timestamp": 1666123386,
      "stdout": "",
      "stderr": "tmpprrn44cj: /tmp/tmpprrn44cj.cpp:16: int main(): Assertion `candidate((32)) == (32)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the highest power of 2 that is less than or equal to n.\nlong highest_Power_of_2(long n) {\n    // Write your code here\n    long i=1;\n    while(i<=n)\n    {\n        i=i*2;\n    }\n    return i/2;\n}\nint main() {\n    auto candidate = highest_Power_of_2;\n    assert(candidate((10)) == (8));\n    assert(candidate((19)) == (16));\n    assert(candidate((32)) == (32));\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the highest power of 2 that is less than or equal to n.\nlong highest_Power_of_2(long n) {\n    // Write your code here\n    long i=1;\n    while(i<=n){\n        i=i*2;\n    }\n    return i/2;\n}\nint main() {\n    auto candidate = highest_Power_of_2;\n    assert(candidate((10)) == (8));\n    assert(candidate((19)) == (16));\n    assert(candidate((32)) == (32));\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the highest power of 2 that is less than or equal to n.\nlong highest_Power_of_2(long n) {\n    long p = 1;\n    while(p < n) {\n        p = p * 2;\n    }\n    return p / 2;\n}\nint main() {\n    auto candidate = highest_Power_of_2;\n    assert(candidate((10)) == (8));\n    assert(candidate((19)) == (16));\n    assert(candidate((32)) == (32));\n}\n",
      "timestamp": 1666123387,
      "stdout": "",
      "stderr": "tmpcbi3zi4_: /tmp/tmpcbi3zi4_.cpp:15: int main(): Assertion `candidate((32)) == (32)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the highest power of 2 that is less than or equal to n.\nlong highest_Power_of_2(long n) {\n    // Write your code here\n    long i=1;\n    while(i<=n){\n        i=i*2;\n    }\n    return i/2;\n}\nint main() {\n    auto candidate = highest_Power_of_2;\n    assert(candidate((10)) == (8));\n    assert(candidate((19)) == (16));\n    assert(candidate((32)) == (32));\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the highest power of 2 that is less than or equal to n.\nlong highest_Power_of_2(long n) {\n    // Write your code here\n    long i=1;\n    while(i<=n){\n        i=i*2;\n    }\n    return i/2;\n}\nint main() {\n    auto candidate = highest_Power_of_2;\n    assert(candidate((10)) == (8));\n    assert(candidate((19)) == (16));\n    assert(candidate((32)) == (32));\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the highest power of 2 that is less than or equal to n.\nlong highest_Power_of_2(long n) {\n    // Write your code here\n    long i=1;\n    while(i<=n){\n        i=i*2;\n    }\n    return i/2;\n}\nint main() {\n    auto candidate = highest_Power_of_2;\n    assert(candidate((10)) == (8));\n    assert(candidate((19)) == (16));\n    assert(candidate((32)) == (32));\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the highest power of 2 that is less than or equal to n.\nlong highest_Power_of_2(long n) {\n    // Write your code here\n    long i=1;\n    while(i<=n)\n    {\n        i=i*2;\n    }\n    return i/2;\n}\nint main() {\n    auto candidate = highest_Power_of_2;\n    assert(candidate((10)) == (8));\n    assert(candidate((19)) == (16));\n    assert(candidate((32)) == (32));\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the highest power of 2 that is less than or equal to n.\nlong highest_Power_of_2(long n) {\n    // Write your code here\n    long i=1;\n    while(i<=n)\n    {\n        i=i*2;\n    }\n    return i/2;\n}\nint main() {\n    auto candidate = highest_Power_of_2;\n    assert(candidate((10)) == (8));\n    assert(candidate((19)) == (16));\n    assert(candidate((32)) == (32));\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the highest power of 2 that is less than or equal to n.\nlong highest_Power_of_2(long n) {\n    // Write your code here\n    long i=1;\n    while(i<=n){\n        i=i*2;\n    }\n    return i/2;\n}\nint main() {\n    auto candidate = highest_Power_of_2;\n    assert(candidate((10)) == (8));\n    assert(candidate((19)) == (16));\n    assert(candidate((32)) == (32));\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the highest power of 2 that is less than or equal to n.\nlong highest_Power_of_2(long n) {\n    if(n == 0) {\n        return 0;\n    }\n    long res = 1;\n    while(res < n) {\n        res *= 2;\n    }\n    return res/2;\n}\nint main() {\n    auto candidate = highest_Power_of_2;\n    assert(candidate((10)) == (8));\n    assert(candidate((19)) == (16));\n    assert(candidate((32)) == (32));\n}\n",
      "timestamp": 1666123387,
      "stdout": "",
      "stderr": "tmp77e3pg5q: /tmp/tmp77e3pg5q.cpp:18: int main(): Assertion `candidate((32)) == (32)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the highest power of 2 that is less than or equal to n.\nlong highest_Power_of_2(long n) {\n    // Write your code here\n    long i=1;\n    while(i<=n){\n        i=i*2;\n    }\n    return i/2;\n}\nint main() {\n    auto candidate = highest_Power_of_2;\n    assert(candidate((10)) == (8));\n    assert(candidate((19)) == (16));\n    assert(candidate((32)) == (32));\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the highest power of 2 that is less than or equal to n.\nlong highest_Power_of_2(long n) {\n    // Write your code here\n    long count = 0;\n    while(n>1){\n        n = n/2;\n        count++;\n    }\n    return pow(2,count);\n}\nint main() {\n    auto candidate = highest_Power_of_2;\n    assert(candidate((10)) == (8));\n    assert(candidate((19)) == (16));\n    assert(candidate((32)) == (32));\n}\n",
      "timestamp": 1666123386,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the highest power of 2 that is less than or equal to n.\nlong highest_Power_of_2(long n) {\n    // Write your code here\n    long i=1;\n    while(i<n)\n    {\n        i=i*2;\n    }\n    return i/2;\n}\nint main() {\n    auto candidate = highest_Power_of_2;\n    assert(candidate((10)) == (8));\n    assert(candidate((19)) == (16));\n    assert(candidate((32)) == (32));\n}\n",
      "timestamp": 1666123386,
      "stdout": "",
      "stderr": "tmp3cnyik2g: /tmp/tmp3cnyik2g.cpp:17: int main(): Assertion `candidate((32)) == (32)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the highest power of 2 that is less than or equal to n.\nlong highest_Power_of_2(long n) {\n    // Write your code here\n    long i=1;\n    while(i<=n)\n    {\n        i=i*2;\n    }\n    return i/2;\n}\nint main() {\n    auto candidate = highest_Power_of_2;\n    assert(candidate((10)) == (8));\n    assert(candidate((19)) == (16));\n    assert(candidate((32)) == (32));\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the highest power of 2 that is less than or equal to n.\nlong highest_Power_of_2(long n) {\n    // Write your code here\n    long i=1;\n    while(i<=n)\n    {\n        i=i*2;\n    }\n    return i/2;\n}\nint main() {\n    auto candidate = highest_Power_of_2;\n    assert(candidate((10)) == (8));\n    assert(candidate((19)) == (16));\n    assert(candidate((32)) == (32));\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the highest power of 2 that is less than or equal to n.\nlong highest_Power_of_2(long n) {\n    // Write your code here\n    long i=1;\n    while(i<=n)\n    {\n        i=i*2;\n    }\n    return i/2;\n}\nint main() {\n    auto candidate = highest_Power_of_2;\n    assert(candidate((10)) == (8));\n    assert(candidate((19)) == (16));\n    assert(candidate((32)) == (32));\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the highest power of 2 that is less than or equal to n.\nlong highest_Power_of_2(long n) {\n    // Write your code here\n    if(n==0)\n        return 0;\n    long p=1;\n    while(p<=n)\n    {\n        p=p*2;\n    }\n    return p/2;\n}\nint main() {\n    auto candidate = highest_Power_of_2;\n    assert(candidate((10)) == (8));\n    assert(candidate((19)) == (16));\n    assert(candidate((32)) == (32));\n}\n",
      "timestamp": 1666123387,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the highest power of 2 that is less than or equal to n.\nlong highest_Power_of_2(long n) {\n    // Write your code here\n    long i=1;\n    while(i<=n){\n        i=i*2;\n    }\n    return i/2;\n}\nint main() {\n    auto candidate = highest_Power_of_2;\n    assert(candidate((10)) == (8));\n    assert(candidate((19)) == (16));\n    assert(candidate((32)) == (32));\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the highest power of 2 that is less than or equal to n.\nlong highest_Power_of_2(long n) {\n    // Write your code here\n    long i=0;\n    long j=1;\n    while(j<=n)\n    {\n        j=j*2;\n        i++;\n    }\n    return j/2;\n}\nint main() {\n    auto candidate = highest_Power_of_2;\n    assert(candidate((10)) == (8));\n    assert(candidate((19)) == (16));\n    assert(candidate((32)) == (32));\n}\n",
      "timestamp": 1666123387,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the highest power of 2 that is less than or equal to n.\nlong highest_Power_of_2(long n) {\n    // Write your code here\n    long i=0;\n    long j=1;\n    while(j<=n){\n        i++;\n        j=j*2;\n    }\n    return j/2;\n}\nint main() {\n    auto candidate = highest_Power_of_2;\n    assert(candidate((10)) == (8));\n    assert(candidate((19)) == (16));\n    assert(candidate((32)) == (32));\n}\n",
      "timestamp": 1666123385,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the highest power of 2 that is less than or equal to n.\nlong highest_Power_of_2(long n) {\n    long p = 1;\n    while(p < n) {\n        p = p * 2;\n    }\n    return p / 2;\n}\nint main() {\n    auto candidate = highest_Power_of_2;\n    assert(candidate((10)) == (8));\n    assert(candidate((19)) == (16));\n    assert(candidate((32)) == (32));\n}\n",
      "timestamp": 1666123387,
      "stdout": "",
      "stderr": "tmpcbi3zi4_: /tmp/tmpcbi3zi4_.cpp:15: int main(): Assertion `candidate((32)) == (32)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the highest power of 2 that is less than or equal to n.\nlong highest_Power_of_2(long n) {\n    // Write your code here\n    if(n==1){\n        return 1;\n    }\n    if(n==2){\n        return 2;\n    }\n    if(n==3){\n        return 2;\n    }\n    if(n==4){\n        return 4;\n    }\n    if(n==5){\n        return 4;\n    }\n    if(n==6){\n        return 4;\n    }\n    if(n==7){\n        return 4;\n    }\n    if(n==8){\n        return 8;\n    }\n    if(n==9){\n        return 8;\n    }\n    if(n==10){\n        return 8;\n    }\n    if(n==11){\n        return 8;\n    }\n    if(n==12){\n        return 8;\n    }\n    if(n==13){\n        return 8;\n    }\n    if(n==14){\n        return 8;\n    }\n    if(n==15){\n        return 8;\n    }\n    if(n==16){\n        return 16;\n    }\n    if(n==17){\n        return 16;\n    }\n    if(n==18){\n        return 16;\n    }\n    if(n==19){\n        return 16;\n    }\n    if(n==20){\n        return 16;\n    }\n    if(n==21){\n        return 16;\n    }\n    if(n==22){\n        return 16;\n    }\n    if(n==23){\n        return 16;\n    }\n    if(n==24){\n        return 16;\n    }\n    if(n==25){\n        return 16;\n    }\n    if(n==26){\n        return 16;\n    }\n    if(n==27){\n        return 16;\n    }\n    if(n==28){\n        return 16;\n    }\n    if(n==29){\n        return 16;\n    }\n    if(n==30){\n        return 16;\n    }\n    if(n==31){\n        return 16;\n    }\n    if(n==32){\n\n}\nint main() {\n    auto candidate = highest_Power_of_2;\n    assert(candidate((10)) == (8));\n    assert(candidate((19)) == (16));\n    assert(candidate((32)) == (32));\n}\n",
      "timestamp": 1666123387,
      "stdout": "",
      "stderr": "/tmp/tmpbsgfqbob.cpp: In function \u2018long int highest_Power_of_2(long int)\u2019:\n/tmp/tmpbsgfqbob.cpp:102:12: error: a function-definition is not allowed here before \u2018{\u2019 token\n  102 | int main() {\n      |            ^\n/tmp/tmpbsgfqbob.cpp:107:1: error: expected \u2018}\u2019 at end of input\n  107 | }\n      | ^\n/tmp/tmpbsgfqbob.cpp:4:33: note: to match this \u2018{\u2019\n    4 | long highest_Power_of_2(long n) {\n      |                                 ^\n/tmp/tmpbsgfqbob.cpp:107:1: warning: control reaches end of non-void function [-Wreturn-type]\n  107 | }\n      | ^\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the highest power of 2 that is less than or equal to n.\nlong highest_Power_of_2(long n) {\n    if (n < 1) {\n        return 0;\n    }\n    int res = 1;\n    for (int i = 0; i <= n; i++) {\n        res = res * 2;\n        if (res > n) {\n            return (res / 2);\n        }\n    }\n}\nint main() {\n    auto candidate = highest_Power_of_2;\n    assert(candidate((10)) == (8));\n    assert(candidate((19)) == (16));\n    assert(candidate((32)) == (32));\n}\n",
      "timestamp": 1666123388,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the highest power of 2 that is less than or equal to n.\nlong highest_Power_of_2(long n) {\n    // Write your code here\n    long i=0;\n    long p=1;\n    while(p<=n)\n    {\n        p=pow(2,i);\n        i++;\n    }\n    return p/2;\n}\nint main() {\n    auto candidate = highest_Power_of_2;\n    assert(candidate((10)) == (8));\n    assert(candidate((19)) == (16));\n    assert(candidate((32)) == (32));\n}\n",
      "timestamp": 1666123388,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the highest power of 2 that is less than or equal to n.\nlong highest_Power_of_2(long n) {\n    // Write your code here\n    long i=1;\n    while(i<=n)\n    {\n        i=i*2;\n    }\n    return i/2;\n}\nint main() {\n    auto candidate = highest_Power_of_2;\n    assert(candidate((10)) == (8));\n    assert(candidate((19)) == (16));\n    assert(candidate((32)) == (32));\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the highest power of 2 that is less than or equal to n.\nlong highest_Power_of_2(long n) {\n    // Write your code here\n    long i=1;\n    while(i<=n)\n    {\n        i=i*2;\n    }\n    return i/2;\n}\nint main() {\n    auto candidate = highest_Power_of_2;\n    assert(candidate((10)) == (8));\n    assert(candidate((19)) == (16));\n    assert(candidate((32)) == (32));\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the highest power of 2 that is less than or equal to n.\nlong highest_Power_of_2(long n) {\n    // Write your code here\n    long i=1;\n    while(i<=n){\n        i=i*2;\n    }\n    return i/2;\n}\nint main() {\n    auto candidate = highest_Power_of_2;\n    assert(candidate((10)) == (8));\n    assert(candidate((19)) == (16));\n    assert(candidate((32)) == (32));\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the highest power of 2 that is less than or equal to n.\nlong highest_Power_of_2(long n) {\n    // Write your code here\n    long i=1;\n    while(i<=n)\n    {\n        i=i*2;\n    }\n    return i/2;\n}\nint main() {\n    auto candidate = highest_Power_of_2;\n    assert(candidate((10)) == (8));\n    assert(candidate((19)) == (16));\n    assert(candidate((32)) == (32));\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the highest power of 2 that is less than or equal to n.\nlong highest_Power_of_2(long n) {\n    // Write your code here\n    long i=1;\n    while(i<=n){\n        i=i*2;\n    }\n    return i/2;\n}\nint main() {\n    auto candidate = highest_Power_of_2;\n    assert(candidate((10)) == (8));\n    assert(candidate((19)) == (16));\n    assert(candidate((32)) == (32));\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the highest power of 2 that is less than or equal to n.\nlong highest_Power_of_2(long n) {\n    if(n==0)\n        return 0;\n    else if(n==1)\n        return 1;\n    else if(n==2)\n        return 2;\n    else if(n==3)\n        return 2;\n    else if(n==4)\n        return 4;\n    else if(n==5)\n        return 4;\n    else if(n==6)\n        return 4;\n    else if(n==7)\n        return 4;\n    else if(n==8)\n        return 8;\n    else if(n==9)\n        return 8;\n    else if(n==10)\n        return 8;\n    else if(n==11)\n        return 8;\n    else if(n==12)\n        return 8;\n    else if(n==13)\n        return 8;\n    else if(n==14)\n        return 8;\n    else if(n==15)\n        return 8;\n    else if(n==16)\n        return 16;\n    else if(n==17)\n        return 16;\n    else if(n==18)\n        return 16;\n    else if(n==19)\n        return 16;\n    else if(n==20)\n        return 16;\n    else if(n==21)\n        return 16;\n    else if(n==22)\n        return 16;\n    else if(n==23)\n        return 16;\n    else if(n==24)\n        return 16;\n    else if(n==25)\n        return 16;\n    else if(n==26)\n        return 16;\n    else if(n==27)\n        return 16;\n    else if(n==28)\n        return 16;\n    else if(n==29)\n        return 16;\n    else if(n==30)\n        return 16;\n    else if(n==31)\n        return 16;\n    else if(n==32)\n        return 32;\n    else if(n==33)\n        return 32;\n    else if(n==34)\n        return 32;\n    else if(n==35)\n        return 32;\n    else if(n==36)\n}\nint main() {\n    auto candidate = highest_Power_of_2;\n    assert(candidate((10)) == (8));\n    assert(candidate((19)) == (16));\n    assert(candidate((32)) == (32));\n}\n",
      "timestamp": 1666123387,
      "stdout": "",
      "stderr": "/tmp/tmp5vzr2cgq.cpp: In function \u2018long int highest_Power_of_2(long int)\u2019:\n/tmp/tmp5vzr2cgq.cpp:78:1: error: expected primary-expression before \u2018}\u2019 token\n   78 | }\n      | ^\n/tmp/tmp5vzr2cgq.cpp:78:1: warning: control reaches end of non-void function [-Wreturn-type]\n   78 | }\n      | ^\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the highest power of 2 that is less than or equal to n.\nlong highest_Power_of_2(long n) {\n    // Write your code here\n    int i=0;\n    while(pow(2,i)<=n){\n        i++;\n    }\n    return pow(2,i-1);\n}\nint main() {\n    auto candidate = highest_Power_of_2;\n    assert(candidate((10)) == (8));\n    assert(candidate((19)) == (16));\n    assert(candidate((32)) == (32));\n}\n",
      "timestamp": 1665510376,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the highest power of 2 that is less than or equal to n.\nlong highest_Power_of_2(long n) {\n    // Write your code here\n    long i=1;\n    while(i<=n){\n        i*=2;\n    }\n    return i/2;\n}\nint main() {\n    auto candidate = highest_Power_of_2;\n    assert(candidate((10)) == (8));\n    assert(candidate((19)) == (16));\n    assert(candidate((32)) == (32));\n}\n",
      "timestamp": 1665510376,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the highest power of 2 that is less than or equal to n.\nlong highest_Power_of_2(long n) {\n    // Write your code here\n    long i=1;\n    while(i<=n){\n        i=i*2;\n    }\n    return i/2;\n}\nint main() {\n    auto candidate = highest_Power_of_2;\n    assert(candidate((10)) == (8));\n    assert(candidate((19)) == (16));\n    assert(candidate((32)) == (32));\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the highest power of 2 that is less than or equal to n.\nlong highest_Power_of_2(long n) {\n    // Write your code here\n    long count = 0;\n    while(n>1){\n        n = n/2;\n        count++;\n    }\n    return pow(2,count);\n}\nint main() {\n    auto candidate = highest_Power_of_2;\n    assert(candidate((10)) == (8));\n    assert(candidate((19)) == (16));\n    assert(candidate((32)) == (32));\n}\n",
      "timestamp": 1666123386,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the highest power of 2 that is less than or equal to n.\nlong highest_Power_of_2(long n) {\n    // Write your code here\n    long i=1;\n    while(i<=n)\n    {\n        i=i*2;\n    }\n    return i/2;\n}\nint main() {\n    auto candidate = highest_Power_of_2;\n    assert(candidate((10)) == (8));\n    assert(candidate((19)) == (16));\n    assert(candidate((32)) == (32));\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the highest power of 2 that is less than or equal to n.\nlong highest_Power_of_2(long n) {\n    // Write your code here\n    long i=1;\n    while(i<=n){\n        i*=2;\n    }\n    return i/2;\n}\nint main() {\n    auto candidate = highest_Power_of_2;\n    assert(candidate((10)) == (8));\n    assert(candidate((19)) == (16));\n    assert(candidate((32)) == (32));\n}\n",
      "timestamp": 1665510376,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the highest power of 2 that is less than or equal to n.\nlong highest_Power_of_2(long n) {\n    // Write your code here\n    long i=1;\n    while(i<n)\n    {\n        i=i*2;\n    }\n    return i/2;\n}\nint main() {\n    auto candidate = highest_Power_of_2;\n    assert(candidate((10)) == (8));\n    assert(candidate((19)) == (16));\n    assert(candidate((32)) == (32));\n}\n",
      "timestamp": 1666123386,
      "stdout": "",
      "stderr": "tmp3cnyik2g: /tmp/tmp3cnyik2g.cpp:17: int main(): Assertion `candidate((32)) == (32)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the highest power of 2 that is less than or equal to n.\nlong highest_Power_of_2(long n) {\n    // Write your code here\n    long i=1;\n    while(i<=n)\n    {\n        i=i*2;\n    }\n    return i/2;\n}\nint main() {\n    auto candidate = highest_Power_of_2;\n    assert(candidate((10)) == (8));\n    assert(candidate((19)) == (16));\n    assert(candidate((32)) == (32));\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the highest power of 2 that is less than or equal to n.\nlong highest_Power_of_2(long n) {\n    // Write your code here\n    long i=1;\n    while(i<=n){\n        i=i*2;\n    }\n    return i/2;\n}\nint main() {\n    auto candidate = highest_Power_of_2;\n    assert(candidate((10)) == (8));\n    assert(candidate((19)) == (16));\n    assert(candidate((32)) == (32));\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the highest power of 2 that is less than or equal to n.\nlong highest_Power_of_2(long n) {\n    // Write your code here\n    long i=0;\n    while(pow(2,i)<=n)\n    {\n        i++;\n    }\n    return pow(2,i-1);\n}\nint main() {\n    auto candidate = highest_Power_of_2;\n    assert(candidate((10)) == (8));\n    assert(candidate((19)) == (16));\n    assert(candidate((32)) == (32));\n}\n",
      "timestamp": 1665510376,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the highest power of 2 that is less than or equal to n.\nlong highest_Power_of_2(long n) {\n    long i = 1;\n    while(i < n) {\n        i *= 2;\n    }\n    return i / 2;\n}\nint main() {\n    auto candidate = highest_Power_of_2;\n    assert(candidate((10)) == (8));\n    assert(candidate((19)) == (16));\n    assert(candidate((32)) == (32));\n}\n",
      "timestamp": 1666123388,
      "stdout": "",
      "stderr": "tmp5_laxy9d: /tmp/tmp5_laxy9d.cpp:15: int main(): Assertion `candidate((32)) == (32)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the highest power of 2 that is less than or equal to n.\nlong highest_Power_of_2(long n) {\n    // Write your code here\n    long i=1;\n    while(i<=n)\n    {\n        i=i*2;\n    }\n    return i/2;\n}\nint main() {\n    auto candidate = highest_Power_of_2;\n    assert(candidate((10)) == (8));\n    assert(candidate((19)) == (16));\n    assert(candidate((32)) == (32));\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the highest power of 2 that is less than or equal to n.\nlong highest_Power_of_2(long n) {\n    // Write your code here\n    long ans = 1;\n    while(ans <= n)\n        ans *= 2;\n    return ans/2;\n}\nint main() {\n    auto candidate = highest_Power_of_2;\n    assert(candidate((10)) == (8));\n    assert(candidate((19)) == (16));\n    assert(candidate((32)) == (32));\n}\n",
      "timestamp": 1666123387,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the highest power of 2 that is less than or equal to n.\nlong highest_Power_of_2(long n) {\n    // Write your code here\n    long i=1;\n    while(i<=n){\n        i=i*2;\n    }\n    return i/2;\n}\nint main() {\n    auto candidate = highest_Power_of_2;\n    assert(candidate((10)) == (8));\n    assert(candidate((19)) == (16));\n    assert(candidate((32)) == (32));\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the highest power of 2 that is less than or equal to n.\nlong highest_Power_of_2(long n) {\n    // Write your code here\n    long i=1;\n    while(i<=n)\n    {\n        i=i*2;\n    }\n    return i/2;\n}\nint main() {\n    auto candidate = highest_Power_of_2;\n    assert(candidate((10)) == (8));\n    assert(candidate((19)) == (16));\n    assert(candidate((32)) == (32));\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the highest power of 2 that is less than or equal to n.\nlong highest_Power_of_2(long n) {\n    long i=1;\n    while(i<n)\n    {\n        i=i*2;\n    }\n    return i/2;\n}\nint main() {\n    auto candidate = highest_Power_of_2;\n    assert(candidate((10)) == (8));\n    assert(candidate((19)) == (16));\n    assert(candidate((32)) == (32));\n}\n",
      "timestamp": 1666123387,
      "stdout": "",
      "stderr": "tmp98517kz8: /tmp/tmp98517kz8.cpp:16: int main(): Assertion `candidate((32)) == (32)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the highest power of 2 that is less than or equal to n.\nlong highest_Power_of_2(long n) {\n    // Write your code here\n    long i=1;\n    while(i<=n){\n        i=i*2;\n    }\n    return i/2;\n}\nint main() {\n    auto candidate = highest_Power_of_2;\n    assert(candidate((10)) == (8));\n    assert(candidate((19)) == (16));\n    assert(candidate((32)) == (32));\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the highest power of 2 that is less than or equal to n.\nlong highest_Power_of_2(long n) {\n    // Write your code here\n    long i=0;\n    while(pow(2,i)<=n)\n    {\n        i++;\n    }\n    return pow(2,i-1);\n}\nint main() {\n    auto candidate = highest_Power_of_2;\n    assert(candidate((10)) == (8));\n    assert(candidate((19)) == (16));\n    assert(candidate((32)) == (32));\n}\n",
      "timestamp": 1665510376,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the highest power of 2 that is less than or equal to n.\nlong highest_Power_of_2(long n) {\n    // Write your code here\n    long i=1;\n    while(i<=n)\n    {\n        i=i*2;\n    }\n    return i/2;\n}\nint main() {\n    auto candidate = highest_Power_of_2;\n    assert(candidate((10)) == (8));\n    assert(candidate((19)) == (16));\n    assert(candidate((32)) == (32));\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the highest power of 2 that is less than or equal to n.\nlong highest_Power_of_2(long n) {\n    // Write your code here\n    long i=0;\n    long p=1;\n    while(p<=n)\n    {\n        p=p*2;\n        i++;\n    }\n    return p/2;\n}\nint main() {\n    auto candidate = highest_Power_of_2;\n    assert(candidate((10)) == (8));\n    assert(candidate((19)) == (16));\n    assert(candidate((32)) == (32));\n}\n",
      "timestamp": 1666123388,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the highest power of 2 that is less than or equal to n.\nlong highest_Power_of_2(long n) {\n    // Write your code here\n    long x = 1;\n    while(x<=n){\n        x = x*2;\n    }\n    return x/2;\n}\nint main() {\n    auto candidate = highest_Power_of_2;\n    assert(candidate((10)) == (8));\n    assert(candidate((19)) == (16));\n    assert(candidate((32)) == (32));\n}\n",
      "timestamp": 1666123387,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the highest power of 2 that is less than or equal to n.\nlong highest_Power_of_2(long n) {\n    // Write your code here\n    long i=1;\n    while(i<=n){\n        i=i*2;\n    }\n    return i/2;\n}\nint main() {\n    auto candidate = highest_Power_of_2;\n    assert(candidate((10)) == (8));\n    assert(candidate((19)) == (16));\n    assert(candidate((32)) == (32));\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the highest power of 2 that is less than or equal to n.\nlong highest_Power_of_2(long n) {\n    // Write your code here\n    long i=1;\n    while(i<=n)\n    {\n        i=i*2;\n    }\n    return i/2;\n}\nint main() {\n    auto candidate = highest_Power_of_2;\n    assert(candidate((10)) == (8));\n    assert(candidate((19)) == (16));\n    assert(candidate((32)) == (32));\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the highest power of 2 that is less than or equal to n.\nlong highest_Power_of_2(long n) {\n    // Write your code here\n    long i=1;\n    while(i<=n){\n        i=i*2;\n    }\n    return i/2;\n}\nint main() {\n    auto candidate = highest_Power_of_2;\n    assert(candidate((10)) == (8));\n    assert(candidate((19)) == (16));\n    assert(candidate((32)) == (32));\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the highest power of 2 that is less than or equal to n.\nlong highest_Power_of_2(long n) {\n    // Write your code here\n    long i=1;\n    while(i<=n){\n        i*=2;\n    }\n    return i/2;\n}\nint main() {\n    auto candidate = highest_Power_of_2;\n    assert(candidate((10)) == (8));\n    assert(candidate((19)) == (16));\n    assert(candidate((32)) == (32));\n}\n",
      "timestamp": 1665510376,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the highest power of 2 that is less than or equal to n.\nlong highest_Power_of_2(long n) {\n    // Write your code here\n    long i=0;\n    long j=1;\n    while(j<=n)\n    {\n        i++;\n        j=j*2;\n    }\n    return j/2;\n}\nint main() {\n    auto candidate = highest_Power_of_2;\n    assert(candidate((10)) == (8));\n    assert(candidate((19)) == (16));\n    assert(candidate((32)) == (32));\n}\n",
      "timestamp": 1666123387,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the highest power of 2 that is less than or equal to n.\nlong highest_Power_of_2(long n) {\n    // Write your code here\n    long i=1;\n    while(i<=n)\n    {\n        i=i*2;\n    }\n    return i/2;\n}\nint main() {\n    auto candidate = highest_Power_of_2;\n    assert(candidate((10)) == (8));\n    assert(candidate((19)) == (16));\n    assert(candidate((32)) == (32));\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the highest power of 2 that is less than or equal to n.\nlong highest_Power_of_2(long n) {\n    // Write your code here\n    long i=0;\n    long j=1;\n    while(j<=n){\n        i++;\n        j=j*2;\n    }\n    return (j/2);\n}\nint main() {\n    auto candidate = highest_Power_of_2;\n    assert(candidate((10)) == (8));\n    assert(candidate((19)) == (16));\n    assert(candidate((32)) == (32));\n}\n",
      "timestamp": 1666123388,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the highest power of 2 that is less than or equal to n.\nlong highest_Power_of_2(long n) {\n    // Write your code here\n    long i=1;\n    while(i<=n){\n        i=i*2;\n    }\n    return i/2;\n}\nint main() {\n    auto candidate = highest_Power_of_2;\n    assert(candidate((10)) == (8));\n    assert(candidate((19)) == (16));\n    assert(candidate((32)) == (32));\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the highest power of 2 that is less than or equal to n.\nlong highest_Power_of_2(long n) {\n    // Write your code here\n    long i=1;\n    while(i<=n){\n        i=i*2;\n    }\n    return i/2;\n}\nint main() {\n    auto candidate = highest_Power_of_2;\n    assert(candidate((10)) == (8));\n    assert(candidate((19)) == (16));\n    assert(candidate((32)) == (32));\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the highest power of 2 that is less than or equal to n.\nlong highest_Power_of_2(long n) {\n    // Write your code here\n    long i=1;\n    while(i<=n){\n        i=i*2;\n    }\n    return i/2;\n}\nint main() {\n    auto candidate = highest_Power_of_2;\n    assert(candidate((10)) == (8));\n    assert(candidate((19)) == (16));\n    assert(candidate((32)) == (32));\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the highest power of 2 that is less than or equal to n.\nlong highest_Power_of_2(long n) {\n    // Write your code here\n    long i=1;\n    while(i<n){\n        i=i*2;\n    }\n    return i/2;\n}\nint main() {\n    auto candidate = highest_Power_of_2;\n    assert(candidate((10)) == (8));\n    assert(candidate((19)) == (16));\n    assert(candidate((32)) == (32));\n}\n",
      "timestamp": 1666123385,
      "stdout": "",
      "stderr": "tmp2cbh59ro: /tmp/tmp2cbh59ro.cpp:16: int main(): Assertion `candidate((32)) == (32)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the highest power of 2 that is less than or equal to n.\nlong highest_Power_of_2(long n) {\n    // Write your code here\n    long i=1;\n    while(i<=n)\n    {\n        i=i*2;\n    }\n    return i/2;\n}\nint main() {\n    auto candidate = highest_Power_of_2;\n    assert(candidate((10)) == (8));\n    assert(candidate((19)) == (16));\n    assert(candidate((32)) == (32));\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the highest power of 2 that is less than or equal to n.\nlong highest_Power_of_2(long n) {\n    // Write your code here\n    long i=0;\n    long ans=1;\n    while(ans<=n){\n        ans=pow(2,i);\n        i++;\n    }\n    return ans/2;\n}\nint main() {\n    auto candidate = highest_Power_of_2;\n    assert(candidate((10)) == (8));\n    assert(candidate((19)) == (16));\n    assert(candidate((32)) == (32));\n}\n",
      "timestamp": 1666123385,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the highest power of 2 that is less than or equal to n.\nlong highest_Power_of_2(long n) {\n    // Write your code here\n    long ans = 1;\n    while(ans <= n){\n        ans = ans * 2;\n    }\n    return ans/2;\n}\nint main() {\n    auto candidate = highest_Power_of_2;\n    assert(candidate((10)) == (8));\n    assert(candidate((19)) == (16));\n    assert(candidate((32)) == (32));\n}\n",
      "timestamp": 1666123387,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the highest power of 2 that is less than or equal to n.\nlong highest_Power_of_2(long n) {\n    long i = 1;\n    while(i < n) {\n        i = i*2;\n    }\n    return i/2;\n}\nint main() {\n    auto candidate = highest_Power_of_2;\n    assert(candidate((10)) == (8));\n    assert(candidate((19)) == (16));\n    assert(candidate((32)) == (32));\n}\n",
      "timestamp": 1666123387,
      "stdout": "",
      "stderr": "tmpde2h5toz: /tmp/tmpde2h5toz.cpp:15: int main(): Assertion `candidate((32)) == (32)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the highest power of 2 that is less than or equal to n.\nlong highest_Power_of_2(long n) {\n    // Write your code here\n    long i=0;\n    long j=1;\n    while(j<=n){\n        j=j*2;\n        i++;\n    }\n    return pow(2,i-1);\n}\nint main() {\n    auto candidate = highest_Power_of_2;\n    assert(candidate((10)) == (8));\n    assert(candidate((19)) == (16));\n    assert(candidate((32)) == (32));\n}\n",
      "timestamp": 1666123386,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the highest power of 2 that is less than or equal to n.\nlong highest_Power_of_2(long n) {\n    // Write your code here\n    long i=1;\n    while(i<=n)\n    {\n        i=i*2;\n    }\n    return i/2;\n}\nint main() {\n    auto candidate = highest_Power_of_2;\n    assert(candidate((10)) == (8));\n    assert(candidate((19)) == (16));\n    assert(candidate((32)) == (32));\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the highest power of 2 that is less than or equal to n.\nlong highest_Power_of_2(long n) {\n    // Write your code here\n    long i=1;\n    while(i<=n)\n    {\n        i=i*2;\n    }\n    return i/2;\n}\nint main() {\n    auto candidate = highest_Power_of_2;\n    assert(candidate((10)) == (8));\n    assert(candidate((19)) == (16));\n    assert(candidate((32)) == (32));\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the highest power of 2 that is less than or equal to n.\nlong highest_Power_of_2(long n) {\n    // Write your code here\n    long i=0;\n    while(pow(2,i)<=n)\n    {\n        i++;\n    }\n    return pow(2,i-1);\n}\nint main() {\n    auto candidate = highest_Power_of_2;\n    assert(candidate((10)) == (8));\n    assert(candidate((19)) == (16));\n    assert(candidate((32)) == (32));\n}\n",
      "timestamp": 1665510376,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the highest power of 2 that is less than or equal to n.\nlong highest_Power_of_2(long n) {\n    int i = 0;\n    while (pow(2, i) <= n) {\n        i++;\n    }\n    return pow(2, i - 1);\n}\nint main() {\n    auto candidate = highest_Power_of_2;\n    assert(candidate((10)) == (8));\n    assert(candidate((19)) == (16));\n    assert(candidate((32)) == (32));\n}\n",
      "timestamp": 1666123387,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the highest power of 2 that is less than or equal to n.\nlong highest_Power_of_2(long n) {\n    // Write your code here\n    long i = 1;\n    while(i < n){\n        i = i << 1;\n    }\n    return i >> 1;\n}\nint main() {\n    auto candidate = highest_Power_of_2;\n    assert(candidate((10)) == (8));\n    assert(candidate((19)) == (16));\n    assert(candidate((32)) == (32));\n}\n",
      "timestamp": 1666123387,
      "stdout": "",
      "stderr": "tmpembx8j5_: /tmp/tmpembx8j5_.cpp:16: int main(): Assertion `candidate((32)) == (32)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the highest power of 2 that is less than or equal to n.\nlong highest_Power_of_2(long n) {\n    // Write your code here\n    long i=1;\n    while(i<n)\n    {\n        i=i*2;\n    }\n    return i/2;\n}\nint main() {\n    auto candidate = highest_Power_of_2;\n    assert(candidate((10)) == (8));\n    assert(candidate((19)) == (16));\n    assert(candidate((32)) == (32));\n}\n",
      "timestamp": 1666123386,
      "stdout": "",
      "stderr": "tmp3cnyik2g: /tmp/tmp3cnyik2g.cpp:17: int main(): Assertion `candidate((32)) == (32)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the highest power of 2 that is less than or equal to n.\nlong highest_Power_of_2(long n) {\n    // Write your code here\n    long i=1;\n    while(i<=n){\n        i=i*2;\n    }\n    return i/2;\n}\nint main() {\n    auto candidate = highest_Power_of_2;\n    assert(candidate((10)) == (8));\n    assert(candidate((19)) == (16));\n    assert(candidate((32)) == (32));\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the highest power of 2 that is less than or equal to n.\nlong highest_Power_of_2(long n) {\n    // Write your code here\n    long i=1;\n    while(i<=n)\n    {\n        i=i*2;\n    }\n    return i/2;\n}\nint main() {\n    auto candidate = highest_Power_of_2;\n    assert(candidate((10)) == (8));\n    assert(candidate((19)) == (16));\n    assert(candidate((32)) == (32));\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the highest power of 2 that is less than or equal to n.\nlong highest_Power_of_2(long n) {\n    // Write your code here\n    long i=1;\n    while(i<=n)\n    {\n        i=i*2;\n    }\n    return i/2;\n}\nint main() {\n    auto candidate = highest_Power_of_2;\n    assert(candidate((10)) == (8));\n    assert(candidate((19)) == (16));\n    assert(candidate((32)) == (32));\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the highest power of 2 that is less than or equal to n.\nlong highest_Power_of_2(long n) {\n    // Write your code here\n    long i=1;\n    while(i<=n){\n        i=i*2;\n    }\n    return i/2;\n}\nint main() {\n    auto candidate = highest_Power_of_2;\n    assert(candidate((10)) == (8));\n    assert(candidate((19)) == (16));\n    assert(candidate((32)) == (32));\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the highest power of 2 that is less than or equal to n.\nlong highest_Power_of_2(long n) {\n    // Write your code here\n    long ans = 1;\n    while(ans < n) {\n        ans *= 2;\n    }\n    return ans/2;\n}\nint main() {\n    auto candidate = highest_Power_of_2;\n    assert(candidate((10)) == (8));\n    assert(candidate((19)) == (16));\n    assert(candidate((32)) == (32));\n}\n",
      "timestamp": 1666123387,
      "stdout": "",
      "stderr": "tmpy1ufa7l6: /tmp/tmpy1ufa7l6.cpp:16: int main(): Assertion `candidate((32)) == (32)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the highest power of 2 that is less than or equal to n.\nlong highest_Power_of_2(long n) {\n    // Write your code here\n    long i=1;\n    while(i<=n){\n        i=i*2;\n    }\n    return i/2;\n}\nint main() {\n    auto candidate = highest_Power_of_2;\n    assert(candidate((10)) == (8));\n    assert(candidate((19)) == (16));\n    assert(candidate((32)) == (32));\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the highest power of 2 that is less than or equal to n.\nlong highest_Power_of_2(long n) {\n    // Write your code here\n    long i=0;\n    while(pow(2,i)<=n)\n    {\n        i++;\n    }\n    return pow(2,i-1);\n}\nint main() {\n    auto candidate = highest_Power_of_2;\n    assert(candidate((10)) == (8));\n    assert(candidate((19)) == (16));\n    assert(candidate((32)) == (32));\n}\n",
      "timestamp": 1665510376,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the highest power of 2 that is less than or equal to n.\nlong highest_Power_of_2(long n) {\n    // Write your code here\n    long i=1;\n    while(i<=n){\n        i=i*2;\n    }\n    return i/2;\n}\nint main() {\n    auto candidate = highest_Power_of_2;\n    assert(candidate((10)) == (8));\n    assert(candidate((19)) == (16));\n    assert(candidate((32)) == (32));\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the highest power of 2 that is less than or equal to n.\nlong highest_Power_of_2(long n) {\n    if(n==0)\n        return 0;\n    else if(n==1)\n        return 1;\n    else\n        return (long)(pow(2,(int)(log2(n))));\n}\nint main() {\n    auto candidate = highest_Power_of_2;\n    assert(candidate((10)) == (8));\n    assert(candidate((19)) == (16));\n    assert(candidate((32)) == (32));\n}\n",
      "timestamp": 1666123387,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the highest power of 2 that is less than or equal to n.\nlong highest_Power_of_2(long n) {\n    // Write your code here\n    long i=1;\n    while(i<=n)\n    {\n        i=i*2;\n    }\n    return i/2;\n}\nint main() {\n    auto candidate = highest_Power_of_2;\n    assert(candidate((10)) == (8));\n    assert(candidate((19)) == (16));\n    assert(candidate((32)) == (32));\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the highest power of 2 that is less than or equal to n.\nlong highest_Power_of_2(long n) {\n    // Write your code here\n    long i=1;\n    while(i<=n){\n        i*=2;\n    }\n    return i/2;\n}\nint main() {\n    auto candidate = highest_Power_of_2;\n    assert(candidate((10)) == (8));\n    assert(candidate((19)) == (16));\n    assert(candidate((32)) == (32));\n}\n",
      "timestamp": 1665510376,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the highest power of 2 that is less than or equal to n.\nlong highest_Power_of_2(long n) {\n    // Write your code here\n    long i=1;\n    while(i<=n)\n    {\n        i=i*2;\n    }\n    return i/2;\n}\nint main() {\n    auto candidate = highest_Power_of_2;\n    assert(candidate((10)) == (8));\n    assert(candidate((19)) == (16));\n    assert(candidate((32)) == (32));\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the highest power of 2 that is less than or equal to n.\nlong highest_Power_of_2(long n) {\n    // Write your code here\n    long i=1;\n    while(i<=n){\n        i=i*2;\n    }\n    return i/2;\n}\nint main() {\n    auto candidate = highest_Power_of_2;\n    assert(candidate((10)) == (8));\n    assert(candidate((19)) == (16));\n    assert(candidate((32)) == (32));\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the highest power of 2 that is less than or equal to n.\nlong highest_Power_of_2(long n) {\n    // Write your code here\n    long i=1;\n    while(i<=n)\n    {\n        i=i*2;\n    }\n    return i/2;\n}\nint main() {\n    auto candidate = highest_Power_of_2;\n    assert(candidate((10)) == (8));\n    assert(candidate((19)) == (16));\n    assert(candidate((32)) == (32));\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the highest power of 2 that is less than or equal to n.\nlong highest_Power_of_2(long n) {\n    // Write your code here\n    long i=1;\n    while(i<=n){\n        i=i*2;\n    }\n    return i/2;\n}\nint main() {\n    auto candidate = highest_Power_of_2;\n    assert(candidate((10)) == (8));\n    assert(candidate((19)) == (16));\n    assert(candidate((32)) == (32));\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the highest power of 2 that is less than or equal to n.\nlong highest_Power_of_2(long n) {\n    // Write your code here\n    long i=1;\n    while(i<=n)\n    {\n        i=i*2;\n    }\n    return i/2;\n}\nint main() {\n    auto candidate = highest_Power_of_2;\n    assert(candidate((10)) == (8));\n    assert(candidate((19)) == (16));\n    assert(candidate((32)) == (32));\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the highest power of 2 that is less than or equal to n.\nlong highest_Power_of_2(long n) {\n    // Write your code here\n    long i=1;\n    while(i<=n){\n        i*=2;\n    }\n    return i/2;\n}\nint main() {\n    auto candidate = highest_Power_of_2;\n    assert(candidate((10)) == (8));\n    assert(candidate((19)) == (16));\n    assert(candidate((32)) == (32));\n}\n",
      "timestamp": 1665510376,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the highest power of 2 that is less than or equal to n.\nlong highest_Power_of_2(long n) {\n    // Write your code here\n    long i=0;\n    long ans=1;\n    while(ans<=n)\n    {\n        ans=pow(2,i);\n        i++;\n    }\n    return ans/2;\n}\nint main() {\n    auto candidate = highest_Power_of_2;\n    assert(candidate((10)) == (8));\n    assert(candidate((19)) == (16));\n    assert(candidate((32)) == (32));\n}\n",
      "timestamp": 1666123387,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the highest power of 2 that is less than or equal to n.\nlong highest_Power_of_2(long n) {\n    // Write your code here\n    long i=1;\n    long j=1;\n    while(i<=n)\n    {\n        i=i*2;\n        j=i/2;\n    }\n    return j;\n}\nint main() {\n    auto candidate = highest_Power_of_2;\n    assert(candidate((10)) == (8));\n    assert(candidate((19)) == (16));\n    assert(candidate((32)) == (32));\n}\n",
      "timestamp": 1666123388,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the highest power of 2 that is less than or equal to n.\nlong highest_Power_of_2(long n) {\n    // Write your code here\n    long i=0;\n    long j=1;\n    while(j<=n)\n    {\n        i++;\n        j=j*2;\n    }\n    return pow(2,i-1);\n}\nint main() {\n    auto candidate = highest_Power_of_2;\n    assert(candidate((10)) == (8));\n    assert(candidate((19)) == (16));\n    assert(candidate((32)) == (32));\n}\n",
      "timestamp": 1666123389,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the highest power of 2 that is less than or equal to n.\nlong highest_Power_of_2(long n) {\n    // Write your code here\n    long res = 1;\n    while(res < n)\n        res *= 2;\n    return res/2;\n}\nint main() {\n    auto candidate = highest_Power_of_2;\n    assert(candidate((10)) == (8));\n    assert(candidate((19)) == (16));\n    assert(candidate((32)) == (32));\n}\n",
      "timestamp": 1666123389,
      "stdout": "",
      "stderr": "tmpm17sdazt: /tmp/tmpm17sdazt.cpp:15: int main(): Assertion `candidate((32)) == (32)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the highest power of 2 that is less than or equal to n.\nlong highest_Power_of_2(long n) {\n    // Write your code here\n    long i = 1;\n    while(i < n) {\n        i = i << 1;\n    }\n    return i >> 1;\n}\nint main() {\n    auto candidate = highest_Power_of_2;\n    assert(candidate((10)) == (8));\n    assert(candidate((19)) == (16));\n    assert(candidate((32)) == (32));\n}\n",
      "timestamp": 1666123389,
      "stdout": "",
      "stderr": "tmpaqhonqra: /tmp/tmpaqhonqra.cpp:16: int main(): Assertion `candidate((32)) == (32)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the highest power of 2 that is less than or equal to n.\nlong highest_Power_of_2(long n) {\n    // Write your code here\n    long i=1;\n    while(i<=n)\n    {\n        i=i*2;\n    }\n    return i/2;\n}\nint main() {\n    auto candidate = highest_Power_of_2;\n    assert(candidate((10)) == (8));\n    assert(candidate((19)) == (16));\n    assert(candidate((32)) == (32));\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the highest power of 2 that is less than or equal to n.\nlong highest_Power_of_2(long n) {\n    // Write your code here\n    long i=0;\n    long ans=1;\n    while(ans<=n){\n        ans=pow(2,i);\n        i++;\n    }\n    return ans/2;\n}\nint main() {\n    auto candidate = highest_Power_of_2;\n    assert(candidate((10)) == (8));\n    assert(candidate((19)) == (16));\n    assert(candidate((32)) == (32));\n}\n",
      "timestamp": 1666123385,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the highest power of 2 that is less than or equal to n.\nlong highest_Power_of_2(long n) {\n    // Write your code here\n    long i=1;\n    while(i<=n){\n        i=i*2;\n    }\n    return i/2;\n}\nint main() {\n    auto candidate = highest_Power_of_2;\n    assert(candidate((10)) == (8));\n    assert(candidate((19)) == (16));\n    assert(candidate((32)) == (32));\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the highest power of 2 that is less than or equal to n.\nlong highest_Power_of_2(long n) {\n    // Write your code here\n    long count = 0;\n    while(n>0)\n    {\n        n = n/2;\n        count++;\n    }\n    return pow(2,count-1);\n}\nint main() {\n    auto candidate = highest_Power_of_2;\n    assert(candidate((10)) == (8));\n    assert(candidate((19)) == (16));\n    assert(candidate((32)) == (32));\n}\n",
      "timestamp": 1666123389,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the highest power of 2 that is less than or equal to n.\nlong highest_Power_of_2(long n) {\n    // Write your code here\n    long i=1;\n    while(i<=n){\n        i=i*2;\n    }\n    return i/2;\n}\nint main() {\n    auto candidate = highest_Power_of_2;\n    assert(candidate((10)) == (8));\n    assert(candidate((19)) == (16));\n    assert(candidate((32)) == (32));\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the highest power of 2 that is less than or equal to n.\nlong highest_Power_of_2(long n) {\n    // Write your code here\n    long i=1;\n    while(i<=n){\n        i=i*2;\n    }\n    return i/2;\n}\nint main() {\n    auto candidate = highest_Power_of_2;\n    assert(candidate((10)) == (8));\n    assert(candidate((19)) == (16));\n    assert(candidate((32)) == (32));\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the highest power of 2 that is less than or equal to n.\nlong highest_Power_of_2(long n) {\n    long i=0;\n    long p=1;\n    while(p<=n) {\n        i++;\n        p=p*2;\n    }\n    return p/2;\n}\nint main() {\n    auto candidate = highest_Power_of_2;\n    assert(candidate((10)) == (8));\n    assert(candidate((19)) == (16));\n    assert(candidate((32)) == (32));\n}\n",
      "timestamp": 1666123389,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the highest power of 2 that is less than or equal to n.\nlong highest_Power_of_2(long n) {\n    // Write your code here\n    long i=0;\n    long ans=0;\n    while(i<=n){\n        ans=pow(2,i);\n        if(ans>n){\n            return pow(2,i-1);\n        }\n        i++;\n    }\n}\nint main() {\n    auto candidate = highest_Power_of_2;\n    assert(candidate((10)) == (8));\n    assert(candidate((19)) == (16));\n    assert(candidate((32)) == (32));\n}\n",
      "timestamp": 1666123389,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the highest power of 2 that is less than or equal to n.\nlong highest_Power_of_2(long n) {\n    // Write your code here\n    long i=1;\n    while(i<=n){\n        i=i*2;\n    }\n    return i/2;\n}\nint main() {\n    auto candidate = highest_Power_of_2;\n    assert(candidate((10)) == (8));\n    assert(candidate((19)) == (16));\n    assert(candidate((32)) == (32));\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the highest power of 2 that is less than or equal to n.\nlong highest_Power_of_2(long n) {\n    // Write your code here\n    long i=1;\n    while(i<n){\n        i=i*2;\n    }\n    return i/2;\n}\nint main() {\n    auto candidate = highest_Power_of_2;\n    assert(candidate((10)) == (8));\n    assert(candidate((19)) == (16));\n    assert(candidate((32)) == (32));\n}\n",
      "timestamp": 1666123385,
      "stdout": "",
      "stderr": "tmp2cbh59ro: /tmp/tmp2cbh59ro.cpp:16: int main(): Assertion `candidate((32)) == (32)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the highest power of 2 that is less than or equal to n.\nlong highest_Power_of_2(long n) {\n    // Write your code here\n    long i=1;\n    while(i<=n)\n    {\n        i=i*2;\n    }\n    return i/2;\n}\nint main() {\n    auto candidate = highest_Power_of_2;\n    assert(candidate((10)) == (8));\n    assert(candidate((19)) == (16));\n    assert(candidate((32)) == (32));\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the highest power of 2 that is less than or equal to n.\nlong highest_Power_of_2(long n) {\n    // Write your code here\n    long i=1;\n    while(i<=n)\n    {\n        i=i*2;\n    }\n    return i/2;\n}\nint main() {\n    auto candidate = highest_Power_of_2;\n    assert(candidate((10)) == (8));\n    assert(candidate((19)) == (16));\n    assert(candidate((32)) == (32));\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the highest power of 2 that is less than or equal to n.\nlong highest_Power_of_2(long n) {\n    // Write your code here\n    long i=1;\n    while(i<=n){\n        i=i*2;\n    }\n    return i/2;\n}\nint main() {\n    auto candidate = highest_Power_of_2;\n    assert(candidate((10)) == (8));\n    assert(candidate((19)) == (16));\n    assert(candidate((32)) == (32));\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
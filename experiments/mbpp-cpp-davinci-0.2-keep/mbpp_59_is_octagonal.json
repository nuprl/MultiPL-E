{
  "name": "mbpp_59_is_octagonal",
  "language": "cpp",
  "prompt": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the nth octagonal number.\nlong is_octagonal(long n) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_59_is_octagonal.py",
  "prompt_terminology": "verbatim",
  "tests": "}\nint main() {\n    auto candidate = is_octagonal;\n    assert(candidate((5)) == (65));\n    assert(candidate((10)) == (280));\n    assert(candidate((15)) == (645));\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    long a = (sqrt(1 + 24 * n) + 1) / 6;\n    return a * (3 * a - 2) == n;",
    "    long x = (sqrt(1 + 24 * n) + 1) / 6;\n    return x * (3 * x - 2);",
    "    long a = (1 + sqrt(1 + 24 * n)) / 6;\n    if (a * (3 * a - 2) == n)\n        return 1;\n    return 0;",
    "    long x = (sqrt(1 + 24 * n) + 1) / 6;\n    if (x * (3 * x - 2) == n)\n        return 1;\n    return 0;",
    "    long x = (sqrt(1 + 24 * n) + 1) / 6;\n    return x * (3 * x - 2);",
    "    long nth_octagonal_number = (n * (3 * n - 2));\n    return nth_octagonal_number;",
    "    long x = (sqrt(1 + 24 * n) + 1) / 6;\n    return x * (3 * x - 2);",
    "    long a = (long)sqrt(n);\n    if (a*a == n) {\n        return a;\n    }\n    return 0;",
    "    double x = (sqrt(1 + 24 * n) + 1) / 6;\n    return x == (long) x;",
    "    double a = (sqrt(1 + 24 * n) + 1.0) / 6.0;\n    return a == (int)a;",
    "    long x = (sqrt(1 + 24 * n) + 1) / 6;\n    if (x * (3 * x - 2) == n)\n        return x;\n    return 0;",
    "    long x = (sqrt(1 + 24 * n) + 1) / 6;\n    if (x * (3 * x - 2) == n)\n        return x;\n    return 0;",
    "    long x = (sqrt(1 + 24 * n) + 1) / 6;\n    if (x * (3 * x - 2) == n) {\n        return x;\n    }\n    return 0;",
    "    long i = 1;\n    while(i*(3*i-2) < n) {\n        i++;\n    }\n    if(i*(3*i-2) == n) {\n        return 1;\n    }\n    return 0;",
    "    long x = (sqrt(1 + 24 * n) + 1) / 6;\n    return x * (3 * x - 2);",
    "\tlong nth_octagonal = 0;\n\tlong i = 1;\n\twhile (nth_octagonal < n) {\n\t\tnth_octagonal = i * (3 * i - 2);\n\t\ti++;\n\t}\n\treturn nth_octagonal;",
    "    long a = (sqrt(1 + 24 * n) + 1) / 6;\n    if (a * (3 * a - 2) == n)\n        return 1;\n    return 0;",
    "    long a = (sqrt(1 + 24 * n) + 1) / 6;\n    return a * (3 * a - 2);",
    "    long x = (sqrt(1 + 24 * n) + 1) / 6;\n    return x * (3 * x - 2);",
    "    long root = (long)sqrt(n);\n    if(root*root == n) {\n        return root;\n    }\n    return 0;",
    "    long a = (long)sqrt(n);\n    if (a*a == n) return a;\n    return 0;",
    "    long x = (sqrt(1 + 24 * n) + 1) / 6;\n    if (x * (3 * x - 2) == n) {\n        return 1;\n    }\n    return 0;",
    "    long x = (sqrt(1 + 24 * n) + 1) / 6;\n    return x * (3 * x - 2);",
    "    long t = (sqrt(1 + 24 * n) + 1) / 6;\n    if (t * (3 * t - 2) == n)\n        return 1;\n    return 0;",
    "    long x = (sqrt(1 + 24 * n) + 1) / 6;\n    if (x * (3 * x - 2) == n) {\n        return x;\n    }\n    return 0;",
    "    long root = (long)sqrt(n);\n    if (root*root == n) {\n        long r = (long)sqrt(root);\n        if (r*r == root) {\n            return r;\n        }\n    }\n    return 0;",
    "    long i = 1;\n    while(true) {\n        long oct = i * (3 * i - 2);\n        if(oct == n) {\n            return i;\n        } else if(oct > n) {\n            return 0;\n        }\n        i++;\n    }",
    "    double root = (sqrt(1 + 24 * n) + 1.0) / 6.0;\n    return root == (long) root;",
    "  long m = (sqrt(1 + 24 * n) + 1) / 6;\n  return m * (3 * m - 2) == n;",
    "    double root = (sqrt(1 + 24 * n) + 1) / 6;\n    return (root == (long) root);",
    "    long x = (sqrt(1 + 24 * n) + 1) / 6;\n    return x * (3 * x - 2);",
    "    long a = (long)sqrt(n);\n    if (a*a == n) {\n        return a;\n    }\n    return 0;",
    "    long x = (sqrt(1 + 24 * n) + 1) / 6;\n    return x * (3 * x - 2) == n;",
    "    long m = (long)sqrt(n);\n    if (m*m == n) {\n        return m;\n    }\n    return 0;",
    "    double x = (sqrt(1 + 24*n) + 1)/6;\n    if (x == (int)x) {\n        return 1;\n    }\n    return 0;",
    "    long a = (long)sqrt(n);\n    return a*a == n && (a % 2) == 1;",
    "    long a = (sqrt(1 + 24 * n) + 1) / 6;\n    if (a * (3 * a - 2) == n)\n        return 1;\n    return 0;",
    "    long i = 1;\n    while(i*(3*i-2) < n) i++;\n    return i*(3*i-2) == n;",
    "    long i = 1;\n    while(i*(3*i-2) < n) {\n        i++;\n    }\n    if(i*(3*i-2) == n) {\n        return 1;\n    }\n    return 0;",
    "    long a = (sqrt(1 + 24 * n) + 1) / 6;\n    return a * (3 * a - 2);",
    "    long m = (long)sqrt(n);\n    if (m*m == n) {\n        long x = (long)sqrt(m);\n        if (x*x == m) {\n            return x;\n        }\n    }\n    return 0;",
    "    long a = (long)sqrt(n);\n    if (a*a == n) {\n        return a;\n    }\n    return 0;",
    "    long m = (long) sqrt(n);\n    if (m * m == n) {\n        return m;\n    }\n    return 0;",
    "    long i = 1;\n    while(i * (3 * i - 2) < n) {\n        i++;\n    }\n    if(i * (3 * i - 2) == n) {\n        return 1;\n    }\n    return 0;",
    "    long a = (sqrt(1 + 8 * n) + 1) / 2;\n    if (a * (3 * a - 2) == n) {\n        return 1;\n    }\n    return 0;",
    "    long i = 1;\n    while (i*(3*i-2) < n) {\n        i++;\n    }\n    return i*(3*i-2) == n;",
    "    long x = (sqrt(1 + 24 * n) + 1) / 6;\n    if (x * (3 * x - 2) == n) {\n        return x;\n    }\n    return 0;",
    "    long m = (long)sqrt(n);\n    if (m*m == n) {\n        return m;\n    }\n    return 0;",
    "    long root = (1 + sqrt(1 + 24 * n)) / 6;\n    return root * (3 * root - 2);",
    "    long r = (sqrt(1 + 24 * n) + 1) / 6;\n    return r * (3 * r - 2) == n;",
    "    long i = 1;\n    while(n > 0) {\n        n -= i;\n        i += 3;\n    }\n    return n == 0;",
    "    long i = 1;\n    while (i*(3*i-2) < n) {\n        i++;\n    }\n    return i*(3*i-2) == n;",
    "    double x = (sqrt(1 + 24 * n) + 1) / 6;\n    if (x == (int) x)\n        return 1;\n    return 0;",
    "    long x = (sqrt(1 + 24 * n) + 1) / 6;\n    return x * (3 * x - 2);",
    "    long x = (sqrt(1 + 24 * n) + 1) / 6;\n    if (x * (3 * x - 2) == n)\n        return 1;\n    return 0;",
    "    long x = (sqrt(1 + 24 * n) + 1) / 6;\n    if (x * (3 * x - 2) == n)\n        return 1;\n    return 0;",
    "    long x = (sqrt(1 + 24 * n) + 1) / 6;\n    return x * (3 * x - 2);",
    "    long a = (sqrt(1 + 24 * n) + 1) / 6;\n    return a * (3 * a - 2);",
    "  long i = 1;\n  while(i * (3 * i - 2) < n) {\n    i++;\n  }\n  return i * (3 * i - 2) == n;",
    "    long i = 1;\n    while(i*(3*i-2) < n) {\n        i++;\n    }\n    if(i*(3*i-2) == n) {\n        return 1;\n    }\n    return 0;",
    "    long x = (sqrt(1 + 24 * n) + 1) / 6;\n    if (x * (3 * x - 2) == n)\n        return 1;\n    return 0;",
    "    long i = 1;\n    while(i*(3*i-2) < n) i++;\n    if(i*(3*i-2) == n) return 1;\n    return 0;",
    "    double root = (sqrt(1 + 24 * n) + 1.0) / 6.0;\n    return root == (long) root;",
    "    long m = (long) sqrt(n);\n    if (m*m == n) return 0;\n    if ((m*m + m) == n) return 1;\n    return -1;",
    "    long a = (sqrt(24*n+1)+1)/6;\n    if(a*(3*a-2) == n) return 1;\n    return 0;",
    "    long a = (sqrt(1 + 24 * n) + 1) / 6;\n    if (a * (3 * a - 2) == n)\n        return 1;\n    return 0;",
    "    long a = (long)sqrt(n);\n    if(a*a == n) {\n        long b = (long)sqrt(a);\n        if(b*b == a && b%2 == 1) {\n            return 1;\n        }\n    }\n    return 0;",
    "    long i = 1;\n    while(i*(3*i-2) < n) {\n        i++;\n    }\n    if(i*(3*i-2) == n) {\n        return i;\n    }\n    return 0;",
    "    long a = (long)sqrt(n);\n    if(a*a == n) {\n        return a;\n    }\n    return -1;",
    "    long root = (long) sqrt(n);\n    if (root * root == n) {\n        return root;\n    }\n    return 0;",
    "    double x = (sqrt(1 + 24 * n) + 1) / 6;\n    return x == (long) x;",
    "    long i = 1;\n    while(i*(3*i-2) < n) {\n        i++;\n    }\n    if(i*(3*i-2) == n) {\n        return i;\n    }\n    return 0;",
    "    long i = 1;\n    while(i*(3*i-2) < n) {\n        i++;\n    }\n    if(i*(3*i-2) == n) {\n        return 1;\n    }\n    return 0;",
    "    double root = (sqrt(1 + 24 * n) + 1) / 6;\n    return root == (long)root;",
    "    long nth_octagonal = (n * (3 * n - 2));\n    return nth_octagonal;",
    "    long a = (long)sqrt(n);\n    if (a*a == n) {\n        return a;\n    }\n    return 0;",
    "    long i = 1;\n    while(i*(3*i-2) <= n) {\n        if(i*(3*i-2) == n) {\n            return 1;\n        }\n        i++;\n    }\n    return 0;",
    "    long i = 1;\n    while(i*(3*i-2) < n) {\n        i++;\n    }\n    if(i*(3*i-2) == n) {\n        return i;\n    }\n    return 0;",
    "    long nth_octagonal = 0;\n    long i = 1;\n    while (nth_octagonal < n) {\n        nth_octagonal = i * (3 * i - 2);\n        i++;\n    }\n    if (nth_octagonal == n) {\n        return 1;\n    } else {\n        return 0;\n    }",
    "    long x = (sqrt(1 + 8 * n) + 1) / 2;\n    if (x * (3 * x - 2) == n)\n        return x;\n    return 0;",
    "    long m = (sqrt(1 + 24 * n) + 1) / 6;\n    if (m * (3 * m - 2) == n) {\n        return m;\n    }\n    return 0;",
    "    long r = (sqrt(1 + 24 * n) + 1) / 6;\n    if (r * (3 * r - 2) == n) {\n        return r;\n    }\n    return 0;",
    "    long i = 1;\n    while(i*(3*i-2) < n) {\n        i++;\n    }\n    if(i*(3*i-2) == n) {\n        return 1;\n    }\n    return 0;",
    "    double root = (sqrt(1 + 24 * n) + 1) / 6;\n    return root == (long)root;",
    "    long m = (sqrt(1 + 24 * n) + 1) / 6;\n    return m * (3 * m - 2) == n;",
    "    long a = (1 + sqrt(1 + 24 * n)) / 6;\n    return a * (3 * a - 2) == n;",
    "    long a = (long)sqrt(n);\n    if(a*a == n) {\n        return a;\n    }\n    return 0;",
    "    long i = 1;\n    while(i*(3*i-2) < n) {\n        i++;\n    }\n    if(i*(3*i-2) == n) {\n        return 1;\n    }\n    return 0;",
    "    long root = sqrt(n);\n    if (root*root == n) {\n        return root;\n    }\n    return 0;",
    "    long a = (sqrt(1 + 24 * n) + 1) / 6;\n    return a * (3 * a - 2) == n;",
    "    long a = (long) (sqrt(1 + 24 * n) + 1) / 6;\n    return a * (3 * a - 2);",
    "    long x = (sqrt(1 + 24 * n) + 1) / 6;\n    if (x * (3 * x - 2) == n)\n        return x;\n    return 0;",
    "    double root = (sqrt(1 + 24 * n) + 1) / 6;\n    return root == (long) root;",
    "    long root = (long)sqrt(n);\n    return root*root == n && (root % 2 == 1);",
    "    long a = (sqrt(1 + 24 * n) + 1) / 6;\n    if (a * (3 * a - 2) == n)\n        return 1;\n    return 0;",
    "    long i = 1;\n    while(i*(3*i-2) < n) {\n        i++;\n    }\n    return i*(3*i-2) == n;",
    "    long x = (sqrt(1 + 24 * n) + 1) / 6;\n    return x * (3 * x - 2);",
    "    long a = (sqrt(1 + 24 * n) + 1) / 6;\n    return a * (3 * a - 2) == n;",
    "    long a = (sqrt(1 + 24 * n) + 1) / 6;\n    return a * (3 * a - 2) == n;",
    "    double root = (sqrt(1 + 24 * n) + 1) / 6;\n    if (root == (int) root) {\n        return 1;\n    }\n    return 0;",
    "    long m = (long) (sqrt(n));\n    return m * m == n && (m % 2 == 1);",
    "    long i = 1;\n    while (i * (3 * i - 2) < n) {\n        i++;\n    }\n    return i * (3 * i - 2) == n;",
    "    long m = (long) (sqrt(1 + 24 * n) + 1) / 6;\n    return m * (3 * m - 2) == n;",
    "    long x = (sqrt(1 + 24 * n) + 1) / 6;\n    return x * (3 * x - 2) == n;",
    "    long root = (long)sqrt(n);\n    return root * root == n && (root % 2 == 1);",
    "    long x = (sqrt(1 + 24 * n) + 1) / 6;\n    return x * (3 * x - 2) == n;",
    "    long m = (long)sqrt(n);\n    if (m * m == n) {\n        return m;\n    }\n    return 0;",
    "    long i = 1;\n    long oct = 0;\n    while (oct < n) {\n        oct = i * (3 * i - 2);\n        i++;\n    }\n    if (oct == n) {\n        return 1;\n    } else {\n        return 0;\n    }",
    "    long a = (sqrt(1 + 24 * n) + 1) / 6;\n    return a * (3 * a - 2);",
    "    long i = 1;\n    while(i*(3*i-2) < n) {\n        i++;\n    }\n    if(i*(3*i-2) == n) {\n        return i;\n    }\n    return 0;",
    "    long m = (sqrt(1 + 24 * n) + 1) / 6;\n    return m * (3 * m - 2) == n;",
    "    long x = (sqrt(1 + 24 * n) + 1) / 6;\n    if (x * (3 * x - 2) == n)\n        return 1;\n    return 0;",
    "    long a = (1 + sqrt(1 + 24 * n)) / 6;\n    if (a * (3 * a - 2) == n)\n        return 1;\n    return 0;",
    "    long x = (sqrt(1 + 24 * n) + 1) / 6;\n    return x * (3 * x - 2);",
    "    long x = (long) sqrt(n);\n    if (x * x == n) {\n        return x;\n    }\n    return 0;",
    "    long x = (sqrt(1 + 24 * n) + 1) / 6;\n    return x * (3 * x - 2);",
    "    long m = (long)sqrt(n);\n    if (m * m == n) {\n        return m;\n    }\n    return 0;",
    "    double root = (sqrt(1 + 24 * n) + 1) / 6;\n    return root == (long) root;",
    "    long a = (sqrt(24*n+1)+1)/6;\n    if (a*(3*a-2) == n)\n        return 1;\n    return 0;",
    "    long m = (long)sqrt(n);\n    if (m*m == n && (m%2 == 1)) {\n        return m;\n    }\n    return 0;",
    "    long a = (1 + sqrt(1 + 24 * n)) / 6;\n    if (a * (3 * a - 2) == n)\n        return 1;\n    return 0;",
    "    long a = (sqrt(24*n+1)+1)/6;\n    if(a*(3*a-2) == n)\n        return 1;\n    return 0;",
    "    long x = (sqrt(1 + 24 * n) + 1) / 6;\n    return x * (3 * x - 2);",
    "    double x = (sqrt(24*n+1)+1)/6;\n    return x == (long)x;",
    "    long i = 1;\n    while (i*(3*i-2) < n) {\n        i++;\n    }\n    return i*(3*i-2) == n;",
    "    long x = (sqrt(1 + 24 * n) + 1) / 6;\n    return x * (3 * x - 2);",
    "    long i = 1;\n    while(i*(3*i-2) < n) {\n        i++;\n    }\n    if(i*(3*i-2) == n) {\n        return 1;\n    }\n    return 0;",
    "    long a = (long)sqrt(n);\n    if (a*a == n) {\n        return a;\n    }\n    return 0;",
    "    double x = (sqrt(24*n+1)+1)/6;\n    if (x == (long)x)\n        return 1;\n    else\n        return 0;",
    "    long i = 1;\n    while(true) {\n        long oct = i * (3 * i - 2);\n        if(oct == n) {\n            return 1;\n        } else if(oct > n) {\n            return 0;\n        }\n        i++;\n    }",
    "    double x = (sqrt(1 + 24 * n) + 1) / 6;\n    return x == (long) x;",
    "    long a = (sqrt(1 + 24 * n) + 1) / 6;\n    if (a * (3 * a - 2) == n)\n        return 1;\n    return 0;",
    "    double root = (sqrt(1 + 24 * n) + 1) / 6;\n    return root == (long) root;",
    "    long m = (long)sqrt(n);\n    if(m*m == n) {\n        return m;\n    }\n    return 0;",
    "    long i = 1;\n    while (i*(3*i-2) < n) {\n        i++;\n    }\n    if (i*(3*i-2) == n) {\n        return 1;\n    }\n    return 0;",
    "    long i = 1;\n    while(i*(3*i-2) < n) {\n        i++;\n    }\n    if(i*(3*i-2) == n) {\n        return 1;\n    }\n    return 0;",
    "    long a = (long)sqrt(n);\n    if (a*a == n) {\n        return a;\n    }\n    return -1;",
    "    long a = (long)sqrt(n);\n    if (a * a == n) {\n        long b = (long)sqrt(a);\n        if (b * b == a && (b + 1) % 4 == 0) {\n            return 1;\n        }\n    }\n    return 0;",
    "    long i = 1;\n    while(i*(3*i-2) < n) {\n        i++;\n    }\n    return i*(3*i-2) == n;",
    "    long i = 1;\n    while(i*(3*i-2) < n) {\n        i++;\n    }\n    if(i*(3*i-2) == n) {\n        return 1;\n    }\n    return 0;",
    "    long m = (long)sqrt(n);\n    if (m*m == n) {\n        if ((m+1) % 3 == 0) {\n            return m;\n        }\n    }\n    return 0;",
    "    long root = (long)sqrt(n);\n    if (root * root == n) {\n        return root;\n    }\n    return 0;",
    "    long x = (sqrt(1 + 24 * n) + 1) / 6;\n    return x * (3 * x - 2);",
    "    long x = (sqrt(1 + 24 * n) + 1) / 6;\n    return x * (3 * x - 2);",
    "    long a = (sqrt(24*n+1)+1)/6;\n    return a*(3*a-2) == n;",
    "    long x = (sqrt(1 + 24 * n) + 1) / 6;\n    if (x * (3 * x - 2) == n) {\n        return 1;\n    }\n    return 0;",
    "    long a = (1 + sqrt(1 + 24 * n)) / 6;\n    return a * (3 * a - 2) == n;",
    "    long t = (sqrt(1 + 24 * n) + 1) / 6;\n    return t * (3 * t - 2) == n;",
    "    long x = (sqrt(1 + 24 * n) + 1) / 6;\n    if (x * (3 * x - 2) == n)\n        return 1;\n    return 0;",
    "    long x = (sqrt(1 + 24 * n) + 1) / 6;\n    return x * (3 * x - 2);",
    "    long m = (long) sqrt(n);\n    if (m * m == n) {\n        return m;\n    }\n    return 0;",
    "    long a = (sqrt(1 + 24 * n) + 1) / 6;\n    if (a * (3 * a - 2) == n) {\n        return a;\n    }\n    return 0;",
    "    double x = (sqrt(1 + 24 * n) + 1) / 6;\n    return x == (long)x;",
    "    long a = (long)sqrt(n);\n    if (a*a == n) {\n        return a;\n    }\n    return 0;",
    "    long a = (1 + sqrt(1 + 24 * n)) / 6;\n    if (a * (3 * a - 2) == n) {\n        return 1;\n    }\n    return 0;",
    "    long i = 1;\n    while (i*(3*i-2) < n) {\n        i++;\n    }\n    return i*(3*i-2) == n;",
    "    long a = (sqrt(1 + 24 * n) + 1) / 6;\n    if (a * (3 * a - 2) == n)\n        return 1;\n    return 0;",
    "    long x = (sqrt(1 + 24 * n) + 1) / 6;\n    return x * (3 * x - 2);",
    "    long nth_octagonal = (n * (3 * n - 2));\n    return nth_octagonal;",
    "    long x = (sqrt(1+24*n)+1)/6;\n    if(x*(3*x-2) == n)\n        return 1;\n    return 0;",
    "    long i = 1;\n    while (n > 0) {\n        n -= i;\n        i += 3;\n    }\n    return n == 0;",
    "    long i=1;\n    while(i*(3*i-2)<n) {\n        i++;\n    }\n    if(i*(3*i-2)==n) {\n        return 1;\n    }\n    return 0;",
    "    long x = (sqrt(1 + 24 * n) + 1) / 6;\n    if (x * (3 * x - 2) == n)\n        return x;\n    return 0;",
    "    double a = (sqrt(1 + 24*n) + 1)/6;\n    return a == (long)a;",
    "    long i = 1;\n    while(n > 0) {\n        n -= i;\n        i += 3;\n    }\n    return n == 0;",
    "    double root = (sqrt(1 + 24 * n) + 1) / 6;\n    if (root == (int) root)\n        return 1;\n    return 0;",
    "    long root = (long)sqrt(n);\n    if(root*root == n) {\n        return root;\n    }\n    return 0;",
    "    long nth_octagonal = (n * (3 * n - 2));\n    return nth_octagonal;",
    "    long nth_octagonal = 0;\n    nth_octagonal = (n * (3 * n - 2));\n    return nth_octagonal;",
    "    long x = (sqrt(1 + 24 * n) + 1) / 6;\n    return x * (3 * x - 2);",
    "    double x = (sqrt(1 + 24 * n) + 1) / 6;\n    return x == (long)x;",
    "    long x = sqrt(n);\n    if (x*x == n) {\n        return x;\n    }\n    return 0;",
    "    long x = (sqrt(1 + 24 * n) + 1) / 6;\n    return x * (3 * x - 2);",
    "    long a = (long)sqrt(n);\n    if (a*a == n) {\n        return a;\n    }\n    return 0;",
    "    double x = (sqrt(1 + 24 * n) + 1) / 6;\n    return x == (long) x;",
    "    long root = (long) sqrt(n);\n    return root * root == n && (root % 2) == 1;",
    "    long m = (long)sqrt(n);\n    if (m*m == n && (m%2 == 1)) return m;\n    return 0;",
    "    long x = (sqrt(1 + 24 * n) + 1) / 6;\n    return x * (3 * x - 2) == n;",
    "    long a = (sqrt(1 + 24 * n) + 1) / 6;\n    return a * (3 * a - 2) == n;",
    "    long x = (sqrt(1 + 24 * n) + 1) / 6;\n    return x * (3 * x - 2);",
    "    long x = (sqrt(1 + 24 * n) + 1) / 6;\n    if (x * (3 * x - 2) == n)\n        return 1;\n    return 0;",
    "    long nth_octagonal = (n * (3 * n - 2));\n    return nth_octagonal;",
    "    long nth_octagonal = 0;\n    nth_octagonal = (n * (3 * n - 2));\n    return nth_octagonal;",
    "    long root = (long)sqrt(n);\n    if (root*root == n) {\n        if ((1+root)%3 == 0) {\n            return root;\n        }\n    }\n    return 0;",
    "    double root = (sqrt(1 + 24 * n) + 1) / 6;\n    return root == (long) root;",
    "    long i = 1;\n    while (i*(3*i-2) < n) {\n        i++;\n    }\n    if (i*(3*i-2) == n) {\n        return i;\n    }\n    return 0;",
    "    long root = (long)sqrt(n);\n    if(root*root == n) {\n        if((root+1)%3 == 0) {\n            return root;\n        }\n    }\n    return 0;",
    "    long m = (sqrt(1 + 24 * n) + 1) / 6;\n    if (m * (3 * m - 2) == n) {\n        return m;\n    }\n    return 0;",
    "    long i = 1;\n    while (i * (3 * i - 2) < n) {\n        i++;\n    }\n    return i * (3 * i - 2) == n;",
    "    long x = (sqrt(1 + 24 * n) + 1) / 6;\n    if (x * (3 * x - 2) == n)\n        return 1;\n    return 0;",
    "    long x = (sqrt(1 + 24 * n) + 1) / 6;\n    if (x * (3 * x - 2) == n) {\n        return x;\n    }\n    return 0;",
    "    long t = (sqrt(1 + 24 * n) + 1) / 6;\n    return t * (3 * t - 2) == n;",
    "    long x = (sqrt(1 + 24 * n) + 1) / 6;\n    if (x * (3 * x - 2) == n) {\n        return 1;\n    }\n    return 0;",
    "    long x = (sqrt(1 + 24 * n) + 1) / 6;\n    return x * (3 * x - 2);",
    "    long r = (sqrt(1 + 24 * n) + 1) / 6;\n    return r * (3 * r - 2) == n;",
    "    double x = (sqrt(1 + 24 * n) + 1) / 6;\n    return x == (long) x;",
    "    long root = (long)sqrt(n);\n    if(root*root == n) {\n        return root;\n    }\n    return 0;",
    "    long i = 1;\n    while(n > 0) {\n        n -= (3*i*i - i)/2;\n        i++;\n    }\n    if(n == 0)\n        return 1;\n    return 0;",
    "    long i = 0;\n    while(i*(3*i-2) <= n) {\n        if(i*(3*i-2) == n) {\n            return 1;\n        }\n        i++;\n    }\n    return 0;",
    "\tlong i = 1;\n\twhile(i*(3*i-2) <= n) {\n\t\tif(i*(3*i-2) == n)\n\t\t\treturn 1;\n\t\ti++;\n\t}\n\treturn 0;"
  ]
}
{
  "name": "mbpp_778_pack_consecutive_duplicates",
  "language": "cpp",
  "prompt": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to pack consecutive duplicates of a given list elements into sublists.\nstd::any pack_consecutive_duplicates(std::any list1) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_778_pack_consecutive_duplicates.py",
  "prompt_terminology": "verbatim",
  "tests": "}\nint main() {\n    auto candidate = pack_consecutive_duplicates;\n    assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n    assert(candidate((std::any({(long)10, (long)10, (long)15, (long)19, (long)18, (long)18, (long)17, (long)26, (long)26, (long)17, (long)18, (long)10}))) == (std::any({(std::vector<long>)std::vector<long>({(long)10, (long)10}), (std::vector<long>)std::vector<long>({(long)15}), (std::vector<long>)std::vector<long>({(long)19}), (std::vector<long>)std::vector<long>({(long)18, (long)18}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)26, (long)26}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)18}), (std::vector<long>)std::vector<long>({(long)10})})));\n    assert(candidate((std::any({(std::string)\"a\", (std::string)\"a\", (std::string)\"b\", (std::string)\"c\", (std::string)\"d\", (std::string)\"d\"}))) == (std::any({(std::vector<std::string>)std::vector<std::string>({(std::string)\"a\", (std::string)\"a\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"b\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"c\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"d\", (std::string)\"d\"})})));\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "results": [
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to pack consecutive duplicates of a given list elements into sublists.\nstd::any pack_consecutive_duplicates(std::any list1) {\n    std::any list2;\n    std::any temp;\n    std::any::iterator it = list1.begin();\n    while (it != list1.end()) {\n        temp.push_back(*it);\n        it++;\n        if (it == list1.end() || *it != temp.back()) {\n            list2.push_back(temp);\n            temp.clear();\n        }\n    }\n    return list2;\n}\nint main() {\n    auto candidate = pack_consecutive_duplicates;\n    assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n    assert(candidate((std::any({(long)10, (long)10, (long)15, (long)19, (long)18, (long)18, (long)17, (long)26, (long)26, (long)17, (long)18, (long)10}))) == (std::any({(std::vector<long>)std::vector<long>({(long)10, (long)10}), (std::vector<long>)std::vector<long>({(long)15}), (std::vector<long>)std::vector<long>({(long)19}), (std::vector<long>)std::vector<long>({(long)18, (long)18}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)26, (long)26}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)18}), (std::vector<long>)std::vector<long>({(long)10})})));\n    assert(candidate((std::any({(std::string)\"a\", (std::string)\"a\", (std::string)\"b\", (std::string)\"c\", (std::string)\"d\", (std::string)\"d\"}))) == (std::any({(std::vector<std::string>)std::vector<std::string>({(std::string)\"a\", (std::string)\"a\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"b\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"c\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"d\", (std::string)\"d\"})})));\n}\n",
      "timestamp": 1665510437,
      "stdout": "",
      "stderr": "/tmp/tmps8agvmg9.cpp: In function \u2018std::any pack_consecutive_duplicates(std::any)\u2019:\n/tmp/tmps8agvmg9.cpp:7:15: error: \u2018iterator\u2019 is not a member of \u2018std::any\u2019\n    7 |     std::any::iterator it = list1.begin();\n      |               ^~~~~~~~\n/tmp/tmps8agvmg9.cpp:8:12: error: \u2018it\u2019 was not declared in this scope; did you mean \u2018int\u2019?\n    8 |     while (it != list1.end()) {\n      |            ^~\n      |            int\n/tmp/tmps8agvmg9.cpp:8:24: error: \u2018class std::any\u2019 has no member named \u2018end\u2019\n    8 |     while (it != list1.end()) {\n      |                        ^~~\n/tmp/tmps8agvmg9.cpp:9:14: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n    9 |         temp.push_back(*it);\n      |              ^~~~~~~~~\n/tmp/tmps8agvmg9.cpp:11:25: error: \u2018class std::any\u2019 has no member named \u2018end\u2019\n   11 |         if (it == list1.end() || *it != temp.back()) {\n      |                         ^~~\n/tmp/tmps8agvmg9.cpp:11:46: error: \u2018class std::any\u2019 has no member named \u2018back\u2019\n   11 |         if (it == list1.end() || *it != temp.back()) {\n      |                                              ^~~~\n/tmp/tmps8agvmg9.cpp:12:19: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   12 |             list2.push_back(temp);\n      |                   ^~~~~~~~~\n/tmp/tmps8agvmg9.cpp:13:18: error: \u2018class std::any\u2019 has no member named \u2018clear\u2019\n   13 |             temp.clear();\n      |                  ^~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmps8agvmg9.cpp:2:\n/tmp/tmps8agvmg9.cpp: In function \u2018int main()\u2019:\n/tmp/tmps8agvmg9.cpp:20:176: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   20 |     assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to pack consecutive duplicates of a given list elements into sublists.\nstd::any pack_consecutive_duplicates(std::any list1) {\n    std::any list2;\n    std::any temp;\n    std::any::iterator it1 = list1.begin();\n    std::any::iterator it2 = list2.begin();\n    while(it1 != list1.end()) {\n        temp.push_back(*it1);\n        if(*it1 != *(it1+1)) {\n            it2 = list2.insert(it2, temp);\n            temp.clear();\n        }\n        it1++;\n    }\n    return list2;\n}\nint main() {\n    auto candidate = pack_consecutive_duplicates;\n    assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n    assert(candidate((std::any({(long)10, (long)10, (long)15, (long)19, (long)18, (long)18, (long)17, (long)26, (long)26, (long)17, (long)18, (long)10}))) == (std::any({(std::vector<long>)std::vector<long>({(long)10, (long)10}), (std::vector<long>)std::vector<long>({(long)15}), (std::vector<long>)std::vector<long>({(long)19}), (std::vector<long>)std::vector<long>({(long)18, (long)18}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)26, (long)26}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)18}), (std::vector<long>)std::vector<long>({(long)10})})));\n    assert(candidate((std::any({(std::string)\"a\", (std::string)\"a\", (std::string)\"b\", (std::string)\"c\", (std::string)\"d\", (std::string)\"d\"}))) == (std::any({(std::vector<std::string>)std::vector<std::string>({(std::string)\"a\", (std::string)\"a\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"b\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"c\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"d\", (std::string)\"d\"})})));\n}\n",
      "timestamp": 1665510437,
      "stdout": "",
      "stderr": "/tmp/tmp1_9hsmfh.cpp: In function \u2018std::any pack_consecutive_duplicates(std::any)\u2019:\n/tmp/tmp1_9hsmfh.cpp:7:15: error: \u2018iterator\u2019 is not a member of \u2018std::any\u2019\n    7 |     std::any::iterator it1 = list1.begin();\n      |               ^~~~~~~~\n/tmp/tmp1_9hsmfh.cpp:8:15: error: \u2018iterator\u2019 is not a member of \u2018std::any\u2019\n    8 |     std::any::iterator it2 = list2.begin();\n      |               ^~~~~~~~\n/tmp/tmp1_9hsmfh.cpp:9:11: error: \u2018it1\u2019 was not declared in this scope; did you mean \u2018list1\u2019?\n    9 |     while(it1 != list1.end()) {\n      |           ^~~\n      |           list1\n/tmp/tmp1_9hsmfh.cpp:9:24: error: \u2018class std::any\u2019 has no member named \u2018end\u2019\n    9 |     while(it1 != list1.end()) {\n      |                        ^~~\n/tmp/tmp1_9hsmfh.cpp:10:14: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   10 |         temp.push_back(*it1);\n      |              ^~~~~~~~~\n/tmp/tmp1_9hsmfh.cpp:12:13: error: \u2018it2\u2019 was not declared in this scope; did you mean \u2018list2\u2019?\n   12 |             it2 = list2.insert(it2, temp);\n      |             ^~~\n      |             list2\n/tmp/tmp1_9hsmfh.cpp:12:25: error: \u2018class std::any\u2019 has no member named \u2018insert\u2019\n   12 |             it2 = list2.insert(it2, temp);\n      |                         ^~~~~~\n/tmp/tmp1_9hsmfh.cpp:13:18: error: \u2018class std::any\u2019 has no member named \u2018clear\u2019\n   13 |             temp.clear();\n      |                  ^~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp1_9hsmfh.cpp:2:\n/tmp/tmp1_9hsmfh.cpp: In function \u2018int main()\u2019:\n/tmp/tmp1_9hsmfh.cpp:21:176: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   21 |     assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to pack consecutive duplicates of a given list elements into sublists.\nstd::any pack_consecutive_duplicates(std::any list1) {\n    std::any list2;\n    std::any temp;\n    std::any::iterator it = list1.begin();\n    while(it != list1.end()) {\n        temp.push_back(*it);\n        it++;\n        if(it == list1.end() || *it != *(it - 1)) {\n            list2.push_back(temp);\n            temp.clear();\n        }\n    }\n    return list2;\n}\nint main() {\n    auto candidate = pack_consecutive_duplicates;\n    assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n    assert(candidate((std::any({(long)10, (long)10, (long)15, (long)19, (long)18, (long)18, (long)17, (long)26, (long)26, (long)17, (long)18, (long)10}))) == (std::any({(std::vector<long>)std::vector<long>({(long)10, (long)10}), (std::vector<long>)std::vector<long>({(long)15}), (std::vector<long>)std::vector<long>({(long)19}), (std::vector<long>)std::vector<long>({(long)18, (long)18}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)26, (long)26}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)18}), (std::vector<long>)std::vector<long>({(long)10})})));\n    assert(candidate((std::any({(std::string)\"a\", (std::string)\"a\", (std::string)\"b\", (std::string)\"c\", (std::string)\"d\", (std::string)\"d\"}))) == (std::any({(std::vector<std::string>)std::vector<std::string>({(std::string)\"a\", (std::string)\"a\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"b\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"c\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"d\", (std::string)\"d\"})})));\n}\n",
      "timestamp": 1665510437,
      "stdout": "",
      "stderr": "/tmp/tmpttxm6_u3.cpp: In function \u2018std::any pack_consecutive_duplicates(std::any)\u2019:\n/tmp/tmpttxm6_u3.cpp:7:15: error: \u2018iterator\u2019 is not a member of \u2018std::any\u2019\n    7 |     std::any::iterator it = list1.begin();\n      |               ^~~~~~~~\n/tmp/tmpttxm6_u3.cpp:8:11: error: \u2018it\u2019 was not declared in this scope; did you mean \u2018int\u2019?\n    8 |     while(it != list1.end()) {\n      |           ^~\n      |           int\n/tmp/tmpttxm6_u3.cpp:8:23: error: \u2018class std::any\u2019 has no member named \u2018end\u2019\n    8 |     while(it != list1.end()) {\n      |                       ^~~\n/tmp/tmpttxm6_u3.cpp:9:14: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n    9 |         temp.push_back(*it);\n      |              ^~~~~~~~~\n/tmp/tmpttxm6_u3.cpp:11:24: error: \u2018class std::any\u2019 has no member named \u2018end\u2019\n   11 |         if(it == list1.end() || *it != *(it - 1)) {\n      |                        ^~~\n/tmp/tmpttxm6_u3.cpp:12:19: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   12 |             list2.push_back(temp);\n      |                   ^~~~~~~~~\n/tmp/tmpttxm6_u3.cpp:13:18: error: \u2018class std::any\u2019 has no member named \u2018clear\u2019\n   13 |             temp.clear();\n      |                  ^~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpttxm6_u3.cpp:2:\n/tmp/tmpttxm6_u3.cpp: In function \u2018int main()\u2019:\n/tmp/tmpttxm6_u3.cpp:20:176: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   20 |     assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<lo",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to pack consecutive duplicates of a given list elements into sublists.\nstd::any pack_consecutive_duplicates(std::any list1) {\n    std::any list2;\n    std::any list3;\n    std::any list4;\n    std::any list5;\n    std::any list6;\n    std::any list7;\n    std::any list8;\n    std::any list9;\n    std::any list10;\n    std::any list11;\n    std::any list12;\n    std::any list13;\n    std::any list14;\n    std::any list15;\n    std::any list16;\n    std::any list17;\n    std::any list18;\n    std::any list19;\n    std::any list20;\n    std::any list21;\n    std::any list22;\n    std::any list23;\n    std::any list24;\n    std::any list25;\n    std::any list26;\n    std::any list27;\n    std::any list28;\n    std::any list29;\n    std::any list30;\n    std::any list31;\n    std::any list32;\n    std::any list33;\n    std::any list34;\n    std::any list35;\n    std::any list36;\n    std::any list37;\n    std::any list38;\n    std::any list39;\n    std::any list40;\n    std::any list41;\n    std::any list42;\n    std::any list43;\n    std::any list44;\n    std::any list45;\n    std::any list46;\n    std::any list47;\n    std::any list48;\n    std::any list49;\n    std::any list50;\n    std::any list51;\n    std::any list52;\n    std::any list53;\n    std::any list54;\n    std::any list55;\n    std::any list56;\n    std::any list57;\n    std::any list58;\n    std::any list59;\n    std::any list60;\n    std::any list61;\n    std::any list62;\n    std::any list63;\n    std::any list64;\n    std::any list65;\n}\nint main() {\n    auto candidate = pack_consecutive_duplicates;\n    assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n    assert(candidate((std::any({(long)10, (long)10, (long)15, (long)19, (long)18, (long)18, (long)17, (long)26, (long)26, (long)17, (long)18, (long)10}))) == (std::any({(std::vector<long>)std::vector<long>({(long)10, (long)10}), (std::vector<long>)std::vector<long>({(long)15}), (std::vector<long>)std::vector<long>({(long)19}), (std::vector<long>)std::vector<long>({(long)18, (long)18}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)26, (long)26}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)18}), (std::vector<long>)std::vector<long>({(long)10})})));\n    assert(candidate((std::any({(std::string)\"a\", (std::string)\"a\", (std::string)\"b\", (std::string)\"c\", (std::string)\"d\", (std::string)\"d\"}))) == (std::any({(std::vector<std::string>)std::vector<std::string>({(std::string)\"a\", (std::string)\"a\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"b\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"c\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"d\", (std::string)\"d\"})})));\n}\n",
      "timestamp": 1665510437,
      "stdout": "",
      "stderr": "/tmp/tmpgspun4wj.cpp: In function \u2018std::any pack_consecutive_duplicates(std::any)\u2019:\n/tmp/tmpgspun4wj.cpp:69:1: warning: no return statement in function returning non-void [-Wreturn-type]\n   69 | }\n      | ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpgspun4wj.cpp:2:\n/tmp/tmpgspun4wj.cpp: In function \u2018int main()\u2019:\n/tmp/tmpgspun4wj.cpp:72:176: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   72 |     assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n      |                                                                                                                                                                                ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpgspun4wj.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>,",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to pack consecutive duplicates of a given list elements into sublists.\nstd::any pack_consecutive_duplicates(std::any list1) {\n    std::any list2;\n    std::any list3;\n    std::any list4;\n    std::any list5;\n    std::any list6;\n    std::any list7;\n    std::any list8;\n    std::any list9;\n    std::any list10;\n    std::any list11;\n    std::any list12;\n    std::any list13;\n    std::any list14;\n    std::any list15;\n    std::any list16;\n    std::any list17;\n    std::any list18;\n    std::any list19;\n    std::any list20;\n    std::any list21;\n    std::any list22;\n    std::any list23;\n    std::any list24;\n    std::any list25;\n    std::any list26;\n    std::any list27;\n    std::any list28;\n    std::any list29;\n    std::any list30;\n    std::any list31;\n    std::any list32;\n    std::any list33;\n    std::any list34;\n    std::any list35;\n    std::any list36;\n    std::any list37;\n    std::any list38;\n    std::any list39;\n    std::any list40;\n    std::any list41;\n    std::any list42;\n    std::any list43;\n    std::any list44;\n    std::any list45;\n    std::any list46;\n    std::any list47;\n    std::any list48;\n    std::any list49;\n    std::any list50;\n    std::any list51;\n    std::any list52;\n    std::any list53;\n    std::any list54;\n    std::any list55;\n    std::any list56;\n    std::any list57;\n    std::any list58;\n    std::any list59;\n    std::any list60;\n    std::any list61;\n    std::any list62;\n    std::any list63;\n    std::any list64;\n    std::any list65;\n}\nint main() {\n    auto candidate = pack_consecutive_duplicates;\n    assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n    assert(candidate((std::any({(long)10, (long)10, (long)15, (long)19, (long)18, (long)18, (long)17, (long)26, (long)26, (long)17, (long)18, (long)10}))) == (std::any({(std::vector<long>)std::vector<long>({(long)10, (long)10}), (std::vector<long>)std::vector<long>({(long)15}), (std::vector<long>)std::vector<long>({(long)19}), (std::vector<long>)std::vector<long>({(long)18, (long)18}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)26, (long)26}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)18}), (std::vector<long>)std::vector<long>({(long)10})})));\n    assert(candidate((std::any({(std::string)\"a\", (std::string)\"a\", (std::string)\"b\", (std::string)\"c\", (std::string)\"d\", (std::string)\"d\"}))) == (std::any({(std::vector<std::string>)std::vector<std::string>({(std::string)\"a\", (std::string)\"a\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"b\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"c\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"d\", (std::string)\"d\"})})));\n}\n",
      "timestamp": 1665510437,
      "stdout": "",
      "stderr": "/tmp/tmpgspun4wj.cpp: In function \u2018std::any pack_consecutive_duplicates(std::any)\u2019:\n/tmp/tmpgspun4wj.cpp:69:1: warning: no return statement in function returning non-void [-Wreturn-type]\n   69 | }\n      | ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpgspun4wj.cpp:2:\n/tmp/tmpgspun4wj.cpp: In function \u2018int main()\u2019:\n/tmp/tmpgspun4wj.cpp:72:176: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   72 |     assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n      |                                                                                                                                                                                ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpgspun4wj.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>,",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to pack consecutive duplicates of a given list elements into sublists.\nstd::any pack_consecutive_duplicates(std::any list1) {\n    std::any list2;\n    std::any list3;\n    std::any list4;\n    std::any list5;\n    std::any list6;\n    std::any list7;\n    std::any list8;\n    std::any list9;\n    std::any list10;\n    std::any list11;\n    std::any list12;\n    std::any list13;\n    std::any list14;\n    std::any list15;\n    std::any list16;\n    std::any list17;\n    std::any list18;\n    std::any list19;\n    std::any list20;\n    std::any list21;\n    std::any list22;\n    std::any list23;\n    std::any list24;\n    std::any list25;\n    std::any list26;\n    std::any list27;\n    std::any list28;\n    std::any list29;\n    std::any list30;\n    std::any list31;\n    std::any list32;\n    std::any list33;\n    std::any list34;\n    std::any list35;\n    std::any list36;\n    std::any list37;\n    std::any list38;\n    std::any list39;\n    std::any list40;\n    std::any list41;\n    std::any list42;\n    std::any list43;\n    std::any list44;\n    std::any list45;\n    std::any list46;\n    std::any list47;\n    std::any list48;\n    std::any list49;\n    std::any list50;\n    std::any list51;\n    std::any list52;\n    std::any list53;\n    std::any list54;\n    std::any list55;\n    std::any list56;\n    std::any list57;\n    std::any list58;\n    std::any list59;\n    std::any list60;\n    std::any list61;\n    std::any list62;\n    std::any list63;\n    std::any list64;\n    std::any list65;\n}\nint main() {\n    auto candidate = pack_consecutive_duplicates;\n    assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n    assert(candidate((std::any({(long)10, (long)10, (long)15, (long)19, (long)18, (long)18, (long)17, (long)26, (long)26, (long)17, (long)18, (long)10}))) == (std::any({(std::vector<long>)std::vector<long>({(long)10, (long)10}), (std::vector<long>)std::vector<long>({(long)15}), (std::vector<long>)std::vector<long>({(long)19}), (std::vector<long>)std::vector<long>({(long)18, (long)18}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)26, (long)26}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)18}), (std::vector<long>)std::vector<long>({(long)10})})));\n    assert(candidate((std::any({(std::string)\"a\", (std::string)\"a\", (std::string)\"b\", (std::string)\"c\", (std::string)\"d\", (std::string)\"d\"}))) == (std::any({(std::vector<std::string>)std::vector<std::string>({(std::string)\"a\", (std::string)\"a\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"b\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"c\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"d\", (std::string)\"d\"})})));\n}\n",
      "timestamp": 1665510437,
      "stdout": "",
      "stderr": "/tmp/tmpgspun4wj.cpp: In function \u2018std::any pack_consecutive_duplicates(std::any)\u2019:\n/tmp/tmpgspun4wj.cpp:69:1: warning: no return statement in function returning non-void [-Wreturn-type]\n   69 | }\n      | ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpgspun4wj.cpp:2:\n/tmp/tmpgspun4wj.cpp: In function \u2018int main()\u2019:\n/tmp/tmpgspun4wj.cpp:72:176: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   72 |     assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n      |                                                                                                                                                                                ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpgspun4wj.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>,",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to pack consecutive duplicates of a given list elements into sublists.\nstd::any pack_consecutive_duplicates(std::any list1) {\n\tstd::any list2;\n\tstd::any temp;\n\tstd::any temp1;\n\tstd::any temp2;\n\tstd::any temp3;\n\tstd::any temp4;\n\tstd::any temp5;\n\tstd::any temp6;\n\tstd::any temp7;\n\tstd::any temp8;\n\tstd::any temp9;\n\tstd::any temp10;\n\tstd::any temp11;\n\tstd::any temp12;\n\tstd::any temp13;\n\tstd::any temp14;\n\tstd::any temp15;\n\tstd::any temp16;\n\tstd::any temp17;\n\tstd::any temp18;\n\tstd::any temp19;\n\tstd::any temp20;\n\tstd::any temp21;\n\tstd::any temp22;\n\tstd::any temp23;\n\tstd::any temp24;\n\tstd::any temp25;\n\tstd::any temp26;\n\tstd::any temp27;\n\tstd::any temp28;\n\tstd::any temp29;\n\tstd::any temp30;\n\tstd::any temp31;\n\tstd::any temp32;\n\tstd::any temp33;\n\tstd::any temp34;\n\tstd::any temp35;\n\tstd::any temp36;\n\tstd::any temp37;\n\tstd::any temp38;\n\tstd::any temp39;\n\tstd::any temp40;\n\tstd::any temp41;\n\tstd::any temp42;\n\tstd::any temp43;\n\tstd::any temp44;\n\tstd::any temp45;\n\tstd::any temp46;\n\tstd::any temp47;\n\tstd::any temp48;\n\tstd::any temp49;\n\tstd::any temp50;\n\tstd::any temp51;\n\tstd::any temp52;\n\tstd::any temp53;\n\tstd::any temp54;\n\tstd::any temp55;\n\tstd::any temp56;\n\tstd::any temp57;\n\tstd::any temp58;\n\tstd::any temp59;\n\tstd::any temp60;\n\tstd::any temp61;\n\tstd::any temp62;\n\n}\nint main() {\n    auto candidate = pack_consecutive_duplicates;\n    assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n    assert(candidate((std::any({(long)10, (long)10, (long)15, (long)19, (long)18, (long)18, (long)17, (long)26, (long)26, (long)17, (long)18, (long)10}))) == (std::any({(std::vector<long>)std::vector<long>({(long)10, (long)10}), (std::vector<long>)std::vector<long>({(long)15}), (std::vector<long>)std::vector<long>({(long)19}), (std::vector<long>)std::vector<long>({(long)18, (long)18}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)26, (long)26}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)18}), (std::vector<long>)std::vector<long>({(long)10})})));\n    assert(candidate((std::any({(std::string)\"a\", (std::string)\"a\", (std::string)\"b\", (std::string)\"c\", (std::string)\"d\", (std::string)\"d\"}))) == (std::any({(std::vector<std::string>)std::vector<std::string>({(std::string)\"a\", (std::string)\"a\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"b\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"c\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"d\", (std::string)\"d\"})})));\n}\n",
      "timestamp": 1665510437,
      "stdout": "",
      "stderr": "/tmp/tmp01xtlpea.cpp: In function \u2018std::any pack_consecutive_duplicates(std::any)\u2019:\n/tmp/tmp01xtlpea.cpp:70:1: warning: no return statement in function returning non-void [-Wreturn-type]\n   70 | }\n      | ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp01xtlpea.cpp:2:\n/tmp/tmp01xtlpea.cpp: In function \u2018int main()\u2019:\n/tmp/tmp01xtlpea.cpp:73:176: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   73 |     assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n      |                                                                                                                                                                                ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmp01xtlpea.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>,",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to pack consecutive duplicates of a given list elements into sublists.\nstd::any pack_consecutive_duplicates(std::any list1) {\n\tstd::any list2;\n\tstd::any temp;\n\tstd::any temp2;\n\tstd::any temp3;\n\tstd::any temp4;\n\tstd::any temp5;\n\tstd::any temp6;\n\tstd::any temp7;\n\tstd::any temp8;\n\tstd::any temp9;\n\tstd::any temp10;\n\tstd::any temp11;\n\tstd::any temp12;\n\tstd::any temp13;\n\tstd::any temp14;\n\tstd::any temp15;\n\tstd::any temp16;\n\tstd::any temp17;\n\tstd::any temp18;\n\tstd::any temp19;\n\tstd::any temp20;\n\tstd::any temp21;\n\tstd::any temp22;\n\tstd::any temp23;\n\tstd::any temp24;\n\tstd::any temp25;\n\tstd::any temp26;\n\tstd::any temp27;\n\tstd::any temp28;\n\tstd::any temp29;\n\tstd::any temp30;\n\tstd::any temp31;\n\tstd::any temp32;\n\tstd::any temp33;\n\tstd::any temp34;\n\tstd::any temp35;\n\tstd::any temp36;\n\tstd::any temp37;\n\tstd::any temp38;\n\tstd::any temp39;\n\tstd::any temp40;\n\tstd::any temp41;\n\tstd::any temp42;\n\tstd::any temp43;\n\tstd::any temp44;\n\tstd::any temp45;\n\tstd::any temp46;\n\tstd::any temp47;\n\tstd::any temp48;\n\tstd::any temp49;\n\tstd::any temp50;\n\tstd::any temp51;\n\tstd::any temp52;\n\tstd::any temp53;\n\tstd::any temp54;\n\tstd::any temp55;\n\tstd::any temp56;\n\tstd::any temp57;\n\tstd::any temp58;\n\tstd::any temp59;\n\tstd::any temp60;\n\tstd::any temp61;\n\tstd::any temp62;\n\tstd::any temp63;\n\n}\nint main() {\n    auto candidate = pack_consecutive_duplicates;\n    assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n    assert(candidate((std::any({(long)10, (long)10, (long)15, (long)19, (long)18, (long)18, (long)17, (long)26, (long)26, (long)17, (long)18, (long)10}))) == (std::any({(std::vector<long>)std::vector<long>({(long)10, (long)10}), (std::vector<long>)std::vector<long>({(long)15}), (std::vector<long>)std::vector<long>({(long)19}), (std::vector<long>)std::vector<long>({(long)18, (long)18}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)26, (long)26}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)18}), (std::vector<long>)std::vector<long>({(long)10})})));\n    assert(candidate((std::any({(std::string)\"a\", (std::string)\"a\", (std::string)\"b\", (std::string)\"c\", (std::string)\"d\", (std::string)\"d\"}))) == (std::any({(std::vector<std::string>)std::vector<std::string>({(std::string)\"a\", (std::string)\"a\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"b\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"c\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"d\", (std::string)\"d\"})})));\n}\n",
      "timestamp": 1665510437,
      "stdout": "",
      "stderr": "/tmp/tmp1qd6ljkj.cpp: In function \u2018std::any pack_consecutive_duplicates(std::any)\u2019:\n/tmp/tmp1qd6ljkj.cpp:70:1: warning: no return statement in function returning non-void [-Wreturn-type]\n   70 | }\n      | ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp1qd6ljkj.cpp:2:\n/tmp/tmp1qd6ljkj.cpp: In function \u2018int main()\u2019:\n/tmp/tmp1qd6ljkj.cpp:73:176: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   73 |     assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n      |                                                                                                                                                                                ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmp1qd6ljkj.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>,",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to pack consecutive duplicates of a given list elements into sublists.\nstd::any pack_consecutive_duplicates(std::any list1) {\n    std::any list2;\n    std::any temp;\n    std::any temp1;\n    std::any temp2;\n    std::any temp3;\n    std::any temp4;\n    std::any temp5;\n    std::any temp6;\n    std::any temp7;\n    std::any temp8;\n    std::any temp9;\n    std::any temp10;\n    std::any temp11;\n    std::any temp12;\n    std::any temp13;\n    std::any temp14;\n    std::any temp15;\n    std::any temp16;\n    std::any temp17;\n    std::any temp18;\n    std::any temp19;\n    std::any temp20;\n    std::any temp21;\n    std::any temp22;\n    std::any temp23;\n    std::any temp24;\n    std::any temp25;\n    std::any temp26;\n    std::any temp27;\n    std::any temp28;\n    std::any temp29;\n    std::any temp30;\n    std::any temp31;\n    std::any temp32;\n    std::any temp33;\n    std::any temp34;\n    std::any temp35;\n    std::any temp36;\n    std::any temp37;\n    std::any temp38;\n    std::any temp39;\n    std::any temp40;\n    std::any temp41;\n    std::any temp42;\n    std::any temp43;\n    std::any temp44;\n    std::any temp45;\n    std::any temp46;\n    std::any temp47;\n    std::any temp48;\n    std::any temp49;\n    std::any temp50;\n    std::any temp51;\n    std::any temp52;\n    std::any temp53;\n    std::any temp54;\n    std::any temp55;\n    std::any temp56;\n    std::any temp57;\n    std::any temp58;\n    std::any temp59;\n    std::any temp60;\n    std::any temp61;\n    std::any temp62;\n\n}\nint main() {\n    auto candidate = pack_consecutive_duplicates;\n    assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n    assert(candidate((std::any({(long)10, (long)10, (long)15, (long)19, (long)18, (long)18, (long)17, (long)26, (long)26, (long)17, (long)18, (long)10}))) == (std::any({(std::vector<long>)std::vector<long>({(long)10, (long)10}), (std::vector<long>)std::vector<long>({(long)15}), (std::vector<long>)std::vector<long>({(long)19}), (std::vector<long>)std::vector<long>({(long)18, (long)18}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)26, (long)26}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)18}), (std::vector<long>)std::vector<long>({(long)10})})));\n    assert(candidate((std::any({(std::string)\"a\", (std::string)\"a\", (std::string)\"b\", (std::string)\"c\", (std::string)\"d\", (std::string)\"d\"}))) == (std::any({(std::vector<std::string>)std::vector<std::string>({(std::string)\"a\", (std::string)\"a\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"b\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"c\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"d\", (std::string)\"d\"})})));\n}\n",
      "timestamp": 1665510437,
      "stdout": "",
      "stderr": "/tmp/tmp6a5kikx3.cpp: In function \u2018std::any pack_consecutive_duplicates(std::any)\u2019:\n/tmp/tmp6a5kikx3.cpp:70:1: warning: no return statement in function returning non-void [-Wreturn-type]\n   70 | }\n      | ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp6a5kikx3.cpp:2:\n/tmp/tmp6a5kikx3.cpp: In function \u2018int main()\u2019:\n/tmp/tmp6a5kikx3.cpp:73:176: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   73 |     assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n      |                                                                                                                                                                                ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmp6a5kikx3.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>,",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to pack consecutive duplicates of a given list elements into sublists.\nstd::any pack_consecutive_duplicates(std::any list1) {\n    std::any list2;\n    std::any temp;\n    std::any temp2;\n    std::any temp3;\n    std::any temp4;\n    std::any temp5;\n    std::any temp6;\n    std::any temp7;\n    std::any temp8;\n    std::any temp9;\n    std::any temp10;\n    std::any temp11;\n    std::any temp12;\n    std::any temp13;\n    std::any temp14;\n    std::any temp15;\n    std::any temp16;\n    std::any temp17;\n    std::any temp18;\n    std::any temp19;\n    std::any temp20;\n    std::any temp21;\n    std::any temp22;\n    std::any temp23;\n    std::any temp24;\n    std::any temp25;\n    std::any temp26;\n    std::any temp27;\n    std::any temp28;\n    std::any temp29;\n    std::any temp30;\n    std::any temp31;\n    std::any temp32;\n    std::any temp33;\n    std::any temp34;\n    std::any temp35;\n    std::any temp36;\n    std::any temp37;\n    std::any temp38;\n    std::any temp39;\n    std::any temp40;\n    std::any temp41;\n    std::any temp42;\n    std::any temp43;\n    std::any temp44;\n    std::any temp45;\n    std::any temp46;\n    std::any temp47;\n    std::any temp48;\n    std::any temp49;\n    std::any temp50;\n    std::any temp51;\n    std::any temp52;\n    std::any temp53;\n    std::any temp54;\n    std::any temp55;\n    std::any temp56;\n    std::any temp57;\n    std::any temp58;\n    std::any temp59;\n    std::any temp60;\n    std::any temp61;\n    std::any temp62;\n    std::any temp63;\n\n}\nint main() {\n    auto candidate = pack_consecutive_duplicates;\n    assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n    assert(candidate((std::any({(long)10, (long)10, (long)15, (long)19, (long)18, (long)18, (long)17, (long)26, (long)26, (long)17, (long)18, (long)10}))) == (std::any({(std::vector<long>)std::vector<long>({(long)10, (long)10}), (std::vector<long>)std::vector<long>({(long)15}), (std::vector<long>)std::vector<long>({(long)19}), (std::vector<long>)std::vector<long>({(long)18, (long)18}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)26, (long)26}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)18}), (std::vector<long>)std::vector<long>({(long)10})})));\n    assert(candidate((std::any({(std::string)\"a\", (std::string)\"a\", (std::string)\"b\", (std::string)\"c\", (std::string)\"d\", (std::string)\"d\"}))) == (std::any({(std::vector<std::string>)std::vector<std::string>({(std::string)\"a\", (std::string)\"a\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"b\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"c\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"d\", (std::string)\"d\"})})));\n}\n",
      "timestamp": 1665510437,
      "stdout": "",
      "stderr": "/tmp/tmp996xkpjp.cpp: In function \u2018std::any pack_consecutive_duplicates(std::any)\u2019:\n/tmp/tmp996xkpjp.cpp:70:1: warning: no return statement in function returning non-void [-Wreturn-type]\n   70 | }\n      | ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp996xkpjp.cpp:2:\n/tmp/tmp996xkpjp.cpp: In function \u2018int main()\u2019:\n/tmp/tmp996xkpjp.cpp:73:176: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   73 |     assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n      |                                                                                                                                                                                ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmp996xkpjp.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>,",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to pack consecutive duplicates of a given list elements into sublists.\nstd::any pack_consecutive_duplicates(std::any list1) {\n    std::any list2;\n    std::any temp;\n    std::any::iterator it = list1.begin();\n    while (it != list1.end()) {\n        temp.push_back(*it);\n        it++;\n        if (it == list1.end() || *it != temp.back()) {\n            list2.push_back(temp);\n            temp.clear();\n        }\n    }\n    return list2;\n}\nint main() {\n    auto candidate = pack_consecutive_duplicates;\n    assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n    assert(candidate((std::any({(long)10, (long)10, (long)15, (long)19, (long)18, (long)18, (long)17, (long)26, (long)26, (long)17, (long)18, (long)10}))) == (std::any({(std::vector<long>)std::vector<long>({(long)10, (long)10}), (std::vector<long>)std::vector<long>({(long)15}), (std::vector<long>)std::vector<long>({(long)19}), (std::vector<long>)std::vector<long>({(long)18, (long)18}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)26, (long)26}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)18}), (std::vector<long>)std::vector<long>({(long)10})})));\n    assert(candidate((std::any({(std::string)\"a\", (std::string)\"a\", (std::string)\"b\", (std::string)\"c\", (std::string)\"d\", (std::string)\"d\"}))) == (std::any({(std::vector<std::string>)std::vector<std::string>({(std::string)\"a\", (std::string)\"a\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"b\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"c\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"d\", (std::string)\"d\"})})));\n}\n",
      "timestamp": 1665510437,
      "stdout": "",
      "stderr": "/tmp/tmps8agvmg9.cpp: In function \u2018std::any pack_consecutive_duplicates(std::any)\u2019:\n/tmp/tmps8agvmg9.cpp:7:15: error: \u2018iterator\u2019 is not a member of \u2018std::any\u2019\n    7 |     std::any::iterator it = list1.begin();\n      |               ^~~~~~~~\n/tmp/tmps8agvmg9.cpp:8:12: error: \u2018it\u2019 was not declared in this scope; did you mean \u2018int\u2019?\n    8 |     while (it != list1.end()) {\n      |            ^~\n      |            int\n/tmp/tmps8agvmg9.cpp:8:24: error: \u2018class std::any\u2019 has no member named \u2018end\u2019\n    8 |     while (it != list1.end()) {\n      |                        ^~~\n/tmp/tmps8agvmg9.cpp:9:14: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n    9 |         temp.push_back(*it);\n      |              ^~~~~~~~~\n/tmp/tmps8agvmg9.cpp:11:25: error: \u2018class std::any\u2019 has no member named \u2018end\u2019\n   11 |         if (it == list1.end() || *it != temp.back()) {\n      |                         ^~~\n/tmp/tmps8agvmg9.cpp:11:46: error: \u2018class std::any\u2019 has no member named \u2018back\u2019\n   11 |         if (it == list1.end() || *it != temp.back()) {\n      |                                              ^~~~\n/tmp/tmps8agvmg9.cpp:12:19: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   12 |             list2.push_back(temp);\n      |                   ^~~~~~~~~\n/tmp/tmps8agvmg9.cpp:13:18: error: \u2018class std::any\u2019 has no member named \u2018clear\u2019\n   13 |             temp.clear();\n      |                  ^~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmps8agvmg9.cpp:2:\n/tmp/tmps8agvmg9.cpp: In function \u2018int main()\u2019:\n/tmp/tmps8agvmg9.cpp:20:176: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   20 |     assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to pack consecutive duplicates of a given list elements into sublists.\nstd::any pack_consecutive_duplicates(std::any list1) {\n    std::any list2;\n    std::any list3;\n    std::any list4;\n    std::any list5;\n    std::any list6;\n    std::any list7;\n    std::any list8;\n    std::any list9;\n    std::any list10;\n    std::any list11;\n    std::any list12;\n    std::any list13;\n    std::any list14;\n    std::any list15;\n    std::any list16;\n    std::any list17;\n    std::any list18;\n    std::any list19;\n    std::any list20;\n    std::any list21;\n    std::any list22;\n    std::any list23;\n    std::any list24;\n    std::any list25;\n    std::any list26;\n    std::any list27;\n    std::any list28;\n    std::any list29;\n    std::any list30;\n    std::any list31;\n    std::any list32;\n    std::any list33;\n    std::any list34;\n    std::any list35;\n    std::any list36;\n    std::any list37;\n    std::any list38;\n    std::any list39;\n    std::any list40;\n    std::any list41;\n    std::any list42;\n    std::any list43;\n    std::any list44;\n    std::any list45;\n    std::any list46;\n    std::any list47;\n    std::any list48;\n    std::any list49;\n    std::any list50;\n    std::any list51;\n    std::any list52;\n    std::any list53;\n    std::any list54;\n    std::any list55;\n    std::any list56;\n    std::any list57;\n    std::any list58;\n    std::any list59;\n    std::any list60;\n    std::any list61;\n    std::any list62;\n    std::any list63;\n    std::any list64;\n    std::any list65;\n}\nint main() {\n    auto candidate = pack_consecutive_duplicates;\n    assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n    assert(candidate((std::any({(long)10, (long)10, (long)15, (long)19, (long)18, (long)18, (long)17, (long)26, (long)26, (long)17, (long)18, (long)10}))) == (std::any({(std::vector<long>)std::vector<long>({(long)10, (long)10}), (std::vector<long>)std::vector<long>({(long)15}), (std::vector<long>)std::vector<long>({(long)19}), (std::vector<long>)std::vector<long>({(long)18, (long)18}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)26, (long)26}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)18}), (std::vector<long>)std::vector<long>({(long)10})})));\n    assert(candidate((std::any({(std::string)\"a\", (std::string)\"a\", (std::string)\"b\", (std::string)\"c\", (std::string)\"d\", (std::string)\"d\"}))) == (std::any({(std::vector<std::string>)std::vector<std::string>({(std::string)\"a\", (std::string)\"a\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"b\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"c\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"d\", (std::string)\"d\"})})));\n}\n",
      "timestamp": 1665510437,
      "stdout": "",
      "stderr": "/tmp/tmpgspun4wj.cpp: In function \u2018std::any pack_consecutive_duplicates(std::any)\u2019:\n/tmp/tmpgspun4wj.cpp:69:1: warning: no return statement in function returning non-void [-Wreturn-type]\n   69 | }\n      | ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpgspun4wj.cpp:2:\n/tmp/tmpgspun4wj.cpp: In function \u2018int main()\u2019:\n/tmp/tmpgspun4wj.cpp:72:176: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   72 |     assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n      |                                                                                                                                                                                ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpgspun4wj.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>,",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to pack consecutive duplicates of a given list elements into sublists.\nstd::any pack_consecutive_duplicates(std::any list1) {\n    std::any list2;\n    std::any list3;\n    std::any list4;\n    std::any list5;\n    std::any list6;\n    std::any list7;\n    std::any list8;\n    std::any list9;\n    std::any list10;\n    std::any list11;\n    std::any list12;\n    std::any list13;\n    std::any list14;\n    std::any list15;\n    std::any list16;\n    std::any list17;\n    std::any list18;\n    std::any list19;\n    std::any list20;\n    std::any list21;\n    std::any list22;\n    std::any list23;\n    std::any list24;\n    std::any list25;\n    std::any list26;\n    std::any list27;\n    std::any list28;\n    std::any list29;\n    std::any list30;\n    std::any list31;\n    std::any list32;\n    std::any list33;\n    std::any list34;\n    std::any list35;\n    std::any list36;\n    std::any list37;\n    std::any list38;\n    std::any list39;\n    std::any list40;\n    std::any list41;\n    std::any list42;\n    std::any list43;\n    std::any list44;\n    std::any list45;\n    std::any list46;\n    std::any list47;\n    std::any list48;\n    std::any list49;\n    std::any list50;\n    std::any list51;\n    std::any list52;\n    std::any list53;\n    std::any list54;\n    std::any list55;\n    std::any list56;\n    std::any list57;\n    std::any list58;\n    std::any list59;\n    std::any list60;\n    std::any list61;\n    std::any list62;\n    std::any list63;\n    std::any list64;\n    std::any list65;\n}\nint main() {\n    auto candidate = pack_consecutive_duplicates;\n    assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n    assert(candidate((std::any({(long)10, (long)10, (long)15, (long)19, (long)18, (long)18, (long)17, (long)26, (long)26, (long)17, (long)18, (long)10}))) == (std::any({(std::vector<long>)std::vector<long>({(long)10, (long)10}), (std::vector<long>)std::vector<long>({(long)15}), (std::vector<long>)std::vector<long>({(long)19}), (std::vector<long>)std::vector<long>({(long)18, (long)18}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)26, (long)26}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)18}), (std::vector<long>)std::vector<long>({(long)10})})));\n    assert(candidate((std::any({(std::string)\"a\", (std::string)\"a\", (std::string)\"b\", (std::string)\"c\", (std::string)\"d\", (std::string)\"d\"}))) == (std::any({(std::vector<std::string>)std::vector<std::string>({(std::string)\"a\", (std::string)\"a\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"b\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"c\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"d\", (std::string)\"d\"})})));\n}\n",
      "timestamp": 1665510437,
      "stdout": "",
      "stderr": "/tmp/tmpgspun4wj.cpp: In function \u2018std::any pack_consecutive_duplicates(std::any)\u2019:\n/tmp/tmpgspun4wj.cpp:69:1: warning: no return statement in function returning non-void [-Wreturn-type]\n   69 | }\n      | ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpgspun4wj.cpp:2:\n/tmp/tmpgspun4wj.cpp: In function \u2018int main()\u2019:\n/tmp/tmpgspun4wj.cpp:72:176: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   72 |     assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n      |                                                                                                                                                                                ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpgspun4wj.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>,",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to pack consecutive duplicates of a given list elements into sublists.\nstd::any pack_consecutive_duplicates(std::any list1) {\n  std::any list2;\n  std::any temp;\n  std::any temp2;\n  int count=0;\n  while(!list1.empty()){\n    temp=list1.front();\n    while(!list1.empty() && list1.front()==temp){\n      list2.push_back(list1.front());\n      list1.pop_front();\n      count++;\n    }\n    temp2.push_back(list2);\n    list2.clear();\n  }\n  return temp2;\n}\nint main() {\n    auto candidate = pack_consecutive_duplicates;\n    assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n    assert(candidate((std::any({(long)10, (long)10, (long)15, (long)19, (long)18, (long)18, (long)17, (long)26, (long)26, (long)17, (long)18, (long)10}))) == (std::any({(std::vector<long>)std::vector<long>({(long)10, (long)10}), (std::vector<long>)std::vector<long>({(long)15}), (std::vector<long>)std::vector<long>({(long)19}), (std::vector<long>)std::vector<long>({(long)18, (long)18}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)26, (long)26}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)18}), (std::vector<long>)std::vector<long>({(long)10})})));\n    assert(candidate((std::any({(std::string)\"a\", (std::string)\"a\", (std::string)\"b\", (std::string)\"c\", (std::string)\"d\", (std::string)\"d\"}))) == (std::any({(std::vector<std::string>)std::vector<std::string>({(std::string)\"a\", (std::string)\"a\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"b\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"c\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"d\", (std::string)\"d\"})})));\n}\n",
      "timestamp": 1665510437,
      "stdout": "",
      "stderr": "/tmp/tmp9go4vvr6.cpp: In function \u2018std::any pack_consecutive_duplicates(std::any)\u2019:\n/tmp/tmp9go4vvr6.cpp:9:16: error: \u2018class std::any\u2019 has no member named \u2018empty\u2019\n    9 |   while(!list1.empty()){\n      |                ^~~~~\n/tmp/tmp9go4vvr6.cpp:10:16: error: \u2018class std::any\u2019 has no member named \u2018front\u2019\n   10 |     temp=list1.front();\n      |                ^~~~~\n/tmp/tmp9go4vvr6.cpp:11:18: error: \u2018class std::any\u2019 has no member named \u2018empty\u2019\n   11 |     while(!list1.empty() && list1.front()==temp){\n      |                  ^~~~~\n/tmp/tmp9go4vvr6.cpp:11:35: error: \u2018class std::any\u2019 has no member named \u2018front\u2019\n   11 |     while(!list1.empty() && list1.front()==temp){\n      |                                   ^~~~~\n/tmp/tmp9go4vvr6.cpp:12:13: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   12 |       list2.push_back(list1.front());\n      |             ^~~~~~~~~\n/tmp/tmp9go4vvr6.cpp:12:29: error: \u2018class std::any\u2019 has no member named \u2018front\u2019\n   12 |       list2.push_back(list1.front());\n      |                             ^~~~~\n/tmp/tmp9go4vvr6.cpp:13:13: error: \u2018class std::any\u2019 has no member named \u2018pop_front\u2019\n   13 |       list1.pop_front();\n      |             ^~~~~~~~~\n/tmp/tmp9go4vvr6.cpp:16:11: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   16 |     temp2.push_back(list2);\n      |           ^~~~~~~~~\n/tmp/tmp9go4vvr6.cpp:17:11: error: \u2018class std::any\u2019 has no member named \u2018clear\u2019\n   17 |     list2.clear();\n      |           ^~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp9go4vvr6.cpp:2:\n/tmp/tmp9go4vvr6.cpp: In function \u2018int main()\u2019:\n/tmp/tmp9go4vvr6.cpp:23:176: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   23 |     assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to pack consecutive duplicates of a given list elements into sublists.\nstd::any pack_consecutive_duplicates(std::any list1) {\n    std::any list2;\n    std::any temp;\n    int count = 0;\n    while(!list1.empty()){\n        if(temp.empty()){\n            temp.push_back(list1.front());\n            list1.pop_front();\n        }\n        else if(temp.back() == list1.front()){\n            temp.push_back(list1.front());\n            list1.pop_front();\n        }\n        else{\n            list2.push_back(temp);\n            temp.clear();\n        }\n    }\n    list2.push_back(temp);\n    return list2;\n}\nint main() {\n    auto candidate = pack_consecutive_duplicates;\n    assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n    assert(candidate((std::any({(long)10, (long)10, (long)15, (long)19, (long)18, (long)18, (long)17, (long)26, (long)26, (long)17, (long)18, (long)10}))) == (std::any({(std::vector<long>)std::vector<long>({(long)10, (long)10}), (std::vector<long>)std::vector<long>({(long)15}), (std::vector<long>)std::vector<long>({(long)19}), (std::vector<long>)std::vector<long>({(long)18, (long)18}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)26, (long)26}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)18}), (std::vector<long>)std::vector<long>({(long)10})})));\n    assert(candidate((std::any({(std::string)\"a\", (std::string)\"a\", (std::string)\"b\", (std::string)\"c\", (std::string)\"d\", (std::string)\"d\"}))) == (std::any({(std::vector<std::string>)std::vector<std::string>({(std::string)\"a\", (std::string)\"a\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"b\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"c\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"d\", (std::string)\"d\"})})));\n}\n",
      "timestamp": 1665510437,
      "stdout": "",
      "stderr": "/tmp/tmp03nbtkz5.cpp: In function \u2018std::any pack_consecutive_duplicates(std::any)\u2019:\n/tmp/tmp03nbtkz5.cpp:8:18: error: \u2018class std::any\u2019 has no member named \u2018empty\u2019\n    8 |     while(!list1.empty()){\n      |                  ^~~~~\n/tmp/tmp03nbtkz5.cpp:9:17: error: \u2018class std::any\u2019 has no member named \u2018empty\u2019\n    9 |         if(temp.empty()){\n      |                 ^~~~~\n/tmp/tmp03nbtkz5.cpp:10:18: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   10 |             temp.push_back(list1.front());\n      |                  ^~~~~~~~~\n/tmp/tmp03nbtkz5.cpp:10:34: error: \u2018class std::any\u2019 has no member named \u2018front\u2019\n   10 |             temp.push_back(list1.front());\n      |                                  ^~~~~\n/tmp/tmp03nbtkz5.cpp:11:19: error: \u2018class std::any\u2019 has no member named \u2018pop_front\u2019\n   11 |             list1.pop_front();\n      |                   ^~~~~~~~~\n/tmp/tmp03nbtkz5.cpp:13:22: error: \u2018class std::any\u2019 has no member named \u2018back\u2019\n   13 |         else if(temp.back() == list1.front()){\n      |                      ^~~~\n/tmp/tmp03nbtkz5.cpp:13:38: error: \u2018class std::any\u2019 has no member named \u2018front\u2019\n   13 |         else if(temp.back() == list1.front()){\n      |                                      ^~~~~\n/tmp/tmp03nbtkz5.cpp:14:18: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   14 |             temp.push_back(list1.front());\n      |                  ^~~~~~~~~\n/tmp/tmp03nbtkz5.cpp:14:34: error: \u2018class std::any\u2019 has no member named \u2018front\u2019\n   14 |             temp.push_back(list1.front());\n      |                                  ^~~~~\n/tmp/tmp03nbtkz5.cpp:15:19: error: \u2018class std::any\u2019 has no member named \u2018pop_front\u2019\n   15 |             list1.pop_front();\n      |                   ^~~~~~~~~\n/tmp/tmp03nbtkz5.cpp:18:19: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   18 |             list2.push_back(temp);\n      |                   ^~~~~~~~~\n/tmp/tmp03nbtkz5.cpp:19:18: error: \u2018class std::any",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to pack consecutive duplicates of a given list elements into sublists.\nstd::any pack_consecutive_duplicates(std::any list1) {\n  std::any list2 = list1;\n  std::any list3 = list1;\n  std::any list4 = list1;\n  std::any list5 = list1;\n  std::any list6 = list1;\n  std::any list7 = list1;\n  std::any list8 = list1;\n  std::any list9 = list1;\n  std::any list10 = list1;\n  std::any list11 = list1;\n  std::any list12 = list1;\n  std::any list13 = list1;\n  std::any list14 = list1;\n  std::any list15 = list1;\n  std::any list16 = list1;\n  std::any list17 = list1;\n  std::any list18 = list1;\n  std::any list19 = list1;\n  std::any list20 = list1;\n  std::any list21 = list1;\n  std::any list22 = list1;\n  std::any list23 = list1;\n  std::any list24 = list1;\n  std::any list25 = list1;\n  std::any list26 = list1;\n  std::any list27 = list1;\n  std::any list28 = list1;\n  std::any list29 = list1;\n  std::any list30 = list1;\n  std::any list31 = list1;\n  std::any list32 = list1;\n  std::any list33 = list1;\n  std::any list34 = list1;\n  std::any list35 = list1;\n  std::any list36 = list1;\n  std::any list37 = list1;\n  std::any list38 = list1;\n  std::any list39 = list1;\n  std::any list40 = list1;\n  std::any list41 = list1;\n  std::any list42 = list1;\n  std::any list43 = list1;\n  std::any list44 = list1;\n  std::any list45 = list1;\n  std::any list46 = list1;\n  std::any list47 = list1;\n  std::any list\n}\nint main() {\n    auto candidate = pack_consecutive_duplicates;\n    assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n    assert(candidate((std::any({(long)10, (long)10, (long)15, (long)19, (long)18, (long)18, (long)17, (long)26, (long)26, (long)17, (long)18, (long)10}))) == (std::any({(std::vector<long>)std::vector<long>({(long)10, (long)10}), (std::vector<long>)std::vector<long>({(long)15}), (std::vector<long>)std::vector<long>({(long)19}), (std::vector<long>)std::vector<long>({(long)18, (long)18}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)26, (long)26}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)18}), (std::vector<long>)std::vector<long>({(long)10})})));\n    assert(candidate((std::any({(std::string)\"a\", (std::string)\"a\", (std::string)\"b\", (std::string)\"c\", (std::string)\"d\", (std::string)\"d\"}))) == (std::any({(std::vector<std::string>)std::vector<std::string>({(std::string)\"a\", (std::string)\"a\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"b\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"c\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"d\", (std::string)\"d\"})})));\n}\n",
      "timestamp": 1665510437,
      "stdout": "",
      "stderr": "/tmp/tmpc8rdgkz2.cpp: In function \u2018std::any pack_consecutive_duplicates(std::any)\u2019:\n/tmp/tmpc8rdgkz2.cpp:52:1: error: expected initializer before \u2018}\u2019 token\n   52 | }\n      | ^\n/tmp/tmpc8rdgkz2.cpp:52:1: warning: no return statement in function returning non-void [-Wreturn-type]\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpc8rdgkz2.cpp:2:\n/tmp/tmpc8rdgkz2.cpp: In function \u2018int main()\u2019:\n/tmp/tmpc8rdgkz2.cpp:55:176: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   55 |     assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n      |                                                                                                                                                                                ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpc8rdgkz2.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_cop",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to pack consecutive duplicates of a given list elements into sublists.\nstd::any pack_consecutive_duplicates(std::any list1) {\n  std::any list2;\n  std::any temp;\n  std::any temp2;\n  std::any temp3;\n  std::any temp4;\n  std::any temp5;\n  std::any temp6;\n  std::any temp7;\n  std::any temp8;\n  std::any temp9;\n  std::any temp10;\n  std::any temp11;\n  std::any temp12;\n  std::any temp13;\n  std::any temp14;\n  std::any temp15;\n  std::any temp16;\n  std::any temp17;\n  std::any temp18;\n  std::any temp19;\n  std::any temp20;\n  std::any temp21;\n  std::any temp22;\n  std::any temp23;\n  std::any temp24;\n  std::any temp25;\n  std::any temp26;\n  std::any temp27;\n  std::any temp28;\n  std::any temp29;\n  std::any temp30;\n  std::any temp31;\n  std::any temp32;\n  std::any temp33;\n  std::any temp34;\n  std::any temp35;\n  std::any temp36;\n  std::any temp37;\n  std::any temp38;\n  std::any temp39;\n  std::any temp40;\n  std::any temp41;\n  std::any temp42;\n  std::any temp43;\n  std::any temp44;\n  std::any temp45;\n  std::any temp46;\n  std::any temp47;\n  std::any temp48;\n  std::any temp49;\n  std::any temp50;\n  std::any temp51;\n  std::any temp52;\n  std::any temp53;\n  std::any temp54;\n  std::any temp55;\n  std::any temp56;\n  std::any temp57;\n  std::any temp58;\n  std::any temp59;\n  std::any temp60;\n  std::any temp61;\n  std::any temp62;\n  std::any temp63;\n\n}\nint main() {\n    auto candidate = pack_consecutive_duplicates;\n    assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n    assert(candidate((std::any({(long)10, (long)10, (long)15, (long)19, (long)18, (long)18, (long)17, (long)26, (long)26, (long)17, (long)18, (long)10}))) == (std::any({(std::vector<long>)std::vector<long>({(long)10, (long)10}), (std::vector<long>)std::vector<long>({(long)15}), (std::vector<long>)std::vector<long>({(long)19}), (std::vector<long>)std::vector<long>({(long)18, (long)18}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)26, (long)26}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)18}), (std::vector<long>)std::vector<long>({(long)10})})));\n    assert(candidate((std::any({(std::string)\"a\", (std::string)\"a\", (std::string)\"b\", (std::string)\"c\", (std::string)\"d\", (std::string)\"d\"}))) == (std::any({(std::vector<std::string>)std::vector<std::string>({(std::string)\"a\", (std::string)\"a\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"b\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"c\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"d\", (std::string)\"d\"})})));\n}\n",
      "timestamp": 1665510437,
      "stdout": "",
      "stderr": "/tmp/tmpcbajqnq3.cpp: In function \u2018std::any pack_consecutive_duplicates(std::any)\u2019:\n/tmp/tmpcbajqnq3.cpp:70:1: warning: no return statement in function returning non-void [-Wreturn-type]\n   70 | }\n      | ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpcbajqnq3.cpp:2:\n/tmp/tmpcbajqnq3.cpp: In function \u2018int main()\u2019:\n/tmp/tmpcbajqnq3.cpp:73:176: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   73 |     assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n      |                                                                                                                                                                                ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpcbajqnq3.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>,",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to pack consecutive duplicates of a given list elements into sublists.\nstd::any pack_consecutive_duplicates(std::any list1) {\n    std::any list2;\n    std::any temp;\n    std::any::iterator it1 = list1.begin();\n    std::any::iterator it2 = list2.begin();\n    while(it1 != list1.end()) {\n        temp.push_back(*it1);\n        while(*it1 == *(it1+1)) {\n            temp.push_back(*it1);\n            it1++;\n        }\n        it2 = list2.insert(it2, temp);\n        temp.clear();\n        it1++;\n    }\n    return list2;\n}\nint main() {\n    auto candidate = pack_consecutive_duplicates;\n    assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n    assert(candidate((std::any({(long)10, (long)10, (long)15, (long)19, (long)18, (long)18, (long)17, (long)26, (long)26, (long)17, (long)18, (long)10}))) == (std::any({(std::vector<long>)std::vector<long>({(long)10, (long)10}), (std::vector<long>)std::vector<long>({(long)15}), (std::vector<long>)std::vector<long>({(long)19}), (std::vector<long>)std::vector<long>({(long)18, (long)18}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)26, (long)26}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)18}), (std::vector<long>)std::vector<long>({(long)10})})));\n    assert(candidate((std::any({(std::string)\"a\", (std::string)\"a\", (std::string)\"b\", (std::string)\"c\", (std::string)\"d\", (std::string)\"d\"}))) == (std::any({(std::vector<std::string>)std::vector<std::string>({(std::string)\"a\", (std::string)\"a\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"b\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"c\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"d\", (std::string)\"d\"})})));\n}\n",
      "timestamp": 1665510437,
      "stdout": "",
      "stderr": "/tmp/tmpu52e8qx2.cpp: In function \u2018std::any pack_consecutive_duplicates(std::any)\u2019:\n/tmp/tmpu52e8qx2.cpp:7:15: error: \u2018iterator\u2019 is not a member of \u2018std::any\u2019\n    7 |     std::any::iterator it1 = list1.begin();\n      |               ^~~~~~~~\n/tmp/tmpu52e8qx2.cpp:8:15: error: \u2018iterator\u2019 is not a member of \u2018std::any\u2019\n    8 |     std::any::iterator it2 = list2.begin();\n      |               ^~~~~~~~\n/tmp/tmpu52e8qx2.cpp:9:11: error: \u2018it1\u2019 was not declared in this scope; did you mean \u2018list1\u2019?\n    9 |     while(it1 != list1.end()) {\n      |           ^~~\n      |           list1\n/tmp/tmpu52e8qx2.cpp:9:24: error: \u2018class std::any\u2019 has no member named \u2018end\u2019\n    9 |     while(it1 != list1.end()) {\n      |                        ^~~\n/tmp/tmpu52e8qx2.cpp:10:14: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   10 |         temp.push_back(*it1);\n      |              ^~~~~~~~~\n/tmp/tmpu52e8qx2.cpp:12:18: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   12 |             temp.push_back(*it1);\n      |                  ^~~~~~~~~\n/tmp/tmpu52e8qx2.cpp:15:9: error: \u2018it2\u2019 was not declared in this scope; did you mean \u2018list2\u2019?\n   15 |         it2 = list2.insert(it2, temp);\n      |         ^~~\n      |         list2\n/tmp/tmpu52e8qx2.cpp:15:21: error: \u2018class std::any\u2019 has no member named \u2018insert\u2019\n   15 |         it2 = list2.insert(it2, temp);\n      |                     ^~~~~~\n/tmp/tmpu52e8qx2.cpp:16:14: error: \u2018class std::any\u2019 has no member named \u2018clear\u2019\n   16 |         temp.clear();\n      |              ^~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpu52e8qx2.cpp:2:\n/tmp/tmpu52e8qx2.cpp: In function \u2018int main()\u2019:\n/tmp/tmpu52e8qx2.cpp:23:176: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   23 |     assert(cand",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to pack consecutive duplicates of a given list elements into sublists.\nstd::any pack_consecutive_duplicates(std::any list1) {\n    std::any list2;\n    std::any temp;\n    int count = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        if (list1[i] == list1[i + 1]) {\n            count++;\n            temp.push_back(list1[i]);\n        }\n        else {\n            temp.push_back(list1[i]);\n            list2.push_back(temp);\n            temp.clear();\n            count = 0;\n        }\n    }\n    return list2;\n}\nint main() {\n    auto candidate = pack_consecutive_duplicates;\n    assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n    assert(candidate((std::any({(long)10, (long)10, (long)15, (long)19, (long)18, (long)18, (long)17, (long)26, (long)26, (long)17, (long)18, (long)10}))) == (std::any({(std::vector<long>)std::vector<long>({(long)10, (long)10}), (std::vector<long>)std::vector<long>({(long)15}), (std::vector<long>)std::vector<long>({(long)19}), (std::vector<long>)std::vector<long>({(long)18, (long)18}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)26, (long)26}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)18}), (std::vector<long>)std::vector<long>({(long)10})})));\n    assert(candidate((std::any({(std::string)\"a\", (std::string)\"a\", (std::string)\"b\", (std::string)\"c\", (std::string)\"d\", (std::string)\"d\"}))) == (std::any({(std::vector<std::string>)std::vector<std::string>({(std::string)\"a\", (std::string)\"a\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"b\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"c\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"d\", (std::string)\"d\"})})));\n}\n",
      "timestamp": 1665510437,
      "stdout": "",
      "stderr": "/tmp/tmpf44nuzii.cpp: In function \u2018std::any pack_consecutive_duplicates(std::any)\u2019:\n/tmp/tmpf44nuzii.cpp:8:31: error: \u2018class std::any\u2019 has no member named \u2018size\u2019\n    8 |     for (int i = 0; i < list1.size(); i++) {\n      |                               ^~~~\n/tmp/tmpf44nuzii.cpp:9:18: error: no match for \u2018operator[]\u2019 (operand types are \u2018std::any\u2019 and \u2018int\u2019)\n    9 |         if (list1[i] == list1[i + 1]) {\n      |                  ^\n/tmp/tmpf44nuzii.cpp:9:30: error: no match for \u2018operator[]\u2019 (operand types are \u2018std::any\u2019 and \u2018int\u2019)\n    9 |         if (list1[i] == list1[i + 1]) {\n      |                              ^\n/tmp/tmpf44nuzii.cpp:11:18: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   11 |             temp.push_back(list1[i]);\n      |                  ^~~~~~~~~\n/tmp/tmpf44nuzii.cpp:11:33: error: no match for \u2018operator[]\u2019 (operand types are \u2018std::any\u2019 and \u2018int\u2019)\n   11 |             temp.push_back(list1[i]);\n      |                                 ^\n/tmp/tmpf44nuzii.cpp:14:18: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   14 |             temp.push_back(list1[i]);\n      |                  ^~~~~~~~~\n/tmp/tmpf44nuzii.cpp:14:33: error: no match for \u2018operator[]\u2019 (operand types are \u2018std::any\u2019 and \u2018int\u2019)\n   14 |             temp.push_back(list1[i]);\n      |                                 ^\n/tmp/tmpf44nuzii.cpp:15:19: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   15 |             list2.push_back(temp);\n      |                   ^~~~~~~~~\n/tmp/tmpf44nuzii.cpp:16:18: error: \u2018class std::any\u2019 has no member named \u2018clear\u2019\n   16 |             temp.clear();\n      |                  ^~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpf44nuzii.cpp:2:\n/tmp/tmpf44nuzii.cpp: In function \u2018int main()\u2019:\n/tmp/tmpf44nuzii.cpp",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to pack consecutive duplicates of a given list elements into sublists.\nstd::any pack_consecutive_duplicates(std::any list1) {\n    std::any list2;\n    std::any list3;\n    std::any list4;\n    std::any list5;\n    std::any list6;\n    std::any list7;\n    std::any list8;\n    std::any list9;\n    std::any list10;\n    std::any list11;\n    std::any list12;\n    std::any list13;\n    std::any list14;\n    std::any list15;\n    std::any list16;\n    std::any list17;\n    std::any list18;\n    std::any list19;\n    std::any list20;\n    std::any list21;\n    std::any list22;\n    std::any list23;\n    std::any list24;\n    std::any list25;\n    std::any list26;\n    std::any list27;\n    std::any list28;\n    std::any list29;\n    std::any list30;\n    std::any list31;\n    std::any list32;\n    std::any list33;\n    std::any list34;\n    std::any list35;\n    std::any list36;\n    std::any list37;\n    std::any list38;\n    std::any list39;\n    std::any list40;\n    std::any list41;\n    std::any list42;\n    std::any list43;\n    std::any list44;\n    std::any list45;\n    std::any list46;\n    std::any list47;\n    std::any list48;\n    std::any list49;\n    std::any list50;\n    std::any list51;\n    std::any list52;\n    std::any list53;\n    std::any list54;\n    std::any list55;\n    std::any list56;\n    std::any list57;\n    std::any list58;\n    std::any list59;\n    std::any list60;\n    std::any list61;\n    std::any list62;\n    std::any list63;\n    std::any list64;\n    std::any list65;\n}\nint main() {\n    auto candidate = pack_consecutive_duplicates;\n    assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n    assert(candidate((std::any({(long)10, (long)10, (long)15, (long)19, (long)18, (long)18, (long)17, (long)26, (long)26, (long)17, (long)18, (long)10}))) == (std::any({(std::vector<long>)std::vector<long>({(long)10, (long)10}), (std::vector<long>)std::vector<long>({(long)15}), (std::vector<long>)std::vector<long>({(long)19}), (std::vector<long>)std::vector<long>({(long)18, (long)18}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)26, (long)26}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)18}), (std::vector<long>)std::vector<long>({(long)10})})));\n    assert(candidate((std::any({(std::string)\"a\", (std::string)\"a\", (std::string)\"b\", (std::string)\"c\", (std::string)\"d\", (std::string)\"d\"}))) == (std::any({(std::vector<std::string>)std::vector<std::string>({(std::string)\"a\", (std::string)\"a\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"b\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"c\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"d\", (std::string)\"d\"})})));\n}\n",
      "timestamp": 1665510437,
      "stdout": "",
      "stderr": "/tmp/tmpgspun4wj.cpp: In function \u2018std::any pack_consecutive_duplicates(std::any)\u2019:\n/tmp/tmpgspun4wj.cpp:69:1: warning: no return statement in function returning non-void [-Wreturn-type]\n   69 | }\n      | ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpgspun4wj.cpp:2:\n/tmp/tmpgspun4wj.cpp: In function \u2018int main()\u2019:\n/tmp/tmpgspun4wj.cpp:72:176: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   72 |     assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n      |                                                                                                                                                                                ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpgspun4wj.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>,",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to pack consecutive duplicates of a given list elements into sublists.\nstd::any pack_consecutive_duplicates(std::any list1) {\n    std::any list2;\n    std::any list3;\n    std::any list4;\n    std::any list5;\n    std::any list6;\n    std::any list7;\n    std::any list8;\n    std::any list9;\n    std::any list10;\n    std::any list11;\n    std::any list12;\n    std::any list13;\n    std::any list14;\n    std::any list15;\n    std::any list16;\n    std::any list17;\n    std::any list18;\n    std::any list19;\n    std::any list20;\n    std::any list21;\n    std::any list22;\n    std::any list23;\n    std::any list24;\n    std::any list25;\n    std::any list26;\n    std::any list27;\n    std::any list28;\n    std::any list29;\n    std::any list30;\n    std::any list31;\n    std::any list32;\n    std::any list33;\n    std::any list34;\n    std::any list35;\n    std::any list36;\n    std::any list37;\n    std::any list38;\n    std::any list39;\n    std::any list40;\n    std::any list41;\n    std::any list42;\n    std::any list43;\n    std::any list44;\n    std::any list45;\n    std::any list46;\n    std::any list47;\n    std::any list48;\n    std::any list49;\n    std::any list50;\n    std::any list51;\n    std::any list52;\n    std::any list53;\n    std::any list54;\n    std::any list55;\n    std::any list56;\n    std::any list57;\n    std::any list58;\n    std::any list59;\n    std::any list60;\n    std::any list61;\n    std::any list62;\n    std::any list63;\n    std::any list64;\n    std::any list65;\n}\nint main() {\n    auto candidate = pack_consecutive_duplicates;\n    assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n    assert(candidate((std::any({(long)10, (long)10, (long)15, (long)19, (long)18, (long)18, (long)17, (long)26, (long)26, (long)17, (long)18, (long)10}))) == (std::any({(std::vector<long>)std::vector<long>({(long)10, (long)10}), (std::vector<long>)std::vector<long>({(long)15}), (std::vector<long>)std::vector<long>({(long)19}), (std::vector<long>)std::vector<long>({(long)18, (long)18}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)26, (long)26}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)18}), (std::vector<long>)std::vector<long>({(long)10})})));\n    assert(candidate((std::any({(std::string)\"a\", (std::string)\"a\", (std::string)\"b\", (std::string)\"c\", (std::string)\"d\", (std::string)\"d\"}))) == (std::any({(std::vector<std::string>)std::vector<std::string>({(std::string)\"a\", (std::string)\"a\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"b\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"c\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"d\", (std::string)\"d\"})})));\n}\n",
      "timestamp": 1665510437,
      "stdout": "",
      "stderr": "/tmp/tmpgspun4wj.cpp: In function \u2018std::any pack_consecutive_duplicates(std::any)\u2019:\n/tmp/tmpgspun4wj.cpp:69:1: warning: no return statement in function returning non-void [-Wreturn-type]\n   69 | }\n      | ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpgspun4wj.cpp:2:\n/tmp/tmpgspun4wj.cpp: In function \u2018int main()\u2019:\n/tmp/tmpgspun4wj.cpp:72:176: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   72 |     assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n      |                                                                                                                                                                                ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpgspun4wj.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>,",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to pack consecutive duplicates of a given list elements into sublists.\nstd::any pack_consecutive_duplicates(std::any list1) {\n    std::any list2;\n    std::any temp;\n    std::any temp2;\n    std::any temp3;\n    std::any temp4;\n    std::any temp5;\n    std::any temp6;\n    std::any temp7;\n    std::any temp8;\n    std::any temp9;\n    std::any temp10;\n    std::any temp11;\n    std::any temp12;\n    std::any temp13;\n    std::any temp14;\n    std::any temp15;\n    std::any temp16;\n    std::any temp17;\n    std::any temp18;\n    std::any temp19;\n    std::any temp20;\n    std::any temp21;\n    std::any temp22;\n    std::any temp23;\n    std::any temp24;\n    std::any temp25;\n    std::any temp26;\n    std::any temp27;\n    std::any temp28;\n    std::any temp29;\n    std::any temp30;\n    std::any temp31;\n    std::any temp32;\n    std::any temp33;\n    std::any temp34;\n    std::any temp35;\n    std::any temp36;\n    std::any temp37;\n    std::any temp38;\n    std::any temp39;\n    std::any temp40;\n    std::any temp41;\n    std::any temp42;\n    std::any temp43;\n    std::any temp44;\n    std::any temp45;\n    std::any temp46;\n    std::any temp47;\n    std::any temp48;\n    std::any temp49;\n    std::any temp50;\n    std::any temp51;\n    std::any temp52;\n    std::any temp53;\n    std::any temp54;\n    std::any temp55;\n    std::any temp56;\n    std::any temp57;\n    std::any temp58;\n    std::any temp59;\n    std::any temp60;\n    std::any temp61;\n    std::any temp62;\n    std::any temp63;\n\n}\nint main() {\n    auto candidate = pack_consecutive_duplicates;\n    assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n    assert(candidate((std::any({(long)10, (long)10, (long)15, (long)19, (long)18, (long)18, (long)17, (long)26, (long)26, (long)17, (long)18, (long)10}))) == (std::any({(std::vector<long>)std::vector<long>({(long)10, (long)10}), (std::vector<long>)std::vector<long>({(long)15}), (std::vector<long>)std::vector<long>({(long)19}), (std::vector<long>)std::vector<long>({(long)18, (long)18}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)26, (long)26}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)18}), (std::vector<long>)std::vector<long>({(long)10})})));\n    assert(candidate((std::any({(std::string)\"a\", (std::string)\"a\", (std::string)\"b\", (std::string)\"c\", (std::string)\"d\", (std::string)\"d\"}))) == (std::any({(std::vector<std::string>)std::vector<std::string>({(std::string)\"a\", (std::string)\"a\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"b\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"c\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"d\", (std::string)\"d\"})})));\n}\n",
      "timestamp": 1665510437,
      "stdout": "",
      "stderr": "/tmp/tmp996xkpjp.cpp: In function \u2018std::any pack_consecutive_duplicates(std::any)\u2019:\n/tmp/tmp996xkpjp.cpp:70:1: warning: no return statement in function returning non-void [-Wreturn-type]\n   70 | }\n      | ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp996xkpjp.cpp:2:\n/tmp/tmp996xkpjp.cpp: In function \u2018int main()\u2019:\n/tmp/tmp996xkpjp.cpp:73:176: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   73 |     assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n      |                                                                                                                                                                                ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmp996xkpjp.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>,",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to pack consecutive duplicates of a given list elements into sublists.\nstd::any pack_consecutive_duplicates(std::any list1) {\n    std::any list2;\n    std::any temp;\n    std::any::iterator it = list1.begin();\n    while (it != list1.end()) {\n        temp.push_back(*it);\n        it++;\n        if (it == list1.end() || *it != temp.back()) {\n            list2.push_back(temp);\n            temp.clear();\n        }\n    }\n    return list2;\n}\nint main() {\n    auto candidate = pack_consecutive_duplicates;\n    assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n    assert(candidate((std::any({(long)10, (long)10, (long)15, (long)19, (long)18, (long)18, (long)17, (long)26, (long)26, (long)17, (long)18, (long)10}))) == (std::any({(std::vector<long>)std::vector<long>({(long)10, (long)10}), (std::vector<long>)std::vector<long>({(long)15}), (std::vector<long>)std::vector<long>({(long)19}), (std::vector<long>)std::vector<long>({(long)18, (long)18}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)26, (long)26}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)18}), (std::vector<long>)std::vector<long>({(long)10})})));\n    assert(candidate((std::any({(std::string)\"a\", (std::string)\"a\", (std::string)\"b\", (std::string)\"c\", (std::string)\"d\", (std::string)\"d\"}))) == (std::any({(std::vector<std::string>)std::vector<std::string>({(std::string)\"a\", (std::string)\"a\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"b\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"c\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"d\", (std::string)\"d\"})})));\n}\n",
      "timestamp": 1665510437,
      "stdout": "",
      "stderr": "/tmp/tmps8agvmg9.cpp: In function \u2018std::any pack_consecutive_duplicates(std::any)\u2019:\n/tmp/tmps8agvmg9.cpp:7:15: error: \u2018iterator\u2019 is not a member of \u2018std::any\u2019\n    7 |     std::any::iterator it = list1.begin();\n      |               ^~~~~~~~\n/tmp/tmps8agvmg9.cpp:8:12: error: \u2018it\u2019 was not declared in this scope; did you mean \u2018int\u2019?\n    8 |     while (it != list1.end()) {\n      |            ^~\n      |            int\n/tmp/tmps8agvmg9.cpp:8:24: error: \u2018class std::any\u2019 has no member named \u2018end\u2019\n    8 |     while (it != list1.end()) {\n      |                        ^~~\n/tmp/tmps8agvmg9.cpp:9:14: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n    9 |         temp.push_back(*it);\n      |              ^~~~~~~~~\n/tmp/tmps8agvmg9.cpp:11:25: error: \u2018class std::any\u2019 has no member named \u2018end\u2019\n   11 |         if (it == list1.end() || *it != temp.back()) {\n      |                         ^~~\n/tmp/tmps8agvmg9.cpp:11:46: error: \u2018class std::any\u2019 has no member named \u2018back\u2019\n   11 |         if (it == list1.end() || *it != temp.back()) {\n      |                                              ^~~~\n/tmp/tmps8agvmg9.cpp:12:19: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   12 |             list2.push_back(temp);\n      |                   ^~~~~~~~~\n/tmp/tmps8agvmg9.cpp:13:18: error: \u2018class std::any\u2019 has no member named \u2018clear\u2019\n   13 |             temp.clear();\n      |                  ^~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmps8agvmg9.cpp:2:\n/tmp/tmps8agvmg9.cpp: In function \u2018int main()\u2019:\n/tmp/tmps8agvmg9.cpp:20:176: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   20 |     assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to pack consecutive duplicates of a given list elements into sublists.\nstd::any pack_consecutive_duplicates(std::any list1) {\n    std::any list2;\n    std::any temp;\n    std::any::iterator it = list1.begin();\n    while (it != list1.end()) {\n        temp.push_back(*it);\n        it++;\n        if (it == list1.end() || *it != temp.back()) {\n            list2.push_back(temp);\n            temp.clear();\n        }\n    }\n    return list2;\n}\nint main() {\n    auto candidate = pack_consecutive_duplicates;\n    assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n    assert(candidate((std::any({(long)10, (long)10, (long)15, (long)19, (long)18, (long)18, (long)17, (long)26, (long)26, (long)17, (long)18, (long)10}))) == (std::any({(std::vector<long>)std::vector<long>({(long)10, (long)10}), (std::vector<long>)std::vector<long>({(long)15}), (std::vector<long>)std::vector<long>({(long)19}), (std::vector<long>)std::vector<long>({(long)18, (long)18}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)26, (long)26}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)18}), (std::vector<long>)std::vector<long>({(long)10})})));\n    assert(candidate((std::any({(std::string)\"a\", (std::string)\"a\", (std::string)\"b\", (std::string)\"c\", (std::string)\"d\", (std::string)\"d\"}))) == (std::any({(std::vector<std::string>)std::vector<std::string>({(std::string)\"a\", (std::string)\"a\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"b\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"c\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"d\", (std::string)\"d\"})})));\n}\n",
      "timestamp": 1665510437,
      "stdout": "",
      "stderr": "/tmp/tmps8agvmg9.cpp: In function \u2018std::any pack_consecutive_duplicates(std::any)\u2019:\n/tmp/tmps8agvmg9.cpp:7:15: error: \u2018iterator\u2019 is not a member of \u2018std::any\u2019\n    7 |     std::any::iterator it = list1.begin();\n      |               ^~~~~~~~\n/tmp/tmps8agvmg9.cpp:8:12: error: \u2018it\u2019 was not declared in this scope; did you mean \u2018int\u2019?\n    8 |     while (it != list1.end()) {\n      |            ^~\n      |            int\n/tmp/tmps8agvmg9.cpp:8:24: error: \u2018class std::any\u2019 has no member named \u2018end\u2019\n    8 |     while (it != list1.end()) {\n      |                        ^~~\n/tmp/tmps8agvmg9.cpp:9:14: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n    9 |         temp.push_back(*it);\n      |              ^~~~~~~~~\n/tmp/tmps8agvmg9.cpp:11:25: error: \u2018class std::any\u2019 has no member named \u2018end\u2019\n   11 |         if (it == list1.end() || *it != temp.back()) {\n      |                         ^~~\n/tmp/tmps8agvmg9.cpp:11:46: error: \u2018class std::any\u2019 has no member named \u2018back\u2019\n   11 |         if (it == list1.end() || *it != temp.back()) {\n      |                                              ^~~~\n/tmp/tmps8agvmg9.cpp:12:19: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   12 |             list2.push_back(temp);\n      |                   ^~~~~~~~~\n/tmp/tmps8agvmg9.cpp:13:18: error: \u2018class std::any\u2019 has no member named \u2018clear\u2019\n   13 |             temp.clear();\n      |                  ^~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmps8agvmg9.cpp:2:\n/tmp/tmps8agvmg9.cpp: In function \u2018int main()\u2019:\n/tmp/tmps8agvmg9.cpp:20:176: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   20 |     assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to pack consecutive duplicates of a given list elements into sublists.\nstd::any pack_consecutive_duplicates(std::any list1) {\n    std::any list2;\n    std::any sublist;\n    std::any temp;\n    temp = list1.front();\n    sublist.push_back(temp);\n    list1.pop_front();\n    while(!list1.empty()) {\n        if(temp == list1.front()) {\n            sublist.push_back(list1.front());\n            list1.pop_front();\n        }\n        else {\n            list2.push_back(sublist);\n            sublist.clear();\n            temp = list1.front();\n            sublist.push_back(temp);\n            list1.pop_front();\n        }\n    }\n    list2.push_back(sublist);\n    return list2;\n}\nint main() {\n    auto candidate = pack_consecutive_duplicates;\n    assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n    assert(candidate((std::any({(long)10, (long)10, (long)15, (long)19, (long)18, (long)18, (long)17, (long)26, (long)26, (long)17, (long)18, (long)10}))) == (std::any({(std::vector<long>)std::vector<long>({(long)10, (long)10}), (std::vector<long>)std::vector<long>({(long)15}), (std::vector<long>)std::vector<long>({(long)19}), (std::vector<long>)std::vector<long>({(long)18, (long)18}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)26, (long)26}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)18}), (std::vector<long>)std::vector<long>({(long)10})})));\n    assert(candidate((std::any({(std::string)\"a\", (std::string)\"a\", (std::string)\"b\", (std::string)\"c\", (std::string)\"d\", (std::string)\"d\"}))) == (std::any({(std::vector<std::string>)std::vector<std::string>({(std::string)\"a\", (std::string)\"a\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"b\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"c\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"d\", (std::string)\"d\"})})));\n}\n",
      "timestamp": 1666123393,
      "stdout": "",
      "stderr": "/tmp/tmpblspgxn3.cpp: In function \u2018std::any pack_consecutive_duplicates(std::any)\u2019:\n/tmp/tmpblspgxn3.cpp:8:18: error: \u2018class std::any\u2019 has no member named \u2018front\u2019\n    8 |     temp = list1.front();\n      |                  ^~~~~\n/tmp/tmpblspgxn3.cpp:9:13: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n    9 |     sublist.push_back(temp);\n      |             ^~~~~~~~~\n/tmp/tmpblspgxn3.cpp:10:11: error: \u2018class std::any\u2019 has no member named \u2018pop_front\u2019\n   10 |     list1.pop_front();\n      |           ^~~~~~~~~\n/tmp/tmpblspgxn3.cpp:11:18: error: \u2018class std::any\u2019 has no member named \u2018empty\u2019\n   11 |     while(!list1.empty()) {\n      |                  ^~~~~\n/tmp/tmpblspgxn3.cpp:12:26: error: \u2018class std::any\u2019 has no member named \u2018front\u2019\n   12 |         if(temp == list1.front()) {\n      |                          ^~~~~\n/tmp/tmpblspgxn3.cpp:13:21: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   13 |             sublist.push_back(list1.front());\n      |                     ^~~~~~~~~\n/tmp/tmpblspgxn3.cpp:13:37: error: \u2018class std::any\u2019 has no member named \u2018front\u2019\n   13 |             sublist.push_back(list1.front());\n      |                                     ^~~~~\n/tmp/tmpblspgxn3.cpp:14:19: error: \u2018class std::any\u2019 has no member named \u2018pop_front\u2019\n   14 |             list1.pop_front();\n      |                   ^~~~~~~~~\n/tmp/tmpblspgxn3.cpp:17:19: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   17 |             list2.push_back(sublist);\n      |                   ^~~~~~~~~\n/tmp/tmpblspgxn3.cpp:18:21: error: \u2018class std::any\u2019 has no member named \u2018clear\u2019\n   18 |             sublist.clear();\n      |                     ^~~~~\n/tmp/tmpblspgxn3.cpp:19:26: error: \u2018class std::any\u2019 has no member named \u2018front\u2019\n   19 |             temp = list1.front();\n      |                          ^~~~~\n/tmp/tmpblspgxn3.cpp:20:21: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   20 |             sublist.push_bac",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to pack consecutive duplicates of a given list elements into sublists.\nstd::any pack_consecutive_duplicates(std::any list1) {\n    std::any list2;\n    std::any temp;\n    std::any temp2;\n    std::any temp3;\n    std::any temp4;\n    std::any temp5;\n    std::any temp6;\n    std::any temp7;\n    std::any temp8;\n    std::any temp9;\n    std::any temp10;\n    std::any temp11;\n    std::any temp12;\n    std::any temp13;\n    std::any temp14;\n    std::any temp15;\n    std::any temp16;\n    std::any temp17;\n    std::any temp18;\n    std::any temp19;\n    std::any temp20;\n    std::any temp21;\n    std::any temp22;\n    std::any temp23;\n    std::any temp24;\n    std::any temp25;\n    std::any temp26;\n    std::any temp27;\n    std::any temp28;\n    std::any temp29;\n    std::any temp30;\n    std::any temp31;\n    std::any temp32;\n    std::any temp33;\n    std::any temp34;\n    std::any temp35;\n    std::any temp36;\n    std::any temp37;\n    std::any temp38;\n    std::any temp39;\n    std::any temp40;\n    std::any temp41;\n    std::any temp42;\n    std::any temp43;\n    std::any temp44;\n    std::any temp45;\n    std::any temp46;\n    std::any temp47;\n    std::any temp48;\n    std::any temp49;\n    std::any temp50;\n    std::any temp51;\n    std::any temp52;\n    std::any temp53;\n    std::any temp54;\n    std::any temp55;\n    std::any temp56;\n    std::any temp57;\n    std::any temp58;\n    std::any temp59;\n    std::any temp60;\n    std::any temp61;\n    std::any temp62;\n    std::any temp63;\n\n}\nint main() {\n    auto candidate = pack_consecutive_duplicates;\n    assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n    assert(candidate((std::any({(long)10, (long)10, (long)15, (long)19, (long)18, (long)18, (long)17, (long)26, (long)26, (long)17, (long)18, (long)10}))) == (std::any({(std::vector<long>)std::vector<long>({(long)10, (long)10}), (std::vector<long>)std::vector<long>({(long)15}), (std::vector<long>)std::vector<long>({(long)19}), (std::vector<long>)std::vector<long>({(long)18, (long)18}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)26, (long)26}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)18}), (std::vector<long>)std::vector<long>({(long)10})})));\n    assert(candidate((std::any({(std::string)\"a\", (std::string)\"a\", (std::string)\"b\", (std::string)\"c\", (std::string)\"d\", (std::string)\"d\"}))) == (std::any({(std::vector<std::string>)std::vector<std::string>({(std::string)\"a\", (std::string)\"a\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"b\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"c\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"d\", (std::string)\"d\"})})));\n}\n",
      "timestamp": 1665510437,
      "stdout": "",
      "stderr": "/tmp/tmp996xkpjp.cpp: In function \u2018std::any pack_consecutive_duplicates(std::any)\u2019:\n/tmp/tmp996xkpjp.cpp:70:1: warning: no return statement in function returning non-void [-Wreturn-type]\n   70 | }\n      | ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp996xkpjp.cpp:2:\n/tmp/tmp996xkpjp.cpp: In function \u2018int main()\u2019:\n/tmp/tmp996xkpjp.cpp:73:176: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   73 |     assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n      |                                                                                                                                                                                ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmp996xkpjp.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>,",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to pack consecutive duplicates of a given list elements into sublists.\nstd::any pack_consecutive_duplicates(std::any list1) {\n    std::any list2;\n    std::any sublist;\n    std::any temp;\n    while(list1.size()!=0)\n    {\n        temp = list1.front();\n        list1.pop_front();\n        while(list1.front()==temp)\n        {\n            sublist.push_back(list1.front());\n            list1.pop_front();\n        }\n        sublist.push_back(temp);\n        list2.push_back(sublist);\n        sublist.clear();\n    }\n    return list2;\n}\nint main() {\n    auto candidate = pack_consecutive_duplicates;\n    assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n    assert(candidate((std::any({(long)10, (long)10, (long)15, (long)19, (long)18, (long)18, (long)17, (long)26, (long)26, (long)17, (long)18, (long)10}))) == (std::any({(std::vector<long>)std::vector<long>({(long)10, (long)10}), (std::vector<long>)std::vector<long>({(long)15}), (std::vector<long>)std::vector<long>({(long)19}), (std::vector<long>)std::vector<long>({(long)18, (long)18}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)26, (long)26}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)18}), (std::vector<long>)std::vector<long>({(long)10})})));\n    assert(candidate((std::any({(std::string)\"a\", (std::string)\"a\", (std::string)\"b\", (std::string)\"c\", (std::string)\"d\", (std::string)\"d\"}))) == (std::any({(std::vector<std::string>)std::vector<std::string>({(std::string)\"a\", (std::string)\"a\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"b\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"c\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"d\", (std::string)\"d\"})})));\n}\n",
      "timestamp": 1666123393,
      "stdout": "",
      "stderr": "/tmp/tmp8iswlxpw.cpp: In function \u2018std::any pack_consecutive_duplicates(std::any)\u2019:\n/tmp/tmp8iswlxpw.cpp:8:17: error: \u2018class std::any\u2019 has no member named \u2018size\u2019\n    8 |     while(list1.size()!=0)\n      |                 ^~~~\n/tmp/tmp8iswlxpw.cpp:10:22: error: \u2018class std::any\u2019 has no member named \u2018front\u2019\n   10 |         temp = list1.front();\n      |                      ^~~~~\n/tmp/tmp8iswlxpw.cpp:11:15: error: \u2018class std::any\u2019 has no member named \u2018pop_front\u2019\n   11 |         list1.pop_front();\n      |               ^~~~~~~~~\n/tmp/tmp8iswlxpw.cpp:12:21: error: \u2018class std::any\u2019 has no member named \u2018front\u2019\n   12 |         while(list1.front()==temp)\n      |                     ^~~~~\n/tmp/tmp8iswlxpw.cpp:14:21: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   14 |             sublist.push_back(list1.front());\n      |                     ^~~~~~~~~\n/tmp/tmp8iswlxpw.cpp:14:37: error: \u2018class std::any\u2019 has no member named \u2018front\u2019\n   14 |             sublist.push_back(list1.front());\n      |                                     ^~~~~\n/tmp/tmp8iswlxpw.cpp:15:19: error: \u2018class std::any\u2019 has no member named \u2018pop_front\u2019\n   15 |             list1.pop_front();\n      |                   ^~~~~~~~~\n/tmp/tmp8iswlxpw.cpp:17:17: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   17 |         sublist.push_back(temp);\n      |                 ^~~~~~~~~\n/tmp/tmp8iswlxpw.cpp:18:15: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   18 |         list2.push_back(sublist);\n      |               ^~~~~~~~~\n/tmp/tmp8iswlxpw.cpp:19:17: error: \u2018class std::any\u2019 has no member named \u2018clear\u2019\n   19 |         sublist.clear();\n      |                 ^~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp8iswlxpw.cpp:2:\n/tmp/tmp8iswlxpw.cpp: In function \u2018int main()\u2019:\n/t",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to pack consecutive duplicates of a given list elements into sublists.\nstd::any pack_consecutive_duplicates(std::any list1) {\n    std::any list2;\n    std::any temp;\n    std::any::iterator it;\n    std::any::iterator it1;\n    std::any::iterator it2;\n    it1 = list1.begin();\n    it2 = list1.begin();\n    it2++;\n    while(it2 != list1.end()) {\n        if(*it1 == *it2) {\n            temp.push_back(*it1);\n            it1++;\n            it2++;\n        }\n        else {\n            temp.push_back(*it1);\n            list2.push_back(temp);\n            temp.clear();\n            it1++;\n            it2++;\n        }\n    }\n    temp.push_back(*it1);\n    list2.push_back(temp);\n    return list2;\n}\nint main() {\n    auto candidate = pack_consecutive_duplicates;\n    assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n    assert(candidate((std::any({(long)10, (long)10, (long)15, (long)19, (long)18, (long)18, (long)17, (long)26, (long)26, (long)17, (long)18, (long)10}))) == (std::any({(std::vector<long>)std::vector<long>({(long)10, (long)10}), (std::vector<long>)std::vector<long>({(long)15}), (std::vector<long>)std::vector<long>({(long)19}), (std::vector<long>)std::vector<long>({(long)18, (long)18}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)26, (long)26}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)18}), (std::vector<long>)std::vector<long>({(long)10})})));\n    assert(candidate((std::any({(std::string)\"a\", (std::string)\"a\", (std::string)\"b\", (std::string)\"c\", (std::string)\"d\", (std::string)\"d\"}))) == (std::any({(std::vector<std::string>)std::vector<std::string>({(std::string)\"a\", (std::string)\"a\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"b\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"c\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"d\", (std::string)\"d\"})})));\n}\n",
      "timestamp": 1666123393,
      "stdout": "",
      "stderr": "/tmp/tmppm8n9j9p.cpp: In function \u2018std::any pack_consecutive_duplicates(std::any)\u2019:\n/tmp/tmppm8n9j9p.cpp:7:15: error: \u2018iterator\u2019 is not a member of \u2018std::any\u2019\n    7 |     std::any::iterator it;\n      |               ^~~~~~~~\n/tmp/tmppm8n9j9p.cpp:8:15: error: \u2018iterator\u2019 is not a member of \u2018std::any\u2019\n    8 |     std::any::iterator it1;\n      |               ^~~~~~~~\n/tmp/tmppm8n9j9p.cpp:9:15: error: \u2018iterator\u2019 is not a member of \u2018std::any\u2019\n    9 |     std::any::iterator it2;\n      |               ^~~~~~~~\n/tmp/tmppm8n9j9p.cpp:10:5: error: \u2018it1\u2019 was not declared in this scope; did you mean \u2018list1\u2019?\n   10 |     it1 = list1.begin();\n      |     ^~~\n      |     list1\n/tmp/tmppm8n9j9p.cpp:10:17: error: \u2018class std::any\u2019 has no member named \u2018begin\u2019\n   10 |     it1 = list1.begin();\n      |                 ^~~~~\n/tmp/tmppm8n9j9p.cpp:11:5: error: \u2018it2\u2019 was not declared in this scope; did you mean \u2018list2\u2019?\n   11 |     it2 = list1.begin();\n      |     ^~~\n      |     list2\n/tmp/tmppm8n9j9p.cpp:11:17: error: \u2018class std::any\u2019 has no member named \u2018begin\u2019\n   11 |     it2 = list1.begin();\n      |                 ^~~~~\n/tmp/tmppm8n9j9p.cpp:13:24: error: \u2018class std::any\u2019 has no member named \u2018end\u2019\n   13 |     while(it2 != list1.end()) {\n      |                        ^~~\n/tmp/tmppm8n9j9p.cpp:15:18: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   15 |             temp.push_back(*it1);\n      |                  ^~~~~~~~~\n/tmp/tmppm8n9j9p.cpp:20:18: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   20 |             temp.push_back(*it1);\n      |                  ^~~~~~~~~\n/tmp/tmppm8n9j9p.cpp:21:19: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   21 |             list2.push_back(temp);\n      |                   ^~~~~~~~~\n/tmp/tmppm8n9j9p.cpp:22:18: error: \u2018class std::any\u2019 has no member named \u2018clear\u2019\n   22 |             temp.clear();\n      |                  ^~~~~\n/tmp/tmppm8n9j9p.cpp:27:10: error: \u2018class std:",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to pack consecutive duplicates of a given list elements into sublists.\nstd::any pack_consecutive_duplicates(std::any list1) {\n    std::any list2;\n    std::any temp;\n    std::any::iterator it = list1.begin();\n    while(it != list1.end()) {\n        temp.push_back(*it);\n        while(it != list1.end() && *it == *(it + 1)) {\n            temp.push_back(*it);\n            it++;\n        }\n        list2.push_back(temp);\n        temp.clear();\n        it++;\n    }\n    return list2;\n}\nint main() {\n    auto candidate = pack_consecutive_duplicates;\n    assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n    assert(candidate((std::any({(long)10, (long)10, (long)15, (long)19, (long)18, (long)18, (long)17, (long)26, (long)26, (long)17, (long)18, (long)10}))) == (std::any({(std::vector<long>)std::vector<long>({(long)10, (long)10}), (std::vector<long>)std::vector<long>({(long)15}), (std::vector<long>)std::vector<long>({(long)19}), (std::vector<long>)std::vector<long>({(long)18, (long)18}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)26, (long)26}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)18}), (std::vector<long>)std::vector<long>({(long)10})})));\n    assert(candidate((std::any({(std::string)\"a\", (std::string)\"a\", (std::string)\"b\", (std::string)\"c\", (std::string)\"d\", (std::string)\"d\"}))) == (std::any({(std::vector<std::string>)std::vector<std::string>({(std::string)\"a\", (std::string)\"a\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"b\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"c\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"d\", (std::string)\"d\"})})));\n}\n",
      "timestamp": 1666123393,
      "stdout": "",
      "stderr": "/tmp/tmp_6y77lik.cpp: In function \u2018std::any pack_consecutive_duplicates(std::any)\u2019:\n/tmp/tmp_6y77lik.cpp:7:15: error: \u2018iterator\u2019 is not a member of \u2018std::any\u2019\n    7 |     std::any::iterator it = list1.begin();\n      |               ^~~~~~~~\n/tmp/tmp_6y77lik.cpp:8:11: error: \u2018it\u2019 was not declared in this scope; did you mean \u2018int\u2019?\n    8 |     while(it != list1.end()) {\n      |           ^~\n      |           int\n/tmp/tmp_6y77lik.cpp:8:23: error: \u2018class std::any\u2019 has no member named \u2018end\u2019\n    8 |     while(it != list1.end()) {\n      |                       ^~~\n/tmp/tmp_6y77lik.cpp:9:14: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n    9 |         temp.push_back(*it);\n      |              ^~~~~~~~~\n/tmp/tmp_6y77lik.cpp:10:27: error: \u2018class std::any\u2019 has no member named \u2018end\u2019\n   10 |         while(it != list1.end() && *it == *(it + 1)) {\n      |                           ^~~\n/tmp/tmp_6y77lik.cpp:11:18: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   11 |             temp.push_back(*it);\n      |                  ^~~~~~~~~\n/tmp/tmp_6y77lik.cpp:14:15: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   14 |         list2.push_back(temp);\n      |               ^~~~~~~~~\n/tmp/tmp_6y77lik.cpp:15:14: error: \u2018class std::any\u2019 has no member named \u2018clear\u2019\n   15 |         temp.clear();\n      |              ^~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp_6y77lik.cpp:2:\n/tmp/tmp_6y77lik.cpp: In function \u2018int main()\u2019:\n/tmp/tmp_6y77lik.cpp:22:176: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   22 |     assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to pack consecutive duplicates of a given list elements into sublists.\nstd::any pack_consecutive_duplicates(std::any list1) {\n    std::any list2;\n    std::any temp;\n    std::any temp2;\n    int count = 0;\n    while(!list1.empty()) {\n        temp = list1.front();\n        list1.pop_front();\n        while(!list1.empty() && list1.front() == temp) {\n            list1.pop_front();\n            count++;\n        }\n        temp2.push_back(temp);\n        temp2.push_back(count);\n        list2.push_back(temp2);\n        temp2.clear();\n        count = 0;\n    }\n    return list2;\n}\nint main() {\n    auto candidate = pack_consecutive_duplicates;\n    assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n    assert(candidate((std::any({(long)10, (long)10, (long)15, (long)19, (long)18, (long)18, (long)17, (long)26, (long)26, (long)17, (long)18, (long)10}))) == (std::any({(std::vector<long>)std::vector<long>({(long)10, (long)10}), (std::vector<long>)std::vector<long>({(long)15}), (std::vector<long>)std::vector<long>({(long)19}), (std::vector<long>)std::vector<long>({(long)18, (long)18}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)26, (long)26}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)18}), (std::vector<long>)std::vector<long>({(long)10})})));\n    assert(candidate((std::any({(std::string)\"a\", (std::string)\"a\", (std::string)\"b\", (std::string)\"c\", (std::string)\"d\", (std::string)\"d\"}))) == (std::any({(std::vector<std::string>)std::vector<std::string>({(std::string)\"a\", (std::string)\"a\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"b\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"c\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"d\", (std::string)\"d\"})})));\n}\n",
      "timestamp": 1666123393,
      "stdout": "",
      "stderr": "/tmp/tmp3ueh9oet.cpp: In function \u2018std::any pack_consecutive_duplicates(std::any)\u2019:\n/tmp/tmp3ueh9oet.cpp:9:18: error: \u2018class std::any\u2019 has no member named \u2018empty\u2019\n    9 |     while(!list1.empty()) {\n      |                  ^~~~~\n/tmp/tmp3ueh9oet.cpp:10:22: error: \u2018class std::any\u2019 has no member named \u2018front\u2019\n   10 |         temp = list1.front();\n      |                      ^~~~~\n/tmp/tmp3ueh9oet.cpp:11:15: error: \u2018class std::any\u2019 has no member named \u2018pop_front\u2019\n   11 |         list1.pop_front();\n      |               ^~~~~~~~~\n/tmp/tmp3ueh9oet.cpp:12:22: error: \u2018class std::any\u2019 has no member named \u2018empty\u2019\n   12 |         while(!list1.empty() && list1.front() == temp) {\n      |                      ^~~~~\n/tmp/tmp3ueh9oet.cpp:12:39: error: \u2018class std::any\u2019 has no member named \u2018front\u2019\n   12 |         while(!list1.empty() && list1.front() == temp) {\n      |                                       ^~~~~\n/tmp/tmp3ueh9oet.cpp:13:19: error: \u2018class std::any\u2019 has no member named \u2018pop_front\u2019\n   13 |             list1.pop_front();\n      |                   ^~~~~~~~~\n/tmp/tmp3ueh9oet.cpp:16:15: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   16 |         temp2.push_back(temp);\n      |               ^~~~~~~~~\n/tmp/tmp3ueh9oet.cpp:17:15: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   17 |         temp2.push_back(count);\n      |               ^~~~~~~~~\n/tmp/tmp3ueh9oet.cpp:18:15: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   18 |         list2.push_back(temp2);\n      |               ^~~~~~~~~\n/tmp/tmp3ueh9oet.cpp:19:15: error: \u2018class std::any\u2019 has no member named \u2018clear\u2019\n   19 |         temp2.clear();\n      |               ^~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp3ueh9oet.cpp:2:\n/tmp/tmp3ueh9oet.cpp: In function \u2018int mai",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to pack consecutive duplicates of a given list elements into sublists.\nstd::any pack_consecutive_duplicates(std::any list1) {\n    std::any result;\n    std::any current_sublist;\n    std::any previous_element;\n    for (auto element : list1) {\n        if (element != previous_element) {\n            current_sublist = {};\n            result.push_back(current_sublist);\n        }\n        current_sublist.push_back(element);\n        previous_element = element;\n    }\n    return result;\n}\nint main() {\n    auto candidate = pack_consecutive_duplicates;\n    assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n    assert(candidate((std::any({(long)10, (long)10, (long)15, (long)19, (long)18, (long)18, (long)17, (long)26, (long)26, (long)17, (long)18, (long)10}))) == (std::any({(std::vector<long>)std::vector<long>({(long)10, (long)10}), (std::vector<long>)std::vector<long>({(long)15}), (std::vector<long>)std::vector<long>({(long)19}), (std::vector<long>)std::vector<long>({(long)18, (long)18}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)26, (long)26}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)18}), (std::vector<long>)std::vector<long>({(long)10})})));\n    assert(candidate((std::any({(std::string)\"a\", (std::string)\"a\", (std::string)\"b\", (std::string)\"c\", (std::string)\"d\", (std::string)\"d\"}))) == (std::any({(std::vector<std::string>)std::vector<std::string>({(std::string)\"a\", (std::string)\"a\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"b\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"c\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"d\", (std::string)\"d\"})})));\n}\n",
      "timestamp": 1666123394,
      "stdout": "",
      "stderr": "/tmp/tmp4jiakfu_.cpp: In function \u2018std::any pack_consecutive_duplicates(std::any)\u2019:\n/tmp/tmp4jiakfu_.cpp:8:25: error: no matching function for call to \u2018begin(std::any&)\u2019\n    8 |     for (auto element : list1) {\n      |                         ^~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/range_access.h:36,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/string:54,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/locale_classes.h:40,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/ios_base.h:41,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ios:42,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/istream:38,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/sstream:38,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/complex:45,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ccomplex:39,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:54,\n                 from /tmp/tmp4jiakfu_.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/initializer_list:89:5: note: candidate: \u2018template<class _Tp> constexpr const _Tp* std::begin(std::initializer_list<_Tp>)\u2019\n   89 |     begin(initializer_list<_Tp> __ils) noexcept\n      |     ^~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/initializer_list:89:5: note:   template argument deduction/substitution failed:\n/tmp/tmp4jiakfu_.cpp:8:25: note:   \u2018std::any\u2019 is not derived from \u2018std::initializer_list<_Tp>\u2019\n    8 |     for (auto element : list1) {\n      |                         ^~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/string:54,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/locale_classes.h:40,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to pack consecutive duplicates of a given list elements into sublists.\nstd::any pack_consecutive_duplicates(std::any list1) {\n    std::any list2;\n    std::any sublist;\n    std::any temp;\n    std::any temp1;\n    std::any temp2;\n    temp = list1;\n    temp1 = list1;\n    temp2 = list1;\n    while(!temp.empty()) {\n        sublist.push_back(temp.front());\n        temp.pop_front();\n        while(temp.front() == temp1.front()) {\n            sublist.push_back(temp.front());\n            temp.pop_front();\n        }\n        list2.push_back(sublist);\n        sublist.clear();\n    }\n    return list2;\n}\nint main() {\n    auto candidate = pack_consecutive_duplicates;\n    assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n    assert(candidate((std::any({(long)10, (long)10, (long)15, (long)19, (long)18, (long)18, (long)17, (long)26, (long)26, (long)17, (long)18, (long)10}))) == (std::any({(std::vector<long>)std::vector<long>({(long)10, (long)10}), (std::vector<long>)std::vector<long>({(long)15}), (std::vector<long>)std::vector<long>({(long)19}), (std::vector<long>)std::vector<long>({(long)18, (long)18}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)26, (long)26}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)18}), (std::vector<long>)std::vector<long>({(long)10})})));\n    assert(candidate((std::any({(std::string)\"a\", (std::string)\"a\", (std::string)\"b\", (std::string)\"c\", (std::string)\"d\", (std::string)\"d\"}))) == (std::any({(std::vector<std::string>)std::vector<std::string>({(std::string)\"a\", (std::string)\"a\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"b\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"c\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"d\", (std::string)\"d\"})})));\n}\n",
      "timestamp": 1666123393,
      "stdout": "",
      "stderr": "/tmp/tmpntabqzsg.cpp: In function \u2018std::any pack_consecutive_duplicates(std::any)\u2019:\n/tmp/tmpntabqzsg.cpp:13:17: error: \u2018class std::any\u2019 has no member named \u2018empty\u2019\n   13 |     while(!temp.empty()) {\n      |                 ^~~~~\n/tmp/tmpntabqzsg.cpp:14:17: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   14 |         sublist.push_back(temp.front());\n      |                 ^~~~~~~~~\n/tmp/tmpntabqzsg.cpp:14:32: error: \u2018class std::any\u2019 has no member named \u2018front\u2019\n   14 |         sublist.push_back(temp.front());\n      |                                ^~~~~\n/tmp/tmpntabqzsg.cpp:15:14: error: \u2018class std::any\u2019 has no member named \u2018pop_front\u2019\n   15 |         temp.pop_front();\n      |              ^~~~~~~~~\n/tmp/tmpntabqzsg.cpp:16:20: error: \u2018class std::any\u2019 has no member named \u2018front\u2019\n   16 |         while(temp.front() == temp1.front()) {\n      |                    ^~~~~\n/tmp/tmpntabqzsg.cpp:16:37: error: \u2018class std::any\u2019 has no member named \u2018front\u2019\n   16 |         while(temp.front() == temp1.front()) {\n      |                                     ^~~~~\n/tmp/tmpntabqzsg.cpp:17:21: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   17 |             sublist.push_back(temp.front());\n      |                     ^~~~~~~~~\n/tmp/tmpntabqzsg.cpp:17:36: error: \u2018class std::any\u2019 has no member named \u2018front\u2019\n   17 |             sublist.push_back(temp.front());\n      |                                    ^~~~~\n/tmp/tmpntabqzsg.cpp:18:18: error: \u2018class std::any\u2019 has no member named \u2018pop_front\u2019\n   18 |             temp.pop_front();\n      |                  ^~~~~~~~~\n/tmp/tmpntabqzsg.cpp:20:15: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   20 |         list2.push_back(sublist);\n      |               ^~~~~~~~~\n/tmp/tmpntabqzsg.cpp:21:17: error: \u2018class std::any\u2019 has no member named \u2018clear\u2019\n   21 |         sublist.clear();\n      |                 ^~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to pack consecutive duplicates of a given list elements into sublists.\nstd::any pack_consecutive_duplicates(std::any list1) {\n    std::any list2;\n    std::any list3;\n    std::any list4;\n    std::any list5;\n    std::any list6;\n    std::any list7;\n    std::any list8;\n    std::any list9;\n    std::any list10;\n    std::any list11;\n    std::any list12;\n    std::any list13;\n    std::any list14;\n    std::any list15;\n    std::any list16;\n    std::any list17;\n    std::any list18;\n    std::any list19;\n    std::any list20;\n    std::any list21;\n    std::any list22;\n    std::any list23;\n    std::any list24;\n    std::any list25;\n    std::any list26;\n    std::any list27;\n    std::any list28;\n    std::any list29;\n    std::any list30;\n    std::any list31;\n    std::any list32;\n    std::any list33;\n    std::any list34;\n    std::any list35;\n    std::any list36;\n    std::any list37;\n    std::any list38;\n    std::any list39;\n    std::any list40;\n    std::any list41;\n    std::any list42;\n    std::any list43;\n    std::any list44;\n    std::any list45;\n    std::any list46;\n    std::any list47;\n    std::any list48;\n    std::any list49;\n    std::any list50;\n    std::any list51;\n    std::any list52;\n    std::any list53;\n    std::any list54;\n    std::any list55;\n    std::any list56;\n    std::any list57;\n    std::any list58;\n    std::any list59;\n    std::any list60;\n    std::any list61;\n    std::any list62;\n    std::any list63;\n    std::any list64;\n    std::any list65;\n}\nint main() {\n    auto candidate = pack_consecutive_duplicates;\n    assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n    assert(candidate((std::any({(long)10, (long)10, (long)15, (long)19, (long)18, (long)18, (long)17, (long)26, (long)26, (long)17, (long)18, (long)10}))) == (std::any({(std::vector<long>)std::vector<long>({(long)10, (long)10}), (std::vector<long>)std::vector<long>({(long)15}), (std::vector<long>)std::vector<long>({(long)19}), (std::vector<long>)std::vector<long>({(long)18, (long)18}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)26, (long)26}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)18}), (std::vector<long>)std::vector<long>({(long)10})})));\n    assert(candidate((std::any({(std::string)\"a\", (std::string)\"a\", (std::string)\"b\", (std::string)\"c\", (std::string)\"d\", (std::string)\"d\"}))) == (std::any({(std::vector<std::string>)std::vector<std::string>({(std::string)\"a\", (std::string)\"a\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"b\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"c\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"d\", (std::string)\"d\"})})));\n}\n",
      "timestamp": 1665510437,
      "stdout": "",
      "stderr": "/tmp/tmpgspun4wj.cpp: In function \u2018std::any pack_consecutive_duplicates(std::any)\u2019:\n/tmp/tmpgspun4wj.cpp:69:1: warning: no return statement in function returning non-void [-Wreturn-type]\n   69 | }\n      | ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpgspun4wj.cpp:2:\n/tmp/tmpgspun4wj.cpp: In function \u2018int main()\u2019:\n/tmp/tmpgspun4wj.cpp:72:176: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   72 |     assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n      |                                                                                                                                                                                ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpgspun4wj.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>,",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to pack consecutive duplicates of a given list elements into sublists.\nstd::any pack_consecutive_duplicates(std::any list1) {\n    std::any list2;\n    std::any list3;\n    std::any list4;\n    std::any list5;\n    std::any list6;\n    std::any list7;\n    std::any list8;\n    std::any list9;\n    std::any list10;\n    std::any list11;\n    std::any list12;\n    std::any list13;\n    std::any list14;\n    std::any list15;\n    std::any list16;\n    std::any list17;\n    std::any list18;\n    std::any list19;\n    std::any list20;\n    std::any list21;\n    std::any list22;\n    std::any list23;\n    std::any list24;\n    std::any list25;\n    std::any list26;\n    std::any list27;\n    std::any list28;\n    std::any list29;\n    std::any list30;\n    std::any list31;\n    std::any list32;\n    std::any list33;\n    std::any list34;\n    std::any list35;\n    std::any list36;\n    std::any list37;\n    std::any list38;\n    std::any list39;\n    std::any list40;\n    std::any list41;\n    std::any list42;\n    std::any list43;\n    std::any list44;\n    std::any list45;\n    std::any list46;\n    std::any list47;\n    std::any list48;\n    std::any list49;\n    std::any list50;\n    std::any list51;\n    std::any list52;\n    std::any list53;\n    std::any list54;\n    std::any list55;\n    std::any list56;\n    std::any list57;\n    std::any list58;\n    std::any list59;\n    std::any list60;\n    std::any list61;\n    std::any list62;\n    std::any list63;\n    std::any list64;\n    std::any list65;\n}\nint main() {\n    auto candidate = pack_consecutive_duplicates;\n    assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n    assert(candidate((std::any({(long)10, (long)10, (long)15, (long)19, (long)18, (long)18, (long)17, (long)26, (long)26, (long)17, (long)18, (long)10}))) == (std::any({(std::vector<long>)std::vector<long>({(long)10, (long)10}), (std::vector<long>)std::vector<long>({(long)15}), (std::vector<long>)std::vector<long>({(long)19}), (std::vector<long>)std::vector<long>({(long)18, (long)18}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)26, (long)26}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)18}), (std::vector<long>)std::vector<long>({(long)10})})));\n    assert(candidate((std::any({(std::string)\"a\", (std::string)\"a\", (std::string)\"b\", (std::string)\"c\", (std::string)\"d\", (std::string)\"d\"}))) == (std::any({(std::vector<std::string>)std::vector<std::string>({(std::string)\"a\", (std::string)\"a\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"b\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"c\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"d\", (std::string)\"d\"})})));\n}\n",
      "timestamp": 1665510437,
      "stdout": "",
      "stderr": "/tmp/tmpgspun4wj.cpp: In function \u2018std::any pack_consecutive_duplicates(std::any)\u2019:\n/tmp/tmpgspun4wj.cpp:69:1: warning: no return statement in function returning non-void [-Wreturn-type]\n   69 | }\n      | ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpgspun4wj.cpp:2:\n/tmp/tmpgspun4wj.cpp: In function \u2018int main()\u2019:\n/tmp/tmpgspun4wj.cpp:72:176: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   72 |     assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n      |                                                                                                                                                                                ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpgspun4wj.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>,",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to pack consecutive duplicates of a given list elements into sublists.\nstd::any pack_consecutive_duplicates(std::any list1) {\n  std::any list2;\n  std::any temp;\n  while(!list1.empty()) {\n    temp.push_back(list1.front());\n    list1.pop_front();\n    while(!list1.empty() && list1.front() == temp.back()) {\n      temp.push_back(list1.front());\n      list1.pop_front();\n    }\n    list2.push_back(temp);\n    temp.clear();\n  }\n  return list2;\n}\nint main() {\n    auto candidate = pack_consecutive_duplicates;\n    assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n    assert(candidate((std::any({(long)10, (long)10, (long)15, (long)19, (long)18, (long)18, (long)17, (long)26, (long)26, (long)17, (long)18, (long)10}))) == (std::any({(std::vector<long>)std::vector<long>({(long)10, (long)10}), (std::vector<long>)std::vector<long>({(long)15}), (std::vector<long>)std::vector<long>({(long)19}), (std::vector<long>)std::vector<long>({(long)18, (long)18}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)26, (long)26}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)18}), (std::vector<long>)std::vector<long>({(long)10})})));\n    assert(candidate((std::any({(std::string)\"a\", (std::string)\"a\", (std::string)\"b\", (std::string)\"c\", (std::string)\"d\", (std::string)\"d\"}))) == (std::any({(std::vector<std::string>)std::vector<std::string>({(std::string)\"a\", (std::string)\"a\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"b\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"c\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"d\", (std::string)\"d\"})})));\n}\n",
      "timestamp": 1666123393,
      "stdout": "",
      "stderr": "/tmp/tmpfrw2s24e.cpp: In function \u2018std::any pack_consecutive_duplicates(std::any)\u2019:\n/tmp/tmpfrw2s24e.cpp:7:16: error: \u2018class std::any\u2019 has no member named \u2018empty\u2019\n    7 |   while(!list1.empty()) {\n      |                ^~~~~\n/tmp/tmpfrw2s24e.cpp:8:10: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n    8 |     temp.push_back(list1.front());\n      |          ^~~~~~~~~\n/tmp/tmpfrw2s24e.cpp:8:26: error: \u2018class std::any\u2019 has no member named \u2018front\u2019\n    8 |     temp.push_back(list1.front());\n      |                          ^~~~~\n/tmp/tmpfrw2s24e.cpp:9:11: error: \u2018class std::any\u2019 has no member named \u2018pop_front\u2019\n    9 |     list1.pop_front();\n      |           ^~~~~~~~~\n/tmp/tmpfrw2s24e.cpp:10:18: error: \u2018class std::any\u2019 has no member named \u2018empty\u2019\n   10 |     while(!list1.empty() && list1.front() == temp.back()) {\n      |                  ^~~~~\n/tmp/tmpfrw2s24e.cpp:10:35: error: \u2018class std::any\u2019 has no member named \u2018front\u2019\n   10 |     while(!list1.empty() && list1.front() == temp.back()) {\n      |                                   ^~~~~\n/tmp/tmpfrw2s24e.cpp:10:51: error: \u2018class std::any\u2019 has no member named \u2018back\u2019\n   10 |     while(!list1.empty() && list1.front() == temp.back()) {\n      |                                                   ^~~~\n/tmp/tmpfrw2s24e.cpp:11:12: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   11 |       temp.push_back(list1.front());\n      |            ^~~~~~~~~\n/tmp/tmpfrw2s24e.cpp:11:28: error: \u2018class std::any\u2019 has no member named \u2018front\u2019\n   11 |       temp.push_back(list1.front());\n      |                            ^~~~~\n/tmp/tmpfrw2s24e.cpp:12:13: error: \u2018class std::any\u2019 has no member named \u2018pop_front\u2019\n   12 |       list1.pop_front();\n      |             ^~~~~~~~~\n/tmp/tmpfrw2s24e.cpp:14:11: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   14 |     list2.push_back(temp);\n      |           ^~~~~~~~~\n/tmp/tmpfrw2s24e.cpp:15:10: error: \u2018class std::any\u2019 has no member n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to pack consecutive duplicates of a given list elements into sublists.\nstd::any pack_consecutive_duplicates(std::any list1) {\n    std::any list2;\n    std::any list3;\n    std::any list4;\n    std::any list5;\n    std::any list6;\n    std::any list7;\n    std::any list8;\n    std::any list9;\n    std::any list10;\n    std::any list11;\n    std::any list12;\n    std::any list13;\n    std::any list14;\n    std::any list15;\n    std::any list16;\n    std::any list17;\n    std::any list18;\n    std::any list19;\n    std::any list20;\n    std::any list21;\n    std::any list22;\n    std::any list23;\n    std::any list24;\n    std::any list25;\n    std::any list26;\n    std::any list27;\n    std::any list28;\n    std::any list29;\n    std::any list30;\n    std::any list31;\n    std::any list32;\n    std::any list33;\n    std::any list34;\n    std::any list35;\n    std::any list36;\n    std::any list37;\n    std::any list38;\n    std::any list39;\n    std::any list40;\n    std::any list41;\n    std::any list42;\n    std::any list43;\n    std::any list44;\n    std::any list45;\n    std::any list46;\n    std::any list47;\n    std::any list48;\n    std::any list49;\n    std::any list50;\n    std::any list51;\n    std::any list52;\n    std::any list53;\n    std::any list54;\n    std::any list55;\n    std::any list56;\n    std::any list57;\n    std::any list58;\n    std::any list59;\n    std::any list60;\n    std::any list61;\n    std::any list62;\n    std::any list63;\n    std::any list64;\n    std::any list65;\n}\nint main() {\n    auto candidate = pack_consecutive_duplicates;\n    assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n    assert(candidate((std::any({(long)10, (long)10, (long)15, (long)19, (long)18, (long)18, (long)17, (long)26, (long)26, (long)17, (long)18, (long)10}))) == (std::any({(std::vector<long>)std::vector<long>({(long)10, (long)10}), (std::vector<long>)std::vector<long>({(long)15}), (std::vector<long>)std::vector<long>({(long)19}), (std::vector<long>)std::vector<long>({(long)18, (long)18}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)26, (long)26}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)18}), (std::vector<long>)std::vector<long>({(long)10})})));\n    assert(candidate((std::any({(std::string)\"a\", (std::string)\"a\", (std::string)\"b\", (std::string)\"c\", (std::string)\"d\", (std::string)\"d\"}))) == (std::any({(std::vector<std::string>)std::vector<std::string>({(std::string)\"a\", (std::string)\"a\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"b\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"c\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"d\", (std::string)\"d\"})})));\n}\n",
      "timestamp": 1665510437,
      "stdout": "",
      "stderr": "/tmp/tmpgspun4wj.cpp: In function \u2018std::any pack_consecutive_duplicates(std::any)\u2019:\n/tmp/tmpgspun4wj.cpp:69:1: warning: no return statement in function returning non-void [-Wreturn-type]\n   69 | }\n      | ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpgspun4wj.cpp:2:\n/tmp/tmpgspun4wj.cpp: In function \u2018int main()\u2019:\n/tmp/tmpgspun4wj.cpp:72:176: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   72 |     assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n      |                                                                                                                                                                                ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpgspun4wj.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>,",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to pack consecutive duplicates of a given list elements into sublists.\nstd::any pack_consecutive_duplicates(std::any list1) {\n    std::any list2;\n    std::any temp;\n    std::any::iterator itr1,itr2;\n    itr1=list1.begin();\n    itr2=list1.begin();\n    itr2++;\n    while(itr2!=list1.end())\n    {\n        if(*itr1==*itr2)\n        {\n            temp.push_back(*itr1);\n        }\n        else\n        {\n            temp.push_back(*itr1);\n            list2.push_back(temp);\n            temp.clear();\n        }\n        itr1++;\n        itr2++;\n    }\n    temp.push_back(*itr1);\n    list2.push_back(temp);\n    return list2;\n}\nint main() {\n    auto candidate = pack_consecutive_duplicates;\n    assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n    assert(candidate((std::any({(long)10, (long)10, (long)15, (long)19, (long)18, (long)18, (long)17, (long)26, (long)26, (long)17, (long)18, (long)10}))) == (std::any({(std::vector<long>)std::vector<long>({(long)10, (long)10}), (std::vector<long>)std::vector<long>({(long)15}), (std::vector<long>)std::vector<long>({(long)19}), (std::vector<long>)std::vector<long>({(long)18, (long)18}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)26, (long)26}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)18}), (std::vector<long>)std::vector<long>({(long)10})})));\n    assert(candidate((std::any({(std::string)\"a\", (std::string)\"a\", (std::string)\"b\", (std::string)\"c\", (std::string)\"d\", (std::string)\"d\"}))) == (std::any({(std::vector<std::string>)std::vector<std::string>({(std::string)\"a\", (std::string)\"a\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"b\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"c\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"d\", (std::string)\"d\"})})));\n}\n",
      "timestamp": 1666123393,
      "stdout": "",
      "stderr": "/tmp/tmp0tlts2ds.cpp: In function \u2018std::any pack_consecutive_duplicates(std::any)\u2019:\n/tmp/tmp0tlts2ds.cpp:7:15: error: \u2018iterator\u2019 is not a member of \u2018std::any\u2019\n    7 |     std::any::iterator itr1,itr2;\n      |               ^~~~~~~~\n/tmp/tmp0tlts2ds.cpp:8:5: error: \u2018itr1\u2019 was not declared in this scope\n    8 |     itr1=list1.begin();\n      |     ^~~~\n/tmp/tmp0tlts2ds.cpp:8:16: error: \u2018class std::any\u2019 has no member named \u2018begin\u2019\n    8 |     itr1=list1.begin();\n      |                ^~~~~\n/tmp/tmp0tlts2ds.cpp:9:5: error: \u2018itr2\u2019 was not declared in this scope\n    9 |     itr2=list1.begin();\n      |     ^~~~\n/tmp/tmp0tlts2ds.cpp:9:16: error: \u2018class std::any\u2019 has no member named \u2018begin\u2019\n    9 |     itr2=list1.begin();\n      |                ^~~~~\n/tmp/tmp0tlts2ds.cpp:11:23: error: \u2018class std::any\u2019 has no member named \u2018end\u2019\n   11 |     while(itr2!=list1.end())\n      |                       ^~~\n/tmp/tmp0tlts2ds.cpp:15:18: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   15 |             temp.push_back(*itr1);\n      |                  ^~~~~~~~~\n/tmp/tmp0tlts2ds.cpp:19:18: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   19 |             temp.push_back(*itr1);\n      |                  ^~~~~~~~~\n/tmp/tmp0tlts2ds.cpp:20:19: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   20 |             list2.push_back(temp);\n      |                   ^~~~~~~~~\n/tmp/tmp0tlts2ds.cpp:21:18: error: \u2018class std::any\u2019 has no member named \u2018clear\u2019\n   21 |             temp.clear();\n      |                  ^~~~~\n/tmp/tmp0tlts2ds.cpp:26:10: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   26 |     temp.push_back(*itr1);\n      |          ^~~~~~~~~\n/tmp/tmp0tlts2ds.cpp:27:11: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   27 |     list2.push_back(temp);\n      |           ^~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to pack consecutive duplicates of a given list elements into sublists.\nstd::any pack_consecutive_duplicates(std::any list1) {\n    std::any list2;\n    std::any temp;\n    std::any temp1;\n    std::any temp2;\n    std::any temp3;\n    std::any temp4;\n    std::any temp5;\n    std::any temp6;\n    std::any temp7;\n    std::any temp8;\n    std::any temp9;\n    std::any temp10;\n    std::any temp11;\n    std::any temp12;\n    std::any temp13;\n    std::any temp14;\n    std::any temp15;\n    std::any temp16;\n    std::any temp17;\n    std::any temp18;\n    std::any temp19;\n    std::any temp20;\n    std::any temp21;\n    std::any temp22;\n    std::any temp23;\n    std::any temp24;\n    std::any temp25;\n    std::any temp26;\n    std::any temp27;\n    std::any temp28;\n    std::any temp29;\n    std::any temp30;\n    std::any temp31;\n    std::any temp32;\n    std::any temp33;\n    std::any temp34;\n    std::any temp35;\n    std::any temp36;\n    std::any temp37;\n    std::any temp38;\n    std::any temp39;\n    std::any temp40;\n    std::any temp41;\n    std::any temp42;\n    std::any temp43;\n    std::any temp44;\n    std::any temp45;\n    std::any temp46;\n    std::any temp47;\n    std::any temp48;\n    std::any temp49;\n    std::any temp50;\n    std::any temp51;\n    std::any temp52;\n    std::any temp53;\n    std::any temp54;\n    std::any temp55;\n    std::any temp56;\n    std::any temp57;\n    std::any temp58;\n    std::any temp59;\n    std::any temp60;\n    std::any temp61;\n    std::any temp62;\n\n}\nint main() {\n    auto candidate = pack_consecutive_duplicates;\n    assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n    assert(candidate((std::any({(long)10, (long)10, (long)15, (long)19, (long)18, (long)18, (long)17, (long)26, (long)26, (long)17, (long)18, (long)10}))) == (std::any({(std::vector<long>)std::vector<long>({(long)10, (long)10}), (std::vector<long>)std::vector<long>({(long)15}), (std::vector<long>)std::vector<long>({(long)19}), (std::vector<long>)std::vector<long>({(long)18, (long)18}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)26, (long)26}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)18}), (std::vector<long>)std::vector<long>({(long)10})})));\n    assert(candidate((std::any({(std::string)\"a\", (std::string)\"a\", (std::string)\"b\", (std::string)\"c\", (std::string)\"d\", (std::string)\"d\"}))) == (std::any({(std::vector<std::string>)std::vector<std::string>({(std::string)\"a\", (std::string)\"a\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"b\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"c\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"d\", (std::string)\"d\"})})));\n}\n",
      "timestamp": 1665510437,
      "stdout": "",
      "stderr": "/tmp/tmp6a5kikx3.cpp: In function \u2018std::any pack_consecutive_duplicates(std::any)\u2019:\n/tmp/tmp6a5kikx3.cpp:70:1: warning: no return statement in function returning non-void [-Wreturn-type]\n   70 | }\n      | ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp6a5kikx3.cpp:2:\n/tmp/tmp6a5kikx3.cpp: In function \u2018int main()\u2019:\n/tmp/tmp6a5kikx3.cpp:73:176: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   73 |     assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n      |                                                                                                                                                                                ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmp6a5kikx3.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>,",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to pack consecutive duplicates of a given list elements into sublists.\nstd::any pack_consecutive_duplicates(std::any list1) {\n    std::any list2;\n    std::any sublist;\n    std::any previous_element;\n    for (auto element : list1) {\n        if (element != previous_element) {\n            if (sublist.size() != 0) {\n                list2.push_back(sublist);\n            }\n            sublist.clear();\n        }\n        sublist.push_back(element);\n        previous_element = element;\n    }\n    if (sublist.size() != 0) {\n        list2.push_back(sublist);\n    }\n    return list2;\n}\nint main() {\n    auto candidate = pack_consecutive_duplicates;\n    assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n    assert(candidate((std::any({(long)10, (long)10, (long)15, (long)19, (long)18, (long)18, (long)17, (long)26, (long)26, (long)17, (long)18, (long)10}))) == (std::any({(std::vector<long>)std::vector<long>({(long)10, (long)10}), (std::vector<long>)std::vector<long>({(long)15}), (std::vector<long>)std::vector<long>({(long)19}), (std::vector<long>)std::vector<long>({(long)18, (long)18}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)26, (long)26}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)18}), (std::vector<long>)std::vector<long>({(long)10})})));\n    assert(candidate((std::any({(std::string)\"a\", (std::string)\"a\", (std::string)\"b\", (std::string)\"c\", (std::string)\"d\", (std::string)\"d\"}))) == (std::any({(std::vector<std::string>)std::vector<std::string>({(std::string)\"a\", (std::string)\"a\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"b\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"c\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"d\", (std::string)\"d\"})})));\n}\n",
      "timestamp": 1666123394,
      "stdout": "",
      "stderr": "/tmp/tmpzwizxb0s.cpp: In function \u2018std::any pack_consecutive_duplicates(std::any)\u2019:\n/tmp/tmpzwizxb0s.cpp:8:25: error: no matching function for call to \u2018begin(std::any&)\u2019\n    8 |     for (auto element : list1) {\n      |                         ^~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/range_access.h:36,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/string:54,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/locale_classes.h:40,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/ios_base.h:41,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ios:42,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/istream:38,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/sstream:38,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/complex:45,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ccomplex:39,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:54,\n                 from /tmp/tmpzwizxb0s.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/initializer_list:89:5: note: candidate: \u2018template<class _Tp> constexpr const _Tp* std::begin(std::initializer_list<_Tp>)\u2019\n   89 |     begin(initializer_list<_Tp> __ils) noexcept\n      |     ^~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/initializer_list:89:5: note:   template argument deduction/substitution failed:\n/tmp/tmpzwizxb0s.cpp:8:25: note:   \u2018std::any\u2019 is not derived from \u2018std::initializer_list<_Tp>\u2019\n    8 |     for (auto element : list1) {\n      |                         ^~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/string:54,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/locale_classes.h:40,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to pack consecutive duplicates of a given list elements into sublists.\nstd::any pack_consecutive_duplicates(std::any list1) {\n    std::any list2;\n    std::any temp;\n    std::any::iterator it = list1.begin();\n    while (it != list1.end()) {\n        temp.push_back(*it);\n        if (it + 1 != list1.end() && *it == *(it + 1)) {\n            it++;\n            while (it != list1.end() && *it == *(it - 1)) {\n                temp.push_back(*it);\n                it++;\n            }\n            list2.push_back(temp);\n            temp.clear();\n        }\n        else {\n            list2.push_back(temp);\n            temp.clear();\n            it++;\n        }\n    }\n    return list2;\n}\nint main() {\n    auto candidate = pack_consecutive_duplicates;\n    assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n    assert(candidate((std::any({(long)10, (long)10, (long)15, (long)19, (long)18, (long)18, (long)17, (long)26, (long)26, (long)17, (long)18, (long)10}))) == (std::any({(std::vector<long>)std::vector<long>({(long)10, (long)10}), (std::vector<long>)std::vector<long>({(long)15}), (std::vector<long>)std::vector<long>({(long)19}), (std::vector<long>)std::vector<long>({(long)18, (long)18}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)26, (long)26}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)18}), (std::vector<long>)std::vector<long>({(long)10})})));\n    assert(candidate((std::any({(std::string)\"a\", (std::string)\"a\", (std::string)\"b\", (std::string)\"c\", (std::string)\"d\", (std::string)\"d\"}))) == (std::any({(std::vector<std::string>)std::vector<std::string>({(std::string)\"a\", (std::string)\"a\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"b\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"c\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"d\", (std::string)\"d\"})})));\n}\n",
      "timestamp": 1666123393,
      "stdout": "",
      "stderr": "/tmp/tmpjafffcq8.cpp: In function \u2018std::any pack_consecutive_duplicates(std::any)\u2019:\n/tmp/tmpjafffcq8.cpp:7:15: error: \u2018iterator\u2019 is not a member of \u2018std::any\u2019\n    7 |     std::any::iterator it = list1.begin();\n      |               ^~~~~~~~\n/tmp/tmpjafffcq8.cpp:8:12: error: \u2018it\u2019 was not declared in this scope; did you mean \u2018int\u2019?\n    8 |     while (it != list1.end()) {\n      |            ^~\n      |            int\n/tmp/tmpjafffcq8.cpp:8:24: error: \u2018class std::any\u2019 has no member named \u2018end\u2019\n    8 |     while (it != list1.end()) {\n      |                        ^~~\n/tmp/tmpjafffcq8.cpp:9:14: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n    9 |         temp.push_back(*it);\n      |              ^~~~~~~~~\n/tmp/tmpjafffcq8.cpp:10:29: error: \u2018class std::any\u2019 has no member named \u2018end\u2019\n   10 |         if (it + 1 != list1.end() && *it == *(it + 1)) {\n      |                             ^~~\n/tmp/tmpjafffcq8.cpp:12:32: error: \u2018class std::any\u2019 has no member named \u2018end\u2019\n   12 |             while (it != list1.end() && *it == *(it - 1)) {\n      |                                ^~~\n/tmp/tmpjafffcq8.cpp:13:22: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   13 |                 temp.push_back(*it);\n      |                      ^~~~~~~~~\n/tmp/tmpjafffcq8.cpp:16:19: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   16 |             list2.push_back(temp);\n      |                   ^~~~~~~~~\n/tmp/tmpjafffcq8.cpp:17:18: error: \u2018class std::any\u2019 has no member named \u2018clear\u2019\n   17 |             temp.clear();\n      |                  ^~~~~\n/tmp/tmpjafffcq8.cpp:20:19: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   20 |             list2.push_back(temp);\n      |                   ^~~~~~~~~\n/tmp/tmpjafffcq8.cpp:21:18: error: \u2018class std::any\u2019 has no member named \u2018clear\u2019\n   21 |             temp.clear();\n      |                  ^~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/casser",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to pack consecutive duplicates of a given list elements into sublists.\nstd::any pack_consecutive_duplicates(std::any list1) {\n    std::any list2;\n    std::any temp;\n    std::any temp2;\n    std::any temp3;\n    std::any temp4;\n    std::any temp5;\n    std::any temp6;\n    std::any temp7;\n    std::any temp8;\n    std::any temp9;\n    std::any temp10;\n    std::any temp11;\n    std::any temp12;\n    std::any temp13;\n    std::any temp14;\n    std::any temp15;\n    std::any temp16;\n    std::any temp17;\n    std::any temp18;\n    std::any temp19;\n    std::any temp20;\n    std::any temp21;\n    std::any temp22;\n    std::any temp23;\n    std::any temp24;\n    std::any temp25;\n    std::any temp26;\n    std::any temp27;\n    std::any temp28;\n    std::any temp29;\n    std::any temp30;\n    std::any temp31;\n    std::any temp32;\n    std::any temp33;\n    std::any temp34;\n    std::any temp35;\n    std::any temp36;\n    std::any temp37;\n    std::any temp38;\n    std::any temp39;\n    std::any temp40;\n    std::any temp41;\n    std::any temp42;\n    std::any temp43;\n    std::any temp44;\n    std::any temp45;\n    std::any temp46;\n    std::any temp47;\n    std::any temp48;\n    std::any temp49;\n    std::any temp50;\n    std::any temp51;\n    std::any temp52;\n    std::any temp53;\n    std::any temp54;\n    std::any temp55;\n    std::any temp56;\n    std::any temp57;\n    std::any temp58;\n    std::any temp59;\n    std::any temp60;\n    std::any temp61;\n    std::any temp62;\n    std::any temp63;\n\n}\nint main() {\n    auto candidate = pack_consecutive_duplicates;\n    assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n    assert(candidate((std::any({(long)10, (long)10, (long)15, (long)19, (long)18, (long)18, (long)17, (long)26, (long)26, (long)17, (long)18, (long)10}))) == (std::any({(std::vector<long>)std::vector<long>({(long)10, (long)10}), (std::vector<long>)std::vector<long>({(long)15}), (std::vector<long>)std::vector<long>({(long)19}), (std::vector<long>)std::vector<long>({(long)18, (long)18}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)26, (long)26}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)18}), (std::vector<long>)std::vector<long>({(long)10})})));\n    assert(candidate((std::any({(std::string)\"a\", (std::string)\"a\", (std::string)\"b\", (std::string)\"c\", (std::string)\"d\", (std::string)\"d\"}))) == (std::any({(std::vector<std::string>)std::vector<std::string>({(std::string)\"a\", (std::string)\"a\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"b\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"c\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"d\", (std::string)\"d\"})})));\n}\n",
      "timestamp": 1665510437,
      "stdout": "",
      "stderr": "/tmp/tmp996xkpjp.cpp: In function \u2018std::any pack_consecutive_duplicates(std::any)\u2019:\n/tmp/tmp996xkpjp.cpp:70:1: warning: no return statement in function returning non-void [-Wreturn-type]\n   70 | }\n      | ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp996xkpjp.cpp:2:\n/tmp/tmp996xkpjp.cpp: In function \u2018int main()\u2019:\n/tmp/tmp996xkpjp.cpp:73:176: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   73 |     assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n      |                                                                                                                                                                                ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmp996xkpjp.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>,",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to pack consecutive duplicates of a given list elements into sublists.\nstd::any pack_consecutive_duplicates(std::any list1) {\n    std::any list2;\n    std::any temp;\n    std::any::iterator it;\n    it = list1.begin();\n    while (it != list1.end()) {\n        if (it == list1.begin()) {\n            temp.push_back(*it);\n            it++;\n        } else {\n            if (*it == *(it - 1)) {\n                temp.push_back(*it);\n                it++;\n            } else {\n                list2.push_back(temp);\n                temp.clear();\n                temp.push_back(*it);\n                it++;\n            }\n        }\n    }\n    list2.push_back(temp);\n    return list2;\n}\nint main() {\n    auto candidate = pack_consecutive_duplicates;\n    assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n    assert(candidate((std::any({(long)10, (long)10, (long)15, (long)19, (long)18, (long)18, (long)17, (long)26, (long)26, (long)17, (long)18, (long)10}))) == (std::any({(std::vector<long>)std::vector<long>({(long)10, (long)10}), (std::vector<long>)std::vector<long>({(long)15}), (std::vector<long>)std::vector<long>({(long)19}), (std::vector<long>)std::vector<long>({(long)18, (long)18}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)26, (long)26}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)18}), (std::vector<long>)std::vector<long>({(long)10})})));\n    assert(candidate((std::any({(std::string)\"a\", (std::string)\"a\", (std::string)\"b\", (std::string)\"c\", (std::string)\"d\", (std::string)\"d\"}))) == (std::any({(std::vector<std::string>)std::vector<std::string>({(std::string)\"a\", (std::string)\"a\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"b\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"c\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"d\", (std::string)\"d\"})})));\n}\n",
      "timestamp": 1666123393,
      "stdout": "",
      "stderr": "/tmp/tmp6t5655j6.cpp: In function \u2018std::any pack_consecutive_duplicates(std::any)\u2019:\n/tmp/tmp6t5655j6.cpp:7:15: error: \u2018iterator\u2019 is not a member of \u2018std::any\u2019\n    7 |     std::any::iterator it;\n      |               ^~~~~~~~\n/tmp/tmp6t5655j6.cpp:8:5: error: \u2018it\u2019 was not declared in this scope; did you mean \u2018int\u2019?\n    8 |     it = list1.begin();\n      |     ^~\n      |     int\n/tmp/tmp6t5655j6.cpp:8:16: error: \u2018class std::any\u2019 has no member named \u2018begin\u2019\n    8 |     it = list1.begin();\n      |                ^~~~~\n/tmp/tmp6t5655j6.cpp:9:24: error: \u2018class std::any\u2019 has no member named \u2018end\u2019\n    9 |     while (it != list1.end()) {\n      |                        ^~~\n/tmp/tmp6t5655j6.cpp:10:25: error: \u2018class std::any\u2019 has no member named \u2018begin\u2019\n   10 |         if (it == list1.begin()) {\n      |                         ^~~~~\n/tmp/tmp6t5655j6.cpp:11:18: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   11 |             temp.push_back(*it);\n      |                  ^~~~~~~~~\n/tmp/tmp6t5655j6.cpp:15:22: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   15 |                 temp.push_back(*it);\n      |                      ^~~~~~~~~\n/tmp/tmp6t5655j6.cpp:18:23: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   18 |                 list2.push_back(temp);\n      |                       ^~~~~~~~~\n/tmp/tmp6t5655j6.cpp:19:22: error: \u2018class std::any\u2019 has no member named \u2018clear\u2019\n   19 |                 temp.clear();\n      |                      ^~~~~\n/tmp/tmp6t5655j6.cpp:20:22: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   20 |                 temp.push_back(*it);\n      |                      ^~~~~~~~~\n/tmp/tmp6t5655j6.cpp:25:11: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   25 |     list2.push_back(temp);\n      |           ^~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to pack consecutive duplicates of a given list elements into sublists.\nstd::any pack_consecutive_duplicates(std::any list1) {\n  std::any list2;\n  std::any list3;\n  std::any list4;\n  std::any list5;\n  std::any list6;\n  std::any list7;\n  std::any list8;\n  std::any list9;\n  std::any list10;\n  std::any list11;\n  std::any list12;\n  std::any list13;\n  std::any list14;\n  std::any list15;\n  std::any list16;\n  std::any list17;\n  std::any list18;\n  std::any list19;\n  std::any list20;\n  std::any list21;\n  std::any list22;\n  std::any list23;\n  std::any list24;\n  std::any list25;\n  std::any list26;\n  std::any list27;\n  std::any list28;\n  std::any list29;\n  std::any list30;\n  std::any list31;\n  std::any list32;\n  std::any list33;\n  std::any list34;\n  std::any list35;\n  std::any list36;\n  std::any list37;\n  std::any list38;\n  std::any list39;\n  std::any list40;\n  std::any list41;\n  std::any list42;\n  std::any list43;\n  std::any list44;\n  std::any list45;\n  std::any list46;\n  std::any list47;\n  std::any list48;\n  std::any list49;\n  std::any list50;\n  std::any list51;\n  std::any list52;\n  std::any list53;\n  std::any list54;\n  std::any list55;\n  std::any list56;\n  std::any list57;\n  std::any list58;\n  std::any list59;\n  std::any list60;\n  std::any list61;\n  std::any list62;\n  std::any list63;\n  std::any list64;\n  std::any list65;\n}\nint main() {\n    auto candidate = pack_consecutive_duplicates;\n    assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n    assert(candidate((std::any({(long)10, (long)10, (long)15, (long)19, (long)18, (long)18, (long)17, (long)26, (long)26, (long)17, (long)18, (long)10}))) == (std::any({(std::vector<long>)std::vector<long>({(long)10, (long)10}), (std::vector<long>)std::vector<long>({(long)15}), (std::vector<long>)std::vector<long>({(long)19}), (std::vector<long>)std::vector<long>({(long)18, (long)18}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)26, (long)26}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)18}), (std::vector<long>)std::vector<long>({(long)10})})));\n    assert(candidate((std::any({(std::string)\"a\", (std::string)\"a\", (std::string)\"b\", (std::string)\"c\", (std::string)\"d\", (std::string)\"d\"}))) == (std::any({(std::vector<std::string>)std::vector<std::string>({(std::string)\"a\", (std::string)\"a\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"b\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"c\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"d\", (std::string)\"d\"})})));\n}\n",
      "timestamp": 1666123393,
      "stdout": "",
      "stderr": "/tmp/tmpc6gd7f4w.cpp: In function \u2018std::any pack_consecutive_duplicates(std::any)\u2019:\n/tmp/tmpc6gd7f4w.cpp:69:1: warning: no return statement in function returning non-void [-Wreturn-type]\n   69 | }\n      | ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpc6gd7f4w.cpp:2:\n/tmp/tmpc6gd7f4w.cpp: In function \u2018int main()\u2019:\n/tmp/tmpc6gd7f4w.cpp:72:176: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   72 |     assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n      |                                                                                                                                                                                ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpc6gd7f4w.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>,",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to pack consecutive duplicates of a given list elements into sublists.\nstd::any pack_consecutive_duplicates(std::any list1) {\n    std::any list2;\n    std::any temp;\n    std::any::iterator it;\n    std::any::iterator it1;\n    for(it=list1.begin();it!=list1.end();it++)\n    {\n        if(temp.empty())\n        {\n            temp.push_back(*it);\n        }\n        else if(*it==temp.back())\n        {\n            temp.push_back(*it);\n        }\n        else\n        {\n            list2.push_back(temp);\n            temp.clear();\n            temp.push_back(*it);\n        }\n    }\n    list2.push_back(temp);\n    return list2;\n}\nint main() {\n    auto candidate = pack_consecutive_duplicates;\n    assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n    assert(candidate((std::any({(long)10, (long)10, (long)15, (long)19, (long)18, (long)18, (long)17, (long)26, (long)26, (long)17, (long)18, (long)10}))) == (std::any({(std::vector<long>)std::vector<long>({(long)10, (long)10}), (std::vector<long>)std::vector<long>({(long)15}), (std::vector<long>)std::vector<long>({(long)19}), (std::vector<long>)std::vector<long>({(long)18, (long)18}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)26, (long)26}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)18}), (std::vector<long>)std::vector<long>({(long)10})})));\n    assert(candidate((std::any({(std::string)\"a\", (std::string)\"a\", (std::string)\"b\", (std::string)\"c\", (std::string)\"d\", (std::string)\"d\"}))) == (std::any({(std::vector<std::string>)std::vector<std::string>({(std::string)\"a\", (std::string)\"a\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"b\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"c\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"d\", (std::string)\"d\"})})));\n}\n",
      "timestamp": 1666123393,
      "stdout": "",
      "stderr": "/tmp/tmpq9v86be7.cpp: In function \u2018std::any pack_consecutive_duplicates(std::any)\u2019:\n/tmp/tmpq9v86be7.cpp:7:15: error: \u2018iterator\u2019 is not a member of \u2018std::any\u2019\n    7 |     std::any::iterator it;\n      |               ^~~~~~~~\n/tmp/tmpq9v86be7.cpp:8:15: error: \u2018iterator\u2019 is not a member of \u2018std::any\u2019\n    8 |     std::any::iterator it1;\n      |               ^~~~~~~~\n/tmp/tmpq9v86be7.cpp:9:9: error: \u2018it\u2019 was not declared in this scope; did you mean \u2018int\u2019?\n    9 |     for(it=list1.begin();it!=list1.end();it++)\n      |         ^~\n      |         int\n/tmp/tmpq9v86be7.cpp:9:18: error: \u2018class std::any\u2019 has no member named \u2018begin\u2019\n    9 |     for(it=list1.begin();it!=list1.end();it++)\n      |                  ^~~~~\n/tmp/tmpq9v86be7.cpp:9:36: error: \u2018class std::any\u2019 has no member named \u2018end\u2019\n    9 |     for(it=list1.begin();it!=list1.end();it++)\n      |                                    ^~~\n/tmp/tmpq9v86be7.cpp:11:17: error: \u2018class std::any\u2019 has no member named \u2018empty\u2019\n   11 |         if(temp.empty())\n      |                 ^~~~~\n/tmp/tmpq9v86be7.cpp:13:18: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   13 |             temp.push_back(*it);\n      |                  ^~~~~~~~~\n/tmp/tmpq9v86be7.cpp:15:27: error: \u2018class std::any\u2019 has no member named \u2018back\u2019\n   15 |         else if(*it==temp.back())\n      |                           ^~~~\n/tmp/tmpq9v86be7.cpp:17:18: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   17 |             temp.push_back(*it);\n      |                  ^~~~~~~~~\n/tmp/tmpq9v86be7.cpp:21:19: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   21 |             list2.push_back(temp);\n      |                   ^~~~~~~~~\n/tmp/tmpq9v86be7.cpp:22:18: error: \u2018class std::any\u2019 has no member named \u2018clear\u2019\n   22 |             temp.clear();\n      |                  ^~~~~\n/tmp/tmpq9v86be7.cpp:23:18: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   23 |             temp.push_back(*it",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to pack consecutive duplicates of a given list elements into sublists.\nstd::any pack_consecutive_duplicates(std::any list1) {\n    std::any list2;\n    std::any temp;\n    std::any temp2;\n    std::any temp3;\n    std::any temp4;\n    std::any temp5;\n    std::any temp6;\n    std::any temp7;\n    std::any temp8;\n    std::any temp9;\n    std::any temp10;\n    std::any temp11;\n    std::any temp12;\n    std::any temp13;\n    std::any temp14;\n    std::any temp15;\n    std::any temp16;\n    std::any temp17;\n    std::any temp18;\n    std::any temp19;\n    std::any temp20;\n    std::any temp21;\n    std::any temp22;\n    std::any temp23;\n    std::any temp24;\n    std::any temp25;\n    std::any temp26;\n    std::any temp27;\n    std::any temp28;\n    std::any temp29;\n    std::any temp30;\n    std::any temp31;\n    std::any temp32;\n    std::any temp33;\n    std::any temp34;\n    std::any temp35;\n    std::any temp36;\n    std::any temp37;\n    std::any temp38;\n    std::any temp39;\n    std::any temp40;\n    std::any temp41;\n    std::any temp42;\n    std::any temp43;\n    std::any temp44;\n    std::any temp45;\n    std::any temp46;\n    std::any temp47;\n    std::any temp48;\n    std::any temp49;\n    std::any temp50;\n    std::any temp51;\n    std::any temp52;\n    std::any temp53;\n    std::any temp54;\n    std::any temp55;\n    std::any temp56;\n    std::any temp57;\n    std::any temp58;\n    std::any temp59;\n    std::any temp60;\n    std::any temp61;\n    std::any temp62;\n    std::any temp63;\n\n}\nint main() {\n    auto candidate = pack_consecutive_duplicates;\n    assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n    assert(candidate((std::any({(long)10, (long)10, (long)15, (long)19, (long)18, (long)18, (long)17, (long)26, (long)26, (long)17, (long)18, (long)10}))) == (std::any({(std::vector<long>)std::vector<long>({(long)10, (long)10}), (std::vector<long>)std::vector<long>({(long)15}), (std::vector<long>)std::vector<long>({(long)19}), (std::vector<long>)std::vector<long>({(long)18, (long)18}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)26, (long)26}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)18}), (std::vector<long>)std::vector<long>({(long)10})})));\n    assert(candidate((std::any({(std::string)\"a\", (std::string)\"a\", (std::string)\"b\", (std::string)\"c\", (std::string)\"d\", (std::string)\"d\"}))) == (std::any({(std::vector<std::string>)std::vector<std::string>({(std::string)\"a\", (std::string)\"a\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"b\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"c\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"d\", (std::string)\"d\"})})));\n}\n",
      "timestamp": 1665510437,
      "stdout": "",
      "stderr": "/tmp/tmp996xkpjp.cpp: In function \u2018std::any pack_consecutive_duplicates(std::any)\u2019:\n/tmp/tmp996xkpjp.cpp:70:1: warning: no return statement in function returning non-void [-Wreturn-type]\n   70 | }\n      | ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp996xkpjp.cpp:2:\n/tmp/tmp996xkpjp.cpp: In function \u2018int main()\u2019:\n/tmp/tmp996xkpjp.cpp:73:176: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   73 |     assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n      |                                                                                                                                                                                ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmp996xkpjp.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>,",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to pack consecutive duplicates of a given list elements into sublists.\nstd::any pack_consecutive_duplicates(std::any list1) {\n    std::any list2;\n    std::any temp;\n    std::any::iterator it = list1.begin();\n    while (it != list1.end()) {\n        temp.push_back(*it);\n        it++;\n        if (it == list1.end() || *it != temp.back()) {\n            list2.push_back(temp);\n            temp.clear();\n        }\n    }\n    return list2;\n}\nint main() {\n    auto candidate = pack_consecutive_duplicates;\n    assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n    assert(candidate((std::any({(long)10, (long)10, (long)15, (long)19, (long)18, (long)18, (long)17, (long)26, (long)26, (long)17, (long)18, (long)10}))) == (std::any({(std::vector<long>)std::vector<long>({(long)10, (long)10}), (std::vector<long>)std::vector<long>({(long)15}), (std::vector<long>)std::vector<long>({(long)19}), (std::vector<long>)std::vector<long>({(long)18, (long)18}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)26, (long)26}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)18}), (std::vector<long>)std::vector<long>({(long)10})})));\n    assert(candidate((std::any({(std::string)\"a\", (std::string)\"a\", (std::string)\"b\", (std::string)\"c\", (std::string)\"d\", (std::string)\"d\"}))) == (std::any({(std::vector<std::string>)std::vector<std::string>({(std::string)\"a\", (std::string)\"a\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"b\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"c\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"d\", (std::string)\"d\"})})));\n}\n",
      "timestamp": 1665510437,
      "stdout": "",
      "stderr": "/tmp/tmps8agvmg9.cpp: In function \u2018std::any pack_consecutive_duplicates(std::any)\u2019:\n/tmp/tmps8agvmg9.cpp:7:15: error: \u2018iterator\u2019 is not a member of \u2018std::any\u2019\n    7 |     std::any::iterator it = list1.begin();\n      |               ^~~~~~~~\n/tmp/tmps8agvmg9.cpp:8:12: error: \u2018it\u2019 was not declared in this scope; did you mean \u2018int\u2019?\n    8 |     while (it != list1.end()) {\n      |            ^~\n      |            int\n/tmp/tmps8agvmg9.cpp:8:24: error: \u2018class std::any\u2019 has no member named \u2018end\u2019\n    8 |     while (it != list1.end()) {\n      |                        ^~~\n/tmp/tmps8agvmg9.cpp:9:14: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n    9 |         temp.push_back(*it);\n      |              ^~~~~~~~~\n/tmp/tmps8agvmg9.cpp:11:25: error: \u2018class std::any\u2019 has no member named \u2018end\u2019\n   11 |         if (it == list1.end() || *it != temp.back()) {\n      |                         ^~~\n/tmp/tmps8agvmg9.cpp:11:46: error: \u2018class std::any\u2019 has no member named \u2018back\u2019\n   11 |         if (it == list1.end() || *it != temp.back()) {\n      |                                              ^~~~\n/tmp/tmps8agvmg9.cpp:12:19: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   12 |             list2.push_back(temp);\n      |                   ^~~~~~~~~\n/tmp/tmps8agvmg9.cpp:13:18: error: \u2018class std::any\u2019 has no member named \u2018clear\u2019\n   13 |             temp.clear();\n      |                  ^~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmps8agvmg9.cpp:2:\n/tmp/tmps8agvmg9.cpp: In function \u2018int main()\u2019:\n/tmp/tmps8agvmg9.cpp:20:176: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   20 |     assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to pack consecutive duplicates of a given list elements into sublists.\nstd::any pack_consecutive_duplicates(std::any list1) {\n\tstd::any list2;\n\tstd::any temp;\n\tstd::any::iterator it;\n\tstd::any::iterator it1;\n\tfor (it = list1.begin(); it != list1.end(); it++) {\n\t\tif (temp.empty()) {\n\t\t\ttemp.push_back(*it);\n\t\t}\n\t\telse {\n\t\t\tit1 = temp.end();\n\t\t\tit1--;\n\t\t\tif (*it1 == *it) {\n\t\t\t\ttemp.push_back(*it);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlist2.push_back(temp);\n\t\t\t\ttemp.clear();\n\t\t\t\ttemp.push_back(*it);\n\t\t\t}\n\t\t}\n\t}\n\tlist2.push_back(temp);\n\treturn list2;\n}\nint main() {\n    auto candidate = pack_consecutive_duplicates;\n    assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n    assert(candidate((std::any({(long)10, (long)10, (long)15, (long)19, (long)18, (long)18, (long)17, (long)26, (long)26, (long)17, (long)18, (long)10}))) == (std::any({(std::vector<long>)std::vector<long>({(long)10, (long)10}), (std::vector<long>)std::vector<long>({(long)15}), (std::vector<long>)std::vector<long>({(long)19}), (std::vector<long>)std::vector<long>({(long)18, (long)18}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)26, (long)26}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)18}), (std::vector<long>)std::vector<long>({(long)10})})));\n    assert(candidate((std::any({(std::string)\"a\", (std::string)\"a\", (std::string)\"b\", (std::string)\"c\", (std::string)\"d\", (std::string)\"d\"}))) == (std::any({(std::vector<std::string>)std::vector<std::string>({(std::string)\"a\", (std::string)\"a\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"b\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"c\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"d\", (std::string)\"d\"})})));\n}\n",
      "timestamp": 1666123393,
      "stdout": "",
      "stderr": "/tmp/tmp5zed6a88.cpp: In function \u2018std::any pack_consecutive_duplicates(std::any)\u2019:\n/tmp/tmp5zed6a88.cpp:7:12: error: \u2018iterator\u2019 is not a member of \u2018std::any\u2019\n    7 |  std::any::iterator it;\n      |            ^~~~~~~~\n/tmp/tmp5zed6a88.cpp:8:12: error: \u2018iterator\u2019 is not a member of \u2018std::any\u2019\n    8 |  std::any::iterator it1;\n      |            ^~~~~~~~\n/tmp/tmp5zed6a88.cpp:9:7: error: \u2018it\u2019 was not declared in this scope; did you mean \u2018int\u2019?\n    9 |  for (it = list1.begin(); it != list1.end(); it++) {\n      |       ^~\n      |       int\n/tmp/tmp5zed6a88.cpp:9:18: error: \u2018class std::any\u2019 has no member named \u2018begin\u2019\n    9 |  for (it = list1.begin(); it != list1.end(); it++) {\n      |                  ^~~~~\n/tmp/tmp5zed6a88.cpp:9:39: error: \u2018class std::any\u2019 has no member named \u2018end\u2019\n    9 |  for (it = list1.begin(); it != list1.end(); it++) {\n      |                                       ^~~\n/tmp/tmp5zed6a88.cpp:10:12: error: \u2018class std::any\u2019 has no member named \u2018empty\u2019\n   10 |   if (temp.empty()) {\n      |            ^~~~~\n/tmp/tmp5zed6a88.cpp:11:9: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   11 |    temp.push_back(*it);\n      |         ^~~~~~~~~\n/tmp/tmp5zed6a88.cpp:14:4: error: \u2018it1\u2019 was not declared in this scope; did you mean \u2018list1\u2019?\n   14 |    it1 = temp.end();\n      |    ^~~\n      |    list1\n/tmp/tmp5zed6a88.cpp:14:15: error: \u2018class std::any\u2019 has no member named \u2018end\u2019\n   14 |    it1 = temp.end();\n      |               ^~~\n/tmp/tmp5zed6a88.cpp:17:10: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   17 |     temp.push_back(*it);\n      |          ^~~~~~~~~\n/tmp/tmp5zed6a88.cpp:20:11: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   20 |     list2.push_back(temp);\n      |           ^~~~~~~~~\n/tmp/tmp5zed6a88.cpp:21:10: error: \u2018class std::any\u2019 has no member named \u2018clear\u2019\n   21 |     temp.clear();\n      |          ^~~~~\n/tmp/tmp5zed6a88.cpp:22:10: error: \u2018class std::any\u2019 has no m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to pack consecutive duplicates of a given list elements into sublists.\nstd::any pack_consecutive_duplicates(std::any list1) {\n    std::any list2 = {};\n    std::any sublist = {};\n    for (int i = 0; i < list1.size(); i++) {\n        if (i == 0) {\n            sublist.push_back(list1[i]);\n        } else {\n            if (list1[i] == list1[i - 1]) {\n                sublist.push_back(list1[i]);\n            } else {\n                list2.push_back(sublist);\n                sublist = {};\n                sublist.push_back(list1[i]);\n            }\n        }\n    }\n    list2.push_back(sublist);\n    return list2;\n}\nint main() {\n    auto candidate = pack_consecutive_duplicates;\n    assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n    assert(candidate((std::any({(long)10, (long)10, (long)15, (long)19, (long)18, (long)18, (long)17, (long)26, (long)26, (long)17, (long)18, (long)10}))) == (std::any({(std::vector<long>)std::vector<long>({(long)10, (long)10}), (std::vector<long>)std::vector<long>({(long)15}), (std::vector<long>)std::vector<long>({(long)19}), (std::vector<long>)std::vector<long>({(long)18, (long)18}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)26, (long)26}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)18}), (std::vector<long>)std::vector<long>({(long)10})})));\n    assert(candidate((std::any({(std::string)\"a\", (std::string)\"a\", (std::string)\"b\", (std::string)\"c\", (std::string)\"d\", (std::string)\"d\"}))) == (std::any({(std::vector<std::string>)std::vector<std::string>({(std::string)\"a\", (std::string)\"a\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"b\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"c\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"d\", (std::string)\"d\"})})));\n}\n",
      "timestamp": 1666123393,
      "stdout": "",
      "stderr": "/tmp/tmp35t2p6o1.cpp: In function \u2018std::any pack_consecutive_duplicates(std::any)\u2019:\n/tmp/tmp35t2p6o1.cpp:7:31: error: \u2018class std::any\u2019 has no member named \u2018size\u2019\n    7 |     for (int i = 0; i < list1.size(); i++) {\n      |                               ^~~~\n/tmp/tmp35t2p6o1.cpp:9:21: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n    9 |             sublist.push_back(list1[i]);\n      |                     ^~~~~~~~~\n/tmp/tmp35t2p6o1.cpp:9:36: error: no match for \u2018operator[]\u2019 (operand types are \u2018std::any\u2019 and \u2018int\u2019)\n    9 |             sublist.push_back(list1[i]);\n      |                                    ^\n/tmp/tmp35t2p6o1.cpp:11:22: error: no match for \u2018operator[]\u2019 (operand types are \u2018std::any\u2019 and \u2018int\u2019)\n   11 |             if (list1[i] == list1[i - 1]) {\n      |                      ^\n/tmp/tmp35t2p6o1.cpp:11:34: error: no match for \u2018operator[]\u2019 (operand types are \u2018std::any\u2019 and \u2018int\u2019)\n   11 |             if (list1[i] == list1[i - 1]) {\n      |                                  ^\n/tmp/tmp35t2p6o1.cpp:12:25: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   12 |                 sublist.push_back(list1[i]);\n      |                         ^~~~~~~~~\n/tmp/tmp35t2p6o1.cpp:12:40: error: no match for \u2018operator[]\u2019 (operand types are \u2018std::any\u2019 and \u2018int\u2019)\n   12 |                 sublist.push_back(list1[i]);\n      |                                        ^\n/tmp/tmp35t2p6o1.cpp:14:23: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   14 |                 list2.push_back(sublist);\n      |                       ^~~~~~~~~\n/tmp/tmp35t2p6o1.cpp:16:25: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   16 |                 sublist.push_back(list1[i]);\n      |                         ^~~~~~~~~\n/tmp/tmp35t2p6o1.cpp:16:40: error: no match for \u2018operator[]\u2019 (operand types are \u2018std::any\u2019 and \u2018int\u2019)\n   16 |                 sublist.push_back(list1[i]);\n      |                                        ^",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to pack consecutive duplicates of a given list elements into sublists.\nstd::any pack_consecutive_duplicates(std::any list1) {\n    std::any list2;\n    std::any temp;\n    std::any temp2;\n    std::any temp3;\n    std::any temp4;\n    std::any temp5;\n    std::any temp6;\n    std::any temp7;\n    std::any temp8;\n    std::any temp9;\n    std::any temp10;\n    std::any temp11;\n    std::any temp12;\n    std::any temp13;\n    std::any temp14;\n    std::any temp15;\n    std::any temp16;\n    std::any temp17;\n    std::any temp18;\n    std::any temp19;\n    std::any temp20;\n    std::any temp21;\n    std::any temp22;\n    std::any temp23;\n    std::any temp24;\n    std::any temp25;\n    std::any temp26;\n    std::any temp27;\n    std::any temp28;\n    std::any temp29;\n    std::any temp30;\n    std::any temp31;\n    std::any temp32;\n    std::any temp33;\n    std::any temp34;\n    std::any temp35;\n    std::any temp36;\n    std::any temp37;\n    std::any temp38;\n    std::any temp39;\n    std::any temp40;\n    std::any temp41;\n    std::any temp42;\n    std::any temp43;\n    std::any temp44;\n    std::any temp45;\n    std::any temp46;\n    std::any temp47;\n    std::any temp48;\n    std::any temp49;\n    std::any temp50;\n    std::any temp51;\n    std::any temp52;\n    std::any temp53;\n    std::any temp54;\n    std::any temp55;\n    std::any temp56;\n    std::any temp57;\n    std::any temp58;\n    std::any temp59;\n    std::any temp60;\n    std::any temp61;\n    std::any temp62;\n    std::any temp63;\n\n}\nint main() {\n    auto candidate = pack_consecutive_duplicates;\n    assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n    assert(candidate((std::any({(long)10, (long)10, (long)15, (long)19, (long)18, (long)18, (long)17, (long)26, (long)26, (long)17, (long)18, (long)10}))) == (std::any({(std::vector<long>)std::vector<long>({(long)10, (long)10}), (std::vector<long>)std::vector<long>({(long)15}), (std::vector<long>)std::vector<long>({(long)19}), (std::vector<long>)std::vector<long>({(long)18, (long)18}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)26, (long)26}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)18}), (std::vector<long>)std::vector<long>({(long)10})})));\n    assert(candidate((std::any({(std::string)\"a\", (std::string)\"a\", (std::string)\"b\", (std::string)\"c\", (std::string)\"d\", (std::string)\"d\"}))) == (std::any({(std::vector<std::string>)std::vector<std::string>({(std::string)\"a\", (std::string)\"a\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"b\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"c\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"d\", (std::string)\"d\"})})));\n}\n",
      "timestamp": 1665510437,
      "stdout": "",
      "stderr": "/tmp/tmp996xkpjp.cpp: In function \u2018std::any pack_consecutive_duplicates(std::any)\u2019:\n/tmp/tmp996xkpjp.cpp:70:1: warning: no return statement in function returning non-void [-Wreturn-type]\n   70 | }\n      | ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp996xkpjp.cpp:2:\n/tmp/tmp996xkpjp.cpp: In function \u2018int main()\u2019:\n/tmp/tmp996xkpjp.cpp:73:176: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   73 |     assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n      |                                                                                                                                                                                ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmp996xkpjp.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>,",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to pack consecutive duplicates of a given list elements into sublists.\nstd::any pack_consecutive_duplicates(std::any list1) {\n    std::any list2;\n    std::any temp;\n    std::any::iterator it;\n    for (it = list1.begin(); it != list1.end(); it++) {\n        if (temp.empty()) {\n            temp.push_back(*it);\n        } else if (temp.back() == *it) {\n            temp.push_back(*it);\n        } else {\n            list2.push_back(temp);\n            temp.clear();\n            temp.push_back(*it);\n        }\n    }\n    list2.push_back(temp);\n    return list2;\n}\nint main() {\n    auto candidate = pack_consecutive_duplicates;\n    assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n    assert(candidate((std::any({(long)10, (long)10, (long)15, (long)19, (long)18, (long)18, (long)17, (long)26, (long)26, (long)17, (long)18, (long)10}))) == (std::any({(std::vector<long>)std::vector<long>({(long)10, (long)10}), (std::vector<long>)std::vector<long>({(long)15}), (std::vector<long>)std::vector<long>({(long)19}), (std::vector<long>)std::vector<long>({(long)18, (long)18}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)26, (long)26}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)18}), (std::vector<long>)std::vector<long>({(long)10})})));\n    assert(candidate((std::any({(std::string)\"a\", (std::string)\"a\", (std::string)\"b\", (std::string)\"c\", (std::string)\"d\", (std::string)\"d\"}))) == (std::any({(std::vector<std::string>)std::vector<std::string>({(std::string)\"a\", (std::string)\"a\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"b\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"c\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"d\", (std::string)\"d\"})})));\n}\n",
      "timestamp": 1666123393,
      "stdout": "",
      "stderr": "/tmp/tmpp__1xjrc.cpp: In function \u2018std::any pack_consecutive_duplicates(std::any)\u2019:\n/tmp/tmpp__1xjrc.cpp:7:15: error: \u2018iterator\u2019 is not a member of \u2018std::any\u2019\n    7 |     std::any::iterator it;\n      |               ^~~~~~~~\n/tmp/tmpp__1xjrc.cpp:8:10: error: \u2018it\u2019 was not declared in this scope; did you mean \u2018int\u2019?\n    8 |     for (it = list1.begin(); it != list1.end(); it++) {\n      |          ^~\n      |          int\n/tmp/tmpp__1xjrc.cpp:8:21: error: \u2018class std::any\u2019 has no member named \u2018begin\u2019\n    8 |     for (it = list1.begin(); it != list1.end(); it++) {\n      |                     ^~~~~\n/tmp/tmpp__1xjrc.cpp:8:42: error: \u2018class std::any\u2019 has no member named \u2018end\u2019\n    8 |     for (it = list1.begin(); it != list1.end(); it++) {\n      |                                          ^~~\n/tmp/tmpp__1xjrc.cpp:9:18: error: \u2018class std::any\u2019 has no member named \u2018empty\u2019\n    9 |         if (temp.empty()) {\n      |                  ^~~~~\n/tmp/tmpp__1xjrc.cpp:10:18: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   10 |             temp.push_back(*it);\n      |                  ^~~~~~~~~\n/tmp/tmpp__1xjrc.cpp:11:25: error: \u2018class std::any\u2019 has no member named \u2018back\u2019\n   11 |         } else if (temp.back() == *it) {\n      |                         ^~~~\n/tmp/tmpp__1xjrc.cpp:12:18: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   12 |             temp.push_back(*it);\n      |                  ^~~~~~~~~\n/tmp/tmpp__1xjrc.cpp:14:19: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   14 |             list2.push_back(temp);\n      |                   ^~~~~~~~~\n/tmp/tmpp__1xjrc.cpp:15:18: error: \u2018class std::any\u2019 has no member named \u2018clear\u2019\n   15 |             temp.clear();\n      |                  ^~~~~\n/tmp/tmpp__1xjrc.cpp:16:18: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   16 |             temp.push_back(*it);\n      |                  ^~~~~~~~~\n/tmp/tmpp__1xjrc.cpp:19:11: error: \u2018class std::any\u2019 has no me",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to pack consecutive duplicates of a given list elements into sublists.\nstd::any pack_consecutive_duplicates(std::any list1) {\n    std::any list2;\n    std::any temp;\n    std::any temp2;\n    std::any temp3;\n    std::any temp4;\n    std::any temp5;\n    std::any temp6;\n    std::any temp7;\n    std::any temp8;\n    std::any temp9;\n    std::any temp10;\n    std::any temp11;\n    std::any temp12;\n    std::any temp13;\n    std::any temp14;\n    std::any temp15;\n    std::any temp16;\n    std::any temp17;\n    std::any temp18;\n    std::any temp19;\n    std::any temp20;\n    std::any temp21;\n    std::any temp22;\n    std::any temp23;\n    std::any temp24;\n    std::any temp25;\n    std::any temp26;\n    std::any temp27;\n    std::any temp28;\n    std::any temp29;\n    std::any temp30;\n    std::any temp31;\n    std::any temp32;\n    std::any temp33;\n    std::any temp34;\n    std::any temp35;\n    std::any temp36;\n    std::any temp37;\n    std::any temp38;\n    std::any temp39;\n    std::any temp40;\n    std::any temp41;\n    std::any temp42;\n    std::any temp43;\n    std::any temp44;\n    std::any temp45;\n    std::any temp46;\n    std::any temp47;\n    std::any temp48;\n    std::any temp49;\n    std::any temp50;\n    std::any temp51;\n    std::any temp52;\n    std::any temp53;\n    std::any temp54;\n    std::any temp55;\n    std::any temp56;\n    std::any temp57;\n    std::any temp58;\n    std::any temp59;\n    std::any temp60;\n    std::any temp61;\n    std::any temp62;\n    std::any temp63;\n\n}\nint main() {\n    auto candidate = pack_consecutive_duplicates;\n    assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n    assert(candidate((std::any({(long)10, (long)10, (long)15, (long)19, (long)18, (long)18, (long)17, (long)26, (long)26, (long)17, (long)18, (long)10}))) == (std::any({(std::vector<long>)std::vector<long>({(long)10, (long)10}), (std::vector<long>)std::vector<long>({(long)15}), (std::vector<long>)std::vector<long>({(long)19}), (std::vector<long>)std::vector<long>({(long)18, (long)18}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)26, (long)26}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)18}), (std::vector<long>)std::vector<long>({(long)10})})));\n    assert(candidate((std::any({(std::string)\"a\", (std::string)\"a\", (std::string)\"b\", (std::string)\"c\", (std::string)\"d\", (std::string)\"d\"}))) == (std::any({(std::vector<std::string>)std::vector<std::string>({(std::string)\"a\", (std::string)\"a\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"b\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"c\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"d\", (std::string)\"d\"})})));\n}\n",
      "timestamp": 1665510437,
      "stdout": "",
      "stderr": "/tmp/tmp996xkpjp.cpp: In function \u2018std::any pack_consecutive_duplicates(std::any)\u2019:\n/tmp/tmp996xkpjp.cpp:70:1: warning: no return statement in function returning non-void [-Wreturn-type]\n   70 | }\n      | ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp996xkpjp.cpp:2:\n/tmp/tmp996xkpjp.cpp: In function \u2018int main()\u2019:\n/tmp/tmp996xkpjp.cpp:73:176: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   73 |     assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n      |                                                                                                                                                                                ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmp996xkpjp.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>,",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to pack consecutive duplicates of a given list elements into sublists.\nstd::any pack_consecutive_duplicates(std::any list1) {\n    std::any list2;\n    std::any list3;\n    std::any list4;\n    std::any list5;\n    std::any list6;\n    std::any list7;\n    std::any list8;\n    std::any list9;\n    std::any list10;\n    std::any list11;\n    std::any list12;\n    std::any list13;\n    std::any list14;\n    std::any list15;\n    std::any list16;\n    std::any list17;\n    std::any list18;\n    std::any list19;\n    std::any list20;\n    std::any list21;\n    std::any list22;\n    std::any list23;\n    std::any list24;\n    std::any list25;\n    std::any list26;\n    std::any list27;\n    std::any list28;\n    std::any list29;\n    std::any list30;\n    std::any list31;\n    std::any list32;\n    std::any list33;\n    std::any list34;\n    std::any list35;\n    std::any list36;\n    std::any list37;\n    std::any list38;\n    std::any list39;\n    std::any list40;\n    std::any list41;\n    std::any list42;\n    std::any list43;\n    std::any list44;\n    std::any list45;\n    std::any list46;\n    std::any list47;\n    std::any list48;\n    std::any list49;\n    std::any list50;\n    std::any list51;\n    std::any list52;\n    std::any list53;\n    std::any list54;\n    std::any list55;\n    std::any list56;\n    std::any list57;\n    std::any list58;\n    std::any list59;\n    std::any list60;\n    std::any list61;\n    std::any list62;\n    std::any list63;\n    std::any list64;\n    std::any list65;\n}\nint main() {\n    auto candidate = pack_consecutive_duplicates;\n    assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n    assert(candidate((std::any({(long)10, (long)10, (long)15, (long)19, (long)18, (long)18, (long)17, (long)26, (long)26, (long)17, (long)18, (long)10}))) == (std::any({(std::vector<long>)std::vector<long>({(long)10, (long)10}), (std::vector<long>)std::vector<long>({(long)15}), (std::vector<long>)std::vector<long>({(long)19}), (std::vector<long>)std::vector<long>({(long)18, (long)18}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)26, (long)26}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)18}), (std::vector<long>)std::vector<long>({(long)10})})));\n    assert(candidate((std::any({(std::string)\"a\", (std::string)\"a\", (std::string)\"b\", (std::string)\"c\", (std::string)\"d\", (std::string)\"d\"}))) == (std::any({(std::vector<std::string>)std::vector<std::string>({(std::string)\"a\", (std::string)\"a\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"b\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"c\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"d\", (std::string)\"d\"})})));\n}\n",
      "timestamp": 1665510437,
      "stdout": "",
      "stderr": "/tmp/tmpgspun4wj.cpp: In function \u2018std::any pack_consecutive_duplicates(std::any)\u2019:\n/tmp/tmpgspun4wj.cpp:69:1: warning: no return statement in function returning non-void [-Wreturn-type]\n   69 | }\n      | ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpgspun4wj.cpp:2:\n/tmp/tmpgspun4wj.cpp: In function \u2018int main()\u2019:\n/tmp/tmpgspun4wj.cpp:72:176: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   72 |     assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n      |                                                                                                                                                                                ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpgspun4wj.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>,",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to pack consecutive duplicates of a given list elements into sublists.\nstd::any pack_consecutive_duplicates(std::any list1) {\n    std::any list2;\n    std::any temp;\n    std::any::iterator it;\n    it = list1.begin();\n    while(it != list1.end()) {\n        temp.push_back(*it);\n        it++;\n        if(it == list1.end() || *it != *(it-1)) {\n            list2.push_back(temp);\n            temp.clear();\n        }\n    }\n    return list2;\n}\nint main() {\n    auto candidate = pack_consecutive_duplicates;\n    assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n    assert(candidate((std::any({(long)10, (long)10, (long)15, (long)19, (long)18, (long)18, (long)17, (long)26, (long)26, (long)17, (long)18, (long)10}))) == (std::any({(std::vector<long>)std::vector<long>({(long)10, (long)10}), (std::vector<long>)std::vector<long>({(long)15}), (std::vector<long>)std::vector<long>({(long)19}), (std::vector<long>)std::vector<long>({(long)18, (long)18}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)26, (long)26}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)18}), (std::vector<long>)std::vector<long>({(long)10})})));\n    assert(candidate((std::any({(std::string)\"a\", (std::string)\"a\", (std::string)\"b\", (std::string)\"c\", (std::string)\"d\", (std::string)\"d\"}))) == (std::any({(std::vector<std::string>)std::vector<std::string>({(std::string)\"a\", (std::string)\"a\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"b\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"c\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"d\", (std::string)\"d\"})})));\n}\n",
      "timestamp": 1666123393,
      "stdout": "",
      "stderr": "/tmp/tmp1w9p66xp.cpp: In function \u2018std::any pack_consecutive_duplicates(std::any)\u2019:\n/tmp/tmp1w9p66xp.cpp:7:15: error: \u2018iterator\u2019 is not a member of \u2018std::any\u2019\n    7 |     std::any::iterator it;\n      |               ^~~~~~~~\n/tmp/tmp1w9p66xp.cpp:8:5: error: \u2018it\u2019 was not declared in this scope; did you mean \u2018int\u2019?\n    8 |     it = list1.begin();\n      |     ^~\n      |     int\n/tmp/tmp1w9p66xp.cpp:8:16: error: \u2018class std::any\u2019 has no member named \u2018begin\u2019\n    8 |     it = list1.begin();\n      |                ^~~~~\n/tmp/tmp1w9p66xp.cpp:9:23: error: \u2018class std::any\u2019 has no member named \u2018end\u2019\n    9 |     while(it != list1.end()) {\n      |                       ^~~\n/tmp/tmp1w9p66xp.cpp:10:14: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   10 |         temp.push_back(*it);\n      |              ^~~~~~~~~\n/tmp/tmp1w9p66xp.cpp:12:24: error: \u2018class std::any\u2019 has no member named \u2018end\u2019\n   12 |         if(it == list1.end() || *it != *(it-1)) {\n      |                        ^~~\n/tmp/tmp1w9p66xp.cpp:13:19: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   13 |             list2.push_back(temp);\n      |                   ^~~~~~~~~\n/tmp/tmp1w9p66xp.cpp:14:18: error: \u2018class std::any\u2019 has no member named \u2018clear\u2019\n   14 |             temp.clear();\n      |                  ^~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp1w9p66xp.cpp:2:\n/tmp/tmp1w9p66xp.cpp: In function \u2018int main()\u2019:\n/tmp/tmp1w9p66xp.cpp:21:176: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   21 |     assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (s",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to pack consecutive duplicates of a given list elements into sublists.\nstd::any pack_consecutive_duplicates(std::any list1) {\n\tstd::any list2;\n\tstd::any temp;\n\tstd::any::iterator it = list1.begin();\n\tstd::any::iterator it1 = list1.begin();\n\tit1++;\n\twhile (it1 != list1.end()) {\n\t\tif (*it == *it1) {\n\t\t\ttemp.push_back(*it);\n\t\t\tit++;\n\t\t\tit1++;\n\t\t}\n\t\telse {\n\t\t\ttemp.push_back(*it);\n\t\t\tlist2.push_back(temp);\n\t\t\ttemp.clear();\n\t\t\tit++;\n\t\t\tit1++;\n\t\t}\n\t}\n\ttemp.push_back(*it);\n\tlist2.push_back(temp);\n\treturn list2;\n}\nint main() {\n    auto candidate = pack_consecutive_duplicates;\n    assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n    assert(candidate((std::any({(long)10, (long)10, (long)15, (long)19, (long)18, (long)18, (long)17, (long)26, (long)26, (long)17, (long)18, (long)10}))) == (std::any({(std::vector<long>)std::vector<long>({(long)10, (long)10}), (std::vector<long>)std::vector<long>({(long)15}), (std::vector<long>)std::vector<long>({(long)19}), (std::vector<long>)std::vector<long>({(long)18, (long)18}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)26, (long)26}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)18}), (std::vector<long>)std::vector<long>({(long)10})})));\n    assert(candidate((std::any({(std::string)\"a\", (std::string)\"a\", (std::string)\"b\", (std::string)\"c\", (std::string)\"d\", (std::string)\"d\"}))) == (std::any({(std::vector<std::string>)std::vector<std::string>({(std::string)\"a\", (std::string)\"a\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"b\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"c\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"d\", (std::string)\"d\"})})));\n}\n",
      "timestamp": 1666123393,
      "stdout": "",
      "stderr": "/tmp/tmppuyuawmz.cpp: In function \u2018std::any pack_consecutive_duplicates(std::any)\u2019:\n/tmp/tmppuyuawmz.cpp:7:12: error: \u2018iterator\u2019 is not a member of \u2018std::any\u2019\n    7 |  std::any::iterator it = list1.begin();\n      |            ^~~~~~~~\n/tmp/tmppuyuawmz.cpp:8:12: error: \u2018iterator\u2019 is not a member of \u2018std::any\u2019\n    8 |  std::any::iterator it1 = list1.begin();\n      |            ^~~~~~~~\n/tmp/tmppuyuawmz.cpp:9:2: error: \u2018it1\u2019 was not declared in this scope; did you mean \u2018list1\u2019?\n    9 |  it1++;\n      |  ^~~\n      |  list1\n/tmp/tmppuyuawmz.cpp:10:22: error: \u2018class std::any\u2019 has no member named \u2018end\u2019\n   10 |  while (it1 != list1.end()) {\n      |                      ^~~\n/tmp/tmppuyuawmz.cpp:11:8: error: \u2018it\u2019 was not declared in this scope; did you mean \u2018int\u2019?\n   11 |   if (*it == *it1) {\n      |        ^~\n      |        int\n/tmp/tmppuyuawmz.cpp:12:9: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   12 |    temp.push_back(*it);\n      |         ^~~~~~~~~\n/tmp/tmppuyuawmz.cpp:17:9: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   17 |    temp.push_back(*it);\n      |         ^~~~~~~~~\n/tmp/tmppuyuawmz.cpp:18:10: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   18 |    list2.push_back(temp);\n      |          ^~~~~~~~~\n/tmp/tmppuyuawmz.cpp:19:9: error: \u2018class std::any\u2019 has no member named \u2018clear\u2019\n   19 |    temp.clear();\n      |         ^~~~~\n/tmp/tmppuyuawmz.cpp:24:7: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   24 |  temp.push_back(*it);\n      |       ^~~~~~~~~\n/tmp/tmppuyuawmz.cpp:24:18: error: \u2018it\u2019 was not declared in this scope; did you mean \u2018int\u2019?\n   24 |  temp.push_back(*it);\n      |                  ^~\n      |                  int\n/tmp/tmppuyuawmz.cpp:25:8: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   25 |  list2.push_back(temp);\n      |        ^~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to pack consecutive duplicates of a given list elements into sublists.\nstd::any pack_consecutive_duplicates(std::any list1) {\n  std::any list2;\n  std::any temp;\n  std::any temp2;\n  std::any temp3;\n  std::any temp4;\n  std::any temp5;\n  std::any temp6;\n  std::any temp7;\n  std::any temp8;\n  std::any temp9;\n  std::any temp10;\n  std::any temp11;\n  std::any temp12;\n  std::any temp13;\n  std::any temp14;\n  std::any temp15;\n  std::any temp16;\n  std::any temp17;\n  std::any temp18;\n  std::any temp19;\n  std::any temp20;\n  std::any temp21;\n  std::any temp22;\n  std::any temp23;\n  std::any temp24;\n  std::any temp25;\n  std::any temp26;\n  std::any temp27;\n  std::any temp28;\n  std::any temp29;\n  std::any temp30;\n  std::any temp31;\n  std::any temp32;\n  std::any temp33;\n  std::any temp34;\n  std::any temp35;\n  std::any temp36;\n  std::any temp37;\n  std::any temp38;\n  std::any temp39;\n  std::any temp40;\n  std::any temp41;\n  std::any temp42;\n  std::any temp43;\n  std::any temp44;\n  std::any temp45;\n  std::any temp46;\n  std::any temp47;\n  std::any temp48;\n  std::any temp49;\n  std::any temp50;\n  std::any temp51;\n  std::any temp52;\n  std::any temp53;\n  std::any temp54;\n  std::any temp55;\n  std::any temp56;\n  std::any temp57;\n  std::any temp58;\n  std::any temp59;\n  std::any temp60;\n  std::any temp61;\n  std::any temp62;\n  std::any temp63;\n\n}\nint main() {\n    auto candidate = pack_consecutive_duplicates;\n    assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n    assert(candidate((std::any({(long)10, (long)10, (long)15, (long)19, (long)18, (long)18, (long)17, (long)26, (long)26, (long)17, (long)18, (long)10}))) == (std::any({(std::vector<long>)std::vector<long>({(long)10, (long)10}), (std::vector<long>)std::vector<long>({(long)15}), (std::vector<long>)std::vector<long>({(long)19}), (std::vector<long>)std::vector<long>({(long)18, (long)18}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)26, (long)26}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)18}), (std::vector<long>)std::vector<long>({(long)10})})));\n    assert(candidate((std::any({(std::string)\"a\", (std::string)\"a\", (std::string)\"b\", (std::string)\"c\", (std::string)\"d\", (std::string)\"d\"}))) == (std::any({(std::vector<std::string>)std::vector<std::string>({(std::string)\"a\", (std::string)\"a\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"b\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"c\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"d\", (std::string)\"d\"})})));\n}\n",
      "timestamp": 1665510437,
      "stdout": "",
      "stderr": "/tmp/tmpcbajqnq3.cpp: In function \u2018std::any pack_consecutive_duplicates(std::any)\u2019:\n/tmp/tmpcbajqnq3.cpp:70:1: warning: no return statement in function returning non-void [-Wreturn-type]\n   70 | }\n      | ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpcbajqnq3.cpp:2:\n/tmp/tmpcbajqnq3.cpp: In function \u2018int main()\u2019:\n/tmp/tmpcbajqnq3.cpp:73:176: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   73 |     assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n      |                                                                                                                                                                                ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpcbajqnq3.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>,",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to pack consecutive duplicates of a given list elements into sublists.\nstd::any pack_consecutive_duplicates(std::any list1) {\n    std::any list2;\n    std::any temp;\n    std::any temp2;\n    std::any temp3;\n    std::any temp4;\n    std::any temp5;\n    std::any temp6;\n    std::any temp7;\n    std::any temp8;\n    std::any temp9;\n    std::any temp10;\n    std::any temp11;\n    std::any temp12;\n    std::any temp13;\n    std::any temp14;\n    std::any temp15;\n    std::any temp16;\n    std::any temp17;\n    std::any temp18;\n    std::any temp19;\n    std::any temp20;\n    std::any temp21;\n    std::any temp22;\n    std::any temp23;\n    std::any temp24;\n    std::any temp25;\n    std::any temp26;\n    std::any temp27;\n    std::any temp28;\n    std::any temp29;\n    std::any temp30;\n    std::any temp31;\n    std::any temp32;\n    std::any temp33;\n    std::any temp34;\n    std::any temp35;\n    std::any temp36;\n    std::any temp37;\n    std::any temp38;\n    std::any temp39;\n    std::any temp40;\n    std::any temp41;\n    std::any temp42;\n    std::any temp43;\n    std::any temp44;\n    std::any temp45;\n    std::any temp46;\n    std::any temp47;\n    std::any temp48;\n    std::any temp49;\n    std::any temp50;\n    std::any temp51;\n    std::any temp52;\n    std::any temp53;\n    std::any temp54;\n    std::any temp55;\n    std::any temp56;\n    std::any temp57;\n    std::any temp58;\n    std::any temp59;\n    std::any temp60;\n    std::any temp61;\n    std::any temp62;\n    std::any temp63;\n\n}\nint main() {\n    auto candidate = pack_consecutive_duplicates;\n    assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n    assert(candidate((std::any({(long)10, (long)10, (long)15, (long)19, (long)18, (long)18, (long)17, (long)26, (long)26, (long)17, (long)18, (long)10}))) == (std::any({(std::vector<long>)std::vector<long>({(long)10, (long)10}), (std::vector<long>)std::vector<long>({(long)15}), (std::vector<long>)std::vector<long>({(long)19}), (std::vector<long>)std::vector<long>({(long)18, (long)18}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)26, (long)26}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)18}), (std::vector<long>)std::vector<long>({(long)10})})));\n    assert(candidate((std::any({(std::string)\"a\", (std::string)\"a\", (std::string)\"b\", (std::string)\"c\", (std::string)\"d\", (std::string)\"d\"}))) == (std::any({(std::vector<std::string>)std::vector<std::string>({(std::string)\"a\", (std::string)\"a\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"b\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"c\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"d\", (std::string)\"d\"})})));\n}\n",
      "timestamp": 1665510437,
      "stdout": "",
      "stderr": "/tmp/tmp996xkpjp.cpp: In function \u2018std::any pack_consecutive_duplicates(std::any)\u2019:\n/tmp/tmp996xkpjp.cpp:70:1: warning: no return statement in function returning non-void [-Wreturn-type]\n   70 | }\n      | ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp996xkpjp.cpp:2:\n/tmp/tmp996xkpjp.cpp: In function \u2018int main()\u2019:\n/tmp/tmp996xkpjp.cpp:73:176: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   73 |     assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n      |                                                                                                                                                                                ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmp996xkpjp.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>,",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to pack consecutive duplicates of a given list elements into sublists.\nstd::any pack_consecutive_duplicates(std::any list1) {\n    std::any list2;\n    std::any temp;\n    std::any::iterator it;\n    std::any::iterator it2;\n    it = list1.begin();\n    while (it != list1.end()) {\n        temp.push_back(*it);\n        it2 = it + 1;\n        while (it2 != list1.end() && *it == *it2) {\n            temp.push_back(*it2);\n            it2++;\n        }\n        list2.push_back(temp);\n        temp.clear();\n        it = it2;\n    }\n    return list2;\n}\nint main() {\n    auto candidate = pack_consecutive_duplicates;\n    assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n    assert(candidate((std::any({(long)10, (long)10, (long)15, (long)19, (long)18, (long)18, (long)17, (long)26, (long)26, (long)17, (long)18, (long)10}))) == (std::any({(std::vector<long>)std::vector<long>({(long)10, (long)10}), (std::vector<long>)std::vector<long>({(long)15}), (std::vector<long>)std::vector<long>({(long)19}), (std::vector<long>)std::vector<long>({(long)18, (long)18}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)26, (long)26}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)18}), (std::vector<long>)std::vector<long>({(long)10})})));\n    assert(candidate((std::any({(std::string)\"a\", (std::string)\"a\", (std::string)\"b\", (std::string)\"c\", (std::string)\"d\", (std::string)\"d\"}))) == (std::any({(std::vector<std::string>)std::vector<std::string>({(std::string)\"a\", (std::string)\"a\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"b\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"c\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"d\", (std::string)\"d\"})})));\n}\n",
      "timestamp": 1666123393,
      "stdout": "",
      "stderr": "/tmp/tmp6zxd_q0c.cpp: In function \u2018std::any pack_consecutive_duplicates(std::any)\u2019:\n/tmp/tmp6zxd_q0c.cpp:7:15: error: \u2018iterator\u2019 is not a member of \u2018std::any\u2019\n    7 |     std::any::iterator it;\n      |               ^~~~~~~~\n/tmp/tmp6zxd_q0c.cpp:8:15: error: \u2018iterator\u2019 is not a member of \u2018std::any\u2019\n    8 |     std::any::iterator it2;\n      |               ^~~~~~~~\n/tmp/tmp6zxd_q0c.cpp:9:5: error: \u2018it\u2019 was not declared in this scope; did you mean \u2018int\u2019?\n    9 |     it = list1.begin();\n      |     ^~\n      |     int\n/tmp/tmp6zxd_q0c.cpp:9:16: error: \u2018class std::any\u2019 has no member named \u2018begin\u2019\n    9 |     it = list1.begin();\n      |                ^~~~~\n/tmp/tmp6zxd_q0c.cpp:10:24: error: \u2018class std::any\u2019 has no member named \u2018end\u2019\n   10 |     while (it != list1.end()) {\n      |                        ^~~\n/tmp/tmp6zxd_q0c.cpp:11:14: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   11 |         temp.push_back(*it);\n      |              ^~~~~~~~~\n/tmp/tmp6zxd_q0c.cpp:12:9: error: \u2018it2\u2019 was not declared in this scope; did you mean \u2018list2\u2019?\n   12 |         it2 = it + 1;\n      |         ^~~\n      |         list2\n/tmp/tmp6zxd_q0c.cpp:13:29: error: \u2018class std::any\u2019 has no member named \u2018end\u2019\n   13 |         while (it2 != list1.end() && *it == *it2) {\n      |                             ^~~\n/tmp/tmp6zxd_q0c.cpp:14:18: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   14 |             temp.push_back(*it2);\n      |                  ^~~~~~~~~\n/tmp/tmp6zxd_q0c.cpp:17:15: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   17 |         list2.push_back(temp);\n      |               ^~~~~~~~~\n/tmp/tmp6zxd_q0c.cpp:18:14: error: \u2018class std::any\u2019 has no member named \u2018clear\u2019\n   18 |         temp.clear();\n      |              ^~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to pack consecutive duplicates of a given list elements into sublists.\nstd::any pack_consecutive_duplicates(std::any list1) {\n  std::any list2;\n  std::any temp;\n  std::any::iterator it1 = list1.begin();\n  std::any::iterator it2 = list2.begin();\n  while(it1 != list1.end()) {\n    temp.push_back(*it1);\n    while(*it1 == *(it1+1)) {\n      temp.push_back(*(it1+1));\n      it1++;\n    }\n    it2 = list2.insert(it2, temp);\n    temp.clear();\n    it1++;\n  }\n  return list2;\n}\nint main() {\n    auto candidate = pack_consecutive_duplicates;\n    assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n    assert(candidate((std::any({(long)10, (long)10, (long)15, (long)19, (long)18, (long)18, (long)17, (long)26, (long)26, (long)17, (long)18, (long)10}))) == (std::any({(std::vector<long>)std::vector<long>({(long)10, (long)10}), (std::vector<long>)std::vector<long>({(long)15}), (std::vector<long>)std::vector<long>({(long)19}), (std::vector<long>)std::vector<long>({(long)18, (long)18}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)26, (long)26}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)18}), (std::vector<long>)std::vector<long>({(long)10})})));\n    assert(candidate((std::any({(std::string)\"a\", (std::string)\"a\", (std::string)\"b\", (std::string)\"c\", (std::string)\"d\", (std::string)\"d\"}))) == (std::any({(std::vector<std::string>)std::vector<std::string>({(std::string)\"a\", (std::string)\"a\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"b\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"c\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"d\", (std::string)\"d\"})})));\n}\n",
      "timestamp": 1666123393,
      "stdout": "",
      "stderr": "/tmp/tmpod56k69p.cpp: In function \u2018std::any pack_consecutive_duplicates(std::any)\u2019:\n/tmp/tmpod56k69p.cpp:7:13: error: \u2018iterator\u2019 is not a member of \u2018std::any\u2019\n    7 |   std::any::iterator it1 = list1.begin();\n      |             ^~~~~~~~\n/tmp/tmpod56k69p.cpp:8:13: error: \u2018iterator\u2019 is not a member of \u2018std::any\u2019\n    8 |   std::any::iterator it2 = list2.begin();\n      |             ^~~~~~~~\n/tmp/tmpod56k69p.cpp:9:9: error: \u2018it1\u2019 was not declared in this scope; did you mean \u2018list1\u2019?\n    9 |   while(it1 != list1.end()) {\n      |         ^~~\n      |         list1\n/tmp/tmpod56k69p.cpp:9:22: error: \u2018class std::any\u2019 has no member named \u2018end\u2019\n    9 |   while(it1 != list1.end()) {\n      |                      ^~~\n/tmp/tmpod56k69p.cpp:10:10: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   10 |     temp.push_back(*it1);\n      |          ^~~~~~~~~\n/tmp/tmpod56k69p.cpp:12:12: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   12 |       temp.push_back(*(it1+1));\n      |            ^~~~~~~~~\n/tmp/tmpod56k69p.cpp:15:5: error: \u2018it2\u2019 was not declared in this scope; did you mean \u2018list2\u2019?\n   15 |     it2 = list2.insert(it2, temp);\n      |     ^~~\n      |     list2\n/tmp/tmpod56k69p.cpp:15:17: error: \u2018class std::any\u2019 has no member named \u2018insert\u2019\n   15 |     it2 = list2.insert(it2, temp);\n      |                 ^~~~~~\n/tmp/tmpod56k69p.cpp:16:10: error: \u2018class std::any\u2019 has no member named \u2018clear\u2019\n   16 |     temp.clear();\n      |          ^~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpod56k69p.cpp:2:\n/tmp/tmpod56k69p.cpp: In function \u2018int main()\u2019:\n/tmp/tmpod56k69p.cpp:23:176: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   23 |     assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to pack consecutive duplicates of a given list elements into sublists.\nstd::any pack_consecutive_duplicates(std::any list1) {\n    // Write your code here\n    std::any list2;\n    std::any temp;\n    std::any::iterator it = list1.begin();\n    while(it != list1.end()){\n        temp.push_back(*it);\n        it++;\n        if(it == list1.end()){\n            list2.push_back(temp);\n            break;\n        }\n        if(*it != temp.back()){\n            list2.push_back(temp);\n            temp.clear();\n        }\n    }\n    return list2;\n}\nint main() {\n    auto candidate = pack_consecutive_duplicates;\n    assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n    assert(candidate((std::any({(long)10, (long)10, (long)15, (long)19, (long)18, (long)18, (long)17, (long)26, (long)26, (long)17, (long)18, (long)10}))) == (std::any({(std::vector<long>)std::vector<long>({(long)10, (long)10}), (std::vector<long>)std::vector<long>({(long)15}), (std::vector<long>)std::vector<long>({(long)19}), (std::vector<long>)std::vector<long>({(long)18, (long)18}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)26, (long)26}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)18}), (std::vector<long>)std::vector<long>({(long)10})})));\n    assert(candidate((std::any({(std::string)\"a\", (std::string)\"a\", (std::string)\"b\", (std::string)\"c\", (std::string)\"d\", (std::string)\"d\"}))) == (std::any({(std::vector<std::string>)std::vector<std::string>({(std::string)\"a\", (std::string)\"a\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"b\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"c\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"d\", (std::string)\"d\"})})));\n}\n",
      "timestamp": 1666123393,
      "stdout": "",
      "stderr": "/tmp/tmpoa5jl2r2.cpp: In function \u2018std::any pack_consecutive_duplicates(std::any)\u2019:\n/tmp/tmpoa5jl2r2.cpp:8:15: error: \u2018iterator\u2019 is not a member of \u2018std::any\u2019\n    8 |     std::any::iterator it = list1.begin();\n      |               ^~~~~~~~\n/tmp/tmpoa5jl2r2.cpp:9:11: error: \u2018it\u2019 was not declared in this scope; did you mean \u2018int\u2019?\n    9 |     while(it != list1.end()){\n      |           ^~\n      |           int\n/tmp/tmpoa5jl2r2.cpp:9:23: error: \u2018class std::any\u2019 has no member named \u2018end\u2019\n    9 |     while(it != list1.end()){\n      |                       ^~~\n/tmp/tmpoa5jl2r2.cpp:10:14: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   10 |         temp.push_back(*it);\n      |              ^~~~~~~~~\n/tmp/tmpoa5jl2r2.cpp:12:24: error: \u2018class std::any\u2019 has no member named \u2018end\u2019\n   12 |         if(it == list1.end()){\n      |                        ^~~\n/tmp/tmpoa5jl2r2.cpp:13:19: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   13 |             list2.push_back(temp);\n      |                   ^~~~~~~~~\n/tmp/tmpoa5jl2r2.cpp:16:24: error: \u2018class std::any\u2019 has no member named \u2018back\u2019\n   16 |         if(*it != temp.back()){\n      |                        ^~~~\n/tmp/tmpoa5jl2r2.cpp:17:19: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   17 |             list2.push_back(temp);\n      |                   ^~~~~~~~~\n/tmp/tmpoa5jl2r2.cpp:18:18: error: \u2018class std::any\u2019 has no member named \u2018clear\u2019\n   18 |             temp.clear();\n      |                  ^~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpoa5jl2r2.cpp:2:\n/tmp/tmpoa5jl2r2.cpp: In function \u2018int main()\u2019:\n/tmp/tmpoa5jl2r2.cpp:25:176: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   25 |     assert(candidate((std::any({(long)0, (long)0, (l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to pack consecutive duplicates of a given list elements into sublists.\nstd::any pack_consecutive_duplicates(std::any list1) {\n  std::any list2;\n  std::any temp;\n  std::any temp2;\n  std::any temp3;\n  std::any temp4;\n  std::any temp5;\n  std::any temp6;\n  std::any temp7;\n  std::any temp8;\n  std::any temp9;\n  std::any temp10;\n  std::any temp11;\n  std::any temp12;\n  std::any temp13;\n  std::any temp14;\n  std::any temp15;\n  std::any temp16;\n  std::any temp17;\n  std::any temp18;\n  std::any temp19;\n  std::any temp20;\n  std::any temp21;\n  std::any temp22;\n  std::any temp23;\n  std::any temp24;\n  std::any temp25;\n  std::any temp26;\n  std::any temp27;\n  std::any temp28;\n  std::any temp29;\n  std::any temp30;\n  std::any temp31;\n  std::any temp32;\n  std::any temp33;\n  std::any temp34;\n  std::any temp35;\n  std::any temp36;\n  std::any temp37;\n  std::any temp38;\n  std::any temp39;\n  std::any temp40;\n  std::any temp41;\n  std::any temp42;\n  std::any temp43;\n  std::any temp44;\n  std::any temp45;\n  std::any temp46;\n  std::any temp47;\n  std::any temp48;\n  std::any temp49;\n  std::any temp50;\n  std::any temp51;\n  std::any temp52;\n  std::any temp53;\n  std::any temp54;\n  std::any temp55;\n  std::any temp56;\n  std::any temp57;\n  std::any temp58;\n  std::any temp59;\n  std::any temp60;\n  std::any temp61;\n  std::any temp62;\n  std::any temp63;\n\n}\nint main() {\n    auto candidate = pack_consecutive_duplicates;\n    assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n    assert(candidate((std::any({(long)10, (long)10, (long)15, (long)19, (long)18, (long)18, (long)17, (long)26, (long)26, (long)17, (long)18, (long)10}))) == (std::any({(std::vector<long>)std::vector<long>({(long)10, (long)10}), (std::vector<long>)std::vector<long>({(long)15}), (std::vector<long>)std::vector<long>({(long)19}), (std::vector<long>)std::vector<long>({(long)18, (long)18}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)26, (long)26}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)18}), (std::vector<long>)std::vector<long>({(long)10})})));\n    assert(candidate((std::any({(std::string)\"a\", (std::string)\"a\", (std::string)\"b\", (std::string)\"c\", (std::string)\"d\", (std::string)\"d\"}))) == (std::any({(std::vector<std::string>)std::vector<std::string>({(std::string)\"a\", (std::string)\"a\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"b\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"c\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"d\", (std::string)\"d\"})})));\n}\n",
      "timestamp": 1665510437,
      "stdout": "",
      "stderr": "/tmp/tmpcbajqnq3.cpp: In function \u2018std::any pack_consecutive_duplicates(std::any)\u2019:\n/tmp/tmpcbajqnq3.cpp:70:1: warning: no return statement in function returning non-void [-Wreturn-type]\n   70 | }\n      | ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpcbajqnq3.cpp:2:\n/tmp/tmpcbajqnq3.cpp: In function \u2018int main()\u2019:\n/tmp/tmpcbajqnq3.cpp:73:176: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   73 |     assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n      |                                                                                                                                                                                ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpcbajqnq3.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>,",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to pack consecutive duplicates of a given list elements into sublists.\nstd::any pack_consecutive_duplicates(std::any list1) {\n  std::any list2;\n  std::any list3;\n  std::any list4;\n  std::any list5;\n  std::any list6;\n  std::any list7;\n  std::any list8;\n  std::any list9;\n  std::any list10;\n  std::any list11;\n  std::any list12;\n  std::any list13;\n  std::any list14;\n  std::any list15;\n  std::any list16;\n  std::any list17;\n  std::any list18;\n  std::any list19;\n  std::any list20;\n  std::any list21;\n  std::any list22;\n  std::any list23;\n  std::any list24;\n  std::any list25;\n  std::any list26;\n  std::any list27;\n  std::any list28;\n  std::any list29;\n  std::any list30;\n  std::any list31;\n  std::any list32;\n  std::any list33;\n  std::any list34;\n  std::any list35;\n  std::any list36;\n  std::any list37;\n  std::any list38;\n  std::any list39;\n  std::any list40;\n  std::any list41;\n  std::any list42;\n  std::any list43;\n  std::any list44;\n  std::any list45;\n  std::any list46;\n  std::any list47;\n  std::any list48;\n  std::any list49;\n  std::any list50;\n  std::any list51;\n  std::any list52;\n  std::any list53;\n  std::any list54;\n  std::any list55;\n  std::any list56;\n  std::any list57;\n  std::any list58;\n  std::any list59;\n  std::any list60;\n  std::any list61;\n  std::any list62;\n  std::any list63;\n  std::any list64;\n  std::any list65;\n}\nint main() {\n    auto candidate = pack_consecutive_duplicates;\n    assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n    assert(candidate((std::any({(long)10, (long)10, (long)15, (long)19, (long)18, (long)18, (long)17, (long)26, (long)26, (long)17, (long)18, (long)10}))) == (std::any({(std::vector<long>)std::vector<long>({(long)10, (long)10}), (std::vector<long>)std::vector<long>({(long)15}), (std::vector<long>)std::vector<long>({(long)19}), (std::vector<long>)std::vector<long>({(long)18, (long)18}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)26, (long)26}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)18}), (std::vector<long>)std::vector<long>({(long)10})})));\n    assert(candidate((std::any({(std::string)\"a\", (std::string)\"a\", (std::string)\"b\", (std::string)\"c\", (std::string)\"d\", (std::string)\"d\"}))) == (std::any({(std::vector<std::string>)std::vector<std::string>({(std::string)\"a\", (std::string)\"a\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"b\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"c\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"d\", (std::string)\"d\"})})));\n}\n",
      "timestamp": 1666123393,
      "stdout": "",
      "stderr": "/tmp/tmpc6gd7f4w.cpp: In function \u2018std::any pack_consecutive_duplicates(std::any)\u2019:\n/tmp/tmpc6gd7f4w.cpp:69:1: warning: no return statement in function returning non-void [-Wreturn-type]\n   69 | }\n      | ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpc6gd7f4w.cpp:2:\n/tmp/tmpc6gd7f4w.cpp: In function \u2018int main()\u2019:\n/tmp/tmpc6gd7f4w.cpp:72:176: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   72 |     assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n      |                                                                                                                                                                                ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpc6gd7f4w.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>,",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to pack consecutive duplicates of a given list elements into sublists.\nstd::any pack_consecutive_duplicates(std::any list1) {\n    std::any sublist;\n    std::any result;\n    std::any temp;\n    for (auto i : list1) {\n        if (temp.empty() || temp.front() == i) {\n            temp.push_back(i);\n        } else {\n            sublist.push_back(temp);\n            temp.clear();\n            temp.push_back(i);\n        }\n    }\n    sublist.push_back(temp);\n    return sublist;\n}\nint main() {\n    auto candidate = pack_consecutive_duplicates;\n    assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n    assert(candidate((std::any({(long)10, (long)10, (long)15, (long)19, (long)18, (long)18, (long)17, (long)26, (long)26, (long)17, (long)18, (long)10}))) == (std::any({(std::vector<long>)std::vector<long>({(long)10, (long)10}), (std::vector<long>)std::vector<long>({(long)15}), (std::vector<long>)std::vector<long>({(long)19}), (std::vector<long>)std::vector<long>({(long)18, (long)18}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)26, (long)26}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)18}), (std::vector<long>)std::vector<long>({(long)10})})));\n    assert(candidate((std::any({(std::string)\"a\", (std::string)\"a\", (std::string)\"b\", (std::string)\"c\", (std::string)\"d\", (std::string)\"d\"}))) == (std::any({(std::vector<std::string>)std::vector<std::string>({(std::string)\"a\", (std::string)\"a\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"b\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"c\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"d\", (std::string)\"d\"})})));\n}\n",
      "timestamp": 1666123395,
      "stdout": "",
      "stderr": "/tmp/tmpgers0828.cpp: In function \u2018std::any pack_consecutive_duplicates(std::any)\u2019:\n/tmp/tmpgers0828.cpp:8:19: error: no matching function for call to \u2018begin(std::any&)\u2019\n    8 |     for (auto i : list1) {\n      |                   ^~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/range_access.h:36,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/string:54,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/locale_classes.h:40,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/ios_base.h:41,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ios:42,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/istream:38,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/sstream:38,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/complex:45,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ccomplex:39,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:54,\n                 from /tmp/tmpgers0828.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/initializer_list:89:5: note: candidate: \u2018template<class _Tp> constexpr const _Tp* std::begin(std::initializer_list<_Tp>)\u2019\n   89 |     begin(initializer_list<_Tp> __ils) noexcept\n      |     ^~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/initializer_list:89:5: note:   template argument deduction/substitution failed:\n/tmp/tmpgers0828.cpp:8:19: note:   \u2018std::any\u2019 is not derived from \u2018std::initializer_list<_Tp>\u2019\n    8 |     for (auto i : list1) {\n      |                   ^~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/string:54,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/locale_classes.h:40,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/ios_base.h:41,\n        ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to pack consecutive duplicates of a given list elements into sublists.\nstd::any pack_consecutive_duplicates(std::any list1) {\n    std::any list2;\n    std::any temp;\n    std::any::iterator it = list1.begin();\n    while(it != list1.end()) {\n        std::any::iterator it1 = it;\n        temp.push_back(*it);\n        it1++;\n        while(it1 != list1.end() && *it == *it1) {\n            temp.push_back(*it1);\n            it1++;\n        }\n        list2.push_back(temp);\n        temp.clear();\n        it = it1;\n    }\n    return list2;\n}\nint main() {\n    auto candidate = pack_consecutive_duplicates;\n    assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n    assert(candidate((std::any({(long)10, (long)10, (long)15, (long)19, (long)18, (long)18, (long)17, (long)26, (long)26, (long)17, (long)18, (long)10}))) == (std::any({(std::vector<long>)std::vector<long>({(long)10, (long)10}), (std::vector<long>)std::vector<long>({(long)15}), (std::vector<long>)std::vector<long>({(long)19}), (std::vector<long>)std::vector<long>({(long)18, (long)18}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)26, (long)26}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)18}), (std::vector<long>)std::vector<long>({(long)10})})));\n    assert(candidate((std::any({(std::string)\"a\", (std::string)\"a\", (std::string)\"b\", (std::string)\"c\", (std::string)\"d\", (std::string)\"d\"}))) == (std::any({(std::vector<std::string>)std::vector<std::string>({(std::string)\"a\", (std::string)\"a\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"b\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"c\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"d\", (std::string)\"d\"})})));\n}\n",
      "timestamp": 1666123396,
      "stdout": "",
      "stderr": "/tmp/tmpneora1qr.cpp: In function \u2018std::any pack_consecutive_duplicates(std::any)\u2019:\n/tmp/tmpneora1qr.cpp:7:15: error: \u2018iterator\u2019 is not a member of \u2018std::any\u2019\n    7 |     std::any::iterator it = list1.begin();\n      |               ^~~~~~~~\n/tmp/tmpneora1qr.cpp:8:11: error: \u2018it\u2019 was not declared in this scope; did you mean \u2018int\u2019?\n    8 |     while(it != list1.end()) {\n      |           ^~\n      |           int\n/tmp/tmpneora1qr.cpp:8:23: error: \u2018class std::any\u2019 has no member named \u2018end\u2019\n    8 |     while(it != list1.end()) {\n      |                       ^~~\n/tmp/tmpneora1qr.cpp:9:19: error: \u2018iterator\u2019 is not a member of \u2018std::any\u2019\n    9 |         std::any::iterator it1 = it;\n      |                   ^~~~~~~~\n/tmp/tmpneora1qr.cpp:10:14: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   10 |         temp.push_back(*it);\n      |              ^~~~~~~~~\n/tmp/tmpneora1qr.cpp:11:9: error: \u2018it1\u2019 was not declared in this scope; did you mean \u2018list1\u2019?\n   11 |         it1++;\n      |         ^~~\n      |         list1\n/tmp/tmpneora1qr.cpp:12:28: error: \u2018class std::any\u2019 has no member named \u2018end\u2019\n   12 |         while(it1 != list1.end() && *it == *it1) {\n      |                            ^~~\n/tmp/tmpneora1qr.cpp:13:18: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   13 |             temp.push_back(*it1);\n      |                  ^~~~~~~~~\n/tmp/tmpneora1qr.cpp:16:15: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   16 |         list2.push_back(temp);\n      |               ^~~~~~~~~\n/tmp/tmpneora1qr.cpp:17:14: error: \u2018class std::any\u2019 has no member named \u2018clear\u2019\n   17 |         temp.clear();\n      |              ^~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpneora1qr.cpp:2:\n/tmp/tmpneora1qr.cpp: In function \u2018int main()\u2019:\n/tmp/tmpn",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to pack consecutive duplicates of a given list elements into sublists.\nstd::any pack_consecutive_duplicates(std::any list1) {\n\tstd::any list2;\n\tstd::any temp;\n\tstd::any temp2;\n\tstd::any temp3;\n\tstd::any temp4;\n\tstd::any temp5;\n\tstd::any temp6;\n\tstd::any temp7;\n\tstd::any temp8;\n\tstd::any temp9;\n\tstd::any temp10;\n\tstd::any temp11;\n\tstd::any temp12;\n\tstd::any temp13;\n\tstd::any temp14;\n\tstd::any temp15;\n\tstd::any temp16;\n\tstd::any temp17;\n\tstd::any temp18;\n\tstd::any temp19;\n\tstd::any temp20;\n\tstd::any temp21;\n\tstd::any temp22;\n\tstd::any temp23;\n\tstd::any temp24;\n\tstd::any temp25;\n\tstd::any temp26;\n\tstd::any temp27;\n\tstd::any temp28;\n\tstd::any temp29;\n\tstd::any temp30;\n\tstd::any temp31;\n\tstd::any temp32;\n\tstd::any temp33;\n\tstd::any temp34;\n\tstd::any temp35;\n\tstd::any temp36;\n\tstd::any temp37;\n\tstd::any temp38;\n\tstd::any temp39;\n\tstd::any temp40;\n\tstd::any temp41;\n\tstd::any temp42;\n\tstd::any temp43;\n\tstd::any temp44;\n\tstd::any temp45;\n\tstd::any temp46;\n\tstd::any temp47;\n\tstd::any temp48;\n\tstd::any temp49;\n\tstd::any temp50;\n\tstd::any temp51;\n\tstd::any temp52;\n\tstd::any temp53;\n\tstd::any temp54;\n\tstd::any temp55;\n\tstd::any temp56;\n\tstd::any temp57;\n\tstd::any temp58;\n\tstd::any temp59;\n\tstd::any temp60;\n\tstd::any temp61;\n\tstd::any temp62;\n\tstd::any temp63;\n\n}\nint main() {\n    auto candidate = pack_consecutive_duplicates;\n    assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n    assert(candidate((std::any({(long)10, (long)10, (long)15, (long)19, (long)18, (long)18, (long)17, (long)26, (long)26, (long)17, (long)18, (long)10}))) == (std::any({(std::vector<long>)std::vector<long>({(long)10, (long)10}), (std::vector<long>)std::vector<long>({(long)15}), (std::vector<long>)std::vector<long>({(long)19}), (std::vector<long>)std::vector<long>({(long)18, (long)18}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)26, (long)26}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)18}), (std::vector<long>)std::vector<long>({(long)10})})));\n    assert(candidate((std::any({(std::string)\"a\", (std::string)\"a\", (std::string)\"b\", (std::string)\"c\", (std::string)\"d\", (std::string)\"d\"}))) == (std::any({(std::vector<std::string>)std::vector<std::string>({(std::string)\"a\", (std::string)\"a\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"b\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"c\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"d\", (std::string)\"d\"})})));\n}\n",
      "timestamp": 1665510437,
      "stdout": "",
      "stderr": "/tmp/tmp1qd6ljkj.cpp: In function \u2018std::any pack_consecutive_duplicates(std::any)\u2019:\n/tmp/tmp1qd6ljkj.cpp:70:1: warning: no return statement in function returning non-void [-Wreturn-type]\n   70 | }\n      | ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp1qd6ljkj.cpp:2:\n/tmp/tmp1qd6ljkj.cpp: In function \u2018int main()\u2019:\n/tmp/tmp1qd6ljkj.cpp:73:176: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   73 |     assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n      |                                                                                                                                                                                ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmp1qd6ljkj.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>,",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to pack consecutive duplicates of a given list elements into sublists.\nstd::any pack_consecutive_duplicates(std::any list1) {\n    std::any list2;\n    std::any temp;\n    std::any::iterator it = list1.begin();\n    while (it != list1.end()) {\n        int count = 0;\n        while (it != list1.end() && *it == *(it + 1)) {\n            count++;\n            it++;\n        }\n        if (count == 0) {\n            temp.push_back(*it);\n            list2.push_back(temp);\n            temp.clear();\n        } else {\n            temp.push_back(*it);\n            list2.push_back(temp);\n            temp.clear();\n        }\n        it++;\n    }\n    return list2;\n}\nint main() {\n    auto candidate = pack_consecutive_duplicates;\n    assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n    assert(candidate((std::any({(long)10, (long)10, (long)15, (long)19, (long)18, (long)18, (long)17, (long)26, (long)26, (long)17, (long)18, (long)10}))) == (std::any({(std::vector<long>)std::vector<long>({(long)10, (long)10}), (std::vector<long>)std::vector<long>({(long)15}), (std::vector<long>)std::vector<long>({(long)19}), (std::vector<long>)std::vector<long>({(long)18, (long)18}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)26, (long)26}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)18}), (std::vector<long>)std::vector<long>({(long)10})})));\n    assert(candidate((std::any({(std::string)\"a\", (std::string)\"a\", (std::string)\"b\", (std::string)\"c\", (std::string)\"d\", (std::string)\"d\"}))) == (std::any({(std::vector<std::string>)std::vector<std::string>({(std::string)\"a\", (std::string)\"a\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"b\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"c\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"d\", (std::string)\"d\"})})));\n}\n",
      "timestamp": 1666123396,
      "stdout": "",
      "stderr": "/tmp/tmpgxbsf2k1.cpp: In function \u2018std::any pack_consecutive_duplicates(std::any)\u2019:\n/tmp/tmpgxbsf2k1.cpp:7:15: error: \u2018iterator\u2019 is not a member of \u2018std::any\u2019\n    7 |     std::any::iterator it = list1.begin();\n      |               ^~~~~~~~\n/tmp/tmpgxbsf2k1.cpp:8:12: error: \u2018it\u2019 was not declared in this scope; did you mean \u2018int\u2019?\n    8 |     while (it != list1.end()) {\n      |            ^~\n      |            int\n/tmp/tmpgxbsf2k1.cpp:8:24: error: \u2018class std::any\u2019 has no member named \u2018end\u2019\n    8 |     while (it != list1.end()) {\n      |                        ^~~\n/tmp/tmpgxbsf2k1.cpp:10:28: error: \u2018class std::any\u2019 has no member named \u2018end\u2019\n   10 |         while (it != list1.end() && *it == *(it + 1)) {\n      |                            ^~~\n/tmp/tmpgxbsf2k1.cpp:15:18: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   15 |             temp.push_back(*it);\n      |                  ^~~~~~~~~\n/tmp/tmpgxbsf2k1.cpp:16:19: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   16 |             list2.push_back(temp);\n      |                   ^~~~~~~~~\n/tmp/tmpgxbsf2k1.cpp:17:18: error: \u2018class std::any\u2019 has no member named \u2018clear\u2019\n   17 |             temp.clear();\n      |                  ^~~~~\n/tmp/tmpgxbsf2k1.cpp:19:18: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   19 |             temp.push_back(*it);\n      |                  ^~~~~~~~~\n/tmp/tmpgxbsf2k1.cpp:20:19: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   20 |             list2.push_back(temp);\n      |                   ^~~~~~~~~\n/tmp/tmpgxbsf2k1.cpp:21:18: error: \u2018class std::any\u2019 has no member named \u2018clear\u2019\n   21 |             temp.clear();\n      |                  ^~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpgxbsf2k1.cpp:2:\n/tmp/tmpgxbsf2k1.cpp: In function ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to pack consecutive duplicates of a given list elements into sublists.\nstd::any pack_consecutive_duplicates(std::any list1) {\n    std::any list2;\n    std::any temp;\n    std::any::iterator it1 = list1.begin();\n    std::any::iterator it2 = list2.begin();\n    while (it1 != list1.end()) {\n        temp.push_back(*it1);\n        if (*it1 != *(it1 + 1)) {\n            it2 = list2.insert(it2, temp);\n            temp.clear();\n        }\n        it1++;\n    }\n    return list2;\n}\nint main() {\n    auto candidate = pack_consecutive_duplicates;\n    assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n    assert(candidate((std::any({(long)10, (long)10, (long)15, (long)19, (long)18, (long)18, (long)17, (long)26, (long)26, (long)17, (long)18, (long)10}))) == (std::any({(std::vector<long>)std::vector<long>({(long)10, (long)10}), (std::vector<long>)std::vector<long>({(long)15}), (std::vector<long>)std::vector<long>({(long)19}), (std::vector<long>)std::vector<long>({(long)18, (long)18}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)26, (long)26}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)18}), (std::vector<long>)std::vector<long>({(long)10})})));\n    assert(candidate((std::any({(std::string)\"a\", (std::string)\"a\", (std::string)\"b\", (std::string)\"c\", (std::string)\"d\", (std::string)\"d\"}))) == (std::any({(std::vector<std::string>)std::vector<std::string>({(std::string)\"a\", (std::string)\"a\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"b\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"c\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"d\", (std::string)\"d\"})})));\n}\n",
      "timestamp": 1666123397,
      "stdout": "",
      "stderr": "/tmp/tmp4d9wggb7.cpp: In function \u2018std::any pack_consecutive_duplicates(std::any)\u2019:\n/tmp/tmp4d9wggb7.cpp:7:15: error: \u2018iterator\u2019 is not a member of \u2018std::any\u2019\n    7 |     std::any::iterator it1 = list1.begin();\n      |               ^~~~~~~~\n/tmp/tmp4d9wggb7.cpp:8:15: error: \u2018iterator\u2019 is not a member of \u2018std::any\u2019\n    8 |     std::any::iterator it2 = list2.begin();\n      |               ^~~~~~~~\n/tmp/tmp4d9wggb7.cpp:9:12: error: \u2018it1\u2019 was not declared in this scope; did you mean \u2018list1\u2019?\n    9 |     while (it1 != list1.end()) {\n      |            ^~~\n      |            list1\n/tmp/tmp4d9wggb7.cpp:9:25: error: \u2018class std::any\u2019 has no member named \u2018end\u2019\n    9 |     while (it1 != list1.end()) {\n      |                         ^~~\n/tmp/tmp4d9wggb7.cpp:10:14: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   10 |         temp.push_back(*it1);\n      |              ^~~~~~~~~\n/tmp/tmp4d9wggb7.cpp:12:13: error: \u2018it2\u2019 was not declared in this scope; did you mean \u2018list2\u2019?\n   12 |             it2 = list2.insert(it2, temp);\n      |             ^~~\n      |             list2\n/tmp/tmp4d9wggb7.cpp:12:25: error: \u2018class std::any\u2019 has no member named \u2018insert\u2019\n   12 |             it2 = list2.insert(it2, temp);\n      |                         ^~~~~~\n/tmp/tmp4d9wggb7.cpp:13:18: error: \u2018class std::any\u2019 has no member named \u2018clear\u2019\n   13 |             temp.clear();\n      |                  ^~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp4d9wggb7.cpp:2:\n/tmp/tmp4d9wggb7.cpp: In function \u2018int main()\u2019:\n/tmp/tmp4d9wggb7.cpp:21:176: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   21 |     assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to pack consecutive duplicates of a given list elements into sublists.\nstd::any pack_consecutive_duplicates(std::any list1) {\n    std::any list2;\n    std::any temp;\n    std::any temp2;\n    std::any temp3;\n    std::any temp4;\n    std::any temp5;\n    std::any temp6;\n    std::any temp7;\n    std::any temp8;\n    std::any temp9;\n    std::any temp10;\n    std::any temp11;\n    std::any temp12;\n    std::any temp13;\n    std::any temp14;\n    std::any temp15;\n    std::any temp16;\n    std::any temp17;\n    std::any temp18;\n    std::any temp19;\n    std::any temp20;\n    std::any temp21;\n    std::any temp22;\n    std::any temp23;\n    std::any temp24;\n    std::any temp25;\n    std::any temp26;\n    std::any temp27;\n    std::any temp28;\n    std::any temp29;\n    std::any temp30;\n    std::any temp31;\n    std::any temp32;\n    std::any temp33;\n    std::any temp34;\n    std::any temp35;\n    std::any temp36;\n    std::any temp37;\n    std::any temp38;\n    std::any temp39;\n    std::any temp40;\n    std::any temp41;\n    std::any temp42;\n    std::any temp43;\n    std::any temp44;\n    std::any temp45;\n    std::any temp46;\n    std::any temp47;\n    std::any temp48;\n    std::any temp49;\n    std::any temp50;\n    std::any temp51;\n    std::any temp52;\n    std::any temp53;\n    std::any temp54;\n    std::any temp55;\n    std::any temp56;\n    std::any temp57;\n    std::any temp58;\n    std::any temp59;\n    std::any temp60;\n    std::any temp61;\n    std::any temp62;\n    std::any temp63;\n\n}\nint main() {\n    auto candidate = pack_consecutive_duplicates;\n    assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n    assert(candidate((std::any({(long)10, (long)10, (long)15, (long)19, (long)18, (long)18, (long)17, (long)26, (long)26, (long)17, (long)18, (long)10}))) == (std::any({(std::vector<long>)std::vector<long>({(long)10, (long)10}), (std::vector<long>)std::vector<long>({(long)15}), (std::vector<long>)std::vector<long>({(long)19}), (std::vector<long>)std::vector<long>({(long)18, (long)18}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)26, (long)26}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)18}), (std::vector<long>)std::vector<long>({(long)10})})));\n    assert(candidate((std::any({(std::string)\"a\", (std::string)\"a\", (std::string)\"b\", (std::string)\"c\", (std::string)\"d\", (std::string)\"d\"}))) == (std::any({(std::vector<std::string>)std::vector<std::string>({(std::string)\"a\", (std::string)\"a\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"b\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"c\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"d\", (std::string)\"d\"})})));\n}\n",
      "timestamp": 1665510437,
      "stdout": "",
      "stderr": "/tmp/tmp996xkpjp.cpp: In function \u2018std::any pack_consecutive_duplicates(std::any)\u2019:\n/tmp/tmp996xkpjp.cpp:70:1: warning: no return statement in function returning non-void [-Wreturn-type]\n   70 | }\n      | ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp996xkpjp.cpp:2:\n/tmp/tmp996xkpjp.cpp: In function \u2018int main()\u2019:\n/tmp/tmp996xkpjp.cpp:73:176: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   73 |     assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n      |                                                                                                                                                                                ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmp996xkpjp.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>,",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to pack consecutive duplicates of a given list elements into sublists.\nstd::any pack_consecutive_duplicates(std::any list1) {\n    std::any list2;\n    std::any temp;\n    std::any::iterator it = list1.begin();\n    while(it != list1.end()) {\n        temp.push_back(*it);\n        it++;\n        if(it == list1.end() || *it != *(it-1)) {\n            list2.push_back(temp);\n            temp.clear();\n        }\n    }\n    return list2;\n}\nint main() {\n    auto candidate = pack_consecutive_duplicates;\n    assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n    assert(candidate((std::any({(long)10, (long)10, (long)15, (long)19, (long)18, (long)18, (long)17, (long)26, (long)26, (long)17, (long)18, (long)10}))) == (std::any({(std::vector<long>)std::vector<long>({(long)10, (long)10}), (std::vector<long>)std::vector<long>({(long)15}), (std::vector<long>)std::vector<long>({(long)19}), (std::vector<long>)std::vector<long>({(long)18, (long)18}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)26, (long)26}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)18}), (std::vector<long>)std::vector<long>({(long)10})})));\n    assert(candidate((std::any({(std::string)\"a\", (std::string)\"a\", (std::string)\"b\", (std::string)\"c\", (std::string)\"d\", (std::string)\"d\"}))) == (std::any({(std::vector<std::string>)std::vector<std::string>({(std::string)\"a\", (std::string)\"a\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"b\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"c\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"d\", (std::string)\"d\"})})));\n}\n",
      "timestamp": 1666123397,
      "stdout": "",
      "stderr": "/tmp/tmpjhkc_7wc.cpp: In function \u2018std::any pack_consecutive_duplicates(std::any)\u2019:\n/tmp/tmpjhkc_7wc.cpp:7:15: error: \u2018iterator\u2019 is not a member of \u2018std::any\u2019\n    7 |     std::any::iterator it = list1.begin();\n      |               ^~~~~~~~\n/tmp/tmpjhkc_7wc.cpp:8:11: error: \u2018it\u2019 was not declared in this scope; did you mean \u2018int\u2019?\n    8 |     while(it != list1.end()) {\n      |           ^~\n      |           int\n/tmp/tmpjhkc_7wc.cpp:8:23: error: \u2018class std::any\u2019 has no member named \u2018end\u2019\n    8 |     while(it != list1.end()) {\n      |                       ^~~\n/tmp/tmpjhkc_7wc.cpp:9:14: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n    9 |         temp.push_back(*it);\n      |              ^~~~~~~~~\n/tmp/tmpjhkc_7wc.cpp:11:24: error: \u2018class std::any\u2019 has no member named \u2018end\u2019\n   11 |         if(it == list1.end() || *it != *(it-1)) {\n      |                        ^~~\n/tmp/tmpjhkc_7wc.cpp:12:19: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   12 |             list2.push_back(temp);\n      |                   ^~~~~~~~~\n/tmp/tmpjhkc_7wc.cpp:13:18: error: \u2018class std::any\u2019 has no member named \u2018clear\u2019\n   13 |             temp.clear();\n      |                  ^~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpjhkc_7wc.cpp:2:\n/tmp/tmpjhkc_7wc.cpp: In function \u2018int main()\u2019:\n/tmp/tmpjhkc_7wc.cpp:20:176: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   20 |     assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to pack consecutive duplicates of a given list elements into sublists.\nstd::any pack_consecutive_duplicates(std::any list1) {\n    std::any list2;\n    std::any temp;\n    std::any temp1;\n    std::any temp2;\n    std::any temp3;\n    std::any temp4;\n    std::any temp5;\n    std::any temp6;\n    std::any temp7;\n    std::any temp8;\n    std::any temp9;\n    std::any temp10;\n    std::any temp11;\n    std::any temp12;\n    std::any temp13;\n    std::any temp14;\n    std::any temp15;\n    std::any temp16;\n    std::any temp17;\n    std::any temp18;\n    std::any temp19;\n    std::any temp20;\n    std::any temp21;\n    std::any temp22;\n    std::any temp23;\n    std::any temp24;\n    std::any temp25;\n    std::any temp26;\n    std::any temp27;\n    std::any temp28;\n    std::any temp29;\n    std::any temp30;\n    std::any temp31;\n    std::any temp32;\n    std::any temp33;\n    std::any temp34;\n    std::any temp35;\n    std::any temp36;\n    std::any temp37;\n    std::any temp38;\n    std::any temp39;\n    std::any temp40;\n    std::any temp41;\n    std::any temp42;\n    std::any temp43;\n    std::any temp44;\n    std::any temp45;\n    std::any temp46;\n    std::any temp47;\n    std::any temp48;\n    std::any temp49;\n    std::any temp50;\n    std::any temp51;\n    std::any temp52;\n    std::any temp53;\n    std::any temp54;\n    std::any temp55;\n    std::any temp56;\n    std::any temp57;\n    std::any temp58;\n    std::any temp59;\n    std::any temp60;\n    std::any temp61;\n    std::any temp62;\n\n}\nint main() {\n    auto candidate = pack_consecutive_duplicates;\n    assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n    assert(candidate((std::any({(long)10, (long)10, (long)15, (long)19, (long)18, (long)18, (long)17, (long)26, (long)26, (long)17, (long)18, (long)10}))) == (std::any({(std::vector<long>)std::vector<long>({(long)10, (long)10}), (std::vector<long>)std::vector<long>({(long)15}), (std::vector<long>)std::vector<long>({(long)19}), (std::vector<long>)std::vector<long>({(long)18, (long)18}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)26, (long)26}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)18}), (std::vector<long>)std::vector<long>({(long)10})})));\n    assert(candidate((std::any({(std::string)\"a\", (std::string)\"a\", (std::string)\"b\", (std::string)\"c\", (std::string)\"d\", (std::string)\"d\"}))) == (std::any({(std::vector<std::string>)std::vector<std::string>({(std::string)\"a\", (std::string)\"a\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"b\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"c\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"d\", (std::string)\"d\"})})));\n}\n",
      "timestamp": 1665510437,
      "stdout": "",
      "stderr": "/tmp/tmp6a5kikx3.cpp: In function \u2018std::any pack_consecutive_duplicates(std::any)\u2019:\n/tmp/tmp6a5kikx3.cpp:70:1: warning: no return statement in function returning non-void [-Wreturn-type]\n   70 | }\n      | ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp6a5kikx3.cpp:2:\n/tmp/tmp6a5kikx3.cpp: In function \u2018int main()\u2019:\n/tmp/tmp6a5kikx3.cpp:73:176: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   73 |     assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n      |                                                                                                                                                                                ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmp6a5kikx3.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>,",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to pack consecutive duplicates of a given list elements into sublists.\nstd::any pack_consecutive_duplicates(std::any list1) {\n    std::any list2;\n    std::any sublist;\n    std::any temp;\n    while(!list1.empty()) {\n        temp = list1.front();\n        while(!list1.empty() && list1.front() == temp) {\n            sublist.push_back(list1.front());\n            list1.pop_front();\n        }\n        list2.push_back(sublist);\n        sublist.clear();\n    }\n    return list2;\n}\nint main() {\n    auto candidate = pack_consecutive_duplicates;\n    assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n    assert(candidate((std::any({(long)10, (long)10, (long)15, (long)19, (long)18, (long)18, (long)17, (long)26, (long)26, (long)17, (long)18, (long)10}))) == (std::any({(std::vector<long>)std::vector<long>({(long)10, (long)10}), (std::vector<long>)std::vector<long>({(long)15}), (std::vector<long>)std::vector<long>({(long)19}), (std::vector<long>)std::vector<long>({(long)18, (long)18}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)26, (long)26}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)18}), (std::vector<long>)std::vector<long>({(long)10})})));\n    assert(candidate((std::any({(std::string)\"a\", (std::string)\"a\", (std::string)\"b\", (std::string)\"c\", (std::string)\"d\", (std::string)\"d\"}))) == (std::any({(std::vector<std::string>)std::vector<std::string>({(std::string)\"a\", (std::string)\"a\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"b\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"c\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"d\", (std::string)\"d\"})})));\n}\n",
      "timestamp": 1666123397,
      "stdout": "",
      "stderr": "/tmp/tmpejm3m4vl.cpp: In function \u2018std::any pack_consecutive_duplicates(std::any)\u2019:\n/tmp/tmpejm3m4vl.cpp:8:18: error: \u2018class std::any\u2019 has no member named \u2018empty\u2019\n    8 |     while(!list1.empty()) {\n      |                  ^~~~~\n/tmp/tmpejm3m4vl.cpp:9:22: error: \u2018class std::any\u2019 has no member named \u2018front\u2019\n    9 |         temp = list1.front();\n      |                      ^~~~~\n/tmp/tmpejm3m4vl.cpp:10:22: error: \u2018class std::any\u2019 has no member named \u2018empty\u2019\n   10 |         while(!list1.empty() && list1.front() == temp) {\n      |                      ^~~~~\n/tmp/tmpejm3m4vl.cpp:10:39: error: \u2018class std::any\u2019 has no member named \u2018front\u2019\n   10 |         while(!list1.empty() && list1.front() == temp) {\n      |                                       ^~~~~\n/tmp/tmpejm3m4vl.cpp:11:21: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   11 |             sublist.push_back(list1.front());\n      |                     ^~~~~~~~~\n/tmp/tmpejm3m4vl.cpp:11:37: error: \u2018class std::any\u2019 has no member named \u2018front\u2019\n   11 |             sublist.push_back(list1.front());\n      |                                     ^~~~~\n/tmp/tmpejm3m4vl.cpp:12:19: error: \u2018class std::any\u2019 has no member named \u2018pop_front\u2019\n   12 |             list1.pop_front();\n      |                   ^~~~~~~~~\n/tmp/tmpejm3m4vl.cpp:14:15: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   14 |         list2.push_back(sublist);\n      |               ^~~~~~~~~\n/tmp/tmpejm3m4vl.cpp:15:17: error: \u2018class std::any\u2019 has no member named \u2018clear\u2019\n   15 |         sublist.clear();\n      |                 ^~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpejm3m4vl.cpp:2:\n/tmp/tmpejm3m4vl.cpp: In function \u2018int main()\u2019:\n/tmp/tmpejm3m4vl.cpp:21:176: error: no matching function for call to \u2018std::any::any(<brace-encl",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to pack consecutive duplicates of a given list elements into sublists.\nstd::any pack_consecutive_duplicates(std::any list1) {\n    std::any list2;\n    std::any temp;\n    std::any temp1;\n    std::any temp2;\n    std::any temp3;\n    std::any temp4;\n    std::any temp5;\n    std::any temp6;\n    std::any temp7;\n    std::any temp8;\n    std::any temp9;\n    std::any temp10;\n    std::any temp11;\n    std::any temp12;\n    std::any temp13;\n    std::any temp14;\n    std::any temp15;\n    std::any temp16;\n    std::any temp17;\n    std::any temp18;\n    std::any temp19;\n    std::any temp20;\n    std::any temp21;\n    std::any temp22;\n    std::any temp23;\n    std::any temp24;\n    std::any temp25;\n    std::any temp26;\n    std::any temp27;\n    std::any temp28;\n    std::any temp29;\n    std::any temp30;\n    std::any temp31;\n    std::any temp32;\n    std::any temp33;\n    std::any temp34;\n    std::any temp35;\n    std::any temp36;\n    std::any temp37;\n    std::any temp38;\n    std::any temp39;\n    std::any temp40;\n    std::any temp41;\n    std::any temp42;\n    std::any temp43;\n    std::any temp44;\n    std::any temp45;\n    std::any temp46;\n    std::any temp47;\n    std::any temp48;\n    std::any temp49;\n    std::any temp50;\n    std::any temp51;\n    std::any temp52;\n    std::any temp53;\n    std::any temp54;\n    std::any temp55;\n    std::any temp56;\n    std::any temp57;\n    std::any temp58;\n    std::any temp59;\n    std::any temp60;\n    std::any temp61;\n    std::any temp62;\n\n}\nint main() {\n    auto candidate = pack_consecutive_duplicates;\n    assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n    assert(candidate((std::any({(long)10, (long)10, (long)15, (long)19, (long)18, (long)18, (long)17, (long)26, (long)26, (long)17, (long)18, (long)10}))) == (std::any({(std::vector<long>)std::vector<long>({(long)10, (long)10}), (std::vector<long>)std::vector<long>({(long)15}), (std::vector<long>)std::vector<long>({(long)19}), (std::vector<long>)std::vector<long>({(long)18, (long)18}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)26, (long)26}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)18}), (std::vector<long>)std::vector<long>({(long)10})})));\n    assert(candidate((std::any({(std::string)\"a\", (std::string)\"a\", (std::string)\"b\", (std::string)\"c\", (std::string)\"d\", (std::string)\"d\"}))) == (std::any({(std::vector<std::string>)std::vector<std::string>({(std::string)\"a\", (std::string)\"a\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"b\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"c\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"d\", (std::string)\"d\"})})));\n}\n",
      "timestamp": 1665510437,
      "stdout": "",
      "stderr": "/tmp/tmp6a5kikx3.cpp: In function \u2018std::any pack_consecutive_duplicates(std::any)\u2019:\n/tmp/tmp6a5kikx3.cpp:70:1: warning: no return statement in function returning non-void [-Wreturn-type]\n   70 | }\n      | ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp6a5kikx3.cpp:2:\n/tmp/tmp6a5kikx3.cpp: In function \u2018int main()\u2019:\n/tmp/tmp6a5kikx3.cpp:73:176: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   73 |     assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n      |                                                                                                                                                                                ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmp6a5kikx3.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>,",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to pack consecutive duplicates of a given list elements into sublists.\nstd::any pack_consecutive_duplicates(std::any list1) {\n    std::any result;\n    std::any temp;\n    int i = 0;\n    while (i < list1.size()) {\n        int j = i;\n        while (j < list1.size() && list1[i] == list1[j]) {\n            j++;\n        }\n        temp.push_back(list1[i]);\n        result.push_back(temp);\n        temp.clear();\n        i = j;\n    }\n    return result;\n}\nint main() {\n    auto candidate = pack_consecutive_duplicates;\n    assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n    assert(candidate((std::any({(long)10, (long)10, (long)15, (long)19, (long)18, (long)18, (long)17, (long)26, (long)26, (long)17, (long)18, (long)10}))) == (std::any({(std::vector<long>)std::vector<long>({(long)10, (long)10}), (std::vector<long>)std::vector<long>({(long)15}), (std::vector<long>)std::vector<long>({(long)19}), (std::vector<long>)std::vector<long>({(long)18, (long)18}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)26, (long)26}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)18}), (std::vector<long>)std::vector<long>({(long)10})})));\n    assert(candidate((std::any({(std::string)\"a\", (std::string)\"a\", (std::string)\"b\", (std::string)\"c\", (std::string)\"d\", (std::string)\"d\"}))) == (std::any({(std::vector<std::string>)std::vector<std::string>({(std::string)\"a\", (std::string)\"a\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"b\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"c\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"d\", (std::string)\"d\"})})));\n}\n",
      "timestamp": 1666123397,
      "stdout": "",
      "stderr": "/tmp/tmpf1qtf9vw.cpp: In function \u2018std::any pack_consecutive_duplicates(std::any)\u2019:\n/tmp/tmpf1qtf9vw.cpp:8:22: error: \u2018class std::any\u2019 has no member named \u2018size\u2019\n    8 |     while (i < list1.size()) {\n      |                      ^~~~\n/tmp/tmpf1qtf9vw.cpp:10:26: error: \u2018class std::any\u2019 has no member named \u2018size\u2019\n   10 |         while (j < list1.size() && list1[i] == list1[j]) {\n      |                          ^~~~\n/tmp/tmpf1qtf9vw.cpp:10:41: error: no match for \u2018operator[]\u2019 (operand types are \u2018std::any\u2019 and \u2018int\u2019)\n   10 |         while (j < list1.size() && list1[i] == list1[j]) {\n      |                                         ^\n/tmp/tmpf1qtf9vw.cpp:10:53: error: no match for \u2018operator[]\u2019 (operand types are \u2018std::any\u2019 and \u2018int\u2019)\n   10 |         while (j < list1.size() && list1[i] == list1[j]) {\n      |                                                     ^\n/tmp/tmpf1qtf9vw.cpp:13:14: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   13 |         temp.push_back(list1[i]);\n      |              ^~~~~~~~~\n/tmp/tmpf1qtf9vw.cpp:13:29: error: no match for \u2018operator[]\u2019 (operand types are \u2018std::any\u2019 and \u2018int\u2019)\n   13 |         temp.push_back(list1[i]);\n      |                             ^\n/tmp/tmpf1qtf9vw.cpp:14:16: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   14 |         result.push_back(temp);\n      |                ^~~~~~~~~\n/tmp/tmpf1qtf9vw.cpp:15:14: error: \u2018class std::any\u2019 has no member named \u2018clear\u2019\n   15 |         temp.clear();\n      |              ^~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpf1qtf9vw.cpp:2:\n/tmp/tmpf1qtf9vw.cpp: In function \u2018int main()\u2019:\n/tmp/tmpf1qtf9vw.cpp:22:176: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   22 |     assert(candidate((std::any({(long)",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to pack consecutive duplicates of a given list elements into sublists.\nstd::any pack_consecutive_duplicates(std::any list1) {\n    std::any list2;\n    std::any temp;\n    std::any temp2;\n    std::any temp3;\n    int i = 0;\n    while (i < list1.size()) {\n        temp = list1[i];\n        temp2 = std::any();\n        while (i < list1.size() && temp == list1[i]) {\n            temp2.push_back(list1[i]);\n            i++;\n        }\n        temp3.push_back(temp2);\n    }\n    return temp3;\n}\nint main() {\n    auto candidate = pack_consecutive_duplicates;\n    assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n    assert(candidate((std::any({(long)10, (long)10, (long)15, (long)19, (long)18, (long)18, (long)17, (long)26, (long)26, (long)17, (long)18, (long)10}))) == (std::any({(std::vector<long>)std::vector<long>({(long)10, (long)10}), (std::vector<long>)std::vector<long>({(long)15}), (std::vector<long>)std::vector<long>({(long)19}), (std::vector<long>)std::vector<long>({(long)18, (long)18}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)26, (long)26}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)18}), (std::vector<long>)std::vector<long>({(long)10})})));\n    assert(candidate((std::any({(std::string)\"a\", (std::string)\"a\", (std::string)\"b\", (std::string)\"c\", (std::string)\"d\", (std::string)\"d\"}))) == (std::any({(std::vector<std::string>)std::vector<std::string>({(std::string)\"a\", (std::string)\"a\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"b\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"c\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"d\", (std::string)\"d\"})})));\n}\n",
      "timestamp": 1666123397,
      "stdout": "",
      "stderr": "/tmp/tmpnt8pao7x.cpp: In function \u2018std::any pack_consecutive_duplicates(std::any)\u2019:\n/tmp/tmpnt8pao7x.cpp:10:22: error: \u2018class std::any\u2019 has no member named \u2018size\u2019\n   10 |     while (i < list1.size()) {\n      |                      ^~~~\n/tmp/tmpnt8pao7x.cpp:11:21: error: no match for \u2018operator[]\u2019 (operand types are \u2018std::any\u2019 and \u2018int\u2019)\n   11 |         temp = list1[i];\n      |                     ^\n/tmp/tmpnt8pao7x.cpp:13:26: error: \u2018class std::any\u2019 has no member named \u2018size\u2019\n   13 |         while (i < list1.size() && temp == list1[i]) {\n      |                          ^~~~\n/tmp/tmpnt8pao7x.cpp:13:49: error: no match for \u2018operator[]\u2019 (operand types are \u2018std::any\u2019 and \u2018int\u2019)\n   13 |         while (i < list1.size() && temp == list1[i]) {\n      |                                                 ^\n/tmp/tmpnt8pao7x.cpp:14:19: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   14 |             temp2.push_back(list1[i]);\n      |                   ^~~~~~~~~\n/tmp/tmpnt8pao7x.cpp:14:34: error: no match for \u2018operator[]\u2019 (operand types are \u2018std::any\u2019 and \u2018int\u2019)\n   14 |             temp2.push_back(list1[i]);\n      |                                  ^\n/tmp/tmpnt8pao7x.cpp:17:15: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   17 |         temp3.push_back(temp2);\n      |               ^~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpnt8pao7x.cpp:2:\n/tmp/tmpnt8pao7x.cpp: In function \u2018int main()\u2019:\n/tmp/tmpnt8pao7x.cpp:23:176: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   23 |     assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to pack consecutive duplicates of a given list elements into sublists.\nstd::any pack_consecutive_duplicates(std::any list1) {\n    std::any list2;\n    std::any temp;\n    std::any::iterator it;\n    for(it=list1.begin();it!=list1.end();it++) {\n        if(temp.empty() || temp.back()!=*it) {\n            if(!temp.empty()) {\n                list2.push_back(temp);\n            }\n            temp.clear();\n        }\n        temp.push_back(*it);\n    }\n    list2.push_back(temp);\n    return list2;\n}\nint main() {\n    auto candidate = pack_consecutive_duplicates;\n    assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n    assert(candidate((std::any({(long)10, (long)10, (long)15, (long)19, (long)18, (long)18, (long)17, (long)26, (long)26, (long)17, (long)18, (long)10}))) == (std::any({(std::vector<long>)std::vector<long>({(long)10, (long)10}), (std::vector<long>)std::vector<long>({(long)15}), (std::vector<long>)std::vector<long>({(long)19}), (std::vector<long>)std::vector<long>({(long)18, (long)18}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)26, (long)26}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)18}), (std::vector<long>)std::vector<long>({(long)10})})));\n    assert(candidate((std::any({(std::string)\"a\", (std::string)\"a\", (std::string)\"b\", (std::string)\"c\", (std::string)\"d\", (std::string)\"d\"}))) == (std::any({(std::vector<std::string>)std::vector<std::string>({(std::string)\"a\", (std::string)\"a\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"b\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"c\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"d\", (std::string)\"d\"})})));\n}\n",
      "timestamp": 1666123397,
      "stdout": "",
      "stderr": "/tmp/tmpipyaglnx.cpp: In function \u2018std::any pack_consecutive_duplicates(std::any)\u2019:\n/tmp/tmpipyaglnx.cpp:7:15: error: \u2018iterator\u2019 is not a member of \u2018std::any\u2019\n    7 |     std::any::iterator it;\n      |               ^~~~~~~~\n/tmp/tmpipyaglnx.cpp:8:9: error: \u2018it\u2019 was not declared in this scope; did you mean \u2018int\u2019?\n    8 |     for(it=list1.begin();it!=list1.end();it++) {\n      |         ^~\n      |         int\n/tmp/tmpipyaglnx.cpp:8:18: error: \u2018class std::any\u2019 has no member named \u2018begin\u2019\n    8 |     for(it=list1.begin();it!=list1.end();it++) {\n      |                  ^~~~~\n/tmp/tmpipyaglnx.cpp:8:36: error: \u2018class std::any\u2019 has no member named \u2018end\u2019\n    8 |     for(it=list1.begin();it!=list1.end();it++) {\n      |                                    ^~~\n/tmp/tmpipyaglnx.cpp:9:17: error: \u2018class std::any\u2019 has no member named \u2018empty\u2019\n    9 |         if(temp.empty() || temp.back()!=*it) {\n      |                 ^~~~~\n/tmp/tmpipyaglnx.cpp:9:33: error: \u2018class std::any\u2019 has no member named \u2018back\u2019\n    9 |         if(temp.empty() || temp.back()!=*it) {\n      |                                 ^~~~\n/tmp/tmpipyaglnx.cpp:10:22: error: \u2018class std::any\u2019 has no member named \u2018empty\u2019\n   10 |             if(!temp.empty()) {\n      |                      ^~~~~\n/tmp/tmpipyaglnx.cpp:11:23: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   11 |                 list2.push_back(temp);\n      |                       ^~~~~~~~~\n/tmp/tmpipyaglnx.cpp:13:18: error: \u2018class std::any\u2019 has no member named \u2018clear\u2019\n   13 |             temp.clear();\n      |                  ^~~~~\n/tmp/tmpipyaglnx.cpp:15:14: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   15 |         temp.push_back(*it);\n      |              ^~~~~~~~~\n/tmp/tmpipyaglnx.cpp:17:11: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   17 |     list2.push_back(temp);\n      |           ^~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to pack consecutive duplicates of a given list elements into sublists.\nstd::any pack_consecutive_duplicates(std::any list1) {\n    std::any list2;\n    std::any temp;\n    std::any::iterator it;\n    std::any::iterator it2;\n    for (it = list1.begin(); it != list1.end(); it++) {\n        if (it == list1.begin()) {\n            temp.push_back(*it);\n        } else {\n            if (*it == *(it - 1)) {\n                temp.push_back(*it);\n            } else {\n                list2.push_back(temp);\n                temp.clear();\n                temp.push_back(*it);\n            }\n        }\n    }\n    list2.push_back(temp);\n    return list2;\n}\nint main() {\n    auto candidate = pack_consecutive_duplicates;\n    assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n    assert(candidate((std::any({(long)10, (long)10, (long)15, (long)19, (long)18, (long)18, (long)17, (long)26, (long)26, (long)17, (long)18, (long)10}))) == (std::any({(std::vector<long>)std::vector<long>({(long)10, (long)10}), (std::vector<long>)std::vector<long>({(long)15}), (std::vector<long>)std::vector<long>({(long)19}), (std::vector<long>)std::vector<long>({(long)18, (long)18}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)26, (long)26}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)18}), (std::vector<long>)std::vector<long>({(long)10})})));\n    assert(candidate((std::any({(std::string)\"a\", (std::string)\"a\", (std::string)\"b\", (std::string)\"c\", (std::string)\"d\", (std::string)\"d\"}))) == (std::any({(std::vector<std::string>)std::vector<std::string>({(std::string)\"a\", (std::string)\"a\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"b\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"c\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"d\", (std::string)\"d\"})})));\n}\n",
      "timestamp": 1666123397,
      "stdout": "",
      "stderr": "/tmp/tmp2u4trbqj.cpp: In function \u2018std::any pack_consecutive_duplicates(std::any)\u2019:\n/tmp/tmp2u4trbqj.cpp:7:15: error: \u2018iterator\u2019 is not a member of \u2018std::any\u2019\n    7 |     std::any::iterator it;\n      |               ^~~~~~~~\n/tmp/tmp2u4trbqj.cpp:8:15: error: \u2018iterator\u2019 is not a member of \u2018std::any\u2019\n    8 |     std::any::iterator it2;\n      |               ^~~~~~~~\n/tmp/tmp2u4trbqj.cpp:9:10: error: \u2018it\u2019 was not declared in this scope; did you mean \u2018int\u2019?\n    9 |     for (it = list1.begin(); it != list1.end(); it++) {\n      |          ^~\n      |          int\n/tmp/tmp2u4trbqj.cpp:9:21: error: \u2018class std::any\u2019 has no member named \u2018begin\u2019\n    9 |     for (it = list1.begin(); it != list1.end(); it++) {\n      |                     ^~~~~\n/tmp/tmp2u4trbqj.cpp:9:42: error: \u2018class std::any\u2019 has no member named \u2018end\u2019\n    9 |     for (it = list1.begin(); it != list1.end(); it++) {\n      |                                          ^~~\n/tmp/tmp2u4trbqj.cpp:10:25: error: \u2018class std::any\u2019 has no member named \u2018begin\u2019\n   10 |         if (it == list1.begin()) {\n      |                         ^~~~~\n/tmp/tmp2u4trbqj.cpp:11:18: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   11 |             temp.push_back(*it);\n      |                  ^~~~~~~~~\n/tmp/tmp2u4trbqj.cpp:14:22: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   14 |                 temp.push_back(*it);\n      |                      ^~~~~~~~~\n/tmp/tmp2u4trbqj.cpp:16:23: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   16 |                 list2.push_back(temp);\n      |                       ^~~~~~~~~\n/tmp/tmp2u4trbqj.cpp:17:22: error: \u2018class std::any\u2019 has no member named \u2018clear\u2019\n   17 |                 temp.clear();\n      |                      ^~~~~\n/tmp/tmp2u4trbqj.cpp:18:22: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   18 |                 temp.push_back(*it);\n      |                      ^~~~~~~~~\n/tmp/tmp2u4trbqj.cpp:22:11: error: \u2018cla",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to pack consecutive duplicates of a given list elements into sublists.\nstd::any pack_consecutive_duplicates(std::any list1) {\n  std::any list2;\n  std::any sublist;\n  std::any temp;\n  std::any temp1;\n  std::any temp2;\n  std::any temp3;\n  std::any temp4;\n  std::any temp5;\n  std::any temp6;\n  std::any temp7;\n  std::any temp8;\n  std::any temp9;\n  std::any temp10;\n  std::any temp11;\n  std::any temp12;\n  std::any temp13;\n  std::any temp14;\n  std::any temp15;\n  std::any temp16;\n  std::any temp17;\n  std::any temp18;\n  std::any temp19;\n  std::any temp20;\n  std::any temp21;\n  std::any temp22;\n  std::any temp23;\n  std::any temp24;\n  std::any temp25;\n  std::any temp26;\n  std::any temp27;\n  std::any temp28;\n  std::any temp29;\n  std::any temp30;\n  std::any temp31;\n  std::any temp32;\n  std::any temp33;\n  std::any temp34;\n  std::any temp35;\n  std::any temp36;\n  std::any temp37;\n  std::any temp38;\n  std::any temp39;\n  std::any temp40;\n  std::any temp41;\n  std::any temp42;\n  std::any temp43;\n  std::any temp44;\n  std::any temp45;\n  std::any temp46;\n  std::any temp47;\n  std::any temp48;\n  std::any temp49;\n  std::any temp50;\n  std::any temp51;\n  std::any temp52;\n  std::any temp53;\n  std::any temp54;\n  std::any temp55;\n  std::any temp56;\n  std::any temp57;\n  std::any temp58;\n  std::any temp59;\n  std::any temp60;\n  std::any temp61;\n\n}\nint main() {\n    auto candidate = pack_consecutive_duplicates;\n    assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n    assert(candidate((std::any({(long)10, (long)10, (long)15, (long)19, (long)18, (long)18, (long)17, (long)26, (long)26, (long)17, (long)18, (long)10}))) == (std::any({(std::vector<long>)std::vector<long>({(long)10, (long)10}), (std::vector<long>)std::vector<long>({(long)15}), (std::vector<long>)std::vector<long>({(long)19}), (std::vector<long>)std::vector<long>({(long)18, (long)18}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)26, (long)26}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)18}), (std::vector<long>)std::vector<long>({(long)10})})));\n    assert(candidate((std::any({(std::string)\"a\", (std::string)\"a\", (std::string)\"b\", (std::string)\"c\", (std::string)\"d\", (std::string)\"d\"}))) == (std::any({(std::vector<std::string>)std::vector<std::string>({(std::string)\"a\", (std::string)\"a\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"b\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"c\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"d\", (std::string)\"d\"})})));\n}\n",
      "timestamp": 1666123396,
      "stdout": "",
      "stderr": "/tmp/tmpzdf_h_1q.cpp: In function \u2018std::any pack_consecutive_duplicates(std::any)\u2019:\n/tmp/tmpzdf_h_1q.cpp:70:1: warning: no return statement in function returning non-void [-Wreturn-type]\n   70 | }\n      | ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpzdf_h_1q.cpp:2:\n/tmp/tmpzdf_h_1q.cpp: In function \u2018int main()\u2019:\n/tmp/tmpzdf_h_1q.cpp:73:176: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   73 |     assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n      |                                                                                                                                                                                ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpzdf_h_1q.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>,",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to pack consecutive duplicates of a given list elements into sublists.\nstd::any pack_consecutive_duplicates(std::any list1) {\n  std::any list2;\n  std::any list3;\n  std::any list4;\n  std::any list5;\n  std::any list6;\n  std::any list7;\n  std::any list8;\n  std::any list9;\n  std::any list10;\n  std::any list11;\n  std::any list12;\n  std::any list13;\n  std::any list14;\n  std::any list15;\n  std::any list16;\n  std::any list17;\n  std::any list18;\n  std::any list19;\n  std::any list20;\n  std::any list21;\n  std::any list22;\n  std::any list23;\n  std::any list24;\n  std::any list25;\n  std::any list26;\n  std::any list27;\n  std::any list28;\n  std::any list29;\n  std::any list30;\n  std::any list31;\n  std::any list32;\n  std::any list33;\n  std::any list34;\n  std::any list35;\n  std::any list36;\n  std::any list37;\n  std::any list38;\n  std::any list39;\n  std::any list40;\n  std::any list41;\n  std::any list42;\n  std::any list43;\n  std::any list44;\n  std::any list45;\n  std::any list46;\n  std::any list47;\n  std::any list48;\n  std::any list49;\n  std::any list50;\n  std::any list51;\n  std::any list52;\n  std::any list53;\n  std::any list54;\n  std::any list55;\n  std::any list56;\n  std::any list57;\n  std::any list58;\n  std::any list59;\n  std::any list60;\n  std::any list61;\n  std::any list62;\n  std::any list63;\n  std::any list64;\n  std::any list65;\n}\nint main() {\n    auto candidate = pack_consecutive_duplicates;\n    assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n    assert(candidate((std::any({(long)10, (long)10, (long)15, (long)19, (long)18, (long)18, (long)17, (long)26, (long)26, (long)17, (long)18, (long)10}))) == (std::any({(std::vector<long>)std::vector<long>({(long)10, (long)10}), (std::vector<long>)std::vector<long>({(long)15}), (std::vector<long>)std::vector<long>({(long)19}), (std::vector<long>)std::vector<long>({(long)18, (long)18}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)26, (long)26}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)18}), (std::vector<long>)std::vector<long>({(long)10})})));\n    assert(candidate((std::any({(std::string)\"a\", (std::string)\"a\", (std::string)\"b\", (std::string)\"c\", (std::string)\"d\", (std::string)\"d\"}))) == (std::any({(std::vector<std::string>)std::vector<std::string>({(std::string)\"a\", (std::string)\"a\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"b\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"c\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"d\", (std::string)\"d\"})})));\n}\n",
      "timestamp": 1666123393,
      "stdout": "",
      "stderr": "/tmp/tmpc6gd7f4w.cpp: In function \u2018std::any pack_consecutive_duplicates(std::any)\u2019:\n/tmp/tmpc6gd7f4w.cpp:69:1: warning: no return statement in function returning non-void [-Wreturn-type]\n   69 | }\n      | ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpc6gd7f4w.cpp:2:\n/tmp/tmpc6gd7f4w.cpp: In function \u2018int main()\u2019:\n/tmp/tmpc6gd7f4w.cpp:72:176: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   72 |     assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n      |                                                                                                                                                                                ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpc6gd7f4w.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>,",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to pack consecutive duplicates of a given list elements into sublists.\nstd::any pack_consecutive_duplicates(std::any list1) {\n  std::any list2;\n  std::any list3;\n  std::any list4;\n  std::any list5;\n  std::any list6;\n  std::any list7;\n  std::any list8;\n  std::any list9;\n  std::any list10;\n  std::any list11;\n  std::any list12;\n  std::any list13;\n  std::any list14;\n  std::any list15;\n  std::any list16;\n  std::any list17;\n  std::any list18;\n  std::any list19;\n  std::any list20;\n  std::any list21;\n  std::any list22;\n  std::any list23;\n  std::any list24;\n  std::any list25;\n  std::any list26;\n  std::any list27;\n  std::any list28;\n  std::any list29;\n  std::any list30;\n  std::any list31;\n  std::any list32;\n  std::any list33;\n  std::any list34;\n  std::any list35;\n  std::any list36;\n  std::any list37;\n  std::any list38;\n  std::any list39;\n  std::any list40;\n  std::any list41;\n  std::any list42;\n  std::any list43;\n  std::any list44;\n  std::any list45;\n  std::any list46;\n  std::any list47;\n  std::any list48;\n  std::any list49;\n  std::any list50;\n  std::any list51;\n  std::any list52;\n  std::any list53;\n  std::any list54;\n  std::any list55;\n  std::any list56;\n  std::any list57;\n  std::any list58;\n  std::any list59;\n  std::any list60;\n  std::any list61;\n  std::any list62;\n  std::any list63;\n  std::any list64;\n  std::any list65;\n}\nint main() {\n    auto candidate = pack_consecutive_duplicates;\n    assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n    assert(candidate((std::any({(long)10, (long)10, (long)15, (long)19, (long)18, (long)18, (long)17, (long)26, (long)26, (long)17, (long)18, (long)10}))) == (std::any({(std::vector<long>)std::vector<long>({(long)10, (long)10}), (std::vector<long>)std::vector<long>({(long)15}), (std::vector<long>)std::vector<long>({(long)19}), (std::vector<long>)std::vector<long>({(long)18, (long)18}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)26, (long)26}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)18}), (std::vector<long>)std::vector<long>({(long)10})})));\n    assert(candidate((std::any({(std::string)\"a\", (std::string)\"a\", (std::string)\"b\", (std::string)\"c\", (std::string)\"d\", (std::string)\"d\"}))) == (std::any({(std::vector<std::string>)std::vector<std::string>({(std::string)\"a\", (std::string)\"a\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"b\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"c\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"d\", (std::string)\"d\"})})));\n}\n",
      "timestamp": 1666123393,
      "stdout": "",
      "stderr": "/tmp/tmpc6gd7f4w.cpp: In function \u2018std::any pack_consecutive_duplicates(std::any)\u2019:\n/tmp/tmpc6gd7f4w.cpp:69:1: warning: no return statement in function returning non-void [-Wreturn-type]\n   69 | }\n      | ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpc6gd7f4w.cpp:2:\n/tmp/tmpc6gd7f4w.cpp: In function \u2018int main()\u2019:\n/tmp/tmpc6gd7f4w.cpp:72:176: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   72 |     assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n      |                                                                                                                                                                                ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpc6gd7f4w.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>,",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to pack consecutive duplicates of a given list elements into sublists.\nstd::any pack_consecutive_duplicates(std::any list1) {\n    std::any list2;\n    std::any temp;\n    std::any::iterator it;\n    std::any::iterator it2;\n    for (it = list1.begin(); it != list1.end(); it++) {\n        if (temp.empty()) {\n            temp.push_back(*it);\n        } else {\n            if (temp.back() == *it) {\n                temp.push_back(*it);\n            } else {\n                list2.push_back(temp);\n                temp.clear();\n                temp.push_back(*it);\n            }\n        }\n    }\n    list2.push_back(temp);\n    return list2;\n}\nint main() {\n    auto candidate = pack_consecutive_duplicates;\n    assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n    assert(candidate((std::any({(long)10, (long)10, (long)15, (long)19, (long)18, (long)18, (long)17, (long)26, (long)26, (long)17, (long)18, (long)10}))) == (std::any({(std::vector<long>)std::vector<long>({(long)10, (long)10}), (std::vector<long>)std::vector<long>({(long)15}), (std::vector<long>)std::vector<long>({(long)19}), (std::vector<long>)std::vector<long>({(long)18, (long)18}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)26, (long)26}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)18}), (std::vector<long>)std::vector<long>({(long)10})})));\n    assert(candidate((std::any({(std::string)\"a\", (std::string)\"a\", (std::string)\"b\", (std::string)\"c\", (std::string)\"d\", (std::string)\"d\"}))) == (std::any({(std::vector<std::string>)std::vector<std::string>({(std::string)\"a\", (std::string)\"a\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"b\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"c\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"d\", (std::string)\"d\"})})));\n}\n",
      "timestamp": 1666123397,
      "stdout": "",
      "stderr": "/tmp/tmpd1p52ozo.cpp: In function \u2018std::any pack_consecutive_duplicates(std::any)\u2019:\n/tmp/tmpd1p52ozo.cpp:7:15: error: \u2018iterator\u2019 is not a member of \u2018std::any\u2019\n    7 |     std::any::iterator it;\n      |               ^~~~~~~~\n/tmp/tmpd1p52ozo.cpp:8:15: error: \u2018iterator\u2019 is not a member of \u2018std::any\u2019\n    8 |     std::any::iterator it2;\n      |               ^~~~~~~~\n/tmp/tmpd1p52ozo.cpp:9:10: error: \u2018it\u2019 was not declared in this scope; did you mean \u2018int\u2019?\n    9 |     for (it = list1.begin(); it != list1.end(); it++) {\n      |          ^~\n      |          int\n/tmp/tmpd1p52ozo.cpp:9:21: error: \u2018class std::any\u2019 has no member named \u2018begin\u2019\n    9 |     for (it = list1.begin(); it != list1.end(); it++) {\n      |                     ^~~~~\n/tmp/tmpd1p52ozo.cpp:9:42: error: \u2018class std::any\u2019 has no member named \u2018end\u2019\n    9 |     for (it = list1.begin(); it != list1.end(); it++) {\n      |                                          ^~~\n/tmp/tmpd1p52ozo.cpp:10:18: error: \u2018class std::any\u2019 has no member named \u2018empty\u2019\n   10 |         if (temp.empty()) {\n      |                  ^~~~~\n/tmp/tmpd1p52ozo.cpp:11:18: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   11 |             temp.push_back(*it);\n      |                  ^~~~~~~~~\n/tmp/tmpd1p52ozo.cpp:13:22: error: \u2018class std::any\u2019 has no member named \u2018back\u2019\n   13 |             if (temp.back() == *it) {\n      |                      ^~~~\n/tmp/tmpd1p52ozo.cpp:14:22: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   14 |                 temp.push_back(*it);\n      |                      ^~~~~~~~~\n/tmp/tmpd1p52ozo.cpp:16:23: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   16 |                 list2.push_back(temp);\n      |                       ^~~~~~~~~\n/tmp/tmpd1p52ozo.cpp:17:22: error: \u2018class std::any\u2019 has no member named \u2018clear\u2019\n   17 |                 temp.clear();\n      |                      ^~~~~\n/tmp/tmpd1p52ozo.cpp:18:22: error: \u2018class std::any\u2019 has no m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to pack consecutive duplicates of a given list elements into sublists.\nstd::any pack_consecutive_duplicates(std::any list1) {\n    std::any list2;\n    std::any temp;\n    std::any::iterator it;\n    std::any::iterator it1;\n    for(it=list1.begin();it!=list1.end();it++)\n    {\n        if(temp.empty())\n        {\n            temp.push_back(*it);\n        }\n        else\n        {\n            if(temp.back()==*it)\n            {\n                temp.push_back(*it);\n            }\n            else\n            {\n                list2.push_back(temp);\n                temp.clear();\n                temp.push_back(*it);\n            }\n        }\n    }\n    list2.push_back(temp);\n    return list2;\n}\nint main() {\n    auto candidate = pack_consecutive_duplicates;\n    assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n    assert(candidate((std::any({(long)10, (long)10, (long)15, (long)19, (long)18, (long)18, (long)17, (long)26, (long)26, (long)17, (long)18, (long)10}))) == (std::any({(std::vector<long>)std::vector<long>({(long)10, (long)10}), (std::vector<long>)std::vector<long>({(long)15}), (std::vector<long>)std::vector<long>({(long)19}), (std::vector<long>)std::vector<long>({(long)18, (long)18}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)26, (long)26}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)18}), (std::vector<long>)std::vector<long>({(long)10})})));\n    assert(candidate((std::any({(std::string)\"a\", (std::string)\"a\", (std::string)\"b\", (std::string)\"c\", (std::string)\"d\", (std::string)\"d\"}))) == (std::any({(std::vector<std::string>)std::vector<std::string>({(std::string)\"a\", (std::string)\"a\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"b\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"c\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"d\", (std::string)\"d\"})})));\n}\n",
      "timestamp": 1666123397,
      "stdout": "",
      "stderr": "/tmp/tmpqczpt48i.cpp: In function \u2018std::any pack_consecutive_duplicates(std::any)\u2019:\n/tmp/tmpqczpt48i.cpp:7:15: error: \u2018iterator\u2019 is not a member of \u2018std::any\u2019\n    7 |     std::any::iterator it;\n      |               ^~~~~~~~\n/tmp/tmpqczpt48i.cpp:8:15: error: \u2018iterator\u2019 is not a member of \u2018std::any\u2019\n    8 |     std::any::iterator it1;\n      |               ^~~~~~~~\n/tmp/tmpqczpt48i.cpp:9:9: error: \u2018it\u2019 was not declared in this scope; did you mean \u2018int\u2019?\n    9 |     for(it=list1.begin();it!=list1.end();it++)\n      |         ^~\n      |         int\n/tmp/tmpqczpt48i.cpp:9:18: error: \u2018class std::any\u2019 has no member named \u2018begin\u2019\n    9 |     for(it=list1.begin();it!=list1.end();it++)\n      |                  ^~~~~\n/tmp/tmpqczpt48i.cpp:9:36: error: \u2018class std::any\u2019 has no member named \u2018end\u2019\n    9 |     for(it=list1.begin();it!=list1.end();it++)\n      |                                    ^~~\n/tmp/tmpqczpt48i.cpp:11:17: error: \u2018class std::any\u2019 has no member named \u2018empty\u2019\n   11 |         if(temp.empty())\n      |                 ^~~~~\n/tmp/tmpqczpt48i.cpp:13:18: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   13 |             temp.push_back(*it);\n      |                  ^~~~~~~~~\n/tmp/tmpqczpt48i.cpp:17:21: error: \u2018class std::any\u2019 has no member named \u2018back\u2019\n   17 |             if(temp.back()==*it)\n      |                     ^~~~\n/tmp/tmpqczpt48i.cpp:19:22: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   19 |                 temp.push_back(*it);\n      |                      ^~~~~~~~~\n/tmp/tmpqczpt48i.cpp:23:23: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   23 |                 list2.push_back(temp);\n      |                       ^~~~~~~~~\n/tmp/tmpqczpt48i.cpp:24:22: error: \u2018class std::any\u2019 has no member named \u2018clear\u2019\n   24 |                 temp.clear();\n      |                      ^~~~~\n/tmp/tmpqczpt48i.cpp:25:22: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   25 |              ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to pack consecutive duplicates of a given list elements into sublists.\nstd::any pack_consecutive_duplicates(std::any list1) {\n    std::any list2;\n    std::any temp;\n    std::any::iterator it1 = list1.begin();\n    std::any::iterator it2 = list2.begin();\n    std::any::iterator it3 = temp.begin();\n    while(it1 != list1.end()) {\n        if(it1 == list1.begin()) {\n            temp.push_back(*it1);\n            it1++;\n        }\n        else {\n            if(*it1 == *it3) {\n                temp.push_back(*it1);\n                it1++;\n            }\n            else {\n                list2.push_back(temp);\n                temp.clear();\n                temp.push_back(*it1);\n                it1++;\n            }\n        }\n    }\n    list2.push_back(temp);\n    return list2;\n}\nint main() {\n    auto candidate = pack_consecutive_duplicates;\n    assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n    assert(candidate((std::any({(long)10, (long)10, (long)15, (long)19, (long)18, (long)18, (long)17, (long)26, (long)26, (long)17, (long)18, (long)10}))) == (std::any({(std::vector<long>)std::vector<long>({(long)10, (long)10}), (std::vector<long>)std::vector<long>({(long)15}), (std::vector<long>)std::vector<long>({(long)19}), (std::vector<long>)std::vector<long>({(long)18, (long)18}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)26, (long)26}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)18}), (std::vector<long>)std::vector<long>({(long)10})})));\n    assert(candidate((std::any({(std::string)\"a\", (std::string)\"a\", (std::string)\"b\", (std::string)\"c\", (std::string)\"d\", (std::string)\"d\"}))) == (std::any({(std::vector<std::string>)std::vector<std::string>({(std::string)\"a\", (std::string)\"a\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"b\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"c\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"d\", (std::string)\"d\"})})));\n}\n",
      "timestamp": 1666123397,
      "stdout": "",
      "stderr": "/tmp/tmpd8yy6tm0.cpp: In function \u2018std::any pack_consecutive_duplicates(std::any)\u2019:\n/tmp/tmpd8yy6tm0.cpp:7:15: error: \u2018iterator\u2019 is not a member of \u2018std::any\u2019\n    7 |     std::any::iterator it1 = list1.begin();\n      |               ^~~~~~~~\n/tmp/tmpd8yy6tm0.cpp:8:15: error: \u2018iterator\u2019 is not a member of \u2018std::any\u2019\n    8 |     std::any::iterator it2 = list2.begin();\n      |               ^~~~~~~~\n/tmp/tmpd8yy6tm0.cpp:9:15: error: \u2018iterator\u2019 is not a member of \u2018std::any\u2019\n    9 |     std::any::iterator it3 = temp.begin();\n      |               ^~~~~~~~\n/tmp/tmpd8yy6tm0.cpp:10:11: error: \u2018it1\u2019 was not declared in this scope; did you mean \u2018list1\u2019?\n   10 |     while(it1 != list1.end()) {\n      |           ^~~\n      |           list1\n/tmp/tmpd8yy6tm0.cpp:10:24: error: \u2018class std::any\u2019 has no member named \u2018end\u2019\n   10 |     while(it1 != list1.end()) {\n      |                        ^~~\n/tmp/tmpd8yy6tm0.cpp:11:25: error: \u2018class std::any\u2019 has no member named \u2018begin\u2019\n   11 |         if(it1 == list1.begin()) {\n      |                         ^~~~~\n/tmp/tmpd8yy6tm0.cpp:12:18: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   12 |             temp.push_back(*it1);\n      |                  ^~~~~~~~~\n/tmp/tmpd8yy6tm0.cpp:16:25: error: \u2018it3\u2019 was not declared in this scope\n   16 |             if(*it1 == *it3) {\n      |                         ^~~\n/tmp/tmpd8yy6tm0.cpp:17:22: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   17 |                 temp.push_back(*it1);\n      |                      ^~~~~~~~~\n/tmp/tmpd8yy6tm0.cpp:21:23: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   21 |                 list2.push_back(temp);\n      |                       ^~~~~~~~~\n/tmp/tmpd8yy6tm0.cpp:22:22: error: \u2018class std::any\u2019 has no member named \u2018clear\u2019\n   22 |                 temp.clear();\n      |                      ^~~~~\n/tmp/tmpd8yy6tm0.cpp:23:22: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   23 |        ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to pack consecutive duplicates of a given list elements into sublists.\nstd::any pack_consecutive_duplicates(std::any list1) {\n    std::any list2;\n    std::any temp;\n    std::any temp2;\n    std::any temp3;\n    std::any temp4;\n    std::any temp5;\n    std::any temp6;\n    std::any temp7;\n    std::any temp8;\n    std::any temp9;\n    std::any temp10;\n    std::any temp11;\n    std::any temp12;\n    std::any temp13;\n    std::any temp14;\n    std::any temp15;\n    std::any temp16;\n    std::any temp17;\n    std::any temp18;\n    std::any temp19;\n    std::any temp20;\n    std::any temp21;\n    std::any temp22;\n    std::any temp23;\n    std::any temp24;\n    std::any temp25;\n    std::any temp26;\n    std::any temp27;\n    std::any temp28;\n    std::any temp29;\n    std::any temp30;\n    std::any temp31;\n    std::any temp32;\n    std::any temp33;\n    std::any temp34;\n    std::any temp35;\n    std::any temp36;\n    std::any temp37;\n    std::any temp38;\n    std::any temp39;\n    std::any temp40;\n    std::any temp41;\n    std::any temp42;\n    std::any temp43;\n    std::any temp44;\n    std::any temp45;\n    std::any temp46;\n    std::any temp47;\n    std::any temp48;\n    std::any temp49;\n    std::any temp50;\n    std::any temp51;\n    std::any temp52;\n    std::any temp53;\n    std::any temp54;\n    std::any temp55;\n    std::any temp56;\n    std::any temp57;\n    std::any temp58;\n    std::any temp59;\n    std::any temp60;\n    std::any temp61;\n    std::any temp62;\n    std::any temp63;\n\n}\nint main() {\n    auto candidate = pack_consecutive_duplicates;\n    assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n    assert(candidate((std::any({(long)10, (long)10, (long)15, (long)19, (long)18, (long)18, (long)17, (long)26, (long)26, (long)17, (long)18, (long)10}))) == (std::any({(std::vector<long>)std::vector<long>({(long)10, (long)10}), (std::vector<long>)std::vector<long>({(long)15}), (std::vector<long>)std::vector<long>({(long)19}), (std::vector<long>)std::vector<long>({(long)18, (long)18}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)26, (long)26}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)18}), (std::vector<long>)std::vector<long>({(long)10})})));\n    assert(candidate((std::any({(std::string)\"a\", (std::string)\"a\", (std::string)\"b\", (std::string)\"c\", (std::string)\"d\", (std::string)\"d\"}))) == (std::any({(std::vector<std::string>)std::vector<std::string>({(std::string)\"a\", (std::string)\"a\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"b\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"c\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"d\", (std::string)\"d\"})})));\n}\n",
      "timestamp": 1665510437,
      "stdout": "",
      "stderr": "/tmp/tmp996xkpjp.cpp: In function \u2018std::any pack_consecutive_duplicates(std::any)\u2019:\n/tmp/tmp996xkpjp.cpp:70:1: warning: no return statement in function returning non-void [-Wreturn-type]\n   70 | }\n      | ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp996xkpjp.cpp:2:\n/tmp/tmp996xkpjp.cpp: In function \u2018int main()\u2019:\n/tmp/tmp996xkpjp.cpp:73:176: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   73 |     assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n      |                                                                                                                                                                                ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmp996xkpjp.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>,",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to pack consecutive duplicates of a given list elements into sublists.\nstd::any pack_consecutive_duplicates(std::any list1) {\n    std::any list2;\n    std::any temp;\n    std::any::iterator it1 = list1.begin();\n    std::any::iterator it2 = list2.begin();\n    while(it1 != list1.end()) {\n        temp.push_back(*it1);\n        while(it1 != list1.end() && *it1 == *(it1+1)) {\n            temp.push_back(*it1);\n            it1++;\n        }\n        it2.push_back(temp);\n        temp.clear();\n        it1++;\n    }\n    return list2;\n}\nint main() {\n    auto candidate = pack_consecutive_duplicates;\n    assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n    assert(candidate((std::any({(long)10, (long)10, (long)15, (long)19, (long)18, (long)18, (long)17, (long)26, (long)26, (long)17, (long)18, (long)10}))) == (std::any({(std::vector<long>)std::vector<long>({(long)10, (long)10}), (std::vector<long>)std::vector<long>({(long)15}), (std::vector<long>)std::vector<long>({(long)19}), (std::vector<long>)std::vector<long>({(long)18, (long)18}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)26, (long)26}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)18}), (std::vector<long>)std::vector<long>({(long)10})})));\n    assert(candidate((std::any({(std::string)\"a\", (std::string)\"a\", (std::string)\"b\", (std::string)\"c\", (std::string)\"d\", (std::string)\"d\"}))) == (std::any({(std::vector<std::string>)std::vector<std::string>({(std::string)\"a\", (std::string)\"a\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"b\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"c\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"d\", (std::string)\"d\"})})));\n}\n",
      "timestamp": 1666123397,
      "stdout": "",
      "stderr": "/tmp/tmp5r9f6e4j.cpp: In function \u2018std::any pack_consecutive_duplicates(std::any)\u2019:\n/tmp/tmp5r9f6e4j.cpp:7:15: error: \u2018iterator\u2019 is not a member of \u2018std::any\u2019\n    7 |     std::any::iterator it1 = list1.begin();\n      |               ^~~~~~~~\n/tmp/tmp5r9f6e4j.cpp:8:15: error: \u2018iterator\u2019 is not a member of \u2018std::any\u2019\n    8 |     std::any::iterator it2 = list2.begin();\n      |               ^~~~~~~~\n/tmp/tmp5r9f6e4j.cpp:9:11: error: \u2018it1\u2019 was not declared in this scope; did you mean \u2018list1\u2019?\n    9 |     while(it1 != list1.end()) {\n      |           ^~~\n      |           list1\n/tmp/tmp5r9f6e4j.cpp:9:24: error: \u2018class std::any\u2019 has no member named \u2018end\u2019\n    9 |     while(it1 != list1.end()) {\n      |                        ^~~\n/tmp/tmp5r9f6e4j.cpp:10:14: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   10 |         temp.push_back(*it1);\n      |              ^~~~~~~~~\n/tmp/tmp5r9f6e4j.cpp:11:28: error: \u2018class std::any\u2019 has no member named \u2018end\u2019\n   11 |         while(it1 != list1.end() && *it1 == *(it1+1)) {\n      |                            ^~~\n/tmp/tmp5r9f6e4j.cpp:12:18: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   12 |             temp.push_back(*it1);\n      |                  ^~~~~~~~~\n/tmp/tmp5r9f6e4j.cpp:15:9: error: \u2018it2\u2019 was not declared in this scope; did you mean \u2018list2\u2019?\n   15 |         it2.push_back(temp);\n      |         ^~~\n      |         list2\n/tmp/tmp5r9f6e4j.cpp:16:14: error: \u2018class std::any\u2019 has no member named \u2018clear\u2019\n   16 |         temp.clear();\n      |              ^~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp5r9f6e4j.cpp:2:\n/tmp/tmp5r9f6e4j.cpp: In function \u2018int main()\u2019:\n/tmp/tmp5r9f6e4j.cpp:23:176: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   23 |     ass",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to pack consecutive duplicates of a given list elements into sublists.\nstd::any pack_consecutive_duplicates(std::any list1) {\n    std::any list2;\n    std::any sublist;\n    std::any temp;\n    while(list1.size() != 0) {\n        temp = list1.front();\n        while(list1.front() == temp) {\n            sublist.push_back(list1.front());\n            list1.pop_front();\n        }\n        list2.push_back(sublist);\n        sublist.clear();\n    }\n    return list2;\n}\nint main() {\n    auto candidate = pack_consecutive_duplicates;\n    assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n    assert(candidate((std::any({(long)10, (long)10, (long)15, (long)19, (long)18, (long)18, (long)17, (long)26, (long)26, (long)17, (long)18, (long)10}))) == (std::any({(std::vector<long>)std::vector<long>({(long)10, (long)10}), (std::vector<long>)std::vector<long>({(long)15}), (std::vector<long>)std::vector<long>({(long)19}), (std::vector<long>)std::vector<long>({(long)18, (long)18}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)26, (long)26}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)18}), (std::vector<long>)std::vector<long>({(long)10})})));\n    assert(candidate((std::any({(std::string)\"a\", (std::string)\"a\", (std::string)\"b\", (std::string)\"c\", (std::string)\"d\", (std::string)\"d\"}))) == (std::any({(std::vector<std::string>)std::vector<std::string>({(std::string)\"a\", (std::string)\"a\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"b\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"c\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"d\", (std::string)\"d\"})})));\n}\n",
      "timestamp": 1666123397,
      "stdout": "",
      "stderr": "/tmp/tmpt1bet0vj.cpp: In function \u2018std::any pack_consecutive_duplicates(std::any)\u2019:\n/tmp/tmpt1bet0vj.cpp:8:17: error: \u2018class std::any\u2019 has no member named \u2018size\u2019\n    8 |     while(list1.size() != 0) {\n      |                 ^~~~\n/tmp/tmpt1bet0vj.cpp:9:22: error: \u2018class std::any\u2019 has no member named \u2018front\u2019\n    9 |         temp = list1.front();\n      |                      ^~~~~\n/tmp/tmpt1bet0vj.cpp:10:21: error: \u2018class std::any\u2019 has no member named \u2018front\u2019\n   10 |         while(list1.front() == temp) {\n      |                     ^~~~~\n/tmp/tmpt1bet0vj.cpp:11:21: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   11 |             sublist.push_back(list1.front());\n      |                     ^~~~~~~~~\n/tmp/tmpt1bet0vj.cpp:11:37: error: \u2018class std::any\u2019 has no member named \u2018front\u2019\n   11 |             sublist.push_back(list1.front());\n      |                                     ^~~~~\n/tmp/tmpt1bet0vj.cpp:12:19: error: \u2018class std::any\u2019 has no member named \u2018pop_front\u2019\n   12 |             list1.pop_front();\n      |                   ^~~~~~~~~\n/tmp/tmpt1bet0vj.cpp:14:15: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   14 |         list2.push_back(sublist);\n      |               ^~~~~~~~~\n/tmp/tmpt1bet0vj.cpp:15:17: error: \u2018class std::any\u2019 has no member named \u2018clear\u2019\n   15 |         sublist.clear();\n      |                 ^~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpt1bet0vj.cpp:2:\n/tmp/tmpt1bet0vj.cpp: In function \u2018int main()\u2019:\n/tmp/tmpt1bet0vj.cpp:21:176: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   21 |     assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::a",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to pack consecutive duplicates of a given list elements into sublists.\nstd::any pack_consecutive_duplicates(std::any list1) {\n    std::any list2;\n    std::any temp;\n    std::any temp2;\n    std::any temp3;\n    std::any temp4;\n    std::any temp5;\n    std::any temp6;\n    std::any temp7;\n    std::any temp8;\n    std::any temp9;\n    std::any temp10;\n    std::any temp11;\n    std::any temp12;\n    std::any temp13;\n    std::any temp14;\n    std::any temp15;\n    std::any temp16;\n    std::any temp17;\n    std::any temp18;\n    std::any temp19;\n    std::any temp20;\n    std::any temp21;\n    std::any temp22;\n    std::any temp23;\n    std::any temp24;\n    std::any temp25;\n    std::any temp26;\n    std::any temp27;\n    std::any temp28;\n    std::any temp29;\n    std::any temp30;\n    std::any temp31;\n    std::any temp32;\n    std::any temp33;\n    std::any temp34;\n    std::any temp35;\n    std::any temp36;\n    std::any temp37;\n    std::any temp38;\n    std::any temp39;\n    std::any temp40;\n    std::any temp41;\n    std::any temp42;\n    std::any temp43;\n    std::any temp44;\n    std::any temp45;\n    std::any temp46;\n    std::any temp47;\n    std::any temp48;\n    std::any temp49;\n    std::any temp50;\n    std::any temp51;\n    std::any temp52;\n    std::any temp53;\n    std::any temp54;\n    std::any temp55;\n    std::any temp56;\n    std::any temp57;\n    std::any temp58;\n    std::any temp59;\n    std::any temp60;\n    std::any temp61;\n    std::any temp62;\n    std::any temp63;\n\n}\nint main() {\n    auto candidate = pack_consecutive_duplicates;\n    assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n    assert(candidate((std::any({(long)10, (long)10, (long)15, (long)19, (long)18, (long)18, (long)17, (long)26, (long)26, (long)17, (long)18, (long)10}))) == (std::any({(std::vector<long>)std::vector<long>({(long)10, (long)10}), (std::vector<long>)std::vector<long>({(long)15}), (std::vector<long>)std::vector<long>({(long)19}), (std::vector<long>)std::vector<long>({(long)18, (long)18}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)26, (long)26}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)18}), (std::vector<long>)std::vector<long>({(long)10})})));\n    assert(candidate((std::any({(std::string)\"a\", (std::string)\"a\", (std::string)\"b\", (std::string)\"c\", (std::string)\"d\", (std::string)\"d\"}))) == (std::any({(std::vector<std::string>)std::vector<std::string>({(std::string)\"a\", (std::string)\"a\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"b\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"c\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"d\", (std::string)\"d\"})})));\n}\n",
      "timestamp": 1665510437,
      "stdout": "",
      "stderr": "/tmp/tmp996xkpjp.cpp: In function \u2018std::any pack_consecutive_duplicates(std::any)\u2019:\n/tmp/tmp996xkpjp.cpp:70:1: warning: no return statement in function returning non-void [-Wreturn-type]\n   70 | }\n      | ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp996xkpjp.cpp:2:\n/tmp/tmp996xkpjp.cpp: In function \u2018int main()\u2019:\n/tmp/tmp996xkpjp.cpp:73:176: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   73 |     assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n      |                                                                                                                                                                                ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmp996xkpjp.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>,",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to pack consecutive duplicates of a given list elements into sublists.\nstd::any pack_consecutive_duplicates(std::any list1) {\n    std::any list2;\n    std::any list3;\n    std::any list4;\n    std::any list5;\n    std::any list6;\n    std::any list7;\n    std::any list8;\n    std::any list9;\n    std::any list10;\n    std::any list11;\n    std::any list12;\n    std::any list13;\n    std::any list14;\n    std::any list15;\n    std::any list16;\n    std::any list17;\n    std::any list18;\n    std::any list19;\n    std::any list20;\n    std::any list21;\n    std::any list22;\n    std::any list23;\n    std::any list24;\n    std::any list25;\n    std::any list26;\n    std::any list27;\n    std::any list28;\n    std::any list29;\n    std::any list30;\n    std::any list31;\n    std::any list32;\n    std::any list33;\n    std::any list34;\n    std::any list35;\n    std::any list36;\n    std::any list37;\n    std::any list38;\n    std::any list39;\n    std::any list40;\n    std::any list41;\n    std::any list42;\n    std::any list43;\n    std::any list44;\n    std::any list45;\n    std::any list46;\n    std::any list47;\n    std::any list48;\n    std::any list49;\n    std::any list50;\n    std::any list51;\n    std::any list52;\n    std::any list53;\n    std::any list54;\n    std::any list55;\n    std::any list56;\n    std::any list57;\n    std::any list58;\n    std::any list59;\n    std::any list60;\n    std::any list61;\n    std::any list62;\n    std::any list63;\n    std::any list64;\n    std::any list65;\n}\nint main() {\n    auto candidate = pack_consecutive_duplicates;\n    assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n    assert(candidate((std::any({(long)10, (long)10, (long)15, (long)19, (long)18, (long)18, (long)17, (long)26, (long)26, (long)17, (long)18, (long)10}))) == (std::any({(std::vector<long>)std::vector<long>({(long)10, (long)10}), (std::vector<long>)std::vector<long>({(long)15}), (std::vector<long>)std::vector<long>({(long)19}), (std::vector<long>)std::vector<long>({(long)18, (long)18}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)26, (long)26}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)18}), (std::vector<long>)std::vector<long>({(long)10})})));\n    assert(candidate((std::any({(std::string)\"a\", (std::string)\"a\", (std::string)\"b\", (std::string)\"c\", (std::string)\"d\", (std::string)\"d\"}))) == (std::any({(std::vector<std::string>)std::vector<std::string>({(std::string)\"a\", (std::string)\"a\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"b\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"c\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"d\", (std::string)\"d\"})})));\n}\n",
      "timestamp": 1665510437,
      "stdout": "",
      "stderr": "/tmp/tmpgspun4wj.cpp: In function \u2018std::any pack_consecutive_duplicates(std::any)\u2019:\n/tmp/tmpgspun4wj.cpp:69:1: warning: no return statement in function returning non-void [-Wreturn-type]\n   69 | }\n      | ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpgspun4wj.cpp:2:\n/tmp/tmpgspun4wj.cpp: In function \u2018int main()\u2019:\n/tmp/tmpgspun4wj.cpp:72:176: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   72 |     assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n      |                                                                                                                                                                                ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpgspun4wj.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>,",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to pack consecutive duplicates of a given list elements into sublists.\nstd::any pack_consecutive_duplicates(std::any list1) {\n  std::any list2;\n  std::any list3;\n  std::any list4;\n  std::any list5;\n  std::any list6;\n  std::any list7;\n  std::any list8;\n  std::any list9;\n  std::any list10;\n  std::any list11;\n  std::any list12;\n  std::any list13;\n  std::any list14;\n  std::any list15;\n  std::any list16;\n  std::any list17;\n  std::any list18;\n  std::any list19;\n  std::any list20;\n  std::any list21;\n  std::any list22;\n  std::any list23;\n  std::any list24;\n  std::any list25;\n  std::any list26;\n  std::any list27;\n  std::any list28;\n  std::any list29;\n  std::any list30;\n  std::any list31;\n  std::any list32;\n  std::any list33;\n  std::any list34;\n  std::any list35;\n  std::any list36;\n  std::any list37;\n  std::any list38;\n  std::any list39;\n  std::any list40;\n  std::any list41;\n  std::any list42;\n  std::any list43;\n  std::any list44;\n  std::any list45;\n  std::any list46;\n  std::any list47;\n  std::any list48;\n  std::any list49;\n  std::any list50;\n  std::any list51;\n  std::any list52;\n  std::any list53;\n  std::any list54;\n  std::any list55;\n  std::any list56;\n  std::any list57;\n  std::any list58;\n  std::any list59;\n  std::any list60;\n  std::any list61;\n  std::any list62;\n  std::any list63;\n  std::any list64;\n  std::any list65;\n}\nint main() {\n    auto candidate = pack_consecutive_duplicates;\n    assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n    assert(candidate((std::any({(long)10, (long)10, (long)15, (long)19, (long)18, (long)18, (long)17, (long)26, (long)26, (long)17, (long)18, (long)10}))) == (std::any({(std::vector<long>)std::vector<long>({(long)10, (long)10}), (std::vector<long>)std::vector<long>({(long)15}), (std::vector<long>)std::vector<long>({(long)19}), (std::vector<long>)std::vector<long>({(long)18, (long)18}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)26, (long)26}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)18}), (std::vector<long>)std::vector<long>({(long)10})})));\n    assert(candidate((std::any({(std::string)\"a\", (std::string)\"a\", (std::string)\"b\", (std::string)\"c\", (std::string)\"d\", (std::string)\"d\"}))) == (std::any({(std::vector<std::string>)std::vector<std::string>({(std::string)\"a\", (std::string)\"a\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"b\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"c\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"d\", (std::string)\"d\"})})));\n}\n",
      "timestamp": 1666123393,
      "stdout": "",
      "stderr": "/tmp/tmpc6gd7f4w.cpp: In function \u2018std::any pack_consecutive_duplicates(std::any)\u2019:\n/tmp/tmpc6gd7f4w.cpp:69:1: warning: no return statement in function returning non-void [-Wreturn-type]\n   69 | }\n      | ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpc6gd7f4w.cpp:2:\n/tmp/tmpc6gd7f4w.cpp: In function \u2018int main()\u2019:\n/tmp/tmpc6gd7f4w.cpp:72:176: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   72 |     assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n      |                                                                                                                                                                                ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpc6gd7f4w.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>,",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to pack consecutive duplicates of a given list elements into sublists.\nstd::any pack_consecutive_duplicates(std::any list1) {\n    std::any list2;\n    std::any list3;\n    std::any list4;\n    std::any list5;\n    std::any list6;\n    std::any list7;\n    std::any list8;\n    std::any list9;\n    std::any list10;\n    std::any list11;\n    std::any list12;\n    std::any list13;\n    std::any list14;\n    std::any list15;\n    std::any list16;\n    std::any list17;\n    std::any list18;\n    std::any list19;\n    std::any list20;\n    std::any list21;\n    std::any list22;\n    std::any list23;\n    std::any list24;\n    std::any list25;\n    std::any list26;\n    std::any list27;\n    std::any list28;\n    std::any list29;\n    std::any list30;\n    std::any list31;\n    std::any list32;\n    std::any list33;\n    std::any list34;\n    std::any list35;\n    std::any list36;\n    std::any list37;\n    std::any list38;\n    std::any list39;\n    std::any list40;\n    std::any list41;\n    std::any list42;\n    std::any list43;\n    std::any list44;\n    std::any list45;\n    std::any list46;\n    std::any list47;\n    std::any list48;\n    std::any list49;\n    std::any list50;\n    std::any list51;\n    std::any list52;\n    std::any list53;\n    std::any list54;\n    std::any list55;\n    std::any list56;\n    std::any list57;\n    std::any list58;\n    std::any list59;\n    std::any list60;\n    std::any list61;\n    std::any list62;\n    std::any list63;\n    std::any list64;\n    std::any list65;\n}\nint main() {\n    auto candidate = pack_consecutive_duplicates;\n    assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n    assert(candidate((std::any({(long)10, (long)10, (long)15, (long)19, (long)18, (long)18, (long)17, (long)26, (long)26, (long)17, (long)18, (long)10}))) == (std::any({(std::vector<long>)std::vector<long>({(long)10, (long)10}), (std::vector<long>)std::vector<long>({(long)15}), (std::vector<long>)std::vector<long>({(long)19}), (std::vector<long>)std::vector<long>({(long)18, (long)18}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)26, (long)26}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)18}), (std::vector<long>)std::vector<long>({(long)10})})));\n    assert(candidate((std::any({(std::string)\"a\", (std::string)\"a\", (std::string)\"b\", (std::string)\"c\", (std::string)\"d\", (std::string)\"d\"}))) == (std::any({(std::vector<std::string>)std::vector<std::string>({(std::string)\"a\", (std::string)\"a\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"b\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"c\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"d\", (std::string)\"d\"})})));\n}\n",
      "timestamp": 1665510437,
      "stdout": "",
      "stderr": "/tmp/tmpgspun4wj.cpp: In function \u2018std::any pack_consecutive_duplicates(std::any)\u2019:\n/tmp/tmpgspun4wj.cpp:69:1: warning: no return statement in function returning non-void [-Wreturn-type]\n   69 | }\n      | ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpgspun4wj.cpp:2:\n/tmp/tmpgspun4wj.cpp: In function \u2018int main()\u2019:\n/tmp/tmpgspun4wj.cpp:72:176: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   72 |     assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n      |                                                                                                                                                                                ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpgspun4wj.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>,",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to pack consecutive duplicates of a given list elements into sublists.\nstd::any pack_consecutive_duplicates(std::any list1) {\n  std::any list2;\n  std::any temp;\n  std::any temp2;\n  std::any temp3;\n  std::any temp4;\n  std::any temp5;\n  std::any temp6;\n  std::any temp7;\n  std::any temp8;\n  std::any temp9;\n  std::any temp10;\n  std::any temp11;\n  std::any temp12;\n  std::any temp13;\n  std::any temp14;\n  std::any temp15;\n  std::any temp16;\n  std::any temp17;\n  std::any temp18;\n  std::any temp19;\n  std::any temp20;\n  std::any temp21;\n  std::any temp22;\n  std::any temp23;\n  std::any temp24;\n  std::any temp25;\n  std::any temp26;\n  std::any temp27;\n  std::any temp28;\n  std::any temp29;\n  std::any temp30;\n  std::any temp31;\n  std::any temp32;\n  std::any temp33;\n  std::any temp34;\n  std::any temp35;\n  std::any temp36;\n  std::any temp37;\n  std::any temp38;\n  std::any temp39;\n  std::any temp40;\n  std::any temp41;\n  std::any temp42;\n  std::any temp43;\n  std::any temp44;\n  std::any temp45;\n  std::any temp46;\n  std::any temp47;\n  std::any temp48;\n  std::any temp49;\n  std::any temp50;\n  std::any temp51;\n  std::any temp52;\n  std::any temp53;\n  std::any temp54;\n  std::any temp55;\n  std::any temp56;\n  std::any temp57;\n  std::any temp58;\n  std::any temp59;\n  std::any temp60;\n  std::any temp61;\n  std::any temp62;\n  std::any temp63;\n\n}\nint main() {\n    auto candidate = pack_consecutive_duplicates;\n    assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n    assert(candidate((std::any({(long)10, (long)10, (long)15, (long)19, (long)18, (long)18, (long)17, (long)26, (long)26, (long)17, (long)18, (long)10}))) == (std::any({(std::vector<long>)std::vector<long>({(long)10, (long)10}), (std::vector<long>)std::vector<long>({(long)15}), (std::vector<long>)std::vector<long>({(long)19}), (std::vector<long>)std::vector<long>({(long)18, (long)18}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)26, (long)26}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)18}), (std::vector<long>)std::vector<long>({(long)10})})));\n    assert(candidate((std::any({(std::string)\"a\", (std::string)\"a\", (std::string)\"b\", (std::string)\"c\", (std::string)\"d\", (std::string)\"d\"}))) == (std::any({(std::vector<std::string>)std::vector<std::string>({(std::string)\"a\", (std::string)\"a\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"b\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"c\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"d\", (std::string)\"d\"})})));\n}\n",
      "timestamp": 1665510437,
      "stdout": "",
      "stderr": "/tmp/tmpcbajqnq3.cpp: In function \u2018std::any pack_consecutive_duplicates(std::any)\u2019:\n/tmp/tmpcbajqnq3.cpp:70:1: warning: no return statement in function returning non-void [-Wreturn-type]\n   70 | }\n      | ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpcbajqnq3.cpp:2:\n/tmp/tmpcbajqnq3.cpp: In function \u2018int main()\u2019:\n/tmp/tmpcbajqnq3.cpp:73:176: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   73 |     assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n      |                                                                                                                                                                                ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpcbajqnq3.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>,",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to pack consecutive duplicates of a given list elements into sublists.\nstd::any pack_consecutive_duplicates(std::any list1) {\n    if(list1.empty())\n        return list1;\n    std::any list2;\n    std::any temp;\n    temp.push_back(list1.front());\n    for(auto i:list1) {\n        if(i==temp.back()) {\n            temp.push_back(i);\n        }\n        else {\n            list2.push_back(temp);\n            temp.clear();\n            temp.push_back(i);\n        }\n    }\n    list2.push_back(temp);\n    return list2;\n}\nint main() {\n    auto candidate = pack_consecutive_duplicates;\n    assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n    assert(candidate((std::any({(long)10, (long)10, (long)15, (long)19, (long)18, (long)18, (long)17, (long)26, (long)26, (long)17, (long)18, (long)10}))) == (std::any({(std::vector<long>)std::vector<long>({(long)10, (long)10}), (std::vector<long>)std::vector<long>({(long)15}), (std::vector<long>)std::vector<long>({(long)19}), (std::vector<long>)std::vector<long>({(long)18, (long)18}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)26, (long)26}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)18}), (std::vector<long>)std::vector<long>({(long)10})})));\n    assert(candidate((std::any({(std::string)\"a\", (std::string)\"a\", (std::string)\"b\", (std::string)\"c\", (std::string)\"d\", (std::string)\"d\"}))) == (std::any({(std::vector<std::string>)std::vector<std::string>({(std::string)\"a\", (std::string)\"a\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"b\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"c\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"d\", (std::string)\"d\"})})));\n}\n",
      "timestamp": 1666123398,
      "stdout": "",
      "stderr": "/tmp/tmp3czh6h5a.cpp: In function \u2018std::any pack_consecutive_duplicates(std::any)\u2019:\n/tmp/tmp3czh6h5a.cpp:5:14: error: \u2018class std::any\u2019 has no member named \u2018empty\u2019\n    5 |     if(list1.empty())\n      |              ^~~~~\n/tmp/tmp3czh6h5a.cpp:9:10: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n    9 |     temp.push_back(list1.front());\n      |          ^~~~~~~~~\n/tmp/tmp3czh6h5a.cpp:9:26: error: \u2018class std::any\u2019 has no member named \u2018front\u2019\n    9 |     temp.push_back(list1.front());\n      |                          ^~~~~\n/tmp/tmp3czh6h5a.cpp:10:16: error: no matching function for call to \u2018begin(std::any&)\u2019\n   10 |     for(auto i:list1) {\n      |                ^~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/range_access.h:36,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/string:54,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/locale_classes.h:40,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/ios_base.h:41,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ios:42,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/istream:38,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/sstream:38,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/complex:45,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ccomplex:39,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:54,\n                 from /tmp/tmp3czh6h5a.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/initializer_list:89:5: note: candidate: \u2018template<class _Tp> constexpr const _Tp* std::begin(std::initializer_list<_Tp>)\u2019\n   89 |     begin(initializer_list<_Tp> __ils) noexcept\n      |     ^~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/initializer_list:89:5: note:   template argument deduction/substitut",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to pack consecutive duplicates of a given list elements into sublists.\nstd::any pack_consecutive_duplicates(std::any list1) {\n    std::any result;\n    std::any sublist;\n    std::any last_item;\n    for (auto item : list1) {\n        if (item != last_item) {\n            if (sublist.size() > 0) {\n                result.push_back(sublist);\n            }\n            sublist.clear();\n        }\n        sublist.push_back(item);\n        last_item = item;\n    }\n    if (sublist.size() > 0) {\n        result.push_back(sublist);\n    }\n    return result;\n}\nint main() {\n    auto candidate = pack_consecutive_duplicates;\n    assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n    assert(candidate((std::any({(long)10, (long)10, (long)15, (long)19, (long)18, (long)18, (long)17, (long)26, (long)26, (long)17, (long)18, (long)10}))) == (std::any({(std::vector<long>)std::vector<long>({(long)10, (long)10}), (std::vector<long>)std::vector<long>({(long)15}), (std::vector<long>)std::vector<long>({(long)19}), (std::vector<long>)std::vector<long>({(long)18, (long)18}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)26, (long)26}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)18}), (std::vector<long>)std::vector<long>({(long)10})})));\n    assert(candidate((std::any({(std::string)\"a\", (std::string)\"a\", (std::string)\"b\", (std::string)\"c\", (std::string)\"d\", (std::string)\"d\"}))) == (std::any({(std::vector<std::string>)std::vector<std::string>({(std::string)\"a\", (std::string)\"a\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"b\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"c\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"d\", (std::string)\"d\"})})));\n}\n",
      "timestamp": 1666123398,
      "stdout": "",
      "stderr": "/tmp/tmpqi8ejf79.cpp: In function \u2018std::any pack_consecutive_duplicates(std::any)\u2019:\n/tmp/tmpqi8ejf79.cpp:8:22: error: no matching function for call to \u2018begin(std::any&)\u2019\n    8 |     for (auto item : list1) {\n      |                      ^~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/range_access.h:36,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/string:54,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/locale_classes.h:40,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/ios_base.h:41,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ios:42,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/istream:38,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/sstream:38,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/complex:45,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ccomplex:39,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:54,\n                 from /tmp/tmpqi8ejf79.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/initializer_list:89:5: note: candidate: \u2018template<class _Tp> constexpr const _Tp* std::begin(std::initializer_list<_Tp>)\u2019\n   89 |     begin(initializer_list<_Tp> __ils) noexcept\n      |     ^~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/initializer_list:89:5: note:   template argument deduction/substitution failed:\n/tmp/tmpqi8ejf79.cpp:8:22: note:   \u2018std::any\u2019 is not derived from \u2018std::initializer_list<_Tp>\u2019\n    8 |     for (auto item : list1) {\n      |                      ^~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/string:54,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/locale_classes.h:40,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/ios_base.h:",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to pack consecutive duplicates of a given list elements into sublists.\nstd::any pack_consecutive_duplicates(std::any list1) {\n    std::any list2;\n    std::any temp;\n    std::any temp2;\n    std::any temp3;\n    std::any temp4;\n    std::any temp5;\n    std::any temp6;\n    std::any temp7;\n    std::any temp8;\n    std::any temp9;\n    std::any temp10;\n    std::any temp11;\n    std::any temp12;\n    std::any temp13;\n    std::any temp14;\n    std::any temp15;\n    std::any temp16;\n    std::any temp17;\n    std::any temp18;\n    std::any temp19;\n    std::any temp20;\n    std::any temp21;\n    std::any temp22;\n    std::any temp23;\n    std::any temp24;\n    std::any temp25;\n    std::any temp26;\n    std::any temp27;\n    std::any temp28;\n    std::any temp29;\n    std::any temp30;\n    std::any temp31;\n    std::any temp32;\n    std::any temp33;\n    std::any temp34;\n    std::any temp35;\n    std::any temp36;\n    std::any temp37;\n    std::any temp38;\n    std::any temp39;\n    std::any temp40;\n    std::any temp41;\n    std::any temp42;\n    std::any temp43;\n    std::any temp44;\n    std::any temp45;\n    std::any temp46;\n    std::any temp47;\n    std::any temp48;\n    std::any temp49;\n    std::any temp50;\n    std::any temp51;\n    std::any temp52;\n    std::any temp53;\n    std::any temp54;\n    std::any temp55;\n    std::any temp56;\n    std::any temp57;\n    std::any temp58;\n    std::any temp59;\n    std::any temp60;\n    std::any temp61;\n    std::any temp62;\n    std::any temp63;\n\n}\nint main() {\n    auto candidate = pack_consecutive_duplicates;\n    assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n    assert(candidate((std::any({(long)10, (long)10, (long)15, (long)19, (long)18, (long)18, (long)17, (long)26, (long)26, (long)17, (long)18, (long)10}))) == (std::any({(std::vector<long>)std::vector<long>({(long)10, (long)10}), (std::vector<long>)std::vector<long>({(long)15}), (std::vector<long>)std::vector<long>({(long)19}), (std::vector<long>)std::vector<long>({(long)18, (long)18}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)26, (long)26}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)18}), (std::vector<long>)std::vector<long>({(long)10})})));\n    assert(candidate((std::any({(std::string)\"a\", (std::string)\"a\", (std::string)\"b\", (std::string)\"c\", (std::string)\"d\", (std::string)\"d\"}))) == (std::any({(std::vector<std::string>)std::vector<std::string>({(std::string)\"a\", (std::string)\"a\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"b\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"c\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"d\", (std::string)\"d\"})})));\n}\n",
      "timestamp": 1665510437,
      "stdout": "",
      "stderr": "/tmp/tmp996xkpjp.cpp: In function \u2018std::any pack_consecutive_duplicates(std::any)\u2019:\n/tmp/tmp996xkpjp.cpp:70:1: warning: no return statement in function returning non-void [-Wreturn-type]\n   70 | }\n      | ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp996xkpjp.cpp:2:\n/tmp/tmp996xkpjp.cpp: In function \u2018int main()\u2019:\n/tmp/tmp996xkpjp.cpp:73:176: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   73 |     assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n      |                                                                                                                                                                                ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmp996xkpjp.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>,",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to pack consecutive duplicates of a given list elements into sublists.\nstd::any pack_consecutive_duplicates(std::any list1) {\n    std::any list2;\n    std::any temp;\n    std::any temp2;\n    std::any temp3;\n    std::any temp4;\n    std::any temp5;\n    std::any temp6;\n    std::any temp7;\n    std::any temp8;\n    std::any temp9;\n    std::any temp10;\n    std::any temp11;\n    std::any temp12;\n    std::any temp13;\n    std::any temp14;\n    std::any temp15;\n    std::any temp16;\n    std::any temp17;\n    std::any temp18;\n    std::any temp19;\n    std::any temp20;\n    std::any temp21;\n    std::any temp22;\n    std::any temp23;\n    std::any temp24;\n    std::any temp25;\n    std::any temp26;\n    std::any temp27;\n    std::any temp28;\n    std::any temp29;\n    std::any temp30;\n    std::any temp31;\n    std::any temp32;\n    std::any temp33;\n    std::any temp34;\n    std::any temp35;\n    std::any temp36;\n    std::any temp37;\n    std::any temp38;\n    std::any temp39;\n    std::any temp40;\n    std::any temp41;\n    std::any temp42;\n    std::any temp43;\n    std::any temp44;\n    std::any temp45;\n    std::any temp46;\n    std::any temp47;\n    std::any temp48;\n    std::any temp49;\n    std::any temp50;\n    std::any temp51;\n    std::any temp52;\n    std::any temp53;\n    std::any temp54;\n    std::any temp55;\n    std::any temp56;\n    std::any temp57;\n    std::any temp58;\n    std::any temp59;\n    std::any temp60;\n    std::any temp61;\n    std::any temp62;\n    std::any temp63;\n\n}\nint main() {\n    auto candidate = pack_consecutive_duplicates;\n    assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n    assert(candidate((std::any({(long)10, (long)10, (long)15, (long)19, (long)18, (long)18, (long)17, (long)26, (long)26, (long)17, (long)18, (long)10}))) == (std::any({(std::vector<long>)std::vector<long>({(long)10, (long)10}), (std::vector<long>)std::vector<long>({(long)15}), (std::vector<long>)std::vector<long>({(long)19}), (std::vector<long>)std::vector<long>({(long)18, (long)18}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)26, (long)26}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)18}), (std::vector<long>)std::vector<long>({(long)10})})));\n    assert(candidate((std::any({(std::string)\"a\", (std::string)\"a\", (std::string)\"b\", (std::string)\"c\", (std::string)\"d\", (std::string)\"d\"}))) == (std::any({(std::vector<std::string>)std::vector<std::string>({(std::string)\"a\", (std::string)\"a\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"b\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"c\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"d\", (std::string)\"d\"})})));\n}\n",
      "timestamp": 1665510437,
      "stdout": "",
      "stderr": "/tmp/tmp996xkpjp.cpp: In function \u2018std::any pack_consecutive_duplicates(std::any)\u2019:\n/tmp/tmp996xkpjp.cpp:70:1: warning: no return statement in function returning non-void [-Wreturn-type]\n   70 | }\n      | ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp996xkpjp.cpp:2:\n/tmp/tmp996xkpjp.cpp: In function \u2018int main()\u2019:\n/tmp/tmp996xkpjp.cpp:73:176: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   73 |     assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n      |                                                                                                                                                                                ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmp996xkpjp.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>,",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to pack consecutive duplicates of a given list elements into sublists.\nstd::any pack_consecutive_duplicates(std::any list1) {\n    std::any list2;\n    std::any temp;\n    std::any::iterator it = list1.begin();\n    while(it != list1.end()) {\n        temp.push_back(*it);\n        it++;\n        if(*it != *(it-1)) {\n            list2.push_back(temp);\n            temp.clear();\n        }\n    }\n    list2.push_back(temp);\n    return list2;\n}\nint main() {\n    auto candidate = pack_consecutive_duplicates;\n    assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n    assert(candidate((std::any({(long)10, (long)10, (long)15, (long)19, (long)18, (long)18, (long)17, (long)26, (long)26, (long)17, (long)18, (long)10}))) == (std::any({(std::vector<long>)std::vector<long>({(long)10, (long)10}), (std::vector<long>)std::vector<long>({(long)15}), (std::vector<long>)std::vector<long>({(long)19}), (std::vector<long>)std::vector<long>({(long)18, (long)18}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)26, (long)26}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)18}), (std::vector<long>)std::vector<long>({(long)10})})));\n    assert(candidate((std::any({(std::string)\"a\", (std::string)\"a\", (std::string)\"b\", (std::string)\"c\", (std::string)\"d\", (std::string)\"d\"}))) == (std::any({(std::vector<std::string>)std::vector<std::string>({(std::string)\"a\", (std::string)\"a\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"b\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"c\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"d\", (std::string)\"d\"})})));\n}\n",
      "timestamp": 1666123397,
      "stdout": "",
      "stderr": "/tmp/tmpy_wuby1s.cpp: In function \u2018std::any pack_consecutive_duplicates(std::any)\u2019:\n/tmp/tmpy_wuby1s.cpp:7:15: error: \u2018iterator\u2019 is not a member of \u2018std::any\u2019\n    7 |     std::any::iterator it = list1.begin();\n      |               ^~~~~~~~\n/tmp/tmpy_wuby1s.cpp:8:11: error: \u2018it\u2019 was not declared in this scope; did you mean \u2018int\u2019?\n    8 |     while(it != list1.end()) {\n      |           ^~\n      |           int\n/tmp/tmpy_wuby1s.cpp:8:23: error: \u2018class std::any\u2019 has no member named \u2018end\u2019\n    8 |     while(it != list1.end()) {\n      |                       ^~~\n/tmp/tmpy_wuby1s.cpp:9:14: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n    9 |         temp.push_back(*it);\n      |              ^~~~~~~~~\n/tmp/tmpy_wuby1s.cpp:12:19: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   12 |             list2.push_back(temp);\n      |                   ^~~~~~~~~\n/tmp/tmpy_wuby1s.cpp:13:18: error: \u2018class std::any\u2019 has no member named \u2018clear\u2019\n   13 |             temp.clear();\n      |                  ^~~~~\n/tmp/tmpy_wuby1s.cpp:16:11: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   16 |     list2.push_back(temp);\n      |           ^~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpy_wuby1s.cpp:2:\n/tmp/tmpy_wuby1s.cpp: In function \u2018int main()\u2019:\n/tmp/tmpy_wuby1s.cpp:21:176: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   21 |     assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(lo",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to pack consecutive duplicates of a given list elements into sublists.\nstd::any pack_consecutive_duplicates(std::any list1) {\n    std::any list2;\n    std::any list3;\n    std::any list4;\n    std::any list5;\n    std::any list6;\n    std::any list7;\n    std::any list8;\n    std::any list9;\n    std::any list10;\n    std::any list11;\n    std::any list12;\n    std::any list13;\n    std::any list14;\n    std::any list15;\n    std::any list16;\n    std::any list17;\n    std::any list18;\n    std::any list19;\n    std::any list20;\n    std::any list21;\n    std::any list22;\n    std::any list23;\n    std::any list24;\n    std::any list25;\n    std::any list26;\n    std::any list27;\n    std::any list28;\n    std::any list29;\n    std::any list30;\n    std::any list31;\n    std::any list32;\n    std::any list33;\n    std::any list34;\n    std::any list35;\n    std::any list36;\n    std::any list37;\n    std::any list38;\n    std::any list39;\n    std::any list40;\n    std::any list41;\n    std::any list42;\n    std::any list43;\n    std::any list44;\n    std::any list45;\n    std::any list46;\n    std::any list47;\n    std::any list48;\n    std::any list49;\n    std::any list50;\n    std::any list51;\n    std::any list52;\n    std::any list53;\n    std::any list54;\n    std::any list55;\n    std::any list56;\n    std::any list57;\n    std::any list58;\n    std::any list59;\n    std::any list60;\n    std::any list61;\n    std::any list62;\n    std::any list63;\n    std::any list64;\n    std::any list65;\n}\nint main() {\n    auto candidate = pack_consecutive_duplicates;\n    assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n    assert(candidate((std::any({(long)10, (long)10, (long)15, (long)19, (long)18, (long)18, (long)17, (long)26, (long)26, (long)17, (long)18, (long)10}))) == (std::any({(std::vector<long>)std::vector<long>({(long)10, (long)10}), (std::vector<long>)std::vector<long>({(long)15}), (std::vector<long>)std::vector<long>({(long)19}), (std::vector<long>)std::vector<long>({(long)18, (long)18}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)26, (long)26}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)18}), (std::vector<long>)std::vector<long>({(long)10})})));\n    assert(candidate((std::any({(std::string)\"a\", (std::string)\"a\", (std::string)\"b\", (std::string)\"c\", (std::string)\"d\", (std::string)\"d\"}))) == (std::any({(std::vector<std::string>)std::vector<std::string>({(std::string)\"a\", (std::string)\"a\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"b\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"c\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"d\", (std::string)\"d\"})})));\n}\n",
      "timestamp": 1665510437,
      "stdout": "",
      "stderr": "/tmp/tmpgspun4wj.cpp: In function \u2018std::any pack_consecutive_duplicates(std::any)\u2019:\n/tmp/tmpgspun4wj.cpp:69:1: warning: no return statement in function returning non-void [-Wreturn-type]\n   69 | }\n      | ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpgspun4wj.cpp:2:\n/tmp/tmpgspun4wj.cpp: In function \u2018int main()\u2019:\n/tmp/tmpgspun4wj.cpp:72:176: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   72 |     assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n      |                                                                                                                                                                                ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpgspun4wj.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>,",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to pack consecutive duplicates of a given list elements into sublists.\nstd::any pack_consecutive_duplicates(std::any list1) {\n    std::any list2;\n    std::any temp;\n    std::any::iterator it;\n    for (it = list1.begin(); it != list1.end(); it++) {\n        if (temp.empty() || temp.back() != *it) {\n            if (!temp.empty()) {\n                list2.push_back(temp);\n            }\n            temp.clear();\n        }\n        temp.push_back(*it);\n    }\n    if (!temp.empty()) {\n        list2.push_back(temp);\n    }\n    return list2;\n}\nint main() {\n    auto candidate = pack_consecutive_duplicates;\n    assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n    assert(candidate((std::any({(long)10, (long)10, (long)15, (long)19, (long)18, (long)18, (long)17, (long)26, (long)26, (long)17, (long)18, (long)10}))) == (std::any({(std::vector<long>)std::vector<long>({(long)10, (long)10}), (std::vector<long>)std::vector<long>({(long)15}), (std::vector<long>)std::vector<long>({(long)19}), (std::vector<long>)std::vector<long>({(long)18, (long)18}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)26, (long)26}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)18}), (std::vector<long>)std::vector<long>({(long)10})})));\n    assert(candidate((std::any({(std::string)\"a\", (std::string)\"a\", (std::string)\"b\", (std::string)\"c\", (std::string)\"d\", (std::string)\"d\"}))) == (std::any({(std::vector<std::string>)std::vector<std::string>({(std::string)\"a\", (std::string)\"a\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"b\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"c\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"d\", (std::string)\"d\"})})));\n}\n",
      "timestamp": 1666123397,
      "stdout": "",
      "stderr": "/tmp/tmpf4sim7dc.cpp: In function \u2018std::any pack_consecutive_duplicates(std::any)\u2019:\n/tmp/tmpf4sim7dc.cpp:7:15: error: \u2018iterator\u2019 is not a member of \u2018std::any\u2019\n    7 |     std::any::iterator it;\n      |               ^~~~~~~~\n/tmp/tmpf4sim7dc.cpp:8:10: error: \u2018it\u2019 was not declared in this scope; did you mean \u2018int\u2019?\n    8 |     for (it = list1.begin(); it != list1.end(); it++) {\n      |          ^~\n      |          int\n/tmp/tmpf4sim7dc.cpp:8:21: error: \u2018class std::any\u2019 has no member named \u2018begin\u2019\n    8 |     for (it = list1.begin(); it != list1.end(); it++) {\n      |                     ^~~~~\n/tmp/tmpf4sim7dc.cpp:8:42: error: \u2018class std::any\u2019 has no member named \u2018end\u2019\n    8 |     for (it = list1.begin(); it != list1.end(); it++) {\n      |                                          ^~~\n/tmp/tmpf4sim7dc.cpp:9:18: error: \u2018class std::any\u2019 has no member named \u2018empty\u2019\n    9 |         if (temp.empty() || temp.back() != *it) {\n      |                  ^~~~~\n/tmp/tmpf4sim7dc.cpp:9:34: error: \u2018class std::any\u2019 has no member named \u2018back\u2019\n    9 |         if (temp.empty() || temp.back() != *it) {\n      |                                  ^~~~\n/tmp/tmpf4sim7dc.cpp:10:23: error: \u2018class std::any\u2019 has no member named \u2018empty\u2019\n   10 |             if (!temp.empty()) {\n      |                       ^~~~~\n/tmp/tmpf4sim7dc.cpp:11:23: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   11 |                 list2.push_back(temp);\n      |                       ^~~~~~~~~\n/tmp/tmpf4sim7dc.cpp:13:18: error: \u2018class std::any\u2019 has no member named \u2018clear\u2019\n   13 |             temp.clear();\n      |                  ^~~~~\n/tmp/tmpf4sim7dc.cpp:15:14: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   15 |         temp.push_back(*it);\n      |              ^~~~~~~~~\n/tmp/tmpf4sim7dc.cpp:17:15: error: \u2018class std::any\u2019 has no member named \u2018empty\u2019\n   17 |     if (!temp.empty()) {\n      |               ^~~~~\n/tmp/tmpf4sim7dc.cpp:18:15: error: \u2018class std:",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to pack consecutive duplicates of a given list elements into sublists.\nstd::any pack_consecutive_duplicates(std::any list1) {\n    std::any list2;\n    std::any temp;\n    std::any::iterator it1 = list1.begin();\n    std::any::iterator it2 = list2.begin();\n    std::any::iterator it3 = temp.begin();\n    while(it1 != list1.end()) {\n        if(it1 == list1.begin()) {\n            temp.push_back(*it1);\n            it1++;\n        }\n        else if(*it1 == *it3) {\n            temp.push_back(*it1);\n            it1++;\n        }\n        else {\n            list2.push_back(temp);\n            temp.clear();\n            temp.push_back(*it1);\n            it1++;\n        }\n    }\n    list2.push_back(temp);\n    return list2;\n}\nint main() {\n    auto candidate = pack_consecutive_duplicates;\n    assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n    assert(candidate((std::any({(long)10, (long)10, (long)15, (long)19, (long)18, (long)18, (long)17, (long)26, (long)26, (long)17, (long)18, (long)10}))) == (std::any({(std::vector<long>)std::vector<long>({(long)10, (long)10}), (std::vector<long>)std::vector<long>({(long)15}), (std::vector<long>)std::vector<long>({(long)19}), (std::vector<long>)std::vector<long>({(long)18, (long)18}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)26, (long)26}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)18}), (std::vector<long>)std::vector<long>({(long)10})})));\n    assert(candidate((std::any({(std::string)\"a\", (std::string)\"a\", (std::string)\"b\", (std::string)\"c\", (std::string)\"d\", (std::string)\"d\"}))) == (std::any({(std::vector<std::string>)std::vector<std::string>({(std::string)\"a\", (std::string)\"a\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"b\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"c\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"d\", (std::string)\"d\"})})));\n}\n",
      "timestamp": 1666123397,
      "stdout": "",
      "stderr": "/tmp/tmp3fl8n_tp.cpp: In function \u2018std::any pack_consecutive_duplicates(std::any)\u2019:\n/tmp/tmp3fl8n_tp.cpp:7:15: error: \u2018iterator\u2019 is not a member of \u2018std::any\u2019\n    7 |     std::any::iterator it1 = list1.begin();\n      |               ^~~~~~~~\n/tmp/tmp3fl8n_tp.cpp:8:15: error: \u2018iterator\u2019 is not a member of \u2018std::any\u2019\n    8 |     std::any::iterator it2 = list2.begin();\n      |               ^~~~~~~~\n/tmp/tmp3fl8n_tp.cpp:9:15: error: \u2018iterator\u2019 is not a member of \u2018std::any\u2019\n    9 |     std::any::iterator it3 = temp.begin();\n      |               ^~~~~~~~\n/tmp/tmp3fl8n_tp.cpp:10:11: error: \u2018it1\u2019 was not declared in this scope; did you mean \u2018list1\u2019?\n   10 |     while(it1 != list1.end()) {\n      |           ^~~\n      |           list1\n/tmp/tmp3fl8n_tp.cpp:10:24: error: \u2018class std::any\u2019 has no member named \u2018end\u2019\n   10 |     while(it1 != list1.end()) {\n      |                        ^~~\n/tmp/tmp3fl8n_tp.cpp:11:25: error: \u2018class std::any\u2019 has no member named \u2018begin\u2019\n   11 |         if(it1 == list1.begin()) {\n      |                         ^~~~~\n/tmp/tmp3fl8n_tp.cpp:12:18: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   12 |             temp.push_back(*it1);\n      |                  ^~~~~~~~~\n/tmp/tmp3fl8n_tp.cpp:15:26: error: \u2018it3\u2019 was not declared in this scope\n   15 |         else if(*it1 == *it3) {\n      |                          ^~~\n/tmp/tmp3fl8n_tp.cpp:16:18: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   16 |             temp.push_back(*it1);\n      |                  ^~~~~~~~~\n/tmp/tmp3fl8n_tp.cpp:20:19: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   20 |             list2.push_back(temp);\n      |                   ^~~~~~~~~\n/tmp/tmp3fl8n_tp.cpp:21:18: error: \u2018class std::any\u2019 has no member named \u2018clear\u2019\n   21 |             temp.clear();\n      |                  ^~~~~\n/tmp/tmp3fl8n_tp.cpp:22:18: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   22 |             temp.push_back(*i",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to pack consecutive duplicates of a given list elements into sublists.\nstd::any pack_consecutive_duplicates(std::any list1) {\n    std::any list2;\n    std::any temp;\n    std::any temp2;\n    std::any temp3;\n    std::any temp4;\n    std::any temp5;\n    std::any temp6;\n    std::any temp7;\n    std::any temp8;\n    std::any temp9;\n    std::any temp10;\n    std::any temp11;\n    std::any temp12;\n    std::any temp13;\n    std::any temp14;\n    std::any temp15;\n    std::any temp16;\n    std::any temp17;\n    std::any temp18;\n    std::any temp19;\n    std::any temp20;\n    std::any temp21;\n    std::any temp22;\n    std::any temp23;\n    std::any temp24;\n    std::any temp25;\n    std::any temp26;\n    std::any temp27;\n    std::any temp28;\n    std::any temp29;\n    std::any temp30;\n    std::any temp31;\n    std::any temp32;\n    std::any temp33;\n    std::any temp34;\n    std::any temp35;\n    std::any temp36;\n    std::any temp37;\n    std::any temp38;\n    std::any temp39;\n    std::any temp40;\n    std::any temp41;\n    std::any temp42;\n    std::any temp43;\n    std::any temp44;\n    std::any temp45;\n    std::any temp46;\n    std::any temp47;\n    std::any temp48;\n    std::any temp49;\n    std::any temp50;\n    std::any temp51;\n    std::any temp52;\n    std::any temp53;\n    std::any temp54;\n    std::any temp55;\n    std::any temp56;\n    std::any temp57;\n    std::any temp58;\n    std::any temp59;\n    std::any temp60;\n    std::any temp61;\n    std::any temp62;\n    std::any temp63;\n\n}\nint main() {\n    auto candidate = pack_consecutive_duplicates;\n    assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n    assert(candidate((std::any({(long)10, (long)10, (long)15, (long)19, (long)18, (long)18, (long)17, (long)26, (long)26, (long)17, (long)18, (long)10}))) == (std::any({(std::vector<long>)std::vector<long>({(long)10, (long)10}), (std::vector<long>)std::vector<long>({(long)15}), (std::vector<long>)std::vector<long>({(long)19}), (std::vector<long>)std::vector<long>({(long)18, (long)18}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)26, (long)26}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)18}), (std::vector<long>)std::vector<long>({(long)10})})));\n    assert(candidate((std::any({(std::string)\"a\", (std::string)\"a\", (std::string)\"b\", (std::string)\"c\", (std::string)\"d\", (std::string)\"d\"}))) == (std::any({(std::vector<std::string>)std::vector<std::string>({(std::string)\"a\", (std::string)\"a\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"b\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"c\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"d\", (std::string)\"d\"})})));\n}\n",
      "timestamp": 1665510437,
      "stdout": "",
      "stderr": "/tmp/tmp996xkpjp.cpp: In function \u2018std::any pack_consecutive_duplicates(std::any)\u2019:\n/tmp/tmp996xkpjp.cpp:70:1: warning: no return statement in function returning non-void [-Wreturn-type]\n   70 | }\n      | ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp996xkpjp.cpp:2:\n/tmp/tmp996xkpjp.cpp: In function \u2018int main()\u2019:\n/tmp/tmp996xkpjp.cpp:73:176: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   73 |     assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n      |                                                                                                                                                                                ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmp996xkpjp.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>,",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to pack consecutive duplicates of a given list elements into sublists.\nstd::any pack_consecutive_duplicates(std::any list1) {\n    std::any list2;\n    std::any temp;\n    std::any temp1;\n    std::any temp2;\n    std::any temp3;\n    std::any temp4;\n    std::any temp5;\n    std::any temp6;\n    std::any temp7;\n    std::any temp8;\n    std::any temp9;\n    std::any temp10;\n    std::any temp11;\n    std::any temp12;\n    std::any temp13;\n    std::any temp14;\n    std::any temp15;\n    std::any temp16;\n    std::any temp17;\n    std::any temp18;\n    std::any temp19;\n    std::any temp20;\n    std::any temp21;\n    std::any temp22;\n    std::any temp23;\n    std::any temp24;\n    std::any temp25;\n    std::any temp26;\n    std::any temp27;\n    std::any temp28;\n    std::any temp29;\n    std::any temp30;\n    std::any temp31;\n    std::any temp32;\n    std::any temp33;\n    std::any temp34;\n    std::any temp35;\n    std::any temp36;\n    std::any temp37;\n    std::any temp38;\n    std::any temp39;\n    std::any temp40;\n    std::any temp41;\n    std::any temp42;\n    std::any temp43;\n    std::any temp44;\n    std::any temp45;\n    std::any temp46;\n    std::any temp47;\n    std::any temp48;\n    std::any temp49;\n    std::any temp50;\n    std::any temp51;\n    std::any temp52;\n    std::any temp53;\n    std::any temp54;\n    std::any temp55;\n    std::any temp56;\n    std::any temp57;\n    std::any temp58;\n    std::any temp59;\n    std::any temp60;\n    std::any temp61;\n    std::any temp62;\n\n}\nint main() {\n    auto candidate = pack_consecutive_duplicates;\n    assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n    assert(candidate((std::any({(long)10, (long)10, (long)15, (long)19, (long)18, (long)18, (long)17, (long)26, (long)26, (long)17, (long)18, (long)10}))) == (std::any({(std::vector<long>)std::vector<long>({(long)10, (long)10}), (std::vector<long>)std::vector<long>({(long)15}), (std::vector<long>)std::vector<long>({(long)19}), (std::vector<long>)std::vector<long>({(long)18, (long)18}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)26, (long)26}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)18}), (std::vector<long>)std::vector<long>({(long)10})})));\n    assert(candidate((std::any({(std::string)\"a\", (std::string)\"a\", (std::string)\"b\", (std::string)\"c\", (std::string)\"d\", (std::string)\"d\"}))) == (std::any({(std::vector<std::string>)std::vector<std::string>({(std::string)\"a\", (std::string)\"a\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"b\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"c\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"d\", (std::string)\"d\"})})));\n}\n",
      "timestamp": 1665510437,
      "stdout": "",
      "stderr": "/tmp/tmp6a5kikx3.cpp: In function \u2018std::any pack_consecutive_duplicates(std::any)\u2019:\n/tmp/tmp6a5kikx3.cpp:70:1: warning: no return statement in function returning non-void [-Wreturn-type]\n   70 | }\n      | ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp6a5kikx3.cpp:2:\n/tmp/tmp6a5kikx3.cpp: In function \u2018int main()\u2019:\n/tmp/tmp6a5kikx3.cpp:73:176: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   73 |     assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n      |                                                                                                                                                                                ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmp6a5kikx3.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>,",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to pack consecutive duplicates of a given list elements into sublists.\nstd::any pack_consecutive_duplicates(std::any list1) {\n    std::any list2;\n    std::any list3;\n    std::any list4;\n    std::any list5;\n    std::any list6;\n    std::any list7;\n    std::any list8;\n    std::any list9;\n    std::any list10;\n    std::any list11;\n    std::any list12;\n    std::any list13;\n    std::any list14;\n    std::any list15;\n    std::any list16;\n    std::any list17;\n    std::any list18;\n    std::any list19;\n    std::any list20;\n    std::any list21;\n    std::any list22;\n    std::any list23;\n    std::any list24;\n    std::any list25;\n    std::any list26;\n    std::any list27;\n    std::any list28;\n    std::any list29;\n    std::any list30;\n    std::any list31;\n    std::any list32;\n    std::any list33;\n    std::any list34;\n    std::any list35;\n    std::any list36;\n    std::any list37;\n    std::any list38;\n    std::any list39;\n    std::any list40;\n    std::any list41;\n    std::any list42;\n    std::any list43;\n    std::any list44;\n    std::any list45;\n    std::any list46;\n    std::any list47;\n    std::any list48;\n    std::any list49;\n    std::any list50;\n    std::any list51;\n    std::any list52;\n    std::any list53;\n    std::any list54;\n    std::any list55;\n    std::any list56;\n    std::any list57;\n    std::any list58;\n    std::any list59;\n    std::any list60;\n    std::any list61;\n    std::any list62;\n    std::any list63;\n    std::any list64;\n    std::any list65;\n}\nint main() {\n    auto candidate = pack_consecutive_duplicates;\n    assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n    assert(candidate((std::any({(long)10, (long)10, (long)15, (long)19, (long)18, (long)18, (long)17, (long)26, (long)26, (long)17, (long)18, (long)10}))) == (std::any({(std::vector<long>)std::vector<long>({(long)10, (long)10}), (std::vector<long>)std::vector<long>({(long)15}), (std::vector<long>)std::vector<long>({(long)19}), (std::vector<long>)std::vector<long>({(long)18, (long)18}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)26, (long)26}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)18}), (std::vector<long>)std::vector<long>({(long)10})})));\n    assert(candidate((std::any({(std::string)\"a\", (std::string)\"a\", (std::string)\"b\", (std::string)\"c\", (std::string)\"d\", (std::string)\"d\"}))) == (std::any({(std::vector<std::string>)std::vector<std::string>({(std::string)\"a\", (std::string)\"a\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"b\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"c\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"d\", (std::string)\"d\"})})));\n}\n",
      "timestamp": 1665510437,
      "stdout": "",
      "stderr": "/tmp/tmpgspun4wj.cpp: In function \u2018std::any pack_consecutive_duplicates(std::any)\u2019:\n/tmp/tmpgspun4wj.cpp:69:1: warning: no return statement in function returning non-void [-Wreturn-type]\n   69 | }\n      | ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpgspun4wj.cpp:2:\n/tmp/tmpgspun4wj.cpp: In function \u2018int main()\u2019:\n/tmp/tmpgspun4wj.cpp:72:176: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   72 |     assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n      |                                                                                                                                                                                ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpgspun4wj.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>,",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to pack consecutive duplicates of a given list elements into sublists.\nstd::any pack_consecutive_duplicates(std::any list1) {\n    std::any list2;\n    std::any temp;\n    std::any::iterator it;\n    std::any::iterator it1;\n    it1 = list1.begin();\n    while (it1 != list1.end()) {\n        temp.push_back(*it1);\n        it = it1 + 1;\n        while (it != list1.end() && *it == *it1) {\n            temp.push_back(*it);\n            it++;\n        }\n        list2.push_back(temp);\n        temp.clear();\n        it1 = it;\n    }\n    return list2;\n}\nint main() {\n    auto candidate = pack_consecutive_duplicates;\n    assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n    assert(candidate((std::any({(long)10, (long)10, (long)15, (long)19, (long)18, (long)18, (long)17, (long)26, (long)26, (long)17, (long)18, (long)10}))) == (std::any({(std::vector<long>)std::vector<long>({(long)10, (long)10}), (std::vector<long>)std::vector<long>({(long)15}), (std::vector<long>)std::vector<long>({(long)19}), (std::vector<long>)std::vector<long>({(long)18, (long)18}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)26, (long)26}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)18}), (std::vector<long>)std::vector<long>({(long)10})})));\n    assert(candidate((std::any({(std::string)\"a\", (std::string)\"a\", (std::string)\"b\", (std::string)\"c\", (std::string)\"d\", (std::string)\"d\"}))) == (std::any({(std::vector<std::string>)std::vector<std::string>({(std::string)\"a\", (std::string)\"a\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"b\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"c\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"d\", (std::string)\"d\"})})));\n}\n",
      "timestamp": 1666123397,
      "stdout": "",
      "stderr": "/tmp/tmpzb6o_w99.cpp: In function \u2018std::any pack_consecutive_duplicates(std::any)\u2019:\n/tmp/tmpzb6o_w99.cpp:7:15: error: \u2018iterator\u2019 is not a member of \u2018std::any\u2019\n    7 |     std::any::iterator it;\n      |               ^~~~~~~~\n/tmp/tmpzb6o_w99.cpp:8:15: error: \u2018iterator\u2019 is not a member of \u2018std::any\u2019\n    8 |     std::any::iterator it1;\n      |               ^~~~~~~~\n/tmp/tmpzb6o_w99.cpp:9:5: error: \u2018it1\u2019 was not declared in this scope; did you mean \u2018list1\u2019?\n    9 |     it1 = list1.begin();\n      |     ^~~\n      |     list1\n/tmp/tmpzb6o_w99.cpp:9:17: error: \u2018class std::any\u2019 has no member named \u2018begin\u2019\n    9 |     it1 = list1.begin();\n      |                 ^~~~~\n/tmp/tmpzb6o_w99.cpp:10:25: error: \u2018class std::any\u2019 has no member named \u2018end\u2019\n   10 |     while (it1 != list1.end()) {\n      |                         ^~~\n/tmp/tmpzb6o_w99.cpp:11:14: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   11 |         temp.push_back(*it1);\n      |              ^~~~~~~~~\n/tmp/tmpzb6o_w99.cpp:12:9: error: \u2018it\u2019 was not declared in this scope; did you mean \u2018int\u2019?\n   12 |         it = it1 + 1;\n      |         ^~\n      |         int\n/tmp/tmpzb6o_w99.cpp:13:28: error: \u2018class std::any\u2019 has no member named \u2018end\u2019\n   13 |         while (it != list1.end() && *it == *it1) {\n      |                            ^~~\n/tmp/tmpzb6o_w99.cpp:14:18: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   14 |             temp.push_back(*it);\n      |                  ^~~~~~~~~\n/tmp/tmpzb6o_w99.cpp:17:15: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   17 |         list2.push_back(temp);\n      |               ^~~~~~~~~\n/tmp/tmpzb6o_w99.cpp:18:14: error: \u2018class std::any\u2019 has no member named \u2018clear\u2019\n   18 |         temp.clear();\n      |              ^~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to pack consecutive duplicates of a given list elements into sublists.\nstd::any pack_consecutive_duplicates(std::any list1) {\n    std::any list2;\n    std::any temp;\n    while(!list1.empty()) {\n        temp.push_back(list1.front());\n        list1.pop_front();\n        while(!list1.empty() && list1.front() == temp.back()) {\n            temp.push_back(list1.front());\n            list1.pop_front();\n        }\n        list2.push_back(temp);\n        temp.clear();\n    }\n    return list2;\n}\nint main() {\n    auto candidate = pack_consecutive_duplicates;\n    assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n    assert(candidate((std::any({(long)10, (long)10, (long)15, (long)19, (long)18, (long)18, (long)17, (long)26, (long)26, (long)17, (long)18, (long)10}))) == (std::any({(std::vector<long>)std::vector<long>({(long)10, (long)10}), (std::vector<long>)std::vector<long>({(long)15}), (std::vector<long>)std::vector<long>({(long)19}), (std::vector<long>)std::vector<long>({(long)18, (long)18}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)26, (long)26}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)18}), (std::vector<long>)std::vector<long>({(long)10})})));\n    assert(candidate((std::any({(std::string)\"a\", (std::string)\"a\", (std::string)\"b\", (std::string)\"c\", (std::string)\"d\", (std::string)\"d\"}))) == (std::any({(std::vector<std::string>)std::vector<std::string>({(std::string)\"a\", (std::string)\"a\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"b\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"c\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"d\", (std::string)\"d\"})})));\n}\n",
      "timestamp": 1666123398,
      "stdout": "",
      "stderr": "/tmp/tmp467t8ylq.cpp: In function \u2018std::any pack_consecutive_duplicates(std::any)\u2019:\n/tmp/tmp467t8ylq.cpp:7:18: error: \u2018class std::any\u2019 has no member named \u2018empty\u2019\n    7 |     while(!list1.empty()) {\n      |                  ^~~~~\n/tmp/tmp467t8ylq.cpp:8:14: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n    8 |         temp.push_back(list1.front());\n      |              ^~~~~~~~~\n/tmp/tmp467t8ylq.cpp:8:30: error: \u2018class std::any\u2019 has no member named \u2018front\u2019\n    8 |         temp.push_back(list1.front());\n      |                              ^~~~~\n/tmp/tmp467t8ylq.cpp:9:15: error: \u2018class std::any\u2019 has no member named \u2018pop_front\u2019\n    9 |         list1.pop_front();\n      |               ^~~~~~~~~\n/tmp/tmp467t8ylq.cpp:10:22: error: \u2018class std::any\u2019 has no member named \u2018empty\u2019\n   10 |         while(!list1.empty() && list1.front() == temp.back()) {\n      |                      ^~~~~\n/tmp/tmp467t8ylq.cpp:10:39: error: \u2018class std::any\u2019 has no member named \u2018front\u2019\n   10 |         while(!list1.empty() && list1.front() == temp.back()) {\n      |                                       ^~~~~\n/tmp/tmp467t8ylq.cpp:10:55: error: \u2018class std::any\u2019 has no member named \u2018back\u2019\n   10 |         while(!list1.empty() && list1.front() == temp.back()) {\n      |                                                       ^~~~\n/tmp/tmp467t8ylq.cpp:11:18: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   11 |             temp.push_back(list1.front());\n      |                  ^~~~~~~~~\n/tmp/tmp467t8ylq.cpp:11:34: error: \u2018class std::any\u2019 has no member named \u2018front\u2019\n   11 |             temp.push_back(list1.front());\n      |                                  ^~~~~\n/tmp/tmp467t8ylq.cpp:12:19: error: \u2018class std::any\u2019 has no member named \u2018pop_front\u2019\n   12 |             list1.pop_front();\n      |                   ^~~~~~~~~\n/tmp/tmp467t8ylq.cpp:14:15: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   14 |         list2.push_back(temp);\n      |",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to pack consecutive duplicates of a given list elements into sublists.\nstd::any pack_consecutive_duplicates(std::any list1) {\n  std::any list2;\n  std::any temp;\n  std::any temp2;\n  std::any temp3;\n  std::any temp4;\n  std::any temp5;\n  std::any temp6;\n  std::any temp7;\n  std::any temp8;\n  std::any temp9;\n  std::any temp10;\n  std::any temp11;\n  std::any temp12;\n  std::any temp13;\n  std::any temp14;\n  std::any temp15;\n  std::any temp16;\n  std::any temp17;\n  std::any temp18;\n  std::any temp19;\n  std::any temp20;\n  std::any temp21;\n  std::any temp22;\n  std::any temp23;\n  std::any temp24;\n  std::any temp25;\n  std::any temp26;\n  std::any temp27;\n  std::any temp28;\n  std::any temp29;\n  std::any temp30;\n  std::any temp31;\n  std::any temp32;\n  std::any temp33;\n  std::any temp34;\n  std::any temp35;\n  std::any temp36;\n  std::any temp37;\n  std::any temp38;\n  std::any temp39;\n  std::any temp40;\n  std::any temp41;\n  std::any temp42;\n  std::any temp43;\n  std::any temp44;\n  std::any temp45;\n  std::any temp46;\n  std::any temp47;\n  std::any temp48;\n  std::any temp49;\n  std::any temp50;\n  std::any temp51;\n  std::any temp52;\n  std::any temp53;\n  std::any temp54;\n  std::any temp55;\n  std::any temp56;\n  std::any temp57;\n  std::any temp58;\n  std::any temp59;\n  std::any temp60;\n  std::any temp61;\n  std::any temp62;\n  std::any temp63;\n\n}\nint main() {\n    auto candidate = pack_consecutive_duplicates;\n    assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n    assert(candidate((std::any({(long)10, (long)10, (long)15, (long)19, (long)18, (long)18, (long)17, (long)26, (long)26, (long)17, (long)18, (long)10}))) == (std::any({(std::vector<long>)std::vector<long>({(long)10, (long)10}), (std::vector<long>)std::vector<long>({(long)15}), (std::vector<long>)std::vector<long>({(long)19}), (std::vector<long>)std::vector<long>({(long)18, (long)18}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)26, (long)26}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)18}), (std::vector<long>)std::vector<long>({(long)10})})));\n    assert(candidate((std::any({(std::string)\"a\", (std::string)\"a\", (std::string)\"b\", (std::string)\"c\", (std::string)\"d\", (std::string)\"d\"}))) == (std::any({(std::vector<std::string>)std::vector<std::string>({(std::string)\"a\", (std::string)\"a\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"b\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"c\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"d\", (std::string)\"d\"})})));\n}\n",
      "timestamp": 1665510437,
      "stdout": "",
      "stderr": "/tmp/tmpcbajqnq3.cpp: In function \u2018std::any pack_consecutive_duplicates(std::any)\u2019:\n/tmp/tmpcbajqnq3.cpp:70:1: warning: no return statement in function returning non-void [-Wreturn-type]\n   70 | }\n      | ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpcbajqnq3.cpp:2:\n/tmp/tmpcbajqnq3.cpp: In function \u2018int main()\u2019:\n/tmp/tmpcbajqnq3.cpp:73:176: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   73 |     assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n      |                                                                                                                                                                                ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpcbajqnq3.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>,",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to pack consecutive duplicates of a given list elements into sublists.\nstd::any pack_consecutive_duplicates(std::any list1) {\n  std::any list2;\n  std::any temp;\n  std::any temp2;\n  std::any temp3;\n  std::any temp4;\n  std::any temp5;\n  std::any temp6;\n  std::any temp7;\n  std::any temp8;\n  std::any temp9;\n  std::any temp10;\n  std::any temp11;\n  std::any temp12;\n  std::any temp13;\n  std::any temp14;\n  std::any temp15;\n  std::any temp16;\n  std::any temp17;\n  std::any temp18;\n  std::any temp19;\n  std::any temp20;\n  std::any temp21;\n  std::any temp22;\n  std::any temp23;\n  std::any temp24;\n  std::any temp25;\n  std::any temp26;\n  std::any temp27;\n  std::any temp28;\n  std::any temp29;\n  std::any temp30;\n  std::any temp31;\n  std::any temp32;\n  std::any temp33;\n  std::any temp34;\n  std::any temp35;\n  std::any temp36;\n  std::any temp37;\n  std::any temp38;\n  std::any temp39;\n  std::any temp40;\n  std::any temp41;\n  std::any temp42;\n  std::any temp43;\n  std::any temp44;\n  std::any temp45;\n  std::any temp46;\n  std::any temp47;\n  std::any temp48;\n  std::any temp49;\n  std::any temp50;\n  std::any temp51;\n  std::any temp52;\n  std::any temp53;\n  std::any temp54;\n  std::any temp55;\n  std::any temp56;\n  std::any temp57;\n  std::any temp58;\n  std::any temp59;\n  std::any temp60;\n  std::any temp61;\n  std::any temp62;\n  std::any temp63;\n\n}\nint main() {\n    auto candidate = pack_consecutive_duplicates;\n    assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n    assert(candidate((std::any({(long)10, (long)10, (long)15, (long)19, (long)18, (long)18, (long)17, (long)26, (long)26, (long)17, (long)18, (long)10}))) == (std::any({(std::vector<long>)std::vector<long>({(long)10, (long)10}), (std::vector<long>)std::vector<long>({(long)15}), (std::vector<long>)std::vector<long>({(long)19}), (std::vector<long>)std::vector<long>({(long)18, (long)18}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)26, (long)26}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)18}), (std::vector<long>)std::vector<long>({(long)10})})));\n    assert(candidate((std::any({(std::string)\"a\", (std::string)\"a\", (std::string)\"b\", (std::string)\"c\", (std::string)\"d\", (std::string)\"d\"}))) == (std::any({(std::vector<std::string>)std::vector<std::string>({(std::string)\"a\", (std::string)\"a\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"b\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"c\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"d\", (std::string)\"d\"})})));\n}\n",
      "timestamp": 1665510437,
      "stdout": "",
      "stderr": "/tmp/tmpcbajqnq3.cpp: In function \u2018std::any pack_consecutive_duplicates(std::any)\u2019:\n/tmp/tmpcbajqnq3.cpp:70:1: warning: no return statement in function returning non-void [-Wreturn-type]\n   70 | }\n      | ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpcbajqnq3.cpp:2:\n/tmp/tmpcbajqnq3.cpp: In function \u2018int main()\u2019:\n/tmp/tmpcbajqnq3.cpp:73:176: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   73 |     assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n      |                                                                                                                                                                                ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpcbajqnq3.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>,",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to pack consecutive duplicates of a given list elements into sublists.\nstd::any pack_consecutive_duplicates(std::any list1) {\n    std::any list2;\n    std::any temp;\n    std::any::iterator it = list1.begin();\n    while(it != list1.end()) {\n        int count = 0;\n        temp.clear();\n        while(it != list1.end() && *it == *(it+1)) {\n            temp.push_back(*it);\n            count++;\n            it++;\n        }\n        if(count == 0) {\n            temp.push_back(*it);\n            it++;\n        }\n        list2.push_back(temp);\n    }\n    return list2;\n}\nint main() {\n    auto candidate = pack_consecutive_duplicates;\n    assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n    assert(candidate((std::any({(long)10, (long)10, (long)15, (long)19, (long)18, (long)18, (long)17, (long)26, (long)26, (long)17, (long)18, (long)10}))) == (std::any({(std::vector<long>)std::vector<long>({(long)10, (long)10}), (std::vector<long>)std::vector<long>({(long)15}), (std::vector<long>)std::vector<long>({(long)19}), (std::vector<long>)std::vector<long>({(long)18, (long)18}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)26, (long)26}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)18}), (std::vector<long>)std::vector<long>({(long)10})})));\n    assert(candidate((std::any({(std::string)\"a\", (std::string)\"a\", (std::string)\"b\", (std::string)\"c\", (std::string)\"d\", (std::string)\"d\"}))) == (std::any({(std::vector<std::string>)std::vector<std::string>({(std::string)\"a\", (std::string)\"a\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"b\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"c\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"d\", (std::string)\"d\"})})));\n}\n",
      "timestamp": 1666123398,
      "stdout": "",
      "stderr": "/tmp/tmpf5y1u9pu.cpp: In function \u2018std::any pack_consecutive_duplicates(std::any)\u2019:\n/tmp/tmpf5y1u9pu.cpp:7:15: error: \u2018iterator\u2019 is not a member of \u2018std::any\u2019\n    7 |     std::any::iterator it = list1.begin();\n      |               ^~~~~~~~\n/tmp/tmpf5y1u9pu.cpp:8:11: error: \u2018it\u2019 was not declared in this scope; did you mean \u2018int\u2019?\n    8 |     while(it != list1.end()) {\n      |           ^~\n      |           int\n/tmp/tmpf5y1u9pu.cpp:8:23: error: \u2018class std::any\u2019 has no member named \u2018end\u2019\n    8 |     while(it != list1.end()) {\n      |                       ^~~\n/tmp/tmpf5y1u9pu.cpp:10:14: error: \u2018class std::any\u2019 has no member named \u2018clear\u2019\n   10 |         temp.clear();\n      |              ^~~~~\n/tmp/tmpf5y1u9pu.cpp:11:27: error: \u2018class std::any\u2019 has no member named \u2018end\u2019\n   11 |         while(it != list1.end() && *it == *(it+1)) {\n      |                           ^~~\n/tmp/tmpf5y1u9pu.cpp:12:18: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   12 |             temp.push_back(*it);\n      |                  ^~~~~~~~~\n/tmp/tmpf5y1u9pu.cpp:17:18: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   17 |             temp.push_back(*it);\n      |                  ^~~~~~~~~\n/tmp/tmpf5y1u9pu.cpp:20:15: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   20 |         list2.push_back(temp);\n      |               ^~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpf5y1u9pu.cpp:2:\n/tmp/tmpf5y1u9pu.cpp: In function \u2018int main()\u2019:\n/tmp/tmpf5y1u9pu.cpp:26:176: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   26 |     assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to pack consecutive duplicates of a given list elements into sublists.\nstd::any pack_consecutive_duplicates(std::any list1) {\n    std::any list2;\n    std::any temp;\n    std::any temp2;\n    std::any temp3;\n    std::any temp4;\n    std::any temp5;\n    std::any temp6;\n    std::any temp7;\n    std::any temp8;\n    std::any temp9;\n    std::any temp10;\n    std::any temp11;\n    std::any temp12;\n    std::any temp13;\n    std::any temp14;\n    std::any temp15;\n    std::any temp16;\n    std::any temp17;\n    std::any temp18;\n    std::any temp19;\n    std::any temp20;\n    std::any temp21;\n    std::any temp22;\n    std::any temp23;\n    std::any temp24;\n    std::any temp25;\n    std::any temp26;\n    std::any temp27;\n    std::any temp28;\n    std::any temp29;\n    std::any temp30;\n    std::any temp31;\n    std::any temp32;\n    std::any temp33;\n    std::any temp34;\n    std::any temp35;\n    std::any temp36;\n    std::any temp37;\n    std::any temp38;\n    std::any temp39;\n    std::any temp40;\n    std::any temp41;\n    std::any temp42;\n    std::any temp43;\n    std::any temp44;\n    std::any temp45;\n    std::any temp46;\n    std::any temp47;\n    std::any temp48;\n    std::any temp49;\n    std::any temp50;\n    std::any temp51;\n    std::any temp52;\n    std::any temp53;\n    std::any temp54;\n    std::any temp55;\n    std::any temp56;\n    std::any temp57;\n    std::any temp58;\n    std::any temp59;\n    std::any temp60;\n    std::any temp61;\n    std::any temp62;\n    std::any temp63;\n\n}\nint main() {\n    auto candidate = pack_consecutive_duplicates;\n    assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n    assert(candidate((std::any({(long)10, (long)10, (long)15, (long)19, (long)18, (long)18, (long)17, (long)26, (long)26, (long)17, (long)18, (long)10}))) == (std::any({(std::vector<long>)std::vector<long>({(long)10, (long)10}), (std::vector<long>)std::vector<long>({(long)15}), (std::vector<long>)std::vector<long>({(long)19}), (std::vector<long>)std::vector<long>({(long)18, (long)18}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)26, (long)26}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)18}), (std::vector<long>)std::vector<long>({(long)10})})));\n    assert(candidate((std::any({(std::string)\"a\", (std::string)\"a\", (std::string)\"b\", (std::string)\"c\", (std::string)\"d\", (std::string)\"d\"}))) == (std::any({(std::vector<std::string>)std::vector<std::string>({(std::string)\"a\", (std::string)\"a\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"b\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"c\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"d\", (std::string)\"d\"})})));\n}\n",
      "timestamp": 1665510437,
      "stdout": "",
      "stderr": "/tmp/tmp996xkpjp.cpp: In function \u2018std::any pack_consecutive_duplicates(std::any)\u2019:\n/tmp/tmp996xkpjp.cpp:70:1: warning: no return statement in function returning non-void [-Wreturn-type]\n   70 | }\n      | ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp996xkpjp.cpp:2:\n/tmp/tmp996xkpjp.cpp: In function \u2018int main()\u2019:\n/tmp/tmp996xkpjp.cpp:73:176: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   73 |     assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n      |                                                                                                                                                                                ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmp996xkpjp.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>,",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to pack consecutive duplicates of a given list elements into sublists.\nstd::any pack_consecutive_duplicates(std::any list1) {\n    std::any list2;\n    std::any temp;\n    std::any temp1;\n    std::any temp2;\n    std::any temp3;\n    std::any temp4;\n    std::any temp5;\n    std::any temp6;\n    std::any temp7;\n    std::any temp8;\n    std::any temp9;\n    std::any temp10;\n    std::any temp11;\n    std::any temp12;\n    std::any temp13;\n    std::any temp14;\n    std::any temp15;\n    std::any temp16;\n    std::any temp17;\n    std::any temp18;\n    std::any temp19;\n    std::any temp20;\n    std::any temp21;\n    std::any temp22;\n    std::any temp23;\n    std::any temp24;\n    std::any temp25;\n    std::any temp26;\n    std::any temp27;\n    std::any temp28;\n    std::any temp29;\n    std::any temp30;\n    std::any temp31;\n    std::any temp32;\n    std::any temp33;\n    std::any temp34;\n    std::any temp35;\n    std::any temp36;\n    std::any temp37;\n    std::any temp38;\n    std::any temp39;\n    std::any temp40;\n    std::any temp41;\n    std::any temp42;\n    std::any temp43;\n    std::any temp44;\n    std::any temp45;\n    std::any temp46;\n    std::any temp47;\n    std::any temp48;\n    std::any temp49;\n    std::any temp50;\n    std::any temp51;\n    std::any temp52;\n    std::any temp53;\n    std::any temp54;\n    std::any temp55;\n    std::any temp56;\n    std::any temp57;\n    std::any temp58;\n    std::any temp59;\n    std::any temp60;\n    std::any temp61;\n    std::any temp62;\n\n}\nint main() {\n    auto candidate = pack_consecutive_duplicates;\n    assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n    assert(candidate((std::any({(long)10, (long)10, (long)15, (long)19, (long)18, (long)18, (long)17, (long)26, (long)26, (long)17, (long)18, (long)10}))) == (std::any({(std::vector<long>)std::vector<long>({(long)10, (long)10}), (std::vector<long>)std::vector<long>({(long)15}), (std::vector<long>)std::vector<long>({(long)19}), (std::vector<long>)std::vector<long>({(long)18, (long)18}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)26, (long)26}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)18}), (std::vector<long>)std::vector<long>({(long)10})})));\n    assert(candidate((std::any({(std::string)\"a\", (std::string)\"a\", (std::string)\"b\", (std::string)\"c\", (std::string)\"d\", (std::string)\"d\"}))) == (std::any({(std::vector<std::string>)std::vector<std::string>({(std::string)\"a\", (std::string)\"a\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"b\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"c\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"d\", (std::string)\"d\"})})));\n}\n",
      "timestamp": 1665510437,
      "stdout": "",
      "stderr": "/tmp/tmp6a5kikx3.cpp: In function \u2018std::any pack_consecutive_duplicates(std::any)\u2019:\n/tmp/tmp6a5kikx3.cpp:70:1: warning: no return statement in function returning non-void [-Wreturn-type]\n   70 | }\n      | ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp6a5kikx3.cpp:2:\n/tmp/tmp6a5kikx3.cpp: In function \u2018int main()\u2019:\n/tmp/tmp6a5kikx3.cpp:73:176: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   73 |     assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n      |                                                                                                                                                                                ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmp6a5kikx3.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>,",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to pack consecutive duplicates of a given list elements into sublists.\nstd::any pack_consecutive_duplicates(std::any list1) {\n    std::any new_list;\n    std::any temp;\n    std::any temp1;\n    std::any temp2;\n    std::any temp3;\n    std::any temp4;\n    std::any temp5;\n    std::any temp6;\n    std::any temp7;\n    std::any temp8;\n    std::any temp9;\n    std::any temp10;\n    std::any temp11;\n    std::any temp12;\n    std::any temp13;\n    std::any temp14;\n    std::any temp15;\n    std::any temp16;\n    std::any temp17;\n    std::any temp18;\n    std::any temp19;\n    std::any temp20;\n    std::any temp21;\n    std::any temp22;\n    std::any temp23;\n    std::any temp24;\n    std::any temp25;\n    std::any temp26;\n    std::any temp27;\n    std::any temp28;\n    std::any temp29;\n    std::any temp30;\n    std::any temp31;\n    std::any temp32;\n    std::any temp33;\n    std::any temp34;\n    std::any temp35;\n    std::any temp36;\n    std::any temp37;\n    std::any temp38;\n    std::any temp39;\n    std::any temp40;\n    std::any temp41;\n    std::any temp42;\n    std::any temp43;\n    std::any temp44;\n    std::any temp45;\n    std::any temp46;\n    std::any temp47;\n    std::any temp48;\n    std::any temp49;\n    std::any temp50;\n    std::any temp51;\n    std::any temp52;\n    std::any temp53;\n    std::any temp54;\n    std::any temp55;\n    std::any temp56;\n    std::any temp57;\n    std::any temp58;\n    std::any temp59;\n    std::any temp60;\n    std::any temp61;\n    std::any temp62;\n}\nint main() {\n    auto candidate = pack_consecutive_duplicates;\n    assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n    assert(candidate((std::any({(long)10, (long)10, (long)15, (long)19, (long)18, (long)18, (long)17, (long)26, (long)26, (long)17, (long)18, (long)10}))) == (std::any({(std::vector<long>)std::vector<long>({(long)10, (long)10}), (std::vector<long>)std::vector<long>({(long)15}), (std::vector<long>)std::vector<long>({(long)19}), (std::vector<long>)std::vector<long>({(long)18, (long)18}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)26, (long)26}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)18}), (std::vector<long>)std::vector<long>({(long)10})})));\n    assert(candidate((std::any({(std::string)\"a\", (std::string)\"a\", (std::string)\"b\", (std::string)\"c\", (std::string)\"d\", (std::string)\"d\"}))) == (std::any({(std::vector<std::string>)std::vector<std::string>({(std::string)\"a\", (std::string)\"a\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"b\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"c\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"d\", (std::string)\"d\"})})));\n}\n",
      "timestamp": 1666123400,
      "stdout": "",
      "stderr": "/tmp/tmpsn4opiqn.cpp: In function \u2018std::any pack_consecutive_duplicates(std::any)\u2019:\n/tmp/tmpsn4opiqn.cpp:69:1: warning: no return statement in function returning non-void [-Wreturn-type]\n   69 | }\n      | ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpsn4opiqn.cpp:2:\n/tmp/tmpsn4opiqn.cpp: In function \u2018int main()\u2019:\n/tmp/tmpsn4opiqn.cpp:72:176: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   72 |     assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n      |                                                                                                                                                                                ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpsn4opiqn.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>,",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to pack consecutive duplicates of a given list elements into sublists.\nstd::any pack_consecutive_duplicates(std::any list1) {\n    std::any list2;\n    std::any list3;\n    std::any list4;\n    std::any list5;\n    std::any list6;\n    std::any list7;\n    std::any list8;\n    std::any list9;\n    std::any list10;\n    std::any list11;\n    std::any list12;\n    std::any list13;\n    std::any list14;\n    std::any list15;\n    std::any list16;\n    std::any list17;\n    std::any list18;\n    std::any list19;\n    std::any list20;\n    std::any list21;\n    std::any list22;\n    std::any list23;\n    std::any list24;\n    std::any list25;\n    std::any list26;\n    std::any list27;\n    std::any list28;\n    std::any list29;\n    std::any list30;\n    std::any list31;\n    std::any list32;\n    std::any list33;\n    std::any list34;\n    std::any list35;\n    std::any list36;\n    std::any list37;\n    std::any list38;\n    std::any list39;\n    std::any list40;\n    std::any list41;\n    std::any list42;\n    std::any list43;\n    std::any list44;\n    std::any list45;\n    std::any list46;\n    std::any list47;\n    std::any list48;\n    std::any list49;\n    std::any list50;\n    std::any list51;\n    std::any list52;\n    std::any list53;\n    std::any list54;\n    std::any list55;\n    std::any list56;\n    std::any list57;\n    std::any list58;\n    std::any list59;\n    std::any list60;\n    std::any list61;\n    std::any list62;\n    std::any list63;\n    std::any list64;\n    std::any list65;\n}\nint main() {\n    auto candidate = pack_consecutive_duplicates;\n    assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n    assert(candidate((std::any({(long)10, (long)10, (long)15, (long)19, (long)18, (long)18, (long)17, (long)26, (long)26, (long)17, (long)18, (long)10}))) == (std::any({(std::vector<long>)std::vector<long>({(long)10, (long)10}), (std::vector<long>)std::vector<long>({(long)15}), (std::vector<long>)std::vector<long>({(long)19}), (std::vector<long>)std::vector<long>({(long)18, (long)18}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)26, (long)26}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)18}), (std::vector<long>)std::vector<long>({(long)10})})));\n    assert(candidate((std::any({(std::string)\"a\", (std::string)\"a\", (std::string)\"b\", (std::string)\"c\", (std::string)\"d\", (std::string)\"d\"}))) == (std::any({(std::vector<std::string>)std::vector<std::string>({(std::string)\"a\", (std::string)\"a\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"b\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"c\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"d\", (std::string)\"d\"})})));\n}\n",
      "timestamp": 1665510437,
      "stdout": "",
      "stderr": "/tmp/tmpgspun4wj.cpp: In function \u2018std::any pack_consecutive_duplicates(std::any)\u2019:\n/tmp/tmpgspun4wj.cpp:69:1: warning: no return statement in function returning non-void [-Wreturn-type]\n   69 | }\n      | ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpgspun4wj.cpp:2:\n/tmp/tmpgspun4wj.cpp: In function \u2018int main()\u2019:\n/tmp/tmpgspun4wj.cpp:72:176: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   72 |     assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n      |                                                                                                                                                                                ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpgspun4wj.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>,",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to pack consecutive duplicates of a given list elements into sublists.\nstd::any pack_consecutive_duplicates(std::any list1) {\n    std::any list2;\n    std::any temp;\n    int i = 0;\n    while(i < list1.size()) {\n        temp.push_back(list1[i]);\n        while(i < list1.size() && list1[i] == list1[i+1]) {\n            temp.push_back(list1[i+1]);\n            i++;\n        }\n        list2.push_back(temp);\n        temp.clear();\n        i++;\n    }\n    return list2;\n}\nint main() {\n    auto candidate = pack_consecutive_duplicates;\n    assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n    assert(candidate((std::any({(long)10, (long)10, (long)15, (long)19, (long)18, (long)18, (long)17, (long)26, (long)26, (long)17, (long)18, (long)10}))) == (std::any({(std::vector<long>)std::vector<long>({(long)10, (long)10}), (std::vector<long>)std::vector<long>({(long)15}), (std::vector<long>)std::vector<long>({(long)19}), (std::vector<long>)std::vector<long>({(long)18, (long)18}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)26, (long)26}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)18}), (std::vector<long>)std::vector<long>({(long)10})})));\n    assert(candidate((std::any({(std::string)\"a\", (std::string)\"a\", (std::string)\"b\", (std::string)\"c\", (std::string)\"d\", (std::string)\"d\"}))) == (std::any({(std::vector<std::string>)std::vector<std::string>({(std::string)\"a\", (std::string)\"a\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"b\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"c\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"d\", (std::string)\"d\"})})));\n}\n",
      "timestamp": 1666123400,
      "stdout": "",
      "stderr": "/tmp/tmpkn9k8o3c.cpp: In function \u2018std::any pack_consecutive_duplicates(std::any)\u2019:\n/tmp/tmpkn9k8o3c.cpp:8:21: error: \u2018class std::any\u2019 has no member named \u2018size\u2019\n    8 |     while(i < list1.size()) {\n      |                     ^~~~\n/tmp/tmpkn9k8o3c.cpp:9:14: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n    9 |         temp.push_back(list1[i]);\n      |              ^~~~~~~~~\n/tmp/tmpkn9k8o3c.cpp:9:29: error: no match for \u2018operator[]\u2019 (operand types are \u2018std::any\u2019 and \u2018int\u2019)\n    9 |         temp.push_back(list1[i]);\n      |                             ^\n/tmp/tmpkn9k8o3c.cpp:10:25: error: \u2018class std::any\u2019 has no member named \u2018size\u2019\n   10 |         while(i < list1.size() && list1[i] == list1[i+1]) {\n      |                         ^~~~\n/tmp/tmpkn9k8o3c.cpp:10:40: error: no match for \u2018operator[]\u2019 (operand types are \u2018std::any\u2019 and \u2018int\u2019)\n   10 |         while(i < list1.size() && list1[i] == list1[i+1]) {\n      |                                        ^\n/tmp/tmpkn9k8o3c.cpp:10:52: error: no match for \u2018operator[]\u2019 (operand types are \u2018std::any\u2019 and \u2018int\u2019)\n   10 |         while(i < list1.size() && list1[i] == list1[i+1]) {\n      |                                                    ^\n/tmp/tmpkn9k8o3c.cpp:11:18: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   11 |             temp.push_back(list1[i+1]);\n      |                  ^~~~~~~~~\n/tmp/tmpkn9k8o3c.cpp:11:33: error: no match for \u2018operator[]\u2019 (operand types are \u2018std::any\u2019 and \u2018int\u2019)\n   11 |             temp.push_back(list1[i+1]);\n      |                                 ^\n/tmp/tmpkn9k8o3c.cpp:14:15: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   14 |         list2.push_back(temp);\n      |               ^~~~~~~~~\n/tmp/tmpkn9k8o3c.cpp:15:14: error: \u2018class std::any\u2019 has no member named \u2018clear\u2019\n   15 |         temp.clear();\n      |              ^~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n       ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to pack consecutive duplicates of a given list elements into sublists.\nstd::any pack_consecutive_duplicates(std::any list1) {\n    std::any list2;\n    std::any list3;\n    std::any list4;\n    std::any list5;\n    std::any list6;\n    std::any list7;\n    std::any list8;\n    std::any list9;\n    std::any list10;\n    std::any list11;\n    std::any list12;\n    std::any list13;\n    std::any list14;\n    std::any list15;\n    std::any list16;\n    std::any list17;\n    std::any list18;\n    std::any list19;\n    std::any list20;\n    std::any list21;\n    std::any list22;\n    std::any list23;\n    std::any list24;\n    std::any list25;\n    std::any list26;\n    std::any list27;\n    std::any list28;\n    std::any list29;\n    std::any list30;\n    std::any list31;\n    std::any list32;\n    std::any list33;\n    std::any list34;\n    std::any list35;\n    std::any list36;\n    std::any list37;\n    std::any list38;\n    std::any list39;\n    std::any list40;\n    std::any list41;\n    std::any list42;\n    std::any list43;\n    std::any list44;\n    std::any list45;\n    std::any list46;\n    std::any list47;\n    std::any list48;\n    std::any list49;\n    std::any list50;\n    std::any list51;\n    std::any list52;\n    std::any list53;\n    std::any list54;\n    std::any list55;\n    std::any list56;\n    std::any list57;\n    std::any list58;\n    std::any list59;\n    std::any list60;\n    std::any list61;\n    std::any list62;\n    std::any list63;\n    std::any list64;\n    std::any list65;\n}\nint main() {\n    auto candidate = pack_consecutive_duplicates;\n    assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n    assert(candidate((std::any({(long)10, (long)10, (long)15, (long)19, (long)18, (long)18, (long)17, (long)26, (long)26, (long)17, (long)18, (long)10}))) == (std::any({(std::vector<long>)std::vector<long>({(long)10, (long)10}), (std::vector<long>)std::vector<long>({(long)15}), (std::vector<long>)std::vector<long>({(long)19}), (std::vector<long>)std::vector<long>({(long)18, (long)18}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)26, (long)26}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)18}), (std::vector<long>)std::vector<long>({(long)10})})));\n    assert(candidate((std::any({(std::string)\"a\", (std::string)\"a\", (std::string)\"b\", (std::string)\"c\", (std::string)\"d\", (std::string)\"d\"}))) == (std::any({(std::vector<std::string>)std::vector<std::string>({(std::string)\"a\", (std::string)\"a\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"b\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"c\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"d\", (std::string)\"d\"})})));\n}\n",
      "timestamp": 1665510437,
      "stdout": "",
      "stderr": "/tmp/tmpgspun4wj.cpp: In function \u2018std::any pack_consecutive_duplicates(std::any)\u2019:\n/tmp/tmpgspun4wj.cpp:69:1: warning: no return statement in function returning non-void [-Wreturn-type]\n   69 | }\n      | ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpgspun4wj.cpp:2:\n/tmp/tmpgspun4wj.cpp: In function \u2018int main()\u2019:\n/tmp/tmpgspun4wj.cpp:72:176: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   72 |     assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n      |                                                                                                                                                                                ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpgspun4wj.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>,",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to pack consecutive duplicates of a given list elements into sublists.\nstd::any pack_consecutive_duplicates(std::any list1) {\n    std::any list2;\n    std::any temp;\n    std::any::iterator it = list1.begin();\n    while (it != list1.end()) {\n        if (temp.empty()) {\n            temp.push_back(*it);\n        } else if (temp.back() == *it) {\n            temp.push_back(*it);\n        } else {\n            list2.push_back(temp);\n            temp.clear();\n            temp.push_back(*it);\n        }\n        it++;\n    }\n    if (!temp.empty()) {\n        list2.push_back(temp);\n    }\n    return list2;\n}\nint main() {\n    auto candidate = pack_consecutive_duplicates;\n    assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n    assert(candidate((std::any({(long)10, (long)10, (long)15, (long)19, (long)18, (long)18, (long)17, (long)26, (long)26, (long)17, (long)18, (long)10}))) == (std::any({(std::vector<long>)std::vector<long>({(long)10, (long)10}), (std::vector<long>)std::vector<long>({(long)15}), (std::vector<long>)std::vector<long>({(long)19}), (std::vector<long>)std::vector<long>({(long)18, (long)18}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)26, (long)26}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)18}), (std::vector<long>)std::vector<long>({(long)10})})));\n    assert(candidate((std::any({(std::string)\"a\", (std::string)\"a\", (std::string)\"b\", (std::string)\"c\", (std::string)\"d\", (std::string)\"d\"}))) == (std::any({(std::vector<std::string>)std::vector<std::string>({(std::string)\"a\", (std::string)\"a\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"b\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"c\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"d\", (std::string)\"d\"})})));\n}\n",
      "timestamp": 1666123400,
      "stdout": "",
      "stderr": "/tmp/tmpslan1ohv.cpp: In function \u2018std::any pack_consecutive_duplicates(std::any)\u2019:\n/tmp/tmpslan1ohv.cpp:7:15: error: \u2018iterator\u2019 is not a member of \u2018std::any\u2019\n    7 |     std::any::iterator it = list1.begin();\n      |               ^~~~~~~~\n/tmp/tmpslan1ohv.cpp:8:12: error: \u2018it\u2019 was not declared in this scope; did you mean \u2018int\u2019?\n    8 |     while (it != list1.end()) {\n      |            ^~\n      |            int\n/tmp/tmpslan1ohv.cpp:8:24: error: \u2018class std::any\u2019 has no member named \u2018end\u2019\n    8 |     while (it != list1.end()) {\n      |                        ^~~\n/tmp/tmpslan1ohv.cpp:9:18: error: \u2018class std::any\u2019 has no member named \u2018empty\u2019\n    9 |         if (temp.empty()) {\n      |                  ^~~~~\n/tmp/tmpslan1ohv.cpp:10:18: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   10 |             temp.push_back(*it);\n      |                  ^~~~~~~~~\n/tmp/tmpslan1ohv.cpp:11:25: error: \u2018class std::any\u2019 has no member named \u2018back\u2019\n   11 |         } else if (temp.back() == *it) {\n      |                         ^~~~\n/tmp/tmpslan1ohv.cpp:12:18: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   12 |             temp.push_back(*it);\n      |                  ^~~~~~~~~\n/tmp/tmpslan1ohv.cpp:14:19: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   14 |             list2.push_back(temp);\n      |                   ^~~~~~~~~\n/tmp/tmpslan1ohv.cpp:15:18: error: \u2018class std::any\u2019 has no member named \u2018clear\u2019\n   15 |             temp.clear();\n      |                  ^~~~~\n/tmp/tmpslan1ohv.cpp:16:18: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   16 |             temp.push_back(*it);\n      |                  ^~~~~~~~~\n/tmp/tmpslan1ohv.cpp:20:15: error: \u2018class std::any\u2019 has no member named \u2018empty\u2019\n   20 |     if (!temp.empty()) {\n      |               ^~~~~\n/tmp/tmpslan1ohv.cpp:21:15: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   21 |         list2.push_back(temp);\n      |         ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to pack consecutive duplicates of a given list elements into sublists.\nstd::any pack_consecutive_duplicates(std::any list1) {\n    std::any list2;\n    std::any temp;\n    std::any::iterator it1 = list1.begin();\n    std::any::iterator it2 = list2.begin();\n    std::any::iterator it3 = temp.begin();\n    while (it1 != list1.end()) {\n        if (it1 == list1.begin()) {\n            temp.push_back(*it1);\n            it1++;\n        } else {\n            if (*it1 == *it3) {\n                temp.push_back(*it1);\n                it1++;\n            } else {\n                list2.push_back(temp);\n                temp.clear();\n                temp.push_back(*it1);\n                it1++;\n            }\n        }\n    }\n    list2.push_back(temp);\n    return list2;\n}\nint main() {\n    auto candidate = pack_consecutive_duplicates;\n    assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n    assert(candidate((std::any({(long)10, (long)10, (long)15, (long)19, (long)18, (long)18, (long)17, (long)26, (long)26, (long)17, (long)18, (long)10}))) == (std::any({(std::vector<long>)std::vector<long>({(long)10, (long)10}), (std::vector<long>)std::vector<long>({(long)15}), (std::vector<long>)std::vector<long>({(long)19}), (std::vector<long>)std::vector<long>({(long)18, (long)18}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)26, (long)26}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)18}), (std::vector<long>)std::vector<long>({(long)10})})));\n    assert(candidate((std::any({(std::string)\"a\", (std::string)\"a\", (std::string)\"b\", (std::string)\"c\", (std::string)\"d\", (std::string)\"d\"}))) == (std::any({(std::vector<std::string>)std::vector<std::string>({(std::string)\"a\", (std::string)\"a\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"b\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"c\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"d\", (std::string)\"d\"})})));\n}\n",
      "timestamp": 1666123400,
      "stdout": "",
      "stderr": "/tmp/tmp_ainlp2_.cpp: In function \u2018std::any pack_consecutive_duplicates(std::any)\u2019:\n/tmp/tmp_ainlp2_.cpp:7:15: error: \u2018iterator\u2019 is not a member of \u2018std::any\u2019\n    7 |     std::any::iterator it1 = list1.begin();\n      |               ^~~~~~~~\n/tmp/tmp_ainlp2_.cpp:8:15: error: \u2018iterator\u2019 is not a member of \u2018std::any\u2019\n    8 |     std::any::iterator it2 = list2.begin();\n      |               ^~~~~~~~\n/tmp/tmp_ainlp2_.cpp:9:15: error: \u2018iterator\u2019 is not a member of \u2018std::any\u2019\n    9 |     std::any::iterator it3 = temp.begin();\n      |               ^~~~~~~~\n/tmp/tmp_ainlp2_.cpp:10:12: error: \u2018it1\u2019 was not declared in this scope; did you mean \u2018list1\u2019?\n   10 |     while (it1 != list1.end()) {\n      |            ^~~\n      |            list1\n/tmp/tmp_ainlp2_.cpp:10:25: error: \u2018class std::any\u2019 has no member named \u2018end\u2019\n   10 |     while (it1 != list1.end()) {\n      |                         ^~~\n/tmp/tmp_ainlp2_.cpp:11:26: error: \u2018class std::any\u2019 has no member named \u2018begin\u2019\n   11 |         if (it1 == list1.begin()) {\n      |                          ^~~~~\n/tmp/tmp_ainlp2_.cpp:12:18: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   12 |             temp.push_back(*it1);\n      |                  ^~~~~~~~~\n/tmp/tmp_ainlp2_.cpp:15:26: error: \u2018it3\u2019 was not declared in this scope\n   15 |             if (*it1 == *it3) {\n      |                          ^~~\n/tmp/tmp_ainlp2_.cpp:16:22: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   16 |                 temp.push_back(*it1);\n      |                      ^~~~~~~~~\n/tmp/tmp_ainlp2_.cpp:19:23: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   19 |                 list2.push_back(temp);\n      |                       ^~~~~~~~~\n/tmp/tmp_ainlp2_.cpp:20:22: error: \u2018class std::any\u2019 has no member named \u2018clear\u2019\n   20 |                 temp.clear();\n      |                      ^~~~~\n/tmp/tmp_ainlp2_.cpp:21:22: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   21 |                 temp.push_back(*it1);\n      |                      ^~~~~~~~~\n/tmp/tmp_ainlp2_.",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to pack consecutive duplicates of a given list elements into sublists.\nstd::any pack_consecutive_duplicates(std::any list1) {\n    std::any list2;\n    std::any temp;\n    int count = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        if (list1[i] == list1[i + 1]) {\n            count++;\n            temp.push_back(list1[i]);\n        } else {\n            temp.push_back(list1[i]);\n            list2.push_back(temp);\n            temp.clear();\n        }\n    }\n    return list2;\n}\nint main() {\n    auto candidate = pack_consecutive_duplicates;\n    assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n    assert(candidate((std::any({(long)10, (long)10, (long)15, (long)19, (long)18, (long)18, (long)17, (long)26, (long)26, (long)17, (long)18, (long)10}))) == (std::any({(std::vector<long>)std::vector<long>({(long)10, (long)10}), (std::vector<long>)std::vector<long>({(long)15}), (std::vector<long>)std::vector<long>({(long)19}), (std::vector<long>)std::vector<long>({(long)18, (long)18}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)26, (long)26}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)18}), (std::vector<long>)std::vector<long>({(long)10})})));\n    assert(candidate((std::any({(std::string)\"a\", (std::string)\"a\", (std::string)\"b\", (std::string)\"c\", (std::string)\"d\", (std::string)\"d\"}))) == (std::any({(std::vector<std::string>)std::vector<std::string>({(std::string)\"a\", (std::string)\"a\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"b\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"c\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"d\", (std::string)\"d\"})})));\n}\n",
      "timestamp": 1666123400,
      "stdout": "",
      "stderr": "/tmp/tmprzw3nfgc.cpp: In function \u2018std::any pack_consecutive_duplicates(std::any)\u2019:\n/tmp/tmprzw3nfgc.cpp:8:31: error: \u2018class std::any\u2019 has no member named \u2018size\u2019\n    8 |     for (int i = 0; i < list1.size(); i++) {\n      |                               ^~~~\n/tmp/tmprzw3nfgc.cpp:9:18: error: no match for \u2018operator[]\u2019 (operand types are \u2018std::any\u2019 and \u2018int\u2019)\n    9 |         if (list1[i] == list1[i + 1]) {\n      |                  ^\n/tmp/tmprzw3nfgc.cpp:9:30: error: no match for \u2018operator[]\u2019 (operand types are \u2018std::any\u2019 and \u2018int\u2019)\n    9 |         if (list1[i] == list1[i + 1]) {\n      |                              ^\n/tmp/tmprzw3nfgc.cpp:11:18: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   11 |             temp.push_back(list1[i]);\n      |                  ^~~~~~~~~\n/tmp/tmprzw3nfgc.cpp:11:33: error: no match for \u2018operator[]\u2019 (operand types are \u2018std::any\u2019 and \u2018int\u2019)\n   11 |             temp.push_back(list1[i]);\n      |                                 ^\n/tmp/tmprzw3nfgc.cpp:13:18: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   13 |             temp.push_back(list1[i]);\n      |                  ^~~~~~~~~\n/tmp/tmprzw3nfgc.cpp:13:33: error: no match for \u2018operator[]\u2019 (operand types are \u2018std::any\u2019 and \u2018int\u2019)\n   13 |             temp.push_back(list1[i]);\n      |                                 ^\n/tmp/tmprzw3nfgc.cpp:14:19: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   14 |             list2.push_back(temp);\n      |                   ^~~~~~~~~\n/tmp/tmprzw3nfgc.cpp:15:18: error: \u2018class std::any\u2019 has no member named \u2018clear\u2019\n   15 |             temp.clear();\n      |                  ^~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmprzw3nfgc.cpp:2:\n/tmp/tmprzw3nfgc.cpp: In function \u2018int main()\u2019:\n/tmp/tmprzw3nfgc.cpp",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to pack consecutive duplicates of a given list elements into sublists.\nstd::any pack_consecutive_duplicates(std::any list1) {\n    std::any list2;\n    std::any list3;\n    std::any list4;\n    std::any list5;\n    std::any list6;\n    std::any list7;\n    std::any list8;\n    std::any list9;\n    std::any list10;\n    std::any list11;\n    std::any list12;\n    std::any list13;\n    std::any list14;\n    std::any list15;\n    std::any list16;\n    std::any list17;\n    std::any list18;\n    std::any list19;\n    std::any list20;\n    std::any list21;\n    std::any list22;\n    std::any list23;\n    std::any list24;\n    std::any list25;\n    std::any list26;\n    std::any list27;\n    std::any list28;\n    std::any list29;\n    std::any list30;\n    std::any list31;\n    std::any list32;\n    std::any list33;\n    std::any list34;\n    std::any list35;\n    std::any list36;\n    std::any list37;\n    std::any list38;\n    std::any list39;\n    std::any list40;\n    std::any list41;\n    std::any list42;\n    std::any list43;\n    std::any list44;\n    std::any list45;\n    std::any list46;\n    std::any list47;\n    std::any list48;\n    std::any list49;\n    std::any list50;\n    std::any list51;\n    std::any list52;\n    std::any list53;\n    std::any list54;\n    std::any list55;\n    std::any list56;\n    std::any list57;\n    std::any list58;\n    std::any list59;\n    std::any list60;\n    std::any list61;\n    std::any list62;\n    std::any list63;\n    std::any list64;\n    std::any list65;\n}\nint main() {\n    auto candidate = pack_consecutive_duplicates;\n    assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n    assert(candidate((std::any({(long)10, (long)10, (long)15, (long)19, (long)18, (long)18, (long)17, (long)26, (long)26, (long)17, (long)18, (long)10}))) == (std::any({(std::vector<long>)std::vector<long>({(long)10, (long)10}), (std::vector<long>)std::vector<long>({(long)15}), (std::vector<long>)std::vector<long>({(long)19}), (std::vector<long>)std::vector<long>({(long)18, (long)18}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)26, (long)26}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)18}), (std::vector<long>)std::vector<long>({(long)10})})));\n    assert(candidate((std::any({(std::string)\"a\", (std::string)\"a\", (std::string)\"b\", (std::string)\"c\", (std::string)\"d\", (std::string)\"d\"}))) == (std::any({(std::vector<std::string>)std::vector<std::string>({(std::string)\"a\", (std::string)\"a\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"b\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"c\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"d\", (std::string)\"d\"})})));\n}\n",
      "timestamp": 1665510437,
      "stdout": "",
      "stderr": "/tmp/tmpgspun4wj.cpp: In function \u2018std::any pack_consecutive_duplicates(std::any)\u2019:\n/tmp/tmpgspun4wj.cpp:69:1: warning: no return statement in function returning non-void [-Wreturn-type]\n   69 | }\n      | ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpgspun4wj.cpp:2:\n/tmp/tmpgspun4wj.cpp: In function \u2018int main()\u2019:\n/tmp/tmpgspun4wj.cpp:72:176: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   72 |     assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n      |                                                                                                                                                                                ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpgspun4wj.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>,",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to pack consecutive duplicates of a given list elements into sublists.\nstd::any pack_consecutive_duplicates(std::any list1) {\n    std::any result;\n    std::any current;\n    std::any temp;\n    std::any temp2;\n    std::any temp3;\n    std::any temp4;\n    std::any temp5;\n    std::any temp6;\n    std::any temp7;\n    std::any temp8;\n    std::any temp9;\n    std::any temp10;\n    std::any temp11;\n    std::any temp12;\n    std::any temp13;\n    std::any temp14;\n    std::any temp15;\n    std::any temp16;\n    std::any temp17;\n    std::any temp18;\n    std::any temp19;\n    std::any temp20;\n    std::any temp21;\n    std::any temp22;\n    std::any temp23;\n    std::any temp24;\n    std::any temp25;\n    std::any temp26;\n    std::any temp27;\n    std::any temp28;\n    std::any temp29;\n    std::any temp30;\n    std::any temp31;\n    std::any temp32;\n    std::any temp33;\n    std::any temp34;\n    std::any temp35;\n    std::any temp36;\n    std::any temp37;\n    std::any temp38;\n    std::any temp39;\n    std::any temp40;\n    std::any temp41;\n    std::any temp42;\n    std::any temp43;\n    std::any temp44;\n    std::any temp45;\n    std::any temp46;\n    std::any temp47;\n    std::any temp48;\n    std::any temp49;\n    std::any temp50;\n    std::any temp51;\n    std::any temp52;\n    std::any temp53;\n    std::any temp54;\n    std::any temp55;\n    std::any temp56;\n    std::any temp57;\n    std::any temp58;\n    std::any temp59;\n    std::any temp60;\n    std::any temp61;\n    std::any temp62;\n    std\n}\nint main() {\n    auto candidate = pack_consecutive_duplicates;\n    assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n    assert(candidate((std::any({(long)10, (long)10, (long)15, (long)19, (long)18, (long)18, (long)17, (long)26, (long)26, (long)17, (long)18, (long)10}))) == (std::any({(std::vector<long>)std::vector<long>({(long)10, (long)10}), (std::vector<long>)std::vector<long>({(long)15}), (std::vector<long>)std::vector<long>({(long)19}), (std::vector<long>)std::vector<long>({(long)18, (long)18}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)26, (long)26}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)18}), (std::vector<long>)std::vector<long>({(long)10})})));\n    assert(candidate((std::any({(std::string)\"a\", (std::string)\"a\", (std::string)\"b\", (std::string)\"c\", (std::string)\"d\", (std::string)\"d\"}))) == (std::any({(std::vector<std::string>)std::vector<std::string>({(std::string)\"a\", (std::string)\"a\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"b\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"c\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"d\", (std::string)\"d\"})})));\n}\n",
      "timestamp": 1666123400,
      "stdout": "",
      "stderr": "/tmp/tmptj_soqo8.cpp: In function \u2018std::any pack_consecutive_duplicates(std::any)\u2019:\n/tmp/tmptj_soqo8.cpp:70:1: error: expected primary-expression before \u2018}\u2019 token\n   70 | }\n      | ^\n/tmp/tmptj_soqo8.cpp:70:1: warning: no return statement in function returning non-void [-Wreturn-type]\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmptj_soqo8.cpp:2:\n/tmp/tmptj_soqo8.cpp: In function \u2018int main()\u2019:\n/tmp/tmptj_soqo8.cpp:73:176: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   73 |     assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n      |                                                                                                                                                                                ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmptj_soqo8.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std:",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to pack consecutive duplicates of a given list elements into sublists.\nstd::any pack_consecutive_duplicates(std::any list1) {\n    std::any list2;\n    std::any temp;\n    std::any::iterator it = list1.begin();\n    while(it != list1.end()) {\n        temp.push_back(*it);\n        it++;\n        if(it == list1.end() || *it != temp.back()) {\n            list2.push_back(temp);\n            temp.clear();\n        }\n    }\n    return list2;\n}\nint main() {\n    auto candidate = pack_consecutive_duplicates;\n    assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n    assert(candidate((std::any({(long)10, (long)10, (long)15, (long)19, (long)18, (long)18, (long)17, (long)26, (long)26, (long)17, (long)18, (long)10}))) == (std::any({(std::vector<long>)std::vector<long>({(long)10, (long)10}), (std::vector<long>)std::vector<long>({(long)15}), (std::vector<long>)std::vector<long>({(long)19}), (std::vector<long>)std::vector<long>({(long)18, (long)18}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)26, (long)26}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)18}), (std::vector<long>)std::vector<long>({(long)10})})));\n    assert(candidate((std::any({(std::string)\"a\", (std::string)\"a\", (std::string)\"b\", (std::string)\"c\", (std::string)\"d\", (std::string)\"d\"}))) == (std::any({(std::vector<std::string>)std::vector<std::string>({(std::string)\"a\", (std::string)\"a\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"b\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"c\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"d\", (std::string)\"d\"})})));\n}\n",
      "timestamp": 1666123400,
      "stdout": "",
      "stderr": "/tmp/tmpy1lfk2kp.cpp: In function \u2018std::any pack_consecutive_duplicates(std::any)\u2019:\n/tmp/tmpy1lfk2kp.cpp:7:15: error: \u2018iterator\u2019 is not a member of \u2018std::any\u2019\n    7 |     std::any::iterator it = list1.begin();\n      |               ^~~~~~~~\n/tmp/tmpy1lfk2kp.cpp:8:11: error: \u2018it\u2019 was not declared in this scope; did you mean \u2018int\u2019?\n    8 |     while(it != list1.end()) {\n      |           ^~\n      |           int\n/tmp/tmpy1lfk2kp.cpp:8:23: error: \u2018class std::any\u2019 has no member named \u2018end\u2019\n    8 |     while(it != list1.end()) {\n      |                       ^~~\n/tmp/tmpy1lfk2kp.cpp:9:14: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n    9 |         temp.push_back(*it);\n      |              ^~~~~~~~~\n/tmp/tmpy1lfk2kp.cpp:11:24: error: \u2018class std::any\u2019 has no member named \u2018end\u2019\n   11 |         if(it == list1.end() || *it != temp.back()) {\n      |                        ^~~\n/tmp/tmpy1lfk2kp.cpp:11:45: error: \u2018class std::any\u2019 has no member named \u2018back\u2019\n   11 |         if(it == list1.end() || *it != temp.back()) {\n      |                                             ^~~~\n/tmp/tmpy1lfk2kp.cpp:12:19: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   12 |             list2.push_back(temp);\n      |                   ^~~~~~~~~\n/tmp/tmpy1lfk2kp.cpp:13:18: error: \u2018class std::any\u2019 has no member named \u2018clear\u2019\n   13 |             temp.clear();\n      |                  ^~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpy1lfk2kp.cpp:2:\n/tmp/tmpy1lfk2kp.cpp: In function \u2018int main()\u2019:\n/tmp/tmpy1lfk2kp.cpp:20:176: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   20 |     assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to pack consecutive duplicates of a given list elements into sublists.\nstd::any pack_consecutive_duplicates(std::any list1) {\n    std::any list2;\n    std::any temp;\n    std::any::iterator it;\n    std::any::iterator it2;\n    for(it=list1.begin();it!=list1.end();it++) {\n        if(temp.empty()) {\n            temp.push_back(*it);\n        }\n        else if(*it==*(temp.end()-1)) {\n            temp.push_back(*it);\n        }\n        else {\n            list2.push_back(temp);\n            temp.clear();\n            temp.push_back(*it);\n        }\n    }\n    list2.push_back(temp);\n    return list2;\n}\nint main() {\n    auto candidate = pack_consecutive_duplicates;\n    assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n    assert(candidate((std::any({(long)10, (long)10, (long)15, (long)19, (long)18, (long)18, (long)17, (long)26, (long)26, (long)17, (long)18, (long)10}))) == (std::any({(std::vector<long>)std::vector<long>({(long)10, (long)10}), (std::vector<long>)std::vector<long>({(long)15}), (std::vector<long>)std::vector<long>({(long)19}), (std::vector<long>)std::vector<long>({(long)18, (long)18}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)26, (long)26}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)18}), (std::vector<long>)std::vector<long>({(long)10})})));\n    assert(candidate((std::any({(std::string)\"a\", (std::string)\"a\", (std::string)\"b\", (std::string)\"c\", (std::string)\"d\", (std::string)\"d\"}))) == (std::any({(std::vector<std::string>)std::vector<std::string>({(std::string)\"a\", (std::string)\"a\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"b\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"c\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"d\", (std::string)\"d\"})})));\n}\n",
      "timestamp": 1666123400,
      "stdout": "",
      "stderr": "/tmp/tmpxf2amk3t.cpp: In function \u2018std::any pack_consecutive_duplicates(std::any)\u2019:\n/tmp/tmpxf2amk3t.cpp:7:15: error: \u2018iterator\u2019 is not a member of \u2018std::any\u2019\n    7 |     std::any::iterator it;\n      |               ^~~~~~~~\n/tmp/tmpxf2amk3t.cpp:8:15: error: \u2018iterator\u2019 is not a member of \u2018std::any\u2019\n    8 |     std::any::iterator it2;\n      |               ^~~~~~~~\n/tmp/tmpxf2amk3t.cpp:9:9: error: \u2018it\u2019 was not declared in this scope; did you mean \u2018int\u2019?\n    9 |     for(it=list1.begin();it!=list1.end();it++) {\n      |         ^~\n      |         int\n/tmp/tmpxf2amk3t.cpp:9:18: error: \u2018class std::any\u2019 has no member named \u2018begin\u2019\n    9 |     for(it=list1.begin();it!=list1.end();it++) {\n      |                  ^~~~~\n/tmp/tmpxf2amk3t.cpp:9:36: error: \u2018class std::any\u2019 has no member named \u2018end\u2019\n    9 |     for(it=list1.begin();it!=list1.end();it++) {\n      |                                    ^~~\n/tmp/tmpxf2amk3t.cpp:10:17: error: \u2018class std::any\u2019 has no member named \u2018empty\u2019\n   10 |         if(temp.empty()) {\n      |                 ^~~~~\n/tmp/tmpxf2amk3t.cpp:11:18: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   11 |             temp.push_back(*it);\n      |                  ^~~~~~~~~\n/tmp/tmpxf2amk3t.cpp:13:29: error: \u2018class std::any\u2019 has no member named \u2018end\u2019\n   13 |         else if(*it==*(temp.end()-1)) {\n      |                             ^~~\n/tmp/tmpxf2amk3t.cpp:14:18: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   14 |             temp.push_back(*it);\n      |                  ^~~~~~~~~\n/tmp/tmpxf2amk3t.cpp:17:19: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   17 |             list2.push_back(temp);\n      |                   ^~~~~~~~~\n/tmp/tmpxf2amk3t.cpp:18:18: error: \u2018class std::any\u2019 has no member named \u2018clear\u2019\n   18 |             temp.clear();\n      |                  ^~~~~\n/tmp/tmpxf2amk3t.cpp:19:18: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   19 |             temp",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to pack consecutive duplicates of a given list elements into sublists.\nstd::any pack_consecutive_duplicates(std::any list1) {\n    std::any list2;\n    std::any temp;\n    std::any::iterator it = list1.begin();\n    while(it != list1.end()) {\n        temp.push_back(*it);\n        it++;\n        if(*it != *(it-1)) {\n            list2.push_back(temp);\n            temp.clear();\n        }\n    }\n    return list2;\n}\nint main() {\n    auto candidate = pack_consecutive_duplicates;\n    assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n    assert(candidate((std::any({(long)10, (long)10, (long)15, (long)19, (long)18, (long)18, (long)17, (long)26, (long)26, (long)17, (long)18, (long)10}))) == (std::any({(std::vector<long>)std::vector<long>({(long)10, (long)10}), (std::vector<long>)std::vector<long>({(long)15}), (std::vector<long>)std::vector<long>({(long)19}), (std::vector<long>)std::vector<long>({(long)18, (long)18}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)26, (long)26}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)18}), (std::vector<long>)std::vector<long>({(long)10})})));\n    assert(candidate((std::any({(std::string)\"a\", (std::string)\"a\", (std::string)\"b\", (std::string)\"c\", (std::string)\"d\", (std::string)\"d\"}))) == (std::any({(std::vector<std::string>)std::vector<std::string>({(std::string)\"a\", (std::string)\"a\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"b\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"c\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"d\", (std::string)\"d\"})})));\n}\n",
      "timestamp": 1666123400,
      "stdout": "",
      "stderr": "/tmp/tmpl40ocktz.cpp: In function \u2018std::any pack_consecutive_duplicates(std::any)\u2019:\n/tmp/tmpl40ocktz.cpp:7:15: error: \u2018iterator\u2019 is not a member of \u2018std::any\u2019\n    7 |     std::any::iterator it = list1.begin();\n      |               ^~~~~~~~\n/tmp/tmpl40ocktz.cpp:8:11: error: \u2018it\u2019 was not declared in this scope; did you mean \u2018int\u2019?\n    8 |     while(it != list1.end()) {\n      |           ^~\n      |           int\n/tmp/tmpl40ocktz.cpp:8:23: error: \u2018class std::any\u2019 has no member named \u2018end\u2019\n    8 |     while(it != list1.end()) {\n      |                       ^~~\n/tmp/tmpl40ocktz.cpp:9:14: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n    9 |         temp.push_back(*it);\n      |              ^~~~~~~~~\n/tmp/tmpl40ocktz.cpp:12:19: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   12 |             list2.push_back(temp);\n      |                   ^~~~~~~~~\n/tmp/tmpl40ocktz.cpp:13:18: error: \u2018class std::any\u2019 has no member named \u2018clear\u2019\n   13 |             temp.clear();\n      |                  ^~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpl40ocktz.cpp:2:\n/tmp/tmpl40ocktz.cpp: In function \u2018int main()\u2019:\n/tmp/tmpl40ocktz.cpp:20:176: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   20 |     assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to pack consecutive duplicates of a given list elements into sublists.\nstd::any pack_consecutive_duplicates(std::any list1) {\n    std::any list2;\n    std::any sublist;\n    std::any temp;\n    int flag = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        if (list1[i] == list1[i + 1]) {\n            if (flag == 0) {\n                sublist.push_back(list1[i]);\n                flag = 1;\n            }\n            sublist.push_back(list1[i + 1]);\n        } else {\n            if (flag == 1) {\n                list2.push_back(sublist);\n                sublist.clear();\n                flag = 0;\n            }\n            list2.push_back(list1[i]);\n        }\n    }\n    return list2;\n}\nint main() {\n    auto candidate = pack_consecutive_duplicates;\n    assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n    assert(candidate((std::any({(long)10, (long)10, (long)15, (long)19, (long)18, (long)18, (long)17, (long)26, (long)26, (long)17, (long)18, (long)10}))) == (std::any({(std::vector<long>)std::vector<long>({(long)10, (long)10}), (std::vector<long>)std::vector<long>({(long)15}), (std::vector<long>)std::vector<long>({(long)19}), (std::vector<long>)std::vector<long>({(long)18, (long)18}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)26, (long)26}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)18}), (std::vector<long>)std::vector<long>({(long)10})})));\n    assert(candidate((std::any({(std::string)\"a\", (std::string)\"a\", (std::string)\"b\", (std::string)\"c\", (std::string)\"d\", (std::string)\"d\"}))) == (std::any({(std::vector<std::string>)std::vector<std::string>({(std::string)\"a\", (std::string)\"a\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"b\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"c\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"d\", (std::string)\"d\"})})));\n}\n",
      "timestamp": 1666123400,
      "stdout": "",
      "stderr": "/tmp/tmpk9h4z73p.cpp: In function \u2018std::any pack_consecutive_duplicates(std::any)\u2019:\n/tmp/tmpk9h4z73p.cpp:9:31: error: \u2018class std::any\u2019 has no member named \u2018size\u2019\n    9 |     for (int i = 0; i < list1.size(); i++) {\n      |                               ^~~~\n/tmp/tmpk9h4z73p.cpp:10:18: error: no match for \u2018operator[]\u2019 (operand types are \u2018std::any\u2019 and \u2018int\u2019)\n   10 |         if (list1[i] == list1[i + 1]) {\n      |                  ^\n/tmp/tmpk9h4z73p.cpp:10:30: error: no match for \u2018operator[]\u2019 (operand types are \u2018std::any\u2019 and \u2018int\u2019)\n   10 |         if (list1[i] == list1[i + 1]) {\n      |                              ^\n/tmp/tmpk9h4z73p.cpp:12:25: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   12 |                 sublist.push_back(list1[i]);\n      |                         ^~~~~~~~~\n/tmp/tmpk9h4z73p.cpp:12:40: error: no match for \u2018operator[]\u2019 (operand types are \u2018std::any\u2019 and \u2018int\u2019)\n   12 |                 sublist.push_back(list1[i]);\n      |                                        ^\n/tmp/tmpk9h4z73p.cpp:15:21: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   15 |             sublist.push_back(list1[i + 1]);\n      |                     ^~~~~~~~~\n/tmp/tmpk9h4z73p.cpp:15:36: error: no match for \u2018operator[]\u2019 (operand types are \u2018std::any\u2019 and \u2018int\u2019)\n   15 |             sublist.push_back(list1[i + 1]);\n      |                                    ^\n/tmp/tmpk9h4z73p.cpp:18:23: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   18 |                 list2.push_back(sublist);\n      |                       ^~~~~~~~~\n/tmp/tmpk9h4z73p.cpp:19:25: error: \u2018class std::any\u2019 has no member named \u2018clear\u2019\n   19 |                 sublist.clear();\n      |                         ^~~~~\n/tmp/tmpk9h4z73p.cpp:22:19: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   22 |             list2.push_back(list1[i]);\n      |                   ^~~~~~~~~\n/tmp/tmpk9h4z73p.cpp:22:34: error: no match for \u2018operator[]\u2019 (",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to pack consecutive duplicates of a given list elements into sublists.\nstd::any pack_consecutive_duplicates(std::any list1) {\n    std::any list2;\n    std::any temp;\n    std::any temp2;\n    std::any temp3;\n    std::any temp4;\n    std::any temp5;\n    std::any temp6;\n    std::any temp7;\n    std::any temp8;\n    std::any temp9;\n    std::any temp10;\n    std::any temp11;\n    std::any temp12;\n    std::any temp13;\n    std::any temp14;\n    std::any temp15;\n    std::any temp16;\n    std::any temp17;\n    std::any temp18;\n    std::any temp19;\n    std::any temp20;\n    std::any temp21;\n    std::any temp22;\n    std::any temp23;\n    std::any temp24;\n    std::any temp25;\n    std::any temp26;\n    std::any temp27;\n    std::any temp28;\n    std::any temp29;\n    std::any temp30;\n    std::any temp31;\n    std::any temp32;\n    std::any temp33;\n    std::any temp34;\n    std::any temp35;\n    std::any temp36;\n    std::any temp37;\n    std::any temp38;\n    std::any temp39;\n    std::any temp40;\n    std::any temp41;\n    std::any temp42;\n    std::any temp43;\n    std::any temp44;\n    std::any temp45;\n    std::any temp46;\n    std::any temp47;\n    std::any temp48;\n    std::any temp49;\n    std::any temp50;\n    std::any temp51;\n    std::any temp52;\n    std::any temp53;\n    std::any temp54;\n    std::any temp55;\n    std::any temp56;\n    std::any temp57;\n    std::any temp58;\n    std::any temp59;\n    std::any temp60;\n    std::any temp61;\n    std::any temp62;\n    std::any temp63;\n\n}\nint main() {\n    auto candidate = pack_consecutive_duplicates;\n    assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n    assert(candidate((std::any({(long)10, (long)10, (long)15, (long)19, (long)18, (long)18, (long)17, (long)26, (long)26, (long)17, (long)18, (long)10}))) == (std::any({(std::vector<long>)std::vector<long>({(long)10, (long)10}), (std::vector<long>)std::vector<long>({(long)15}), (std::vector<long>)std::vector<long>({(long)19}), (std::vector<long>)std::vector<long>({(long)18, (long)18}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)26, (long)26}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)18}), (std::vector<long>)std::vector<long>({(long)10})})));\n    assert(candidate((std::any({(std::string)\"a\", (std::string)\"a\", (std::string)\"b\", (std::string)\"c\", (std::string)\"d\", (std::string)\"d\"}))) == (std::any({(std::vector<std::string>)std::vector<std::string>({(std::string)\"a\", (std::string)\"a\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"b\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"c\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"d\", (std::string)\"d\"})})));\n}\n",
      "timestamp": 1665510437,
      "stdout": "",
      "stderr": "/tmp/tmp996xkpjp.cpp: In function \u2018std::any pack_consecutive_duplicates(std::any)\u2019:\n/tmp/tmp996xkpjp.cpp:70:1: warning: no return statement in function returning non-void [-Wreturn-type]\n   70 | }\n      | ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp996xkpjp.cpp:2:\n/tmp/tmp996xkpjp.cpp: In function \u2018int main()\u2019:\n/tmp/tmp996xkpjp.cpp:73:176: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   73 |     assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n      |                                                                                                                                                                                ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmp996xkpjp.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>,",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to pack consecutive duplicates of a given list elements into sublists.\nstd::any pack_consecutive_duplicates(std::any list1) {\n  std::any list2;\n  std::any list3;\n  std::any list4;\n  std::any list5;\n  std::any list6;\n  std::any list7;\n  std::any list8;\n  std::any list9;\n  std::any list10;\n  std::any list11;\n  std::any list12;\n  std::any list13;\n  std::any list14;\n  std::any list15;\n  std::any list16;\n  std::any list17;\n  std::any list18;\n  std::any list19;\n  std::any list20;\n  std::any list21;\n  std::any list22;\n  std::any list23;\n  std::any list24;\n  std::any list25;\n  std::any list26;\n  std::any list27;\n  std::any list28;\n  std::any list29;\n  std::any list30;\n  std::any list31;\n  std::any list32;\n  std::any list33;\n  std::any list34;\n  std::any list35;\n  std::any list36;\n  std::any list37;\n  std::any list38;\n  std::any list39;\n  std::any list40;\n  std::any list41;\n  std::any list42;\n  std::any list43;\n  std::any list44;\n  std::any list45;\n  std::any list46;\n  std::any list47;\n  std::any list48;\n  std::any list49;\n  std::any list50;\n  std::any list51;\n  std::any list52;\n  std::any list53;\n  std::any list54;\n  std::any list55;\n  std::any list56;\n  std::any list57;\n  std::any list58;\n  std::any list59;\n  std::any list60;\n  std::any list61;\n  std::any list62;\n  std::any list63;\n  std::any list64;\n  std::any list65;\n}\nint main() {\n    auto candidate = pack_consecutive_duplicates;\n    assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n    assert(candidate((std::any({(long)10, (long)10, (long)15, (long)19, (long)18, (long)18, (long)17, (long)26, (long)26, (long)17, (long)18, (long)10}))) == (std::any({(std::vector<long>)std::vector<long>({(long)10, (long)10}), (std::vector<long>)std::vector<long>({(long)15}), (std::vector<long>)std::vector<long>({(long)19}), (std::vector<long>)std::vector<long>({(long)18, (long)18}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)26, (long)26}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)18}), (std::vector<long>)std::vector<long>({(long)10})})));\n    assert(candidate((std::any({(std::string)\"a\", (std::string)\"a\", (std::string)\"b\", (std::string)\"c\", (std::string)\"d\", (std::string)\"d\"}))) == (std::any({(std::vector<std::string>)std::vector<std::string>({(std::string)\"a\", (std::string)\"a\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"b\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"c\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"d\", (std::string)\"d\"})})));\n}\n",
      "timestamp": 1666123393,
      "stdout": "",
      "stderr": "/tmp/tmpc6gd7f4w.cpp: In function \u2018std::any pack_consecutive_duplicates(std::any)\u2019:\n/tmp/tmpc6gd7f4w.cpp:69:1: warning: no return statement in function returning non-void [-Wreturn-type]\n   69 | }\n      | ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpc6gd7f4w.cpp:2:\n/tmp/tmpc6gd7f4w.cpp: In function \u2018int main()\u2019:\n/tmp/tmpc6gd7f4w.cpp:72:176: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   72 |     assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n      |                                                                                                                                                                                ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpc6gd7f4w.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>,",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to pack consecutive duplicates of a given list elements into sublists.\nstd::any pack_consecutive_duplicates(std::any list1) {\n    std::any list2;\n    std::any sublist;\n    std::any temp;\n    std::any temp1;\n    std::any temp2;\n    std::any temp3;\n    std::any temp4;\n    std::any temp5;\n    std::any temp6;\n    std::any temp7;\n    std::any temp8;\n    std::any temp9;\n    std::any temp10;\n    std::any temp11;\n    std::any temp12;\n    std::any temp13;\n    std::any temp14;\n    std::any temp15;\n    std::any temp16;\n    std::any temp17;\n    std::any temp18;\n    std::any temp19;\n    std::any temp20;\n    std::any temp21;\n    std::any temp22;\n    std::any temp23;\n    std::any temp24;\n    std::any temp25;\n    std::any temp26;\n    std::any temp27;\n    std::any temp28;\n    std::any temp29;\n    std::any temp30;\n    std::any temp31;\n    std::any temp32;\n    std::any temp33;\n    std::any temp34;\n    std::any temp35;\n    std::any temp36;\n    std::any temp37;\n    std::any temp38;\n    std::any temp39;\n    std::any temp40;\n    std::any temp41;\n    std::any temp42;\n    std::any temp43;\n    std::any temp44;\n    std::any temp45;\n    std::any temp46;\n    std::any temp47;\n    std::any temp48;\n    std::any temp49;\n    std::any temp50;\n    std::any temp51;\n    std::any temp52;\n    std::any temp53;\n    std::any temp54;\n    std::any temp55;\n    std::any temp56;\n    std::any temp57;\n    std::any temp58;\n    std::any temp59;\n    std::any temp60;\n    std::any temp61;\n\n}\nint main() {\n    auto candidate = pack_consecutive_duplicates;\n    assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n    assert(candidate((std::any({(long)10, (long)10, (long)15, (long)19, (long)18, (long)18, (long)17, (long)26, (long)26, (long)17, (long)18, (long)10}))) == (std::any({(std::vector<long>)std::vector<long>({(long)10, (long)10}), (std::vector<long>)std::vector<long>({(long)15}), (std::vector<long>)std::vector<long>({(long)19}), (std::vector<long>)std::vector<long>({(long)18, (long)18}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)26, (long)26}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)18}), (std::vector<long>)std::vector<long>({(long)10})})));\n    assert(candidate((std::any({(std::string)\"a\", (std::string)\"a\", (std::string)\"b\", (std::string)\"c\", (std::string)\"d\", (std::string)\"d\"}))) == (std::any({(std::vector<std::string>)std::vector<std::string>({(std::string)\"a\", (std::string)\"a\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"b\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"c\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"d\", (std::string)\"d\"})})));\n}\n",
      "timestamp": 1666123400,
      "stdout": "",
      "stderr": "/tmp/tmpm_pfeq8x.cpp: In function \u2018std::any pack_consecutive_duplicates(std::any)\u2019:\n/tmp/tmpm_pfeq8x.cpp:70:1: warning: no return statement in function returning non-void [-Wreturn-type]\n   70 | }\n      | ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpm_pfeq8x.cpp:2:\n/tmp/tmpm_pfeq8x.cpp: In function \u2018int main()\u2019:\n/tmp/tmpm_pfeq8x.cpp:73:176: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   73 |     assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n      |                                                                                                                                                                                ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpm_pfeq8x.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>,",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to pack consecutive duplicates of a given list elements into sublists.\nstd::any pack_consecutive_duplicates(std::any list1) {\n    std::any result;\n    std::any current;\n    std::any last;\n    std::any temp;\n    std::any temp1;\n    std::any temp2;\n    std::any temp3;\n    std::any temp4;\n    std::any temp5;\n    std::any temp6;\n    std::any temp7;\n    std::any temp8;\n    std::any temp9;\n    std::any temp10;\n    std::any temp11;\n    std::any temp12;\n    std::any temp13;\n    std::any temp14;\n    std::any temp15;\n    std::any temp16;\n    std::any temp17;\n    std::any temp18;\n    std::any temp19;\n    std::any temp20;\n    std::any temp21;\n    std::any temp22;\n    std::any temp23;\n    std::any temp24;\n    std::any temp25;\n    std::any temp26;\n    std::any temp27;\n    std::any temp28;\n    std::any temp29;\n    std::any temp30;\n    std::any temp31;\n    std::any temp32;\n    std::any temp33;\n    std::any temp34;\n    std::any temp35;\n    std::any temp36;\n    std::any temp37;\n    std::any temp38;\n    std::any temp39;\n    std::any temp40;\n    std::any temp41;\n    std::any temp42;\n    std::any temp43;\n    std::any temp44;\n    std::any temp45;\n    std::any temp46;\n    std::any temp47;\n    std::any temp48;\n    std::any temp49;\n    std::any temp50;\n    std::any temp51;\n    std::any temp52;\n    std::any temp53;\n    std::any temp54;\n    std::any temp55;\n    std::any temp56;\n    std::any temp57;\n    std::any temp58;\n    std::any temp59;\n    std::any temp60;\n    std::\n}\nint main() {\n    auto candidate = pack_consecutive_duplicates;\n    assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n    assert(candidate((std::any({(long)10, (long)10, (long)15, (long)19, (long)18, (long)18, (long)17, (long)26, (long)26, (long)17, (long)18, (long)10}))) == (std::any({(std::vector<long>)std::vector<long>({(long)10, (long)10}), (std::vector<long>)std::vector<long>({(long)15}), (std::vector<long>)std::vector<long>({(long)19}), (std::vector<long>)std::vector<long>({(long)18, (long)18}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)26, (long)26}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)18}), (std::vector<long>)std::vector<long>({(long)10})})));\n    assert(candidate((std::any({(std::string)\"a\", (std::string)\"a\", (std::string)\"b\", (std::string)\"c\", (std::string)\"d\", (std::string)\"d\"}))) == (std::any({(std::vector<std::string>)std::vector<std::string>({(std::string)\"a\", (std::string)\"a\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"b\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"c\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"d\", (std::string)\"d\"})})));\n}\n",
      "timestamp": 1666123400,
      "stdout": "",
      "stderr": "/tmp/tmpgosy8s4g.cpp: In function \u2018std::any pack_consecutive_duplicates(std::any)\u2019:\n/tmp/tmpgosy8s4g.cpp:70:1: error: expected unqualified-id before \u2018}\u2019 token\n   70 | }\n      | ^\n/tmp/tmpgosy8s4g.cpp:70:1: warning: no return statement in function returning non-void [-Wreturn-type]\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpgosy8s4g.cpp:2:\n/tmp/tmpgosy8s4g.cpp: In function \u2018int main()\u2019:\n/tmp/tmpgosy8s4g.cpp:73:176: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   73 |     assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n      |                                                                                                                                                                                ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpgosy8s4g.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to pack consecutive duplicates of a given list elements into sublists.\nstd::any pack_consecutive_duplicates(std::any list1) {\n\tstd::any list2;\n\tstd::any temp;\n\tstd::any temp1;\n\tstd::any temp2;\n\tint count = 0;\n\twhile (!list1.empty()) {\n\t\ttemp1 = list1.front();\n\t\tlist1.pop_front();\n\t\tcount = 1;\n\t\twhile (!list1.empty() && list1.front() == temp1) {\n\t\t\tlist1.pop_front();\n\t\t\tcount++;\n\t\t}\n\t\ttemp2.push_back(count);\n\t\ttemp2.push_back(temp1);\n\t\tlist2.push_back(temp2);\n\t\ttemp2.clear();\n\t}\n\treturn list2;\n}\nint main() {\n    auto candidate = pack_consecutive_duplicates;\n    assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n    assert(candidate((std::any({(long)10, (long)10, (long)15, (long)19, (long)18, (long)18, (long)17, (long)26, (long)26, (long)17, (long)18, (long)10}))) == (std::any({(std::vector<long>)std::vector<long>({(long)10, (long)10}), (std::vector<long>)std::vector<long>({(long)15}), (std::vector<long>)std::vector<long>({(long)19}), (std::vector<long>)std::vector<long>({(long)18, (long)18}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)26, (long)26}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)18}), (std::vector<long>)std::vector<long>({(long)10})})));\n    assert(candidate((std::any({(std::string)\"a\", (std::string)\"a\", (std::string)\"b\", (std::string)\"c\", (std::string)\"d\", (std::string)\"d\"}))) == (std::any({(std::vector<std::string>)std::vector<std::string>({(std::string)\"a\", (std::string)\"a\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"b\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"c\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"d\", (std::string)\"d\"})})));\n}\n",
      "timestamp": 1666123400,
      "stdout": "",
      "stderr": "/tmp/tmp98i456tk.cpp: In function \u2018std::any pack_consecutive_duplicates(std::any)\u2019:\n/tmp/tmp98i456tk.cpp:10:16: error: \u2018class std::any\u2019 has no member named \u2018empty\u2019\n   10 |  while (!list1.empty()) {\n      |                ^~~~~\n/tmp/tmp98i456tk.cpp:11:17: error: \u2018class std::any\u2019 has no member named \u2018front\u2019\n   11 |   temp1 = list1.front();\n      |                 ^~~~~\n/tmp/tmp98i456tk.cpp:12:9: error: \u2018class std::any\u2019 has no member named \u2018pop_front\u2019\n   12 |   list1.pop_front();\n      |         ^~~~~~~~~\n/tmp/tmp98i456tk.cpp:14:17: error: \u2018class std::any\u2019 has no member named \u2018empty\u2019\n   14 |   while (!list1.empty() && list1.front() == temp1) {\n      |                 ^~~~~\n/tmp/tmp98i456tk.cpp:14:34: error: \u2018class std::any\u2019 has no member named \u2018front\u2019\n   14 |   while (!list1.empty() && list1.front() == temp1) {\n      |                                  ^~~~~\n/tmp/tmp98i456tk.cpp:15:10: error: \u2018class std::any\u2019 has no member named \u2018pop_front\u2019\n   15 |    list1.pop_front();\n      |          ^~~~~~~~~\n/tmp/tmp98i456tk.cpp:18:9: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   18 |   temp2.push_back(count);\n      |         ^~~~~~~~~\n/tmp/tmp98i456tk.cpp:19:9: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   19 |   temp2.push_back(temp1);\n      |         ^~~~~~~~~\n/tmp/tmp98i456tk.cpp:20:9: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   20 |   list2.push_back(temp2);\n      |         ^~~~~~~~~\n/tmp/tmp98i456tk.cpp:21:9: error: \u2018class std::any\u2019 has no member named \u2018clear\u2019\n   21 |   temp2.clear();\n      |         ^~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp98i456tk.cpp:2:\n/tmp/tmp98i456tk.cpp: In function \u2018int main()\u2019:\n/tmp/tmp98i456tk.cpp:27:176: error: no matching function for call to \u2018std::any::any(<brace-enclosed ini",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to pack consecutive duplicates of a given list elements into sublists.\nstd::any pack_consecutive_duplicates(std::any list1) {\n    std::any list2;\n    std::any temp;\n    std::any::iterator it = list1.begin();\n    while(it != list1.end()) {\n        temp.push_back(*it);\n        it++;\n        if(it == list1.end() || *it != *(it - 1)) {\n            list2.push_back(temp);\n            temp.clear();\n        }\n    }\n    return list2;\n}\nint main() {\n    auto candidate = pack_consecutive_duplicates;\n    assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n    assert(candidate((std::any({(long)10, (long)10, (long)15, (long)19, (long)18, (long)18, (long)17, (long)26, (long)26, (long)17, (long)18, (long)10}))) == (std::any({(std::vector<long>)std::vector<long>({(long)10, (long)10}), (std::vector<long>)std::vector<long>({(long)15}), (std::vector<long>)std::vector<long>({(long)19}), (std::vector<long>)std::vector<long>({(long)18, (long)18}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)26, (long)26}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)18}), (std::vector<long>)std::vector<long>({(long)10})})));\n    assert(candidate((std::any({(std::string)\"a\", (std::string)\"a\", (std::string)\"b\", (std::string)\"c\", (std::string)\"d\", (std::string)\"d\"}))) == (std::any({(std::vector<std::string>)std::vector<std::string>({(std::string)\"a\", (std::string)\"a\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"b\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"c\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"d\", (std::string)\"d\"})})));\n}\n",
      "timestamp": 1665510437,
      "stdout": "",
      "stderr": "/tmp/tmpttxm6_u3.cpp: In function \u2018std::any pack_consecutive_duplicates(std::any)\u2019:\n/tmp/tmpttxm6_u3.cpp:7:15: error: \u2018iterator\u2019 is not a member of \u2018std::any\u2019\n    7 |     std::any::iterator it = list1.begin();\n      |               ^~~~~~~~\n/tmp/tmpttxm6_u3.cpp:8:11: error: \u2018it\u2019 was not declared in this scope; did you mean \u2018int\u2019?\n    8 |     while(it != list1.end()) {\n      |           ^~\n      |           int\n/tmp/tmpttxm6_u3.cpp:8:23: error: \u2018class std::any\u2019 has no member named \u2018end\u2019\n    8 |     while(it != list1.end()) {\n      |                       ^~~\n/tmp/tmpttxm6_u3.cpp:9:14: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n    9 |         temp.push_back(*it);\n      |              ^~~~~~~~~\n/tmp/tmpttxm6_u3.cpp:11:24: error: \u2018class std::any\u2019 has no member named \u2018end\u2019\n   11 |         if(it == list1.end() || *it != *(it - 1)) {\n      |                        ^~~\n/tmp/tmpttxm6_u3.cpp:12:19: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   12 |             list2.push_back(temp);\n      |                   ^~~~~~~~~\n/tmp/tmpttxm6_u3.cpp:13:18: error: \u2018class std::any\u2019 has no member named \u2018clear\u2019\n   13 |             temp.clear();\n      |                  ^~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpttxm6_u3.cpp:2:\n/tmp/tmpttxm6_u3.cpp: In function \u2018int main()\u2019:\n/tmp/tmpttxm6_u3.cpp:20:176: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   20 |     assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<lo",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to pack consecutive duplicates of a given list elements into sublists.\nstd::any pack_consecutive_duplicates(std::any list1) {\n    std::any list2;\n    std::any temp;\n    std::any::iterator it = list1.begin();\n    while(it != list1.end()) {\n        temp.push_back(*it);\n        it++;\n        if(*it != *(it-1)) {\n            list2.push_back(temp);\n            temp.clear();\n        }\n    }\n    return list2;\n}\nint main() {\n    auto candidate = pack_consecutive_duplicates;\n    assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n    assert(candidate((std::any({(long)10, (long)10, (long)15, (long)19, (long)18, (long)18, (long)17, (long)26, (long)26, (long)17, (long)18, (long)10}))) == (std::any({(std::vector<long>)std::vector<long>({(long)10, (long)10}), (std::vector<long>)std::vector<long>({(long)15}), (std::vector<long>)std::vector<long>({(long)19}), (std::vector<long>)std::vector<long>({(long)18, (long)18}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)26, (long)26}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)18}), (std::vector<long>)std::vector<long>({(long)10})})));\n    assert(candidate((std::any({(std::string)\"a\", (std::string)\"a\", (std::string)\"b\", (std::string)\"c\", (std::string)\"d\", (std::string)\"d\"}))) == (std::any({(std::vector<std::string>)std::vector<std::string>({(std::string)\"a\", (std::string)\"a\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"b\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"c\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"d\", (std::string)\"d\"})})));\n}\n",
      "timestamp": 1666123400,
      "stdout": "",
      "stderr": "/tmp/tmpl40ocktz.cpp: In function \u2018std::any pack_consecutive_duplicates(std::any)\u2019:\n/tmp/tmpl40ocktz.cpp:7:15: error: \u2018iterator\u2019 is not a member of \u2018std::any\u2019\n    7 |     std::any::iterator it = list1.begin();\n      |               ^~~~~~~~\n/tmp/tmpl40ocktz.cpp:8:11: error: \u2018it\u2019 was not declared in this scope; did you mean \u2018int\u2019?\n    8 |     while(it != list1.end()) {\n      |           ^~\n      |           int\n/tmp/tmpl40ocktz.cpp:8:23: error: \u2018class std::any\u2019 has no member named \u2018end\u2019\n    8 |     while(it != list1.end()) {\n      |                       ^~~\n/tmp/tmpl40ocktz.cpp:9:14: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n    9 |         temp.push_back(*it);\n      |              ^~~~~~~~~\n/tmp/tmpl40ocktz.cpp:12:19: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   12 |             list2.push_back(temp);\n      |                   ^~~~~~~~~\n/tmp/tmpl40ocktz.cpp:13:18: error: \u2018class std::any\u2019 has no member named \u2018clear\u2019\n   13 |             temp.clear();\n      |                  ^~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpl40ocktz.cpp:2:\n/tmp/tmpl40ocktz.cpp: In function \u2018int main()\u2019:\n/tmp/tmpl40ocktz.cpp:20:176: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   20 |     assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to pack consecutive duplicates of a given list elements into sublists.\nstd::any pack_consecutive_duplicates(std::any list1) {\n    std::any list2;\n    std::any list3;\n    std::any list4;\n    std::any list5;\n    std::any list6;\n    std::any list7;\n    std::any list8;\n    std::any list9;\n    std::any list10;\n    std::any list11;\n    std::any list12;\n    std::any list13;\n    std::any list14;\n    std::any list15;\n    std::any list16;\n    std::any list17;\n    std::any list18;\n    std::any list19;\n    std::any list20;\n    std::any list21;\n    std::any list22;\n    std::any list23;\n    std::any list24;\n    std::any list25;\n    std::any list26;\n    std::any list27;\n    std::any list28;\n    std::any list29;\n    std::any list30;\n    std::any list31;\n    std::any list32;\n    std::any list33;\n    std::any list34;\n    std::any list35;\n    std::any list36;\n    std::any list37;\n    std::any list38;\n    std::any list39;\n    std::any list40;\n    std::any list41;\n    std::any list42;\n    std::any list43;\n    std::any list44;\n    std::any list45;\n    std::any list46;\n    std::any list47;\n    std::any list48;\n    std::any list49;\n    std::any list50;\n    std::any list51;\n    std::any list52;\n    std::any list53;\n    std::any list54;\n    std::any list55;\n    std::any list56;\n    std::any list57;\n    std::any list58;\n    std::any list59;\n    std::any list60;\n    std::any list61;\n    std::any list62;\n    std::any list63;\n    std::any list64;\n    std::any list65;\n}\nint main() {\n    auto candidate = pack_consecutive_duplicates;\n    assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n    assert(candidate((std::any({(long)10, (long)10, (long)15, (long)19, (long)18, (long)18, (long)17, (long)26, (long)26, (long)17, (long)18, (long)10}))) == (std::any({(std::vector<long>)std::vector<long>({(long)10, (long)10}), (std::vector<long>)std::vector<long>({(long)15}), (std::vector<long>)std::vector<long>({(long)19}), (std::vector<long>)std::vector<long>({(long)18, (long)18}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)26, (long)26}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)18}), (std::vector<long>)std::vector<long>({(long)10})})));\n    assert(candidate((std::any({(std::string)\"a\", (std::string)\"a\", (std::string)\"b\", (std::string)\"c\", (std::string)\"d\", (std::string)\"d\"}))) == (std::any({(std::vector<std::string>)std::vector<std::string>({(std::string)\"a\", (std::string)\"a\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"b\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"c\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"d\", (std::string)\"d\"})})));\n}\n",
      "timestamp": 1665510437,
      "stdout": "",
      "stderr": "/tmp/tmpgspun4wj.cpp: In function \u2018std::any pack_consecutive_duplicates(std::any)\u2019:\n/tmp/tmpgspun4wj.cpp:69:1: warning: no return statement in function returning non-void [-Wreturn-type]\n   69 | }\n      | ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpgspun4wj.cpp:2:\n/tmp/tmpgspun4wj.cpp: In function \u2018int main()\u2019:\n/tmp/tmpgspun4wj.cpp:72:176: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   72 |     assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n      |                                                                                                                                                                                ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpgspun4wj.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>,",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to pack consecutive duplicates of a given list elements into sublists.\nstd::any pack_consecutive_duplicates(std::any list1) {\n    std::any list2;\n    std::any list3;\n    std::any list4;\n    std::any list5;\n    std::any list6;\n    std::any list7;\n    std::any list8;\n    std::any list9;\n    std::any list10;\n    std::any list11;\n    std::any list12;\n    std::any list13;\n    std::any list14;\n    std::any list15;\n    std::any list16;\n    std::any list17;\n    std::any list18;\n    std::any list19;\n    std::any list20;\n    std::any list21;\n    std::any list22;\n    std::any list23;\n    std::any list24;\n    std::any list25;\n    std::any list26;\n    std::any list27;\n    std::any list28;\n    std::any list29;\n    std::any list30;\n    std::any list31;\n    std::any list32;\n    std::any list33;\n    std::any list34;\n    std::any list35;\n    std::any list36;\n    std::any list37;\n    std::any list38;\n    std::any list39;\n    std::any list40;\n    std::any list41;\n    std::any list42;\n    std::any list43;\n    std::any list44;\n    std::any list45;\n    std::any list46;\n    std::any list47;\n    std::any list48;\n    std::any list49;\n    std::any list50;\n    std::any list51;\n    std::any list52;\n    std::any list53;\n    std::any list54;\n    std::any list55;\n    std::any list56;\n    std::any list57;\n    std::any list58;\n    std::any list59;\n    std::any list60;\n    std::any list61;\n    std::any list62;\n    std::any list63;\n    std::any list64;\n    std::any list65;\n}\nint main() {\n    auto candidate = pack_consecutive_duplicates;\n    assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n    assert(candidate((std::any({(long)10, (long)10, (long)15, (long)19, (long)18, (long)18, (long)17, (long)26, (long)26, (long)17, (long)18, (long)10}))) == (std::any({(std::vector<long>)std::vector<long>({(long)10, (long)10}), (std::vector<long>)std::vector<long>({(long)15}), (std::vector<long>)std::vector<long>({(long)19}), (std::vector<long>)std::vector<long>({(long)18, (long)18}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)26, (long)26}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)18}), (std::vector<long>)std::vector<long>({(long)10})})));\n    assert(candidate((std::any({(std::string)\"a\", (std::string)\"a\", (std::string)\"b\", (std::string)\"c\", (std::string)\"d\", (std::string)\"d\"}))) == (std::any({(std::vector<std::string>)std::vector<std::string>({(std::string)\"a\", (std::string)\"a\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"b\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"c\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"d\", (std::string)\"d\"})})));\n}\n",
      "timestamp": 1665510437,
      "stdout": "",
      "stderr": "/tmp/tmpgspun4wj.cpp: In function \u2018std::any pack_consecutive_duplicates(std::any)\u2019:\n/tmp/tmpgspun4wj.cpp:69:1: warning: no return statement in function returning non-void [-Wreturn-type]\n   69 | }\n      | ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpgspun4wj.cpp:2:\n/tmp/tmpgspun4wj.cpp: In function \u2018int main()\u2019:\n/tmp/tmpgspun4wj.cpp:72:176: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   72 |     assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n      |                                                                                                                                                                                ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpgspun4wj.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>,",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to pack consecutive duplicates of a given list elements into sublists.\nstd::any pack_consecutive_duplicates(std::any list1) {\n    std::any list2;\n    std::any temp;\n    std::any temp2;\n    std::any temp3;\n    std::any temp4;\n    std::any temp5;\n    std::any temp6;\n    std::any temp7;\n    std::any temp8;\n    std::any temp9;\n    std::any temp10;\n    std::any temp11;\n    std::any temp12;\n    std::any temp13;\n    std::any temp14;\n    std::any temp15;\n    std::any temp16;\n    std::any temp17;\n    std::any temp18;\n    std::any temp19;\n    std::any temp20;\n    std::any temp21;\n    std::any temp22;\n    std::any temp23;\n    std::any temp24;\n    std::any temp25;\n    std::any temp26;\n    std::any temp27;\n    std::any temp28;\n    std::any temp29;\n    std::any temp30;\n    std::any temp31;\n    std::any temp32;\n    std::any temp33;\n    std::any temp34;\n    std::any temp35;\n    std::any temp36;\n    std::any temp37;\n    std::any temp38;\n    std::any temp39;\n    std::any temp40;\n    std::any temp41;\n    std::any temp42;\n    std::any temp43;\n    std::any temp44;\n    std::any temp45;\n    std::any temp46;\n    std::any temp47;\n    std::any temp48;\n    std::any temp49;\n    std::any temp50;\n    std::any temp51;\n    std::any temp52;\n    std::any temp53;\n    std::any temp54;\n    std::any temp55;\n    std::any temp56;\n    std::any temp57;\n    std::any temp58;\n    std::any temp59;\n    std::any temp60;\n    std::any temp61;\n    std::any temp62;\n    std::any temp63;\n\n}\nint main() {\n    auto candidate = pack_consecutive_duplicates;\n    assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n    assert(candidate((std::any({(long)10, (long)10, (long)15, (long)19, (long)18, (long)18, (long)17, (long)26, (long)26, (long)17, (long)18, (long)10}))) == (std::any({(std::vector<long>)std::vector<long>({(long)10, (long)10}), (std::vector<long>)std::vector<long>({(long)15}), (std::vector<long>)std::vector<long>({(long)19}), (std::vector<long>)std::vector<long>({(long)18, (long)18}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)26, (long)26}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)18}), (std::vector<long>)std::vector<long>({(long)10})})));\n    assert(candidate((std::any({(std::string)\"a\", (std::string)\"a\", (std::string)\"b\", (std::string)\"c\", (std::string)\"d\", (std::string)\"d\"}))) == (std::any({(std::vector<std::string>)std::vector<std::string>({(std::string)\"a\", (std::string)\"a\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"b\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"c\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"d\", (std::string)\"d\"})})));\n}\n",
      "timestamp": 1665510437,
      "stdout": "",
      "stderr": "/tmp/tmp996xkpjp.cpp: In function \u2018std::any pack_consecutive_duplicates(std::any)\u2019:\n/tmp/tmp996xkpjp.cpp:70:1: warning: no return statement in function returning non-void [-Wreturn-type]\n   70 | }\n      | ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp996xkpjp.cpp:2:\n/tmp/tmp996xkpjp.cpp: In function \u2018int main()\u2019:\n/tmp/tmp996xkpjp.cpp:73:176: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   73 |     assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n      |                                                                                                                                                                                ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmp996xkpjp.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>,",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to pack consecutive duplicates of a given list elements into sublists.\nstd::any pack_consecutive_duplicates(std::any list1) {\n    std::any list2;\n    std::any list3;\n    std::any list4;\n    std::any list5;\n    std::any list6;\n    std::any list7;\n    std::any list8;\n    std::any list9;\n    std::any list10;\n    std::any list11;\n    std::any list12;\n    std::any list13;\n    std::any list14;\n    std::any list15;\n    std::any list16;\n    std::any list17;\n    std::any list18;\n    std::any list19;\n    std::any list20;\n    std::any list21;\n    std::any list22;\n    std::any list23;\n    std::any list24;\n    std::any list25;\n    std::any list26;\n    std::any list27;\n    std::any list28;\n    std::any list29;\n    std::any list30;\n    std::any list31;\n    std::any list32;\n    std::any list33;\n    std::any list34;\n    std::any list35;\n    std::any list36;\n    std::any list37;\n    std::any list38;\n    std::any list39;\n    std::any list40;\n    std::any list41;\n    std::any list42;\n    std::any list43;\n    std::any list44;\n    std::any list45;\n    std::any list46;\n    std::any list47;\n    std::any list48;\n    std::any list49;\n    std::any list50;\n    std::any list51;\n    std::any list52;\n    std::any list53;\n    std::any list54;\n    std::any list55;\n    std::any list56;\n    std::any list57;\n    std::any list58;\n    std::any list59;\n    std::any list60;\n    std::any list61;\n    std::any list62;\n    std::any list63;\n    std::any list64;\n    std::any list65;\n}\nint main() {\n    auto candidate = pack_consecutive_duplicates;\n    assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n    assert(candidate((std::any({(long)10, (long)10, (long)15, (long)19, (long)18, (long)18, (long)17, (long)26, (long)26, (long)17, (long)18, (long)10}))) == (std::any({(std::vector<long>)std::vector<long>({(long)10, (long)10}), (std::vector<long>)std::vector<long>({(long)15}), (std::vector<long>)std::vector<long>({(long)19}), (std::vector<long>)std::vector<long>({(long)18, (long)18}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)26, (long)26}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)18}), (std::vector<long>)std::vector<long>({(long)10})})));\n    assert(candidate((std::any({(std::string)\"a\", (std::string)\"a\", (std::string)\"b\", (std::string)\"c\", (std::string)\"d\", (std::string)\"d\"}))) == (std::any({(std::vector<std::string>)std::vector<std::string>({(std::string)\"a\", (std::string)\"a\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"b\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"c\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"d\", (std::string)\"d\"})})));\n}\n",
      "timestamp": 1665510437,
      "stdout": "",
      "stderr": "/tmp/tmpgspun4wj.cpp: In function \u2018std::any pack_consecutive_duplicates(std::any)\u2019:\n/tmp/tmpgspun4wj.cpp:69:1: warning: no return statement in function returning non-void [-Wreturn-type]\n   69 | }\n      | ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpgspun4wj.cpp:2:\n/tmp/tmpgspun4wj.cpp: In function \u2018int main()\u2019:\n/tmp/tmpgspun4wj.cpp:72:176: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   72 |     assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n      |                                                                                                                                                                                ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpgspun4wj.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>,",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to pack consecutive duplicates of a given list elements into sublists.\nstd::any pack_consecutive_duplicates(std::any list1) {\n    std::any list2;\n    std::any temp;\n    std::any temp2;\n    int count = 1;\n    for (int i = 0; i < list1.size(); i++) {\n        if (list1[i] == list1[i + 1]) {\n            count++;\n        } else {\n            temp.push_back(list1[i]);\n            temp2.push_back(count);\n            list2.push_back(temp);\n            list2.push_back(temp2);\n            temp.clear();\n            temp2.clear();\n            count = 1;\n        }\n    }\n    return list2;\n}\nint main() {\n    auto candidate = pack_consecutive_duplicates;\n    assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n    assert(candidate((std::any({(long)10, (long)10, (long)15, (long)19, (long)18, (long)18, (long)17, (long)26, (long)26, (long)17, (long)18, (long)10}))) == (std::any({(std::vector<long>)std::vector<long>({(long)10, (long)10}), (std::vector<long>)std::vector<long>({(long)15}), (std::vector<long>)std::vector<long>({(long)19}), (std::vector<long>)std::vector<long>({(long)18, (long)18}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)26, (long)26}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)18}), (std::vector<long>)std::vector<long>({(long)10})})));\n    assert(candidate((std::any({(std::string)\"a\", (std::string)\"a\", (std::string)\"b\", (std::string)\"c\", (std::string)\"d\", (std::string)\"d\"}))) == (std::any({(std::vector<std::string>)std::vector<std::string>({(std::string)\"a\", (std::string)\"a\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"b\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"c\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"d\", (std::string)\"d\"})})));\n}\n",
      "timestamp": 1666123400,
      "stdout": "",
      "stderr": "/tmp/tmp0kjsii86.cpp: In function \u2018std::any pack_consecutive_duplicates(std::any)\u2019:\n/tmp/tmp0kjsii86.cpp:9:31: error: \u2018class std::any\u2019 has no member named \u2018size\u2019\n    9 |     for (int i = 0; i < list1.size(); i++) {\n      |                               ^~~~\n/tmp/tmp0kjsii86.cpp:10:18: error: no match for \u2018operator[]\u2019 (operand types are \u2018std::any\u2019 and \u2018int\u2019)\n   10 |         if (list1[i] == list1[i + 1]) {\n      |                  ^\n/tmp/tmp0kjsii86.cpp:10:30: error: no match for \u2018operator[]\u2019 (operand types are \u2018std::any\u2019 and \u2018int\u2019)\n   10 |         if (list1[i] == list1[i + 1]) {\n      |                              ^\n/tmp/tmp0kjsii86.cpp:13:18: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   13 |             temp.push_back(list1[i]);\n      |                  ^~~~~~~~~\n/tmp/tmp0kjsii86.cpp:13:33: error: no match for \u2018operator[]\u2019 (operand types are \u2018std::any\u2019 and \u2018int\u2019)\n   13 |             temp.push_back(list1[i]);\n      |                                 ^\n/tmp/tmp0kjsii86.cpp:14:19: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   14 |             temp2.push_back(count);\n      |                   ^~~~~~~~~\n/tmp/tmp0kjsii86.cpp:15:19: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   15 |             list2.push_back(temp);\n      |                   ^~~~~~~~~\n/tmp/tmp0kjsii86.cpp:16:19: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   16 |             list2.push_back(temp2);\n      |                   ^~~~~~~~~\n/tmp/tmp0kjsii86.cpp:17:18: error: \u2018class std::any\u2019 has no member named \u2018clear\u2019\n   17 |             temp.clear();\n      |                  ^~~~~\n/tmp/tmp0kjsii86.cpp:18:19: error: \u2018class std::any\u2019 has no member named \u2018clear\u2019\n   18 |             temp2.clear();\n      |                   ^~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc+",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to pack consecutive duplicates of a given list elements into sublists.\nstd::any pack_consecutive_duplicates(std::any list1) {\n    std::any list2;\n    std::any sublist;\n    std::any temp;\n    while(!list1.empty()) {\n        temp = list1.front();\n        sublist.push_back(temp);\n        list1.pop_front();\n        while(!list1.empty() && temp == list1.front()) {\n            sublist.push_back(list1.front());\n            list1.pop_front();\n        }\n        list2.push_back(sublist);\n        sublist.clear();\n    }\n    return list2;\n}\nint main() {\n    auto candidate = pack_consecutive_duplicates;\n    assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n    assert(candidate((std::any({(long)10, (long)10, (long)15, (long)19, (long)18, (long)18, (long)17, (long)26, (long)26, (long)17, (long)18, (long)10}))) == (std::any({(std::vector<long>)std::vector<long>({(long)10, (long)10}), (std::vector<long>)std::vector<long>({(long)15}), (std::vector<long>)std::vector<long>({(long)19}), (std::vector<long>)std::vector<long>({(long)18, (long)18}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)26, (long)26}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)18}), (std::vector<long>)std::vector<long>({(long)10})})));\n    assert(candidate((std::any({(std::string)\"a\", (std::string)\"a\", (std::string)\"b\", (std::string)\"c\", (std::string)\"d\", (std::string)\"d\"}))) == (std::any({(std::vector<std::string>)std::vector<std::string>({(std::string)\"a\", (std::string)\"a\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"b\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"c\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"d\", (std::string)\"d\"})})));\n}\n",
      "timestamp": 1666123400,
      "stdout": "",
      "stderr": "/tmp/tmp4u_mk63m.cpp: In function \u2018std::any pack_consecutive_duplicates(std::any)\u2019:\n/tmp/tmp4u_mk63m.cpp:8:18: error: \u2018class std::any\u2019 has no member named \u2018empty\u2019\n    8 |     while(!list1.empty()) {\n      |                  ^~~~~\n/tmp/tmp4u_mk63m.cpp:9:22: error: \u2018class std::any\u2019 has no member named \u2018front\u2019\n    9 |         temp = list1.front();\n      |                      ^~~~~\n/tmp/tmp4u_mk63m.cpp:10:17: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   10 |         sublist.push_back(temp);\n      |                 ^~~~~~~~~\n/tmp/tmp4u_mk63m.cpp:11:15: error: \u2018class std::any\u2019 has no member named \u2018pop_front\u2019\n   11 |         list1.pop_front();\n      |               ^~~~~~~~~\n/tmp/tmp4u_mk63m.cpp:12:22: error: \u2018class std::any\u2019 has no member named \u2018empty\u2019\n   12 |         while(!list1.empty() && temp == list1.front()) {\n      |                      ^~~~~\n/tmp/tmp4u_mk63m.cpp:12:47: error: \u2018class std::any\u2019 has no member named \u2018front\u2019\n   12 |         while(!list1.empty() && temp == list1.front()) {\n      |                                               ^~~~~\n/tmp/tmp4u_mk63m.cpp:13:21: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   13 |             sublist.push_back(list1.front());\n      |                     ^~~~~~~~~\n/tmp/tmp4u_mk63m.cpp:13:37: error: \u2018class std::any\u2019 has no member named \u2018front\u2019\n   13 |             sublist.push_back(list1.front());\n      |                                     ^~~~~\n/tmp/tmp4u_mk63m.cpp:14:19: error: \u2018class std::any\u2019 has no member named \u2018pop_front\u2019\n   14 |             list1.pop_front();\n      |                   ^~~~~~~~~\n/tmp/tmp4u_mk63m.cpp:16:15: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   16 |         list2.push_back(sublist);\n      |               ^~~~~~~~~\n/tmp/tmp4u_mk63m.cpp:17:17: error: \u2018class std::any\u2019 has no member named \u2018clear\u2019\n   17 |         sublist.clear();\n      |                 ^~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/inc",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to pack consecutive duplicates of a given list elements into sublists.\nstd::any pack_consecutive_duplicates(std::any list1) {\n    std::any list2;\n    std::any list3;\n    std::any list4;\n    std::any list5;\n    std::any list6;\n    std::any list7;\n    std::any list8;\n    std::any list9;\n    std::any list10;\n    std::any list11;\n    std::any list12;\n    std::any list13;\n    std::any list14;\n    std::any list15;\n    std::any list16;\n    std::any list17;\n    std::any list18;\n    std::any list19;\n    std::any list20;\n    std::any list21;\n    std::any list22;\n    std::any list23;\n    std::any list24;\n    std::any list25;\n    std::any list26;\n    std::any list27;\n    std::any list28;\n    std::any list29;\n    std::any list30;\n    std::any list31;\n    std::any list32;\n    std::any list33;\n    std::any list34;\n    std::any list35;\n    std::any list36;\n    std::any list37;\n    std::any list38;\n    std::any list39;\n    std::any list40;\n    std::any list41;\n    std::any list42;\n    std::any list43;\n    std::any list44;\n    std::any list45;\n    std::any list46;\n    std::any list47;\n    std::any list48;\n    std::any list49;\n    std::any list50;\n    std::any list51;\n    std::any list52;\n    std::any list53;\n    std::any list54;\n    std::any list55;\n    std::any list56;\n    std::any list57;\n    std::any list58;\n    std::any list59;\n    std::any list60;\n    std::any list61;\n    std::any list62;\n    std::any list63;\n    std::any list64;\n    std::any list65;\n}\nint main() {\n    auto candidate = pack_consecutive_duplicates;\n    assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n    assert(candidate((std::any({(long)10, (long)10, (long)15, (long)19, (long)18, (long)18, (long)17, (long)26, (long)26, (long)17, (long)18, (long)10}))) == (std::any({(std::vector<long>)std::vector<long>({(long)10, (long)10}), (std::vector<long>)std::vector<long>({(long)15}), (std::vector<long>)std::vector<long>({(long)19}), (std::vector<long>)std::vector<long>({(long)18, (long)18}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)26, (long)26}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)18}), (std::vector<long>)std::vector<long>({(long)10})})));\n    assert(candidate((std::any({(std::string)\"a\", (std::string)\"a\", (std::string)\"b\", (std::string)\"c\", (std::string)\"d\", (std::string)\"d\"}))) == (std::any({(std::vector<std::string>)std::vector<std::string>({(std::string)\"a\", (std::string)\"a\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"b\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"c\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"d\", (std::string)\"d\"})})));\n}\n",
      "timestamp": 1665510437,
      "stdout": "",
      "stderr": "/tmp/tmpgspun4wj.cpp: In function \u2018std::any pack_consecutive_duplicates(std::any)\u2019:\n/tmp/tmpgspun4wj.cpp:69:1: warning: no return statement in function returning non-void [-Wreturn-type]\n   69 | }\n      | ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpgspun4wj.cpp:2:\n/tmp/tmpgspun4wj.cpp: In function \u2018int main()\u2019:\n/tmp/tmpgspun4wj.cpp:72:176: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   72 |     assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n      |                                                                                                                                                                                ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpgspun4wj.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>,",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to pack consecutive duplicates of a given list elements into sublists.\nstd::any pack_consecutive_duplicates(std::any list1) {\n    std::any result;\n    std::any temp;\n    std::any::iterator it = list1.begin();\n    while (it != list1.end()) {\n        temp.push_back(*it);\n        it++;\n        if (it == list1.end() || *it != temp.back()) {\n            result.push_back(temp);\n            temp.clear();\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = pack_consecutive_duplicates;\n    assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n    assert(candidate((std::any({(long)10, (long)10, (long)15, (long)19, (long)18, (long)18, (long)17, (long)26, (long)26, (long)17, (long)18, (long)10}))) == (std::any({(std::vector<long>)std::vector<long>({(long)10, (long)10}), (std::vector<long>)std::vector<long>({(long)15}), (std::vector<long>)std::vector<long>({(long)19}), (std::vector<long>)std::vector<long>({(long)18, (long)18}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)26, (long)26}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)18}), (std::vector<long>)std::vector<long>({(long)10})})));\n    assert(candidate((std::any({(std::string)\"a\", (std::string)\"a\", (std::string)\"b\", (std::string)\"c\", (std::string)\"d\", (std::string)\"d\"}))) == (std::any({(std::vector<std::string>)std::vector<std::string>({(std::string)\"a\", (std::string)\"a\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"b\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"c\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"d\", (std::string)\"d\"})})));\n}\n",
      "timestamp": 1666123400,
      "stdout": "",
      "stderr": "/tmp/tmpzuceu_tp.cpp: In function \u2018std::any pack_consecutive_duplicates(std::any)\u2019:\n/tmp/tmpzuceu_tp.cpp:7:15: error: \u2018iterator\u2019 is not a member of \u2018std::any\u2019\n    7 |     std::any::iterator it = list1.begin();\n      |               ^~~~~~~~\n/tmp/tmpzuceu_tp.cpp:8:12: error: \u2018it\u2019 was not declared in this scope; did you mean \u2018int\u2019?\n    8 |     while (it != list1.end()) {\n      |            ^~\n      |            int\n/tmp/tmpzuceu_tp.cpp:8:24: error: \u2018class std::any\u2019 has no member named \u2018end\u2019\n    8 |     while (it != list1.end()) {\n      |                        ^~~\n/tmp/tmpzuceu_tp.cpp:9:14: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n    9 |         temp.push_back(*it);\n      |              ^~~~~~~~~\n/tmp/tmpzuceu_tp.cpp:11:25: error: \u2018class std::any\u2019 has no member named \u2018end\u2019\n   11 |         if (it == list1.end() || *it != temp.back()) {\n      |                         ^~~\n/tmp/tmpzuceu_tp.cpp:11:46: error: \u2018class std::any\u2019 has no member named \u2018back\u2019\n   11 |         if (it == list1.end() || *it != temp.back()) {\n      |                                              ^~~~\n/tmp/tmpzuceu_tp.cpp:12:20: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   12 |             result.push_back(temp);\n      |                    ^~~~~~~~~\n/tmp/tmpzuceu_tp.cpp:13:18: error: \u2018class std::any\u2019 has no member named \u2018clear\u2019\n   13 |             temp.clear();\n      |                  ^~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpzuceu_tp.cpp:2:\n/tmp/tmpzuceu_tp.cpp: In function \u2018int main()\u2019:\n/tmp/tmpzuceu_tp.cpp:20:176: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   20 |     assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to pack consecutive duplicates of a given list elements into sublists.\nstd::any pack_consecutive_duplicates(std::any list1) {\n    std::any list2;\n    std::any sublist;\n    std::any temp;\n    while(list1.length() > 0) {\n        temp = list1.pop_front();\n        while(list1.length() > 0 && list1.front() == temp) {\n            sublist.push_back(list1.pop_front());\n        }\n        sublist.push_back(temp);\n        list2.push_back(sublist);\n        sublist.clear();\n    }\n    return list2;\n}\nint main() {\n    auto candidate = pack_consecutive_duplicates;\n    assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n    assert(candidate((std::any({(long)10, (long)10, (long)15, (long)19, (long)18, (long)18, (long)17, (long)26, (long)26, (long)17, (long)18, (long)10}))) == (std::any({(std::vector<long>)std::vector<long>({(long)10, (long)10}), (std::vector<long>)std::vector<long>({(long)15}), (std::vector<long>)std::vector<long>({(long)19}), (std::vector<long>)std::vector<long>({(long)18, (long)18}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)26, (long)26}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)18}), (std::vector<long>)std::vector<long>({(long)10})})));\n    assert(candidate((std::any({(std::string)\"a\", (std::string)\"a\", (std::string)\"b\", (std::string)\"c\", (std::string)\"d\", (std::string)\"d\"}))) == (std::any({(std::vector<std::string>)std::vector<std::string>({(std::string)\"a\", (std::string)\"a\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"b\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"c\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"d\", (std::string)\"d\"})})));\n}\n",
      "timestamp": 1666123400,
      "stdout": "",
      "stderr": "/tmp/tmpq9v5aj_0.cpp: In function \u2018std::any pack_consecutive_duplicates(std::any)\u2019:\n/tmp/tmpq9v5aj_0.cpp:8:17: error: \u2018class std::any\u2019 has no member named \u2018length\u2019\n    8 |     while(list1.length() > 0) {\n      |                 ^~~~~~\n/tmp/tmpq9v5aj_0.cpp:9:22: error: \u2018class std::any\u2019 has no member named \u2018pop_front\u2019\n    9 |         temp = list1.pop_front();\n      |                      ^~~~~~~~~\n/tmp/tmpq9v5aj_0.cpp:10:21: error: \u2018class std::any\u2019 has no member named \u2018length\u2019\n   10 |         while(list1.length() > 0 && list1.front() == temp) {\n      |                     ^~~~~~\n/tmp/tmpq9v5aj_0.cpp:10:43: error: \u2018class std::any\u2019 has no member named \u2018front\u2019\n   10 |         while(list1.length() > 0 && list1.front() == temp) {\n      |                                           ^~~~~\n/tmp/tmpq9v5aj_0.cpp:11:21: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   11 |             sublist.push_back(list1.pop_front());\n      |                     ^~~~~~~~~\n/tmp/tmpq9v5aj_0.cpp:11:37: error: \u2018class std::any\u2019 has no member named \u2018pop_front\u2019\n   11 |             sublist.push_back(list1.pop_front());\n      |                                     ^~~~~~~~~\n/tmp/tmpq9v5aj_0.cpp:13:17: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   13 |         sublist.push_back(temp);\n      |                 ^~~~~~~~~\n/tmp/tmpq9v5aj_0.cpp:14:15: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   14 |         list2.push_back(sublist);\n      |               ^~~~~~~~~\n/tmp/tmpq9v5aj_0.cpp:15:17: error: \u2018class std::any\u2019 has no member named \u2018clear\u2019\n   15 |         sublist.clear();\n      |                 ^~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpq9v5aj_0.cpp:2:\n/tmp/tmpq9v5aj_0.cpp: In function \u2018int main()\u2019:\n/tmp/tmpq9v5aj_0.cpp:21:176: error: no matching fun",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to pack consecutive duplicates of a given list elements into sublists.\nstd::any pack_consecutive_duplicates(std::any list1) {\n\tstd::any list2;\n\tstd::any list3;\n\tstd::any list4;\n\tstd::any list5;\n\tstd::any list6;\n\tstd::any list7;\n\tstd::any list8;\n\tstd::any list9;\n\tstd::any list10;\n\tstd::any list11;\n\tstd::any list12;\n\tstd::any list13;\n\tstd::any list14;\n\tstd::any list15;\n\tstd::any list16;\n\tstd::any list17;\n\tstd::any list18;\n\tstd::any list19;\n\tstd::any list20;\n\tstd::any list21;\n\tstd::any list22;\n\tstd::any list23;\n\tstd::any list24;\n\tstd::any list25;\n\tstd::any list26;\n\tstd::any list27;\n\tstd::any list28;\n\tstd::any list29;\n\tstd::any list30;\n\tstd::any list31;\n\tstd::any list32;\n\tstd::any list33;\n\tstd::any list34;\n\tstd::any list35;\n\tstd::any list36;\n\tstd::any list37;\n\tstd::any list38;\n\tstd::any list39;\n\tstd::any list40;\n\tstd::any list41;\n\tstd::any list42;\n\tstd::any list43;\n\tstd::any list44;\n\tstd::any list45;\n\tstd::any list46;\n\tstd::any list47;\n\tstd::any list48;\n\tstd::any list49;\n\tstd::any list50;\n\tstd::any list51;\n\tstd::any list52;\n\tstd::any list53;\n\tstd::any list54;\n\tstd::any list55;\n\tstd::any list56;\n\tstd::any list57;\n\tstd::any list58;\n\tstd::any list59;\n\tstd::any list60;\n\tstd::any list61;\n\tstd::any list62;\n\tstd::any list63;\n\tstd::any list64;\n\tstd::any list65;\n}\nint main() {\n    auto candidate = pack_consecutive_duplicates;\n    assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n    assert(candidate((std::any({(long)10, (long)10, (long)15, (long)19, (long)18, (long)18, (long)17, (long)26, (long)26, (long)17, (long)18, (long)10}))) == (std::any({(std::vector<long>)std::vector<long>({(long)10, (long)10}), (std::vector<long>)std::vector<long>({(long)15}), (std::vector<long>)std::vector<long>({(long)19}), (std::vector<long>)std::vector<long>({(long)18, (long)18}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)26, (long)26}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)18}), (std::vector<long>)std::vector<long>({(long)10})})));\n    assert(candidate((std::any({(std::string)\"a\", (std::string)\"a\", (std::string)\"b\", (std::string)\"c\", (std::string)\"d\", (std::string)\"d\"}))) == (std::any({(std::vector<std::string>)std::vector<std::string>({(std::string)\"a\", (std::string)\"a\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"b\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"c\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"d\", (std::string)\"d\"})})));\n}\n",
      "timestamp": 1666123400,
      "stdout": "",
      "stderr": "/tmp/tmpt52wpjxu.cpp: In function \u2018std::any pack_consecutive_duplicates(std::any)\u2019:\n/tmp/tmpt52wpjxu.cpp:69:1: warning: no return statement in function returning non-void [-Wreturn-type]\n   69 | }\n      | ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpt52wpjxu.cpp:2:\n/tmp/tmpt52wpjxu.cpp: In function \u2018int main()\u2019:\n/tmp/tmpt52wpjxu.cpp:72:176: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   72 |     assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n      |                                                                                                                                                                                ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpt52wpjxu.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>,",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to pack consecutive duplicates of a given list elements into sublists.\nstd::any pack_consecutive_duplicates(std::any list1) {\n\tstd::any list2;\n\tstd::any temp;\n\twhile(!list1.empty()){\n\t\ttemp.push_back(list1.front());\n\t\tlist1.pop_front();\n\t\twhile(!list1.empty() && list1.front() == temp.back()){\n\t\t\ttemp.push_back(list1.front());\n\t\t\tlist1.pop_front();\n\t\t}\n\t\tlist2.push_back(temp);\n\t\ttemp.clear();\n\t}\n\treturn list2;\n}\nint main() {\n    auto candidate = pack_consecutive_duplicates;\n    assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n    assert(candidate((std::any({(long)10, (long)10, (long)15, (long)19, (long)18, (long)18, (long)17, (long)26, (long)26, (long)17, (long)18, (long)10}))) == (std::any({(std::vector<long>)std::vector<long>({(long)10, (long)10}), (std::vector<long>)std::vector<long>({(long)15}), (std::vector<long>)std::vector<long>({(long)19}), (std::vector<long>)std::vector<long>({(long)18, (long)18}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)26, (long)26}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)18}), (std::vector<long>)std::vector<long>({(long)10})})));\n    assert(candidate((std::any({(std::string)\"a\", (std::string)\"a\", (std::string)\"b\", (std::string)\"c\", (std::string)\"d\", (std::string)\"d\"}))) == (std::any({(std::vector<std::string>)std::vector<std::string>({(std::string)\"a\", (std::string)\"a\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"b\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"c\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"d\", (std::string)\"d\"})})));\n}\n",
      "timestamp": 1666123401,
      "stdout": "",
      "stderr": "/tmp/tmpcd_ldzq9.cpp: In function \u2018std::any pack_consecutive_duplicates(std::any)\u2019:\n/tmp/tmpcd_ldzq9.cpp:7:15: error: \u2018class std::any\u2019 has no member named \u2018empty\u2019\n    7 |  while(!list1.empty()){\n      |               ^~~~~\n/tmp/tmpcd_ldzq9.cpp:8:8: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n    8 |   temp.push_back(list1.front());\n      |        ^~~~~~~~~\n/tmp/tmpcd_ldzq9.cpp:8:24: error: \u2018class std::any\u2019 has no member named \u2018front\u2019\n    8 |   temp.push_back(list1.front());\n      |                        ^~~~~\n/tmp/tmpcd_ldzq9.cpp:9:9: error: \u2018class std::any\u2019 has no member named \u2018pop_front\u2019\n    9 |   list1.pop_front();\n      |         ^~~~~~~~~\n/tmp/tmpcd_ldzq9.cpp:10:16: error: \u2018class std::any\u2019 has no member named \u2018empty\u2019\n   10 |   while(!list1.empty() && list1.front() == temp.back()){\n      |                ^~~~~\n/tmp/tmpcd_ldzq9.cpp:10:33: error: \u2018class std::any\u2019 has no member named \u2018front\u2019\n   10 |   while(!list1.empty() && list1.front() == temp.back()){\n      |                                 ^~~~~\n/tmp/tmpcd_ldzq9.cpp:10:49: error: \u2018class std::any\u2019 has no member named \u2018back\u2019\n   10 |   while(!list1.empty() && list1.front() == temp.back()){\n      |                                                 ^~~~\n/tmp/tmpcd_ldzq9.cpp:11:9: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   11 |    temp.push_back(list1.front());\n      |         ^~~~~~~~~\n/tmp/tmpcd_ldzq9.cpp:11:25: error: \u2018class std::any\u2019 has no member named \u2018front\u2019\n   11 |    temp.push_back(list1.front());\n      |                         ^~~~~\n/tmp/tmpcd_ldzq9.cpp:12:10: error: \u2018class std::any\u2019 has no member named \u2018pop_front\u2019\n   12 |    list1.pop_front();\n      |          ^~~~~~~~~\n/tmp/tmpcd_ldzq9.cpp:14:9: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   14 |   list2.push_back(temp);\n      |         ^~~~~~~~~\n/tmp/tmpcd_ldzq9.cpp:15:8: error: \u2018class std::any\u2019 has no member named \u2018clear\u2019\n   15 |   temp.clear();\n      |        ^",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to pack consecutive duplicates of a given list elements into sublists.\nstd::any pack_consecutive_duplicates(std::any list1) {\n    std::any list2;\n    std::any temp;\n    std::any temp1;\n    std::any temp2;\n    std::any temp3;\n    std::any temp4;\n    std::any temp5;\n    std::any temp6;\n    std::any temp7;\n    std::any temp8;\n    std::any temp9;\n    std::any temp10;\n    std::any temp11;\n    std::any temp12;\n    std::any temp13;\n    std::any temp14;\n    std::any temp15;\n    std::any temp16;\n    std::any temp17;\n    std::any temp18;\n    std::any temp19;\n    std::any temp20;\n    std::any temp21;\n    std::any temp22;\n    std::any temp23;\n    std::any temp24;\n    std::any temp25;\n    std::any temp26;\n    std::any temp27;\n    std::any temp28;\n    std::any temp29;\n    std::any temp30;\n    std::any temp31;\n    std::any temp32;\n    std::any temp33;\n    std::any temp34;\n    std::any temp35;\n    std::any temp36;\n    std::any temp37;\n    std::any temp38;\n    std::any temp39;\n    std::any temp40;\n    std::any temp41;\n    std::any temp42;\n    std::any temp43;\n    std::any temp44;\n    std::any temp45;\n    std::any temp46;\n    std::any temp47;\n    std::any temp48;\n    std::any temp49;\n    std::any temp50;\n    std::any temp51;\n    std::any temp52;\n    std::any temp53;\n    std::any temp54;\n    std::any temp55;\n    std::any temp56;\n    std::any temp57;\n    std::any temp58;\n    std::any temp59;\n    std::any temp60;\n    std::any temp61;\n    std::any temp62;\n\n}\nint main() {\n    auto candidate = pack_consecutive_duplicates;\n    assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n    assert(candidate((std::any({(long)10, (long)10, (long)15, (long)19, (long)18, (long)18, (long)17, (long)26, (long)26, (long)17, (long)18, (long)10}))) == (std::any({(std::vector<long>)std::vector<long>({(long)10, (long)10}), (std::vector<long>)std::vector<long>({(long)15}), (std::vector<long>)std::vector<long>({(long)19}), (std::vector<long>)std::vector<long>({(long)18, (long)18}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)26, (long)26}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)18}), (std::vector<long>)std::vector<long>({(long)10})})));\n    assert(candidate((std::any({(std::string)\"a\", (std::string)\"a\", (std::string)\"b\", (std::string)\"c\", (std::string)\"d\", (std::string)\"d\"}))) == (std::any({(std::vector<std::string>)std::vector<std::string>({(std::string)\"a\", (std::string)\"a\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"b\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"c\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"d\", (std::string)\"d\"})})));\n}\n",
      "timestamp": 1665510437,
      "stdout": "",
      "stderr": "/tmp/tmp6a5kikx3.cpp: In function \u2018std::any pack_consecutive_duplicates(std::any)\u2019:\n/tmp/tmp6a5kikx3.cpp:70:1: warning: no return statement in function returning non-void [-Wreturn-type]\n   70 | }\n      | ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp6a5kikx3.cpp:2:\n/tmp/tmp6a5kikx3.cpp: In function \u2018int main()\u2019:\n/tmp/tmp6a5kikx3.cpp:73:176: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   73 |     assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n      |                                                                                                                                                                                ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmp6a5kikx3.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>,",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to pack consecutive duplicates of a given list elements into sublists.\nstd::any pack_consecutive_duplicates(std::any list1) {\n    std::any list2;\n    std::any list3;\n    std::any list4;\n    std::any list5;\n    std::any list6;\n    std::any list7;\n    std::any list8;\n    std::any list9;\n    std::any list10;\n    std::any list11;\n    std::any list12;\n    std::any list13;\n    std::any list14;\n    std::any list15;\n    std::any list16;\n    std::any list17;\n    std::any list18;\n    std::any list19;\n    std::any list20;\n    std::any list21;\n    std::any list22;\n    std::any list23;\n    std::any list24;\n    std::any list25;\n    std::any list26;\n    std::any list27;\n    std::any list28;\n    std::any list29;\n    std::any list30;\n    std::any list31;\n    std::any list32;\n    std::any list33;\n    std::any list34;\n    std::any list35;\n    std::any list36;\n    std::any list37;\n    std::any list38;\n    std::any list39;\n    std::any list40;\n    std::any list41;\n    std::any list42;\n    std::any list43;\n    std::any list44;\n    std::any list45;\n    std::any list46;\n    std::any list47;\n    std::any list48;\n    std::any list49;\n    std::any list50;\n    std::any list51;\n    std::any list52;\n    std::any list53;\n    std::any list54;\n    std::any list55;\n    std::any list56;\n    std::any list57;\n    std::any list58;\n    std::any list59;\n    std::any list60;\n    std::any list61;\n    std::any list62;\n    std::any list63;\n    std::any list64;\n    std::any list65;\n}\nint main() {\n    auto candidate = pack_consecutive_duplicates;\n    assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n    assert(candidate((std::any({(long)10, (long)10, (long)15, (long)19, (long)18, (long)18, (long)17, (long)26, (long)26, (long)17, (long)18, (long)10}))) == (std::any({(std::vector<long>)std::vector<long>({(long)10, (long)10}), (std::vector<long>)std::vector<long>({(long)15}), (std::vector<long>)std::vector<long>({(long)19}), (std::vector<long>)std::vector<long>({(long)18, (long)18}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)26, (long)26}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)18}), (std::vector<long>)std::vector<long>({(long)10})})));\n    assert(candidate((std::any({(std::string)\"a\", (std::string)\"a\", (std::string)\"b\", (std::string)\"c\", (std::string)\"d\", (std::string)\"d\"}))) == (std::any({(std::vector<std::string>)std::vector<std::string>({(std::string)\"a\", (std::string)\"a\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"b\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"c\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"d\", (std::string)\"d\"})})));\n}\n",
      "timestamp": 1665510437,
      "stdout": "",
      "stderr": "/tmp/tmpgspun4wj.cpp: In function \u2018std::any pack_consecutive_duplicates(std::any)\u2019:\n/tmp/tmpgspun4wj.cpp:69:1: warning: no return statement in function returning non-void [-Wreturn-type]\n   69 | }\n      | ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpgspun4wj.cpp:2:\n/tmp/tmpgspun4wj.cpp: In function \u2018int main()\u2019:\n/tmp/tmpgspun4wj.cpp:72:176: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   72 |     assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n      |                                                                                                                                                                                ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpgspun4wj.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>,",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to pack consecutive duplicates of a given list elements into sublists.\nstd::any pack_consecutive_duplicates(std::any list1) {\n    std::any new_list;\n    std::any temp_list;\n    std::any temp;\n    while(!list1.empty()) {\n        temp = list1.front();\n        while(!list1.empty() && list1.front() == temp) {\n            temp_list.push_back(list1.front());\n            list1.pop_front();\n        }\n        new_list.push_back(temp_list);\n        temp_list.clear();\n    }\n    return new_list;\n}\nint main() {\n    auto candidate = pack_consecutive_duplicates;\n    assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n    assert(candidate((std::any({(long)10, (long)10, (long)15, (long)19, (long)18, (long)18, (long)17, (long)26, (long)26, (long)17, (long)18, (long)10}))) == (std::any({(std::vector<long>)std::vector<long>({(long)10, (long)10}), (std::vector<long>)std::vector<long>({(long)15}), (std::vector<long>)std::vector<long>({(long)19}), (std::vector<long>)std::vector<long>({(long)18, (long)18}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)26, (long)26}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)18}), (std::vector<long>)std::vector<long>({(long)10})})));\n    assert(candidate((std::any({(std::string)\"a\", (std::string)\"a\", (std::string)\"b\", (std::string)\"c\", (std::string)\"d\", (std::string)\"d\"}))) == (std::any({(std::vector<std::string>)std::vector<std::string>({(std::string)\"a\", (std::string)\"a\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"b\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"c\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"d\", (std::string)\"d\"})})));\n}\n",
      "timestamp": 1666123401,
      "stdout": "",
      "stderr": "/tmp/tmp5vylnw7w.cpp: In function \u2018std::any pack_consecutive_duplicates(std::any)\u2019:\n/tmp/tmp5vylnw7w.cpp:8:18: error: \u2018class std::any\u2019 has no member named \u2018empty\u2019\n    8 |     while(!list1.empty()) {\n      |                  ^~~~~\n/tmp/tmp5vylnw7w.cpp:9:22: error: \u2018class std::any\u2019 has no member named \u2018front\u2019\n    9 |         temp = list1.front();\n      |                      ^~~~~\n/tmp/tmp5vylnw7w.cpp:10:22: error: \u2018class std::any\u2019 has no member named \u2018empty\u2019\n   10 |         while(!list1.empty() && list1.front() == temp) {\n      |                      ^~~~~\n/tmp/tmp5vylnw7w.cpp:10:39: error: \u2018class std::any\u2019 has no member named \u2018front\u2019\n   10 |         while(!list1.empty() && list1.front() == temp) {\n      |                                       ^~~~~\n/tmp/tmp5vylnw7w.cpp:11:23: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   11 |             temp_list.push_back(list1.front());\n      |                       ^~~~~~~~~\n/tmp/tmp5vylnw7w.cpp:11:39: error: \u2018class std::any\u2019 has no member named \u2018front\u2019\n   11 |             temp_list.push_back(list1.front());\n      |                                       ^~~~~\n/tmp/tmp5vylnw7w.cpp:12:19: error: \u2018class std::any\u2019 has no member named \u2018pop_front\u2019\n   12 |             list1.pop_front();\n      |                   ^~~~~~~~~\n/tmp/tmp5vylnw7w.cpp:14:18: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   14 |         new_list.push_back(temp_list);\n      |                  ^~~~~~~~~\n/tmp/tmp5vylnw7w.cpp:15:19: error: \u2018class std::any\u2019 has no member named \u2018clear\u2019\n   15 |         temp_list.clear();\n      |                   ^~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp5vylnw7w.cpp:2:\n/tmp/tmp5vylnw7w.cpp: In function \u2018int main()\u2019:\n/tmp/tmp5vylnw7w.cpp:21:176: error: no matching function for call to \u2018std::",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to pack consecutive duplicates of a given list elements into sublists.\nstd::any pack_consecutive_duplicates(std::any list1) {\n    std::any list2;\n    std::any sublist;\n    std::any temp;\n    std::any temp2;\n    int i = 0;\n    int j = 0;\n    int k = 0;\n    int l = 0;\n    int m = 0;\n    int n = 0;\n    int o = 0;\n    int p = 0;\n    int q = 0;\n    int r = 0;\n    int s = 0;\n    int t = 0;\n    int u = 0;\n    int v = 0;\n    int w = 0;\n    int x = 0;\n    int y = 0;\n    int z = 0;\n    int aa = 0;\n    int ab = 0;\n    int ac = 0;\n    int ad = 0;\n    int ae = 0;\n    int af = 0;\n    int ag = 0;\n    int ah = 0;\n    int ai = 0;\n    int aj = 0;\n    int ak = 0;\n    int al = 0;\n    int am = 0;\n    int an = 0;\n    int ao = 0;\n    int ap = 0;\n    int aq = 0;\n    int ar = 0;\n    int as = 0;\n    int at = 0;\n    int au = 0;\n    int av = 0;\n    int aw = 0;\n    int ax = 0;\n    int ay = 0;\n    int az = 0;\n    int ba = 0;\n    int bb = 0;\n    int bc = 0;\n    int bd = 0;\n    int be = 0;\n    int bf = 0;\n    int bg = 0;\n    int bh = 0;\n    int bi = 0;\n    int bj = 0;\n    int bk = 0;\n    int bl = 0;\n    int bm = 0;\n    int bn = 0;\n    int bo = 0;\n    int bp = 0;\n    int bq = 0;\n    int br = 0;\n    int bs = 0;\n    int bt = 0;\n    int bu = 0;\n    int bv = 0\n}\nint main() {\n    auto candidate = pack_consecutive_duplicates;\n    assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n    assert(candidate((std::any({(long)10, (long)10, (long)15, (long)19, (long)18, (long)18, (long)17, (long)26, (long)26, (long)17, (long)18, (long)10}))) == (std::any({(std::vector<long>)std::vector<long>({(long)10, (long)10}), (std::vector<long>)std::vector<long>({(long)15}), (std::vector<long>)std::vector<long>({(long)19}), (std::vector<long>)std::vector<long>({(long)18, (long)18}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)26, (long)26}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)18}), (std::vector<long>)std::vector<long>({(long)10})})));\n    assert(candidate((std::any({(std::string)\"a\", (std::string)\"a\", (std::string)\"b\", (std::string)\"c\", (std::string)\"d\", (std::string)\"d\"}))) == (std::any({(std::vector<std::string>)std::vector<std::string>({(std::string)\"a\", (std::string)\"a\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"b\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"c\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"d\", (std::string)\"d\"})})));\n}\n",
      "timestamp": 1666123401,
      "stdout": "",
      "stderr": "/tmp/tmpfqcr96to.cpp: In function \u2018std::any pack_consecutive_duplicates(std::any)\u2019:\n/tmp/tmpfqcr96to.cpp:75:1: error: expected \u2018,\u2019 or \u2018;\u2019 before \u2018}\u2019 token\n   75 | }\n      | ^\n/tmp/tmpfqcr96to.cpp:75:1: warning: no return statement in function returning non-void [-Wreturn-type]\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpfqcr96to.cpp:2:\n/tmp/tmpfqcr96to.cpp: In function \u2018int main()\u2019:\n/tmp/tmpfqcr96to.cpp:78:176: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   78 |     assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n      |                                                                                                                                                                                ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpfqcr96to.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std:",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to pack consecutive duplicates of a given list elements into sublists.\nstd::any pack_consecutive_duplicates(std::any list1) {\n    std::any list2;\n    std::any temp;\n    std::any::iterator it1 = list1.begin();\n    std::any::iterator it2 = list2.begin();\n    while(it1 != list1.end()) {\n        temp.push_back(*it1);\n        it1++;\n        if(*it1 != *it2) {\n            list2.push_back(temp);\n            temp.clear();\n        }\n    }\n    return list2;\n}\nint main() {\n    auto candidate = pack_consecutive_duplicates;\n    assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n    assert(candidate((std::any({(long)10, (long)10, (long)15, (long)19, (long)18, (long)18, (long)17, (long)26, (long)26, (long)17, (long)18, (long)10}))) == (std::any({(std::vector<long>)std::vector<long>({(long)10, (long)10}), (std::vector<long>)std::vector<long>({(long)15}), (std::vector<long>)std::vector<long>({(long)19}), (std::vector<long>)std::vector<long>({(long)18, (long)18}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)26, (long)26}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)18}), (std::vector<long>)std::vector<long>({(long)10})})));\n    assert(candidate((std::any({(std::string)\"a\", (std::string)\"a\", (std::string)\"b\", (std::string)\"c\", (std::string)\"d\", (std::string)\"d\"}))) == (std::any({(std::vector<std::string>)std::vector<std::string>({(std::string)\"a\", (std::string)\"a\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"b\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"c\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"d\", (std::string)\"d\"})})));\n}\n",
      "timestamp": 1666123401,
      "stdout": "",
      "stderr": "/tmp/tmppuna9s3g.cpp: In function \u2018std::any pack_consecutive_duplicates(std::any)\u2019:\n/tmp/tmppuna9s3g.cpp:7:15: error: \u2018iterator\u2019 is not a member of \u2018std::any\u2019\n    7 |     std::any::iterator it1 = list1.begin();\n      |               ^~~~~~~~\n/tmp/tmppuna9s3g.cpp:8:15: error: \u2018iterator\u2019 is not a member of \u2018std::any\u2019\n    8 |     std::any::iterator it2 = list2.begin();\n      |               ^~~~~~~~\n/tmp/tmppuna9s3g.cpp:9:11: error: \u2018it1\u2019 was not declared in this scope; did you mean \u2018list1\u2019?\n    9 |     while(it1 != list1.end()) {\n      |           ^~~\n      |           list1\n/tmp/tmppuna9s3g.cpp:9:24: error: \u2018class std::any\u2019 has no member named \u2018end\u2019\n    9 |     while(it1 != list1.end()) {\n      |                        ^~~\n/tmp/tmppuna9s3g.cpp:10:14: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   10 |         temp.push_back(*it1);\n      |              ^~~~~~~~~\n/tmp/tmppuna9s3g.cpp:12:21: error: \u2018it2\u2019 was not declared in this scope; did you mean \u2018list2\u2019?\n   12 |         if(*it1 != *it2) {\n      |                     ^~~\n      |                     list2\n/tmp/tmppuna9s3g.cpp:13:19: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   13 |             list2.push_back(temp);\n      |                   ^~~~~~~~~\n/tmp/tmppuna9s3g.cpp:14:18: error: \u2018class std::any\u2019 has no member named \u2018clear\u2019\n   14 |             temp.clear();\n      |                  ^~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmppuna9s3g.cpp:2:\n/tmp/tmppuna9s3g.cpp: In function \u2018int main()\u2019:\n/tmp/tmppuna9s3g.cpp:21:176: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   21 |     assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to pack consecutive duplicates of a given list elements into sublists.\nstd::any pack_consecutive_duplicates(std::any list1) {\n    std::any res;\n    std::any temp;\n    std::any temp2;\n    std::any temp3;\n    std::any temp4;\n    std::any temp5;\n    std::any temp6;\n    std::any temp7;\n    std::any temp8;\n    std::any temp9;\n    std::any temp10;\n    std::any temp11;\n    std::any temp12;\n    std::any temp13;\n    std::any temp14;\n    std::any temp15;\n    std::any temp16;\n    std::any temp17;\n    std::any temp18;\n    std::any temp19;\n    std::any temp20;\n    std::any temp21;\n    std::any temp22;\n    std::any temp23;\n    std::any temp24;\n    std::any temp25;\n    std::any temp26;\n    std::any temp27;\n    std::any temp28;\n    std::any temp29;\n    std::any temp30;\n    std::any temp31;\n    std::any temp32;\n    std::any temp33;\n    std::any temp34;\n    std::any temp35;\n    std::any temp36;\n    std::any temp37;\n    std::any temp38;\n    std::any temp39;\n    std::any temp40;\n    std::any temp41;\n    std::any temp42;\n    std::any temp43;\n    std::any temp44;\n    std::any temp45;\n    std::any temp46;\n    std::any temp47;\n    std::any temp48;\n    std::any temp49;\n    std::any temp50;\n    std::any temp51;\n    std::any temp52;\n    std::any temp53;\n    std::any temp54;\n    std::any temp55;\n    std::any temp56;\n    std::any temp57;\n    std::any temp58;\n    std::any temp59;\n    std::any temp60;\n    std::any temp61;\n    std::any temp62;\n    std::any temp63;\n   \n}\nint main() {\n    auto candidate = pack_consecutive_duplicates;\n    assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n    assert(candidate((std::any({(long)10, (long)10, (long)15, (long)19, (long)18, (long)18, (long)17, (long)26, (long)26, (long)17, (long)18, (long)10}))) == (std::any({(std::vector<long>)std::vector<long>({(long)10, (long)10}), (std::vector<long>)std::vector<long>({(long)15}), (std::vector<long>)std::vector<long>({(long)19}), (std::vector<long>)std::vector<long>({(long)18, (long)18}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)26, (long)26}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)18}), (std::vector<long>)std::vector<long>({(long)10})})));\n    assert(candidate((std::any({(std::string)\"a\", (std::string)\"a\", (std::string)\"b\", (std::string)\"c\", (std::string)\"d\", (std::string)\"d\"}))) == (std::any({(std::vector<std::string>)std::vector<std::string>({(std::string)\"a\", (std::string)\"a\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"b\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"c\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"d\", (std::string)\"d\"})})));\n}\n",
      "timestamp": 1666123401,
      "stdout": "",
      "stderr": "/tmp/tmpb8o7_b3b.cpp: In function \u2018std::any pack_consecutive_duplicates(std::any)\u2019:\n/tmp/tmpb8o7_b3b.cpp:70:1: warning: no return statement in function returning non-void [-Wreturn-type]\n   70 | }\n      | ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpb8o7_b3b.cpp:2:\n/tmp/tmpb8o7_b3b.cpp: In function \u2018int main()\u2019:\n/tmp/tmpb8o7_b3b.cpp:73:176: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   73 |     assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n      |                                                                                                                                                                                ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpb8o7_b3b.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>,",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to pack consecutive duplicates of a given list elements into sublists.\nstd::any pack_consecutive_duplicates(std::any list1) {\n    std::any list2;\n    std::any temp;\n    std::any::iterator it = list1.begin();\n    while (it != list1.end()) {\n        temp.push_back(*it);\n        it++;\n        if (it == list1.end() || *it != temp.back()) {\n            list2.push_back(temp);\n            temp.clear();\n        }\n    }\n    return list2;\n}\nint main() {\n    auto candidate = pack_consecutive_duplicates;\n    assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n    assert(candidate((std::any({(long)10, (long)10, (long)15, (long)19, (long)18, (long)18, (long)17, (long)26, (long)26, (long)17, (long)18, (long)10}))) == (std::any({(std::vector<long>)std::vector<long>({(long)10, (long)10}), (std::vector<long>)std::vector<long>({(long)15}), (std::vector<long>)std::vector<long>({(long)19}), (std::vector<long>)std::vector<long>({(long)18, (long)18}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)26, (long)26}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)18}), (std::vector<long>)std::vector<long>({(long)10})})));\n    assert(candidate((std::any({(std::string)\"a\", (std::string)\"a\", (std::string)\"b\", (std::string)\"c\", (std::string)\"d\", (std::string)\"d\"}))) == (std::any({(std::vector<std::string>)std::vector<std::string>({(std::string)\"a\", (std::string)\"a\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"b\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"c\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"d\", (std::string)\"d\"})})));\n}\n",
      "timestamp": 1665510437,
      "stdout": "",
      "stderr": "/tmp/tmps8agvmg9.cpp: In function \u2018std::any pack_consecutive_duplicates(std::any)\u2019:\n/tmp/tmps8agvmg9.cpp:7:15: error: \u2018iterator\u2019 is not a member of \u2018std::any\u2019\n    7 |     std::any::iterator it = list1.begin();\n      |               ^~~~~~~~\n/tmp/tmps8agvmg9.cpp:8:12: error: \u2018it\u2019 was not declared in this scope; did you mean \u2018int\u2019?\n    8 |     while (it != list1.end()) {\n      |            ^~\n      |            int\n/tmp/tmps8agvmg9.cpp:8:24: error: \u2018class std::any\u2019 has no member named \u2018end\u2019\n    8 |     while (it != list1.end()) {\n      |                        ^~~\n/tmp/tmps8agvmg9.cpp:9:14: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n    9 |         temp.push_back(*it);\n      |              ^~~~~~~~~\n/tmp/tmps8agvmg9.cpp:11:25: error: \u2018class std::any\u2019 has no member named \u2018end\u2019\n   11 |         if (it == list1.end() || *it != temp.back()) {\n      |                         ^~~\n/tmp/tmps8agvmg9.cpp:11:46: error: \u2018class std::any\u2019 has no member named \u2018back\u2019\n   11 |         if (it == list1.end() || *it != temp.back()) {\n      |                                              ^~~~\n/tmp/tmps8agvmg9.cpp:12:19: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   12 |             list2.push_back(temp);\n      |                   ^~~~~~~~~\n/tmp/tmps8agvmg9.cpp:13:18: error: \u2018class std::any\u2019 has no member named \u2018clear\u2019\n   13 |             temp.clear();\n      |                  ^~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmps8agvmg9.cpp:2:\n/tmp/tmps8agvmg9.cpp: In function \u2018int main()\u2019:\n/tmp/tmps8agvmg9.cpp:20:176: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   20 |     assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to pack consecutive duplicates of a given list elements into sublists.\nstd::any pack_consecutive_duplicates(std::any list1) {\n    std::any list2;\n    std::any temp;\n    std::any::iterator it = list1.begin();\n    while(it != list1.end()) {\n        temp.push_back(*it);\n        it++;\n        if(it == list1.end() || *it != temp.back()) {\n            list2.push_back(temp);\n            temp.clear();\n        }\n    }\n    return list2;\n}\nint main() {\n    auto candidate = pack_consecutive_duplicates;\n    assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n    assert(candidate((std::any({(long)10, (long)10, (long)15, (long)19, (long)18, (long)18, (long)17, (long)26, (long)26, (long)17, (long)18, (long)10}))) == (std::any({(std::vector<long>)std::vector<long>({(long)10, (long)10}), (std::vector<long>)std::vector<long>({(long)15}), (std::vector<long>)std::vector<long>({(long)19}), (std::vector<long>)std::vector<long>({(long)18, (long)18}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)26, (long)26}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)18}), (std::vector<long>)std::vector<long>({(long)10})})));\n    assert(candidate((std::any({(std::string)\"a\", (std::string)\"a\", (std::string)\"b\", (std::string)\"c\", (std::string)\"d\", (std::string)\"d\"}))) == (std::any({(std::vector<std::string>)std::vector<std::string>({(std::string)\"a\", (std::string)\"a\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"b\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"c\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"d\", (std::string)\"d\"})})));\n}\n",
      "timestamp": 1666123400,
      "stdout": "",
      "stderr": "/tmp/tmpy1lfk2kp.cpp: In function \u2018std::any pack_consecutive_duplicates(std::any)\u2019:\n/tmp/tmpy1lfk2kp.cpp:7:15: error: \u2018iterator\u2019 is not a member of \u2018std::any\u2019\n    7 |     std::any::iterator it = list1.begin();\n      |               ^~~~~~~~\n/tmp/tmpy1lfk2kp.cpp:8:11: error: \u2018it\u2019 was not declared in this scope; did you mean \u2018int\u2019?\n    8 |     while(it != list1.end()) {\n      |           ^~\n      |           int\n/tmp/tmpy1lfk2kp.cpp:8:23: error: \u2018class std::any\u2019 has no member named \u2018end\u2019\n    8 |     while(it != list1.end()) {\n      |                       ^~~\n/tmp/tmpy1lfk2kp.cpp:9:14: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n    9 |         temp.push_back(*it);\n      |              ^~~~~~~~~\n/tmp/tmpy1lfk2kp.cpp:11:24: error: \u2018class std::any\u2019 has no member named \u2018end\u2019\n   11 |         if(it == list1.end() || *it != temp.back()) {\n      |                        ^~~\n/tmp/tmpy1lfk2kp.cpp:11:45: error: \u2018class std::any\u2019 has no member named \u2018back\u2019\n   11 |         if(it == list1.end() || *it != temp.back()) {\n      |                                             ^~~~\n/tmp/tmpy1lfk2kp.cpp:12:19: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   12 |             list2.push_back(temp);\n      |                   ^~~~~~~~~\n/tmp/tmpy1lfk2kp.cpp:13:18: error: \u2018class std::any\u2019 has no member named \u2018clear\u2019\n   13 |             temp.clear();\n      |                  ^~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpy1lfk2kp.cpp:2:\n/tmp/tmpy1lfk2kp.cpp: In function \u2018int main()\u2019:\n/tmp/tmpy1lfk2kp.cpp:20:176: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   20 |     assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to pack consecutive duplicates of a given list elements into sublists.\nstd::any pack_consecutive_duplicates(std::any list1) {\n    std::any list2;\n    std::any temp;\n    std::any temp1;\n    std::any temp2;\n    std::any temp3;\n    std::any temp4;\n    std::any temp5;\n    std::any temp6;\n    std::any temp7;\n    std::any temp8;\n    std::any temp9;\n    std::any temp10;\n    std::any temp11;\n    std::any temp12;\n    std::any temp13;\n    std::any temp14;\n    std::any temp15;\n    std::any temp16;\n    std::any temp17;\n    std::any temp18;\n    std::any temp19;\n    std::any temp20;\n    std::any temp21;\n    std::any temp22;\n    std::any temp23;\n    std::any temp24;\n    std::any temp25;\n    std::any temp26;\n    std::any temp27;\n    std::any temp28;\n    std::any temp29;\n    std::any temp30;\n    std::any temp31;\n    std::any temp32;\n    std::any temp33;\n    std::any temp34;\n    std::any temp35;\n    std::any temp36;\n    std::any temp37;\n    std::any temp38;\n    std::any temp39;\n    std::any temp40;\n    std::any temp41;\n    std::any temp42;\n    std::any temp43;\n    std::any temp44;\n    std::any temp45;\n    std::any temp46;\n    std::any temp47;\n    std::any temp48;\n    std::any temp49;\n    std::any temp50;\n    std::any temp51;\n    std::any temp52;\n    std::any temp53;\n    std::any temp54;\n    std::any temp55;\n    std::any temp56;\n    std::any temp57;\n    std::any temp58;\n    std::any temp59;\n    std::any temp60;\n    std::any temp61;\n    std::any temp62;\n\n}\nint main() {\n    auto candidate = pack_consecutive_duplicates;\n    assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n    assert(candidate((std::any({(long)10, (long)10, (long)15, (long)19, (long)18, (long)18, (long)17, (long)26, (long)26, (long)17, (long)18, (long)10}))) == (std::any({(std::vector<long>)std::vector<long>({(long)10, (long)10}), (std::vector<long>)std::vector<long>({(long)15}), (std::vector<long>)std::vector<long>({(long)19}), (std::vector<long>)std::vector<long>({(long)18, (long)18}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)26, (long)26}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)18}), (std::vector<long>)std::vector<long>({(long)10})})));\n    assert(candidate((std::any({(std::string)\"a\", (std::string)\"a\", (std::string)\"b\", (std::string)\"c\", (std::string)\"d\", (std::string)\"d\"}))) == (std::any({(std::vector<std::string>)std::vector<std::string>({(std::string)\"a\", (std::string)\"a\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"b\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"c\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"d\", (std::string)\"d\"})})));\n}\n",
      "timestamp": 1665510437,
      "stdout": "",
      "stderr": "/tmp/tmp6a5kikx3.cpp: In function \u2018std::any pack_consecutive_duplicates(std::any)\u2019:\n/tmp/tmp6a5kikx3.cpp:70:1: warning: no return statement in function returning non-void [-Wreturn-type]\n   70 | }\n      | ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp6a5kikx3.cpp:2:\n/tmp/tmp6a5kikx3.cpp: In function \u2018int main()\u2019:\n/tmp/tmp6a5kikx3.cpp:73:176: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   73 |     assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n      |                                                                                                                                                                                ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmp6a5kikx3.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>,",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to pack consecutive duplicates of a given list elements into sublists.\nstd::any pack_consecutive_duplicates(std::any list1) {\n    std::any list2;\n    std::any temp;\n    std::any::iterator it = list1.begin();\n    while (it != list1.end()) {\n        std::any::iterator it2 = it;\n        while (it2 != list1.end() && *it2 == *it) {\n            temp.push_back(*it2);\n            it2++;\n        }\n        list2.push_back(temp);\n        temp.clear();\n        it = it2;\n    }\n    return list2;\n}\nint main() {\n    auto candidate = pack_consecutive_duplicates;\n    assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n    assert(candidate((std::any({(long)10, (long)10, (long)15, (long)19, (long)18, (long)18, (long)17, (long)26, (long)26, (long)17, (long)18, (long)10}))) == (std::any({(std::vector<long>)std::vector<long>({(long)10, (long)10}), (std::vector<long>)std::vector<long>({(long)15}), (std::vector<long>)std::vector<long>({(long)19}), (std::vector<long>)std::vector<long>({(long)18, (long)18}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)26, (long)26}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)18}), (std::vector<long>)std::vector<long>({(long)10})})));\n    assert(candidate((std::any({(std::string)\"a\", (std::string)\"a\", (std::string)\"b\", (std::string)\"c\", (std::string)\"d\", (std::string)\"d\"}))) == (std::any({(std::vector<std::string>)std::vector<std::string>({(std::string)\"a\", (std::string)\"a\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"b\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"c\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"d\", (std::string)\"d\"})})));\n}\n",
      "timestamp": 1666123403,
      "stdout": "",
      "stderr": "/tmp/tmplk0yg3ke.cpp: In function \u2018std::any pack_consecutive_duplicates(std::any)\u2019:\n/tmp/tmplk0yg3ke.cpp:7:15: error: \u2018iterator\u2019 is not a member of \u2018std::any\u2019\n    7 |     std::any::iterator it = list1.begin();\n      |               ^~~~~~~~\n/tmp/tmplk0yg3ke.cpp:8:12: error: \u2018it\u2019 was not declared in this scope; did you mean \u2018int\u2019?\n    8 |     while (it != list1.end()) {\n      |            ^~\n      |            int\n/tmp/tmplk0yg3ke.cpp:8:24: error: \u2018class std::any\u2019 has no member named \u2018end\u2019\n    8 |     while (it != list1.end()) {\n      |                        ^~~\n/tmp/tmplk0yg3ke.cpp:9:19: error: \u2018iterator\u2019 is not a member of \u2018std::any\u2019\n    9 |         std::any::iterator it2 = it;\n      |                   ^~~~~~~~\n/tmp/tmplk0yg3ke.cpp:10:16: error: \u2018it2\u2019 was not declared in this scope; did you mean \u2018list2\u2019?\n   10 |         while (it2 != list1.end() && *it2 == *it) {\n      |                ^~~\n      |                list2\n/tmp/tmplk0yg3ke.cpp:10:29: error: \u2018class std::any\u2019 has no member named \u2018end\u2019\n   10 |         while (it2 != list1.end() && *it2 == *it) {\n      |                             ^~~\n/tmp/tmplk0yg3ke.cpp:11:18: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   11 |             temp.push_back(*it2);\n      |                  ^~~~~~~~~\n/tmp/tmplk0yg3ke.cpp:14:15: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   14 |         list2.push_back(temp);\n      |               ^~~~~~~~~\n/tmp/tmplk0yg3ke.cpp:15:14: error: \u2018class std::any\u2019 has no member named \u2018clear\u2019\n   15 |         temp.clear();\n      |              ^~~~~\n/tmp/tmplk0yg3ke.cpp:16:14: error: \u2018it2\u2019 was not declared in this scope; did you mean \u2018list2\u2019?\n   16 |         it = it2;\n      |              ^~~\n      |              list2\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to pack consecutive duplicates of a given list elements into sublists.\nstd::any pack_consecutive_duplicates(std::any list1) {\n    std::any list2;\n    std::any sublist;\n    std::any temp;\n    while(!list1.empty()) {\n        temp = list1.front();\n        list1.pop_front();\n        while(!list1.empty() && list1.front() == temp) {\n            sublist.push_back(list1.front());\n            list1.pop_front();\n        }\n        sublist.push_front(temp);\n        list2.push_back(sublist);\n        sublist.clear();\n    }\n    return list2;\n}\nint main() {\n    auto candidate = pack_consecutive_duplicates;\n    assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n    assert(candidate((std::any({(long)10, (long)10, (long)15, (long)19, (long)18, (long)18, (long)17, (long)26, (long)26, (long)17, (long)18, (long)10}))) == (std::any({(std::vector<long>)std::vector<long>({(long)10, (long)10}), (std::vector<long>)std::vector<long>({(long)15}), (std::vector<long>)std::vector<long>({(long)19}), (std::vector<long>)std::vector<long>({(long)18, (long)18}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)26, (long)26}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)18}), (std::vector<long>)std::vector<long>({(long)10})})));\n    assert(candidate((std::any({(std::string)\"a\", (std::string)\"a\", (std::string)\"b\", (std::string)\"c\", (std::string)\"d\", (std::string)\"d\"}))) == (std::any({(std::vector<std::string>)std::vector<std::string>({(std::string)\"a\", (std::string)\"a\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"b\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"c\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"d\", (std::string)\"d\"})})));\n}\n",
      "timestamp": 1666123403,
      "stdout": "",
      "stderr": "/tmp/tmp05zu7ube.cpp: In function \u2018std::any pack_consecutive_duplicates(std::any)\u2019:\n/tmp/tmp05zu7ube.cpp:8:18: error: \u2018class std::any\u2019 has no member named \u2018empty\u2019\n    8 |     while(!list1.empty()) {\n      |                  ^~~~~\n/tmp/tmp05zu7ube.cpp:9:22: error: \u2018class std::any\u2019 has no member named \u2018front\u2019\n    9 |         temp = list1.front();\n      |                      ^~~~~\n/tmp/tmp05zu7ube.cpp:10:15: error: \u2018class std::any\u2019 has no member named \u2018pop_front\u2019\n   10 |         list1.pop_front();\n      |               ^~~~~~~~~\n/tmp/tmp05zu7ube.cpp:11:22: error: \u2018class std::any\u2019 has no member named \u2018empty\u2019\n   11 |         while(!list1.empty() && list1.front() == temp) {\n      |                      ^~~~~\n/tmp/tmp05zu7ube.cpp:11:39: error: \u2018class std::any\u2019 has no member named \u2018front\u2019\n   11 |         while(!list1.empty() && list1.front() == temp) {\n      |                                       ^~~~~\n/tmp/tmp05zu7ube.cpp:12:21: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   12 |             sublist.push_back(list1.front());\n      |                     ^~~~~~~~~\n/tmp/tmp05zu7ube.cpp:12:37: error: \u2018class std::any\u2019 has no member named \u2018front\u2019\n   12 |             sublist.push_back(list1.front());\n      |                                     ^~~~~\n/tmp/tmp05zu7ube.cpp:13:19: error: \u2018class std::any\u2019 has no member named \u2018pop_front\u2019\n   13 |             list1.pop_front();\n      |                   ^~~~~~~~~\n/tmp/tmp05zu7ube.cpp:15:17: error: \u2018class std::any\u2019 has no member named \u2018push_front\u2019\n   15 |         sublist.push_front(temp);\n      |                 ^~~~~~~~~~\n/tmp/tmp05zu7ube.cpp:16:15: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   16 |         list2.push_back(sublist);\n      |               ^~~~~~~~~\n/tmp/tmp05zu7ube.cpp:17:17: error: \u2018class std::any\u2019 has no member named \u2018clear\u2019\n   17 |         sublist.clear();\n      |                 ^~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to pack consecutive duplicates of a given list elements into sublists.\nstd::any pack_consecutive_duplicates(std::any list1) {\n    std::any list2;\n    std::any temp;\n    std::any temp2;\n    std::any temp3;\n    std::any temp4;\n    std::any temp5;\n    std::any temp6;\n    std::any temp7;\n    std::any temp8;\n    std::any temp9;\n    std::any temp10;\n    std::any temp11;\n    std::any temp12;\n    std::any temp13;\n    std::any temp14;\n    std::any temp15;\n    std::any temp16;\n    std::any temp17;\n    std::any temp18;\n    std::any temp19;\n    std::any temp20;\n    std::any temp21;\n    std::any temp22;\n    std::any temp23;\n    std::any temp24;\n    std::any temp25;\n    std::any temp26;\n    std::any temp27;\n    std::any temp28;\n    std::any temp29;\n    std::any temp30;\n    std::any temp31;\n    std::any temp32;\n    std::any temp33;\n    std::any temp34;\n    std::any temp35;\n    std::any temp36;\n    std::any temp37;\n    std::any temp38;\n    std::any temp39;\n    std::any temp40;\n    std::any temp41;\n    std::any temp42;\n    std::any temp43;\n    std::any temp44;\n    std::any temp45;\n    std::any temp46;\n    std::any temp47;\n    std::any temp48;\n    std::any temp49;\n    std::any temp50;\n    std::any temp51;\n    std::any temp52;\n    std::any temp53;\n    std::any temp54;\n    std::any temp55;\n    std::any temp56;\n    std::any temp57;\n    std::any temp58;\n    std::any temp59;\n    std::any temp60;\n    std::any temp61;\n    std::any temp62;\n    std::any temp63;\n\n}\nint main() {\n    auto candidate = pack_consecutive_duplicates;\n    assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n    assert(candidate((std::any({(long)10, (long)10, (long)15, (long)19, (long)18, (long)18, (long)17, (long)26, (long)26, (long)17, (long)18, (long)10}))) == (std::any({(std::vector<long>)std::vector<long>({(long)10, (long)10}), (std::vector<long>)std::vector<long>({(long)15}), (std::vector<long>)std::vector<long>({(long)19}), (std::vector<long>)std::vector<long>({(long)18, (long)18}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)26, (long)26}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)18}), (std::vector<long>)std::vector<long>({(long)10})})));\n    assert(candidate((std::any({(std::string)\"a\", (std::string)\"a\", (std::string)\"b\", (std::string)\"c\", (std::string)\"d\", (std::string)\"d\"}))) == (std::any({(std::vector<std::string>)std::vector<std::string>({(std::string)\"a\", (std::string)\"a\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"b\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"c\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"d\", (std::string)\"d\"})})));\n}\n",
      "timestamp": 1665510437,
      "stdout": "",
      "stderr": "/tmp/tmp996xkpjp.cpp: In function \u2018std::any pack_consecutive_duplicates(std::any)\u2019:\n/tmp/tmp996xkpjp.cpp:70:1: warning: no return statement in function returning non-void [-Wreturn-type]\n   70 | }\n      | ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp996xkpjp.cpp:2:\n/tmp/tmp996xkpjp.cpp: In function \u2018int main()\u2019:\n/tmp/tmp996xkpjp.cpp:73:176: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   73 |     assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n      |                                                                                                                                                                                ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmp996xkpjp.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>,",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to pack consecutive duplicates of a given list elements into sublists.\nstd::any pack_consecutive_duplicates(std::any list1) {\n    std::any list2;\n    std::any list3;\n    std::any list4;\n    std::any list5;\n    std::any list6;\n    std::any list7;\n    std::any list8;\n    std::any list9;\n    std::any list10;\n    std::any list11;\n    std::any list12;\n    std::any list13;\n    std::any list14;\n    std::any list15;\n    std::any list16;\n    std::any list17;\n    std::any list18;\n    std::any list19;\n    std::any list20;\n    std::any list21;\n    std::any list22;\n    std::any list23;\n    std::any list24;\n    std::any list25;\n    std::any list26;\n    std::any list27;\n    std::any list28;\n    std::any list29;\n    std::any list30;\n    std::any list31;\n    std::any list32;\n    std::any list33;\n    std::any list34;\n    std::any list35;\n    std::any list36;\n    std::any list37;\n    std::any list38;\n    std::any list39;\n    std::any list40;\n    std::any list41;\n    std::any list42;\n    std::any list43;\n    std::any list44;\n    std::any list45;\n    std::any list46;\n    std::any list47;\n    std::any list48;\n    std::any list49;\n    std::any list50;\n    std::any list51;\n    std::any list52;\n    std::any list53;\n    std::any list54;\n    std::any list55;\n    std::any list56;\n    std::any list57;\n    std::any list58;\n    std::any list59;\n    std::any list60;\n    std::any list61;\n    std::any list62;\n    std::any list63;\n    std::any list64;\n    std::any list65;\n}\nint main() {\n    auto candidate = pack_consecutive_duplicates;\n    assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n    assert(candidate((std::any({(long)10, (long)10, (long)15, (long)19, (long)18, (long)18, (long)17, (long)26, (long)26, (long)17, (long)18, (long)10}))) == (std::any({(std::vector<long>)std::vector<long>({(long)10, (long)10}), (std::vector<long>)std::vector<long>({(long)15}), (std::vector<long>)std::vector<long>({(long)19}), (std::vector<long>)std::vector<long>({(long)18, (long)18}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)26, (long)26}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)18}), (std::vector<long>)std::vector<long>({(long)10})})));\n    assert(candidate((std::any({(std::string)\"a\", (std::string)\"a\", (std::string)\"b\", (std::string)\"c\", (std::string)\"d\", (std::string)\"d\"}))) == (std::any({(std::vector<std::string>)std::vector<std::string>({(std::string)\"a\", (std::string)\"a\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"b\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"c\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"d\", (std::string)\"d\"})})));\n}\n",
      "timestamp": 1665510437,
      "stdout": "",
      "stderr": "/tmp/tmpgspun4wj.cpp: In function \u2018std::any pack_consecutive_duplicates(std::any)\u2019:\n/tmp/tmpgspun4wj.cpp:69:1: warning: no return statement in function returning non-void [-Wreturn-type]\n   69 | }\n      | ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpgspun4wj.cpp:2:\n/tmp/tmpgspun4wj.cpp: In function \u2018int main()\u2019:\n/tmp/tmpgspun4wj.cpp:72:176: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   72 |     assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n      |                                                                                                                                                                                ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpgspun4wj.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>,",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to pack consecutive duplicates of a given list elements into sublists.\nstd::any pack_consecutive_duplicates(std::any list1) {\n    std::any list2;\n    std::any list3;\n    std::any list4;\n    std::any list5;\n    std::any list6;\n    std::any list7;\n    std::any list8;\n    std::any list9;\n    std::any list10;\n    std::any list11;\n    std::any list12;\n    std::any list13;\n    std::any list14;\n    std::any list15;\n    std::any list16;\n    std::any list17;\n    std::any list18;\n    std::any list19;\n    std::any list20;\n    std::any list21;\n    std::any list22;\n    std::any list23;\n    std::any list24;\n    std::any list25;\n    std::any list26;\n    std::any list27;\n    std::any list28;\n    std::any list29;\n    std::any list30;\n    std::any list31;\n    std::any list32;\n    std::any list33;\n    std::any list34;\n    std::any list35;\n    std::any list36;\n    std::any list37;\n    std::any list38;\n    std::any list39;\n    std::any list40;\n    std::any list41;\n    std::any list42;\n    std::any list43;\n    std::any list44;\n    std::any list45;\n    std::any list46;\n    std::any list47;\n    std::any list48;\n    std::any list49;\n    std::any list50;\n    std::any list51;\n    std::any list52;\n    std::any list53;\n    std::any list54;\n    std::any list55;\n    std::any list56;\n    std::any list57;\n    std::any list58;\n    std::any list59;\n    std::any list60;\n    std::any list61;\n    std::any list62;\n    std::any list63;\n    std::any list64;\n    std::any list65;\n}\nint main() {\n    auto candidate = pack_consecutive_duplicates;\n    assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n    assert(candidate((std::any({(long)10, (long)10, (long)15, (long)19, (long)18, (long)18, (long)17, (long)26, (long)26, (long)17, (long)18, (long)10}))) == (std::any({(std::vector<long>)std::vector<long>({(long)10, (long)10}), (std::vector<long>)std::vector<long>({(long)15}), (std::vector<long>)std::vector<long>({(long)19}), (std::vector<long>)std::vector<long>({(long)18, (long)18}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)26, (long)26}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)18}), (std::vector<long>)std::vector<long>({(long)10})})));\n    assert(candidate((std::any({(std::string)\"a\", (std::string)\"a\", (std::string)\"b\", (std::string)\"c\", (std::string)\"d\", (std::string)\"d\"}))) == (std::any({(std::vector<std::string>)std::vector<std::string>({(std::string)\"a\", (std::string)\"a\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"b\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"c\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"d\", (std::string)\"d\"})})));\n}\n",
      "timestamp": 1665510437,
      "stdout": "",
      "stderr": "/tmp/tmpgspun4wj.cpp: In function \u2018std::any pack_consecutive_duplicates(std::any)\u2019:\n/tmp/tmpgspun4wj.cpp:69:1: warning: no return statement in function returning non-void [-Wreturn-type]\n   69 | }\n      | ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpgspun4wj.cpp:2:\n/tmp/tmpgspun4wj.cpp: In function \u2018int main()\u2019:\n/tmp/tmpgspun4wj.cpp:72:176: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   72 |     assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n      |                                                                                                                                                                                ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpgspun4wj.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>,",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to pack consecutive duplicates of a given list elements into sublists.\nstd::any pack_consecutive_duplicates(std::any list1) {\n    std::any list2;\n    std::any temp;\n    std::any temp2;\n    std::any temp3;\n    std::any temp4;\n    std::any temp5;\n    std::any temp6;\n    std::any temp7;\n    std::any temp8;\n    std::any temp9;\n    std::any temp10;\n    std::any temp11;\n    std::any temp12;\n    std::any temp13;\n    std::any temp14;\n    std::any temp15;\n    std::any temp16;\n    std::any temp17;\n    std::any temp18;\n    std::any temp19;\n    std::any temp20;\n    std::any temp21;\n    std::any temp22;\n    std::any temp23;\n    std::any temp24;\n    std::any temp25;\n    std::any temp26;\n    std::any temp27;\n    std::any temp28;\n    std::any temp29;\n    std::any temp30;\n    std::any temp31;\n    std::any temp32;\n    std::any temp33;\n    std::any temp34;\n    std::any temp35;\n    std::any temp36;\n    std::any temp37;\n    std::any temp38;\n    std::any temp39;\n    std::any temp40;\n    std::any temp41;\n    std::any temp42;\n    std::any temp43;\n    std::any temp44;\n    std::any temp45;\n    std::any temp46;\n    std::any temp47;\n    std::any temp48;\n    std::any temp49;\n    std::any temp50;\n    std::any temp51;\n    std::any temp52;\n    std::any temp53;\n    std::any temp54;\n    std::any temp55;\n    std::any temp56;\n    std::any temp57;\n    std::any temp58;\n    std::any temp59;\n    std::any temp60;\n    std::any temp61;\n    std::any temp62;\n    std::any temp63;\n\n}\nint main() {\n    auto candidate = pack_consecutive_duplicates;\n    assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n    assert(candidate((std::any({(long)10, (long)10, (long)15, (long)19, (long)18, (long)18, (long)17, (long)26, (long)26, (long)17, (long)18, (long)10}))) == (std::any({(std::vector<long>)std::vector<long>({(long)10, (long)10}), (std::vector<long>)std::vector<long>({(long)15}), (std::vector<long>)std::vector<long>({(long)19}), (std::vector<long>)std::vector<long>({(long)18, (long)18}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)26, (long)26}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)18}), (std::vector<long>)std::vector<long>({(long)10})})));\n    assert(candidate((std::any({(std::string)\"a\", (std::string)\"a\", (std::string)\"b\", (std::string)\"c\", (std::string)\"d\", (std::string)\"d\"}))) == (std::any({(std::vector<std::string>)std::vector<std::string>({(std::string)\"a\", (std::string)\"a\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"b\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"c\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"d\", (std::string)\"d\"})})));\n}\n",
      "timestamp": 1665510437,
      "stdout": "",
      "stderr": "/tmp/tmp996xkpjp.cpp: In function \u2018std::any pack_consecutive_duplicates(std::any)\u2019:\n/tmp/tmp996xkpjp.cpp:70:1: warning: no return statement in function returning non-void [-Wreturn-type]\n   70 | }\n      | ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp996xkpjp.cpp:2:\n/tmp/tmp996xkpjp.cpp: In function \u2018int main()\u2019:\n/tmp/tmp996xkpjp.cpp:73:176: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   73 |     assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n      |                                                                                                                                                                                ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmp996xkpjp.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>,",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to pack consecutive duplicates of a given list elements into sublists.\nstd::any pack_consecutive_duplicates(std::any list1) {\n    std::any list2;\n    std::any list3;\n    std::any list4;\n    std::any list5;\n    std::any list6;\n    std::any list7;\n    std::any list8;\n    std::any list9;\n    std::any list10;\n    std::any list11;\n    std::any list12;\n    std::any list13;\n    std::any list14;\n    std::any list15;\n    std::any list16;\n    std::any list17;\n    std::any list18;\n    std::any list19;\n    std::any list20;\n    std::any list21;\n    std::any list22;\n    std::any list23;\n    std::any list24;\n    std::any list25;\n    std::any list26;\n    std::any list27;\n    std::any list28;\n    std::any list29;\n    std::any list30;\n    std::any list31;\n    std::any list32;\n    std::any list33;\n    std::any list34;\n    std::any list35;\n    std::any list36;\n    std::any list37;\n    std::any list38;\n    std::any list39;\n    std::any list40;\n    std::any list41;\n    std::any list42;\n    std::any list43;\n    std::any list44;\n    std::any list45;\n    std::any list46;\n    std::any list47;\n    std::any list48;\n    std::any list49;\n    std::any list50;\n    std::any list51;\n    std::any list52;\n    std::any list53;\n    std::any list54;\n    std::any list55;\n    std::any list56;\n    std::any list57;\n    std::any list58;\n    std::any list59;\n    std::any list60;\n    std::any list61;\n    std::any list62;\n    std::any list63;\n    std::any list64;\n    std::any list65;\n}\nint main() {\n    auto candidate = pack_consecutive_duplicates;\n    assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n    assert(candidate((std::any({(long)10, (long)10, (long)15, (long)19, (long)18, (long)18, (long)17, (long)26, (long)26, (long)17, (long)18, (long)10}))) == (std::any({(std::vector<long>)std::vector<long>({(long)10, (long)10}), (std::vector<long>)std::vector<long>({(long)15}), (std::vector<long>)std::vector<long>({(long)19}), (std::vector<long>)std::vector<long>({(long)18, (long)18}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)26, (long)26}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)18}), (std::vector<long>)std::vector<long>({(long)10})})));\n    assert(candidate((std::any({(std::string)\"a\", (std::string)\"a\", (std::string)\"b\", (std::string)\"c\", (std::string)\"d\", (std::string)\"d\"}))) == (std::any({(std::vector<std::string>)std::vector<std::string>({(std::string)\"a\", (std::string)\"a\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"b\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"c\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"d\", (std::string)\"d\"})})));\n}\n",
      "timestamp": 1665510437,
      "stdout": "",
      "stderr": "/tmp/tmpgspun4wj.cpp: In function \u2018std::any pack_consecutive_duplicates(std::any)\u2019:\n/tmp/tmpgspun4wj.cpp:69:1: warning: no return statement in function returning non-void [-Wreturn-type]\n   69 | }\n      | ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpgspun4wj.cpp:2:\n/tmp/tmpgspun4wj.cpp: In function \u2018int main()\u2019:\n/tmp/tmpgspun4wj.cpp:72:176: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   72 |     assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n      |                                                                                                                                                                                ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpgspun4wj.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>,",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to pack consecutive duplicates of a given list elements into sublists.\nstd::any pack_consecutive_duplicates(std::any list1) {\n    std::any result;\n    std::any temp;\n    std::any::iterator it;\n    for (it = list1.begin(); it != list1.end(); it++) {\n        if (temp.empty() || temp.back() != *it) {\n            if (!temp.empty()) {\n                result.push_back(temp);\n            }\n            temp.clear();\n        }\n        temp.push_back(*it);\n    }\n    result.push_back(temp);\n    return result;\n}\nint main() {\n    auto candidate = pack_consecutive_duplicates;\n    assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n    assert(candidate((std::any({(long)10, (long)10, (long)15, (long)19, (long)18, (long)18, (long)17, (long)26, (long)26, (long)17, (long)18, (long)10}))) == (std::any({(std::vector<long>)std::vector<long>({(long)10, (long)10}), (std::vector<long>)std::vector<long>({(long)15}), (std::vector<long>)std::vector<long>({(long)19}), (std::vector<long>)std::vector<long>({(long)18, (long)18}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)26, (long)26}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)18}), (std::vector<long>)std::vector<long>({(long)10})})));\n    assert(candidate((std::any({(std::string)\"a\", (std::string)\"a\", (std::string)\"b\", (std::string)\"c\", (std::string)\"d\", (std::string)\"d\"}))) == (std::any({(std::vector<std::string>)std::vector<std::string>({(std::string)\"a\", (std::string)\"a\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"b\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"c\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"d\", (std::string)\"d\"})})));\n}\n",
      "timestamp": 1666123403,
      "stdout": "",
      "stderr": "/tmp/tmpuftehbl6.cpp: In function \u2018std::any pack_consecutive_duplicates(std::any)\u2019:\n/tmp/tmpuftehbl6.cpp:7:15: error: \u2018iterator\u2019 is not a member of \u2018std::any\u2019\n    7 |     std::any::iterator it;\n      |               ^~~~~~~~\n/tmp/tmpuftehbl6.cpp:8:10: error: \u2018it\u2019 was not declared in this scope; did you mean \u2018int\u2019?\n    8 |     for (it = list1.begin(); it != list1.end(); it++) {\n      |          ^~\n      |          int\n/tmp/tmpuftehbl6.cpp:8:21: error: \u2018class std::any\u2019 has no member named \u2018begin\u2019\n    8 |     for (it = list1.begin(); it != list1.end(); it++) {\n      |                     ^~~~~\n/tmp/tmpuftehbl6.cpp:8:42: error: \u2018class std::any\u2019 has no member named \u2018end\u2019\n    8 |     for (it = list1.begin(); it != list1.end(); it++) {\n      |                                          ^~~\n/tmp/tmpuftehbl6.cpp:9:18: error: \u2018class std::any\u2019 has no member named \u2018empty\u2019\n    9 |         if (temp.empty() || temp.back() != *it) {\n      |                  ^~~~~\n/tmp/tmpuftehbl6.cpp:9:34: error: \u2018class std::any\u2019 has no member named \u2018back\u2019\n    9 |         if (temp.empty() || temp.back() != *it) {\n      |                                  ^~~~\n/tmp/tmpuftehbl6.cpp:10:23: error: \u2018class std::any\u2019 has no member named \u2018empty\u2019\n   10 |             if (!temp.empty()) {\n      |                       ^~~~~\n/tmp/tmpuftehbl6.cpp:11:24: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   11 |                 result.push_back(temp);\n      |                        ^~~~~~~~~\n/tmp/tmpuftehbl6.cpp:13:18: error: \u2018class std::any\u2019 has no member named \u2018clear\u2019\n   13 |             temp.clear();\n      |                  ^~~~~\n/tmp/tmpuftehbl6.cpp:15:14: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   15 |         temp.push_back(*it);\n      |              ^~~~~~~~~\n/tmp/tmpuftehbl6.cpp:17:12: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   17 |     result.push_back(temp);\n      |            ^~~~~~~~~\nIn file included from /shared/centos7/",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to pack consecutive duplicates of a given list elements into sublists.\nstd::any pack_consecutive_duplicates(std::any list1) {\n    std::any list2;\n    std::any temp;\n    std::any temp2;\n    std::any temp3;\n    std::any temp4;\n    std::any temp5;\n    std::any temp6;\n    std::any temp7;\n    std::any temp8;\n    std::any temp9;\n    std::any temp10;\n    std::any temp11;\n    std::any temp12;\n    std::any temp13;\n    std::any temp14;\n    std::any temp15;\n    std::any temp16;\n    std::any temp17;\n    std::any temp18;\n    std::any temp19;\n    std::any temp20;\n    std::any temp21;\n    std::any temp22;\n    std::any temp23;\n    std::any temp24;\n    std::any temp25;\n    std::any temp26;\n    std::any temp27;\n    std::any temp28;\n    std::any temp29;\n    std::any temp30;\n    std::any temp31;\n    std::any temp32;\n    std::any temp33;\n    std::any temp34;\n    std::any temp35;\n    std::any temp36;\n    std::any temp37;\n    std::any temp38;\n    std::any temp39;\n    std::any temp40;\n    std::any temp41;\n    std::any temp42;\n    std::any temp43;\n    std::any temp44;\n    std::any temp45;\n    std::any temp46;\n    std::any temp47;\n    std::any temp48;\n    std::any temp49;\n    std::any temp50;\n    std::any temp51;\n    std::any temp52;\n    std::any temp53;\n    std::any temp54;\n    std::any temp55;\n    std::any temp56;\n    std::any temp57;\n    std::any temp58;\n    std::any temp59;\n    std::any temp60;\n    std::any temp61;\n    std::any temp62;\n    std::any temp63;\n\n}\nint main() {\n    auto candidate = pack_consecutive_duplicates;\n    assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n    assert(candidate((std::any({(long)10, (long)10, (long)15, (long)19, (long)18, (long)18, (long)17, (long)26, (long)26, (long)17, (long)18, (long)10}))) == (std::any({(std::vector<long>)std::vector<long>({(long)10, (long)10}), (std::vector<long>)std::vector<long>({(long)15}), (std::vector<long>)std::vector<long>({(long)19}), (std::vector<long>)std::vector<long>({(long)18, (long)18}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)26, (long)26}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)18}), (std::vector<long>)std::vector<long>({(long)10})})));\n    assert(candidate((std::any({(std::string)\"a\", (std::string)\"a\", (std::string)\"b\", (std::string)\"c\", (std::string)\"d\", (std::string)\"d\"}))) == (std::any({(std::vector<std::string>)std::vector<std::string>({(std::string)\"a\", (std::string)\"a\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"b\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"c\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"d\", (std::string)\"d\"})})));\n}\n",
      "timestamp": 1665510437,
      "stdout": "",
      "stderr": "/tmp/tmp996xkpjp.cpp: In function \u2018std::any pack_consecutive_duplicates(std::any)\u2019:\n/tmp/tmp996xkpjp.cpp:70:1: warning: no return statement in function returning non-void [-Wreturn-type]\n   70 | }\n      | ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp996xkpjp.cpp:2:\n/tmp/tmp996xkpjp.cpp: In function \u2018int main()\u2019:\n/tmp/tmp996xkpjp.cpp:73:176: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   73 |     assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n      |                                                                                                                                                                                ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmp996xkpjp.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>,",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to pack consecutive duplicates of a given list elements into sublists.\nstd::any pack_consecutive_duplicates(std::any list1) {\n    std::any list2;\n    std::any temp;\n    std::any::iterator it = list1.begin();\n    while (it != list1.end()) {\n        temp.push_back(*it);\n        it++;\n        if (it == list1.end() || *it != temp.back()) {\n            list2.push_back(temp);\n            temp.clear();\n        }\n    }\n    return list2;\n}\nint main() {\n    auto candidate = pack_consecutive_duplicates;\n    assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n    assert(candidate((std::any({(long)10, (long)10, (long)15, (long)19, (long)18, (long)18, (long)17, (long)26, (long)26, (long)17, (long)18, (long)10}))) == (std::any({(std::vector<long>)std::vector<long>({(long)10, (long)10}), (std::vector<long>)std::vector<long>({(long)15}), (std::vector<long>)std::vector<long>({(long)19}), (std::vector<long>)std::vector<long>({(long)18, (long)18}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)26, (long)26}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)18}), (std::vector<long>)std::vector<long>({(long)10})})));\n    assert(candidate((std::any({(std::string)\"a\", (std::string)\"a\", (std::string)\"b\", (std::string)\"c\", (std::string)\"d\", (std::string)\"d\"}))) == (std::any({(std::vector<std::string>)std::vector<std::string>({(std::string)\"a\", (std::string)\"a\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"b\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"c\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"d\", (std::string)\"d\"})})));\n}\n",
      "timestamp": 1665510437,
      "stdout": "",
      "stderr": "/tmp/tmps8agvmg9.cpp: In function \u2018std::any pack_consecutive_duplicates(std::any)\u2019:\n/tmp/tmps8agvmg9.cpp:7:15: error: \u2018iterator\u2019 is not a member of \u2018std::any\u2019\n    7 |     std::any::iterator it = list1.begin();\n      |               ^~~~~~~~\n/tmp/tmps8agvmg9.cpp:8:12: error: \u2018it\u2019 was not declared in this scope; did you mean \u2018int\u2019?\n    8 |     while (it != list1.end()) {\n      |            ^~\n      |            int\n/tmp/tmps8agvmg9.cpp:8:24: error: \u2018class std::any\u2019 has no member named \u2018end\u2019\n    8 |     while (it != list1.end()) {\n      |                        ^~~\n/tmp/tmps8agvmg9.cpp:9:14: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n    9 |         temp.push_back(*it);\n      |              ^~~~~~~~~\n/tmp/tmps8agvmg9.cpp:11:25: error: \u2018class std::any\u2019 has no member named \u2018end\u2019\n   11 |         if (it == list1.end() || *it != temp.back()) {\n      |                         ^~~\n/tmp/tmps8agvmg9.cpp:11:46: error: \u2018class std::any\u2019 has no member named \u2018back\u2019\n   11 |         if (it == list1.end() || *it != temp.back()) {\n      |                                              ^~~~\n/tmp/tmps8agvmg9.cpp:12:19: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   12 |             list2.push_back(temp);\n      |                   ^~~~~~~~~\n/tmp/tmps8agvmg9.cpp:13:18: error: \u2018class std::any\u2019 has no member named \u2018clear\u2019\n   13 |             temp.clear();\n      |                  ^~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmps8agvmg9.cpp:2:\n/tmp/tmps8agvmg9.cpp: In function \u2018int main()\u2019:\n/tmp/tmps8agvmg9.cpp:20:176: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   20 |     assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to pack consecutive duplicates of a given list elements into sublists.\nstd::any pack_consecutive_duplicates(std::any list1) {\n\tstd::any list2;\n\tstd::any temp;\n\tstd::any::iterator it = list1.begin();\n\twhile (it != list1.end()) {\n\t\ttemp.push_back(*it);\n\t\tit++;\n\t\tif (it == list1.end() || *it != *(it - 1)) {\n\t\t\tlist2.push_back(temp);\n\t\t\ttemp.clear();\n\t\t}\n\t}\n\treturn list2;\n}\nint main() {\n    auto candidate = pack_consecutive_duplicates;\n    assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n    assert(candidate((std::any({(long)10, (long)10, (long)15, (long)19, (long)18, (long)18, (long)17, (long)26, (long)26, (long)17, (long)18, (long)10}))) == (std::any({(std::vector<long>)std::vector<long>({(long)10, (long)10}), (std::vector<long>)std::vector<long>({(long)15}), (std::vector<long>)std::vector<long>({(long)19}), (std::vector<long>)std::vector<long>({(long)18, (long)18}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)26, (long)26}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)18}), (std::vector<long>)std::vector<long>({(long)10})})));\n    assert(candidate((std::any({(std::string)\"a\", (std::string)\"a\", (std::string)\"b\", (std::string)\"c\", (std::string)\"d\", (std::string)\"d\"}))) == (std::any({(std::vector<std::string>)std::vector<std::string>({(std::string)\"a\", (std::string)\"a\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"b\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"c\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"d\", (std::string)\"d\"})})));\n}\n",
      "timestamp": 1666123403,
      "stdout": "",
      "stderr": "/tmp/tmps2d_wk68.cpp: In function \u2018std::any pack_consecutive_duplicates(std::any)\u2019:\n/tmp/tmps2d_wk68.cpp:7:12: error: \u2018iterator\u2019 is not a member of \u2018std::any\u2019\n    7 |  std::any::iterator it = list1.begin();\n      |            ^~~~~~~~\n/tmp/tmps2d_wk68.cpp:8:9: error: \u2018it\u2019 was not declared in this scope; did you mean \u2018int\u2019?\n    8 |  while (it != list1.end()) {\n      |         ^~\n      |         int\n/tmp/tmps2d_wk68.cpp:8:21: error: \u2018class std::any\u2019 has no member named \u2018end\u2019\n    8 |  while (it != list1.end()) {\n      |                     ^~~\n/tmp/tmps2d_wk68.cpp:9:8: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n    9 |   temp.push_back(*it);\n      |        ^~~~~~~~~\n/tmp/tmps2d_wk68.cpp:11:19: error: \u2018class std::any\u2019 has no member named \u2018end\u2019\n   11 |   if (it == list1.end() || *it != *(it - 1)) {\n      |                   ^~~\n/tmp/tmps2d_wk68.cpp:12:10: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   12 |    list2.push_back(temp);\n      |          ^~~~~~~~~\n/tmp/tmps2d_wk68.cpp:13:9: error: \u2018class std::any\u2019 has no member named \u2018clear\u2019\n   13 |    temp.clear();\n      |         ^~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmps2d_wk68.cpp:2:\n/tmp/tmps2d_wk68.cpp: In function \u2018int main()\u2019:\n/tmp/tmps2d_wk68.cpp:20:176: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   20 |     assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to pack consecutive duplicates of a given list elements into sublists.\nstd::any pack_consecutive_duplicates(std::any list1) {\n    std::any list2;\n    std::any temp;\n    std::any::iterator it = list1.begin();\n    while (it != list1.end()) {\n        temp.push_back(*it);\n        it++;\n        if (it == list1.end() || *it != temp.back()) {\n            list2.push_back(temp);\n            temp.clear();\n        }\n    }\n    return list2;\n}\nint main() {\n    auto candidate = pack_consecutive_duplicates;\n    assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n    assert(candidate((std::any({(long)10, (long)10, (long)15, (long)19, (long)18, (long)18, (long)17, (long)26, (long)26, (long)17, (long)18, (long)10}))) == (std::any({(std::vector<long>)std::vector<long>({(long)10, (long)10}), (std::vector<long>)std::vector<long>({(long)15}), (std::vector<long>)std::vector<long>({(long)19}), (std::vector<long>)std::vector<long>({(long)18, (long)18}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)26, (long)26}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)18}), (std::vector<long>)std::vector<long>({(long)10})})));\n    assert(candidate((std::any({(std::string)\"a\", (std::string)\"a\", (std::string)\"b\", (std::string)\"c\", (std::string)\"d\", (std::string)\"d\"}))) == (std::any({(std::vector<std::string>)std::vector<std::string>({(std::string)\"a\", (std::string)\"a\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"b\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"c\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"d\", (std::string)\"d\"})})));\n}\n",
      "timestamp": 1665510437,
      "stdout": "",
      "stderr": "/tmp/tmps8agvmg9.cpp: In function \u2018std::any pack_consecutive_duplicates(std::any)\u2019:\n/tmp/tmps8agvmg9.cpp:7:15: error: \u2018iterator\u2019 is not a member of \u2018std::any\u2019\n    7 |     std::any::iterator it = list1.begin();\n      |               ^~~~~~~~\n/tmp/tmps8agvmg9.cpp:8:12: error: \u2018it\u2019 was not declared in this scope; did you mean \u2018int\u2019?\n    8 |     while (it != list1.end()) {\n      |            ^~\n      |            int\n/tmp/tmps8agvmg9.cpp:8:24: error: \u2018class std::any\u2019 has no member named \u2018end\u2019\n    8 |     while (it != list1.end()) {\n      |                        ^~~\n/tmp/tmps8agvmg9.cpp:9:14: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n    9 |         temp.push_back(*it);\n      |              ^~~~~~~~~\n/tmp/tmps8agvmg9.cpp:11:25: error: \u2018class std::any\u2019 has no member named \u2018end\u2019\n   11 |         if (it == list1.end() || *it != temp.back()) {\n      |                         ^~~\n/tmp/tmps8agvmg9.cpp:11:46: error: \u2018class std::any\u2019 has no member named \u2018back\u2019\n   11 |         if (it == list1.end() || *it != temp.back()) {\n      |                                              ^~~~\n/tmp/tmps8agvmg9.cpp:12:19: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   12 |             list2.push_back(temp);\n      |                   ^~~~~~~~~\n/tmp/tmps8agvmg9.cpp:13:18: error: \u2018class std::any\u2019 has no member named \u2018clear\u2019\n   13 |             temp.clear();\n      |                  ^~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmps8agvmg9.cpp:2:\n/tmp/tmps8agvmg9.cpp: In function \u2018int main()\u2019:\n/tmp/tmps8agvmg9.cpp:20:176: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   20 |     assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to pack consecutive duplicates of a given list elements into sublists.\nstd::any pack_consecutive_duplicates(std::any list1) {\n\tstd::any list2;\n\tstd::any list3;\n\tstd::any list4;\n\tstd::any list5;\n\tstd::any list6;\n\tstd::any list7;\n\tstd::any list8;\n\tstd::any list9;\n\tstd::any list10;\n\tstd::any list11;\n\tstd::any list12;\n\tstd::any list13;\n\tstd::any list14;\n\tstd::any list15;\n\tstd::any list16;\n\tstd::any list17;\n\tstd::any list18;\n\tstd::any list19;\n\tstd::any list20;\n\tstd::any list21;\n\tstd::any list22;\n\tstd::any list23;\n\tstd::any list24;\n\tstd::any list25;\n\tstd::any list26;\n\tstd::any list27;\n\tstd::any list28;\n\tstd::any list29;\n\tstd::any list30;\n\tstd::any list31;\n\tstd::any list32;\n\tstd::any list33;\n\tstd::any list34;\n\tstd::any list35;\n\tstd::any list36;\n\tstd::any list37;\n\tstd::any list38;\n\tstd::any list39;\n\tstd::any list40;\n\tstd::any list41;\n\tstd::any list42;\n\tstd::any list43;\n\tstd::any list44;\n\tstd::any list45;\n\tstd::any list46;\n\tstd::any list47;\n\tstd::any list48;\n\tstd::any list49;\n\tstd::any list50;\n\tstd::any list51;\n\tstd::any list52;\n\tstd::any list53;\n\tstd::any list54;\n\tstd::any list55;\n\tstd::any list56;\n\tstd::any list57;\n\tstd::any list58;\n\tstd::any list59;\n\tstd::any list60;\n\tstd::any list61;\n\tstd::any list62;\n\tstd::any list63;\n\tstd::any list64;\n\tstd::any list65;\n}\nint main() {\n    auto candidate = pack_consecutive_duplicates;\n    assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n    assert(candidate((std::any({(long)10, (long)10, (long)15, (long)19, (long)18, (long)18, (long)17, (long)26, (long)26, (long)17, (long)18, (long)10}))) == (std::any({(std::vector<long>)std::vector<long>({(long)10, (long)10}), (std::vector<long>)std::vector<long>({(long)15}), (std::vector<long>)std::vector<long>({(long)19}), (std::vector<long>)std::vector<long>({(long)18, (long)18}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)26, (long)26}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)18}), (std::vector<long>)std::vector<long>({(long)10})})));\n    assert(candidate((std::any({(std::string)\"a\", (std::string)\"a\", (std::string)\"b\", (std::string)\"c\", (std::string)\"d\", (std::string)\"d\"}))) == (std::any({(std::vector<std::string>)std::vector<std::string>({(std::string)\"a\", (std::string)\"a\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"b\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"c\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"d\", (std::string)\"d\"})})));\n}\n",
      "timestamp": 1666123400,
      "stdout": "",
      "stderr": "/tmp/tmpt52wpjxu.cpp: In function \u2018std::any pack_consecutive_duplicates(std::any)\u2019:\n/tmp/tmpt52wpjxu.cpp:69:1: warning: no return statement in function returning non-void [-Wreturn-type]\n   69 | }\n      | ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpt52wpjxu.cpp:2:\n/tmp/tmpt52wpjxu.cpp: In function \u2018int main()\u2019:\n/tmp/tmpt52wpjxu.cpp:72:176: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   72 |     assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n      |                                                                                                                                                                                ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpt52wpjxu.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>,",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to pack consecutive duplicates of a given list elements into sublists.\nstd::any pack_consecutive_duplicates(std::any list1) {\n    std::any list2;\n    std::any temp;\n    std::any::iterator it = list1.begin();\n    while (it != list1.end()) {\n        temp.push_back(*it);\n        it++;\n        if (it == list1.end() || *it != temp.back()) {\n            list2.push_back(temp);\n            temp = std::any();\n        }\n    }\n    return list2;\n}\nint main() {\n    auto candidate = pack_consecutive_duplicates;\n    assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n    assert(candidate((std::any({(long)10, (long)10, (long)15, (long)19, (long)18, (long)18, (long)17, (long)26, (long)26, (long)17, (long)18, (long)10}))) == (std::any({(std::vector<long>)std::vector<long>({(long)10, (long)10}), (std::vector<long>)std::vector<long>({(long)15}), (std::vector<long>)std::vector<long>({(long)19}), (std::vector<long>)std::vector<long>({(long)18, (long)18}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)26, (long)26}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)18}), (std::vector<long>)std::vector<long>({(long)10})})));\n    assert(candidate((std::any({(std::string)\"a\", (std::string)\"a\", (std::string)\"b\", (std::string)\"c\", (std::string)\"d\", (std::string)\"d\"}))) == (std::any({(std::vector<std::string>)std::vector<std::string>({(std::string)\"a\", (std::string)\"a\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"b\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"c\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"d\", (std::string)\"d\"})})));\n}\n",
      "timestamp": 1666123403,
      "stdout": "",
      "stderr": "/tmp/tmpr4jv30us.cpp: In function \u2018std::any pack_consecutive_duplicates(std::any)\u2019:\n/tmp/tmpr4jv30us.cpp:7:15: error: \u2018iterator\u2019 is not a member of \u2018std::any\u2019\n    7 |     std::any::iterator it = list1.begin();\n      |               ^~~~~~~~\n/tmp/tmpr4jv30us.cpp:8:12: error: \u2018it\u2019 was not declared in this scope; did you mean \u2018int\u2019?\n    8 |     while (it != list1.end()) {\n      |            ^~\n      |            int\n/tmp/tmpr4jv30us.cpp:8:24: error: \u2018class std::any\u2019 has no member named \u2018end\u2019\n    8 |     while (it != list1.end()) {\n      |                        ^~~\n/tmp/tmpr4jv30us.cpp:9:14: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n    9 |         temp.push_back(*it);\n      |              ^~~~~~~~~\n/tmp/tmpr4jv30us.cpp:11:25: error: \u2018class std::any\u2019 has no member named \u2018end\u2019\n   11 |         if (it == list1.end() || *it != temp.back()) {\n      |                         ^~~\n/tmp/tmpr4jv30us.cpp:11:46: error: \u2018class std::any\u2019 has no member named \u2018back\u2019\n   11 |         if (it == list1.end() || *it != temp.back()) {\n      |                                              ^~~~\n/tmp/tmpr4jv30us.cpp:12:19: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   12 |             list2.push_back(temp);\n      |                   ^~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpr4jv30us.cpp:2:\n/tmp/tmpr4jv30us.cpp: In function \u2018int main()\u2019:\n/tmp/tmpr4jv30us.cpp:20:176: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   20 |     assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to pack consecutive duplicates of a given list elements into sublists.\nstd::any pack_consecutive_duplicates(std::any list1) {\n    std::any list2;\n    std::any list3;\n    std::any list4;\n    std::any list5;\n    std::any list6;\n    std::any list7;\n    std::any list8;\n    std::any list9;\n    std::any list10;\n    std::any list11;\n    std::any list12;\n    std::any list13;\n    std::any list14;\n    std::any list15;\n    std::any list16;\n    std::any list17;\n    std::any list18;\n    std::any list19;\n    std::any list20;\n    std::any list21;\n    std::any list22;\n    std::any list23;\n    std::any list24;\n    std::any list25;\n    std::any list26;\n    std::any list27;\n    std::any list28;\n    std::any list29;\n    std::any list30;\n    std::any list31;\n    std::any list32;\n    std::any list33;\n    std::any list34;\n    std::any list35;\n    std::any list36;\n    std::any list37;\n    std::any list38;\n    std::any list39;\n    std::any list40;\n    std::any list41;\n    std::any list42;\n    std::any list43;\n    std::any list44;\n    std::any list45;\n    std::any list46;\n    std::any list47;\n    std::any list48;\n    std::any list49;\n    std::any list50;\n    std::any list51;\n    std::any list52;\n    std::any list53;\n    std::any list54;\n    std::any list55;\n    std::any list56;\n    std::any list57;\n    std::any list58;\n    std::any list59;\n    std::any list60;\n    std::any list61;\n    std::any list62;\n    std::any list63;\n    std::any list64;\n    std::any list65;\n}\nint main() {\n    auto candidate = pack_consecutive_duplicates;\n    assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n    assert(candidate((std::any({(long)10, (long)10, (long)15, (long)19, (long)18, (long)18, (long)17, (long)26, (long)26, (long)17, (long)18, (long)10}))) == (std::any({(std::vector<long>)std::vector<long>({(long)10, (long)10}), (std::vector<long>)std::vector<long>({(long)15}), (std::vector<long>)std::vector<long>({(long)19}), (std::vector<long>)std::vector<long>({(long)18, (long)18}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)26, (long)26}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)18}), (std::vector<long>)std::vector<long>({(long)10})})));\n    assert(candidate((std::any({(std::string)\"a\", (std::string)\"a\", (std::string)\"b\", (std::string)\"c\", (std::string)\"d\", (std::string)\"d\"}))) == (std::any({(std::vector<std::string>)std::vector<std::string>({(std::string)\"a\", (std::string)\"a\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"b\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"c\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"d\", (std::string)\"d\"})})));\n}\n",
      "timestamp": 1665510437,
      "stdout": "",
      "stderr": "/tmp/tmpgspun4wj.cpp: In function \u2018std::any pack_consecutive_duplicates(std::any)\u2019:\n/tmp/tmpgspun4wj.cpp:69:1: warning: no return statement in function returning non-void [-Wreturn-type]\n   69 | }\n      | ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpgspun4wj.cpp:2:\n/tmp/tmpgspun4wj.cpp: In function \u2018int main()\u2019:\n/tmp/tmpgspun4wj.cpp:72:176: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   72 |     assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n      |                                                                                                                                                                                ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpgspun4wj.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>,",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to pack consecutive duplicates of a given list elements into sublists.\nstd::any pack_consecutive_duplicates(std::any list1) {\n    std::any list2;\n    std::any temp;\n    std::any temp2;\n    std::any temp3;\n    std::any temp4;\n    std::any temp5;\n    std::any temp6;\n    std::any temp7;\n    std::any temp8;\n    std::any temp9;\n    std::any temp10;\n    std::any temp11;\n    std::any temp12;\n    std::any temp13;\n    std::any temp14;\n    std::any temp15;\n    std::any temp16;\n    std::any temp17;\n    std::any temp18;\n    std::any temp19;\n    std::any temp20;\n    std::any temp21;\n    std::any temp22;\n    std::any temp23;\n    std::any temp24;\n    std::any temp25;\n    std::any temp26;\n    std::any temp27;\n    std::any temp28;\n    std::any temp29;\n    std::any temp30;\n    std::any temp31;\n    std::any temp32;\n    std::any temp33;\n    std::any temp34;\n    std::any temp35;\n    std::any temp36;\n    std::any temp37;\n    std::any temp38;\n    std::any temp39;\n    std::any temp40;\n    std::any temp41;\n    std::any temp42;\n    std::any temp43;\n    std::any temp44;\n    std::any temp45;\n    std::any temp46;\n    std::any temp47;\n    std::any temp48;\n    std::any temp49;\n    std::any temp50;\n    std::any temp51;\n    std::any temp52;\n    std::any temp53;\n    std::any temp54;\n    std::any temp55;\n    std::any temp56;\n    std::any temp57;\n    std::any temp58;\n    std::any temp59;\n    std::any temp60;\n    std::any temp61;\n    std::any temp62;\n    std::any temp63;\n\n}\nint main() {\n    auto candidate = pack_consecutive_duplicates;\n    assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n    assert(candidate((std::any({(long)10, (long)10, (long)15, (long)19, (long)18, (long)18, (long)17, (long)26, (long)26, (long)17, (long)18, (long)10}))) == (std::any({(std::vector<long>)std::vector<long>({(long)10, (long)10}), (std::vector<long>)std::vector<long>({(long)15}), (std::vector<long>)std::vector<long>({(long)19}), (std::vector<long>)std::vector<long>({(long)18, (long)18}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)26, (long)26}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)18}), (std::vector<long>)std::vector<long>({(long)10})})));\n    assert(candidate((std::any({(std::string)\"a\", (std::string)\"a\", (std::string)\"b\", (std::string)\"c\", (std::string)\"d\", (std::string)\"d\"}))) == (std::any({(std::vector<std::string>)std::vector<std::string>({(std::string)\"a\", (std::string)\"a\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"b\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"c\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"d\", (std::string)\"d\"})})));\n}\n",
      "timestamp": 1665510437,
      "stdout": "",
      "stderr": "/tmp/tmp996xkpjp.cpp: In function \u2018std::any pack_consecutive_duplicates(std::any)\u2019:\n/tmp/tmp996xkpjp.cpp:70:1: warning: no return statement in function returning non-void [-Wreturn-type]\n   70 | }\n      | ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp996xkpjp.cpp:2:\n/tmp/tmp996xkpjp.cpp: In function \u2018int main()\u2019:\n/tmp/tmp996xkpjp.cpp:73:176: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   73 |     assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n      |                                                                                                                                                                                ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmp996xkpjp.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>,",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to pack consecutive duplicates of a given list elements into sublists.\nstd::any pack_consecutive_duplicates(std::any list1) {\n    std::any list2;\n    std::any temp;\n    std::any temp2;\n    std::any temp3;\n    std::any temp4;\n    std::any temp5;\n    std::any temp6;\n    std::any temp7;\n    std::any temp8;\n    std::any temp9;\n    std::any temp10;\n    std::any temp11;\n    std::any temp12;\n    std::any temp13;\n    std::any temp14;\n    std::any temp15;\n    std::any temp16;\n    std::any temp17;\n    std::any temp18;\n    std::any temp19;\n    std::any temp20;\n    std::any temp21;\n    std::any temp22;\n    std::any temp23;\n    std::any temp24;\n    std::any temp25;\n    std::any temp26;\n    std::any temp27;\n    std::any temp28;\n    std::any temp29;\n    std::any temp30;\n    std::any temp31;\n    std::any temp32;\n    std::any temp33;\n    std::any temp34;\n    std::any temp35;\n    std::any temp36;\n    std::any temp37;\n    std::any temp38;\n    std::any temp39;\n    std::any temp40;\n    std::any temp41;\n    std::any temp42;\n    std::any temp43;\n    std::any temp44;\n    std::any temp45;\n    std::any temp46;\n    std::any temp47;\n    std::any temp48;\n    std::any temp49;\n    std::any temp50;\n    std::any temp51;\n    std::any temp52;\n    std::any temp53;\n    std::any temp54;\n    std::any temp55;\n    std::any temp56;\n    std::any temp57;\n    std::any temp58;\n    std::any temp59;\n    std::any temp60;\n    std::any temp61;\n    std::any temp62;\n    std::any temp63;\n\n}\nint main() {\n    auto candidate = pack_consecutive_duplicates;\n    assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n    assert(candidate((std::any({(long)10, (long)10, (long)15, (long)19, (long)18, (long)18, (long)17, (long)26, (long)26, (long)17, (long)18, (long)10}))) == (std::any({(std::vector<long>)std::vector<long>({(long)10, (long)10}), (std::vector<long>)std::vector<long>({(long)15}), (std::vector<long>)std::vector<long>({(long)19}), (std::vector<long>)std::vector<long>({(long)18, (long)18}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)26, (long)26}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)18}), (std::vector<long>)std::vector<long>({(long)10})})));\n    assert(candidate((std::any({(std::string)\"a\", (std::string)\"a\", (std::string)\"b\", (std::string)\"c\", (std::string)\"d\", (std::string)\"d\"}))) == (std::any({(std::vector<std::string>)std::vector<std::string>({(std::string)\"a\", (std::string)\"a\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"b\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"c\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"d\", (std::string)\"d\"})})));\n}\n",
      "timestamp": 1665510437,
      "stdout": "",
      "stderr": "/tmp/tmp996xkpjp.cpp: In function \u2018std::any pack_consecutive_duplicates(std::any)\u2019:\n/tmp/tmp996xkpjp.cpp:70:1: warning: no return statement in function returning non-void [-Wreturn-type]\n   70 | }\n      | ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp996xkpjp.cpp:2:\n/tmp/tmp996xkpjp.cpp: In function \u2018int main()\u2019:\n/tmp/tmp996xkpjp.cpp:73:176: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   73 |     assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n      |                                                                                                                                                                                ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmp996xkpjp.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>,",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to pack consecutive duplicates of a given list elements into sublists.\nstd::any pack_consecutive_duplicates(std::any list1) {\n    std::any list2;\n    std::any list3;\n    std::any list4;\n    std::any list5;\n    std::any list6;\n    std::any list7;\n    std::any list8;\n    std::any list9;\n    std::any list10;\n    std::any list11;\n    std::any list12;\n    std::any list13;\n    std::any list14;\n    std::any list15;\n    std::any list16;\n    std::any list17;\n    std::any list18;\n    std::any list19;\n    std::any list20;\n    std::any list21;\n    std::any list22;\n    std::any list23;\n    std::any list24;\n    std::any list25;\n    std::any list26;\n    std::any list27;\n    std::any list28;\n    std::any list29;\n    std::any list30;\n    std::any list31;\n    std::any list32;\n    std::any list33;\n    std::any list34;\n    std::any list35;\n    std::any list36;\n    std::any list37;\n    std::any list38;\n    std::any list39;\n    std::any list40;\n    std::any list41;\n    std::any list42;\n    std::any list43;\n    std::any list44;\n    std::any list45;\n    std::any list46;\n    std::any list47;\n    std::any list48;\n    std::any list49;\n    std::any list50;\n    std::any list51;\n    std::any list52;\n    std::any list53;\n    std::any list54;\n    std::any list55;\n    std::any list56;\n    std::any list57;\n    std::any list58;\n    std::any list59;\n    std::any list60;\n    std::any list61;\n    std::any list62;\n    std::any list63;\n    std::any list64;\n    std::any list65;\n}\nint main() {\n    auto candidate = pack_consecutive_duplicates;\n    assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n    assert(candidate((std::any({(long)10, (long)10, (long)15, (long)19, (long)18, (long)18, (long)17, (long)26, (long)26, (long)17, (long)18, (long)10}))) == (std::any({(std::vector<long>)std::vector<long>({(long)10, (long)10}), (std::vector<long>)std::vector<long>({(long)15}), (std::vector<long>)std::vector<long>({(long)19}), (std::vector<long>)std::vector<long>({(long)18, (long)18}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)26, (long)26}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)18}), (std::vector<long>)std::vector<long>({(long)10})})));\n    assert(candidate((std::any({(std::string)\"a\", (std::string)\"a\", (std::string)\"b\", (std::string)\"c\", (std::string)\"d\", (std::string)\"d\"}))) == (std::any({(std::vector<std::string>)std::vector<std::string>({(std::string)\"a\", (std::string)\"a\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"b\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"c\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"d\", (std::string)\"d\"})})));\n}\n",
      "timestamp": 1665510437,
      "stdout": "",
      "stderr": "/tmp/tmpgspun4wj.cpp: In function \u2018std::any pack_consecutive_duplicates(std::any)\u2019:\n/tmp/tmpgspun4wj.cpp:69:1: warning: no return statement in function returning non-void [-Wreturn-type]\n   69 | }\n      | ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpgspun4wj.cpp:2:\n/tmp/tmpgspun4wj.cpp: In function \u2018int main()\u2019:\n/tmp/tmpgspun4wj.cpp:72:176: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   72 |     assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n      |                                                                                                                                                                                ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpgspun4wj.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>,",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to pack consecutive duplicates of a given list elements into sublists.\nstd::any pack_consecutive_duplicates(std::any list1) {\n  std::any list2;\n  std::any temp;\n  std::any temp2;\n  std::any temp3;\n  std::any temp4;\n  std::any temp5;\n  std::any temp6;\n  std::any temp7;\n  std::any temp8;\n  std::any temp9;\n  std::any temp10;\n  std::any temp11;\n  std::any temp12;\n  std::any temp13;\n  std::any temp14;\n  std::any temp15;\n  std::any temp16;\n  std::any temp17;\n  std::any temp18;\n  std::any temp19;\n  std::any temp20;\n  std::any temp21;\n  std::any temp22;\n  std::any temp23;\n  std::any temp24;\n  std::any temp25;\n  std::any temp26;\n  std::any temp27;\n  std::any temp28;\n  std::any temp29;\n  std::any temp30;\n  std::any temp31;\n  std::any temp32;\n  std::any temp33;\n  std::any temp34;\n  std::any temp35;\n  std::any temp36;\n  std::any temp37;\n  std::any temp38;\n  std::any temp39;\n  std::any temp40;\n  std::any temp41;\n  std::any temp42;\n  std::any temp43;\n  std::any temp44;\n  std::any temp45;\n  std::any temp46;\n  std::any temp47;\n  std::any temp48;\n  std::any temp49;\n  std::any temp50;\n  std::any temp51;\n  std::any temp52;\n  std::any temp53;\n  std::any temp54;\n  std::any temp55;\n  std::any temp56;\n  std::any temp57;\n  std::any temp58;\n  std::any temp59;\n  std::any temp60;\n  std::any temp61;\n  std::any temp62;\n  std::any temp63;\n\n}\nint main() {\n    auto candidate = pack_consecutive_duplicates;\n    assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n    assert(candidate((std::any({(long)10, (long)10, (long)15, (long)19, (long)18, (long)18, (long)17, (long)26, (long)26, (long)17, (long)18, (long)10}))) == (std::any({(std::vector<long>)std::vector<long>({(long)10, (long)10}), (std::vector<long>)std::vector<long>({(long)15}), (std::vector<long>)std::vector<long>({(long)19}), (std::vector<long>)std::vector<long>({(long)18, (long)18}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)26, (long)26}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)18}), (std::vector<long>)std::vector<long>({(long)10})})));\n    assert(candidate((std::any({(std::string)\"a\", (std::string)\"a\", (std::string)\"b\", (std::string)\"c\", (std::string)\"d\", (std::string)\"d\"}))) == (std::any({(std::vector<std::string>)std::vector<std::string>({(std::string)\"a\", (std::string)\"a\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"b\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"c\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"d\", (std::string)\"d\"})})));\n}\n",
      "timestamp": 1665510437,
      "stdout": "",
      "stderr": "/tmp/tmpcbajqnq3.cpp: In function \u2018std::any pack_consecutive_duplicates(std::any)\u2019:\n/tmp/tmpcbajqnq3.cpp:70:1: warning: no return statement in function returning non-void [-Wreturn-type]\n   70 | }\n      | ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpcbajqnq3.cpp:2:\n/tmp/tmpcbajqnq3.cpp: In function \u2018int main()\u2019:\n/tmp/tmpcbajqnq3.cpp:73:176: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   73 |     assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n      |                                                                                                                                                                                ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpcbajqnq3.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>,",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to pack consecutive duplicates of a given list elements into sublists.\nstd::any pack_consecutive_duplicates(std::any list1) {\n    std::any list2;\n    std::any temp;\n    std::any::iterator it = list1.begin();\n    while(it != list1.end()) {\n        temp.push_back(*it);\n        it++;\n        if(it == list1.end() || *it != temp.back()) {\n            list2.push_back(temp);\n            temp.clear();\n        }\n    }\n    return list2;\n}\nint main() {\n    auto candidate = pack_consecutive_duplicates;\n    assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n    assert(candidate((std::any({(long)10, (long)10, (long)15, (long)19, (long)18, (long)18, (long)17, (long)26, (long)26, (long)17, (long)18, (long)10}))) == (std::any({(std::vector<long>)std::vector<long>({(long)10, (long)10}), (std::vector<long>)std::vector<long>({(long)15}), (std::vector<long>)std::vector<long>({(long)19}), (std::vector<long>)std::vector<long>({(long)18, (long)18}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)26, (long)26}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)18}), (std::vector<long>)std::vector<long>({(long)10})})));\n    assert(candidate((std::any({(std::string)\"a\", (std::string)\"a\", (std::string)\"b\", (std::string)\"c\", (std::string)\"d\", (std::string)\"d\"}))) == (std::any({(std::vector<std::string>)std::vector<std::string>({(std::string)\"a\", (std::string)\"a\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"b\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"c\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"d\", (std::string)\"d\"})})));\n}\n",
      "timestamp": 1666123400,
      "stdout": "",
      "stderr": "/tmp/tmpy1lfk2kp.cpp: In function \u2018std::any pack_consecutive_duplicates(std::any)\u2019:\n/tmp/tmpy1lfk2kp.cpp:7:15: error: \u2018iterator\u2019 is not a member of \u2018std::any\u2019\n    7 |     std::any::iterator it = list1.begin();\n      |               ^~~~~~~~\n/tmp/tmpy1lfk2kp.cpp:8:11: error: \u2018it\u2019 was not declared in this scope; did you mean \u2018int\u2019?\n    8 |     while(it != list1.end()) {\n      |           ^~\n      |           int\n/tmp/tmpy1lfk2kp.cpp:8:23: error: \u2018class std::any\u2019 has no member named \u2018end\u2019\n    8 |     while(it != list1.end()) {\n      |                       ^~~\n/tmp/tmpy1lfk2kp.cpp:9:14: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n    9 |         temp.push_back(*it);\n      |              ^~~~~~~~~\n/tmp/tmpy1lfk2kp.cpp:11:24: error: \u2018class std::any\u2019 has no member named \u2018end\u2019\n   11 |         if(it == list1.end() || *it != temp.back()) {\n      |                        ^~~\n/tmp/tmpy1lfk2kp.cpp:11:45: error: \u2018class std::any\u2019 has no member named \u2018back\u2019\n   11 |         if(it == list1.end() || *it != temp.back()) {\n      |                                             ^~~~\n/tmp/tmpy1lfk2kp.cpp:12:19: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   12 |             list2.push_back(temp);\n      |                   ^~~~~~~~~\n/tmp/tmpy1lfk2kp.cpp:13:18: error: \u2018class std::any\u2019 has no member named \u2018clear\u2019\n   13 |             temp.clear();\n      |                  ^~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpy1lfk2kp.cpp:2:\n/tmp/tmpy1lfk2kp.cpp: In function \u2018int main()\u2019:\n/tmp/tmpy1lfk2kp.cpp:20:176: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   20 |     assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to pack consecutive duplicates of a given list elements into sublists.\nstd::any pack_consecutive_duplicates(std::any list1) {\n    std::any list2;\n    std::any temp;\n    std::any::iterator it = list1.begin();\n    while(it != list1.end()) {\n        if(temp.empty()) {\n            temp.push_back(*it);\n        }\n        else if(*it == temp.back()) {\n            temp.push_back(*it);\n        }\n        else {\n            list2.push_back(temp);\n            temp.clear();\n            temp.push_back(*it);\n        }\n        it++;\n    }\n    list2.push_back(temp);\n    return list2;\n}\nint main() {\n    auto candidate = pack_consecutive_duplicates;\n    assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n    assert(candidate((std::any({(long)10, (long)10, (long)15, (long)19, (long)18, (long)18, (long)17, (long)26, (long)26, (long)17, (long)18, (long)10}))) == (std::any({(std::vector<long>)std::vector<long>({(long)10, (long)10}), (std::vector<long>)std::vector<long>({(long)15}), (std::vector<long>)std::vector<long>({(long)19}), (std::vector<long>)std::vector<long>({(long)18, (long)18}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)26, (long)26}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)18}), (std::vector<long>)std::vector<long>({(long)10})})));\n    assert(candidate((std::any({(std::string)\"a\", (std::string)\"a\", (std::string)\"b\", (std::string)\"c\", (std::string)\"d\", (std::string)\"d\"}))) == (std::any({(std::vector<std::string>)std::vector<std::string>({(std::string)\"a\", (std::string)\"a\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"b\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"c\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"d\", (std::string)\"d\"})})));\n}\n",
      "timestamp": 1666123403,
      "stdout": "",
      "stderr": "/tmp/tmp1l6hh_q2.cpp: In function \u2018std::any pack_consecutive_duplicates(std::any)\u2019:\n/tmp/tmp1l6hh_q2.cpp:7:15: error: \u2018iterator\u2019 is not a member of \u2018std::any\u2019\n    7 |     std::any::iterator it = list1.begin();\n      |               ^~~~~~~~\n/tmp/tmp1l6hh_q2.cpp:8:11: error: \u2018it\u2019 was not declared in this scope; did you mean \u2018int\u2019?\n    8 |     while(it != list1.end()) {\n      |           ^~\n      |           int\n/tmp/tmp1l6hh_q2.cpp:8:23: error: \u2018class std::any\u2019 has no member named \u2018end\u2019\n    8 |     while(it != list1.end()) {\n      |                       ^~~\n/tmp/tmp1l6hh_q2.cpp:9:17: error: \u2018class std::any\u2019 has no member named \u2018empty\u2019\n    9 |         if(temp.empty()) {\n      |                 ^~~~~\n/tmp/tmp1l6hh_q2.cpp:10:18: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   10 |             temp.push_back(*it);\n      |                  ^~~~~~~~~\n/tmp/tmp1l6hh_q2.cpp:12:29: error: \u2018class std::any\u2019 has no member named \u2018back\u2019\n   12 |         else if(*it == temp.back()) {\n      |                             ^~~~\n/tmp/tmp1l6hh_q2.cpp:13:18: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   13 |             temp.push_back(*it);\n      |                  ^~~~~~~~~\n/tmp/tmp1l6hh_q2.cpp:16:19: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   16 |             list2.push_back(temp);\n      |                   ^~~~~~~~~\n/tmp/tmp1l6hh_q2.cpp:17:18: error: \u2018class std::any\u2019 has no member named \u2018clear\u2019\n   17 |             temp.clear();\n      |                  ^~~~~\n/tmp/tmp1l6hh_q2.cpp:18:18: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   18 |             temp.push_back(*it);\n      |                  ^~~~~~~~~\n/tmp/tmp1l6hh_q2.cpp:22:11: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   22 |     list2.push_back(temp);\n      |           ^~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/inclu",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to pack consecutive duplicates of a given list elements into sublists.\nstd::any pack_consecutive_duplicates(std::any list1) {\n    std::any list2;\n    std::any temp;\n    std::any temp2;\n    std::any temp3;\n    std::any temp4;\n    std::any temp5;\n    std::any temp6;\n    std::any temp7;\n    std::any temp8;\n    std::any temp9;\n    std::any temp10;\n    std::any temp11;\n    std::any temp12;\n    std::any temp13;\n    std::any temp14;\n    std::any temp15;\n    std::any temp16;\n    std::any temp17;\n    std::any temp18;\n    std::any temp19;\n    std::any temp20;\n    std::any temp21;\n    std::any temp22;\n    std::any temp23;\n    std::any temp24;\n    std::any temp25;\n    std::any temp26;\n    std::any temp27;\n    std::any temp28;\n    std::any temp29;\n    std::any temp30;\n    std::any temp31;\n    std::any temp32;\n    std::any temp33;\n    std::any temp34;\n    std::any temp35;\n    std::any temp36;\n    std::any temp37;\n    std::any temp38;\n    std::any temp39;\n    std::any temp40;\n    std::any temp41;\n    std::any temp42;\n    std::any temp43;\n    std::any temp44;\n    std::any temp45;\n    std::any temp46;\n    std::any temp47;\n    std::any temp48;\n    std::any temp49;\n    std::any temp50;\n    std::any temp51;\n    std::any temp52;\n    std::any temp53;\n    std::any temp54;\n    std::any temp55;\n    std::any temp56;\n    std::any temp57;\n    std::any temp58;\n    std::any temp59;\n    std::any temp60;\n    std::any temp61;\n    std::any temp62;\n    std::any temp63;\n\n}\nint main() {\n    auto candidate = pack_consecutive_duplicates;\n    assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n    assert(candidate((std::any({(long)10, (long)10, (long)15, (long)19, (long)18, (long)18, (long)17, (long)26, (long)26, (long)17, (long)18, (long)10}))) == (std::any({(std::vector<long>)std::vector<long>({(long)10, (long)10}), (std::vector<long>)std::vector<long>({(long)15}), (std::vector<long>)std::vector<long>({(long)19}), (std::vector<long>)std::vector<long>({(long)18, (long)18}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)26, (long)26}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)18}), (std::vector<long>)std::vector<long>({(long)10})})));\n    assert(candidate((std::any({(std::string)\"a\", (std::string)\"a\", (std::string)\"b\", (std::string)\"c\", (std::string)\"d\", (std::string)\"d\"}))) == (std::any({(std::vector<std::string>)std::vector<std::string>({(std::string)\"a\", (std::string)\"a\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"b\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"c\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"d\", (std::string)\"d\"})})));\n}\n",
      "timestamp": 1665510437,
      "stdout": "",
      "stderr": "/tmp/tmp996xkpjp.cpp: In function \u2018std::any pack_consecutive_duplicates(std::any)\u2019:\n/tmp/tmp996xkpjp.cpp:70:1: warning: no return statement in function returning non-void [-Wreturn-type]\n   70 | }\n      | ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp996xkpjp.cpp:2:\n/tmp/tmp996xkpjp.cpp: In function \u2018int main()\u2019:\n/tmp/tmp996xkpjp.cpp:73:176: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   73 |     assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n      |                                                                                                                                                                                ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmp996xkpjp.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>,",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to pack consecutive duplicates of a given list elements into sublists.\nstd::any pack_consecutive_duplicates(std::any list1) {\n    std::any list2;\n    std::any sublist;\n    std::any temp;\n    while(list1.size() != 0) {\n        temp = list1.front();\n        while(list1.front() == temp) {\n            sublist.push_back(list1.front());\n            list1.pop_front();\n            if(list1.size() == 0) {\n                break;\n            }\n        }\n        list2.push_back(sublist);\n        sublist.clear();\n    }\n    return list2;\n}\nint main() {\n    auto candidate = pack_consecutive_duplicates;\n    assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n    assert(candidate((std::any({(long)10, (long)10, (long)15, (long)19, (long)18, (long)18, (long)17, (long)26, (long)26, (long)17, (long)18, (long)10}))) == (std::any({(std::vector<long>)std::vector<long>({(long)10, (long)10}), (std::vector<long>)std::vector<long>({(long)15}), (std::vector<long>)std::vector<long>({(long)19}), (std::vector<long>)std::vector<long>({(long)18, (long)18}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)26, (long)26}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)18}), (std::vector<long>)std::vector<long>({(long)10})})));\n    assert(candidate((std::any({(std::string)\"a\", (std::string)\"a\", (std::string)\"b\", (std::string)\"c\", (std::string)\"d\", (std::string)\"d\"}))) == (std::any({(std::vector<std::string>)std::vector<std::string>({(std::string)\"a\", (std::string)\"a\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"b\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"c\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"d\", (std::string)\"d\"})})));\n}\n",
      "timestamp": 1666123403,
      "stdout": "",
      "stderr": "/tmp/tmpk9v_h8di.cpp: In function \u2018std::any pack_consecutive_duplicates(std::any)\u2019:\n/tmp/tmpk9v_h8di.cpp:8:17: error: \u2018class std::any\u2019 has no member named \u2018size\u2019\n    8 |     while(list1.size() != 0) {\n      |                 ^~~~\n/tmp/tmpk9v_h8di.cpp:9:22: error: \u2018class std::any\u2019 has no member named \u2018front\u2019\n    9 |         temp = list1.front();\n      |                      ^~~~~\n/tmp/tmpk9v_h8di.cpp:10:21: error: \u2018class std::any\u2019 has no member named \u2018front\u2019\n   10 |         while(list1.front() == temp) {\n      |                     ^~~~~\n/tmp/tmpk9v_h8di.cpp:11:21: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   11 |             sublist.push_back(list1.front());\n      |                     ^~~~~~~~~\n/tmp/tmpk9v_h8di.cpp:11:37: error: \u2018class std::any\u2019 has no member named \u2018front\u2019\n   11 |             sublist.push_back(list1.front());\n      |                                     ^~~~~\n/tmp/tmpk9v_h8di.cpp:12:19: error: \u2018class std::any\u2019 has no member named \u2018pop_front\u2019\n   12 |             list1.pop_front();\n      |                   ^~~~~~~~~\n/tmp/tmpk9v_h8di.cpp:13:22: error: \u2018class std::any\u2019 has no member named \u2018size\u2019\n   13 |             if(list1.size() == 0) {\n      |                      ^~~~\n/tmp/tmpk9v_h8di.cpp:17:15: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   17 |         list2.push_back(sublist);\n      |               ^~~~~~~~~\n/tmp/tmpk9v_h8di.cpp:18:17: error: \u2018class std::any\u2019 has no member named \u2018clear\u2019\n   18 |         sublist.clear();\n      |                 ^~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpk9v_h8di.cpp:2:\n/tmp/tmpk9v_h8di.cpp: In function \u2018int main()\u2019:\n/tmp/tmpk9v_h8di.cpp:24:176: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   24 |     assert(candidate((st",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to pack consecutive duplicates of a given list elements into sublists.\nstd::any pack_consecutive_duplicates(std::any list1) {\n    std::any list2;\n    std::any temp;\n    std::any::iterator it;\n    it = list1.begin();\n    while (it != list1.end()) {\n        temp.push_back(*it);\n        it++;\n        if (it == list1.end() || *it != temp.back()) {\n            list2.push_back(temp);\n            temp.clear();\n        }\n    }\n    return list2;\n}\nint main() {\n    auto candidate = pack_consecutive_duplicates;\n    assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n    assert(candidate((std::any({(long)10, (long)10, (long)15, (long)19, (long)18, (long)18, (long)17, (long)26, (long)26, (long)17, (long)18, (long)10}))) == (std::any({(std::vector<long>)std::vector<long>({(long)10, (long)10}), (std::vector<long>)std::vector<long>({(long)15}), (std::vector<long>)std::vector<long>({(long)19}), (std::vector<long>)std::vector<long>({(long)18, (long)18}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)26, (long)26}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)18}), (std::vector<long>)std::vector<long>({(long)10})})));\n    assert(candidate((std::any({(std::string)\"a\", (std::string)\"a\", (std::string)\"b\", (std::string)\"c\", (std::string)\"d\", (std::string)\"d\"}))) == (std::any({(std::vector<std::string>)std::vector<std::string>({(std::string)\"a\", (std::string)\"a\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"b\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"c\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"d\", (std::string)\"d\"})})));\n}\n",
      "timestamp": 1666123403,
      "stdout": "",
      "stderr": "/tmp/tmp0h6bpis7.cpp: In function \u2018std::any pack_consecutive_duplicates(std::any)\u2019:\n/tmp/tmp0h6bpis7.cpp:7:15: error: \u2018iterator\u2019 is not a member of \u2018std::any\u2019\n    7 |     std::any::iterator it;\n      |               ^~~~~~~~\n/tmp/tmp0h6bpis7.cpp:8:5: error: \u2018it\u2019 was not declared in this scope; did you mean \u2018int\u2019?\n    8 |     it = list1.begin();\n      |     ^~\n      |     int\n/tmp/tmp0h6bpis7.cpp:8:16: error: \u2018class std::any\u2019 has no member named \u2018begin\u2019\n    8 |     it = list1.begin();\n      |                ^~~~~\n/tmp/tmp0h6bpis7.cpp:9:24: error: \u2018class std::any\u2019 has no member named \u2018end\u2019\n    9 |     while (it != list1.end()) {\n      |                        ^~~\n/tmp/tmp0h6bpis7.cpp:10:14: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   10 |         temp.push_back(*it);\n      |              ^~~~~~~~~\n/tmp/tmp0h6bpis7.cpp:12:25: error: \u2018class std::any\u2019 has no member named \u2018end\u2019\n   12 |         if (it == list1.end() || *it != temp.back()) {\n      |                         ^~~\n/tmp/tmp0h6bpis7.cpp:12:46: error: \u2018class std::any\u2019 has no member named \u2018back\u2019\n   12 |         if (it == list1.end() || *it != temp.back()) {\n      |                                              ^~~~\n/tmp/tmp0h6bpis7.cpp:13:19: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   13 |             list2.push_back(temp);\n      |                   ^~~~~~~~~\n/tmp/tmp0h6bpis7.cpp:14:18: error: \u2018class std::any\u2019 has no member named \u2018clear\u2019\n   14 |             temp.clear();\n      |                  ^~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp0h6bpis7.cpp:2:\n/tmp/tmp0h6bpis7.cpp: In function \u2018int main()\u2019:\n/tmp/tmp0h6bpis7.cpp:21:176: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   21 |     assert(candidate((std::any({(long",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to pack consecutive duplicates of a given list elements into sublists.\nstd::any pack_consecutive_duplicates(std::any list1) {\n    std::any list2;\n    std::any list3;\n    std::any list4;\n    std::any list5;\n    std::any list6;\n    std::any list7;\n    std::any list8;\n    std::any list9;\n    std::any list10;\n    std::any list11;\n    std::any list12;\n    std::any list13;\n    std::any list14;\n    std::any list15;\n    std::any list16;\n    std::any list17;\n    std::any list18;\n    std::any list19;\n    std::any list20;\n    std::any list21;\n    std::any list22;\n    std::any list23;\n    std::any list24;\n    std::any list25;\n    std::any list26;\n    std::any list27;\n    std::any list28;\n    std::any list29;\n    std::any list30;\n    std::any list31;\n    std::any list32;\n    std::any list33;\n    std::any list34;\n    std::any list35;\n    std::any list36;\n    std::any list37;\n    std::any list38;\n    std::any list39;\n    std::any list40;\n    std::any list41;\n    std::any list42;\n    std::any list43;\n    std::any list44;\n    std::any list45;\n    std::any list46;\n    std::any list47;\n    std::any list48;\n    std::any list49;\n    std::any list50;\n    std::any list51;\n    std::any list52;\n    std::any list53;\n    std::any list54;\n    std::any list55;\n    std::any list56;\n    std::any list57;\n    std::any list58;\n    std::any list59;\n    std::any list60;\n    std::any list61;\n    std::any list62;\n    std::any list63;\n    std::any list64;\n    std::any list65;\n}\nint main() {\n    auto candidate = pack_consecutive_duplicates;\n    assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n    assert(candidate((std::any({(long)10, (long)10, (long)15, (long)19, (long)18, (long)18, (long)17, (long)26, (long)26, (long)17, (long)18, (long)10}))) == (std::any({(std::vector<long>)std::vector<long>({(long)10, (long)10}), (std::vector<long>)std::vector<long>({(long)15}), (std::vector<long>)std::vector<long>({(long)19}), (std::vector<long>)std::vector<long>({(long)18, (long)18}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)26, (long)26}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)18}), (std::vector<long>)std::vector<long>({(long)10})})));\n    assert(candidate((std::any({(std::string)\"a\", (std::string)\"a\", (std::string)\"b\", (std::string)\"c\", (std::string)\"d\", (std::string)\"d\"}))) == (std::any({(std::vector<std::string>)std::vector<std::string>({(std::string)\"a\", (std::string)\"a\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"b\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"c\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"d\", (std::string)\"d\"})})));\n}\n",
      "timestamp": 1665510437,
      "stdout": "",
      "stderr": "/tmp/tmpgspun4wj.cpp: In function \u2018std::any pack_consecutive_duplicates(std::any)\u2019:\n/tmp/tmpgspun4wj.cpp:69:1: warning: no return statement in function returning non-void [-Wreturn-type]\n   69 | }\n      | ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpgspun4wj.cpp:2:\n/tmp/tmpgspun4wj.cpp: In function \u2018int main()\u2019:\n/tmp/tmpgspun4wj.cpp:72:176: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   72 |     assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n      |                                                                                                                                                                                ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpgspun4wj.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>,",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to pack consecutive duplicates of a given list elements into sublists.\nstd::any pack_consecutive_duplicates(std::any list1) {\n    std::any list2;\n    std::any temp;\n    std::any temp2;\n    std::any temp3;\n    std::any temp4;\n    std::any temp5;\n    std::any temp6;\n    std::any temp7;\n    std::any temp8;\n    std::any temp9;\n    std::any temp10;\n    std::any temp11;\n    std::any temp12;\n    std::any temp13;\n    std::any temp14;\n    std::any temp15;\n    std::any temp16;\n    std::any temp17;\n    std::any temp18;\n    std::any temp19;\n    std::any temp20;\n    std::any temp21;\n    std::any temp22;\n    std::any temp23;\n    std::any temp24;\n    std::any temp25;\n    std::any temp26;\n    std::any temp27;\n    std::any temp28;\n    std::any temp29;\n    std::any temp30;\n    std::any temp31;\n    std::any temp32;\n    std::any temp33;\n    std::any temp34;\n    std::any temp35;\n    std::any temp36;\n    std::any temp37;\n    std::any temp38;\n    std::any temp39;\n    std::any temp40;\n    std::any temp41;\n    std::any temp42;\n    std::any temp43;\n    std::any temp44;\n    std::any temp45;\n    std::any temp46;\n    std::any temp47;\n    std::any temp48;\n    std::any temp49;\n    std::any temp50;\n    std::any temp51;\n    std::any temp52;\n    std::any temp53;\n    std::any temp54;\n    std::any temp55;\n    std::any temp56;\n    std::any temp57;\n    std::any temp58;\n    std::any temp59;\n    std::any temp60;\n    std::any temp61;\n    std::any temp62;\n    std::any temp63;\n\n}\nint main() {\n    auto candidate = pack_consecutive_duplicates;\n    assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n    assert(candidate((std::any({(long)10, (long)10, (long)15, (long)19, (long)18, (long)18, (long)17, (long)26, (long)26, (long)17, (long)18, (long)10}))) == (std::any({(std::vector<long>)std::vector<long>({(long)10, (long)10}), (std::vector<long>)std::vector<long>({(long)15}), (std::vector<long>)std::vector<long>({(long)19}), (std::vector<long>)std::vector<long>({(long)18, (long)18}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)26, (long)26}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)18}), (std::vector<long>)std::vector<long>({(long)10})})));\n    assert(candidate((std::any({(std::string)\"a\", (std::string)\"a\", (std::string)\"b\", (std::string)\"c\", (std::string)\"d\", (std::string)\"d\"}))) == (std::any({(std::vector<std::string>)std::vector<std::string>({(std::string)\"a\", (std::string)\"a\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"b\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"c\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"d\", (std::string)\"d\"})})));\n}\n",
      "timestamp": 1665510437,
      "stdout": "",
      "stderr": "/tmp/tmp996xkpjp.cpp: In function \u2018std::any pack_consecutive_duplicates(std::any)\u2019:\n/tmp/tmp996xkpjp.cpp:70:1: warning: no return statement in function returning non-void [-Wreturn-type]\n   70 | }\n      | ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp996xkpjp.cpp:2:\n/tmp/tmp996xkpjp.cpp: In function \u2018int main()\u2019:\n/tmp/tmp996xkpjp.cpp:73:176: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   73 |     assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n      |                                                                                                                                                                                ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmp996xkpjp.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>,",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to pack consecutive duplicates of a given list elements into sublists.\nstd::any pack_consecutive_duplicates(std::any list1) {\n    std::any list2;\n    std::any list3;\n    std::any list4;\n    std::any list5;\n    std::any list6;\n    std::any list7;\n    std::any list8;\n    std::any list9;\n    std::any list10;\n    std::any list11;\n    std::any list12;\n    std::any list13;\n    std::any list14;\n    std::any list15;\n    std::any list16;\n    std::any list17;\n    std::any list18;\n    std::any list19;\n    std::any list20;\n    std::any list21;\n    std::any list22;\n    std::any list23;\n    std::any list24;\n    std::any list25;\n    std::any list26;\n    std::any list27;\n    std::any list28;\n    std::any list29;\n    std::any list30;\n    std::any list31;\n    std::any list32;\n    std::any list33;\n    std::any list34;\n    std::any list35;\n    std::any list36;\n    std::any list37;\n    std::any list38;\n    std::any list39;\n    std::any list40;\n    std::any list41;\n    std::any list42;\n    std::any list43;\n    std::any list44;\n    std::any list45;\n    std::any list46;\n    std::any list47;\n    std::any list48;\n    std::any list49;\n    std::any list50;\n    std::any list51;\n    std::any list52;\n    std::any list53;\n    std::any list54;\n    std::any list55;\n    std::any list56;\n    std::any list57;\n    std::any list58;\n    std::any list59;\n    std::any list60;\n    std::any list61;\n    std::any list62;\n    std::any list63;\n    std::any list64;\n    std::any list65;\n}\nint main() {\n    auto candidate = pack_consecutive_duplicates;\n    assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n    assert(candidate((std::any({(long)10, (long)10, (long)15, (long)19, (long)18, (long)18, (long)17, (long)26, (long)26, (long)17, (long)18, (long)10}))) == (std::any({(std::vector<long>)std::vector<long>({(long)10, (long)10}), (std::vector<long>)std::vector<long>({(long)15}), (std::vector<long>)std::vector<long>({(long)19}), (std::vector<long>)std::vector<long>({(long)18, (long)18}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)26, (long)26}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)18}), (std::vector<long>)std::vector<long>({(long)10})})));\n    assert(candidate((std::any({(std::string)\"a\", (std::string)\"a\", (std::string)\"b\", (std::string)\"c\", (std::string)\"d\", (std::string)\"d\"}))) == (std::any({(std::vector<std::string>)std::vector<std::string>({(std::string)\"a\", (std::string)\"a\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"b\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"c\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"d\", (std::string)\"d\"})})));\n}\n",
      "timestamp": 1665510437,
      "stdout": "",
      "stderr": "/tmp/tmpgspun4wj.cpp: In function \u2018std::any pack_consecutive_duplicates(std::any)\u2019:\n/tmp/tmpgspun4wj.cpp:69:1: warning: no return statement in function returning non-void [-Wreturn-type]\n   69 | }\n      | ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpgspun4wj.cpp:2:\n/tmp/tmpgspun4wj.cpp: In function \u2018int main()\u2019:\n/tmp/tmpgspun4wj.cpp:72:176: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   72 |     assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n      |                                                                                                                                                                                ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpgspun4wj.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>,",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to pack consecutive duplicates of a given list elements into sublists.\nstd::any pack_consecutive_duplicates(std::any list1) {\n    std::any list2;\n    std::any temp;\n    std::any temp2;\n    std::any temp3;\n    std::any temp4;\n    std::any temp5;\n    std::any temp6;\n    std::any temp7;\n    std::any temp8;\n    std::any temp9;\n    std::any temp10;\n    std::any temp11;\n    std::any temp12;\n    std::any temp13;\n    std::any temp14;\n    std::any temp15;\n    std::any temp16;\n    std::any temp17;\n    std::any temp18;\n    std::any temp19;\n    std::any temp20;\n    std::any temp21;\n    std::any temp22;\n    std::any temp23;\n    std::any temp24;\n    std::any temp25;\n    std::any temp26;\n    std::any temp27;\n    std::any temp28;\n    std::any temp29;\n    std::any temp30;\n    std::any temp31;\n    std::any temp32;\n    std::any temp33;\n    std::any temp34;\n    std::any temp35;\n    std::any temp36;\n    std::any temp37;\n    std::any temp38;\n    std::any temp39;\n    std::any temp40;\n    std::any temp41;\n    std::any temp42;\n    std::any temp43;\n    std::any temp44;\n    std::any temp45;\n    std::any temp46;\n    std::any temp47;\n    std::any temp48;\n    std::any temp49;\n    std::any temp50;\n    std::any temp51;\n    std::any temp52;\n    std::any temp53;\n    std::any temp54;\n    std::any temp55;\n    std::any temp56;\n    std::any temp57;\n    std::any temp58;\n    std::any temp59;\n    std::any temp60;\n    std::any temp61;\n    std::any temp62;\n    std::any temp63;\n\n}\nint main() {\n    auto candidate = pack_consecutive_duplicates;\n    assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n    assert(candidate((std::any({(long)10, (long)10, (long)15, (long)19, (long)18, (long)18, (long)17, (long)26, (long)26, (long)17, (long)18, (long)10}))) == (std::any({(std::vector<long>)std::vector<long>({(long)10, (long)10}), (std::vector<long>)std::vector<long>({(long)15}), (std::vector<long>)std::vector<long>({(long)19}), (std::vector<long>)std::vector<long>({(long)18, (long)18}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)26, (long)26}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)18}), (std::vector<long>)std::vector<long>({(long)10})})));\n    assert(candidate((std::any({(std::string)\"a\", (std::string)\"a\", (std::string)\"b\", (std::string)\"c\", (std::string)\"d\", (std::string)\"d\"}))) == (std::any({(std::vector<std::string>)std::vector<std::string>({(std::string)\"a\", (std::string)\"a\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"b\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"c\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"d\", (std::string)\"d\"})})));\n}\n",
      "timestamp": 1665510437,
      "stdout": "",
      "stderr": "/tmp/tmp996xkpjp.cpp: In function \u2018std::any pack_consecutive_duplicates(std::any)\u2019:\n/tmp/tmp996xkpjp.cpp:70:1: warning: no return statement in function returning non-void [-Wreturn-type]\n   70 | }\n      | ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp996xkpjp.cpp:2:\n/tmp/tmp996xkpjp.cpp: In function \u2018int main()\u2019:\n/tmp/tmp996xkpjp.cpp:73:176: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   73 |     assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n      |                                                                                                                                                                                ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmp996xkpjp.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>,",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to pack consecutive duplicates of a given list elements into sublists.\nstd::any pack_consecutive_duplicates(std::any list1) {\n    std::any list2;\n    std::any temp;\n    std::any::iterator it1 = list1.begin();\n    std::any::iterator it2 = list2.begin();\n    while(it1 != list1.end()) {\n        temp.push_back(*it1);\n        it1++;\n        if(*it1 != *it1++) {\n            it2 = list2.insert(it2, temp);\n            temp.clear();\n        }\n    }\n    return list2;\n}\nint main() {\n    auto candidate = pack_consecutive_duplicates;\n    assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n    assert(candidate((std::any({(long)10, (long)10, (long)15, (long)19, (long)18, (long)18, (long)17, (long)26, (long)26, (long)17, (long)18, (long)10}))) == (std::any({(std::vector<long>)std::vector<long>({(long)10, (long)10}), (std::vector<long>)std::vector<long>({(long)15}), (std::vector<long>)std::vector<long>({(long)19}), (std::vector<long>)std::vector<long>({(long)18, (long)18}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)26, (long)26}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)18}), (std::vector<long>)std::vector<long>({(long)10})})));\n    assert(candidate((std::any({(std::string)\"a\", (std::string)\"a\", (std::string)\"b\", (std::string)\"c\", (std::string)\"d\", (std::string)\"d\"}))) == (std::any({(std::vector<std::string>)std::vector<std::string>({(std::string)\"a\", (std::string)\"a\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"b\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"c\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"d\", (std::string)\"d\"})})));\n}\n",
      "timestamp": 1666123403,
      "stdout": "",
      "stderr": "/tmp/tmp8w1h93nc.cpp: In function \u2018std::any pack_consecutive_duplicates(std::any)\u2019:\n/tmp/tmp8w1h93nc.cpp:7:15: error: \u2018iterator\u2019 is not a member of \u2018std::any\u2019\n    7 |     std::any::iterator it1 = list1.begin();\n      |               ^~~~~~~~\n/tmp/tmp8w1h93nc.cpp:8:15: error: \u2018iterator\u2019 is not a member of \u2018std::any\u2019\n    8 |     std::any::iterator it2 = list2.begin();\n      |               ^~~~~~~~\n/tmp/tmp8w1h93nc.cpp:9:11: error: \u2018it1\u2019 was not declared in this scope; did you mean \u2018list1\u2019?\n    9 |     while(it1 != list1.end()) {\n      |           ^~~\n      |           list1\n/tmp/tmp8w1h93nc.cpp:9:24: error: \u2018class std::any\u2019 has no member named \u2018end\u2019\n    9 |     while(it1 != list1.end()) {\n      |                        ^~~\n/tmp/tmp8w1h93nc.cpp:10:14: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   10 |         temp.push_back(*it1);\n      |              ^~~~~~~~~\n/tmp/tmp8w1h93nc.cpp:13:13: error: \u2018it2\u2019 was not declared in this scope; did you mean \u2018list2\u2019?\n   13 |             it2 = list2.insert(it2, temp);\n      |             ^~~\n      |             list2\n/tmp/tmp8w1h93nc.cpp:13:25: error: \u2018class std::any\u2019 has no member named \u2018insert\u2019\n   13 |             it2 = list2.insert(it2, temp);\n      |                         ^~~~~~\n/tmp/tmp8w1h93nc.cpp:14:18: error: \u2018class std::any\u2019 has no member named \u2018clear\u2019\n   14 |             temp.clear();\n      |                  ^~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp8w1h93nc.cpp:2:\n/tmp/tmp8w1h93nc.cpp: In function \u2018int main()\u2019:\n/tmp/tmp8w1h93nc.cpp:21:176: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   21 |     assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to pack consecutive duplicates of a given list elements into sublists.\nstd::any pack_consecutive_duplicates(std::any list1) {\n\tstd::any list2;\n\tstd::any list3;\n\tstd::any list4;\n\tstd::any list5;\n\tstd::any list6;\n\tstd::any list7;\n\tstd::any list8;\n\tstd::any list9;\n\tstd::any list10;\n\tstd::any list11;\n\tstd::any list12;\n\tstd::any list13;\n\tstd::any list14;\n\tstd::any list15;\n\tstd::any list16;\n\tstd::any list17;\n\tstd::any list18;\n\tstd::any list19;\n\tstd::any list20;\n\tstd::any list21;\n\tstd::any list22;\n\tstd::any list23;\n\tstd::any list24;\n\tstd::any list25;\n\tstd::any list26;\n\tstd::any list27;\n\tstd::any list28;\n\tstd::any list29;\n\tstd::any list30;\n\tstd::any list31;\n\tstd::any list32;\n\tstd::any list33;\n\tstd::any list34;\n\tstd::any list35;\n\tstd::any list36;\n\tstd::any list37;\n\tstd::any list38;\n\tstd::any list39;\n\tstd::any list40;\n\tstd::any list41;\n\tstd::any list42;\n\tstd::any list43;\n\tstd::any list44;\n\tstd::any list45;\n\tstd::any list46;\n\tstd::any list47;\n\tstd::any list48;\n\tstd::any list49;\n\tstd::any list50;\n\tstd::any list51;\n\tstd::any list52;\n\tstd::any list53;\n\tstd::any list54;\n\tstd::any list55;\n\tstd::any list56;\n\tstd::any list57;\n\tstd::any list58;\n\tstd::any list59;\n\tstd::any list60;\n\tstd::any list61;\n\tstd::any list62;\n\tstd::any list63;\n\tstd::any list64;\n\tstd::any list65;\n}\nint main() {\n    auto candidate = pack_consecutive_duplicates;\n    assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n    assert(candidate((std::any({(long)10, (long)10, (long)15, (long)19, (long)18, (long)18, (long)17, (long)26, (long)26, (long)17, (long)18, (long)10}))) == (std::any({(std::vector<long>)std::vector<long>({(long)10, (long)10}), (std::vector<long>)std::vector<long>({(long)15}), (std::vector<long>)std::vector<long>({(long)19}), (std::vector<long>)std::vector<long>({(long)18, (long)18}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)26, (long)26}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)18}), (std::vector<long>)std::vector<long>({(long)10})})));\n    assert(candidate((std::any({(std::string)\"a\", (std::string)\"a\", (std::string)\"b\", (std::string)\"c\", (std::string)\"d\", (std::string)\"d\"}))) == (std::any({(std::vector<std::string>)std::vector<std::string>({(std::string)\"a\", (std::string)\"a\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"b\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"c\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"d\", (std::string)\"d\"})})));\n}\n",
      "timestamp": 1666123400,
      "stdout": "",
      "stderr": "/tmp/tmpt52wpjxu.cpp: In function \u2018std::any pack_consecutive_duplicates(std::any)\u2019:\n/tmp/tmpt52wpjxu.cpp:69:1: warning: no return statement in function returning non-void [-Wreturn-type]\n   69 | }\n      | ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpt52wpjxu.cpp:2:\n/tmp/tmpt52wpjxu.cpp: In function \u2018int main()\u2019:\n/tmp/tmpt52wpjxu.cpp:72:176: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   72 |     assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n      |                                                                                                                                                                                ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpt52wpjxu.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>,",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to pack consecutive duplicates of a given list elements into sublists.\nstd::any pack_consecutive_duplicates(std::any list1) {\n    std::any list2;\n    std::any list3;\n    std::any list4;\n    std::any list5;\n    std::any list6;\n    std::any list7;\n    std::any list8;\n    std::any list9;\n    std::any list10;\n    std::any list11;\n    std::any list12;\n    std::any list13;\n    std::any list14;\n    std::any list15;\n    std::any list16;\n    std::any list17;\n    std::any list18;\n    std::any list19;\n    std::any list20;\n    std::any list21;\n    std::any list22;\n    std::any list23;\n    std::any list24;\n    std::any list25;\n    std::any list26;\n    std::any list27;\n    std::any list28;\n    std::any list29;\n    std::any list30;\n    std::any list31;\n    std::any list32;\n    std::any list33;\n    std::any list34;\n    std::any list35;\n    std::any list36;\n    std::any list37;\n    std::any list38;\n    std::any list39;\n    std::any list40;\n    std::any list41;\n    std::any list42;\n    std::any list43;\n    std::any list44;\n    std::any list45;\n    std::any list46;\n    std::any list47;\n    std::any list48;\n    std::any list49;\n    std::any list50;\n    std::any list51;\n    std::any list52;\n    std::any list53;\n    std::any list54;\n    std::any list55;\n    std::any list56;\n    std::any list57;\n    std::any list58;\n    std::any list59;\n    std::any list60;\n    std::any list61;\n    std::any list62;\n    std::any list63;\n    std::any list64;\n    std::any list65;\n}\nint main() {\n    auto candidate = pack_consecutive_duplicates;\n    assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n    assert(candidate((std::any({(long)10, (long)10, (long)15, (long)19, (long)18, (long)18, (long)17, (long)26, (long)26, (long)17, (long)18, (long)10}))) == (std::any({(std::vector<long>)std::vector<long>({(long)10, (long)10}), (std::vector<long>)std::vector<long>({(long)15}), (std::vector<long>)std::vector<long>({(long)19}), (std::vector<long>)std::vector<long>({(long)18, (long)18}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)26, (long)26}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)18}), (std::vector<long>)std::vector<long>({(long)10})})));\n    assert(candidate((std::any({(std::string)\"a\", (std::string)\"a\", (std::string)\"b\", (std::string)\"c\", (std::string)\"d\", (std::string)\"d\"}))) == (std::any({(std::vector<std::string>)std::vector<std::string>({(std::string)\"a\", (std::string)\"a\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"b\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"c\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"d\", (std::string)\"d\"})})));\n}\n",
      "timestamp": 1665510437,
      "stdout": "",
      "stderr": "/tmp/tmpgspun4wj.cpp: In function \u2018std::any pack_consecutive_duplicates(std::any)\u2019:\n/tmp/tmpgspun4wj.cpp:69:1: warning: no return statement in function returning non-void [-Wreturn-type]\n   69 | }\n      | ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpgspun4wj.cpp:2:\n/tmp/tmpgspun4wj.cpp: In function \u2018int main()\u2019:\n/tmp/tmpgspun4wj.cpp:72:176: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   72 |     assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n      |                                                                                                                                                                                ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpgspun4wj.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>,",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to pack consecutive duplicates of a given list elements into sublists.\nstd::any pack_consecutive_duplicates(std::any list1) {\n    std::any list2;\n    std::any temp;\n    std::any::iterator it;\n    for (it = list1.begin(); it != list1.end(); it++) {\n        if (temp.empty() || *it == temp.back()) {\n            temp.push_back(*it);\n        } else {\n            list2.push_back(temp);\n            temp.clear();\n            temp.push_back(*it);\n        }\n    }\n    list2.push_back(temp);\n    return list2;\n}\nint main() {\n    auto candidate = pack_consecutive_duplicates;\n    assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n    assert(candidate((std::any({(long)10, (long)10, (long)15, (long)19, (long)18, (long)18, (long)17, (long)26, (long)26, (long)17, (long)18, (long)10}))) == (std::any({(std::vector<long>)std::vector<long>({(long)10, (long)10}), (std::vector<long>)std::vector<long>({(long)15}), (std::vector<long>)std::vector<long>({(long)19}), (std::vector<long>)std::vector<long>({(long)18, (long)18}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)26, (long)26}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)18}), (std::vector<long>)std::vector<long>({(long)10})})));\n    assert(candidate((std::any({(std::string)\"a\", (std::string)\"a\", (std::string)\"b\", (std::string)\"c\", (std::string)\"d\", (std::string)\"d\"}))) == (std::any({(std::vector<std::string>)std::vector<std::string>({(std::string)\"a\", (std::string)\"a\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"b\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"c\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"d\", (std::string)\"d\"})})));\n}\n",
      "timestamp": 1666123403,
      "stdout": "",
      "stderr": "/tmp/tmp1hqkavhi.cpp: In function \u2018std::any pack_consecutive_duplicates(std::any)\u2019:\n/tmp/tmp1hqkavhi.cpp:7:15: error: \u2018iterator\u2019 is not a member of \u2018std::any\u2019\n    7 |     std::any::iterator it;\n      |               ^~~~~~~~\n/tmp/tmp1hqkavhi.cpp:8:10: error: \u2018it\u2019 was not declared in this scope; did you mean \u2018int\u2019?\n    8 |     for (it = list1.begin(); it != list1.end(); it++) {\n      |          ^~\n      |          int\n/tmp/tmp1hqkavhi.cpp:8:21: error: \u2018class std::any\u2019 has no member named \u2018begin\u2019\n    8 |     for (it = list1.begin(); it != list1.end(); it++) {\n      |                     ^~~~~\n/tmp/tmp1hqkavhi.cpp:8:42: error: \u2018class std::any\u2019 has no member named \u2018end\u2019\n    8 |     for (it = list1.begin(); it != list1.end(); it++) {\n      |                                          ^~~\n/tmp/tmp1hqkavhi.cpp:9:18: error: \u2018class std::any\u2019 has no member named \u2018empty\u2019\n    9 |         if (temp.empty() || *it == temp.back()) {\n      |                  ^~~~~\n/tmp/tmp1hqkavhi.cpp:9:41: error: \u2018class std::any\u2019 has no member named \u2018back\u2019\n    9 |         if (temp.empty() || *it == temp.back()) {\n      |                                         ^~~~\n/tmp/tmp1hqkavhi.cpp:10:18: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   10 |             temp.push_back(*it);\n      |                  ^~~~~~~~~\n/tmp/tmp1hqkavhi.cpp:12:19: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   12 |             list2.push_back(temp);\n      |                   ^~~~~~~~~\n/tmp/tmp1hqkavhi.cpp:13:18: error: \u2018class std::any\u2019 has no member named \u2018clear\u2019\n   13 |             temp.clear();\n      |                  ^~~~~\n/tmp/tmp1hqkavhi.cpp:14:18: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   14 |             temp.push_back(*it);\n      |                  ^~~~~~~~~\n/tmp/tmp1hqkavhi.cpp:17:11: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   17 |     list2.push_back(temp);\n      |           ^~~~~~~~~\nIn file included from /shared/ce",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to pack consecutive duplicates of a given list elements into sublists.\nstd::any pack_consecutive_duplicates(std::any list1) {\n    std::any list2;\n    std::any temp;\n    std::any::iterator it = list1.begin();\n    while(it != list1.end()) {\n        temp.push_back(*it);\n        it++;\n        if(it == list1.end() || *it != temp.back()) {\n            list2.push_back(temp);\n            temp.clear();\n        }\n    }\n    return list2;\n}\nint main() {\n    auto candidate = pack_consecutive_duplicates;\n    assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n    assert(candidate((std::any({(long)10, (long)10, (long)15, (long)19, (long)18, (long)18, (long)17, (long)26, (long)26, (long)17, (long)18, (long)10}))) == (std::any({(std::vector<long>)std::vector<long>({(long)10, (long)10}), (std::vector<long>)std::vector<long>({(long)15}), (std::vector<long>)std::vector<long>({(long)19}), (std::vector<long>)std::vector<long>({(long)18, (long)18}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)26, (long)26}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)18}), (std::vector<long>)std::vector<long>({(long)10})})));\n    assert(candidate((std::any({(std::string)\"a\", (std::string)\"a\", (std::string)\"b\", (std::string)\"c\", (std::string)\"d\", (std::string)\"d\"}))) == (std::any({(std::vector<std::string>)std::vector<std::string>({(std::string)\"a\", (std::string)\"a\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"b\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"c\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"d\", (std::string)\"d\"})})));\n}\n",
      "timestamp": 1666123400,
      "stdout": "",
      "stderr": "/tmp/tmpy1lfk2kp.cpp: In function \u2018std::any pack_consecutive_duplicates(std::any)\u2019:\n/tmp/tmpy1lfk2kp.cpp:7:15: error: \u2018iterator\u2019 is not a member of \u2018std::any\u2019\n    7 |     std::any::iterator it = list1.begin();\n      |               ^~~~~~~~\n/tmp/tmpy1lfk2kp.cpp:8:11: error: \u2018it\u2019 was not declared in this scope; did you mean \u2018int\u2019?\n    8 |     while(it != list1.end()) {\n      |           ^~\n      |           int\n/tmp/tmpy1lfk2kp.cpp:8:23: error: \u2018class std::any\u2019 has no member named \u2018end\u2019\n    8 |     while(it != list1.end()) {\n      |                       ^~~\n/tmp/tmpy1lfk2kp.cpp:9:14: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n    9 |         temp.push_back(*it);\n      |              ^~~~~~~~~\n/tmp/tmpy1lfk2kp.cpp:11:24: error: \u2018class std::any\u2019 has no member named \u2018end\u2019\n   11 |         if(it == list1.end() || *it != temp.back()) {\n      |                        ^~~\n/tmp/tmpy1lfk2kp.cpp:11:45: error: \u2018class std::any\u2019 has no member named \u2018back\u2019\n   11 |         if(it == list1.end() || *it != temp.back()) {\n      |                                             ^~~~\n/tmp/tmpy1lfk2kp.cpp:12:19: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   12 |             list2.push_back(temp);\n      |                   ^~~~~~~~~\n/tmp/tmpy1lfk2kp.cpp:13:18: error: \u2018class std::any\u2019 has no member named \u2018clear\u2019\n   13 |             temp.clear();\n      |                  ^~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpy1lfk2kp.cpp:2:\n/tmp/tmpy1lfk2kp.cpp: In function \u2018int main()\u2019:\n/tmp/tmpy1lfk2kp.cpp:20:176: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   20 |     assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to pack consecutive duplicates of a given list elements into sublists.\nstd::any pack_consecutive_duplicates(std::any list1) {\n    std::any list2;\n    std::any temp;\n    std::any::iterator it;\n    std::any::iterator it2;\n    std::any::iterator it3;\n    for (it = list1.begin(); it != list1.end(); it++) {\n        if (it == list1.begin()) {\n            temp.push_back(*it);\n        }\n        else {\n            if (*it == *(it - 1)) {\n                temp.push_back(*it);\n            }\n            else {\n                list2.push_back(temp);\n                temp.clear();\n                temp.push_back(*it);\n            }\n        }\n    }\n    list2.push_back(temp);\n    return list2;\n}\nint main() {\n    auto candidate = pack_consecutive_duplicates;\n    assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n    assert(candidate((std::any({(long)10, (long)10, (long)15, (long)19, (long)18, (long)18, (long)17, (long)26, (long)26, (long)17, (long)18, (long)10}))) == (std::any({(std::vector<long>)std::vector<long>({(long)10, (long)10}), (std::vector<long>)std::vector<long>({(long)15}), (std::vector<long>)std::vector<long>({(long)19}), (std::vector<long>)std::vector<long>({(long)18, (long)18}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)26, (long)26}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)18}), (std::vector<long>)std::vector<long>({(long)10})})));\n    assert(candidate((std::any({(std::string)\"a\", (std::string)\"a\", (std::string)\"b\", (std::string)\"c\", (std::string)\"d\", (std::string)\"d\"}))) == (std::any({(std::vector<std::string>)std::vector<std::string>({(std::string)\"a\", (std::string)\"a\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"b\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"c\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"d\", (std::string)\"d\"})})));\n}\n",
      "timestamp": 1666123403,
      "stdout": "",
      "stderr": "/tmp/tmph46hlo15.cpp: In function \u2018std::any pack_consecutive_duplicates(std::any)\u2019:\n/tmp/tmph46hlo15.cpp:7:15: error: \u2018iterator\u2019 is not a member of \u2018std::any\u2019\n    7 |     std::any::iterator it;\n      |               ^~~~~~~~\n/tmp/tmph46hlo15.cpp:8:15: error: \u2018iterator\u2019 is not a member of \u2018std::any\u2019\n    8 |     std::any::iterator it2;\n      |               ^~~~~~~~\n/tmp/tmph46hlo15.cpp:9:15: error: \u2018iterator\u2019 is not a member of \u2018std::any\u2019\n    9 |     std::any::iterator it3;\n      |               ^~~~~~~~\n/tmp/tmph46hlo15.cpp:10:10: error: \u2018it\u2019 was not declared in this scope; did you mean \u2018int\u2019?\n   10 |     for (it = list1.begin(); it != list1.end(); it++) {\n      |          ^~\n      |          int\n/tmp/tmph46hlo15.cpp:10:21: error: \u2018class std::any\u2019 has no member named \u2018begin\u2019\n   10 |     for (it = list1.begin(); it != list1.end(); it++) {\n      |                     ^~~~~\n/tmp/tmph46hlo15.cpp:10:42: error: \u2018class std::any\u2019 has no member named \u2018end\u2019\n   10 |     for (it = list1.begin(); it != list1.end(); it++) {\n      |                                          ^~~\n/tmp/tmph46hlo15.cpp:11:25: error: \u2018class std::any\u2019 has no member named \u2018begin\u2019\n   11 |         if (it == list1.begin()) {\n      |                         ^~~~~\n/tmp/tmph46hlo15.cpp:12:18: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   12 |             temp.push_back(*it);\n      |                  ^~~~~~~~~\n/tmp/tmph46hlo15.cpp:16:22: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   16 |                 temp.push_back(*it);\n      |                      ^~~~~~~~~\n/tmp/tmph46hlo15.cpp:19:23: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   19 |                 list2.push_back(temp);\n      |                       ^~~~~~~~~\n/tmp/tmph46hlo15.cpp:20:22: error: \u2018class std::any\u2019 has no member named \u2018clear\u2019\n   20 |                 temp.clear();\n      |                      ^~~~~\n/tmp/tmph46hlo15.cpp:21:22: error: \u2018class std::any\u2019 has no m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to pack consecutive duplicates of a given list elements into sublists.\nstd::any pack_consecutive_duplicates(std::any list1) {\n    std::any list2;\n    std::any temp;\n    std::any temp2;\n    std::any temp3;\n    std::any temp4;\n    std::any temp5;\n    std::any temp6;\n    std::any temp7;\n    std::any temp8;\n    std::any temp9;\n    std::any temp10;\n    std::any temp11;\n    std::any temp12;\n    std::any temp13;\n    std::any temp14;\n    std::any temp15;\n    std::any temp16;\n    std::any temp17;\n    std::any temp18;\n    std::any temp19;\n    std::any temp20;\n    std::any temp21;\n    std::any temp22;\n    std::any temp23;\n    std::any temp24;\n    std::any temp25;\n    std::any temp26;\n    std::any temp27;\n    std::any temp28;\n    std::any temp29;\n    std::any temp30;\n    std::any temp31;\n    std::any temp32;\n    std::any temp33;\n    std::any temp34;\n    std::any temp35;\n    std::any temp36;\n    std::any temp37;\n    std::any temp38;\n    std::any temp39;\n    std::any temp40;\n    std::any temp41;\n    std::any temp42;\n    std::any temp43;\n    std::any temp44;\n    std::any temp45;\n    std::any temp46;\n    std::any temp47;\n    std::any temp48;\n    std::any temp49;\n    std::any temp50;\n    std::any temp51;\n    std::any temp52;\n    std::any temp53;\n    std::any temp54;\n    std::any temp55;\n    std::any temp56;\n    std::any temp57;\n    std::any temp58;\n    std::any temp59;\n    std::any temp60;\n    std::any temp61;\n    std::any temp62;\n    std::any temp63;\n\n}\nint main() {\n    auto candidate = pack_consecutive_duplicates;\n    assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n    assert(candidate((std::any({(long)10, (long)10, (long)15, (long)19, (long)18, (long)18, (long)17, (long)26, (long)26, (long)17, (long)18, (long)10}))) == (std::any({(std::vector<long>)std::vector<long>({(long)10, (long)10}), (std::vector<long>)std::vector<long>({(long)15}), (std::vector<long>)std::vector<long>({(long)19}), (std::vector<long>)std::vector<long>({(long)18, (long)18}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)26, (long)26}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)18}), (std::vector<long>)std::vector<long>({(long)10})})));\n    assert(candidate((std::any({(std::string)\"a\", (std::string)\"a\", (std::string)\"b\", (std::string)\"c\", (std::string)\"d\", (std::string)\"d\"}))) == (std::any({(std::vector<std::string>)std::vector<std::string>({(std::string)\"a\", (std::string)\"a\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"b\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"c\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"d\", (std::string)\"d\"})})));\n}\n",
      "timestamp": 1665510437,
      "stdout": "",
      "stderr": "/tmp/tmp996xkpjp.cpp: In function \u2018std::any pack_consecutive_duplicates(std::any)\u2019:\n/tmp/tmp996xkpjp.cpp:70:1: warning: no return statement in function returning non-void [-Wreturn-type]\n   70 | }\n      | ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp996xkpjp.cpp:2:\n/tmp/tmp996xkpjp.cpp: In function \u2018int main()\u2019:\n/tmp/tmp996xkpjp.cpp:73:176: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   73 |     assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n      |                                                                                                                                                                                ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmp996xkpjp.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>,",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to pack consecutive duplicates of a given list elements into sublists.\nstd::any pack_consecutive_duplicates(std::any list1) {\n\tstd::any list2;\n\tstd::any list3;\n\tstd::any list4;\n\tstd::any list5;\n\tstd::any list6;\n\tstd::any list7;\n\tstd::any list8;\n\tstd::any list9;\n\tstd::any list10;\n\tstd::any list11;\n\tstd::any list12;\n\tstd::any list13;\n\tstd::any list14;\n\tstd::any list15;\n\tstd::any list16;\n\tstd::any list17;\n\tstd::any list18;\n\tstd::any list19;\n\tstd::any list20;\n\tstd::any list21;\n\tstd::any list22;\n\tstd::any list23;\n\tstd::any list24;\n\tstd::any list25;\n\tstd::any list26;\n\tstd::any list27;\n\tstd::any list28;\n\tstd::any list29;\n\tstd::any list30;\n\tstd::any list31;\n\tstd::any list32;\n\tstd::any list33;\n\tstd::any list34;\n\tstd::any list35;\n\tstd::any list36;\n\tstd::any list37;\n\tstd::any list38;\n\tstd::any list39;\n\tstd::any list40;\n\tstd::any list41;\n\tstd::any list42;\n\tstd::any list43;\n\tstd::any list44;\n\tstd::any list45;\n\tstd::any list46;\n\tstd::any list47;\n\tstd::any list48;\n\tstd::any list49;\n\tstd::any list50;\n\tstd::any list51;\n\tstd::any list52;\n\tstd::any list53;\n\tstd::any list54;\n\tstd::any list55;\n\tstd::any list56;\n\tstd::any list57;\n\tstd::any list58;\n\tstd::any list59;\n\tstd::any list60;\n\tstd::any list61;\n\tstd::any list62;\n\tstd::any list63;\n\tstd::any list64;\n\tstd::any list65;\n}\nint main() {\n    auto candidate = pack_consecutive_duplicates;\n    assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n    assert(candidate((std::any({(long)10, (long)10, (long)15, (long)19, (long)18, (long)18, (long)17, (long)26, (long)26, (long)17, (long)18, (long)10}))) == (std::any({(std::vector<long>)std::vector<long>({(long)10, (long)10}), (std::vector<long>)std::vector<long>({(long)15}), (std::vector<long>)std::vector<long>({(long)19}), (std::vector<long>)std::vector<long>({(long)18, (long)18}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)26, (long)26}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)18}), (std::vector<long>)std::vector<long>({(long)10})})));\n    assert(candidate((std::any({(std::string)\"a\", (std::string)\"a\", (std::string)\"b\", (std::string)\"c\", (std::string)\"d\", (std::string)\"d\"}))) == (std::any({(std::vector<std::string>)std::vector<std::string>({(std::string)\"a\", (std::string)\"a\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"b\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"c\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"d\", (std::string)\"d\"})})));\n}\n",
      "timestamp": 1666123400,
      "stdout": "",
      "stderr": "/tmp/tmpt52wpjxu.cpp: In function \u2018std::any pack_consecutive_duplicates(std::any)\u2019:\n/tmp/tmpt52wpjxu.cpp:69:1: warning: no return statement in function returning non-void [-Wreturn-type]\n   69 | }\n      | ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpt52wpjxu.cpp:2:\n/tmp/tmpt52wpjxu.cpp: In function \u2018int main()\u2019:\n/tmp/tmpt52wpjxu.cpp:72:176: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   72 |     assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n      |                                                                                                                                                                                ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpt52wpjxu.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>,",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to pack consecutive duplicates of a given list elements into sublists.\nstd::any pack_consecutive_duplicates(std::any list1) {\n\tstd::any list2;\n\tstd::any temp;\n\tstd::any temp2;\n\tint count = 0;\n\twhile (!list1.empty()) {\n\t\ttemp = list1.front();\n\t\tlist1.pop_front();\n\t\twhile (!list1.empty() && list1.front() == temp) {\n\t\t\tlist1.pop_front();\n\t\t\tcount++;\n\t\t}\n\t\ttemp2.push_back(temp);\n\t\ttemp2.push_back(count);\n\t\tlist2.push_back(temp2);\n\t\ttemp2.clear();\n\t\tcount = 0;\n\t}\n\treturn list2;\n}\nint main() {\n    auto candidate = pack_consecutive_duplicates;\n    assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n    assert(candidate((std::any({(long)10, (long)10, (long)15, (long)19, (long)18, (long)18, (long)17, (long)26, (long)26, (long)17, (long)18, (long)10}))) == (std::any({(std::vector<long>)std::vector<long>({(long)10, (long)10}), (std::vector<long>)std::vector<long>({(long)15}), (std::vector<long>)std::vector<long>({(long)19}), (std::vector<long>)std::vector<long>({(long)18, (long)18}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)26, (long)26}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)18}), (std::vector<long>)std::vector<long>({(long)10})})));\n    assert(candidate((std::any({(std::string)\"a\", (std::string)\"a\", (std::string)\"b\", (std::string)\"c\", (std::string)\"d\", (std::string)\"d\"}))) == (std::any({(std::vector<std::string>)std::vector<std::string>({(std::string)\"a\", (std::string)\"a\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"b\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"c\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"d\", (std::string)\"d\"})})));\n}\n",
      "timestamp": 1666123403,
      "stdout": "",
      "stderr": "/tmp/tmpg4pes_ke.cpp: In function \u2018std::any pack_consecutive_duplicates(std::any)\u2019:\n/tmp/tmpg4pes_ke.cpp:9:16: error: \u2018class std::any\u2019 has no member named \u2018empty\u2019\n    9 |  while (!list1.empty()) {\n      |                ^~~~~\n/tmp/tmpg4pes_ke.cpp:10:16: error: \u2018class std::any\u2019 has no member named \u2018front\u2019\n   10 |   temp = list1.front();\n      |                ^~~~~\n/tmp/tmpg4pes_ke.cpp:11:9: error: \u2018class std::any\u2019 has no member named \u2018pop_front\u2019\n   11 |   list1.pop_front();\n      |         ^~~~~~~~~\n/tmp/tmpg4pes_ke.cpp:12:17: error: \u2018class std::any\u2019 has no member named \u2018empty\u2019\n   12 |   while (!list1.empty() && list1.front() == temp) {\n      |                 ^~~~~\n/tmp/tmpg4pes_ke.cpp:12:34: error: \u2018class std::any\u2019 has no member named \u2018front\u2019\n   12 |   while (!list1.empty() && list1.front() == temp) {\n      |                                  ^~~~~\n/tmp/tmpg4pes_ke.cpp:13:10: error: \u2018class std::any\u2019 has no member named \u2018pop_front\u2019\n   13 |    list1.pop_front();\n      |          ^~~~~~~~~\n/tmp/tmpg4pes_ke.cpp:16:9: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   16 |   temp2.push_back(temp);\n      |         ^~~~~~~~~\n/tmp/tmpg4pes_ke.cpp:17:9: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   17 |   temp2.push_back(count);\n      |         ^~~~~~~~~\n/tmp/tmpg4pes_ke.cpp:18:9: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   18 |   list2.push_back(temp2);\n      |         ^~~~~~~~~\n/tmp/tmpg4pes_ke.cpp:19:9: error: \u2018class std::any\u2019 has no member named \u2018clear\u2019\n   19 |   temp2.clear();\n      |         ^~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpg4pes_ke.cpp:2:\n/tmp/tmpg4pes_ke.cpp: In function \u2018int main()\u2019:\n/tmp/tmpg4pes_ke.cpp:26:176: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to pack consecutive duplicates of a given list elements into sublists.\nstd::any pack_consecutive_duplicates(std::any list1) {\n    std::any list2;\n    std::any sublist;\n    while(!list1.empty()) {\n        if(sublist.empty()) {\n            sublist.push_back(list1.front());\n            list1.pop_front();\n        }\n        else if(sublist.back() == list1.front()) {\n            sublist.push_back(list1.front());\n            list1.pop_front();\n        }\n        else {\n            list2.push_back(sublist);\n            sublist.clear();\n        }\n    }\n    if(!sublist.empty()) {\n        list2.push_back(sublist);\n    }\n    return list2;\n}\nint main() {\n    auto candidate = pack_consecutive_duplicates;\n    assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n    assert(candidate((std::any({(long)10, (long)10, (long)15, (long)19, (long)18, (long)18, (long)17, (long)26, (long)26, (long)17, (long)18, (long)10}))) == (std::any({(std::vector<long>)std::vector<long>({(long)10, (long)10}), (std::vector<long>)std::vector<long>({(long)15}), (std::vector<long>)std::vector<long>({(long)19}), (std::vector<long>)std::vector<long>({(long)18, (long)18}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)26, (long)26}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)18}), (std::vector<long>)std::vector<long>({(long)10})})));\n    assert(candidate((std::any({(std::string)\"a\", (std::string)\"a\", (std::string)\"b\", (std::string)\"c\", (std::string)\"d\", (std::string)\"d\"}))) == (std::any({(std::vector<std::string>)std::vector<std::string>({(std::string)\"a\", (std::string)\"a\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"b\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"c\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"d\", (std::string)\"d\"})})));\n}\n",
      "timestamp": 1666123403,
      "stdout": "",
      "stderr": "/tmp/tmpsbwdafbc.cpp: In function \u2018std::any pack_consecutive_duplicates(std::any)\u2019:\n/tmp/tmpsbwdafbc.cpp:7:18: error: \u2018class std::any\u2019 has no member named \u2018empty\u2019\n    7 |     while(!list1.empty()) {\n      |                  ^~~~~\n/tmp/tmpsbwdafbc.cpp:8:20: error: \u2018class std::any\u2019 has no member named \u2018empty\u2019\n    8 |         if(sublist.empty()) {\n      |                    ^~~~~\n/tmp/tmpsbwdafbc.cpp:9:21: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n    9 |             sublist.push_back(list1.front());\n      |                     ^~~~~~~~~\n/tmp/tmpsbwdafbc.cpp:9:37: error: \u2018class std::any\u2019 has no member named \u2018front\u2019\n    9 |             sublist.push_back(list1.front());\n      |                                     ^~~~~\n/tmp/tmpsbwdafbc.cpp:10:19: error: \u2018class std::any\u2019 has no member named \u2018pop_front\u2019\n   10 |             list1.pop_front();\n      |                   ^~~~~~~~~\n/tmp/tmpsbwdafbc.cpp:12:25: error: \u2018class std::any\u2019 has no member named \u2018back\u2019\n   12 |         else if(sublist.back() == list1.front()) {\n      |                         ^~~~\n/tmp/tmpsbwdafbc.cpp:12:41: error: \u2018class std::any\u2019 has no member named \u2018front\u2019\n   12 |         else if(sublist.back() == list1.front()) {\n      |                                         ^~~~~\n/tmp/tmpsbwdafbc.cpp:13:21: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   13 |             sublist.push_back(list1.front());\n      |                     ^~~~~~~~~\n/tmp/tmpsbwdafbc.cpp:13:37: error: \u2018class std::any\u2019 has no member named \u2018front\u2019\n   13 |             sublist.push_back(list1.front());\n      |                                     ^~~~~\n/tmp/tmpsbwdafbc.cpp:14:19: error: \u2018class std::any\u2019 has no member named \u2018pop_front\u2019\n   14 |             list1.pop_front();\n      |                   ^~~~~~~~~\n/tmp/tmpsbwdafbc.cpp:17:19: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   17 |             list2.push_back(sublist);\n      |                   ^~~~~~~~~\n/tmp/t",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to pack consecutive duplicates of a given list elements into sublists.\nstd::any pack_consecutive_duplicates(std::any list1) {\n    std::any list2;\n    std::any sublist;\n    std::any temp;\n    std::any temp2;\n    std::any temp3;\n    std::any temp4;\n    std::any temp5;\n    std::any temp6;\n    std::any temp7;\n    std::any temp8;\n    std::any temp9;\n    std::any temp10;\n    std::any temp11;\n    std::any temp12;\n    std::any temp13;\n    std::any temp14;\n    std::any temp15;\n    std::any temp16;\n    std::any temp17;\n    std::any temp18;\n    std::any temp19;\n    std::any temp20;\n    std::any temp21;\n    std::any temp22;\n    std::any temp23;\n    std::any temp24;\n    std::any temp25;\n    std::any temp26;\n    std::any temp27;\n    std::any temp28;\n    std::any temp29;\n    std::any temp30;\n    std::any temp31;\n    std::any temp32;\n    std::any temp33;\n    std::any temp34;\n    std::any temp35;\n    std::any temp36;\n    std::any temp37;\n    std::any temp38;\n    std::any temp39;\n    std::any temp40;\n    std::any temp41;\n    std::any temp42;\n    std::any temp43;\n    std::any temp44;\n    std::any temp45;\n    std::any temp46;\n    std::any temp47;\n    std::any temp48;\n    std::any temp49;\n    std::any temp50;\n    std::any temp51;\n    std::any temp52;\n    std::any temp53;\n    std::any temp54;\n    std::any temp55;\n    std::any temp56;\n    std::any temp57;\n    std::any temp58;\n    std::any temp59;\n    std::any temp60;\n    std::any temp61;\n    std::any temp62;\n\n}\nint main() {\n    auto candidate = pack_consecutive_duplicates;\n    assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n    assert(candidate((std::any({(long)10, (long)10, (long)15, (long)19, (long)18, (long)18, (long)17, (long)26, (long)26, (long)17, (long)18, (long)10}))) == (std::any({(std::vector<long>)std::vector<long>({(long)10, (long)10}), (std::vector<long>)std::vector<long>({(long)15}), (std::vector<long>)std::vector<long>({(long)19}), (std::vector<long>)std::vector<long>({(long)18, (long)18}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)26, (long)26}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)18}), (std::vector<long>)std::vector<long>({(long)10})})));\n    assert(candidate((std::any({(std::string)\"a\", (std::string)\"a\", (std::string)\"b\", (std::string)\"c\", (std::string)\"d\", (std::string)\"d\"}))) == (std::any({(std::vector<std::string>)std::vector<std::string>({(std::string)\"a\", (std::string)\"a\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"b\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"c\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"d\", (std::string)\"d\"})})));\n}\n",
      "timestamp": 1666123403,
      "stdout": "",
      "stderr": "/tmp/tmpb5jb6ib4.cpp: In function \u2018std::any pack_consecutive_duplicates(std::any)\u2019:\n/tmp/tmpb5jb6ib4.cpp:70:1: warning: no return statement in function returning non-void [-Wreturn-type]\n   70 | }\n      | ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpb5jb6ib4.cpp:2:\n/tmp/tmpb5jb6ib4.cpp: In function \u2018int main()\u2019:\n/tmp/tmpb5jb6ib4.cpp:73:176: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   73 |     assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n      |                                                                                                                                                                                ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpb5jb6ib4.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>,",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to pack consecutive duplicates of a given list elements into sublists.\nstd::any pack_consecutive_duplicates(std::any list1) {\n    std::any list2;\n    std::any temp;\n    std::any temp1;\n    std::any temp2;\n    std::any temp3;\n    std::any temp4;\n    std::any temp5;\n    std::any temp6;\n    std::any temp7;\n    std::any temp8;\n    std::any temp9;\n    std::any temp10;\n    std::any temp11;\n    std::any temp12;\n    std::any temp13;\n    std::any temp14;\n    std::any temp15;\n    std::any temp16;\n    std::any temp17;\n    std::any temp18;\n    std::any temp19;\n    std::any temp20;\n    std::any temp21;\n    std::any temp22;\n    std::any temp23;\n    std::any temp24;\n    std::any temp25;\n    std::any temp26;\n    std::any temp27;\n    std::any temp28;\n    std::any temp29;\n    std::any temp30;\n    std::any temp31;\n    std::any temp32;\n    std::any temp33;\n    std::any temp34;\n    std::any temp35;\n    std::any temp36;\n    std::any temp37;\n    std::any temp38;\n    std::any temp39;\n    std::any temp40;\n    std::any temp41;\n    std::any temp42;\n    std::any temp43;\n    std::any temp44;\n    std::any temp45;\n    std::any temp46;\n    std::any temp47;\n    std::any temp48;\n    std::any temp49;\n    std::any temp50;\n    std::any temp51;\n    std::any temp52;\n    std::any temp53;\n    std::any temp54;\n    std::any temp55;\n    std::any temp56;\n    std::any temp57;\n    std::any temp58;\n    std::any temp59;\n    std::any temp60;\n    std::any temp61;\n    std::any temp62;\n\n}\nint main() {\n    auto candidate = pack_consecutive_duplicates;\n    assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n    assert(candidate((std::any({(long)10, (long)10, (long)15, (long)19, (long)18, (long)18, (long)17, (long)26, (long)26, (long)17, (long)18, (long)10}))) == (std::any({(std::vector<long>)std::vector<long>({(long)10, (long)10}), (std::vector<long>)std::vector<long>({(long)15}), (std::vector<long>)std::vector<long>({(long)19}), (std::vector<long>)std::vector<long>({(long)18, (long)18}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)26, (long)26}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)18}), (std::vector<long>)std::vector<long>({(long)10})})));\n    assert(candidate((std::any({(std::string)\"a\", (std::string)\"a\", (std::string)\"b\", (std::string)\"c\", (std::string)\"d\", (std::string)\"d\"}))) == (std::any({(std::vector<std::string>)std::vector<std::string>({(std::string)\"a\", (std::string)\"a\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"b\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"c\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"d\", (std::string)\"d\"})})));\n}\n",
      "timestamp": 1665510437,
      "stdout": "",
      "stderr": "/tmp/tmp6a5kikx3.cpp: In function \u2018std::any pack_consecutive_duplicates(std::any)\u2019:\n/tmp/tmp6a5kikx3.cpp:70:1: warning: no return statement in function returning non-void [-Wreturn-type]\n   70 | }\n      | ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp6a5kikx3.cpp:2:\n/tmp/tmp6a5kikx3.cpp: In function \u2018int main()\u2019:\n/tmp/tmp6a5kikx3.cpp:73:176: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   73 |     assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n      |                                                                                                                                                                                ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmp6a5kikx3.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>,",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to pack consecutive duplicates of a given list elements into sublists.\nstd::any pack_consecutive_duplicates(std::any list1) {\n    std::any list2;\n    std::any list3;\n    std::any list4;\n    std::any list5;\n    std::any list6;\n    std::any list7;\n    std::any list8;\n    std::any list9;\n    std::any list10;\n    std::any list11;\n    std::any list12;\n    std::any list13;\n    std::any list14;\n    std::any list15;\n    std::any list16;\n    std::any list17;\n    std::any list18;\n    std::any list19;\n    std::any list20;\n    std::any list21;\n    std::any list22;\n    std::any list23;\n    std::any list24;\n    std::any list25;\n    std::any list26;\n    std::any list27;\n    std::any list28;\n    std::any list29;\n    std::any list30;\n    std::any list31;\n    std::any list32;\n    std::any list33;\n    std::any list34;\n    std::any list35;\n    std::any list36;\n    std::any list37;\n    std::any list38;\n    std::any list39;\n    std::any list40;\n    std::any list41;\n    std::any list42;\n    std::any list43;\n    std::any list44;\n    std::any list45;\n    std::any list46;\n    std::any list47;\n    std::any list48;\n    std::any list49;\n    std::any list50;\n    std::any list51;\n    std::any list52;\n    std::any list53;\n    std::any list54;\n    std::any list55;\n    std::any list56;\n    std::any list57;\n    std::any list58;\n    std::any list59;\n    std::any list60;\n    std::any list61;\n    std::any list62;\n    std::any list63;\n    std::any list64;\n    std::any list65;\n}\nint main() {\n    auto candidate = pack_consecutive_duplicates;\n    assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n    assert(candidate((std::any({(long)10, (long)10, (long)15, (long)19, (long)18, (long)18, (long)17, (long)26, (long)26, (long)17, (long)18, (long)10}))) == (std::any({(std::vector<long>)std::vector<long>({(long)10, (long)10}), (std::vector<long>)std::vector<long>({(long)15}), (std::vector<long>)std::vector<long>({(long)19}), (std::vector<long>)std::vector<long>({(long)18, (long)18}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)26, (long)26}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)18}), (std::vector<long>)std::vector<long>({(long)10})})));\n    assert(candidate((std::any({(std::string)\"a\", (std::string)\"a\", (std::string)\"b\", (std::string)\"c\", (std::string)\"d\", (std::string)\"d\"}))) == (std::any({(std::vector<std::string>)std::vector<std::string>({(std::string)\"a\", (std::string)\"a\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"b\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"c\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"d\", (std::string)\"d\"})})));\n}\n",
      "timestamp": 1665510437,
      "stdout": "",
      "stderr": "/tmp/tmpgspun4wj.cpp: In function \u2018std::any pack_consecutive_duplicates(std::any)\u2019:\n/tmp/tmpgspun4wj.cpp:69:1: warning: no return statement in function returning non-void [-Wreturn-type]\n   69 | }\n      | ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpgspun4wj.cpp:2:\n/tmp/tmpgspun4wj.cpp: In function \u2018int main()\u2019:\n/tmp/tmpgspun4wj.cpp:72:176: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   72 |     assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n      |                                                                                                                                                                                ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpgspun4wj.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>,",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to pack consecutive duplicates of a given list elements into sublists.\nstd::any pack_consecutive_duplicates(std::any list1) {\n  std::any list2;\n  std::any temp;\n  std::any temp2;\n  std::any temp3;\n  std::any temp4;\n  std::any temp5;\n  std::any temp6;\n  std::any temp7;\n  std::any temp8;\n  std::any temp9;\n  std::any temp10;\n  std::any temp11;\n  std::any temp12;\n  std::any temp13;\n  std::any temp14;\n  std::any temp15;\n  std::any temp16;\n  std::any temp17;\n  std::any temp18;\n  std::any temp19;\n  std::any temp20;\n  std::any temp21;\n  std::any temp22;\n  std::any temp23;\n  std::any temp24;\n  std::any temp25;\n  std::any temp26;\n  std::any temp27;\n  std::any temp28;\n  std::any temp29;\n  std::any temp30;\n  std::any temp31;\n  std::any temp32;\n  std::any temp33;\n  std::any temp34;\n  std::any temp35;\n  std::any temp36;\n  std::any temp37;\n  std::any temp38;\n  std::any temp39;\n  std::any temp40;\n  std::any temp41;\n  std::any temp42;\n  std::any temp43;\n  std::any temp44;\n  std::any temp45;\n  std::any temp46;\n  std::any temp47;\n  std::any temp48;\n  std::any temp49;\n  std::any temp50;\n  std::any temp51;\n  std::any temp52;\n  std::any temp53;\n  std::any temp54;\n  std::any temp55;\n  std::any temp56;\n  std::any temp57;\n  std::any temp58;\n  std::any temp59;\n  std::any temp60;\n  std::any temp61;\n  std::any temp62;\n  std::any temp63;\n\n}\nint main() {\n    auto candidate = pack_consecutive_duplicates;\n    assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n    assert(candidate((std::any({(long)10, (long)10, (long)15, (long)19, (long)18, (long)18, (long)17, (long)26, (long)26, (long)17, (long)18, (long)10}))) == (std::any({(std::vector<long>)std::vector<long>({(long)10, (long)10}), (std::vector<long>)std::vector<long>({(long)15}), (std::vector<long>)std::vector<long>({(long)19}), (std::vector<long>)std::vector<long>({(long)18, (long)18}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)26, (long)26}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)18}), (std::vector<long>)std::vector<long>({(long)10})})));\n    assert(candidate((std::any({(std::string)\"a\", (std::string)\"a\", (std::string)\"b\", (std::string)\"c\", (std::string)\"d\", (std::string)\"d\"}))) == (std::any({(std::vector<std::string>)std::vector<std::string>({(std::string)\"a\", (std::string)\"a\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"b\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"c\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"d\", (std::string)\"d\"})})));\n}\n",
      "timestamp": 1665510437,
      "stdout": "",
      "stderr": "/tmp/tmpcbajqnq3.cpp: In function \u2018std::any pack_consecutive_duplicates(std::any)\u2019:\n/tmp/tmpcbajqnq3.cpp:70:1: warning: no return statement in function returning non-void [-Wreturn-type]\n   70 | }\n      | ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpcbajqnq3.cpp:2:\n/tmp/tmpcbajqnq3.cpp: In function \u2018int main()\u2019:\n/tmp/tmpcbajqnq3.cpp:73:176: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   73 |     assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n      |                                                                                                                                                                                ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpcbajqnq3.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>,",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to pack consecutive duplicates of a given list elements into sublists.\nstd::any pack_consecutive_duplicates(std::any list1) {\n    std::any list2;\n    std::any temp;\n    for (int i = 0; i < list1.size(); i++) {\n        if (temp.empty() || temp.back() != list1[i]) {\n            temp.push_back(list1[i]);\n            list2.push_back(temp);\n            temp.clear();\n        }\n        temp.push_back(list1[i]);\n    }\n    return list2;\n}\nint main() {\n    auto candidate = pack_consecutive_duplicates;\n    assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n    assert(candidate((std::any({(long)10, (long)10, (long)15, (long)19, (long)18, (long)18, (long)17, (long)26, (long)26, (long)17, (long)18, (long)10}))) == (std::any({(std::vector<long>)std::vector<long>({(long)10, (long)10}), (std::vector<long>)std::vector<long>({(long)15}), (std::vector<long>)std::vector<long>({(long)19}), (std::vector<long>)std::vector<long>({(long)18, (long)18}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)26, (long)26}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)18}), (std::vector<long>)std::vector<long>({(long)10})})));\n    assert(candidate((std::any({(std::string)\"a\", (std::string)\"a\", (std::string)\"b\", (std::string)\"c\", (std::string)\"d\", (std::string)\"d\"}))) == (std::any({(std::vector<std::string>)std::vector<std::string>({(std::string)\"a\", (std::string)\"a\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"b\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"c\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"d\", (std::string)\"d\"})})));\n}\n",
      "timestamp": 1666123403,
      "stdout": "",
      "stderr": "/tmp/tmpbu8wac7a.cpp: In function \u2018std::any pack_consecutive_duplicates(std::any)\u2019:\n/tmp/tmpbu8wac7a.cpp:7:31: error: \u2018class std::any\u2019 has no member named \u2018size\u2019\n    7 |     for (int i = 0; i < list1.size(); i++) {\n      |                               ^~~~\n/tmp/tmpbu8wac7a.cpp:8:18: error: \u2018class std::any\u2019 has no member named \u2018empty\u2019\n    8 |         if (temp.empty() || temp.back() != list1[i]) {\n      |                  ^~~~~\n/tmp/tmpbu8wac7a.cpp:8:34: error: \u2018class std::any\u2019 has no member named \u2018back\u2019\n    8 |         if (temp.empty() || temp.back() != list1[i]) {\n      |                                  ^~~~\n/tmp/tmpbu8wac7a.cpp:8:49: error: no match for \u2018operator[]\u2019 (operand types are \u2018std::any\u2019 and \u2018int\u2019)\n    8 |         if (temp.empty() || temp.back() != list1[i]) {\n      |                                                 ^\n/tmp/tmpbu8wac7a.cpp:9:18: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n    9 |             temp.push_back(list1[i]);\n      |                  ^~~~~~~~~\n/tmp/tmpbu8wac7a.cpp:9:33: error: no match for \u2018operator[]\u2019 (operand types are \u2018std::any\u2019 and \u2018int\u2019)\n    9 |             temp.push_back(list1[i]);\n      |                                 ^\n/tmp/tmpbu8wac7a.cpp:10:19: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   10 |             list2.push_back(temp);\n      |                   ^~~~~~~~~\n/tmp/tmpbu8wac7a.cpp:11:18: error: \u2018class std::any\u2019 has no member named \u2018clear\u2019\n   11 |             temp.clear();\n      |                  ^~~~~\n/tmp/tmpbu8wac7a.cpp:13:14: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   13 |         temp.push_back(list1[i]);\n      |              ^~~~~~~~~\n/tmp/tmpbu8wac7a.cpp:13:29: error: no match for \u2018operator[]\u2019 (operand types are \u2018std::any\u2019 and \u2018int\u2019)\n   13 |         temp.push_back(list1[i]);\n      |                             ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /sha",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to pack consecutive duplicates of a given list elements into sublists.\nstd::any pack_consecutive_duplicates(std::any list1) {\n    std::any result;\n    std::any temp;\n    std::any::iterator it = list1.begin();\n    while(it != list1.end()) {\n        temp.push_back(*it);\n        it++;\n        if(it == list1.end() || *it != temp.back()) {\n            result.push_back(temp);\n            temp.clear();\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = pack_consecutive_duplicates;\n    assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n    assert(candidate((std::any({(long)10, (long)10, (long)15, (long)19, (long)18, (long)18, (long)17, (long)26, (long)26, (long)17, (long)18, (long)10}))) == (std::any({(std::vector<long>)std::vector<long>({(long)10, (long)10}), (std::vector<long>)std::vector<long>({(long)15}), (std::vector<long>)std::vector<long>({(long)19}), (std::vector<long>)std::vector<long>({(long)18, (long)18}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)26, (long)26}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)18}), (std::vector<long>)std::vector<long>({(long)10})})));\n    assert(candidate((std::any({(std::string)\"a\", (std::string)\"a\", (std::string)\"b\", (std::string)\"c\", (std::string)\"d\", (std::string)\"d\"}))) == (std::any({(std::vector<std::string>)std::vector<std::string>({(std::string)\"a\", (std::string)\"a\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"b\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"c\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"d\", (std::string)\"d\"})})));\n}\n",
      "timestamp": 1666123403,
      "stdout": "",
      "stderr": "/tmp/tmp8lge2vxo.cpp: In function \u2018std::any pack_consecutive_duplicates(std::any)\u2019:\n/tmp/tmp8lge2vxo.cpp:7:15: error: \u2018iterator\u2019 is not a member of \u2018std::any\u2019\n    7 |     std::any::iterator it = list1.begin();\n      |               ^~~~~~~~\n/tmp/tmp8lge2vxo.cpp:8:11: error: \u2018it\u2019 was not declared in this scope; did you mean \u2018int\u2019?\n    8 |     while(it != list1.end()) {\n      |           ^~\n      |           int\n/tmp/tmp8lge2vxo.cpp:8:23: error: \u2018class std::any\u2019 has no member named \u2018end\u2019\n    8 |     while(it != list1.end()) {\n      |                       ^~~\n/tmp/tmp8lge2vxo.cpp:9:14: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n    9 |         temp.push_back(*it);\n      |              ^~~~~~~~~\n/tmp/tmp8lge2vxo.cpp:11:24: error: \u2018class std::any\u2019 has no member named \u2018end\u2019\n   11 |         if(it == list1.end() || *it != temp.back()) {\n      |                        ^~~\n/tmp/tmp8lge2vxo.cpp:11:45: error: \u2018class std::any\u2019 has no member named \u2018back\u2019\n   11 |         if(it == list1.end() || *it != temp.back()) {\n      |                                             ^~~~\n/tmp/tmp8lge2vxo.cpp:12:20: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   12 |             result.push_back(temp);\n      |                    ^~~~~~~~~\n/tmp/tmp8lge2vxo.cpp:13:18: error: \u2018class std::any\u2019 has no member named \u2018clear\u2019\n   13 |             temp.clear();\n      |                  ^~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp8lge2vxo.cpp:2:\n/tmp/tmp8lge2vxo.cpp: In function \u2018int main()\u2019:\n/tmp/tmp8lge2vxo.cpp:20:176: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   20 |     assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to pack consecutive duplicates of a given list elements into sublists.\nstd::any pack_consecutive_duplicates(std::any list1) {\n    std::any list2;\n    std::any temp;\n    std::any temp2;\n    std::any temp3;\n    std::any temp4;\n    std::any temp5;\n    std::any temp6;\n    std::any temp7;\n    std::any temp8;\n    std::any temp9;\n    std::any temp10;\n    std::any temp11;\n    std::any temp12;\n    std::any temp13;\n    std::any temp14;\n    std::any temp15;\n    std::any temp16;\n    std::any temp17;\n    std::any temp18;\n    std::any temp19;\n    std::any temp20;\n    std::any temp21;\n    std::any temp22;\n    std::any temp23;\n    std::any temp24;\n    std::any temp25;\n    std::any temp26;\n    std::any temp27;\n    std::any temp28;\n    std::any temp29;\n    std::any temp30;\n    std::any temp31;\n    std::any temp32;\n    std::any temp33;\n    std::any temp34;\n    std::any temp35;\n    std::any temp36;\n    std::any temp37;\n    std::any temp38;\n    std::any temp39;\n    std::any temp40;\n    std::any temp41;\n    std::any temp42;\n    std::any temp43;\n    std::any temp44;\n    std::any temp45;\n    std::any temp46;\n    std::any temp47;\n    std::any temp48;\n    std::any temp49;\n    std::any temp50;\n    std::any temp51;\n    std::any temp52;\n    std::any temp53;\n    std::any temp54;\n    std::any temp55;\n    std::any temp56;\n    std::any temp57;\n    std::any temp58;\n    std::any temp59;\n    std::any temp60;\n    std::any temp61;\n    std::any temp62;\n    std::any temp63;\n\n}\nint main() {\n    auto candidate = pack_consecutive_duplicates;\n    assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n    assert(candidate((std::any({(long)10, (long)10, (long)15, (long)19, (long)18, (long)18, (long)17, (long)26, (long)26, (long)17, (long)18, (long)10}))) == (std::any({(std::vector<long>)std::vector<long>({(long)10, (long)10}), (std::vector<long>)std::vector<long>({(long)15}), (std::vector<long>)std::vector<long>({(long)19}), (std::vector<long>)std::vector<long>({(long)18, (long)18}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)26, (long)26}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)18}), (std::vector<long>)std::vector<long>({(long)10})})));\n    assert(candidate((std::any({(std::string)\"a\", (std::string)\"a\", (std::string)\"b\", (std::string)\"c\", (std::string)\"d\", (std::string)\"d\"}))) == (std::any({(std::vector<std::string>)std::vector<std::string>({(std::string)\"a\", (std::string)\"a\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"b\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"c\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"d\", (std::string)\"d\"})})));\n}\n",
      "timestamp": 1665510437,
      "stdout": "",
      "stderr": "/tmp/tmp996xkpjp.cpp: In function \u2018std::any pack_consecutive_duplicates(std::any)\u2019:\n/tmp/tmp996xkpjp.cpp:70:1: warning: no return statement in function returning non-void [-Wreturn-type]\n   70 | }\n      | ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp996xkpjp.cpp:2:\n/tmp/tmp996xkpjp.cpp: In function \u2018int main()\u2019:\n/tmp/tmp996xkpjp.cpp:73:176: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   73 |     assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n      |                                                                                                                                                                                ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmp996xkpjp.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>,",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to pack consecutive duplicates of a given list elements into sublists.\nstd::any pack_consecutive_duplicates(std::any list1) {\n    std::any list2;\n    std::any list3;\n    std::any list4;\n    std::any list5;\n    std::any list6;\n    std::any list7;\n    std::any list8;\n    std::any list9;\n    std::any list10;\n    std::any list11;\n    std::any list12;\n    std::any list13;\n    std::any list14;\n    std::any list15;\n    std::any list16;\n    std::any list17;\n    std::any list18;\n    std::any list19;\n    std::any list20;\n    std::any list21;\n    std::any list22;\n    std::any list23;\n    std::any list24;\n    std::any list25;\n    std::any list26;\n    std::any list27;\n    std::any list28;\n    std::any list29;\n    std::any list30;\n    std::any list31;\n    std::any list32;\n    std::any list33;\n    std::any list34;\n    std::any list35;\n    std::any list36;\n    std::any list37;\n    std::any list38;\n    std::any list39;\n    std::any list40;\n    std::any list41;\n    std::any list42;\n    std::any list43;\n    std::any list44;\n    std::any list45;\n    std::any list46;\n    std::any list47;\n    std::any list48;\n    std::any list49;\n    std::any list50;\n    std::any list51;\n    std::any list52;\n    std::any list53;\n    std::any list54;\n    std::any list55;\n    std::any list56;\n    std::any list57;\n    std::any list58;\n    std::any list59;\n    std::any list60;\n    std::any list61;\n    std::any list62;\n    std::any list63;\n    std::any list64;\n    std::any list65;\n}\nint main() {\n    auto candidate = pack_consecutive_duplicates;\n    assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n    assert(candidate((std::any({(long)10, (long)10, (long)15, (long)19, (long)18, (long)18, (long)17, (long)26, (long)26, (long)17, (long)18, (long)10}))) == (std::any({(std::vector<long>)std::vector<long>({(long)10, (long)10}), (std::vector<long>)std::vector<long>({(long)15}), (std::vector<long>)std::vector<long>({(long)19}), (std::vector<long>)std::vector<long>({(long)18, (long)18}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)26, (long)26}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)18}), (std::vector<long>)std::vector<long>({(long)10})})));\n    assert(candidate((std::any({(std::string)\"a\", (std::string)\"a\", (std::string)\"b\", (std::string)\"c\", (std::string)\"d\", (std::string)\"d\"}))) == (std::any({(std::vector<std::string>)std::vector<std::string>({(std::string)\"a\", (std::string)\"a\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"b\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"c\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"d\", (std::string)\"d\"})})));\n}\n",
      "timestamp": 1665510437,
      "stdout": "",
      "stderr": "/tmp/tmpgspun4wj.cpp: In function \u2018std::any pack_consecutive_duplicates(std::any)\u2019:\n/tmp/tmpgspun4wj.cpp:69:1: warning: no return statement in function returning non-void [-Wreturn-type]\n   69 | }\n      | ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpgspun4wj.cpp:2:\n/tmp/tmpgspun4wj.cpp: In function \u2018int main()\u2019:\n/tmp/tmpgspun4wj.cpp:72:176: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   72 |     assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n      |                                                                                                                                                                                ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpgspun4wj.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>,",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to pack consecutive duplicates of a given list elements into sublists.\nstd::any pack_consecutive_duplicates(std::any list1) {\n    std::any result;\n    std::any temp;\n    std::any temp1;\n    std::any temp2;\n    std::any temp3;\n    std::any temp4;\n    std::any temp5;\n    std::any temp6;\n    std::any temp7;\n    std::any temp8;\n    std::any temp9;\n    std::any temp10;\n    std::any temp11;\n    std::any temp12;\n    std::any temp13;\n    std::any temp14;\n    std::any temp15;\n    std::any temp16;\n    std::any temp17;\n    std::any temp18;\n    std::any temp19;\n    std::any temp20;\n    std::any temp21;\n    std::any temp22;\n    std::any temp23;\n    std::any temp24;\n    std::any temp25;\n    std::any temp26;\n    std::any temp27;\n    std::any temp28;\n    std::any temp29;\n    std::any temp30;\n    std::any temp31;\n    std::any temp32;\n    std::any temp33;\n    std::any temp34;\n    std::any temp35;\n    std::any temp36;\n    std::any temp37;\n    std::any temp38;\n    std::any temp39;\n    std::any temp40;\n    std::any temp41;\n    std::any temp42;\n    std::any temp43;\n    std::any temp44;\n    std::any temp45;\n    std::any temp46;\n    std::any temp47;\n    std::any temp48;\n    std::any temp49;\n    std::any temp50;\n    std::any temp51;\n    std::any temp52;\n    std::any temp53;\n    std::any temp54;\n    std::any temp55;\n    std::any temp56;\n    std::any temp57;\n    std::any temp58;\n    std::any temp59;\n    std::any temp60;\n    std::any temp61;\n    std::any temp62;\n   \n}\nint main() {\n    auto candidate = pack_consecutive_duplicates;\n    assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n    assert(candidate((std::any({(long)10, (long)10, (long)15, (long)19, (long)18, (long)18, (long)17, (long)26, (long)26, (long)17, (long)18, (long)10}))) == (std::any({(std::vector<long>)std::vector<long>({(long)10, (long)10}), (std::vector<long>)std::vector<long>({(long)15}), (std::vector<long>)std::vector<long>({(long)19}), (std::vector<long>)std::vector<long>({(long)18, (long)18}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)26, (long)26}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)18}), (std::vector<long>)std::vector<long>({(long)10})})));\n    assert(candidate((std::any({(std::string)\"a\", (std::string)\"a\", (std::string)\"b\", (std::string)\"c\", (std::string)\"d\", (std::string)\"d\"}))) == (std::any({(std::vector<std::string>)std::vector<std::string>({(std::string)\"a\", (std::string)\"a\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"b\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"c\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"d\", (std::string)\"d\"})})));\n}\n",
      "timestamp": 1666123403,
      "stdout": "",
      "stderr": "/tmp/tmp9s28tm_d.cpp: In function \u2018std::any pack_consecutive_duplicates(std::any)\u2019:\n/tmp/tmp9s28tm_d.cpp:70:1: warning: no return statement in function returning non-void [-Wreturn-type]\n   70 | }\n      | ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp9s28tm_d.cpp:2:\n/tmp/tmp9s28tm_d.cpp: In function \u2018int main()\u2019:\n/tmp/tmp9s28tm_d.cpp:73:176: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   73 |     assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n      |                                                                                                                                                                                ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmp9s28tm_d.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>,",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to pack consecutive duplicates of a given list elements into sublists.\nstd::any pack_consecutive_duplicates(std::any list1) {\n    std::any list2;\n    std::any temp;\n    std::any::iterator itr1 = list1.begin();\n    std::any::iterator itr2 = list2.begin();\n    std::any::iterator itr3 = temp.begin();\n    std::any::iterator itr4 = temp.begin();\n    while (itr1 != list1.end()) {\n        if (itr1 == list1.begin()) {\n            temp.push_back(*itr1);\n            itr1++;\n        }\n        else {\n            if (*itr1 == *itr3) {\n                temp.push_back(*itr1);\n                itr1++;\n            }\n            else {\n                list2.push_back(temp);\n                temp.clear();\n                temp.push_back(*itr1);\n                itr1++;\n            }\n        }\n    }\n    list2.push_back(temp);\n    return list2;\n}\nint main() {\n    auto candidate = pack_consecutive_duplicates;\n    assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n    assert(candidate((std::any({(long)10, (long)10, (long)15, (long)19, (long)18, (long)18, (long)17, (long)26, (long)26, (long)17, (long)18, (long)10}))) == (std::any({(std::vector<long>)std::vector<long>({(long)10, (long)10}), (std::vector<long>)std::vector<long>({(long)15}), (std::vector<long>)std::vector<long>({(long)19}), (std::vector<long>)std::vector<long>({(long)18, (long)18}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)26, (long)26}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)18}), (std::vector<long>)std::vector<long>({(long)10})})));\n    assert(candidate((std::any({(std::string)\"a\", (std::string)\"a\", (std::string)\"b\", (std::string)\"c\", (std::string)\"d\", (std::string)\"d\"}))) == (std::any({(std::vector<std::string>)std::vector<std::string>({(std::string)\"a\", (std::string)\"a\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"b\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"c\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"d\", (std::string)\"d\"})})));\n}\n",
      "timestamp": 1666123403,
      "stdout": "",
      "stderr": "/tmp/tmpebn_ydm8.cpp: In function \u2018std::any pack_consecutive_duplicates(std::any)\u2019:\n/tmp/tmpebn_ydm8.cpp:7:15: error: \u2018iterator\u2019 is not a member of \u2018std::any\u2019\n    7 |     std::any::iterator itr1 = list1.begin();\n      |               ^~~~~~~~\n/tmp/tmpebn_ydm8.cpp:8:15: error: \u2018iterator\u2019 is not a member of \u2018std::any\u2019\n    8 |     std::any::iterator itr2 = list2.begin();\n      |               ^~~~~~~~\n/tmp/tmpebn_ydm8.cpp:9:15: error: \u2018iterator\u2019 is not a member of \u2018std::any\u2019\n    9 |     std::any::iterator itr3 = temp.begin();\n      |               ^~~~~~~~\n/tmp/tmpebn_ydm8.cpp:10:15: error: \u2018iterator\u2019 is not a member of \u2018std::any\u2019\n   10 |     std::any::iterator itr4 = temp.begin();\n      |               ^~~~~~~~\n/tmp/tmpebn_ydm8.cpp:11:12: error: \u2018itr1\u2019 was not declared in this scope\n   11 |     while (itr1 != list1.end()) {\n      |            ^~~~\n/tmp/tmpebn_ydm8.cpp:11:26: error: \u2018class std::any\u2019 has no member named \u2018end\u2019\n   11 |     while (itr1 != list1.end()) {\n      |                          ^~~\n/tmp/tmpebn_ydm8.cpp:12:27: error: \u2018class std::any\u2019 has no member named \u2018begin\u2019\n   12 |         if (itr1 == list1.begin()) {\n      |                           ^~~~~\n/tmp/tmpebn_ydm8.cpp:13:18: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   13 |             temp.push_back(*itr1);\n      |                  ^~~~~~~~~\n/tmp/tmpebn_ydm8.cpp:17:27: error: \u2018itr3\u2019 was not declared in this scope\n   17 |             if (*itr1 == *itr3) {\n      |                           ^~~~\n/tmp/tmpebn_ydm8.cpp:18:22: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   18 |                 temp.push_back(*itr1);\n      |                      ^~~~~~~~~\n/tmp/tmpebn_ydm8.cpp:22:23: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   22 |                 list2.push_back(temp);\n      |                       ^~~~~~~~~\n/tmp/tmpebn_ydm8.cpp:23:22: error: \u2018class std::any\u2019 has no member named \u2018clear\u2019\n   23 |                 temp.clear();\n ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to pack consecutive duplicates of a given list elements into sublists.\nstd::any pack_consecutive_duplicates(std::any list1) {\n    std::any list2;\n    std::any temp;\n    std::any temp2;\n    std::any temp3;\n    std::any temp4;\n    std::any temp5;\n    std::any temp6;\n    std::any temp7;\n    std::any temp8;\n    std::any temp9;\n    std::any temp10;\n    std::any temp11;\n    std::any temp12;\n    std::any temp13;\n    std::any temp14;\n    std::any temp15;\n    std::any temp16;\n    std::any temp17;\n    std::any temp18;\n    std::any temp19;\n    std::any temp20;\n    std::any temp21;\n    std::any temp22;\n    std::any temp23;\n    std::any temp24;\n    std::any temp25;\n    std::any temp26;\n    std::any temp27;\n    std::any temp28;\n    std::any temp29;\n    std::any temp30;\n    std::any temp31;\n    std::any temp32;\n    std::any temp33;\n    std::any temp34;\n    std::any temp35;\n    std::any temp36;\n    std::any temp37;\n    std::any temp38;\n    std::any temp39;\n    std::any temp40;\n    std::any temp41;\n    std::any temp42;\n    std::any temp43;\n    std::any temp44;\n    std::any temp45;\n    std::any temp46;\n    std::any temp47;\n    std::any temp48;\n    std::any temp49;\n    std::any temp50;\n    std::any temp51;\n    std::any temp52;\n    std::any temp53;\n    std::any temp54;\n    std::any temp55;\n    std::any temp56;\n    std::any temp57;\n    std::any temp58;\n    std::any temp59;\n    std::any temp60;\n    std::any temp61;\n    std::any temp62;\n    std::any temp63;\n\n}\nint main() {\n    auto candidate = pack_consecutive_duplicates;\n    assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n    assert(candidate((std::any({(long)10, (long)10, (long)15, (long)19, (long)18, (long)18, (long)17, (long)26, (long)26, (long)17, (long)18, (long)10}))) == (std::any({(std::vector<long>)std::vector<long>({(long)10, (long)10}), (std::vector<long>)std::vector<long>({(long)15}), (std::vector<long>)std::vector<long>({(long)19}), (std::vector<long>)std::vector<long>({(long)18, (long)18}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)26, (long)26}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)18}), (std::vector<long>)std::vector<long>({(long)10})})));\n    assert(candidate((std::any({(std::string)\"a\", (std::string)\"a\", (std::string)\"b\", (std::string)\"c\", (std::string)\"d\", (std::string)\"d\"}))) == (std::any({(std::vector<std::string>)std::vector<std::string>({(std::string)\"a\", (std::string)\"a\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"b\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"c\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"d\", (std::string)\"d\"})})));\n}\n",
      "timestamp": 1665510437,
      "stdout": "",
      "stderr": "/tmp/tmp996xkpjp.cpp: In function \u2018std::any pack_consecutive_duplicates(std::any)\u2019:\n/tmp/tmp996xkpjp.cpp:70:1: warning: no return statement in function returning non-void [-Wreturn-type]\n   70 | }\n      | ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp996xkpjp.cpp:2:\n/tmp/tmp996xkpjp.cpp: In function \u2018int main()\u2019:\n/tmp/tmp996xkpjp.cpp:73:176: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   73 |     assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n      |                                                                                                                                                                                ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmp996xkpjp.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>,",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to pack consecutive duplicates of a given list elements into sublists.\nstd::any pack_consecutive_duplicates(std::any list1) {\n    std::any list2;\n    std::any sublist;\n    std::any temp;\n    int i = 0;\n    while (i < list1.size()) {\n        temp = list1[i];\n        sublist.push_back(temp);\n        while (i < list1.size() && list1[i] == temp) {\n            i++;\n        }\n        list2.push_back(sublist);\n        sublist.clear();\n    }\n    return list2;\n}\nint main() {\n    auto candidate = pack_consecutive_duplicates;\n    assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n    assert(candidate((std::any({(long)10, (long)10, (long)15, (long)19, (long)18, (long)18, (long)17, (long)26, (long)26, (long)17, (long)18, (long)10}))) == (std::any({(std::vector<long>)std::vector<long>({(long)10, (long)10}), (std::vector<long>)std::vector<long>({(long)15}), (std::vector<long>)std::vector<long>({(long)19}), (std::vector<long>)std::vector<long>({(long)18, (long)18}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)26, (long)26}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)18}), (std::vector<long>)std::vector<long>({(long)10})})));\n    assert(candidate((std::any({(std::string)\"a\", (std::string)\"a\", (std::string)\"b\", (std::string)\"c\", (std::string)\"d\", (std::string)\"d\"}))) == (std::any({(std::vector<std::string>)std::vector<std::string>({(std::string)\"a\", (std::string)\"a\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"b\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"c\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"d\", (std::string)\"d\"})})));\n}\n",
      "timestamp": 1666123404,
      "stdout": "",
      "stderr": "/tmp/tmpl1eg817v.cpp: In function \u2018std::any pack_consecutive_duplicates(std::any)\u2019:\n/tmp/tmpl1eg817v.cpp:9:22: error: \u2018class std::any\u2019 has no member named \u2018size\u2019\n    9 |     while (i < list1.size()) {\n      |                      ^~~~\n/tmp/tmpl1eg817v.cpp:10:21: error: no match for \u2018operator[]\u2019 (operand types are \u2018std::any\u2019 and \u2018int\u2019)\n   10 |         temp = list1[i];\n      |                     ^\n/tmp/tmpl1eg817v.cpp:11:17: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   11 |         sublist.push_back(temp);\n      |                 ^~~~~~~~~\n/tmp/tmpl1eg817v.cpp:12:26: error: \u2018class std::any\u2019 has no member named \u2018size\u2019\n   12 |         while (i < list1.size() && list1[i] == temp) {\n      |                          ^~~~\n/tmp/tmpl1eg817v.cpp:12:41: error: no match for \u2018operator[]\u2019 (operand types are \u2018std::any\u2019 and \u2018int\u2019)\n   12 |         while (i < list1.size() && list1[i] == temp) {\n      |                                         ^\n/tmp/tmpl1eg817v.cpp:15:15: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   15 |         list2.push_back(sublist);\n      |               ^~~~~~~~~\n/tmp/tmpl1eg817v.cpp:16:17: error: \u2018class std::any\u2019 has no member named \u2018clear\u2019\n   16 |         sublist.clear();\n      |                 ^~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpl1eg817v.cpp:2:\n/tmp/tmpl1eg817v.cpp: In function \u2018int main()\u2019:\n/tmp/tmpl1eg817v.cpp:22:176: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   22 |     assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to pack consecutive duplicates of a given list elements into sublists.\nstd::any pack_consecutive_duplicates(std::any list1) {\n    std::any list2;\n    std::any temp;\n    std::any::iterator it;\n    std::any::iterator it2;\n    for(it = list1.begin(); it != list1.end(); it++) {\n        if(temp.empty()) {\n            temp.push_back(*it);\n        } else {\n            if(*it == temp.back()) {\n                temp.push_back(*it);\n            } else {\n                list2.push_back(temp);\n                temp.clear();\n                temp.push_back(*it);\n            }\n        }\n    }\n    list2.push_back(temp);\n    return list2;\n}\nint main() {\n    auto candidate = pack_consecutive_duplicates;\n    assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n    assert(candidate((std::any({(long)10, (long)10, (long)15, (long)19, (long)18, (long)18, (long)17, (long)26, (long)26, (long)17, (long)18, (long)10}))) == (std::any({(std::vector<long>)std::vector<long>({(long)10, (long)10}), (std::vector<long>)std::vector<long>({(long)15}), (std::vector<long>)std::vector<long>({(long)19}), (std::vector<long>)std::vector<long>({(long)18, (long)18}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)26, (long)26}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)18}), (std::vector<long>)std::vector<long>({(long)10})})));\n    assert(candidate((std::any({(std::string)\"a\", (std::string)\"a\", (std::string)\"b\", (std::string)\"c\", (std::string)\"d\", (std::string)\"d\"}))) == (std::any({(std::vector<std::string>)std::vector<std::string>({(std::string)\"a\", (std::string)\"a\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"b\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"c\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"d\", (std::string)\"d\"})})));\n}\n",
      "timestamp": 1666123404,
      "stdout": "",
      "stderr": "/tmp/tmp2rkep5lc.cpp: In function \u2018std::any pack_consecutive_duplicates(std::any)\u2019:\n/tmp/tmp2rkep5lc.cpp:7:15: error: \u2018iterator\u2019 is not a member of \u2018std::any\u2019\n    7 |     std::any::iterator it;\n      |               ^~~~~~~~\n/tmp/tmp2rkep5lc.cpp:8:15: error: \u2018iterator\u2019 is not a member of \u2018std::any\u2019\n    8 |     std::any::iterator it2;\n      |               ^~~~~~~~\n/tmp/tmp2rkep5lc.cpp:9:9: error: \u2018it\u2019 was not declared in this scope; did you mean \u2018int\u2019?\n    9 |     for(it = list1.begin(); it != list1.end(); it++) {\n      |         ^~\n      |         int\n/tmp/tmp2rkep5lc.cpp:9:20: error: \u2018class std::any\u2019 has no member named \u2018begin\u2019\n    9 |     for(it = list1.begin(); it != list1.end(); it++) {\n      |                    ^~~~~\n/tmp/tmp2rkep5lc.cpp:9:41: error: \u2018class std::any\u2019 has no member named \u2018end\u2019\n    9 |     for(it = list1.begin(); it != list1.end(); it++) {\n      |                                         ^~~\n/tmp/tmp2rkep5lc.cpp:10:17: error: \u2018class std::any\u2019 has no member named \u2018empty\u2019\n   10 |         if(temp.empty()) {\n      |                 ^~~~~\n/tmp/tmp2rkep5lc.cpp:11:18: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   11 |             temp.push_back(*it);\n      |                  ^~~~~~~~~\n/tmp/tmp2rkep5lc.cpp:13:28: error: \u2018class std::any\u2019 has no member named \u2018back\u2019\n   13 |             if(*it == temp.back()) {\n      |                            ^~~~\n/tmp/tmp2rkep5lc.cpp:14:22: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   14 |                 temp.push_back(*it);\n      |                      ^~~~~~~~~\n/tmp/tmp2rkep5lc.cpp:16:23: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   16 |                 list2.push_back(temp);\n      |                       ^~~~~~~~~\n/tmp/tmp2rkep5lc.cpp:17:22: error: \u2018class std::any\u2019 has no member named \u2018clear\u2019\n   17 |                 temp.clear();\n      |                      ^~~~~\n/tmp/tmp2rkep5lc.cpp:18:22: error: \u2018class std::any\u2019 has no member",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to pack consecutive duplicates of a given list elements into sublists.\nstd::any pack_consecutive_duplicates(std::any list1) {\n    std::any list2;\n    std::any temp;\n    std::any::iterator it = list1.begin();\n    while(it != list1.end()) {\n        temp.push_back(*it);\n        if(*it != *(it+1)) {\n            list2.push_back(temp);\n            temp.clear();\n        }\n        it++;\n    }\n    return list2;\n}\nint main() {\n    auto candidate = pack_consecutive_duplicates;\n    assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n    assert(candidate((std::any({(long)10, (long)10, (long)15, (long)19, (long)18, (long)18, (long)17, (long)26, (long)26, (long)17, (long)18, (long)10}))) == (std::any({(std::vector<long>)std::vector<long>({(long)10, (long)10}), (std::vector<long>)std::vector<long>({(long)15}), (std::vector<long>)std::vector<long>({(long)19}), (std::vector<long>)std::vector<long>({(long)18, (long)18}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)26, (long)26}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)18}), (std::vector<long>)std::vector<long>({(long)10})})));\n    assert(candidate((std::any({(std::string)\"a\", (std::string)\"a\", (std::string)\"b\", (std::string)\"c\", (std::string)\"d\", (std::string)\"d\"}))) == (std::any({(std::vector<std::string>)std::vector<std::string>({(std::string)\"a\", (std::string)\"a\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"b\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"c\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"d\", (std::string)\"d\"})})));\n}\n",
      "timestamp": 1666123404,
      "stdout": "",
      "stderr": "/tmp/tmpbgaoi5gl.cpp: In function \u2018std::any pack_consecutive_duplicates(std::any)\u2019:\n/tmp/tmpbgaoi5gl.cpp:7:15: error: \u2018iterator\u2019 is not a member of \u2018std::any\u2019\n    7 |     std::any::iterator it = list1.begin();\n      |               ^~~~~~~~\n/tmp/tmpbgaoi5gl.cpp:8:11: error: \u2018it\u2019 was not declared in this scope; did you mean \u2018int\u2019?\n    8 |     while(it != list1.end()) {\n      |           ^~\n      |           int\n/tmp/tmpbgaoi5gl.cpp:8:23: error: \u2018class std::any\u2019 has no member named \u2018end\u2019\n    8 |     while(it != list1.end()) {\n      |                       ^~~\n/tmp/tmpbgaoi5gl.cpp:9:14: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n    9 |         temp.push_back(*it);\n      |              ^~~~~~~~~\n/tmp/tmpbgaoi5gl.cpp:11:19: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   11 |             list2.push_back(temp);\n      |                   ^~~~~~~~~\n/tmp/tmpbgaoi5gl.cpp:12:18: error: \u2018class std::any\u2019 has no member named \u2018clear\u2019\n   12 |             temp.clear();\n      |                  ^~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpbgaoi5gl.cpp:2:\n/tmp/tmpbgaoi5gl.cpp: In function \u2018int main()\u2019:\n/tmp/tmpbgaoi5gl.cpp:20:176: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   20 |     assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to pack consecutive duplicates of a given list elements into sublists.\nstd::any pack_consecutive_duplicates(std::any list1) {\n  std::any list2;\n  std::any list3;\n  std::any list4;\n  std::any list5;\n  std::any list6;\n  std::any list7;\n  std::any list8;\n  std::any list9;\n  std::any list10;\n  std::any list11;\n  std::any list12;\n  std::any list13;\n  std::any list14;\n  std::any list15;\n  std::any list16;\n  std::any list17;\n  std::any list18;\n  std::any list19;\n  std::any list20;\n  std::any list21;\n  std::any list22;\n  std::any list23;\n  std::any list24;\n  std::any list25;\n  std::any list26;\n  std::any list27;\n  std::any list28;\n  std::any list29;\n  std::any list30;\n  std::any list31;\n  std::any list32;\n  std::any list33;\n  std::any list34;\n  std::any list35;\n  std::any list36;\n  std::any list37;\n  std::any list38;\n  std::any list39;\n  std::any list40;\n  std::any list41;\n  std::any list42;\n  std::any list43;\n  std::any list44;\n  std::any list45;\n  std::any list46;\n  std::any list47;\n  std::any list48;\n  std::any list49;\n  std::any list50;\n  std::any list51;\n  std::any list52;\n  std::any list53;\n  std::any list54;\n  std::any list55;\n  std::any list56;\n  std::any list57;\n  std::any list58;\n  std::any list59;\n  std::any list60;\n  std::any list61;\n  std::any list62;\n  std::any list63;\n  std::any list64;\n  std::any list65;\n}\nint main() {\n    auto candidate = pack_consecutive_duplicates;\n    assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n    assert(candidate((std::any({(long)10, (long)10, (long)15, (long)19, (long)18, (long)18, (long)17, (long)26, (long)26, (long)17, (long)18, (long)10}))) == (std::any({(std::vector<long>)std::vector<long>({(long)10, (long)10}), (std::vector<long>)std::vector<long>({(long)15}), (std::vector<long>)std::vector<long>({(long)19}), (std::vector<long>)std::vector<long>({(long)18, (long)18}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)26, (long)26}), (std::vector<long>)std::vector<long>({(long)17}), (std::vector<long>)std::vector<long>({(long)18}), (std::vector<long>)std::vector<long>({(long)10})})));\n    assert(candidate((std::any({(std::string)\"a\", (std::string)\"a\", (std::string)\"b\", (std::string)\"c\", (std::string)\"d\", (std::string)\"d\"}))) == (std::any({(std::vector<std::string>)std::vector<std::string>({(std::string)\"a\", (std::string)\"a\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"b\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"c\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"d\", (std::string)\"d\"})})));\n}\n",
      "timestamp": 1666123393,
      "stdout": "",
      "stderr": "/tmp/tmpc6gd7f4w.cpp: In function \u2018std::any pack_consecutive_duplicates(std::any)\u2019:\n/tmp/tmpc6gd7f4w.cpp:69:1: warning: no return statement in function returning non-void [-Wreturn-type]\n   69 | }\n      | ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpc6gd7f4w.cpp:2:\n/tmp/tmpc6gd7f4w.cpp: In function \u2018int main()\u2019:\n/tmp/tmpc6gd7f4w.cpp:72:176: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   72 |     assert(candidate((std::any({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4}))) == (std::any({(std::vector<long>)std::vector<long>({(long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1}), (std::vector<long>)std::vector<long>({(long)2}), (std::vector<long>)std::vector<long>({(long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)7}), (std::vector<long>)std::vector<long>({(long)8}), (std::vector<long>)std::vector<long>({(long)9}), (std::vector<long>)std::vector<long>({(long)4, (long)4})})));\n      |                                                                                                                                                                                ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpc6gd7f4w.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>,",
      "exit_code": 1,
      "status": "SyntaxError"
    }
  ]
}
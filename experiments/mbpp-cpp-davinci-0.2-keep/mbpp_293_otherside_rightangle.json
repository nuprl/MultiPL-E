{
  "name": "mbpp_293_otherside_rightangle",
  "language": "cpp",
  "prompt": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the third side of a right angled triangle.\nfloat otherside_rightangle(long w, long h) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_293_otherside_rightangle.py",
  "prompt_terminology": "verbatim",
  "tests": "}\nint main() {\n    auto candidate = otherside_rightangle;\n    assert(candidate((7), (8)) == (10.63014581273465));\n    assert(candidate((3), (4)) == (float(5)));\n    assert(candidate((7), (15)) == (16.55294535724685));\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    float s = sqrt(w*w + h*h);\n    return s;",
    "  float result = sqrt(pow(w, 2) + pow(h, 2));\n  return result;",
    "  return sqrt(w*w + h*h);",
    "  float result;\n  result = sqrt(w*w + h*h);\n  return result;",
    "    float res = sqrt(pow(w,2) + pow(h,2));\n    return res;",
    "  float otherside = sqrt(w*w + h*h);\n  return otherside;",
    "  float result;\n  result = sqrt(w*w + h*h);\n  return result;",
    "  // Write your code here\n  float res;\n  res = sqrt(w*w + h*h);\n  return res;",
    "  float result = sqrt(w*w + h*h);\n  return result;",
    "  float otherside = sqrt(w*w + h*h);\n  return otherside;",
    "  float result = sqrt(pow(w, 2) + pow(h, 2));\n  return result;",
    "  return sqrt(w*w+h*h);",
    "  float s;\n  s = sqrt(w*w + h*h);\n  return s;",
    "    float res = sqrt(w*w + h*h);\n    return res;",
    "  return sqrt(w*w + h*h);",
    "  float otherside = sqrt(w*w + h*h);\n  return otherside;",
    "  float x = sqrt(w*w + h*h);\n  return x;",
    "  float s;\n  s = sqrt(w*w + h*h);\n  return s;",
    "  float res = sqrt(w*w + h*h);\n  return res;",
    "  float x;\n  x = sqrt(w*w + h*h);\n  return x;"
  ]
}
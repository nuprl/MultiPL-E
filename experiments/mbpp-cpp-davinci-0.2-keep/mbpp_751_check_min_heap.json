{
  "name": "mbpp_751_check_min_heap",
  "language": "cpp",
  "prompt": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if the given array represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/\nbool check_min_heap(std::vector<long> arr) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_751_check_min_heap.py",
  "prompt_terminology": "verbatim",
  "tests": "}\nint main() {\n    auto candidate = check_min_heap;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6}))) == (true));\n    assert(candidate((std::vector<long>({(long)2, (long)3, (long)4, (long)5, (long)10, (long)15}))) == (true));\n    assert(candidate((std::vector<long>({(long)2, (long)10, (long)4, (long)5, (long)3, (long)15}))) == (false));\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    for(int i = 0; i < arr.size(); i++) {\n        if(2*i + 1 < arr.size() && arr[i] > arr[2*i + 1]) {\n            return false;\n        }\n        if(2*i + 2 < arr.size() && arr[i] > arr[2*i + 2]) {\n            return false;\n        }\n    }\n    return true;",
    "    for (int i = 0; i < arr.size()/2; i++) {\n        if (arr[i] > arr[2*i + 1] || arr[i] > arr[2*i + 2]) {\n            return false;\n        }\n    }\n    return true;",
    "    for(int i=0;i<arr.size();i++) {\n        if(2*i+1<arr.size() && arr[i]>arr[2*i+1]) {\n            return false;\n        }\n        if(2*i+2<arr.size() && arr[i]>arr[2*i+2]) {\n            return false;\n        }\n    }\n    return true;",
    "    long n = arr.size();\n    for (long i = 0; i < n; i++) {\n        if (arr[i] > arr[2*i + 1] || arr[i] > arr[2*i + 2]) {\n            return false;\n        }\n    }\n    return true;",
    "    int n = arr.size();\n    for(int i = 0; i < n; i++) {\n        if(2*i+1 < n && arr[i] > arr[2*i+1]) {\n            return false;\n        }\n        if(2*i+2 < n && arr[i] > arr[2*i+2]) {\n            return false;\n        }\n    }\n    return true;",
    "    for(int i=0;i<arr.size();i++) {\n        if(2*i+1<arr.size() && arr[i]>arr[2*i+1]) {\n            return false;\n        }\n        if(2*i+2<arr.size() && arr[i]>arr[2*i+2]) {\n            return false;\n        }\n    }\n    return true;",
    "    for(int i = 0; i < arr.size(); i++) {\n        if(2*i+1 < arr.size() && arr[i] > arr[2*i+1]) {\n            return false;\n        }\n        if(2*i+2 < arr.size() && arr[i] > arr[2*i+2]) {\n            return false;\n        }\n    }\n    return true;",
    "    for(int i = 0; i < arr.size()/2; i++) {\n        if(arr[i] > arr[2*i + 1] || arr[i] > arr[2*i + 2]) {\n            return false;\n        }\n    }\n    return true;",
    "    int n = arr.size();\n    for(int i = 0; i < n; i++) {\n        if(2*i+1 < n) {\n            if(arr[i] > arr[2*i+1]) {\n                return false;\n            }\n        }\n        if(2*i+2 < n) {\n            if(arr[i] > arr[2*i+2]) {\n                return false;\n            }\n        }\n    }\n    return true;",
    "    int n = arr.size();\n    for (int i = 0; i <= (n - 2) / 2; i++) {\n        if (arr[2 * i + 1] < arr[i]) {\n            return false;\n        }\n        if (2 * i + 2 < n && arr[2 * i + 2] < arr[i]) {\n            return false;\n        }\n    }\n    return true;",
    "    for(int i = 0; i < arr.size(); i++) {\n        if(2*i+1 < arr.size() && arr[i] > arr[2*i+1]) {\n            return false;\n        }\n        if(2*i+2 < arr.size() && arr[i] > arr[2*i+2]) {\n            return false;\n        }\n    }\n    return true;",
    "    for(int i=0;i<arr.size();i++) {\n        if(2*i+1 < arr.size() && arr[i] > arr[2*i+1]) {\n            return false;\n        }\n        if(2*i+2 < arr.size() && arr[i] > arr[2*i+2]) {\n            return false;\n        }\n    }\n    return true;",
    "    int n = arr.size();\n    for(int i = 0; i < n; i++) {\n        if(2*i+1 < n && arr[i] > arr[2*i+1]) {\n            return false;\n        }\n        if(2*i+2 < n && arr[i] > arr[2*i+2]) {\n            return false;\n        }\n    }\n    return true;",
    "    int n = arr.size();\n    for (int i = 0; i < n; i++) {\n        if (2*i+1 < n && arr[i] > arr[2*i+1]) {\n            return false;\n        }\n        if (2*i+2 < n && arr[i] > arr[2*i+2]) {\n            return false;\n        }\n    }\n    return true;",
    "    if(arr.size() == 0) {\n        return true;\n    }\n    for(int i = 0; i < arr.size()/2; i++) {\n        if(arr[i] > arr[2*i + 1] || arr[i] > arr[2*i + 2]) {\n            return false;\n        }\n    }\n    return true;",
    "    for(int i = 0; i < arr.size(); i++) {\n        int left = 2*i + 1;\n        int right = 2*i + 2;\n        if(left < arr.size() && arr[left] < arr[i]) {\n            return false;\n        }\n        if(right < arr.size() && arr[right] < arr[i]) {\n            return false;\n        }\n    }\n    return true;",
    "    for(int i = 0; i < arr.size(); i++) {\n        if(2*i+1 < arr.size()) {\n            if(arr[2*i+1] < arr[i]) {\n                return false;\n            }\n        }\n        if(2*i+2 < arr.size()) {\n            if(arr[2*i+2] < arr[i]) {\n                return false;\n            }\n        }\n    }\n    return true;",
    "    for(int i = 0; i < arr.size(); i++) {\n        if(2*i+1 < arr.size() && arr[i] > arr[2*i+1]) {\n            return false;\n        }\n        if(2*i+2 < arr.size() && arr[i] > arr[2*i+2]) {\n            return false;\n        }\n    }\n    return true;",
    "    int n = arr.size();\n    for (int i = 0; i <= (n - 2) / 2; i++) {\n        if (arr[2 * i + 1] < arr[i]) {\n            return false;\n        }\n        if (2 * i + 2 < n && arr[2 * i + 2] < arr[i]) {\n            return false;\n        }\n    }\n    return true;",
    "    for(int i = 0; i < arr.size(); i++) {\n        if(2*i+1 < arr.size() && arr[i] > arr[2*i+1]) {\n            return false;\n        }\n        if(2*i+2 < arr.size() && arr[i] > arr[2*i+2]) {\n            return false;\n        }\n    }\n    return true;"
  ]
}
{
  "name": "mbpp_559_max_sub_array_sum",
  "language": "cpp",
  "prompt": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the sum of the largest contiguous sublist in the given list.\nlong max_sub_array_sum(std::vector<long> a, long size) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_559_max_sub_array_sum.py",
  "prompt_terminology": "verbatim",
  "tests": "}\nint main() {\n    auto candidate = max_sub_array_sum;\n    assert(candidate((std::vector<long>({(long)-2, (long)-3, (long)4, (long)-1, (long)-2, (long)1, (long)5, (long)-3})), (8)) == (7));\n    assert(candidate((std::vector<long>({(long)-3, (long)-4, (long)5, (long)-2, (long)-3, (long)2, (long)6, (long)-4})), (8)) == (8));\n    assert(candidate((std::vector<long>({(long)-4, (long)-5, (long)6, (long)-3, (long)-4, (long)3, (long)7, (long)-5})), (8)) == (10));\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    long max_so_far = a[0];\n    long curr_max = a[0];\n\n    for (long i = 1; i < size; i++) {\n        curr_max = std::max(a[i], curr_max+a[i]);\n        max_so_far = std::max(max_so_far, curr_max);\n    }\n    return max_so_far;",
    "    long max_so_far = a[0];\n    long curr_max = a[0];\n    for (long i = 1; i < size; i++) {\n        curr_max = std::max(a[i], curr_max + a[i]);\n        max_so_far = std::max(max_so_far, curr_max);\n    }\n    return max_so_far;",
    "    long max_so_far = a[0];\n    long curr_max = a[0];\n\n    for (long i = 1; i < size; i++) {\n        curr_max = std::max(a[i], curr_max+a[i]);\n        max_so_far = std::max(max_so_far, curr_max);\n    }\n    return max_so_far;",
    "    long max_so_far = a[0];\n    long curr_max = a[0];\n    for (long i = 1; i < size; i++) {\n        curr_max = std::max(a[i], curr_max + a[i]);\n        max_so_far = std::max(max_so_far, curr_max);\n    }\n    return max_so_far;",
    "    long max_so_far = a[0];\n    long curr_max = a[0];\n\n    for (long i = 1; i < size; i++) {\n        curr_max = std::max(a[i], curr_max + a[i]);\n        max_so_far = std::max(max_so_far, curr_max);\n    }\n    return max_so_far;",
    "    long max_so_far = 0, max_ending_here = 0;\n    for (long i = 0; i < size; i++) {\n        max_ending_here = max_ending_here + a[i];\n        if (max_ending_here < 0)\n            max_ending_here = 0;\n        if (max_so_far < max_ending_here)\n            max_so_far = max_ending_here;\n    }\n    return max_so_far;",
    "    long max_so_far = a[0];\n    long curr_max = a[0];\n    for (long i = 1; i < size; i++) {\n        curr_max = std::max(a[i], curr_max+a[i]);\n        max_so_far = std::max(max_so_far, curr_max);\n    }\n    return max_so_far;",
    "    long max_so_far = a[0];\n    long curr_max = a[0];\n\n    for (long i = 1; i < size; i++) {\n        curr_max = std::max(a[i], curr_max+a[i]);\n        max_so_far = std::max(max_so_far, curr_max);\n    }\n    return max_so_far;",
    "    long max_so_far = a[0];\n    long curr_max = a[0];\n\n    for (long i = 1; i < size; i++) {\n        curr_max = std::max(a[i], curr_max+a[i]);\n        max_so_far = std::max(max_so_far, curr_max);\n    }\n    return max_so_far;",
    "    long max_so_far = a[0];\n    long curr_max = a[0];\n\n    for (long i = 1; i < size; i++) {\n        curr_max = std::max(a[i], curr_max+a[i]);\n        max_so_far = std::max(max_so_far, curr_max);\n    }\n    return max_so_far;",
    "    long max_so_far = a[0];\n    long curr_max = a[0];\n\n    for (long i = 1; i < size; i++) {\n        curr_max = std::max(a[i], curr_max+a[i]);\n        max_so_far = std::max(max_so_far, curr_max);\n    }\n    return max_so_far;",
    "    long max_so_far = a[0];\n    long curr_max = a[0];\n    for (long i = 1; i < size; i++) {\n        curr_max = std::max(a[i], curr_max+a[i]);\n        max_so_far = std::max(max_so_far, curr_max);\n    }\n    return max_so_far;",
    "    long max_so_far = a[0];\n    long curr_max = a[0];\n    for (long i = 1; i < size; i++) {\n        curr_max = std::max(a[i], curr_max + a[i]);\n        max_so_far = std::max(max_so_far, curr_max);\n    }\n    return max_so_far;",
    "    long max_so_far = a[0];\n    long curr_max = a[0];\n\n    for (long i = 1; i < size; i++) {\n        curr_max = std::max(a[i], curr_max + a[i]);\n        max_so_far = std::max(max_so_far, curr_max);\n    }\n    return max_so_far;",
    "    long max_so_far = a[0];\n    long curr_max = a[0];\n\n    for (long i = 1; i < size; i++) {\n        curr_max = std::max(a[i], curr_max+a[i]);\n        max_so_far = std::max(max_so_far, curr_max);\n    }\n    return max_so_far;",
    "    long max_so_far = a[0];\n    long curr_max = a[0];\n\n    for (long i = 1; i < size; i++) {\n        curr_max = std::max(a[i], curr_max+a[i]);\n        max_so_far = std::max(max_so_far, curr_max);\n    }\n    return max_so_far;",
    "    long max_so_far = a[0];\n    long curr_max = a[0];\n\n    for (long i = 1; i < size; i++) {\n        curr_max = std::max(a[i], curr_max+a[i]);\n        max_so_far = std::max(max_so_far, curr_max);\n    }\n    return max_so_far;",
    "    long max_so_far = a[0];\n    long curr_max = a[0];\n    for (long i = 1; i < size; i++) {\n        curr_max = std::max(a[i], curr_max+a[i]);\n        max_so_far = std::max(max_so_far, curr_max);\n    }\n    return max_so_far;",
    "    long max_so_far = a[0];\n    long curr_max = a[0];\n\n    for (long i = 1; i < size; i++) {\n        curr_max = std::max(a[i], curr_max+a[i]);\n        max_so_far = std::max(max_so_far, curr_max);\n    }\n    return max_so_far;",
    "    long max_so_far = a[0];\n    long curr_max = a[0];\n    for (long i = 1; i < size; i++) {\n        curr_max = std::max(a[i], curr_max + a[i]);\n        max_so_far = std::max(max_so_far, curr_max);\n    }\n    return max_so_far;",
    "    long max_so_far = a[0];\n    long curr_max = a[0];\n\n    for (long i = 1; i < size; i++) {\n        curr_max = std::max(a[i], curr_max+a[i]);\n        max_so_far = std::max(max_so_far, curr_max);\n    }\n    return max_so_far;",
    "    long max_so_far = a[0];\n    long curr_max = a[0];\n    for (long i = 1; i < size; i++) {\n        curr_max = std::max(a[i], curr_max + a[i]);\n        max_so_far = std::max(max_so_far, curr_max);\n    }\n    return max_so_far;",
    "    long max_so_far = a[0];\n    long curr_max = a[0];\n\n    for (long i = 1; i < size; i++) {\n        curr_max = std::max(a[i], curr_max+a[i]);\n        max_so_far = std::max(max_so_far, curr_max);\n    }\n    return max_so_far;",
    "    long max_so_far = a[0];\n    long curr_max = a[0];\n\n    for (long i = 1; i < size; i++) {\n        curr_max = std::max(a[i], curr_max + a[i]);\n        max_so_far = std::max(max_so_far, curr_max);\n    }\n    return max_so_far;",
    "    long max_so_far = a[0];\n    long curr_max = a[0];\n\n    for (long i = 1; i < size; i++) {\n        curr_max = std::max(a[i], curr_max+a[i]);\n        max_so_far = std::max(max_so_far, curr_max);\n    }\n    return max_so_far;",
    "    long max_so_far = a[0];\n    long curr_max = a[0];\n    for (long i = 1; i < size; i++) {\n        curr_max = std::max(a[i], curr_max + a[i]);\n        max_so_far = std::max(max_so_far, curr_max);\n    }\n    return max_so_far;",
    "    long max_so_far = a[0];\n    long curr_max = a[0];\n    for (long i = 1; i < size; i++) {\n        curr_max = std::max(a[i], curr_max + a[i]);\n        max_so_far = std::max(max_so_far, curr_max);\n    }\n    return max_so_far;",
    "    long max_so_far = a[0];\n    long curr_max = a[0];\n\n    for (long i = 1; i < size; i++) {\n        curr_max = std::max(a[i], curr_max+a[i]);\n        max_so_far = std::max(max_so_far, curr_max);\n    }\n    return max_so_far;",
    "    long max_so_far = a[0];\n    long curr_max = a[0];\n\n    for (long i = 1; i < size; i++) {\n        curr_max = std::max(a[i], curr_max + a[i]);\n        max_so_far = std::max(max_so_far, curr_max);\n    }\n    return max_so_far;",
    "    long max_so_far = a[0];\n    long curr_max = a[0];\n    for (long i = 1; i < size; i++) {\n        curr_max = std::max(a[i], curr_max + a[i]);\n        max_so_far = std::max(max_so_far, curr_max);\n    }\n    return max_so_far;",
    "    long max_so_far = a[0];\n    long curr_max = a[0];\n\n    for (long i = 1; i < size; i++) {\n        curr_max = std::max(a[i], curr_max+a[i]);\n        max_so_far = std::max(max_so_far, curr_max);\n    }\n    return max_so_far;",
    "    long max_so_far = a[0];\n    long curr_max = a[0];\n\n    for (long i = 1; i < size; i++) {\n        curr_max = std::max(a[i], curr_max+a[i]);\n        max_so_far = std::max(max_so_far, curr_max);\n    }\n    return max_so_far;",
    "    long max_so_far = a[0];\n    long curr_max = a[0];\n\n    for (long i = 1; i < size; i++) {\n        curr_max = std::max(a[i], curr_max+a[i]);\n        max_so_far = std::max(max_so_far, curr_max);\n    }\n    return max_so_far;",
    "    long max_so_far = a[0];\n    long curr_max = a[0];\n\n    for (long i = 1; i < size; i++) {\n        curr_max = std::max(a[i], curr_max+a[i]);\n        max_so_far = std::max(max_so_far, curr_max);\n    }\n    return max_so_far;",
    "    long max_so_far = a[0];\n    long curr_max = a[0];\n    for (long i = 1; i < size; i++) {\n        curr_max = std::max(a[i], curr_max+a[i]);\n        max_so_far = std::max(max_so_far, curr_max);\n    }\n    return max_so_far;",
    "    long max_so_far = a[0];\n    long curr_max = a[0];\n    for (long i = 1; i < size; i++) {\n        curr_max = std::max(a[i], curr_max + a[i]);\n        max_so_far = std::max(max_so_far, curr_max);\n    }\n    return max_so_far;",
    "    long max_so_far = a[0];\n    long curr_max = a[0];\n    for (long i = 1; i < size; i++) {\n        curr_max = std::max(a[i], curr_max + a[i]);\n        max_so_far = std::max(max_so_far, curr_max);\n    }\n    return max_so_far;",
    "    long max_so_far = a[0];\n    long curr_max = a[0];\n    for (long i = 1; i < size; i++) {\n        curr_max = std::max(a[i], curr_max+a[i]);\n        max_so_far = std::max(max_so_far, curr_max);\n    }\n    return max_so_far;",
    "    long max_so_far = a[0];\n    long curr_max = a[0];\n\n    for (long i = 1; i < size; i++) {\n        curr_max = std::max(a[i], curr_max+a[i]);\n        max_so_far = std::max(max_so_far, curr_max);\n    }\n    return max_so_far;",
    "    long max_so_far = a[0];\n    long curr_max = a[0];\n\n    for (long i = 1; i < size; i++) {\n        curr_max = std::max(a[i], curr_max+a[i]);\n        max_so_far = std::max(max_so_far, curr_max);\n    }\n    return max_so_far;",
    "    long max_so_far = a[0];\n    long curr_max = a[0];\n\n    for (long i = 1; i < size; i++) {\n        curr_max = std::max(a[i], curr_max+a[i]);\n        max_so_far = std::max(max_so_far, curr_max);\n    }\n    return max_so_far;",
    "    long max_so_far = a[0];\n    long curr_max = a[0];\n\n    for (long i = 1; i < size; i++) {\n        curr_max = std::max(a[i], curr_max+a[i]);\n        max_so_far = std::max(max_so_far, curr_max);\n    }\n    return max_so_far;",
    "    long max_so_far = a[0];\n    long curr_max = a[0];\n\n    for (long i = 1; i < size; i++) {\n        curr_max = std::max(a[i], curr_max+a[i]);\n        max_so_far = std::max(max_so_far, curr_max);\n    }\n    return max_so_far;",
    "    long max_so_far = a[0];\n    long curr_max = a[0];\n\n    for (long i = 1; i < size; i++) {\n        curr_max = std::max(a[i], curr_max + a[i]);\n        max_so_far = std::max(max_so_far, curr_max);\n    }\n    return max_so_far;",
    "    long max_so_far = a[0];\n    long curr_max = a[0];\n\n    for (long i = 1; i < size; i++) {\n        curr_max = std::max(a[i], curr_max+a[i]);\n        max_so_far = std::max(max_so_far, curr_max);\n    }\n    return max_so_far;",
    "    long max_so_far = a[0];\n    long curr_max = a[0];\n    for (long i = 1; i < size; i++) {\n        curr_max = std::max(a[i], curr_max + a[i]);\n        max_so_far = std::max(max_so_far, curr_max);\n    }\n    return max_so_far;",
    "    long max_so_far = a[0];\n    long curr_max = a[0];\n    for (long i = 1; i < size; i++) {\n        curr_max = std::max(a[i], curr_max + a[i]);\n        max_so_far = std::max(max_so_far, curr_max);\n    }\n    return max_so_far;",
    "    long max_so_far = a[0];\n    long curr_max = a[0];\n\n    for (long i = 1; i < size; i++) {\n        curr_max = std::max(a[i], curr_max+a[i]);\n        max_so_far = std::max(max_so_far, curr_max);\n    }\n    return max_so_far;",
    "    long max_so_far = a[0];\n    long curr_max = a[0];\n    for (long i = 1; i < size; i++) {\n        curr_max = std::max(a[i], curr_max+a[i]);\n        max_so_far = std::max(max_so_far, curr_max);\n    }\n    return max_so_far;",
    "    long max_so_far = a[0];\n    long curr_max = a[0];\n\n    for (long i = 1; i < size; i++) {\n        curr_max = std::max(a[i], curr_max+a[i]);\n        max_so_far = std::max(max_so_far, curr_max);\n    }\n    return max_so_far;",
    "    long max_so_far = a[0];\n    long curr_max = a[0];\n    for (long i = 1; i < size; i++) {\n        curr_max = std::max(a[i], curr_max+a[i]);\n        max_so_far = std::max(max_so_far, curr_max);\n    }\n    return max_so_far;",
    "    long max_so_far = a[0];\n    long curr_max = a[0];\n    for (long i = 1; i < size; i++) {\n        curr_max = std::max(a[i], curr_max+a[i]);\n        max_so_far = std::max(max_so_far, curr_max);\n    }\n    return max_so_far;",
    "    long max_so_far = a[0];\n    long curr_max = a[0];\n\n    for (long i = 1; i < size; i++) {\n        curr_max = std::max(a[i], curr_max + a[i]);\n        max_so_far = std::max(max_so_far, curr_max);\n    }\n    return max_so_far;",
    "    long max_so_far = a[0];\n    long curr_max = a[0];\n    for (long i = 1; i < size; i++) {\n        curr_max = std::max(a[i], curr_max + a[i]);\n        max_so_far = std::max(max_so_far, curr_max);\n    }\n    return max_so_far;",
    "    long max_so_far = a[0];\n    long curr_max = a[0];\n\n    for (long i = 1; i < size; i++) {\n        curr_max = std::max(a[i], curr_max + a[i]);\n        max_so_far = std::max(max_so_far, curr_max);\n    }\n    return max_so_far;",
    "    long max_so_far = a[0];\n    long curr_max = a[0];\n\n    for (long i = 1; i < size; i++) {\n        curr_max = std::max(a[i], curr_max+a[i]);\n        max_so_far = std::max(max_so_far, curr_max);\n    }\n    return max_so_far;",
    "    long max_so_far = a[0];\n    long curr_max = a[0];\n\n    for (long i = 1; i < size; i++) {\n        curr_max = std::max(a[i], curr_max + a[i]);\n        max_so_far = std::max(max_so_far, curr_max);\n    }\n    return max_so_far;",
    "    long max_so_far = a[0];\n    long curr_max = a[0];\n\n    for (long i = 1; i < size; i++) {\n        curr_max = std::max(a[i], curr_max+a[i]);\n        max_so_far = std::max(max_so_far, curr_max);\n    }\n    return max_so_far;",
    "    long max_so_far = a[0];\n    long curr_max = a[0];\n\n    for (long i = 1; i < size; i++) {\n        curr_max = std::max(a[i], curr_max+a[i]);\n        max_so_far = std::max(max_so_far, curr_max);\n    }\n    return max_so_far;",
    "    long max_so_far = a[0];\n    long curr_max = a[0];\n\n    for (long i = 1; i < size; i++) {\n        curr_max = std::max(a[i], curr_max+a[i]);\n        max_so_far = std::max(max_so_far, curr_max);\n    }\n    return max_so_far;",
    "    long max_so_far = a[0];\n    long curr_max = a[0];\n\n    for (long i = 1; i < size; i++) {\n        curr_max = std::max(a[i], curr_max+a[i]);\n        max_so_far = std::max(max_so_far, curr_max);\n    }\n    return max_so_far;",
    "    long max_so_far = a[0];\n    long curr_max = a[0];\n\n    for (long i = 1; i < size; i++) {\n        curr_max = std::max(a[i], curr_max+a[i]);\n        max_so_far = std::max(max_so_far, curr_max);\n    }\n    return max_so_far;",
    "    long max_so_far = a[0];\n    long curr_max = a[0];\n\n    for (long i = 1; i < size; i++) {\n        curr_max = std::max(a[i], curr_max+a[i]);\n        max_so_far = std::max(max_so_far, curr_max);\n    }\n    return max_so_far;",
    "    long max_so_far = a[0];\n    long curr_max = a[0];\n\n    for (long i = 1; i < size; i++) {\n        curr_max = std::max(a[i], curr_max+a[i]);\n        max_so_far = std::max(max_so_far, curr_max);\n    }\n    return max_so_far;",
    "    long max_so_far = a[0];\n    long curr_max = a[0];\n    for (long i = 1; i < size; i++) {\n        curr_max = std::max(a[i], curr_max+a[i]);\n        max_so_far = std::max(max_so_far, curr_max);\n    }\n    return max_so_far;",
    "    long max_so_far = a[0];\n    long curr_max = a[0];\n\n    for (long i = 1; i < size; i++) {\n        curr_max = std::max(a[i], curr_max+a[i]);\n        max_so_far = std::max(max_so_far, curr_max);\n    }\n    return max_so_far;",
    "    long max_so_far = a[0];\n    long curr_max = a[0];\n    for (long i = 1; i < size; i++) {\n        curr_max = std::max(a[i], curr_max + a[i]);\n        max_so_far = std::max(max_so_far, curr_max);\n    }\n    return max_so_far;",
    "    long max_so_far = a[0];\n    long curr_max = a[0];\n\n    for (long i = 1; i < size; i++) {\n        curr_max = std::max(a[i], curr_max+a[i]);\n        max_so_far = std::max(max_so_far, curr_max);\n    }\n    return max_so_far;",
    "    long max_so_far = a[0];\n    long curr_max = a[0];\n\n    for (long i = 1; i < size; i++) {\n        curr_max = std::max(a[i], curr_max+a[i]);\n        max_so_far = std::max(max_so_far, curr_max);\n    }\n    return max_so_far;",
    "    long max_so_far = a[0], i;\n    long curr_max = a[0];\n\n    for (i = 1; i < size; i++) {\n        curr_max = std::max(a[i], curr_max+a[i]);\n        max_so_far = std::max(max_so_far, curr_max);\n    }\n    return max_so_far;",
    "    long max_so_far = a[0];\n    long curr_max = a[0];\n\n    for (long i = 1; i < size; i++) {\n        curr_max = std::max(a[i], curr_max+a[i]);\n        max_so_far = std::max(max_so_far, curr_max);\n    }\n    return max_so_far;",
    "    long max_so_far = a[0];\n    long curr_max = a[0];\n\n    for (long i = 1; i < size; i++) {\n        curr_max = std::max(a[i], curr_max + a[i]);\n        max_so_far = std::max(max_so_far, curr_max);\n    }\n    return max_so_far;",
    "    long max_so_far = a[0];\n    long curr_max = a[0];\n    for (long i = 1; i < size; i++) {\n        curr_max = std::max(a[i], curr_max + a[i]);\n        max_so_far = std::max(max_so_far, curr_max);\n    }\n    return max_so_far;",
    "    long max_so_far = a[0];\n    long curr_max = a[0];\n\n    for (long i = 1; i < size; i++) {\n        curr_max = std::max(a[i], curr_max+a[i]);\n        max_so_far = std::max(max_so_far, curr_max);\n    }\n    return max_so_far;",
    "    long max_so_far = a[0];\n    long curr_max = a[0];\n\n    for (long i = 1; i < size; i++) {\n        curr_max = std::max(a[i], curr_max+a[i]);\n        max_so_far = std::max(max_so_far, curr_max);\n    }\n    return max_so_far;",
    "    long max_so_far = a[0];\n    long curr_max = a[0];\n    for (long i = 1; i < size; i++) {\n        curr_max = std::max(a[i], curr_max+a[i]);\n        max_so_far = std::max(max_so_far, curr_max);\n    }\n    return max_so_far;",
    "    long max_so_far = a[0];\n    long curr_max = a[0];\n    for (long i = 1; i < size; i++) {\n        curr_max = std::max(a[i], curr_max + a[i]);\n        max_so_far = std::max(max_so_far, curr_max);\n    }\n    return max_so_far;",
    "    long max_so_far = a[0];\n    long curr_max = a[0];\n    for (long i = 1; i < size; i++) {\n        curr_max = std::max(a[i], curr_max + a[i]);\n        max_so_far = std::max(max_so_far, curr_max);\n    }\n    return max_so_far;",
    "    long max_so_far = a[0];\n    long curr_max = a[0];\n    for (long i = 1; i < size; i++) {\n        curr_max = std::max(a[i], curr_max + a[i]);\n        max_so_far = std::max(max_so_far, curr_max);\n    }\n    return max_so_far;",
    "    long max_so_far = a[0];\n    long curr_max = a[0];\n\n    for (long i = 1; i < size; i++) {\n        curr_max = std::max(a[i], curr_max + a[i]);\n        max_so_far = std::max(max_so_far, curr_max);\n    }\n    return max_so_far;",
    "    long max_so_far = a[0];\n    long curr_max = a[0];\n\n    for (long i = 1; i < size; i++) {\n        curr_max = std::max(a[i], curr_max+a[i]);\n        max_so_far = std::max(max_so_far, curr_max);\n    }\n    return max_so_far;",
    "    long max_so_far = a[0];\n    long curr_max = a[0];\n    for (long i = 1; i < size; i++) {\n        curr_max = std::max(a[i], curr_max+a[i]);\n        max_so_far = std::max(max_so_far, curr_max);\n    }\n    return max_so_far;",
    "    long max_so_far = a[0];\n    long curr_max = a[0];\n\n    for (long i = 1; i < size; i++) {\n        curr_max = std::max(a[i], curr_max+a[i]);\n        max_so_far = std::max(max_so_far, curr_max);\n    }\n    return max_so_far;",
    "    long max_so_far = a[0];\n    long curr_max = a[0];\n\n    for (long i = 1; i < size; i++) {\n        curr_max = std::max(a[i], curr_max+a[i]);\n        max_so_far = std::max(max_so_far, curr_max);\n    }\n    return max_so_far;",
    "    long max_so_far = a[0];\n    long curr_max = a[0];\n\n    for (long i = 1; i < size; i++) {\n        curr_max = std::max(a[i], curr_max+a[i]);\n        max_so_far = std::max(max_so_far, curr_max);\n    }\n    return max_so_far;",
    "    long max_so_far = a[0];\n    long curr_max = a[0];\n    for (long i = 1; i < size; i++) {\n        curr_max = std::max(a[i], curr_max+a[i]);\n        max_so_far = std::max(max_so_far, curr_max);\n    }\n    return max_so_far;",
    "    long max_so_far = a[0];\n    long curr_max = a[0];\n\n    for (long i = 1; i < size; i++) {\n        curr_max = std::max(a[i], curr_max+a[i]);\n        max_so_far = std::max(max_so_far, curr_max);\n    }\n    return max_so_far;",
    "    long max_so_far = a[0];\n    long curr_max = a[0];\n    for (long i = 1; i < size; i++) {\n        curr_max = std::max(a[i], curr_max + a[i]);\n        max_so_far = std::max(max_so_far, curr_max);\n    }\n    return max_so_far;",
    "    long max_so_far = a[0];\n    long curr_max = a[0];\n\n    for (long i = 1; i < size; i++) {\n        curr_max = std::max(a[i], curr_max + a[i]);\n        max_so_far = std::max(max_so_far, curr_max);\n    }\n    return max_so_far;",
    "    long max_so_far = a[0];\n    long curr_max = a[0];\n    for (long i = 1; i < size; i++) {\n        curr_max = std::max(a[i], curr_max + a[i]);\n        max_so_far = std::max(max_so_far, curr_max);\n    }\n    return max_so_far;",
    "    long max_so_far = a[0];\n    long curr_max = a[0];\n    for (long i = 1; i < size; i++) {\n        curr_max = std::max(a[i], curr_max + a[i]);\n        max_so_far = std::max(max_so_far, curr_max);\n    }\n    return max_so_far;",
    "    long max_so_far = a[0];\n    long curr_max = a[0];\n \n    for (long i = 1; i < size; i++) {\n        curr_max = std::max(a[i], curr_max+a[i]);\n        max_so_far = std::max(max_so_far, curr_max);\n    }\n    return max_so_far;",
    "    long max_so_far = a[0];\n    long curr_max = a[0];\n\n    for (long i = 1; i < size; i++) {\n        curr_max = std::max(a[i], curr_max+a[i]);\n        max_so_far = std::max(max_so_far, curr_max);\n    }\n    return max_so_far;",
    "    long max_so_far = a[0];\n    long curr_max = a[0];\n\n    for (long i = 1; i < size; i++) {\n        curr_max = std::max(a[i], curr_max + a[i]);\n        max_so_far = std::max(max_so_far, curr_max);\n    }\n    return max_so_far;",
    "    long max_so_far = a[0];\n    long curr_max = a[0];\n\n    for (long i = 1; i < size; i++) {\n        curr_max = std::max(a[i], curr_max+a[i]);\n        max_so_far = std::max(max_so_far, curr_max);\n    }\n    return max_so_far;",
    "    long max_so_far = a[0];\n    long curr_max = a[0];\n    for (long i = 1; i < size; i++) {\n        curr_max = std::max(a[i], curr_max + a[i]);\n        max_so_far = std::max(max_so_far, curr_max);\n    }\n    return max_so_far;",
    "    long max_so_far = a[0];\n    long curr_max = a[0];\n\n    for (long i = 1; i < size; i++) {\n        curr_max = std::max(a[i], curr_max+a[i]);\n        max_so_far = std::max(max_so_far, curr_max);\n    }\n    return max_so_far;",
    "    long max_so_far = a[0];\n    long curr_max = a[0];\n    for (long i = 1; i < size; i++) {\n        curr_max = std::max(a[i], curr_max+a[i]);\n        max_so_far = std::max(max_so_far, curr_max);\n    }\n    return max_so_far;",
    "    long max_so_far = a[0];\n    long curr_max = a[0];\n    for (long i = 1; i < size; i++) {\n        curr_max = std::max(a[i], curr_max+a[i]);\n        max_so_far = std::max(max_so_far, curr_max);\n    }\n    return max_so_far;",
    "    long max_so_far = a[0];\n    long curr_max = a[0];\n    for (long i = 1; i < size; i++) {\n        curr_max = std::max(a[i], curr_max+a[i]);\n        max_so_far = std::max(max_so_far, curr_max);\n    }\n    return max_so_far;",
    "    long max_so_far = a[0];\n    long curr_max = a[0];\n    for (long i = 1; i < size; i++) {\n        curr_max = std::max(a[i], curr_max + a[i]);\n        max_so_far = std::max(max_so_far, curr_max);\n    }\n    return max_so_far;",
    "    long max_so_far = a[0];\n    long curr_max = a[0];\n    for (long i = 1; i < size; i++) {\n        curr_max = std::max(a[i], curr_max+a[i]);\n        max_so_far = std::max(max_so_far, curr_max);\n    }\n    return max_so_far;",
    "    long max_so_far = a[0];\n    long curr_max = a[0];\n\n    for (long i = 1; i < size; i++) {\n        curr_max = std::max(a[i], curr_max+a[i]);\n        max_so_far = std::max(max_so_far, curr_max);\n    }\n    return max_so_far;",
    "    long max_so_far = a[0];\n    long curr_max = a[0];\n\n    for (long i = 1; i < size; i++) {\n        curr_max = std::max(a[i], curr_max+a[i]);\n        max_so_far = std::max(max_so_far, curr_max);\n    }\n    return max_so_far;",
    "    long max_so_far = a[0];\n    long curr_max = a[0];\n    for (long i = 1; i < size; i++) {\n        curr_max = std::max(a[i], curr_max+a[i]);\n        max_so_far = std::max(max_so_far, curr_max);\n    }\n    return max_so_far;",
    "    long max_so_far = a[0];\n    long curr_max = a[0];\n    for (long i = 1; i < size; i++) {\n        curr_max = std::max(a[i], curr_max + a[i]);\n        max_so_far = std::max(max_so_far, curr_max);\n    }\n    return max_so_far;",
    "    long max_so_far = a[0];\n    long curr_max = a[0];\n\n    for (long i = 1; i < size; i++) {\n        curr_max = std::max(a[i], curr_max+a[i]);\n        max_so_far = std::max(max_so_far, curr_max);\n    }\n    return max_so_far;",
    "    long max_so_far = a[0];\n    long curr_max = a[0];\n    for (long i = 1; i < size; i++) {\n        curr_max = std::max(a[i], curr_max+a[i]);\n        max_so_far = std::max(max_so_far, curr_max);\n    }\n    return max_so_far;",
    "    long max_so_far = a[0];\n    long curr_max = a[0];\n\n    for (long i = 1; i < size; i++) {\n        curr_max = std::max(a[i], curr_max + a[i]);\n        max_so_far = std::max(max_so_far, curr_max);\n    }\n    return max_so_far;",
    "    long max_so_far = a[0];\n    long curr_max = a[0];\n    for (long i = 1; i < size; i++) {\n        curr_max = std::max(a[i], curr_max + a[i]);\n        max_so_far = std::max(max_so_far, curr_max);\n    }\n    return max_so_far;",
    "    long max_so_far = a[0];\n    long curr_max = a[0];\n    for (long i = 1; i < size; i++) {\n        curr_max = std::max(a[i], curr_max+a[i]);\n        max_so_far = std::max(max_so_far, curr_max);\n    }\n    return max_so_far;",
    "    long max_so_far = a[0];\n    long curr_max = a[0];\n\n    for (long i = 1; i < size; i++) {\n        curr_max = std::max(a[i], curr_max+a[i]);\n        max_so_far = std::max(max_so_far, curr_max);\n    }\n    return max_so_far;",
    "    long max_so_far = a[0];\n    long curr_max = a[0];\n\n    for (long i = 1; i < size; i++) {\n        curr_max = std::max(a[i], curr_max + a[i]);\n        max_so_far = std::max(max_so_far, curr_max);\n    }\n    return max_so_far;",
    "    long max_so_far = a[0];\n    long curr_max = a[0];\n\n    for (long i = 1; i < size; i++) {\n        curr_max = std::max(a[i], curr_max+a[i]);\n        max_so_far = std::max(max_so_far, curr_max);\n    }\n    return max_so_far;",
    "    long max_so_far = a[0];\n    long curr_max = a[0];\n\n    for (long i = 1; i < size; i++) {\n        curr_max = std::max(a[i], curr_max+a[i]);\n        max_so_far = std::max(max_so_far, curr_max);\n    }\n    return max_so_far;",
    "    long max_so_far = a[0], i;\n    long curr_max = a[0];\n    for (i = 1; i < size; i++) {\n        curr_max = std::max(a[i], curr_max+a[i]);\n        max_so_far = std::max(max_so_far, curr_max);\n    }\n    return max_so_far;",
    "    long max_so_far = a[0];\n    long curr_max = a[0];\n\n    for (long i = 1; i < size; i++) {\n        curr_max = std::max(a[i], curr_max+a[i]);\n        max_so_far = std::max(max_so_far, curr_max);\n    }\n    return max_so_far;",
    "    long max_so_far = a[0];\n    long curr_max = a[0];\n    for (long i = 1; i < size; i++) {\n        curr_max = std::max(a[i], curr_max+a[i]);\n        max_so_far = std::max(max_so_far, curr_max);\n    }\n    return max_so_far;",
    "    long max_so_far = a[0];\n    long curr_max = a[0];\n\n    for (long i = 1; i < size; i++) {\n        curr_max = std::max(a[i], curr_max+a[i]);\n        max_so_far = std::max(max_so_far, curr_max);\n    }\n    return max_so_far;",
    "    long max_so_far = a[0];\n    long curr_max = a[0];\n\n    for (long i = 1; i < size; i++) {\n        curr_max = std::max(a[i], curr_max+a[i]);\n        max_so_far = std::max(max_so_far, curr_max);\n    }\n    return max_so_far;",
    "    long max_so_far = a[0];\n    long curr_max = a[0];\n\n    for (long i = 1; i < size; i++) {\n        curr_max = std::max(a[i], curr_max + a[i]);\n        max_so_far = std::max(max_so_far, curr_max);\n    }\n    return max_so_far;",
    "    long max_so_far = a[0];\n    long curr_max = a[0];\n\n    for (long i = 1; i < size; i++) {\n        curr_max = std::max(a[i], curr_max + a[i]);\n        max_so_far = std::max(max_so_far, curr_max);\n    }\n    return max_so_far;",
    "    long max_so_far = a[0];\n    long curr_max = a[0];\n    for (long i = 1; i < size; i++) {\n        curr_max = std::max(a[i], curr_max+a[i]);\n        max_so_far = std::max(max_so_far, curr_max);\n    }\n    return max_so_far;",
    "    long max_so_far = a[0];\n    long curr_max = a[0];\n\n    for (long i = 1; i < size; i++) {\n        curr_max = std::max(a[i], curr_max + a[i]);\n        max_so_far = std::max(max_so_far, curr_max);\n    }\n    return max_so_far;",
    "    long max_so_far = a[0];\n    long curr_max = a[0];\n\n    for (long i = 1; i < size; i++) {\n        curr_max = std::max(a[i], curr_max+a[i]);\n        max_so_far = std::max(max_so_far, curr_max);\n    }\n    return max_so_far;",
    "    long max_so_far = a[0];\n    long curr_max = a[0];\n    for (long i = 1; i < size; i++) {\n        curr_max = std::max(a[i], curr_max + a[i]);\n        max_so_far = std::max(max_so_far, curr_max);\n    }\n    return max_so_far;",
    "    long max_so_far = a[0];\n    long curr_max = a[0];\n    for (long i = 1; i < size; i++) {\n        curr_max = std::max(a[i], curr_max+a[i]);\n        max_so_far = std::max(max_so_far, curr_max);\n    }\n    return max_so_far;",
    "    long max_so_far = a[0];\n    long curr_max = a[0];\n\n    for (long i = 1; i < size; i++) {\n        curr_max = std::max(a[i], curr_max+a[i]);\n        max_so_far = std::max(max_so_far, curr_max);\n    }\n    return max_so_far;",
    "    long max_so_far = a[0];\n    long curr_max = a[0];\n\n    for (long i = 1; i < size; i++) {\n        curr_max = std::max(a[i], curr_max + a[i]);\n        max_so_far = std::max(max_so_far, curr_max);\n    }\n    return max_so_far;",
    "    long max_so_far = a[0];\n    long curr_max = a[0];\n    for (long i = 1; i < size; i++) {\n        curr_max = std::max(a[i], curr_max+a[i]);\n        max_so_far = std::max(max_so_far, curr_max);\n    }\n    return max_so_far;",
    "    long max_so_far = a[0];\n    long curr_max = a[0];\n\n    for (long i = 1; i < size; i++) {\n        curr_max = std::max(a[i], curr_max+a[i]);\n        max_so_far = std::max(max_so_far, curr_max);\n    }\n    return max_so_far;",
    "    long max_so_far = a[0];\n    long curr_max = a[0];\n\n    for (long i = 1; i < size; i++) {\n        curr_max = std::max(a[i], curr_max + a[i]);\n        max_so_far = std::max(max_so_far, curr_max);\n    }\n    return max_so_far;",
    "    long max_so_far = INT_MIN, max_ending_here = 0;\n    for (long i = 0; i < size; i++) {\n        max_ending_here = max_ending_here + a[i];\n        if (max_so_far < max_ending_here)\n            max_so_far = max_ending_here;\n        if (max_ending_here < 0)\n            max_ending_here = 0;\n    }\n    return max_so_far;",
    "    long max_so_far = a[0];\n    long curr_max = a[0];\n    for (long i = 1; i < size; i++) {\n        curr_max = std::max(a[i], curr_max+a[i]);\n        max_so_far = std::max(max_so_far, curr_max);\n    }\n    return max_so_far;",
    "    long max_so_far = a[0];\n    long curr_max = a[0];\n    for (long i = 1; i < size; i++) {\n        curr_max = std::max(a[i], curr_max + a[i]);\n        max_so_far = std::max(max_so_far, curr_max);\n    }\n    return max_so_far;",
    "    long max_so_far = a[0];\n    long curr_max = a[0];\n\n    for (long i = 1; i < size; i++) {\n        curr_max = std::max(a[i], curr_max+a[i]);\n        max_so_far = std::max(max_so_far, curr_max);\n    }\n    return max_so_far;",
    "    long max_so_far = a[0];\n    long curr_max = a[0];\n\n    for (long i = 1; i < size; i++) {\n        curr_max = std::max(a[i], curr_max + a[i]);\n        max_so_far = std::max(max_so_far, curr_max);\n    }\n    return max_so_far;",
    "    long max_so_far = a[0];\n    long curr_max = a[0];\n    for (long i = 1; i < size; i++) {\n        curr_max = std::max(a[i], curr_max+a[i]);\n        max_so_far = std::max(max_so_far, curr_max);\n    }\n    return max_so_far;",
    "    long max_so_far = a[0];\n    long curr_max = a[0];\n    for (long i = 1; i < size; i++) {\n        curr_max = std::max(a[i], curr_max+a[i]);\n        max_so_far = std::max(max_so_far, curr_max);\n    }\n    return max_so_far;",
    "    long max_so_far = a[0];\n    long curr_max = a[0];\n\n    for (long i = 1; i < size; i++) {\n        curr_max = std::max(a[i], curr_max+a[i]);\n        max_so_far = std::max(max_so_far, curr_max);\n    }\n    return max_so_far;",
    "    long max_so_far = a[0];\n    long curr_max = a[0];\n\n    for (long i = 1; i < size; i++) {\n        curr_max = std::max(a[i], curr_max+a[i]);\n        max_so_far = std::max(max_so_far, curr_max);\n    }\n    return max_so_far;",
    "    long max_so_far = a[0];\n    long curr_max = a[0];\n    for (long i = 1; i < size; i++) {\n        curr_max = std::max(a[i], curr_max+a[i]);\n        max_so_far = std::max(max_so_far, curr_max);\n    }\n    return max_so_far;",
    "    long max_so_far = a[0];\n    long curr_max = a[0];\n\n    for (long i = 1; i < size; i++) {\n        curr_max = std::max(a[i], curr_max+a[i]);\n        max_so_far = std::max(max_so_far, curr_max);\n    }\n    return max_so_far;",
    "    long max_so_far = a[0];\n    long curr_max = a[0];\n\n    for (long i = 1; i < size; i++) {\n        curr_max = std::max(a[i], curr_max+a[i]);\n        max_so_far = std::max(max_so_far, curr_max);\n    }\n    return max_so_far;",
    "    long max_so_far = a[0];\n    long curr_max = a[0];\n\n    for (long i = 1; i < size; i++) {\n        curr_max = std::max(a[i], curr_max+a[i]);\n        max_so_far = std::max(max_so_far, curr_max);\n    }\n    return max_so_far;",
    "    long max_so_far = a[0];\n    long curr_max = a[0];\n    for (long i = 1; i < size; i++) {\n        curr_max = std::max(a[i], curr_max + a[i]);\n        max_so_far = std::max(max_so_far, curr_max);\n    }\n    return max_so_far;",
    "    long max_so_far = a[0];\n    long curr_max = a[0];\n    for (long i = 1; i < size; i++) {\n        curr_max = std::max(a[i], curr_max+a[i]);\n        max_so_far = std::max(max_so_far, curr_max);\n    }\n    return max_so_far;",
    "    long max_so_far = a[0];\n    long curr_max = a[0];\n    for (long i = 1; i < size; i++) {\n        curr_max = std::max(a[i], curr_max + a[i]);\n        max_so_far = std::max(max_so_far, curr_max);\n    }\n    return max_so_far;",
    "    long max_so_far = a[0];\n    long curr_max = a[0];\n    for (long i = 1; i < size; i++) {\n        curr_max = std::max(a[i], curr_max+a[i]);\n        max_so_far = std::max(max_so_far, curr_max);\n    }\n    return max_so_far;",
    "    long max_so_far = a[0];\n    long curr_max = a[0];\n\n    for (long i = 1; i < size; i++) {\n        curr_max = std::max(a[i], curr_max+a[i]);\n        max_so_far = std::max(max_so_far, curr_max);\n    }\n    return max_so_far;",
    "    long max_so_far = a[0];\n    long curr_max = a[0];\n\n    for (long i = 1; i < size; i++) {\n        curr_max = std::max(a[i], curr_max+a[i]);\n        max_so_far = std::max(max_so_far, curr_max);\n    }\n    return max_so_far;",
    "    long max_so_far = a[0];\n    long curr_max = a[0];\n    for (long i = 1; i < size; i++) {\n        curr_max = std::max(a[i], curr_max+a[i]);\n        max_so_far = std::max(max_so_far, curr_max);\n    }\n    return max_so_far;",
    "    long max_so_far = a[0];\n    long curr_max = a[0];\n\n    for (int i = 1; i < size; i++) {\n        curr_max = std::max(a[i], curr_max+a[i]);\n        max_so_far = std::max(max_so_far, curr_max);\n    }\n    return max_so_far;",
    "    long max_so_far = a[0];\n    long curr_max = a[0];\n    for (long i = 1; i < size; i++) {\n        curr_max = std::max(a[i], curr_max + a[i]);\n        max_so_far = std::max(max_so_far, curr_max);\n    }\n    return max_so_far;",
    "    long max_so_far = a[0];\n    long curr_max = a[0];\n\n    for (long i = 1; i < size; i++) {\n        curr_max = std::max(a[i], curr_max+a[i]);\n        max_so_far = std::max(max_so_far, curr_max);\n    }\n    return max_so_far;",
    "    long max_so_far = a[0];\n    long curr_max = a[0];\n    for (long i = 1; i < size; i++) {\n        curr_max = std::max(a[i], curr_max+a[i]);\n        max_so_far = std::max(max_so_far, curr_max);\n    }\n    return max_so_far;",
    "    long max_so_far = a[0];\n    long curr_max = a[0];\n    for (long i = 1; i < size; i++) {\n        curr_max = std::max(a[i], curr_max+a[i]);\n        max_so_far = std::max(max_so_far, curr_max);\n    }\n    return max_so_far;",
    "    long max_so_far = a[0];\n    long curr_max = a[0];\n\n    for (long i = 1; i < size; i++) {\n        curr_max = std::max(a[i], curr_max + a[i]);\n        max_so_far = std::max(max_so_far, curr_max);\n    }\n    return max_so_far;",
    "    long max_so_far = a[0];\n    long curr_max = a[0];\n\n    for (long i = 1; i < size; i++) {\n        curr_max = std::max(a[i], curr_max+a[i]);\n        max_so_far = std::max(max_so_far, curr_max);\n    }\n    return max_so_far;",
    "    long max_so_far = a[0];\n    long curr_max = a[0];\n\n    for (long i = 1; i < size; i++) {\n        curr_max = std::max(a[i], curr_max + a[i]);\n        max_so_far = std::max(max_so_far, curr_max);\n    }\n    return max_so_far;",
    "    long max_so_far = a[0];\n    long curr_max = a[0];\n\n    for (long i = 1; i < size; i++) {\n        curr_max = std::max(a[i], curr_max+a[i]);\n        max_so_far = std::max(max_so_far, curr_max);\n    }\n    return max_so_far;",
    "    long max_so_far = a[0];\n    long curr_max = a[0];\n\n    for (long i = 1; i < size; i++) {\n        curr_max = std::max(a[i], curr_max+a[i]);\n        max_so_far = std::max(max_so_far, curr_max);\n    }\n    return max_so_far;",
    "    long max_so_far = a[0];\n    long curr_max = a[0];\n\n    for (long i = 1; i < size; i++) {\n        curr_max = std::max(a[i], curr_max+a[i]);\n        max_so_far = std::max(max_so_far, curr_max);\n    }\n    return max_so_far;",
    "    long max_so_far = a[0];\n    long curr_max = a[0];\n    for (long i = 1; i < size; i++) {\n        curr_max = std::max(a[i], curr_max + a[i]);\n        max_so_far = std::max(max_so_far, curr_max);\n    }\n    return max_so_far;",
    "    long max_so_far = a[0];\n    long curr_max = a[0];\n    for (long i = 1; i < size; i++) {\n        curr_max = std::max(a[i], curr_max + a[i]);\n        max_so_far = std::max(max_so_far, curr_max);\n    }\n    return max_so_far;",
    "    long max_so_far = a[0];\n    long curr_max = a[0];\n\n    for (long i = 1; i < size; i++) {\n        curr_max = std::max(a[i], curr_max + a[i]);\n        max_so_far = std::max(max_so_far, curr_max);\n    }\n    return max_so_far;",
    "    long max_so_far = a[0];\n    long curr_max = a[0];\n    for (long i = 1; i < size; i++) {\n        curr_max = std::max(a[i], curr_max + a[i]);\n        max_so_far = std::max(max_so_far, curr_max);\n    }\n    return max_so_far;",
    "    long max_so_far = a[0];\n    long curr_max = a[0];\n\n    for (long i = 1; i < size; i++) {\n        curr_max = std::max(a[i], curr_max+a[i]);\n        max_so_far = std::max(max_so_far, curr_max);\n    }\n    return max_so_far;",
    "    long max_so_far = a[0];\n    long curr_max = a[0];\n    for (long i = 1; i < size; i++) {\n        curr_max = std::max(a[i], curr_max+a[i]);\n        max_so_far = std::max(max_so_far, curr_max);\n    }\n    return max_so_far;",
    "    long max_so_far = a[0];\n    long curr_max = a[0];\n    for (long i = 1; i < size; i++) {\n        curr_max = std::max(a[i], curr_max + a[i]);\n        max_so_far = std::max(max_so_far, curr_max);\n    }\n    return max_so_far;",
    "    long max_so_far = a[0];\n    long curr_max = a[0];\n    for (long i = 1; i < size; i++) {\n        curr_max = std::max(a[i], curr_max+a[i]);\n        max_so_far = std::max(max_so_far, curr_max);\n    }\n    return max_so_far;",
    "    long max_so_far = a[0];\n    long curr_max = a[0];\n\n    for (long i = 1; i < size; i++) {\n        curr_max = std::max(a[i], curr_max+a[i]);\n        max_so_far = std::max(max_so_far, curr_max);\n    }\n    return max_so_far;",
    "    long max_so_far = a[0];\n    long curr_max = a[0];\n\n    for (long i = 1; i < size; i++) {\n        curr_max = std::max(a[i], curr_max+a[i]);\n        max_so_far = std::max(max_so_far, curr_max);\n    }\n    return max_so_far;",
    "    long max_so_far = a[0];\n    long curr_max = a[0];\n\n    for (long i = 1; i < size; i++) {\n        curr_max = std::max(a[i], curr_max + a[i]);\n        max_so_far = std::max(max_so_far, curr_max);\n    }\n    return max_so_far;",
    "    long max_so_far = a[0];\n    long curr_max = a[0];\n\n    for (long i = 1; i < size; i++) {\n        curr_max = std::max(a[i], curr_max+a[i]);\n        max_so_far = std::max(max_so_far, curr_max);\n    }\n    return max_so_far;",
    "    long max_so_far = a[0];\n    long curr_max = a[0];\n\n    for (long i = 1; i < size; i++) {\n        curr_max = std::max(a[i], curr_max + a[i]);\n        max_so_far = std::max(max_so_far, curr_max);\n    }\n    return max_so_far;",
    "    long max_so_far = INT_MIN, max_ending_here = 0;\n    for (long i = 0; i < size; i++) {\n        max_ending_here = max_ending_here + a[i];\n        if (max_so_far < max_ending_here)\n            max_so_far = max_ending_here;\n        if (max_ending_here < 0)\n            max_ending_here = 0;\n    }\n    return max_so_far;",
    "    long max_so_far = a[0];\n    long curr_max = a[0];\n\n    for (long i = 1; i < size; i++) {\n        curr_max = std::max(a[i], curr_max+a[i]);\n        max_so_far = std::max(max_so_far, curr_max);\n    }\n    return max_so_far;",
    "    long max_so_far = a[0];\n    long curr_max = a[0];\n\n    for (long i = 1; i < size; i++) {\n        curr_max = std::max(a[i], curr_max+a[i]);\n        max_so_far = std::max(max_so_far, curr_max);\n    }\n    return max_so_far;",
    "    long max_so_far = a[0];\n    long curr_max = a[0];\n\n    for (long i = 1; i < size; i++) {\n        curr_max = std::max(a[i], curr_max + a[i]);\n        max_so_far = std::max(max_so_far, curr_max);\n    }\n    return max_so_far;",
    "    long max_so_far = a[0];\n    long curr_max = a[0];\n    for (int i = 1; i < size; i++) {\n        curr_max = std::max(a[i], curr_max+a[i]);\n        max_so_far = std::max(max_so_far, curr_max);\n    }\n    return max_so_far;",
    "    long max_so_far = a[0];\n    long curr_max = a[0];\n    for (long i = 1; i < size; i++) {\n        curr_max = std::max(a[i], curr_max + a[i]);\n        max_so_far = std::max(max_so_far, curr_max);\n    }\n    return max_so_far;",
    "    long max_so_far = a[0];\n    long curr_max = a[0];\n\n    for (long i = 1; i < size; i++) {\n        curr_max = std::max(a[i], curr_max + a[i]);\n        max_so_far = std::max(max_so_far, curr_max);\n    }\n    return max_so_far;",
    "    long max_so_far = a[0];\n    long curr_max = a[0];\n    for (long i = 1; i < size; i++) {\n        curr_max = std::max(a[i], curr_max+a[i]);\n        max_so_far = std::max(max_so_far, curr_max);\n    }\n    return max_so_far;",
    "    long max_so_far = a[0];\n    long curr_max = a[0];\n    for (long i = 1; i < size; i++) {\n        curr_max = std::max(a[i], curr_max+a[i]);\n        max_so_far = std::max(max_so_far, curr_max);\n    }\n    return max_so_far;",
    "    long max_so_far = a[0];\n    long curr_max = a[0];\n\n    for (long i = 1; i < size; i++) {\n        curr_max = std::max(a[i], curr_max + a[i]);\n        max_so_far = std::max(max_so_far, curr_max);\n    }\n    return max_so_far;",
    "    long max_so_far = a[0];\n    long curr_max = a[0];\n\n    for (long i = 1; i < size; i++) {\n        curr_max = std::max(a[i], curr_max+a[i]);\n        max_so_far = std::max(max_so_far, curr_max);\n    }\n    return max_so_far;",
    "    long max_so_far = a[0];\n    long curr_max = a[0];\n    for (long i = 1; i < size; i++) {\n        curr_max = std::max(a[i], curr_max+a[i]);\n        max_so_far = std::max(max_so_far, curr_max);\n    }\n    return max_so_far;",
    "    long max_so_far = a[0];\n    long curr_max = a[0];\n    for (long i = 1; i < size; i++) {\n        curr_max = std::max(a[i], curr_max+a[i]);\n        max_so_far = std::max(max_so_far, curr_max);\n    }\n    return max_so_far;",
    "    long max_so_far = a[0];\n    long curr_max = a[0];\n\n    for (long i = 1; i < size; i++) {\n        curr_max = std::max(a[i], curr_max + a[i]);\n        max_so_far = std::max(max_so_far, curr_max);\n    }\n    return max_so_far;",
    "    long max_so_far = a[0];\n    long curr_max = a[0];\n    for (long i = 1; i < size; i++) {\n        curr_max = std::max(a[i], curr_max + a[i]);\n        max_so_far = std::max(max_so_far, curr_max);\n    }\n    return max_so_far;",
    "    long max_so_far = a[0];\n    long curr_max = a[0];\n\n    for (long i = 1; i < size; i++) {\n        curr_max = std::max(a[i], curr_max+a[i]);\n        max_so_far = std::max(max_so_far, curr_max);\n    }\n    return max_so_far;",
    "    long max_so_far = a[0];\n    long curr_max = a[0];\n\n    for (long i = 1; i < size; i++) {\n        curr_max = std::max(a[i], curr_max + a[i]);\n        max_so_far = std::max(max_so_far, curr_max);\n    }\n    return max_so_far;",
    "    long max_so_far = a[0];\n    long curr_max = a[0];\n    for (long i = 1; i < size; i++) {\n        curr_max = std::max(a[i], curr_max + a[i]);\n        max_so_far = std::max(max_so_far, curr_max);\n    }\n    return max_so_far;",
    "    long max_so_far = a[0];\n    long curr_max = a[0];\n    for (long i = 1; i < size; i++) {\n        curr_max = std::max(a[i], curr_max + a[i]);\n        max_so_far = std::max(max_so_far, curr_max);\n    }\n    return max_so_far;",
    "    long max_so_far = a[0];\n    long curr_max = a[0];\n \n    for (long i = 1; i < size; i++) {\n        curr_max = std::max(a[i], curr_max+a[i]);\n        max_so_far = std::max(max_so_far, curr_max);\n    }\n    return max_so_far;",
    "    long max_so_far = a[0];\n    long curr_max = a[0];\n\n    for (long i = 1; i < size; i++) {\n        curr_max = std::max(a[i], curr_max+a[i]);\n        max_so_far = std::max(max_so_far, curr_max);\n    }\n    return max_so_far;",
    "    long max_so_far = a[0];\n    long curr_max = a[0];\n    for (long i = 1; i < size; i++) {\n        curr_max = std::max(a[i], curr_max+a[i]);\n        max_so_far = std::max(max_so_far, curr_max);\n    }\n    return max_so_far;",
    "    long max_so_far = a[0];\n    long curr_max = a[0];\n    for (long i = 1; i < size; i++) {\n        curr_max = std::max(a[i], curr_max + a[i]);\n        max_so_far = std::max(max_so_far, curr_max);\n    }\n    return max_so_far;",
    "    long max_so_far = a[0];\n    long curr_max = a[0];\n\n    for (long i = 1; i < size; i++) {\n        curr_max = std::max(a[i], curr_max+a[i]);\n        max_so_far = std::max(max_so_far, curr_max);\n    }\n    return max_so_far;"
  ]
}
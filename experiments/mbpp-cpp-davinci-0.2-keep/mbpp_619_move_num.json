{
  "name": "mbpp_619_move_num",
  "language": "cpp",
  "prompt": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to move all the numbers to the end of the given string.\nstd::string move_num(std::string test_str) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_619_move_num.py",
  "prompt_terminology": "verbatim",
  "tests": "}\nint main() {\n    auto candidate = move_num;\n    assert(candidate((\"I1love143you55three3000thousand\")) == (\"Iloveyouthreethousand1143553000\"));\n    assert(candidate((\"Avengers124Assemble\")) == (\"AvengersAssemble124\"));\n    assert(candidate((\"Its11our12path13to14see15things16do17things\")) == (\"Itsourpathtoseethingsdothings11121314151617\"));\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    std::string result;\n    for (int i = 0; i < test_str.length(); i++) {\n        if (test_str[i] >= '0' && test_str[i] <= '9') {\n            result += test_str[i];\n        }\n    }\n    for (int i = 0; i < test_str.length(); i++) {\n        if (test_str[i] < '0' || test_str[i] > '9') {\n            result += test_str[i];\n        }\n    }\n    return result;",
    "    int i = 0;\n    int j = test_str.size() - 1;\n    while (i < j) {\n        while (i < j && !isdigit(test_str[i])) {\n            i++;\n        }\n        while (i < j && isdigit(test_str[j])) {\n            j--;\n        }\n        if (i < j) {\n            std::swap(test_str[i], test_str[j]);\n            i++;\n            j--;\n        }\n    }\n    return test_str;",
    "    int i = 0;\n    int j = test_str.length() - 1;\n    while(i < j) {\n        if(test_str[i] >= '0' && test_str[i] <= '9') {\n            if(test_str[j] >= '0' && test_str[j] <= '9') {\n                j--;\n            } else {\n                std::swap(test_str[i], test_str[j]);\n                i++;\n                j--;\n            }\n        } else {\n            i++;\n        }\n    }\n    return test_str;",
    "    int i = 0;\n    int j = test_str.length() - 1;\n    while (i < j) {\n        if (test_str[i] >= '0' && test_str[i] <= '9') {\n            if (test_str[j] >= 'a' && test_str[j] <= 'z') {\n                std::swap(test_str[i], test_str[j]);\n                i++;\n                j--;\n            } else {\n                j--;\n            }\n        } else {\n            i++;\n        }\n    }\n    return test_str;",
    "    int i = 0;\n    int j = test_str.length() - 1;\n    while (i < j) {\n        if (std::isdigit(test_str[i])) {\n            if (std::isalpha(test_str[j])) {\n                std::swap(test_str[i], test_str[j]);\n                i++;\n                j--;\n            } else {\n                j--;\n            }\n        } else {\n            i++;\n        }\n    }\n    return test_str;",
    "    std::string result;\n    for (int i = 0; i < test_str.length(); i++) {\n        if (isdigit(test_str[i])) {\n            result += test_str[i];\n        }\n    }\n    for (int i = 0; i < test_str.length(); i++) {\n        if (!isdigit(test_str[i])) {\n            result += test_str[i];\n        }\n    }\n    return result;",
    "    std::string res;\n    std::string num;\n    for (int i = 0; i < test_str.size(); i++) {\n        if (test_str[i] >= '0' && test_str[i] <= '9') {\n            num += test_str[i];\n        } else {\n            res += test_str[i];\n        }\n    }\n    return res + num;",
    "    int i = 0, j = test_str.length() - 1;\n    while(i < j) {\n        if(!std::isdigit(test_str[i])) {\n            i++;\n            continue;\n        }\n        if(std::isdigit(test_str[j])) {\n            j--;\n            continue;\n        }\n        std::swap(test_str[i], test_str[j]);\n        i++;\n        j--;\n    }\n    return test_str;",
    "    std::string result;\n    for (int i = 0; i < test_str.size(); i++) {\n        if (test_str[i] >= '0' && test_str[i] <= '9') {\n            result += test_str[i];\n        }\n    }\n    for (int i = 0; i < test_str.size(); i++) {\n        if (test_str[i] < '0' || test_str[i] > '9') {\n            result += test_str[i];\n        }\n    }\n    return result;",
    "    std::string result;\n    std::string num;\n    for (int i = 0; i < test_str.size(); i++) {\n        if (isdigit(test_str[i])) {\n            num += test_str[i];\n        } else {\n            result += test_str[i];\n        }\n    }\n    result += num;\n    return result;",
    "    int i = 0;\n    int j = test_str.length() - 1;\n    while (i < j) {\n        if (test_str[i] >= '0' && test_str[i] <= '9') {\n            if (test_str[j] >= '0' && test_str[j] <= '9') {\n                j--;\n            } else {\n                std::swap(test_str[i], test_str[j]);\n                i++;\n                j--;\n            }\n        } else {\n            i++;\n        }\n    }\n    return test_str;",
    "    int len = test_str.length();\n    int i = 0;\n    int j = len - 1;\n    while(i < j) {\n        if(!std::isdigit(test_str[i])) {\n            i++;\n        }\n        else if(std::isdigit(test_str[j])) {\n            j--;\n        }\n        else {\n            std::swap(test_str[i], test_str[j]);\n            i++;\n            j--;\n        }\n    }\n    return test_str;",
    "    int i = 0;\n    int j = test_str.size() - 1;\n    while(i < j) {\n        if(!isdigit(test_str[i])) {\n            i++;\n        } else if(!isdigit(test_str[j])) {\n            j--;\n        } else {\n            std::swap(test_str[i], test_str[j]);\n            i++;\n            j--;\n        }\n    }\n    return test_str;",
    "    int i = 0;\n    int j = test_str.length() - 1;\n    while (i < j) {\n        if (isdigit(test_str[i])) {\n            if (isalpha(test_str[j])) {\n                std::swap(test_str[i], test_str[j]);\n                i++;\n                j--;\n            } else {\n                j--;\n            }\n        } else {\n            i++;\n        }\n    }\n    return test_str;",
    "    int i = 0;\n    int j = test_str.length() - 1;\n    while(i < j) {\n        if(test_str[i] >= '0' && test_str[i] <= '9') {\n            if(test_str[j] >= '0' && test_str[j] <= '9') {\n                j--;\n            } else {\n                std::swap(test_str[i], test_str[j]);\n                i++;\n                j--;\n            }\n        } else {\n            i++;\n        }\n    }\n    return test_str;",
    "    int len = test_str.length();\n    int i = 0;\n    int j = len - 1;\n    while(i < j) {\n        if(test_str[i] >= '0' && test_str[i] <= '9') {\n            if(test_str[j] >= '0' && test_str[j] <= '9') {\n                j--;\n            }\n            else {\n                std::swap(test_str[i], test_str[j]);\n                i++;\n                j--;\n            }\n        }\n        else {\n            i++;\n        }\n    }\n    return test_str;",
    "    int i = 0;\n    int j = test_str.size() - 1;\n    while (i < j) {\n        if (test_str[i] >= '0' && test_str[i] <= '9') {\n            if (test_str[j] < '0' || test_str[j] > '9') {\n                std::swap(test_str[i], test_str[j]);\n                i++;\n                j--;\n            } else {\n                j--;\n            }\n        } else {\n            i++;\n        }\n    }\n    return test_str;",
    "    int i = 0;\n    int j = test_str.length() - 1;\n    while(i < j) {\n        while(i < j && !isdigit(test_str[i])) {\n            i++;\n        }\n        while(i < j && isdigit(test_str[j])) {\n            j--;\n        }\n        if(i < j) {\n            std::swap(test_str[i], test_str[j]);\n            i++;\n            j--;\n        }\n    }\n    return test_str;",
    "    std::string result;\n    std::string num;\n    for (int i = 0; i < test_str.size(); i++) {\n        if (test_str[i] >= '0' && test_str[i] <= '9') {\n            num += test_str[i];\n        } else {\n            result += test_str[i];\n        }\n    }\n    result += num;\n    return result;",
    "    std::string result;\n    for (int i = 0; i < test_str.length(); i++) {\n        if (test_str[i] >= '0' && test_str[i] <= '9') {\n            result += test_str[i];\n        }\n    }\n    for (int i = 0; i < test_str.length(); i++) {\n        if (test_str[i] < '0' || test_str[i] > '9') {\n            result += test_str[i];\n        }\n    }\n    return result;",
    "    std::string result;\n    std::string num;\n    for(int i = 0; i < test_str.length(); i++) {\n        if(test_str[i] >= '0' && test_str[i] <= '9') {\n            num += test_str[i];\n        } else {\n            result += test_str[i];\n        }\n    }\n    result += num;\n    return result;",
    "    std::string result = \"\";\n    std::string nums = \"\";\n    for (int i = 0; i < test_str.length(); i++) {\n        if (test_str[i] >= '0' && test_str[i] <= '9') {\n            nums += test_str[i];\n        } else {\n            result += test_str[i];\n        }\n    }\n    return result + nums;",
    "    std::string result;\n    for(int i = 0; i < test_str.length(); i++) {\n        if(test_str[i] >= '0' && test_str[i] <= '9') {\n            result += test_str[i];\n        }\n    }\n    for(int i = 0; i < test_str.length(); i++) {\n        if(test_str[i] < '0' || test_str[i] > '9') {\n            result += test_str[i];\n        }\n    }\n    return result;",
    "    std::string result = \"\";\n    for(int i = 0; i < test_str.length(); i++) {\n        if(test_str[i] >= '0' && test_str[i] <= '9') {\n            result += test_str[i];\n        }\n    }\n    for(int i = 0; i < test_str.length(); i++) {\n        if(test_str[i] < '0' || test_str[i] > '9') {\n            result += test_str[i];\n        }\n    }\n    return result;",
    "    std::string result;\n    for(int i = 0; i < test_str.size(); i++) {\n        if(test_str[i] >= '0' && test_str[i] <= '9') {\n            result += test_str[i];\n        }\n    }\n    for(int i = 0; i < test_str.size(); i++) {\n        if(test_str[i] < '0' || test_str[i] > '9') {\n            result += test_str[i];\n        }\n    }\n    return result;",
    "    int len = test_str.length();\n    int i = 0;\n    int j = len - 1;\n    while(i < j) {\n        if(test_str[i] >= '0' && test_str[i] <= '9') {\n            if(test_str[j] >= '0' && test_str[j] <= '9') {\n                j--;\n            } else {\n                char temp = test_str[i];\n                test_str[i] = test_str[j];\n                test_str[j] = temp;\n                i++;\n                j--;\n            }\n        } else {\n            i++;\n        }\n    }\n    return test_str;",
    "    int len = test_str.length();\n    int i = 0;\n    int j = len - 1;\n    while(i < j) {\n        if(test_str[i] >= '0' && test_str[i] <= '9') {\n            while(j > i && test_str[j] >= '0' && test_str[j] <= '9') {\n                j--;\n            }\n            if(j > i) {\n                char temp = test_str[i];\n                test_str[i] = test_str[j];\n                test_str[j] = temp;\n            }\n        }\n        i++;\n    }\n    return test_str;",
    "\tstd::string result = \"\";\n\tstd::string num_str = \"\";\n\tfor (int i = 0; i < test_str.length(); i++) {\n\t\tif (test_str[i] >= '0' && test_str[i] <= '9') {\n\t\t\tnum_str += test_str[i];\n\t\t}\n\t\telse {\n\t\t\tresult += test_str[i];\n\t\t}\n\t}\n\tresult += num_str;\n\treturn result;",
    "    std::string result;\n    for(int i = 0; i < test_str.length(); i++) {\n        if(test_str[i] >= '0' && test_str[i] <= '9') {\n            result += test_str[i];\n        }\n    }\n    for(int i = 0; i < test_str.length(); i++) {\n        if(test_str[i] < '0' || test_str[i] > '9') {\n            result += test_str[i];\n        }\n    }\n    return result;",
    "    std::string result;\n    for(int i = 0; i < test_str.length(); i++) {\n        if(test_str[i] >= '0' && test_str[i] <= '9') {\n            result += test_str[i];\n        }\n    }\n    for(int i = 0; i < test_str.length(); i++) {\n        if(test_str[i] < '0' || test_str[i] > '9') {\n            result += test_str[i];\n        }\n    }\n    return result;",
    "    std::string result;\n    std::string num_str;\n    for (int i = 0; i < test_str.length(); i++) {\n        if (test_str[i] >= '0' && test_str[i] <= '9') {\n            num_str.push_back(test_str[i]);\n        } else {\n            result.push_back(test_str[i]);\n        }\n    }\n    result.append(num_str);\n    return result;",
    "    std::string result = \"\";\n    for (int i = 0; i < test_str.length(); i++) {\n        if (isdigit(test_str[i])) {\n            result += test_str[i];\n        }\n    }\n    for (int i = 0; i < test_str.length(); i++) {\n        if (!isdigit(test_str[i])) {\n            result += test_str[i];\n        }\n    }\n    return result;",
    "    std::string result;\n    std::string num_str;\n    for (int i = 0; i < test_str.length(); i++) {\n        if (test_str[i] >= '0' && test_str[i] <= '9') {\n            num_str += test_str[i];\n        } else {\n            result += test_str[i];\n        }\n    }\n    result += num_str;\n    return result;",
    "    int i = 0;\n    int j = test_str.length() - 1;\n    while (i < j) {\n        if (test_str[i] >= '0' && test_str[i] <= '9') {\n            if (test_str[j] < '0' || test_str[j] > '9') {\n                std::swap(test_str[i], test_str[j]);\n                i++;\n                j--;\n            } else {\n                j--;\n            }\n        } else {\n            i++;\n        }\n    }\n    return test_str;",
    "    int i = 0;\n    int j = test_str.length() - 1;\n    while (i < j) {\n        if (test_str[i] >= '0' && test_str[i] <= '9') {\n            if (test_str[j] >= '0' && test_str[j] <= '9') {\n                j--;\n            } else {\n                std::swap(test_str[i], test_str[j]);\n                i++;\n                j--;\n            }\n        } else {\n            i++;\n        }\n    }\n    return test_str;",
    "    std::string result = \"\";\n    std::string num = \"\";\n    for (int i = 0; i < test_str.size(); i++) {\n        if (isdigit(test_str[i])) {\n            num += test_str[i];\n        } else {\n            result += test_str[i];\n        }\n    }\n    result += num;\n    return result;",
    "    std::string result = \"\";\n    for(int i = 0; i < test_str.length(); i++) {\n        if(test_str[i] >= 'a' && test_str[i] <= 'z') {\n            result += test_str[i];\n        }\n    }\n    for(int i = 0; i < test_str.length(); i++) {\n        if(test_str[i] >= '0' && test_str[i] <= '9') {\n            result += test_str[i];\n        }\n    }\n    return result;",
    "    std::string result;\n    std::string num;\n    for (auto i : test_str) {\n        if (i >= '0' && i <= '9') {\n            num += i;\n        } else {\n            result += i;\n        }\n    }\n    result += num;\n    return result;",
    "    std::string result;\n    for (int i = 0; i < test_str.length(); i++) {\n        if (std::isdigit(test_str[i])) {\n            result += test_str[i];\n        }\n    }\n    for (int i = 0; i < test_str.length(); i++) {\n        if (!std::isdigit(test_str[i])) {\n            result += test_str[i];\n        }\n    }\n    return result;",
    "    std::string result;\n    for (int i = 0; i < test_str.length(); i++) {\n        if (test_str[i] >= '0' && test_str[i] <= '9') {\n            result += test_str[i];\n        }\n    }\n    for (int i = 0; i < test_str.length(); i++) {\n        if (test_str[i] < '0' || test_str[i] > '9') {\n            result += test_str[i];\n        }\n    }\n    return result;",
    "    int i = 0;\n    int j = test_str.length() - 1;\n    while (i < j) {\n        if (isdigit(test_str[i]) && isalpha(test_str[j])) {\n            std::swap(test_str[i], test_str[j]);\n            i++;\n            j--;\n        } else if (isdigit(test_str[i])) {\n            j--;\n        } else {\n            i++;\n        }\n    }\n    return test_str;",
    "    int len = test_str.length();\n    int i = 0;\n    int j = len - 1;\n    while(i < j) {\n        if(test_str[i] >= '0' && test_str[i] <= '9') {\n            if(test_str[j] >= '0' && test_str[j] <= '9') {\n                j--;\n            } else {\n                std::swap(test_str[i], test_str[j]);\n                i++;\n                j--;\n            }\n        } else {\n            i++;\n        }\n    }\n    return test_str;",
    "    std::string result;\n    for(int i = 0; i < test_str.length(); i++) {\n        if(test_str[i] >= '0' && test_str[i] <= '9') {\n            result.push_back(test_str[i]);\n        }\n    }\n    for(int i = 0; i < test_str.length(); i++) {\n        if(test_str[i] < '0' || test_str[i] > '9') {\n            result.push_back(test_str[i]);\n        }\n    }\n    return result;",
    "    std::string result;\n    std::string num;\n    for (int i = 0; i < test_str.length(); i++) {\n        if (test_str[i] >= '0' && test_str[i] <= '9') {\n            num += test_str[i];\n        } else {\n            result += test_str[i];\n        }\n    }\n    result += num;\n    return result;",
    "    std::string result = \"\";\n    std::string num = \"\";\n    for(int i = 0; i < test_str.length(); i++) {\n        if(test_str[i] >= '0' && test_str[i] <= '9') {\n            num += test_str[i];\n        } else {\n            result += test_str[i];\n        }\n    }\n    return result + num;",
    "    std::string result;\n    for (int i = 0; i < test_str.length(); i++) {\n        if (test_str[i] >= '0' && test_str[i] <= '9') {\n            result += test_str[i];\n        }\n    }\n    for (int i = 0; i < test_str.length(); i++) {\n        if (test_str[i] < '0' || test_str[i] > '9') {\n            result += test_str[i];\n        }\n    }\n    return result;",
    "    int i = 0;\n    int j = test_str.length() - 1;\n    while(i < j) {\n        while(i < j && !isdigit(test_str[i])) {\n            i++;\n        }\n        while(i < j && !isalpha(test_str[j])) {\n            j--;\n        }\n        if(i < j) {\n            std::swap(test_str[i], test_str[j]);\n            i++;\n            j--;\n        }\n    }\n    return test_str;",
    "    int i = 0;\n    int j = test_str.size() - 1;\n    while (i < j) {\n        if (test_str[i] >= '0' && test_str[i] <= '9') {\n            if (test_str[j] >= 'a' && test_str[j] <= 'z') {\n                std::swap(test_str[i], test_str[j]);\n                i++;\n                j--;\n            } else {\n                j--;\n            }\n        } else {\n            i++;\n        }\n    }\n    return test_str;",
    "    std::string result;\n    std::string num_str;\n    for(int i = 0; i < test_str.length(); i++) {\n        if(test_str[i] >= '0' && test_str[i] <= '9') {\n            num_str += test_str[i];\n        } else {\n            result += test_str[i];\n        }\n    }\n    result += num_str;\n    return result;",
    "    int i = 0;\n    int j = test_str.size() - 1;\n    while (i < j) {\n        if (test_str[i] >= '0' && test_str[i] <= '9') {\n            if (test_str[j] >= '0' && test_str[j] <= '9') {\n                j--;\n            } else {\n                std::swap(test_str[i], test_str[j]);\n                i++;\n                j--;\n            }\n        } else {\n            i++;\n        }\n    }\n    return test_str;",
    "    int i = 0;\n    int j = test_str.length() - 1;\n    while (i < j) {\n        if (test_str[i] >= '0' && test_str[i] <= '9') {\n            if (test_str[j] >= '0' && test_str[j] <= '9') {\n                j--;\n            } else {\n                std::swap(test_str[i], test_str[j]);\n                i++;\n                j--;\n            }\n        } else {\n            i++;\n        }\n    }\n    return test_str;",
    "    std::string result = \"\";\n    std::string num_str = \"\";\n    for (int i = 0; i < test_str.length(); i++) {\n        if (test_str[i] >= '0' && test_str[i] <= '9') {\n            num_str += test_str[i];\n        }\n        else {\n            result += test_str[i];\n        }\n    }\n    result += num_str;\n    return result;",
    "    std::string result;\n    std::string nums;\n    for (int i = 0; i < test_str.size(); i++) {\n        if (test_str[i] >= '0' && test_str[i] <= '9') {\n            nums.push_back(test_str[i]);\n        } else {\n            result.push_back(test_str[i]);\n        }\n    }\n    result.append(nums);\n    return result;",
    "    int i = 0;\n    int j = test_str.size() - 1;\n    while(i < j) {\n        if(test_str[i] >= '0' && test_str[i] <= '9') {\n            if(test_str[j] >= 'a' && test_str[j] <= 'z') {\n                std::swap(test_str[i], test_str[j]);\n                i++;\n                j--;\n            } else {\n                j--;\n            }\n        } else {\n            i++;\n        }\n    }\n    return test_str;",
    "    std::string result = \"\";\n    for (int i = 0; i < test_str.length(); i++) {\n        if (test_str[i] >= '0' && test_str[i] <= '9') {\n            result += test_str[i];\n        }\n    }\n    for (int i = 0; i < test_str.length(); i++) {\n        if (test_str[i] < '0' || test_str[i] > '9') {\n            result += test_str[i];\n        }\n    }\n    return result;",
    "    int i = 0;\n    int j = test_str.length() - 1;\n    while (i < j) {\n        if (test_str[i] >= '0' && test_str[i] <= '9') {\n            if (test_str[j] >= '0' && test_str[j] <= '9') {\n                j--;\n            } else {\n                std::swap(test_str[i], test_str[j]);\n                i++;\n                j--;\n            }\n        } else {\n            i++;\n        }\n    }\n    return test_str;",
    "    std::string result = \"\";\n    std::string num = \"\";\n    for (int i = 0; i < test_str.size(); i++) {\n        if (test_str[i] >= '0' && test_str[i] <= '9') {\n            num += test_str[i];\n        } else {\n            result += test_str[i];\n        }\n    }\n    result += num;\n    return result;",
    "    std::string result = \"\";\n    std::string num = \"\";\n    for (int i = 0; i < test_str.length(); i++) {\n        if (test_str[i] >= '0' && test_str[i] <= '9') {\n            num += test_str[i];\n        } else {\n            result += test_str[i];\n        }\n    }\n    result += num;\n    return result;",
    "    std::string result = \"\";\n    for(int i = 0; i < test_str.length(); i++) {\n        if(test_str[i] >= '0' && test_str[i] <= '9') {\n            result += test_str[i];\n        }\n    }\n    for(int i = 0; i < test_str.length(); i++) {\n        if(test_str[i] < '0' || test_str[i] > '9') {\n            result += test_str[i];\n        }\n    }\n    return result;",
    "    int len = test_str.length();\n    int i = 0;\n    int j = len - 1;\n    while(i < j) {\n        if(test_str[i] >= '0' && test_str[i] <= '9') {\n            if(test_str[j] >= '0' && test_str[j] <= '9') {\n                j--;\n            } else {\n                std::swap(test_str[i], test_str[j]);\n                i++;\n                j--;\n            }\n        } else {\n            i++;\n        }\n    }\n    return test_str;",
    "    int len = test_str.length();\n    int i = 0, j = len - 1;\n    while (i < j) {\n        if (test_str[i] >= '0' && test_str[i] <= '9') {\n            if (test_str[j] >= '0' && test_str[j] <= '9') {\n                j--;\n            } else {\n                std::swap(test_str[i], test_str[j]);\n                i++;\n                j--;\n            }\n        } else {\n            i++;\n        }\n    }\n    return test_str;",
    "  std::string result = \"\";\n  std::string num_str = \"\";\n  for (int i = 0; i < test_str.length(); i++) {\n    if (test_str[i] >= '0' && test_str[i] <= '9') {\n      num_str += test_str[i];\n    } else {\n      result += test_str[i];\n    }\n  }\n  result += num_str;\n  return result;",
    "    std::string result;\n    for (int i = 0; i < test_str.length(); i++) {\n        if (test_str[i] >= '0' && test_str[i] <= '9') {\n            result += test_str[i];\n        }\n    }\n    for (int i = 0; i < test_str.length(); i++) {\n        if (test_str[i] < '0' || test_str[i] > '9') {\n            result += test_str[i];\n        }\n    }\n    return result;",
    "    std::string result = \"\";\n    std::string num_str = \"\";\n    for (int i = 0; i < test_str.size(); i++) {\n        if (test_str[i] >= '0' && test_str[i] <= '9') {\n            num_str += test_str[i];\n        } else {\n            result += test_str[i];\n        }\n    }\n    result += num_str;\n    return result;",
    "    std::string result;\n    for (int i = 0; i < test_str.length(); i++) {\n        if (test_str[i] >= '0' && test_str[i] <= '9') {\n            result += test_str[i];\n        }\n    }\n    for (int i = 0; i < test_str.length(); i++) {\n        if (test_str[i] < '0' || test_str[i] > '9') {\n            result += test_str[i];\n        }\n    }\n    return result;",
    "    std::string num_str;\n    std::string alpha_str;\n    for (int i = 0; i < test_str.length(); i++) {\n        if (isdigit(test_str[i])) {\n            num_str += test_str[i];\n        } else {\n            alpha_str += test_str[i];\n        }\n    }\n    return alpha_str + num_str;",
    "  std::string num_str = \"\";\n  std::string char_str = \"\";\n  for (int i = 0; i < test_str.size(); i++) {\n    if (isdigit(test_str[i])) {\n      num_str += test_str[i];\n    } else {\n      char_str += test_str[i];\n    }\n  }\n  return char_str + num_str;",
    "    int i = 0;\n    int j = test_str.length() - 1;\n    while (i < j) {\n        if (test_str[i] >= '0' && test_str[i] <= '9') {\n            if (test_str[j] >= 'a' && test_str[j] <= 'z') {\n                std::swap(test_str[i], test_str[j]);\n                i++;\n                j--;\n            } else {\n                j--;\n            }\n        } else {\n            i++;\n        }\n    }\n    return test_str;",
    "    std::string result = \"\";\n    std::string nums = \"\";\n    for (int i = 0; i < test_str.length(); i++) {\n        if (test_str[i] >= '0' && test_str[i] <= '9') {\n            nums += test_str[i];\n        } else {\n            result += test_str[i];\n        }\n    }\n    return result + nums;",
    "    int i = 0;\n    int j = test_str.length() - 1;\n    while(i < j) {\n        if(!isdigit(test_str[i])) {\n            i++;\n            continue;\n        }\n        if(isdigit(test_str[j])) {\n            j--;\n            continue;\n        }\n        std::swap(test_str[i], test_str[j]);\n        i++;\n        j--;\n    }\n    return test_str;",
    "    std::string result = \"\";\n    for (int i = 0; i < test_str.length(); i++) {\n        if (test_str[i] >= '0' && test_str[i] <= '9') {\n            result += test_str[i];\n        }\n    }\n    for (int i = 0; i < test_str.length(); i++) {\n        if (test_str[i] < '0' || test_str[i] > '9') {\n            result += test_str[i];\n        }\n    }\n    return result;",
    "    std::string result;\n    std::string num;\n    for (int i = 0; i < test_str.length(); i++) {\n        if (test_str[i] >= '0' && test_str[i] <= '9') {\n            num += test_str[i];\n        } else {\n            result += test_str[i];\n        }\n    }\n    result += num;\n    return result;",
    "    int i = 0;\n    int j = test_str.length() - 1;\n    while (i < j) {\n        if (test_str[i] >= '0' && test_str[i] <= '9') {\n            if (test_str[j] >= '0' && test_str[j] <= '9') {\n                j--;\n            } else {\n                std::swap(test_str[i], test_str[j]);\n                i++;\n                j--;\n            }\n        } else {\n            i++;\n        }\n    }\n    return test_str;",
    "    std::string result = \"\";\n    std::string num = \"\";\n    for (int i = 0; i < test_str.size(); i++) {\n        if (test_str[i] >= '0' && test_str[i] <= '9') {\n            num += test_str[i];\n        } else {\n            result += test_str[i];\n        }\n    }\n    result += num;\n    return result;",
    "    std::string result;\n    std::string num;\n    for (int i = 0; i < test_str.length(); i++) {\n        if (isdigit(test_str[i])) {\n            num += test_str[i];\n        } else {\n            result += test_str[i];\n        }\n    }\n    result += num;\n    return result;",
    "    std::string result = \"\";\n    for (int i = 0; i < test_str.length(); i++) {\n        if (test_str[i] >= '0' && test_str[i] <= '9') {\n            result += test_str[i];\n        }\n    }\n    for (int i = 0; i < test_str.length(); i++) {\n        if (test_str[i] < '0' || test_str[i] > '9') {\n            result += test_str[i];\n        }\n    }\n    return result;",
    "    int i = 0;\n    int j = test_str.length() - 1;\n    while (i < j) {\n        if (test_str[i] >= '0' && test_str[i] <= '9') {\n            if (test_str[j] >= 'a' && test_str[j] <= 'z') {\n                std::swap(test_str[i], test_str[j]);\n                i++;\n                j--;\n            } else {\n                j--;\n            }\n        } else {\n            i++;\n        }\n    }\n    return test_str;",
    "    std::string result;\n    for(int i = 0; i < test_str.size(); i++) {\n        if(test_str[i] >= '0' && test_str[i] <= '9') {\n            result += test_str[i];\n        }\n    }\n    for(int i = 0; i < test_str.size(); i++) {\n        if(test_str[i] < '0' || test_str[i] > '9') {\n            result += test_str[i];\n        }\n    }\n    return result;",
    "    int len = test_str.length();\n    int i = 0;\n    int j = len - 1;\n    while (i < j) {\n        if (test_str[i] >= '0' && test_str[i] <= '9') {\n            while (j > i && (test_str[j] < '0' || test_str[j] > '9')) {\n                j--;\n            }\n            if (j > i) {\n                std::swap(test_str[i], test_str[j]);\n            }\n        }\n        i++;\n    }\n    return test_str;",
    "    std::string result;\n    std::string num;\n    for (int i = 0; i < test_str.length(); i++) {\n        if (test_str[i] >= '0' && test_str[i] <= '9') {\n            num += test_str[i];\n        } else {\n            result += test_str[i];\n        }\n    }\n    result += num;\n    return result;",
    "    std::string result = \"\";\n    int i = 0;\n    while (i < test_str.length()) {\n        if (isdigit(test_str[i])) {\n            result += test_str[i];\n        }\n        i++;\n    }\n    i = 0;\n    while (i < test_str.length()) {\n        if (!isdigit(test_str[i])) {\n            result += test_str[i];\n        }\n        i++;\n    }\n    return result;",
    "    int i = 0;\n    int j = test_str.length() - 1;\n    while(i < j) {\n        if(test_str[i] >= '0' && test_str[i] <= '9') {\n            if(test_str[j] < '0' || test_str[j] > '9') {\n                std::swap(test_str[i], test_str[j]);\n                i++;\n                j--;\n            } else {\n                j--;\n            }\n        } else {\n            i++;\n        }\n    }\n    return test_str;",
    "    std::string result;\n    int i = 0;\n    while(test_str[i] != '\\0') {\n        if(test_str[i] >= '0' && test_str[i] <= '9') {\n            result.push_back(test_str[i]);\n        }\n        i++;\n    }\n    i = 0;\n    while(test_str[i] != '\\0') {\n        if(test_str[i] < '0' || test_str[i] > '9') {\n            result.push_back(test_str[i]);\n        }\n        i++;\n    }\n    return result;",
    "    std::string result;\n    for(int i = 0; i < test_str.size(); i++) {\n        if(test_str[i] >= '0' && test_str[i] <= '9') {\n            result += test_str[i];\n        }\n    }\n    for(int i = 0; i < test_str.size(); i++) {\n        if(test_str[i] < '0' || test_str[i] > '9') {\n            result += test_str[i];\n        }\n    }\n    return result;",
    "    int i = 0, j = test_str.size() - 1;\n    while(i < j) {\n        if(test_str[i] >= '0' && test_str[i] <= '9') {\n            if(test_str[j] >= 'a' && test_str[j] <= 'z') {\n                std::swap(test_str[i], test_str[j]);\n                i++;\n                j--;\n            } else {\n                j--;\n            }\n        } else {\n            i++;\n        }\n    }\n    return test_str;",
    "    std::string num_str;\n    std::string alpha_str;\n    for (auto i : test_str) {\n        if (i >= '0' && i <= '9') {\n            num_str += i;\n        } else {\n            alpha_str += i;\n        }\n    }\n    return alpha_str + num_str;",
    "    int i = 0;\n    int j = test_str.length() - 1;\n    while(i < j) {\n        if(test_str[i] >= '0' && test_str[i] <= '9') {\n            if(test_str[j] >= '0' && test_str[j] <= '9') {\n                j--;\n            } else {\n                std::swap(test_str[i], test_str[j]);\n                i++;\n                j--;\n            }\n        } else {\n            i++;\n        }\n    }\n    return test_str;",
    "    int i = 0;\n    int j = test_str.length() - 1;\n    while (i < j) {\n        if (test_str[i] >= '0' && test_str[i] <= '9') {\n            if (test_str[j] >= 'a' && test_str[j] <= 'z') {\n                std::swap(test_str[i], test_str[j]);\n                i++;\n                j--;\n            } else {\n                j--;\n            }\n        } else {\n            i++;\n        }\n    }\n    return test_str;",
    "    std::string result;\n    for (int i = 0; i < test_str.length(); i++) {\n        if (test_str[i] >= '0' && test_str[i] <= '9') {\n            result += test_str[i];\n        }\n    }\n    for (int i = 0; i < test_str.length(); i++) {\n        if (test_str[i] < '0' || test_str[i] > '9') {\n            result += test_str[i];\n        }\n    }\n    return result;",
    "    std::string result;\n    for (int i = 0; i < test_str.size(); i++) {\n        if (test_str[i] >= '0' && test_str[i] <= '9') {\n            result += test_str[i];\n        }\n    }\n    for (int i = 0; i < test_str.size(); i++) {\n        if (test_str[i] < '0' || test_str[i] > '9') {\n            result += test_str[i];\n        }\n    }\n    return result;",
    "    int i = 0;\n    int j = test_str.length() - 1;\n    while(i < j) {\n        if(test_str[i] >= '0' && test_str[i] <= '9') {\n            if(test_str[j] >= '0' && test_str[j] <= '9') {\n                j--;\n            } else {\n                std::swap(test_str[i], test_str[j]);\n                i++;\n                j--;\n            }\n        } else {\n            i++;\n        }\n    }\n    return test_str;",
    "    std::string result;\n    std::string num;\n    for (int i = 0; i < test_str.length(); i++) {\n        if (isdigit(test_str[i])) {\n            num += test_str[i];\n        } else {\n            result += test_str[i];\n        }\n    }\n    result += num;\n    return result;",
    "  std::string result;\n  for (int i = 0; i < test_str.size(); i++) {\n    if (isdigit(test_str[i])) {\n      result.push_back(test_str[i]);\n    }\n  }\n  for (int i = 0; i < test_str.size(); i++) {\n    if (!isdigit(test_str[i])) {\n      result.push_back(test_str[i]);\n    }\n  }\n  return result;",
    "    int i = 0;\n    int j = test_str.size() - 1;\n    while (i < j) {\n        if (test_str[i] >= '0' && test_str[i] <= '9') {\n            if (test_str[j] >= '0' && test_str[j] <= '9') {\n                j--;\n            } else {\n                std::swap(test_str[i], test_str[j]);\n                i++;\n                j--;\n            }\n        } else {\n            i++;\n        }\n    }\n    return test_str;",
    "    std::string result;\n    std::string num_str;\n    for(int i=0;i<test_str.length();i++) {\n        if(test_str[i]>='0' && test_str[i]<='9') {\n            num_str+=test_str[i];\n        } else {\n            result+=test_str[i];\n        }\n    }\n    result+=num_str;\n    return result;",
    "    std::string result = \"\";\n    std::string nums = \"\";\n    for (int i = 0; i < test_str.length(); i++) {\n        if (isdigit(test_str[i])) {\n            nums += test_str[i];\n        } else {\n            result += test_str[i];\n        }\n    }\n    return result + nums;",
    "    int len = test_str.length();\n    int i = 0;\n    int j = len - 1;\n    while (i < j) {\n        if (test_str[i] >= '0' && test_str[i] <= '9') {\n            if (test_str[j] >= 'a' && test_str[j] <= 'z') {\n                std::swap(test_str[i], test_str[j]);\n                i++;\n                j--;\n            } else {\n                j--;\n            }\n        } else {\n            i++;\n        }\n    }\n    return test_str;",
    "    int i = 0;\n    int j = test_str.length() - 1;\n    while(i < j) {\n        if(!isdigit(test_str[i])) {\n            i++;\n        } else if(isdigit(test_str[j])) {\n            j--;\n        } else {\n            std::swap(test_str[i], test_str[j]);\n            i++;\n            j--;\n        }\n    }\n    return test_str;",
    "    std::string result;\n    for (int i = 0; i < test_str.length(); i++) {\n        if (isdigit(test_str[i])) {\n            result += test_str[i];\n        }\n    }\n    for (int i = 0; i < test_str.length(); i++) {\n        if (!isdigit(test_str[i])) {\n            result += test_str[i];\n        }\n    }\n    return result;",
    "  int len = test_str.length();\n  int i = 0;\n  int j = len - 1;\n  while (i < j) {\n    if (test_str[i] >= '0' && test_str[i] <= '9') {\n      if (test_str[j] >= '0' && test_str[j] <= '9') {\n        j--;\n      } else {\n        std::swap(test_str[i], test_str[j]);\n        i++;\n        j--;\n      }\n    } else {\n      i++;\n    }\n  }\n  return test_str;",
    "    std::string result;\n    for (int i = 0; i < test_str.length(); i++) {\n        if (test_str[i] >= '0' && test_str[i] <= '9') {\n            result += test_str[i];\n        }\n    }\n    for (int i = 0; i < test_str.length(); i++) {\n        if (test_str[i] >= 'a' && test_str[i] <= 'z') {\n            result += test_str[i];\n        }\n    }\n    return result;",
    "    int len = test_str.length();\n    int i = 0;\n    int j = len - 1;\n    while (i < j) {\n        if (test_str[i] >= '0' && test_str[i] <= '9') {\n            if (test_str[j] >= '0' && test_str[j] <= '9') {\n                j--;\n            }\n            else {\n                std::swap(test_str[i], test_str[j]);\n                i++;\n                j--;\n            }\n        }\n        else {\n            i++;\n        }\n    }\n    return test_str;",
    "    std::string result;\n    std::string num;\n    for (int i = 0; i < test_str.length(); i++) {\n        if (test_str[i] >= '0' && test_str[i] <= '9') {\n            num += test_str[i];\n        } else {\n            result += test_str[i];\n        }\n    }\n    result += num;\n    return result;",
    "    int i = 0, j = test_str.length() - 1;\n    while (i < j) {\n        if (test_str[i] >= '0' && test_str[i] <= '9') {\n            if (test_str[j] >= '0' && test_str[j] <= '9') {\n                j--;\n            } else {\n                std::swap(test_str[i], test_str[j]);\n                i++;\n                j--;\n            }\n        } else {\n            i++;\n        }\n    }\n    return test_str;",
    "    std::string result;\n    for (int i = 0; i < test_str.size(); i++) {\n        if (test_str[i] >= '0' && test_str[i] <= '9') {\n            result += test_str[i];\n        }\n    }\n    for (int i = 0; i < test_str.size(); i++) {\n        if (test_str[i] < '0' || test_str[i] > '9') {\n            result += test_str[i];\n        }\n    }\n    return result;",
    "    int i = 0;\n    int j = test_str.length() - 1;\n    while (i < j) {\n        if (test_str[i] >= '0' && test_str[i] <= '9') {\n            if (test_str[j] >= '0' && test_str[j] <= '9') {\n                j--;\n            } else {\n                std::swap(test_str[i], test_str[j]);\n                i++;\n                j--;\n            }\n        } else {\n            i++;\n        }\n    }\n    return test_str;",
    "    std::string result;\n    for(int i = 0; i < test_str.length(); i++) {\n        if(test_str[i] >= '0' && test_str[i] <= '9') {\n            result += test_str[i];\n        }\n    }\n    for(int i = 0; i < test_str.length(); i++) {\n        if(test_str[i] < '0' || test_str[i] > '9') {\n            result += test_str[i];\n        }\n    }\n    return result;",
    "    int len = test_str.length();\n    int i = 0;\n    int j = len - 1;\n    while (i < j) {\n        if (test_str[i] >= '0' && test_str[i] <= '9') {\n            if (test_str[j] >= '0' && test_str[j] <= '9') {\n                j--;\n            } else {\n                std::swap(test_str[i], test_str[j]);\n                i++;\n                j--;\n            }\n        } else {\n            i++;\n        }\n    }\n    return test_str;",
    "    std::string result;\n    for (int i = 0; i < test_str.size(); i++) {\n        if (test_str[i] >= '0' && test_str[i] <= '9') {\n            result += test_str[i];\n        }\n    }\n    for (int i = 0; i < test_str.size(); i++) {\n        if (test_str[i] < '0' || test_str[i] > '9') {\n            result += test_str[i];\n        }\n    }\n    return result;",
    "    std::string str = \"\";\n    for(int i = 0; i < test_str.length(); i++) {\n        if(test_str[i] >= '0' && test_str[i] <= '9') {\n            str += test_str[i];\n        }\n    }\n    for(int i = 0; i < test_str.length(); i++) {\n        if(test_str[i] < '0' || test_str[i] > '9') {\n            str += test_str[i];\n        }\n    }\n    return str;",
    "    int len = test_str.length();\n    int i = 0;\n    int j = len - 1;\n    while(i < j) {\n        if(test_str[i] >= '0' && test_str[i] <= '9') {\n            if(test_str[j] >= '0' && test_str[j] <= '9') {\n                j--;\n            } else {\n                std::swap(test_str[i], test_str[j]);\n                i++;\n                j--;\n            }\n        } else {\n            i++;\n        }\n    }\n    return test_str;",
    "    std::string result = \"\";\n    for (int i = 0; i < test_str.length(); i++) {\n        if (test_str[i] >= '0' && test_str[i] <= '9') {\n            result += test_str[i];\n        }\n    }\n    for (int i = 0; i < test_str.length(); i++) {\n        if (test_str[i] >= 'a' && test_str[i] <= 'z') {\n            result += test_str[i];\n        }\n    }\n    return result;",
    "    std::string result;\n    for (int i = 0; i < test_str.length(); i++) {\n        if (test_str[i] >= '0' && test_str[i] <= '9') {\n            result += test_str[i];\n        }\n    }\n    for (int i = 0; i < test_str.length(); i++) {\n        if (test_str[i] < '0' || test_str[i] > '9') {\n            result += test_str[i];\n        }\n    }\n    return result;",
    "    std::string result;\n    for(int i = 0; i < test_str.size(); i++) {\n        if(test_str[i] >= '0' && test_str[i] <= '9') {\n            result += test_str[i];\n        }\n    }\n    for(int i = 0; i < test_str.size(); i++) {\n        if(test_str[i] < '0' || test_str[i] > '9') {\n            result += test_str[i];\n        }\n    }\n    return result;",
    "    int i = 0, j = 0;\n    while(test_str[i] != '\\0') {\n        if(test_str[i] >= '0' && test_str[i] <= '9') {\n            i++;\n        } else {\n            test_str[j] = test_str[i];\n            i++;\n            j++;\n        }\n    }\n    while(j < i) {\n        test_str[j] = '\\0';\n        j++;\n    }\n    return test_str;",
    "    int i = 0;\n    int j = test_str.size() - 1;\n    while(i < j) {\n        while(i < j && isdigit(test_str[i])) {\n            i++;\n        }\n        while(i < j && !isdigit(test_str[j])) {\n            j--;\n        }\n        if(i < j) {\n            std::swap(test_str[i], test_str[j]);\n            i++;\n            j--;\n        }\n    }\n    return test_str;",
    "    std::string result;\n    std::string num_str;\n    for (int i = 0; i < test_str.length(); i++) {\n        if (test_str[i] >= '0' && test_str[i] <= '9') {\n            num_str += test_str[i];\n        } else {\n            result += test_str[i];\n        }\n    }\n    result += num_str;\n    return result;",
    "    int i = 0;\n    int j = test_str.length() - 1;\n    while(i < j) {\n        if(test_str[i] >= '0' && test_str[i] <= '9') {\n            if(test_str[j] >= '0' && test_str[j] <= '9') {\n                j--;\n            } else {\n                std::swap(test_str[i], test_str[j]);\n                i++;\n                j--;\n            }\n        } else {\n            i++;\n        }\n    }\n    return test_str;",
    "    int i = 0;\n    int j = test_str.length() - 1;\n    while(i < j) {\n        while(i < j && !isdigit(test_str[i])) {\n            i++;\n        }\n        while(i < j && !isalpha(test_str[j])) {\n            j--;\n        }\n        if(i < j) {\n            std::swap(test_str[i], test_str[j]);\n        }\n    }\n    return test_str;",
    "    int i = 0;\n    int j = test_str.size() - 1;\n    while(i < j) {\n        if(test_str[i] >= '0' && test_str[i] <= '9') {\n            if(test_str[j] >= '0' && test_str[j] <= '9') {\n                j--;\n            } else {\n                std::swap(test_str[i], test_str[j]);\n                i++;\n                j--;\n            }\n        } else {\n            i++;\n        }\n    }\n    return test_str;",
    "    std::string result;\n    for(int i = 0; i < test_str.size(); i++) {\n        if(test_str[i] >= '0' && test_str[i] <= '9') {\n            result.push_back(test_str[i]);\n        }\n    }\n    for(int i = 0; i < test_str.size(); i++) {\n        if(test_str[i] < '0' || test_str[i] > '9') {\n            result.push_back(test_str[i]);\n        }\n    }\n    return result;",
    "    std::string result;\n    for(int i = 0; i < test_str.size(); i++) {\n        if(test_str[i] >= '0' && test_str[i] <= '9') {\n            result += test_str[i];\n        }\n    }\n    for(int i = 0; i < test_str.size(); i++) {\n        if(test_str[i] < '0' || test_str[i] > '9') {\n            result += test_str[i];\n        }\n    }\n    return result;",
    "    int i = 0;\n    int j = test_str.size() - 1;\n    while (i < j) {\n        if (test_str[i] >= '0' && test_str[i] <= '9') {\n            if (test_str[j] >= '0' && test_str[j] <= '9') {\n                j--;\n            } else {\n                std::swap(test_str[i], test_str[j]);\n                i++;\n                j--;\n            }\n        } else {\n            i++;\n        }\n    }\n    return test_str;",
    "    std::string result;\n    for (int i = 0; i < test_str.size(); i++) {\n        if (isdigit(test_str[i])) {\n            result.push_back(test_str[i]);\n        }\n    }\n    for (int i = 0; i < test_str.size(); i++) {\n        if (!isdigit(test_str[i])) {\n            result.push_back(test_str[i]);\n        }\n    }\n    return result;",
    "    int i = 0;\n    int j = test_str.length() - 1;\n    while (i < j) {\n        if (test_str[i] >= '0' && test_str[i] <= '9') {\n            if (test_str[j] >= '0' && test_str[j] <= '9') {\n                j--;\n            } else {\n                std::swap(test_str[i], test_str[j]);\n                i++;\n                j--;\n            }\n        } else {\n            i++;\n        }\n    }\n    return test_str;",
    "    int i = 0;\n    int j = test_str.length() - 1;\n    while(i < j) {\n        if(test_str[i] >= '0' && test_str[i] <= '9') {\n            if(test_str[j] >= '0' && test_str[j] <= '9') {\n                j--;\n            } else {\n                std::swap(test_str[i], test_str[j]);\n                i++;\n                j--;\n            }\n        } else {\n            i++;\n        }\n    }\n    return test_str;",
    "    int i = 0;\n    int j = test_str.length() - 1;\n    while (i < j) {\n        if (test_str[i] >= '0' && test_str[i] <= '9') {\n            if (test_str[j] >= 'a' && test_str[j] <= 'z') {\n                std::swap(test_str[i], test_str[j]);\n                i++;\n                j--;\n            } else {\n                j--;\n            }\n        } else {\n            i++;\n        }\n    }\n    return test_str;",
    "    int i = 0;\n    int j = test_str.size() - 1;\n    while(i < j) {\n        if(!std::isdigit(test_str[i])) {\n            i++;\n            continue;\n        }\n        if(std::isdigit(test_str[j])) {\n            j--;\n            continue;\n        }\n        std::swap(test_str[i], test_str[j]);\n        i++;\n        j--;\n    }\n    return test_str;",
    "    std::string res;\n    for (int i = 0; i < test_str.length(); i++) {\n        if (test_str[i] >= '0' && test_str[i] <= '9') {\n            res.push_back(test_str[i]);\n        }\n    }\n    for (int i = 0; i < test_str.length(); i++) {\n        if (test_str[i] < '0' || test_str[i] > '9') {\n            res.push_back(test_str[i]);\n        }\n    }\n    return res;",
    "    int i = 0;\n    int j = test_str.size() - 1;\n    while(i < j) {\n        if(test_str[i] >= '0' && test_str[i] <= '9') {\n            if(test_str[j] >= '0' && test_str[j] <= '9') {\n                j--;\n            } else {\n                std::swap(test_str[i], test_str[j]);\n                i++;\n                j--;\n            }\n        } else {\n            i++;\n        }\n    }\n    return test_str;",
    "    int i = 0;\n    int j = test_str.length() - 1;\n    while (i < j) {\n        if (test_str[i] >= '0' && test_str[i] <= '9') {\n            if (test_str[j] >= '0' && test_str[j] <= '9') {\n                j--;\n            } else {\n                std::swap(test_str[i], test_str[j]);\n                i++;\n                j--;\n            }\n        } else {\n            i++;\n        }\n    }\n    return test_str;",
    "    std::string result;\n    for(int i = 0; i < test_str.length(); i++) {\n        if(test_str[i] >= '0' && test_str[i] <= '9') {\n            result += test_str[i];\n        }\n    }\n    for(int i = 0; i < test_str.length(); i++) {\n        if(test_str[i] < '0' || test_str[i] > '9') {\n            result += test_str[i];\n        }\n    }\n    return result;",
    "    std::string result;\n    for (int i = 0; i < test_str.length(); i++) {\n        if (test_str[i] >= '0' && test_str[i] <= '9') {\n            result += test_str[i];\n        }\n    }\n    for (int i = 0; i < test_str.length(); i++) {\n        if (test_str[i] < '0' || test_str[i] > '9') {\n            result += test_str[i];\n        }\n    }\n    return result;",
    "    int i = 0;\n    int j = test_str.length() - 1;\n    while (i < j) {\n        if (test_str[i] >= '0' && test_str[i] <= '9') {\n            if (test_str[j] >= '0' && test_str[j] <= '9') {\n                j--;\n            } else {\n                std::swap(test_str[i], test_str[j]);\n                i++;\n                j--;\n            }\n        } else {\n            i++;\n        }\n    }\n    return test_str;",
    "    int i = 0;\n    int j = test_str.length() - 1;\n    while (i < j) {\n        if (test_str[i] >= '0' && test_str[i] <= '9') {\n            if (test_str[j] >= 'a' && test_str[j] <= 'z') {\n                std::swap(test_str[i], test_str[j]);\n                i++;\n                j--;\n            } else {\n                j--;\n            }\n        } else {\n            i++;\n        }\n    }\n    return test_str;",
    "    int len = test_str.length();\n    int i = 0;\n    int j = len - 1;\n    while(i < j) {\n        if(!std::isdigit(test_str[i])) {\n            i++;\n            continue;\n        }\n        if(std::isdigit(test_str[j])) {\n            j--;\n            continue;\n        }\n        std::swap(test_str[i], test_str[j]);\n        i++;\n        j--;\n    }\n    return test_str;",
    "    int i = 0;\n    int j = test_str.length() - 1;\n    while(i < j) {\n        if(!isdigit(test_str[i])) {\n            i++;\n            continue;\n        }\n        if(isdigit(test_str[j])) {\n            j--;\n            continue;\n        }\n        std::swap(test_str[i], test_str[j]);\n        i++;\n        j--;\n    }\n    return test_str;",
    "    int i = 0;\n    int j = test_str.length() - 1;\n    while(i < j) {\n        if(test_str[i] >= '0' && test_str[i] <= '9') {\n            if(test_str[j] >= 'a' && test_str[j] <= 'z') {\n                std::swap(test_str[i], test_str[j]);\n                i++;\n                j--;\n            } else {\n                j--;\n            }\n        } else {\n            i++;\n        }\n    }\n    return test_str;",
    "    int i = 0;\n    int j = test_str.size() - 1;\n    while (i < j) {\n        if (test_str[i] >= '0' && test_str[i] <= '9') {\n            if (test_str[j] >= '0' && test_str[j] <= '9') {\n                j--;\n            } else {\n                std::swap(test_str[i], test_str[j]);\n                i++;\n                j--;\n            }\n        } else {\n            i++;\n        }\n    }\n    return test_str;",
    "    int i = 0;\n    int j = test_str.length() - 1;\n    while (i < j) {\n        if (test_str[i] >= '0' && test_str[i] <= '9') {\n            if (test_str[j] >= 'a' && test_str[j] <= 'z') {\n                std::swap(test_str[i], test_str[j]);\n                i++;\n                j--;\n            } else {\n                j--;\n            }\n        } else {\n            i++;\n        }\n    }\n    return test_str;",
    "    std::string result;\n    std::string num;\n    for(int i = 0; i < test_str.size(); i++) {\n        if(test_str[i] >= '0' && test_str[i] <= '9') {\n            num += test_str[i];\n        } else {\n            result += test_str[i];\n        }\n    }\n    result += num;\n    return result;",
    "    std::string result;\n    for (auto c: test_str) {\n        if (std::isdigit(c)) {\n            result.push_back(c);\n        }\n    }\n    for (auto c: test_str) {\n        if (!std::isdigit(c)) {\n            result.push_back(c);\n        }\n    }\n    return result;",
    "    int i = 0;\n    int j = test_str.length() - 1;\n    while (i < j) {\n        if (test_str[i] >= '0' && test_str[i] <= '9') {\n            if (test_str[j] >= 'a' && test_str[j] <= 'z') {\n                std::swap(test_str[i], test_str[j]);\n                i++;\n                j--;\n            } else {\n                j--;\n            }\n        } else {\n            i++;\n        }\n    }\n    return test_str;",
    "    std::string result = \"\";\n    for (int i = 0; i < test_str.length(); i++) {\n        if (isdigit(test_str[i])) {\n            result += test_str[i];\n        }\n    }\n    for (int i = 0; i < test_str.length(); i++) {\n        if (!isdigit(test_str[i])) {\n            result += test_str[i];\n        }\n    }\n    return result;",
    "    std::string result = \"\";\n    std::string num_str = \"\";\n    for(int i = 0; i < test_str.length(); i++) {\n        if(test_str[i] >= '0' && test_str[i] <= '9') {\n            num_str += test_str[i];\n        } else {\n            result += test_str[i];\n        }\n    }\n    result += num_str;\n    return result;",
    "    std::string result = \"\";\n    std::string nums = \"\";\n    for (int i = 0; i < test_str.length(); i++) {\n        if (test_str[i] >= '0' && test_str[i] <= '9') {\n            nums += test_str[i];\n        } else {\n            result += test_str[i];\n        }\n    }\n    return result + nums;",
    "    int i = 0;\n    int j = test_str.size() - 1;\n    while(i < j) {\n        if(test_str[i] >= '0' && test_str[i] <= '9') {\n            if(test_str[j] >= '0' && test_str[j] <= '9') {\n                j--;\n            } else {\n                std::swap(test_str[i], test_str[j]);\n                i++;\n                j--;\n            }\n        } else {\n            i++;\n        }\n    }\n    return test_str;",
    "    int i = 0;\n    int j = test_str.size() - 1;\n    while (i < j) {\n        if (test_str[i] >= '0' && test_str[i] <= '9') {\n            if (test_str[j] >= '0' && test_str[j] <= '9') {\n                j--;\n            } else {\n                std::swap(test_str[i], test_str[j]);\n                i++;\n                j--;\n            }\n        } else {\n            i++;\n        }\n    }\n    return test_str;",
    "    std::string result;\n    int i = 0;\n    while(i < test_str.size()) {\n        if(test_str[i] >= '0' && test_str[i] <= '9') {\n            result += test_str[i];\n        }\n        i++;\n    }\n    i = 0;\n    while(i < test_str.size()) {\n        if(test_str[i] < '0' || test_str[i] > '9') {\n            result += test_str[i];\n        }\n        i++;\n    }\n    return result;",
    "    std::string result;\n    for (int i = 0; i < test_str.length(); i++) {\n        if (test_str[i] >= '0' && test_str[i] <= '9') {\n            result += test_str[i];\n        }\n    }\n    for (int i = 0; i < test_str.length(); i++) {\n        if (test_str[i] < '0' || test_str[i] > '9') {\n            result += test_str[i];\n        }\n    }\n    return result;",
    "    std::string result = \"\";\n    for (int i = 0; i < test_str.length(); i++) {\n        if (isdigit(test_str[i])) {\n            result += test_str[i];\n        }\n    }\n    for (int i = 0; i < test_str.length(); i++) {\n        if (!isdigit(test_str[i])) {\n            result += test_str[i];\n        }\n    }\n    return result;",
    "    std::string result_str;\n    for (int i = 0; i < test_str.length(); i++) {\n        if (test_str[i] >= '0' && test_str[i] <= '9') {\n            result_str += test_str[i];\n        }\n    }\n    for (int i = 0; i < test_str.length(); i++) {\n        if (test_str[i] < '0' || test_str[i] > '9') {\n            result_str += test_str[i];\n        }\n    }\n    return result_str;",
    "    int len = test_str.length();\n    int i = 0;\n    int j = len - 1;\n    while(i < j) {\n        if(test_str[i] >= '0' && test_str[i] <= '9') {\n            if(test_str[j] >= '0' && test_str[j] <= '9') {\n                j--;\n            } else {\n                std::swap(test_str[i], test_str[j]);\n                i++;\n                j--;\n            }\n        } else {\n            i++;\n        }\n    }\n    return test_str;",
    "    std::string result = \"\";\n    std::string nums = \"\";\n    for (int i = 0; i < test_str.length(); i++) {\n        if (test_str[i] >= '0' && test_str[i] <= '9') {\n            nums += test_str[i];\n        } else {\n            result += test_str[i];\n        }\n    }\n    return result + nums;",
    "    std::string result;\n    std::string nums;\n    for (int i = 0; i < test_str.size(); i++) {\n        if (test_str[i] >= '0' && test_str[i] <= '9') {\n            nums += test_str[i];\n        } else {\n            result += test_str[i];\n        }\n    }\n    return result + nums;",
    "    int i = 0;\n    int j = test_str.size() - 1;\n    while (i < j) {\n        while (i < j && !std::isdigit(test_str[i])) {\n            ++i;\n        }\n        while (i < j && std::isdigit(test_str[j])) {\n            --j;\n        }\n        if (i < j) {\n            std::swap(test_str[i], test_str[j]);\n        }\n    }\n    return test_str;",
    "  int i = 0;\n  int j = test_str.length() - 1;\n  while (i < j) {\n    if (test_str[i] >= '0' && test_str[i] <= '9') {\n      if (test_str[j] >= '0' && test_str[j] <= '9') {\n        j--;\n      } else {\n        std::swap(test_str[i], test_str[j]);\n        j--;\n      }\n    } else {\n      i++;\n    }\n  }\n  return test_str;",
    "    int i = 0;\n    int j = test_str.length()-1;\n    while(i < j) {\n        if(test_str[i] >= '0' && test_str[i] <= '9') {\n            if(test_str[j] >= 'a' && test_str[j] <= 'z') {\n                std::swap(test_str[i], test_str[j]);\n                i++;\n                j--;\n            } else {\n                j--;\n            }\n        } else {\n            i++;\n        }\n    }\n    return test_str;",
    "\tint len = test_str.size();\n\tint i = 0;\n\tint j = len - 1;\n\twhile (i < j) {\n\t\tif (test_str[i] >= '0' && test_str[i] <= '9') {\n\t\t\tif (test_str[j] >= 'a' && test_str[j] <= 'z') {\n\t\t\t\tstd::swap(test_str[i], test_str[j]);\n\t\t\t\ti++;\n\t\t\t\tj--;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tj--;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\ti++;\n\t\t}\n\t}\n\treturn test_str;",
    "    int i = 0, j = test_str.length() - 1;\n    while(i < j) {\n        if(test_str[i] >= '0' && test_str[i] <= '9') {\n            if(test_str[j] >= '0' && test_str[j] <= '9') {\n                j--;\n            } else {\n                std::swap(test_str[i], test_str[j]);\n                i++;\n                j--;\n            }\n        } else {\n            i++;\n        }\n    }\n    return test_str;",
    "    int i = 0;\n    int j = test_str.length() - 1;\n    while(i < j) {\n        if(test_str[i] >= '0' && test_str[i] <= '9') {\n            if(test_str[j] >= '0' && test_str[j] <= '9') {\n                j--;\n            } else {\n                std::swap(test_str[i], test_str[j]);\n                i++;\n                j--;\n            }\n        } else {\n            i++;\n        }\n    }\n    return test_str;",
    "    int i = 0;\n    int j = test_str.length() - 1;\n    while(i < j) {\n        while(i < j && !isdigit(test_str[i])) {\n            i++;\n        }\n        while(i < j && !isdigit(test_str[j])) {\n            j--;\n        }\n        if(i < j) {\n            std::swap(test_str[i], test_str[j]);\n            i++;\n            j--;\n        }\n    }\n    return test_str;",
    "    std::string result;\n    for (int i = 0; i < test_str.length(); i++) {\n        if (test_str[i] >= '0' && test_str[i] <= '9') {\n            result += test_str[i];\n        }\n    }\n    for (int i = 0; i < test_str.length(); i++) {\n        if (test_str[i] < '0' || test_str[i] > '9') {\n            result += test_str[i];\n        }\n    }\n    return result;",
    "    std::string result;\n    for(int i = 0; i < test_str.length(); i++) {\n        if(test_str[i] >= '0' && test_str[i] <= '9') {\n            result += test_str[i];\n        }\n    }\n    for(int i = 0; i < test_str.length(); i++) {\n        if(test_str[i] < '0' || test_str[i] > '9') {\n            result += test_str[i];\n        }\n    }\n    return result;",
    "    std::string result;\n    for (int i = 0; i < test_str.length(); i++) {\n        if (isdigit(test_str[i])) {\n            result += test_str[i];\n        }\n    }\n    for (int i = 0; i < test_str.length(); i++) {\n        if (!isdigit(test_str[i])) {\n            result += test_str[i];\n        }\n    }\n    return result;",
    "    int i = 0;\n    int j = test_str.size() - 1;\n    while(i < j) {\n        if(test_str[i] >= '0' && test_str[i] <= '9') {\n            if(test_str[j] >= '0' && test_str[j] <= '9') {\n                j--;\n            } else {\n                std::swap(test_str[i], test_str[j]);\n                i++;\n                j--;\n            }\n        } else {\n            i++;\n        }\n    }\n    return test_str;",
    "    int i = 0;\n    int j = test_str.size() - 1;\n    while(i < j) {\n        if(test_str[i] >= '0' && test_str[i] <= '9') {\n            if(test_str[j] >= '0' && test_str[j] <= '9') {\n                j--;\n            } else {\n                std::swap(test_str[i], test_str[j]);\n                i++;\n                j--;\n            }\n        } else {\n            i++;\n        }\n    }\n    return test_str;",
    "    int i = 0;\n    int j = test_str.length() - 1;\n    while (i < j) {\n        while (i < j && !isdigit(test_str[i])) {\n            i++;\n        }\n        while (i < j && !isdigit(test_str[j])) {\n            j--;\n        }\n        if (i < j) {\n            std::swap(test_str[i], test_str[j]);\n            i++;\n            j--;\n        }\n    }\n    return test_str;",
    "    int i = 0;\n    int j = test_str.length() - 1;\n    while (i < j) {\n        if (test_str[i] >= '0' && test_str[i] <= '9') {\n            while (i < j && test_str[j] >= '0' && test_str[j] <= '9') {\n                j--;\n            }\n            std::swap(test_str[i], test_str[j]);\n        }\n        i++;\n    }\n    return test_str;",
    "    std::string res;\n    for (int i = 0; i < test_str.length(); i++) {\n        if (test_str[i] >= '0' && test_str[i] <= '9') {\n            res += test_str[i];\n        }\n    }\n    for (int i = 0; i < test_str.length(); i++) {\n        if (test_str[i] < '0' || test_str[i] > '9') {\n            res += test_str[i];\n        }\n    }\n    return res;",
    "    std::string result;\n    std::string num_str;\n    for (int i = 0; i < test_str.length(); i++) {\n        if (test_str[i] >= '0' && test_str[i] <= '9') {\n            num_str += test_str[i];\n        } else {\n            result += test_str[i];\n        }\n    }\n    result += num_str;\n    return result;",
    "    std::string res_str;\n    for(int i = 0; i < test_str.length(); i++) {\n        if(test_str[i] >= '0' && test_str[i] <= '9') {\n            res_str += test_str[i];\n        }\n    }\n    for(int i = 0; i < test_str.length(); i++) {\n        if(test_str[i] < '0' || test_str[i] > '9') {\n            res_str += test_str[i];\n        }\n    }\n    return res_str;",
    "    int i = 0;\n    int j = test_str.length() - 1;\n    while(i < j) {\n        if(test_str[i] >= '0' && test_str[i] <= '9') {\n            if(test_str[j] >= '0' && test_str[j] <= '9') {\n                j--;\n            } else {\n                std::swap(test_str[i], test_str[j]);\n                i++;\n                j--;\n            }\n        } else {\n            i++;\n        }\n    }\n    return test_str;",
    "    std::string result;\n    std::string num;\n    for (int i = 0; i < test_str.length(); i++) {\n        if (test_str[i] >= '0' && test_str[i] <= '9') {\n            num += test_str[i];\n        } else {\n            result += test_str[i];\n        }\n    }\n    result += num;\n    return result;",
    "    int i = 0;\n    int j = test_str.length() - 1;\n    while (i < j) {\n        if (test_str[i] >= '0' && test_str[i] <= '9') {\n            if (test_str[j] >= 'a' && test_str[j] <= 'z') {\n                std::swap(test_str[i], test_str[j]);\n                i++;\n                j--;\n            } else {\n                j--;\n            }\n        } else {\n            i++;\n        }\n    }\n    return test_str;",
    "    int i = 0;\n    int j = test_str.size() - 1;\n    while (i < j) {\n        if (test_str[i] >= '0' && test_str[i] <= '9') {\n            if (test_str[j] >= 'a' && test_str[j] <= 'z') {\n                std::swap(test_str[i], test_str[j]);\n                i++;\n                j--;\n            } else {\n                j--;\n            }\n        } else {\n            i++;\n        }\n    }\n    return test_str;",
    "    int i = 0;\n    int j = test_str.size() - 1;\n    while(i < j) {\n        if(test_str[i] >= '0' && test_str[i] <= '9') {\n            if(test_str[j] >= '0' && test_str[j] <= '9') {\n                j--;\n            } else {\n                std::swap(test_str[i], test_str[j]);\n                i++;\n                j--;\n            }\n        } else {\n            i++;\n        }\n    }\n    return test_str;",
    "    int len = test_str.length();\n    int j = len - 1;\n    for (int i = len - 1; i >= 0; i--) {\n        if (test_str[i] >= '0' && test_str[i] <= '9') {\n            test_str[j] = test_str[i];\n            j--;\n        }\n    }\n    for (int i = j; i >= 0; i--) {\n        test_str[i] = '*';\n    }\n    return test_str;",
    "    int i = 0;\n    int j = test_str.length() - 1;\n    while (i < j) {\n        if (test_str[i] >= '0' && test_str[i] <= '9') {\n            if (test_str[j] >= 'a' && test_str[j] <= 'z') {\n                std::swap(test_str[i], test_str[j]);\n                i++;\n                j--;\n            } else {\n                j--;\n            }\n        } else {\n            i++;\n        }\n    }\n    return test_str;",
    "    std::string result = \"\";\n    std::string nums = \"\";\n    for (int i = 0; i < test_str.length(); i++) {\n        if (test_str[i] >= '0' && test_str[i] <= '9') {\n            nums += test_str[i];\n        } else {\n            result += test_str[i];\n        }\n    }\n    return result + nums;",
    "    std::string res;\n    for (int i = 0; i < test_str.size(); i++) {\n        if (isdigit(test_str[i])) {\n            res += test_str[i];\n        }\n    }\n    for (int i = 0; i < test_str.size(); i++) {\n        if (!isdigit(test_str[i])) {\n            res += test_str[i];\n        }\n    }\n    return res;",
    "  std::string result = \"\";\n  int count = 0;\n  for (int i = 0; i < test_str.length(); i++) {\n    if (isdigit(test_str[i])) {\n      result += test_str[i];\n      count++;\n    }\n  }\n  for (int i = 0; i < test_str.length() - count; i++) {\n    result += test_str[i];\n  }\n  return result;",
    "    std::string result;\n    for (int i = 0; i < test_str.length(); i++) {\n        if (test_str[i] >= '0' && test_str[i] <= '9') {\n            result += test_str[i];\n        }\n    }\n    for (int i = 0; i < test_str.length(); i++) {\n        if (test_str[i] < '0' || test_str[i] > '9') {\n            result += test_str[i];\n        }\n    }\n    return result;",
    "    int len = test_str.length();\n    int i = 0;\n    int j = len - 1;\n    while (i < j) {\n        if (test_str[i] >= '0' && test_str[i] <= '9') {\n            if (test_str[j] >= '0' && test_str[j] <= '9') {\n                j--;\n            } else {\n                std::swap(test_str[i], test_str[j]);\n                i++;\n                j--;\n            }\n        } else {\n            i++;\n        }\n    }\n    return test_str;",
    "    std::string result = \"\";\n    for (int i = 0; i < test_str.length(); i++) {\n        if (test_str[i] >= '0' && test_str[i] <= '9') {\n            result += test_str[i];\n        }\n    }\n    for (int i = 0; i < test_str.length(); i++) {\n        if (test_str[i] < '0' || test_str[i] > '9') {\n            result += test_str[i];\n        }\n    }\n    return result;",
    "    std::string result = \"\";\n    for (int i = 0; i < test_str.length(); i++) {\n        if (test_str[i] >= '0' && test_str[i] <= '9') {\n            result += test_str[i];\n        }\n    }\n    for (int i = 0; i < test_str.length(); i++) {\n        if (test_str[i] < '0' || test_str[i] > '9') {\n            result += test_str[i];\n        }\n    }\n    return result;",
    "    std::string result = \"\";\n    int i = 0;\n    while (i < test_str.length()) {\n        if (test_str[i] >= '0' && test_str[i] <= '9') {\n            result += test_str[i];\n        }\n        i++;\n    }\n    i = 0;\n    while (i < test_str.length()) {\n        if (test_str[i] < '0' || test_str[i] > '9') {\n            result += test_str[i];\n        }\n        i++;\n    }\n    return result;",
    "  int i = 0;\n  int j = test_str.size() - 1;\n  while (i < j) {\n    if (test_str[i] >= '0' && test_str[i] <= '9') {\n      if (test_str[j] >= '0' && test_str[j] <= '9') {\n        j--;\n      } else {\n        std::swap(test_str[i], test_str[j]);\n        i++;\n        j--;\n      }\n    } else {\n      i++;\n    }\n  }\n  return test_str;",
    "    int len = test_str.length();\n    int i = 0;\n    int j = len - 1;\n    while (i < j) {\n        if (test_str[i] >= '0' && test_str[i] <= '9') {\n            if (test_str[j] >= '0' && test_str[j] <= '9') {\n                j--;\n            } else {\n                std::swap(test_str[i], test_str[j]);\n                i++;\n                j--;\n            }\n        } else {\n            i++;\n        }\n    }\n    return test_str;",
    "    int len = test_str.length();\n    int i = 0;\n    int j = len - 1;\n    while (i < j) {\n        while (i < j && !isdigit(test_str[i])) {\n            i++;\n        }\n        while (i < j && !isalpha(test_str[j])) {\n            j--;\n        }\n        if (i < j) {\n            std::swap(test_str[i], test_str[j]);\n            i++;\n            j--;\n        }\n    }\n    return test_str;",
    "    int i = 0;\n    int j = test_str.length() - 1;\n    while(i < j) {\n        if(test_str[i] >= '0' && test_str[i] <= '9') {\n            if(test_str[j] >= 'a' && test_str[j] <= 'z') {\n                std::swap(test_str[i], test_str[j]);\n                i++;\n                j--;\n            } else {\n                j--;\n            }\n        } else {\n            i++;\n        }\n    }\n    return test_str;",
    "    int len = test_str.length();\n    int i = 0;\n    int j = len - 1;\n    while(i < j) {\n        while(i < j && !isdigit(test_str[i])) {\n            i++;\n        }\n        while(i < j && isdigit(test_str[j])) {\n            j--;\n        }\n        if(i < j) {\n            std::swap(test_str[i], test_str[j]);\n        }\n    }\n    return test_str;",
    "    std::string result;\n    for (int i = 0; i < test_str.size(); i++) {\n        if (test_str[i] >= '0' && test_str[i] <= '9') {\n            result += test_str[i];\n        }\n    }\n    for (int i = 0; i < test_str.size(); i++) {\n        if (test_str[i] < '0' || test_str[i] > '9') {\n            result += test_str[i];\n        }\n    }\n    return result;",
    "    std::string result = \"\";\n    std::string num_str = \"\";\n    for (int i = 0; i < test_str.length(); i++) {\n        if (test_str[i] >= '0' && test_str[i] <= '9') {\n            num_str += test_str[i];\n        } else {\n            result += test_str[i];\n        }\n    }\n    result += num_str;\n    return result;",
    "    std::string result = \"\";\n    std::string num_str = \"\";\n    for (int i = 0; i < test_str.length(); i++) {\n        if (test_str[i] >= '0' && test_str[i] <= '9') {\n            num_str += test_str[i];\n        } else {\n            result += test_str[i];\n        }\n    }\n    result += num_str;\n    return result;",
    "    int i = 0;\n    int j = test_str.size() - 1;\n    while(i < j) {\n        if(test_str[i] >= '0' && test_str[i] <= '9') {\n            if(test_str[j] >= '0' && test_str[j] <= '9') {\n                j--;\n            } else {\n                std::swap(test_str[i], test_str[j]);\n                i++;\n                j--;\n            }\n        } else {\n            i++;\n        }\n    }\n    return test_str;",
    "    int len = test_str.length();\n    int i = 0;\n    int j = len - 1;\n    while(i < j) {\n        if(test_str[i] >= '0' && test_str[i] <= '9') {\n            if(test_str[j] >= '0' && test_str[j] <= '9') {\n                j--;\n            }\n            else {\n                std::swap(test_str[i], test_str[j]);\n                i++;\n                j--;\n            }\n        }\n        else {\n            i++;\n        }\n    }\n    return test_str;",
    "    std::string result;\n    for (int i = 0; i < test_str.length(); i++) {\n        if (test_str[i] >= '0' && test_str[i] <= '9') {\n            result.push_back(test_str[i]);\n        }\n    }\n    for (int i = 0; i < test_str.length(); i++) {\n        if (test_str[i] >= 'a' && test_str[i] <= 'z') {\n            result.push_back(test_str[i]);\n        }\n    }\n    return result;",
    "    std::string result;\n    for (int i = 0; i < test_str.length(); i++) {\n        if (test_str[i] >= '0' && test_str[i] <= '9') {\n            result += test_str[i];\n        }\n    }\n    for (int i = 0; i < test_str.length(); i++) {\n        if (test_str[i] < '0' || test_str[i] > '9') {\n            result += test_str[i];\n        }\n    }\n    return result;",
    "    std::string result = \"\";\n    for (int i = 0; i < test_str.length(); i++) {\n        if (test_str[i] >= '0' && test_str[i] <= '9') {\n            result += test_str[i];\n        }\n    }\n    for (int i = 0; i < test_str.length(); i++) {\n        if (test_str[i] < '0' || test_str[i] > '9') {\n            result += test_str[i];\n        }\n    }\n    return result;"
  ]
}
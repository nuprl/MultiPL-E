{
  "name": "mbpp_472_check_Consecutive",
  "language": "cpp",
  "prompt": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to check whether the given list contains consecutive numbers or not.\nbool check_Consecutive(std::vector<long> l) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_472_check_Consecutive.py",
  "prompt_terminology": "verbatim",
  "tests": "}\nint main() {\n    auto candidate = check_Consecutive;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5}))) == (true));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)5, (long)6}))) == (false));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)1}))) == (false));\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    int n = l.size();\n    if(n == 0)\n        return false;\n    sort(l.begin(), l.end());\n    for(int i = 0; i < n - 1; i++) {\n        if(l[i] + 1 != l[i + 1])\n            return false;\n    }\n    return true;",
    "    // Write your code here\n    std::sort(l.begin(),l.end());\n    for(int i=0;i<l.size()-1;i++){\n        if(l[i+1]-l[i]!=1){\n            return false;\n        }\n    }\n    return true;",
    "    //write your code here\n    std::sort(l.begin(),l.end());\n    for(int i=0;i<l.size()-1;i++){\n        if(l[i+1]-l[i]!=1){\n            return false;\n        }\n    }\n    return true;",
    "    // Write your code here\n    std::sort(l.begin(), l.end());\n    for(int i = 0; i < l.size() - 1; i++) {\n        if(l[i] + 1 != l[i + 1]) {\n            return false;\n        }\n    }\n    return true;",
    "    // write your code here\n    int n = l.size();\n    if(n==1)\n        return true;\n    sort(l.begin(),l.end());\n    for(int i=0;i<n-1;i++)\n    {\n        if(l[i+1]-l[i]!=1)\n            return false;\n    }\n    return true;",
    "    //write your code here\n    std::sort(l.begin(), l.end());\n    for(int i=1; i<l.size(); i++) {\n        if(l[i] - l[i-1] != 1)\n            return false;\n    }\n    return true;",
    "    std::sort(l.begin(), l.end());\n    for(int i = 0; i < l.size() - 1; i++) {\n        if(l[i] + 1 != l[i + 1]) {\n            return false;\n        }\n    }\n    return true;",
    "    // Write your code here\n    int n = l.size();\n    int min = *min_element(l.begin(), l.end());\n    int max = *max_element(l.begin(), l.end());\n    if(max - min + 1 == n)\n        return true;\n    return false;",
    "    // Write your code here\n    if(l.size()<=1)\n        return true;\n    std::sort(l.begin(),l.end());\n    for(int i=0;i<l.size()-1;i++)\n    {\n        if(l[i+1]-l[i]!=1)\n            return false;\n    }\n    return true;",
    "    // Write your code here\n    if(l.size()==0)\n        return true;\n    std::sort(l.begin(),l.end());\n    for(int i=0;i<l.size()-1;i++)\n    {\n        if(l[i+1]-l[i]!=1)\n            return false;\n    }\n    return true;",
    "    int n = l.size();\n    if(n == 0)\n        return false;\n    if(n == 1)\n        return true;\n    std::sort(l.begin(), l.end());\n    for(int i = 0; i < n - 1; i++) {\n        if(l[i] + 1 != l[i + 1])\n            return false;\n    }\n    return true;",
    "    //write your code here\n    std::sort(l.begin(), l.end());\n    for(int i = 0; i < l.size() - 1; i++) {\n        if(l[i + 1] - l[i] != 1) {\n            return false;\n        }\n    }\n    return true;",
    "    // Write your code here\n    if(l.size()==0)\n        return false;\n    if(l.size()==1)\n        return true;\n    sort(l.begin(),l.end());\n    for(int i=0;i<l.size()-1;i++)\n    {\n        if(l[i+1]-l[i]!=1)\n            return false;\n    }\n    return true;",
    "    // Write your code here\n    int n = l.size();\n    if(n == 1)\n        return true;\n    sort(l.begin(), l.end());\n    int d = l[1] - l[0];\n    for(int i = 2; i < n; i++) {\n        if(l[i] - l[i-1] != d)\n            return false;\n    }\n    return true;",
    "    std::sort(l.begin(), l.end());\n    for (int i = 0; i < l.size() - 1; i++) {\n        if (l[i + 1] - l[i] != 1) {\n            return false;\n        }\n    }\n    return true;",
    "    // Write your code here\n    std::sort(l.begin(),l.end());\n    for(int i=0;i<l.size()-1;i++){\n        if(l[i+1]-l[i]!=1){\n            return false;\n        }\n    }\n    return true;",
    "\t// Write your code here\n\t// return true or false\n\tlong min=l[0];\n\tlong max=l[0];\n\tfor(int i=0;i<l.size();i++)\n\t{\n\t\tif(l[i]<min)\n\t\t{\n\t\t\tmin=l[i];\n\t\t}\n\t\tif(l[i]>max)\n\t\t{\n\t\t\tmax=l[i];\n\t\t}\n\t}\n\tif(max-min+1==l.size())\n\t{\n\t\treturn true;\n\t}\n\telse\n\t{\n\t\treturn false;\n\t}",
    "    int n = l.size();\n    if (n == 1)\n        return true;\n    sort(l.begin(), l.end());\n    int d = l[1] - l[0];\n    for (int i = 2; i < n; i++)\n        if (l[i] - l[i - 1] != d)\n            return false;\n    return true;",
    "    //write your code here\n    std::sort(l.begin(),l.end());\n    for(int i=0;i<l.size()-1;i++)\n    {\n        if(l[i+1]-l[i]!=1)\n        {\n            return false;\n        }\n    }\n    return true;",
    "    int n = l.size();\n    if (n == 0) {\n        return false;\n    }\n    int min = l[0];\n    int max = l[0];\n    for (int i = 1; i < n; i++) {\n        if (l[i] < min) {\n            min = l[i];\n        }\n        if (l[i] > max) {\n            max = l[i];\n        }\n    }\n    if (max - min + 1 == n) {\n        return true;\n    }\n    return false;",
    "    // Write your code here\n    std::sort(l.begin(),l.end());\n    for(int i=0;i<l.size()-1;i++){\n        if(l[i+1]-l[i]!=1){\n            return false;\n        }\n    }\n    return true;",
    "    std::sort(l.begin(), l.end());\n    for (int i = 0; i < l.size() - 1; i++) {\n        if (l[i] + 1 != l[i + 1]) {\n            return false;\n        }\n    }\n    return true;",
    "    // Write your code here\n    std::sort(l.begin(), l.end());\n    for(int i = 0; i < l.size()-1; i++) {\n        if(l[i+1] - l[i] != 1) {\n            return false;\n        }\n    }\n    return true;",
    "    //write your code here\n    std::sort(l.begin(), l.end());\n    for(int i=0; i<l.size()-1; i++){\n        if(l[i+1] - l[i] != 1){\n            return false;\n        }\n    }\n    return true;",
    "    // Write your code here\n    std::sort(l.begin(), l.end());\n    for(int i=0; i<l.size()-1; i++) {\n        if(l[i+1] - l[i] != 1) {\n            return false;\n        }\n    }\n    return true;",
    "    //write your code here\n    std::sort(l.begin(), l.end());\n    for(int i = 0; i < l.size()-1; i++) {\n        if(l[i] + 1 != l[i+1]) {\n            return false;\n        }\n    }\n    return true;",
    "    // Write your code here\n    std::sort(l.begin(),l.end());\n    for(int i=0;i<l.size()-1;i++){\n        if(l[i+1]-l[i]!=1){\n            return false;\n        }\n    }\n    return true;",
    "    //write your code here\n    std::sort(l.begin(), l.end());\n    for (int i = 0; i < l.size() - 1; i++) {\n        if (l[i] + 1 != l[i + 1]) {\n            return false;\n        }\n    }\n    return true;",
    "    // Write your code here\n    std::sort(l.begin(),l.end());\n    for(int i=0;i<l.size()-1;i++){\n        if(l[i+1]-l[i]!=1){\n            return false;\n        }\n    }\n    return true;",
    "    // Write your code here\n    std::sort(l.begin(),l.end());\n    for(int i=0;i<l.size()-1;i++){\n        if(l[i+1]-l[i]!=1){\n            return false;\n        }\n    }\n    return true;",
    "    // Write your code here\n    sort(l.begin(),l.end());\n    for(int i=0;i<l.size()-1;i++){\n        if(l[i+1]-l[i]!=1){\n            return false;\n        }\n    }\n    return true;",
    "    //write your code here\n    std::sort(l.begin(), l.end());\n    for(int i=0; i<l.size()-1; i++) {\n        if(l[i+1]-l[i] != 1) {\n            return false;\n        }\n    }\n    return true;",
    "    // Write your code here\n    int n = l.size();\n    if(n==1)\n        return true;\n    sort(l.begin(),l.end());\n    int d = l[1]-l[0];\n    for(int i=2;i<n;i++){\n        if(l[i]-l[i-1]!=d)\n            return false;\n    }\n    return true;",
    "    //write your code here\n    int n = l.size();\n    if(n==0)\n        return true;\n    sort(l.begin(), l.end());\n    int d = l[1] - l[0];\n    for(int i=2;i<n;i++)\n    {\n        if(l[i]-l[i-1] != d)\n            return false;\n    }\n    return true;",
    "\t// Write your code here\n\t// Return True if the list contains consecutive numbers, else return False\n\tint n = l.size();\n\tif(n == 1)\n\t\treturn true;\n\tsort(l.begin(), l.end());\n\tint d = l[1] - l[0];\n\tfor(int i = 2; i < n; i++) {\n\t\tif(l[i] - l[i - 1] != d)\n\t\t\treturn false;\n\t}\n\treturn true;",
    "    // Write your code here\n    std::sort(l.begin(),l.end());\n    for(int i=0;i<l.size()-1;i++){\n        if(l[i+1]-l[i]!=1){\n            return false;\n        }\n    }\n    return true;",
    "    //write your code here\n    long min=*std::min_element(l.begin(),l.end());\n    long max=*std::max_element(l.begin(),l.end());\n    if(max-min+1==l.size())\n    {\n        return true;\n    }\n    else\n    {\n        return false;\n    }",
    "    //write your code here\n    std::sort(l.begin(),l.end());\n    int flag = 1;\n    for(int i=0;i<l.size()-1;i++){\n        if(l[i+1]-l[i]!=1){\n            flag = 0;\n            break;\n        }\n    }\n    if(flag==1){\n        return true;\n    }\n    else{\n        return false;\n    }",
    "    std::sort(l.begin(), l.end());\n    for (int i = 0; i < l.size() - 1; i++) {\n        if (l[i] + 1 != l[i + 1]) {\n            return false;\n        }\n    }\n    return true;",
    "    int n = l.size();\n    if (n == 0)\n        return false;\n    std::sort(l.begin(), l.end());\n    int d = l[1] - l[0];\n    for (int i = 2; i < n; i++) {\n        if (l[i] - l[i - 1] != d)\n            return false;\n    }\n    return true;",
    "    // Write your code here\n    int n = l.size();\n    if(n == 1)\n        return true;\n    sort(l.begin(), l.end());\n    for(int i = 0; i < n - 1; i++) {\n        if(l[i + 1] - l[i] != 1)\n            return false;\n    }\n    return true;",
    "    // Write your code here\n    int n = l.size();\n    if(n==1)\n        return true;\n    std::sort(l.begin(),l.end());\n    for(int i=0;i<n-1;i++)\n    {\n        if(l[i+1]-l[i]!=1)\n            return false;\n    }\n    return true;",
    "    //write your code here\n    std::sort(l.begin(),l.end());\n    for(int i=0;i<l.size()-1;i++){\n        if(l[i+1]-l[i]!=1){\n            return false;\n        }\n    }\n    return true;",
    "    // Write your code here\n    int n = l.size();\n    if(n==1)\n        return true;\n    sort(l.begin(),l.end());\n    int d = l[1]-l[0];\n    for(int i=1;i<n;i++)\n    {\n        if(l[i]-l[i-1]!=d)\n            return false;\n    }\n    return true;",
    "    //write your code here\n    std::sort(l.begin(), l.end());\n    for(int i = 0; i < l.size() - 1; i++) {\n        if(l[i] + 1 != l[i + 1]) {\n            return false;\n        }\n    }\n    return true;",
    "    // write your code here\n    std::sort(l.begin(), l.end());\n    for(int i = 0; i < l.size() - 1; i++) {\n        if(l[i] + 1 != l[i + 1]) {\n            return false;\n        }\n    }\n    return true;",
    "    int n = l.size();\n    if (n == 1) {\n        return true;\n    }\n    sort(l.begin(), l.end());\n    for (int i = 1; i < n; i++) {\n        if (l[i] != l[i - 1] + 1) {\n            return false;\n        }\n    }\n    return true;",
    "    //write your code here\n    std::sort(l.begin(), l.end());\n    for(int i=0; i<l.size()-1; i++) {\n        if(l[i+1] - l[i] != 1) {\n            return false;\n        }\n    }\n    return true;",
    "    int n = l.size();\n    if(n == 0)\n        return false;\n    if(n == 1)\n        return true;\n    sort(l.begin(), l.end());\n    for(int i = 1; i < n; i++) {\n        if(l[i] - l[i-1] != 1)\n            return false;\n    }\n    return true;",
    "    //write your code here\n    int n = l.size();\n    int min = *min_element(l.begin(), l.end());\n    int max = *max_element(l.begin(), l.end());\n    if(max - min + 1 == n)\n        return true;\n    else\n        return false;",
    "    //write your code here\n    std::sort(l.begin(), l.end());\n    for(int i = 0; i < l.size() - 1; i++) {\n        if(l[i] + 1 != l[i + 1]) {\n            return false;\n        }\n    }\n    return true;",
    "    // Write your code here\n    int n = l.size();\n    if(n==1)\n        return true;\n    std::sort(l.begin(),l.end());\n    for(int i=0;i<n-1;i++)\n    {\n        if(l[i+1]-l[i]!=1)\n            return false;\n    }\n    return true;",
    "\t// Write your code here\n\tint n = l.size();\n\tif (n == 1) {\n\t\treturn true;\n\t}\n\tsort(l.begin(), l.end());\n\tint d = l[1] - l[0];\n\tfor (int i = 2; i < n; i++) {\n\t\tif (l[i] - l[i - 1] != d) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;",
    "    std::sort(l.begin(), l.end());\n    for (int i = 0; i < l.size() - 1; i++) {\n        if (l[i + 1] - l[i] != 1) {\n            return false;\n        }\n    }\n    return true;",
    "    // Write your code here\n    int n = l.size();\n    if(n == 1)\n        return true;\n    sort(l.begin(), l.end());\n    for(int i = 1; i < n; i++) {\n        if(l[i] - l[i-1] != 1)\n            return false;\n    }\n    return true;",
    "    // write your code here\n    std::sort(l.begin(),l.end());\n    for(int i=0;i<l.size()-1;i++)\n    {\n        if(l[i+1]-l[i]!=1)\n        {\n            return false;\n        }\n    }\n    return true;",
    "    //write your code here\n    std::sort(l.begin(),l.end());\n    for(int i=0;i<l.size()-1;i++)\n    {\n        if(l[i+1]-l[i]!=1)\n        {\n            return false;\n        }\n    }\n    return true;",
    "    //write your code here\n    std::sort(l.begin(), l.end());\n    for(int i=0; i<l.size()-1; i++) {\n        if(l[i+1] - l[i] != 1) {\n            return false;\n        }\n    }\n    return true;",
    "    // Write your code here\n    std::sort(l.begin(),l.end());\n    for(int i=0;i<l.size()-1;i++){\n        if(l[i+1]-l[i]!=1){\n            return false;\n        }\n    }\n    return true;",
    "    // Write your code here\n    int n = l.size();\n    if(n == 1)\n        return true;\n    sort(l.begin(), l.end());\n    int d = l[1] - l[0];\n    for(int i = 2; i < n; i++)\n    {\n        if(l[i] - l[i-1] != d)\n            return false;\n    }\n    return true;",
    "    //write your code here\n    std::sort(l.begin(), l.end());\n    for(int i=0; i<l.size()-1; i++) {\n        if(l[i+1] - l[i] != 1) {\n            return false;\n        }\n    }\n    return true;",
    "    // write your code here\n    sort(l.begin(),l.end());\n    for(int i=0;i<l.size()-1;i++){\n        if(l[i+1]-l[i]!=1){\n            return false;\n        }\n    }\n    return true;",
    "    std::sort(l.begin(), l.end());\n    for(int i = 0; i < l.size() - 1; i++) {\n        if(l[i + 1] - l[i] != 1) {\n            return false;\n        }\n    }\n    return true;",
    "    //write your code here\n    std::sort(l.begin(), l.end());\n    for(int i=0; i<l.size()-1; i++){\n        if(l[i+1]-l[i]!=1){\n            return false;\n        }\n    }\n    return true;",
    "    // Write your code here\n    int n = l.size();\n    if(n == 1)\n        return true;\n    sort(l.begin(), l.end());\n    int d = l[1] - l[0];\n    for(int i = 2; i < n; i++)\n    {\n        if(l[i] - l[i-1] != d)\n            return false;\n    }\n    return true;",
    "    // Write your code here\n    std::sort(l.begin(), l.end());\n    for(int i = 0; i < l.size() - 1; i++) {\n        if(l[i] + 1 != l[i + 1]) {\n            return false;\n        }\n    }\n    return true;",
    "\t// Write your code here\n\tstd::sort(l.begin(), l.end());\n\tfor (int i = 0; i < l.size() - 1; i++) {\n\t\tif (l[i] + 1 != l[i + 1]) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;",
    "    //write your code here\n    std::sort(l.begin(), l.end());\n    long diff = l[1] - l[0];\n    for (int i = 1; i < l.size(); i++) {\n        if (l[i] - l[i - 1] != diff) {\n            return false;\n        }\n    }\n    return true;",
    "    int n = l.size();\n    if (n <= 1) {\n        return true;\n    }\n    std::sort(l.begin(), l.end());\n    for (int i = 0; i < n - 1; i++) {\n        if (l[i + 1] - l[i] != 1) {\n            return false;\n        }\n    }\n    return true;",
    "    //write your code here\n    std::sort(l.begin(), l.end());\n    for(int i = 0; i < l.size() - 1; i++) {\n        if(l[i] + 1 != l[i + 1]) {\n            return false;\n        }\n    }\n    return true;",
    "    // write your code here\n    int n = l.size();\n    if(n == 1)\n        return true;\n    sort(l.begin(), l.end());\n    int d = l[1] - l[0];\n    for(int i = 2; i < n; i++)\n    {\n        if(l[i] - l[i-1] != d)\n            return false;\n    }\n    return true;",
    "    // write your code here\n    std::sort(l.begin(), l.end());\n    for (int i = 0; i < l.size() - 1; i++) {\n        if (l[i] + 1 != l[i + 1]) {\n            return false;\n        }\n    }\n    return true;",
    "    int n = l.size();\n    int min = *std::min_element(l.begin(), l.end());\n    int max = *std::max_element(l.begin(), l.end());\n    if (max - min + 1 == n) {\n        return true;\n    }\n    else {\n        return false;\n    }",
    "    //write your code here\n    std::sort(l.begin(),l.end());\n    for(int i=0;i<l.size()-1;i++)\n    {\n        if(l[i+1]-l[i]!=1)\n        {\n            return false;\n        }\n    }\n    return true;",
    "    // Write your code here\n    int n = l.size();\n    if(n == 1)\n        return true;\n    sort(l.begin(), l.end());\n    int d = l[1] - l[0];\n    for(int i = 2; i < n; i++)\n    {\n        if(l[i] - l[i-1] != d)\n            return false;\n    }\n    return true;",
    "    // Write your code here\n    sort(l.begin(), l.end());\n    for(int i = 0; i < l.size() - 1; i++) {\n        if(l[i] + 1 != l[i + 1]) {\n            return false;\n        }\n    }\n    return true;",
    "    //write your code here\n    std::sort(l.begin(), l.end());\n    for (int i = 1; i < l.size(); i++) {\n        if (l[i] - l[i - 1] != 1) {\n            return false;\n        }\n    }\n    return true;",
    "    //write your code here\n    std::sort(l.begin(),l.end());\n    for(int i=0;i<l.size()-1;i++){\n        if(l[i+1]-l[i]!=1){\n            return false;\n        }\n    }\n    return true;",
    "    //write your code here\n    std::sort(l.begin(),l.end());\n    for(int i=0;i<l.size()-1;i++){\n        if(l[i]+1!=l[i+1]){\n            return false;\n        }\n    }\n    return true;",
    "    std::vector<long> v;\n    for(int i=0;i<l.size();i++){\n        v.push_back(l[i]);\n    }\n    std::sort(v.begin(),v.end());\n    for(int i=0;i<v.size()-1;i++){\n        if(v[i+1]-v[i]!=1){\n            return false;\n        }\n    }\n    return true;",
    "    std::sort(l.begin(), l.end());\n    for (int i = 0; i < l.size() - 1; i++) {\n        if (l[i] + 1 != l[i + 1]) {\n            return false;\n        }\n    }\n    return true;",
    "    int n = l.size();\n    if (n == 0) {\n        return false;\n    }\n    int min = *std::min_element(l.begin(), l.end());\n    int max = *std::max_element(l.begin(), l.end());\n    if (max - min + 1 == n) {\n        return true;\n    }\n    return false;",
    "    //  sort(l.begin(), l.end());\n    //  for (int i = 0; i < l.size() - 1; i++) {\n    //      if (l[i] + 1 != l[i + 1]) {\n    //          return false;\n    //      }\n    //  }\n    //  return true;\n    int min = *min_element(l.begin(), l.end());\n    int max = *max_element(l.begin(), l.end());\n    if (max - min + 1 == l.size()) {\n        return true;\n    }\n    return false;",
    "    //write your code here\n    std::sort(l.begin(),l.end());\n    for(int i=0;i<l.size()-1;i++)\n    {\n        if(l[i+1]-l[i]!=1)\n        {\n            return false;\n        }\n    }\n    return true;",
    "    // write your code here\n    std::sort(l.begin(),l.end());\n    for(int i=0;i<l.size()-1;i++){\n        if(l[i+1]-l[i]!=1){\n            return false;\n        }\n    }\n    return true;",
    "    // Write your code here\n    std::sort(l.begin(),l.end());\n    for(int i=1;i<l.size();i++){\n        if(l[i]-l[i-1]!=1){\n            return false;\n        }\n    }\n    return true;",
    "    int n = l.size();\n    if(n == 0)\n        return true;\n    std::sort(l.begin(), l.end());\n    for(int i = 1; i < n; i++) {\n        if(l[i] - l[i - 1] != 1)\n            return false;\n    }\n    return true;",
    "    // Write your code here\n    sort(l.begin(),l.end());\n    for(int i=0;i<l.size()-1;i++){\n        if(l[i+1]-l[i]!=1){\n            return false;\n        }\n    }\n    return true;",
    "    // write your code here\n    std::sort(l.begin(), l.end());\n    for(int i = 0; i < l.size() - 1; i++) {\n        if(l[i] + 1 != l[i + 1]) {\n            return false;\n        }\n    }\n    return true;",
    "\t// Write your code here\n\t// Return True or False\n\tstd::sort(l.begin(),l.end());\n\tfor(int i=0;i<l.size()-1;i++)\n\t{\n\t\tif(l[i+1]-l[i]!=1)\n\t\t\treturn false;\n\t}\n\treturn true;",
    "    // Write your code here\n    std::sort(l.begin(),l.end());\n    for(int i=0;i<l.size()-1;i++){\n        if(l[i+1]-l[i]!=1){\n            return false;\n        }\n    }\n    return true;",
    "    int n = l.size();\n    if (n == 1) {\n        return true;\n    }\n    sort(l.begin(), l.end());\n    int d = l[1] - l[0];\n    for (int i = 2; i < n; i++) {\n        if (l[i] - l[i - 1] != d) {\n            return false;\n        }\n    }\n    return true;",
    "    // Write your code here\n    int n = l.size();\n    int min = *min_element(l.begin(), l.end());\n    int max = *max_element(l.begin(), l.end());\n    if(max-min+1 == n)\n        return true;\n    return false;",
    "    // sort the list\n    std::sort(l.begin(), l.end());\n    // check if the difference between the consecutive elements is 1\n    for (int i = 0; i < l.size() - 1; i++) {\n        if (l[i + 1] - l[i] != 1) {\n            return false;\n        }\n    }\n    return true;",
    "    // Write your code here\n    sort(l.begin(),l.end());\n    for(int i=0;i<l.size()-1;i++){\n        if(l[i+1]-l[i]!=1){\n            return false;\n        }\n    }\n    return true;",
    "    int n = l.size();\n    if (n == 0) {\n        return false;\n    }\n    int min = *std::min_element(l.begin(), l.end());\n    int max = *std::max_element(l.begin(), l.end());\n    if (max - min + 1 == n) {\n        return true;\n    }\n    return false;",
    "    int n = l.size();\n    if(n == 1)\n        return true;\n    std::sort(l.begin(), l.end());\n    for(int i = 1; i < n; i++) {\n        if(l[i] - l[i-1] != 1)\n            return false;\n    }\n    return true;",
    "    // Write your code here\n    std::sort(l.begin(), l.end());\n    for(int i=0; i<l.size()-1; i++) {\n        if(l[i+1] - l[i] != 1) {\n            return false;\n        }\n    }\n    return true;",
    "    int n = l.size();\n    if(n == 1)\n        return true;\n    std::sort(l.begin(), l.end());\n    for(int i = 0; i < n - 1; i++) {\n        if(l[i] + 1 != l[i + 1])\n            return false;\n    }\n    return true;",
    "    std::sort(l.begin(), l.end());\n    for(int i = 0; i < l.size() - 1; i++) {\n        if(l[i] + 1 != l[i + 1]) {\n            return false;\n        }\n    }\n    return true;",
    "    // Write your code here\n    std::sort(l.begin(),l.end());\n    for(int i=0;i<l.size()-1;i++){\n        if(l[i+1]-l[i]!=1){\n            return false;\n        }\n    }\n    return true;",
    "    // Write your code here\n    sort(l.begin(), l.end());\n    for(int i=0; i<l.size()-1; i++)\n    {\n        if(l[i+1]-l[i] != 1)\n            return false;\n    }\n    return true;",
    "    //write your code here\n    std::sort(l.begin(), l.end());\n    for(int i=0; i<l.size()-1; i++) {\n        if(l[i+1] - l[i] != 1) {\n            return false;\n        }\n    }\n    return true;",
    "    std::sort(l.begin(), l.end());\n    for (int i = 0; i < l.size() - 1; i++) {\n        if (l[i] + 1 != l[i + 1]) {\n            return false;\n        }\n    }\n    return true;",
    "    std::sort(l.begin(), l.end());\n    for (int i = 0; i < l.size() - 1; i++) {\n        if (l[i] + 1 != l[i + 1]) {\n            return false;\n        }\n    }\n    return true;",
    "    // Write your code here\n    std::sort(l.begin(), l.end());\n    for(int i = 0; i < l.size() - 1; i++) {\n        if(l[i + 1] - l[i] != 1) {\n            return false;\n        }\n    }\n    return true;",
    "    //write your code here\n    std::sort(l.begin(), l.end());\n    for(int i=0; i<l.size()-1; i++) {\n        if(l[i+1]-l[i] != 1) {\n            return false;\n        }\n    }\n    return true;",
    "    //write your code here\n    std::sort(l.begin(),l.end());\n    for(int i=0;i<l.size()-1;i++){\n        if(l[i+1]-l[i]!=1){\n            return false;\n        }\n    }\n    return true;",
    "    int n = l.size();\n    if(n == 0)\n        return true;\n    int min = *std::min_element(l.begin(), l.end());\n    int max = *std::max_element(l.begin(), l.end());\n    if(max - min + 1 == n) {\n        bool visited[n];\n        memset(visited, false, sizeof(visited));\n        for(int i = 0; i < n; i++) {\n            if(visited[l[i] - min] != false)\n                return false;\n            visited[l[i] - min] = true;\n        }\n        return true;\n    }\n    return false;",
    "    // Write your code here\n    int n = l.size();\n    if(n == 1)\n        return true;\n    sort(l.begin(), l.end());\n    for(int i = 0; i < n-1; i++)\n    {\n        if(l[i+1] - l[i] != 1)\n            return false;\n    }\n    return true;",
    "    //write your code here\n    std::sort(l.begin(),l.end());\n    for(int i=0;i<l.size()-1;i++){\n        if(l[i+1]-l[i]!=1){\n            return false;\n        }\n    }\n    return true;",
    "    // Write your code here\n    std::sort(l.begin(),l.end());\n    for(int i=0;i<l.size()-1;i++){\n        if(l[i+1]-l[i]!=1){\n            return false;\n        }\n    }\n    return true;",
    "    std::sort(l.begin(), l.end());\n    for(int i = 0; i < l.size()-1; i++) {\n        if(l[i+1] - l[i] != 1) {\n            return false;\n        }\n    }\n    return true;",
    "    // Write your code here\n    int n = l.size();\n    sort(l.begin(), l.end());\n    int min = l[0];\n    int max = l[n-1];\n    if(max-min+1 == n)\n        return true;\n    else\n        return false;",
    "    int n = l.size();\n    if(n == 0)\n        return true;\n    sort(l.begin(), l.end());\n    int d = l[1] - l[0];\n    for(int i = 2; i < n; i++)\n        if(l[i] - l[i-1] != d)\n            return false;\n    return true;",
    "    // Write your code here\n    std::sort(l.begin(), l.end());\n    for(int i=0; i<l.size()-1; i++) {\n        if(l[i+1] - l[i] != 1) {\n            return false;\n        }\n    }\n    return true;",
    "    //write your code here\n    std::sort(l.begin(), l.end());\n    for(int i = 0; i < l.size() - 1; i++) {\n        if(l[i] + 1 != l[i + 1]) {\n            return false;\n        }\n    }\n    return true;",
    "    // Write your code here\n    std::sort(l.begin(),l.end());\n    for(int i=0;i<l.size()-1;i++){\n        if(l[i+1]-l[i]!=1){\n            return false;\n        }\n    }\n    return true;",
    "\tint n = l.size();\n\tif (n == 0) {\n\t\treturn false;\n\t}\n\tint min = *std::min_element(l.begin(), l.end());\n\tint max = *std::max_element(l.begin(), l.end());\n\tif (max - min + 1 == n) {\n\t\treturn true;\n\t}\n\treturn false;",
    "    // write your code here\n    std::sort(l.begin(),l.end());\n    for(int i=0;i<l.size()-1;i++){\n        if(l[i+1]-l[i]!=1){\n            return false;\n        }\n    }\n    return true;",
    "    // Write your code here\n    if(l.size()==0)\n        return false;\n    sort(l.begin(),l.end());\n    for(int i=0;i<l.size()-1;i++)\n    {\n        if(l[i+1]-l[i]!=1)\n            return false;\n    }\n    return true;",
    "    // Write your code here\n    std::sort(l.begin(),l.end());\n    for(int i=0;i<l.size()-1;i++){\n        if(l[i+1]-l[i]!=1){\n            return false;\n        }\n    }\n    return true;",
    "    // Write your code here\n    sort(l.begin(),l.end());\n    for(int i=0;i<l.size()-1;i++){\n        if(l[i+1]-l[i]!=1){\n            return false;\n        }\n    }\n    return true;",
    "    //write your code here\n    sort(l.begin(),l.end());\n    int flag=0;\n    for(int i=0;i<l.size()-1;i++){\n        if(l[i+1]-l[i]!=1){\n            flag=1;\n            break;\n        }\n    }\n    if(flag==1){\n        return false;\n    }\n    else{\n        return true;\n    }",
    "    // write your code here\n    int n = l.size();\n    if(n == 0)\n        return false;\n    sort(l.begin(), l.end());\n    int d = l[1] - l[0];\n    for(int i = 2; i < n; i++)\n    {\n        if(l[i] - l[i-1] != d)\n            return false;\n    }\n    return true;",
    "    //write your code here\n    std::sort(l.begin(),l.end());\n    for(int i=0;i<l.size()-1;i++){\n        if(l[i+1]-l[i]!=1){\n            return false;\n        }\n    }\n    return true;",
    "    //write your code here\n    std::sort(l.begin(), l.end());\n    for(int i=0; i<l.size()-1; i++){\n        if(l[i+1] - l[i] != 1){\n            return false;\n        }\n    }\n    return true;",
    "    int n = l.size();\n    if(n == 1)\n        return true;\n    std::sort(l.begin(), l.end());\n    for(int i = 0; i < n-1; i++) {\n        if(l[i+1] - l[i] != 1)\n            return false;\n    }\n    return true;",
    "\t// Write your code here\n\t// return true if the list contains consecutive numbers\n\t// return false otherwise\n\tstd::sort(l.begin(),l.end());\n\tfor(int i=0;i<l.size()-1;i++)\n\t{\n\t\tif(l[i+1]-l[i]!=1)\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;",
    "    int n = l.size();\n    if (n == 1)\n        return true;\n    sort(l.begin(), l.end());\n    for (int i = 1; i < n; i++) {\n        if (l[i] - l[i - 1] != 1)\n            return false;\n    }\n    return true;",
    "    // Write your code here\n    std::sort(l.begin(),l.end());\n    for(int i=0;i<l.size()-1;i++){\n        if(l[i+1]-l[i]!=1){\n            return false;\n        }\n    }\n    return true;",
    "    int n = l.size();\n    if (n == 0)\n        return false;\n    sort(l.begin(), l.end());\n    int d = l[1] - l[0];\n    for (int i = 2; i < n; i++) {\n        if (l[i] - l[i - 1] != d)\n            return false;\n    }\n    return true;",
    "    int n = l.size();\n    if(n == 1)\n        return true;\n    sort(l.begin(), l.end());\n    int d = l[1] - l[0];\n    for(int i = 2; i < n; i++) {\n        if(l[i] - l[i-1] != d)\n            return false;\n    }\n    return true;",
    "    // Write your code here\n    std::sort(l.begin(), l.end());\n    for(int i = 0; i < l.size() - 1; i++) {\n        if(l[i] + 1 != l[i + 1]) {\n            return false;\n        }\n    }\n    return true;",
    "    //write your code here\n    int n = l.size();\n    if(n == 0)\n        return false;\n    std::sort(l.begin(), l.end());\n    int diff = l[1] - l[0];\n    for(int i = 1; i < n; i++) {\n        if(l[i] - l[i-1] != diff)\n            return false;\n    }\n    return true;",
    "    //write your code here\n    std::sort(l.begin(),l.end());\n    for(int i=0;i<l.size()-1;i++)\n    {\n        if(l[i+1]-l[i]!=1)\n        {\n            return false;\n        }\n    }\n    return true;",
    "\t// Write your code here\n\t// Return True if the list contains consecutive numbers\n\t// else return False\n\tstd::sort(l.begin(),l.end());\n\tfor(int i=0;i<l.size()-1;i++){\n\t\tif(l[i+1]-l[i]!=1){\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;",
    "    if(l.size() == 0)\n        return false;\n    std::sort(l.begin(), l.end());\n    for(int i = 1; i < l.size(); i++) {\n        if(l[i] - l[i - 1] != 1)\n            return false;\n    }\n    return true;",
    "    // write your code here\n    std::sort(l.begin(), l.end());\n    for(int i = 0; i < l.size() - 1; i++) {\n        if(l[i] + 1 != l[i + 1]) {\n            return false;\n        }\n    }\n    return true;",
    "    // write your code here\n    sort(l.begin(), l.end());\n    for(int i=0;i<l.size()-1;i++){\n        if(l[i+1]-l[i]!=1){\n            return false;\n        }\n    }\n    return true;",
    "    // Write your code here\n    std::sort(l.begin(), l.end());\n    for(int i = 0; i < l.size()-1; i++) {\n        if(l[i+1] - l[i] != 1) {\n            return false;\n        }\n    }\n    return true;",
    "    //write your code here\n    std::sort(l.begin(), l.end());\n    for(int i = 0; i < l.size() - 1; i++) {\n        if(l[i] + 1 != l[i + 1]) {\n            return false;\n        }\n    }\n    return true;",
    "    //write your code here\n    std::sort(l.begin(), l.end());\n    for(int i=0; i<l.size()-1; i++) {\n        if(l[i+1] - l[i] != 1) {\n            return false;\n        }\n    }\n    return true;",
    "    //write your code here\n    std::sort(l.begin(),l.end());\n    for(int i=0;i<l.size()-1;i++){\n        if(l[i+1]-l[i]!=1){\n            return false;\n        }\n    }\n    return true;",
    "    // Write your code here\n    int n = l.size();\n    if(n==1)\n        return true;\n    sort(l.begin(),l.end());\n    int d = l[1]-l[0];\n    for(int i=1;i<n;i++){\n        if(l[i]-l[i-1]!=d)\n            return false;\n    }\n    return true;",
    "    // Write your code here\n    int n = l.size();\n    if(n==1)\n        return true;\n    sort(l.begin(),l.end());\n    int d = l[1]-l[0];\n    for(int i=1;i<n;i++)\n    {\n        if(l[i]-l[i-1]!=d)\n            return false;\n    }\n    return true;",
    "    // Write your code here\n    // return true if the list contains consecutive numbers\n    // else return false\n    std::sort(l.begin(), l.end());\n    for(int i = 0; i < l.size()-1; i++) {\n        if(l[i+1] - l[i] != 1) {\n            return false;\n        }\n    }\n    return true;",
    "    // Write your code here\n    std::sort(l.begin(),l.end());\n    for(int i=0;i<l.size()-1;i++)\n    {\n        if(l[i+1]-l[i]!=1)\n        {\n            return false;\n        }\n    }\n    return true;",
    "    std::sort(l.begin(), l.end());\n    for (int i = 1; i < l.size(); i++) {\n        if (l[i] - l[i - 1] != 1) {\n            return false;\n        }\n    }\n    return true;",
    "    // Write your code here\n    sort(l.begin(),l.end());\n    for(int i=0;i<l.size()-1;i++){\n        if(l[i+1]-l[i]!=1){\n            return false;\n        }\n    }\n    return true;",
    "    // Write your code here\n    int n = l.size();\n    if(n == 1)\n        return true;\n    sort(l.begin(), l.end());\n    int d = l[1] - l[0];\n    for(int i = 2; i < n; i++){\n        if(l[i] - l[i-1] != d)\n            return false;\n    }\n    return true;",
    "    std::sort(l.begin(), l.end());\n    for (int i = 0; i < l.size() - 1; i++) {\n        if (l[i] + 1 != l[i + 1]) {\n            return false;\n        }\n    }\n    return true;",
    "    std::sort(l.begin(), l.end());\n    for (int i = 1; i < l.size(); i++) {\n        if (l[i] - l[i - 1] != 1) {\n            return false;\n        }\n    }\n    return true;",
    "    //write your code here\n    std::sort(l.begin(), l.end());\n    for(int i=0; i<l.size()-1; i++) {\n        if(l[i+1] != l[i]+1) {\n            return false;\n        }\n    }\n    return true;",
    "    // Write your code here\n    std::sort(l.begin(),l.end());\n    for(int i=0;i<l.size()-1;i++){\n        if(l[i+1]-l[i]!=1){\n            return false;\n        }\n    }\n    return true;",
    "    // Write your code here\n    sort(l.begin(), l.end());\n    for(int i=0; i<l.size()-1; i++) {\n        if(l[i+1] != l[i]+1) {\n            return false;\n        }\n    }\n    return true;",
    "    // Write your code here\n    int n = l.size();\n    if(n == 1)\n        return true;\n    sort(l.begin(), l.end());\n    int d = l[1] - l[0];\n    for(int i = 1; i < n; i++)\n    {\n        if(l[i] - l[i - 1] != d)\n            return false;\n    }\n    return true;",
    "    if(l.size()==0)\n        return true;\n    std::sort(l.begin(),l.end());\n    for(int i=0;i<l.size()-1;i++)\n    {\n        if(l[i+1]-l[i]!=1)\n            return false;\n    }\n    return true;",
    "    // write your code here\n    int n = l.size();\n    if (n == 1)\n        return true;\n    sort(l.begin(), l.end());\n    for (int i = 1; i < n; i++) {\n        if (l[i] - l[i - 1] != 1)\n            return false;\n    }\n    return true;",
    "    // Write your code here\n    int n = l.size();\n    if(n==0)\n        return true;\n    sort(l.begin(),l.end());\n    int d = l[1] - l[0];\n    for(int i=1;i<n;i++)\n    {\n        if(l[i]-l[i-1]!=d)\n            return false;\n    }\n    return true;",
    "    // Write your code here\n    std::sort(l.begin(),l.end());\n    for(int i=1;i<l.size();i++){\n        if(l[i]-l[i-1]!=1){\n            return false;\n        }\n    }\n    return true;",
    "    // Write your code here\n    std::sort(l.begin(),l.end());\n    for(int i=0;i<l.size()-1;i++){\n        if(l[i+1]-l[i]!=1){\n            return false;\n        }\n    }\n    return true;",
    "    // Write your code here\n    long min = *std::min_element(l.begin(), l.end());\n    long max = *std::max_element(l.begin(), l.end());\n    if(max - min + 1 == l.size()) {\n        return true;\n    }\n    return false;",
    "    //write your code here\n    std::sort(l.begin(), l.end());\n    for(int i = 0; i < l.size()-1; i++) {\n        if(l[i+1] - l[i] != 1) {\n            return false;\n        }\n    }\n    return true;",
    "    // Write your code here\n    sort(l.begin(), l.end());\n    for(int i = 0; i < l.size()-1; i++){\n        if(l[i+1] - l[i] != 1){\n            return false;\n        }\n    }\n    return true;",
    "    // Write your code here\n    std::sort(l.begin(),l.end());\n    for(int i=0;i<l.size()-1;i++){\n        if(l[i+1]-l[i]!=1){\n            return false;\n        }\n    }\n    return true;",
    "    std::sort(l.begin(), l.end());\n    for(int i = 1; i < l.size(); i++) {\n        if(l[i] - l[i-1] != 1) {\n            return false;\n        }\n    }\n    return true;",
    "    // Write your code here\n    std::sort(l.begin(), l.end());\n    for(int i=0; i<l.size()-1; i++) {\n        if(l[i+1]-l[i] != 1) {\n            return false;\n        }\n    }\n    return true;",
    "    // Write your code here\n    std::sort(l.begin(), l.end());\n    for(int i = 0; i < l.size() - 1; i++) {\n        if(l[i] + 1 != l[i + 1]) {\n            return false;\n        }\n    }\n    return true;",
    "    // Write your code here\n    std::sort(l.begin(), l.end());\n    for(int i = 0; i < l.size()-1; i++) {\n        if(l[i+1] - l[i] != 1) {\n            return false;\n        }\n    }\n    return true;",
    "    // Sort the list\n    std::sort(l.begin(), l.end());\n    // Check if the difference between the consecutive elements is 1\n    for (int i = 0; i < l.size() - 1; i++) {\n        if (l[i + 1] - l[i] != 1) {\n            return false;\n        }\n    }\n    return true;",
    "\t// Write your code here\n\tint n=l.size();\n\tint min=*min_element(l.begin(),l.end());\n\tint max=*max_element(l.begin(),l.end());\n\tif(n==max-min+1)\n\t{\n\t\treturn true;\n\t}\n\telse\n\t{\n\t\treturn false;\n\t}",
    "    // Write your code here\n    int n = l.size();\n    if(n==1)\n        return true;\n    sort(l.begin(), l.end());\n    int d = l[1] - l[0];\n    for(int i=1; i<n; i++){\n        if(l[i]-l[i-1] != d)\n            return false;\n    }\n    return true;",
    "    // Write your code here\n    std::sort(l.begin(), l.end());\n    for(int i=0;i<l.size()-1;i++){\n        if(l[i+1]-l[i]!=1){\n            return false;\n        }\n    }\n    return true;",
    "    // Write your code here\n    int n = l.size();\n    sort(l.begin(), l.end());\n    for(int i = 0; i < n-1; i++){\n        if(l[i+1] - l[i] != 1){\n            return false;\n        }\n    }\n    return true;",
    "    //write your code here\n    //return true or false\n    std::sort(l.begin(),l.end());\n    for(int i=0;i<l.size()-1;i++){\n        if(l[i+1]-l[i]!=1){\n            return false;\n        }\n    }\n    return true;",
    "    int n = l.size();\n    if(n == 0)\n        return false;\n    int min = *std::min_element(l.begin(), l.end());\n    int max = *std::max_element(l.begin(), l.end());\n    if(max - min + 1 == n) {\n        return true;\n    }\n    return false;",
    "    // Write your code here\n    int n = l.size();\n    if(n == 0)\n        return false;\n    sort(l.begin(), l.end());\n    int d = l[1] - l[0];\n    for(int i = 2; i < n; i++) {\n        if(l[i] - l[i-1] != d)\n            return false;\n    }\n    return true;",
    "    std::sort(l.begin(), l.end());\n    for (int i = 0; i < l.size()-1; i++) {\n        if (l[i+1] - l[i] != 1) {\n            return false;\n        }\n    }\n    return true;",
    "    int n = l.size();\n    if (n <= 1) {\n        return true;\n    }\n    sort(l.begin(), l.end());\n    for (int i = 1; i < n; i++) {\n        if (l[i] - l[i - 1] != 1) {\n            return false;\n        }\n    }\n    return true;",
    "    // Write your code here\n    int n = l.size();\n    sort(l.begin(),l.end());\n    for(int i=0;i<n-1;i++){\n        if(l[i+1]-l[i]!=1){\n            return false;\n        }\n    }\n    return true;",
    "    // Write your code here\n    std::vector<long> v;\n    for(int i=0;i<l.size();i++){\n        v.push_back(l[i]);\n    }\n    std::sort(v.begin(),v.end());\n    for(int i=0;i<v.size()-1;i++){\n        if(v[i+1]-v[i]!=1){\n            return false;\n        }\n    }\n    return true;",
    "    //write your code here\n    std::sort(l.begin(),l.end());\n    for(int i=0;i<l.size()-1;i++){\n        if(l[i+1]-l[i]!=1){\n            return false;\n        }\n    }\n    return true;",
    "    //write your code here\n    int n = l.size();\n    sort(l.begin(), l.end());\n    for(int i = 0; i < n-1; i++){\n        if(l[i+1] - l[i] != 1){\n            return false;\n        }\n    }\n    return true;",
    "    std::sort(l.begin(), l.end());\n    for(int i = 0; i < l.size() - 1; i++) {\n        if(l[i] + 1 != l[i + 1]) {\n            return false;\n        }\n    }\n    return true;",
    "\t// Write your code here\n\tint n = l.size();\n\tif (n == 0)\n\t\treturn true;\n\tstd::sort(l.begin(), l.end());\n\tint d = l[1] - l[0];\n\tfor (int i = 2; i < n; i++) {\n\t\tif (l[i] - l[i - 1] != d)\n\t\t\treturn false;\n\t}\n\treturn true;",
    "    //write your code here\n    std::sort(l.begin(), l.end());\n    for(int i=0; i<l.size()-1; i++){\n        if(l[i+1]-l[i] != 1){\n            return false;\n        }\n    }\n    return true;",
    "    //write your code here\n    std::sort(l.begin(),l.end());\n    for(int i=0;i<l.size()-1;i++){\n        if(l[i+1]-l[i]!=1){\n            return false;\n        }\n    }\n    return true;",
    "    //write your code here\n    std::sort(l.begin(),l.end());\n    for(int i=0;i<l.size()-1;i++){\n        if(l[i+1]-l[i]!=1){\n            return false;\n        }\n    }\n    return true;",
    "    int n = l.size();\n    if (n == 0)\n        return false;\n    sort(l.begin(), l.end());\n    int d = l[1] - l[0];\n    for (int i = 1; i < n; i++) {\n        if (l[i] - l[i - 1] != d)\n            return false;\n    }\n    return true;",
    "    std::sort(l.begin(), l.end());\n    for(int i=0; i<l.size()-1; i++) {\n        if(l[i+1] - l[i] != 1)\n            return false;\n    }\n    return true;",
    "    int n = l.size();\n    if (n == 1)\n        return true;\n    std::sort(l.begin(), l.end());\n    for (int i = 1; i < n; i++) {\n        if (l[i] - l[i - 1] != 1)\n            return false;\n    }\n    return true;",
    "    // Write your code here\n    std::sort(l.begin(),l.end());\n    for(int i=0;i<l.size()-1;i++)\n    {\n        if(l[i+1]-l[i]!=1)\n        {\n            return false;\n        }\n    }\n    return true;",
    "    int n = l.size();\n    if(n == 0)\n        return false;\n    if(n == 1)\n        return true;\n    std::sort(l.begin(), l.end());\n    for(int i = 0; i < n - 1; i++) {\n        if(l[i + 1] - l[i] != 1)\n            return false;\n    }\n    return true;",
    "    //write your code here\n    std::sort(l.begin(),l.end());\n    for(int i=0;i<l.size()-1;i++){\n        if(l[i+1]-l[i]!=1){\n            return false;\n        }\n    }\n    return true;",
    "    //write your code here\n    int n = l.size();\n    if(n == 1)\n        return true;\n    sort(l.begin(), l.end());\n    int d = l[1] - l[0];\n    for(int i = 2; i < n; i++){\n        if(l[i] - l[i-1] != d)\n            return false;\n    }\n    return true;",
    "    // Write your code here\n    std::sort(l.begin(), l.end());\n    for (int i = 0; i < l.size() - 1; i++) {\n        if (l[i] + 1 != l[i + 1])\n            return false;\n    }\n    return true;",
    "    //  sort the list\n    std::sort(l.begin(), l.end());\n    //  check if the difference between consecutive elements is 1\n    for(int i=0; i<l.size()-1; i++) {\n        if(l[i+1] - l[i] != 1) {\n            return false;\n        }\n    }\n    return true;",
    "    //write your code here\n    std::sort(l.begin(),l.end());\n    for(int i=0;i<l.size()-1;i++){\n        if(l[i+1]-l[i]!=1){\n            return false;\n        }\n    }\n    return true;",
    "    // Write your code here\n    std::sort(l.begin(),l.end());\n    for(int i=0;i<l.size()-1;i++)\n    {\n        if(l[i]+1!=l[i+1])\n        {\n            return false;\n        }\n    }\n    return true;"
  ]
}
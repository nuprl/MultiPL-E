{
  "name": "mbpp_6_differ_At_One_Bit_Pos",
  "language": "cpp",
  "prompt": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to check whether the two numbers differ at one bit position only or not.\nbool differ_At_One_Bit_Pos(long a, long b) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_6_differ_At_One_Bit_Pos.py",
  "prompt_terminology": "verbatim",
  "tests": "}\nint main() {\n    auto candidate = differ_At_One_Bit_Pos;\n    assert(candidate((13), (9)) == (true));\n    assert(candidate((15), (8)) == (false));\n    assert(candidate((2), (4)) == (false));\n    assert(candidate((2), (3)) == (true));\n    assert(candidate((5), (1)) == (true));\n    assert(candidate((1), (5)) == (true));\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    // Write your code here\n    int count = 0;\n    for(int i = 0; i < 32; i++) {\n        if((a & (1 << i)) != (b & (1 << i))) {\n            count++;\n        }\n    }\n    if(count == 1) {\n        return true;\n    }\n    return false;",
    "    long c = a ^ b;\n    if(c == 0)\n        return false;\n    if(c & (c - 1))\n        return false;\n    return true;",
    "    // Write your code here\n    int count = 0;\n    for (int i = 0; i < 32; i++) {\n        if (((a >> i) & 1) != ((b >> i) & 1)) {\n            count++;\n        }\n    }\n    return count == 1;",
    "    int c = a ^ b;\n    return (c & (c-1)) == 0;",
    "    // Write your code here\n    int count = 0;\n    long c = a ^ b;\n    while(c) {\n        count++;\n        c = c & (c-1);\n    }\n    if(count == 1)\n        return true;\n    else\n        return false;",
    "    int count = 0;\n    while(a > 0 || b > 0) {\n        if((a & 1) != (b & 1)) {\n            count++;\n        }\n        a = a >> 1;\n        b = b >> 1;\n    }\n    return count == 1;",
    "    // Write your code here\n    int count = 0;\n    long x = a^b;\n    while(x)\n    {\n        count++;\n        x = x&(x-1);\n    }\n    if(count == 1)\n        return true;\n    else\n        return false;",
    "    int count = 0;\n    for (int i = 0; i < 32; i++) {\n        if ((a & 1) != (b & 1)) {\n            count++;\n        }\n        a = a >> 1;\n        b = b >> 1;\n    }\n    return count == 1;",
    "    int count = 0;\n    for (int i = 0; i < 32; i++) {\n        if ((a & (1 << i)) != (b & (1 << i))) {\n            count++;\n        }\n    }\n    return count == 1;",
    "    long c = a ^ b;\n    if (c == 0) {\n        return false;\n    }\n    if (c & (c - 1)) {\n        return false;\n    }\n    return true;",
    "    // Write your code here\n    int count = 0;\n    for(int i=0;i<32;i++){\n        if((a&1) != (b&1)){\n            count++;\n        }\n        a = a>>1;\n        b = b>>1;\n    }\n    if(count == 1){\n        return true;\n    }\n    return false;",
    "    long x = a ^ b;\n    return (x & (x - 1)) == 0;",
    "    int count = 0;\n    for (int i = 0; i < 32; i++) {\n        if ((a & (1 << i)) != (b & (1 << i))) {\n            count++;\n        }\n    }\n    return count == 1;",
    "    int count = 0;\n    long x = a ^ b;\n    while(x) {\n        count++;\n        x = x & (x-1);\n    }\n    return count == 1;",
    "    long c = a ^ b;\n    if(c && !(c & (c - 1))) {\n        return true;\n    }\n    return false;",
    "    long x = a ^ b;\n    return (x & (x - 1)) == 0;",
    "    // Write your code here\n    int count = 0;\n    for(int i = 0; i < 32; i++) {\n        if(((a >> i) & 1) != ((b >> i) & 1)) {\n            count++;\n        }\n    }\n    if(count == 1) {\n        return true;\n    }\n    return false;",
    "    long x = a ^ b;\n    return (x & (x - 1)) == 0;",
    "    int count = 0;\n    for (int i = 0; i < 32; i++) {\n        if ((a & (1 << i)) != (b & (1 << i))) {\n            count++;\n        }\n    }\n    return count == 1;",
    "    long c = a ^ b;\n    if(c & (c-1)) {\n        return false;\n    }\n    return true;"
  ]
}
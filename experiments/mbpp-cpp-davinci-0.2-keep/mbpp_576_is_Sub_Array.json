{
  "name": "mbpp_576_is_Sub_Array",
  "language": "cpp",
  "prompt": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to check whether a list is sublist of another or not.\nbool is_Sub_Array(std::vector<long> A, std::vector<long> B) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_576_is_Sub_Array.py",
  "prompt_terminology": "verbatim",
  "tests": "}\nint main() {\n    auto candidate = is_Sub_Array;\n    assert(candidate((std::vector<long>({(long)1, (long)4, (long)3, (long)5})), (std::vector<long>({(long)1, (long)2}))) == (false));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)1})), (std::vector<long>({(long)1, (long)2, (long)1}))) == (true));\n    assert(candidate((std::vector<long>({(long)1, (long)0, (long)2, (long)2})), (std::vector<long>({(long)2, (long)2, (long)0}))) == (false));\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    int m = A.size();\n    int n = B.size();\n    int i = 0;\n    int j = 0;\n    while (i < n && j < m) {\n        if (A[j] == B[i]) {\n            j++;\n        }\n        i++;\n    }\n    return (j == m);",
    "    int n = A.size();\n    int m = B.size();\n    for (int i = 0; i <= n - m; i++) {\n        int j;\n        for (j = 0; j < m; j++)\n            if (A[i + j] != B[j])\n                break;\n        if (j == m)\n            return true;\n    }\n    return false;",
    "    int n = A.size();\n    int m = B.size();\n    if (m > n)\n        return false;\n    for (int i = 0; i < n - m + 1; i++) {\n        int j;\n        for (j = 0; j < m; j++)\n            if (A[i + j] != B[j])\n                break;\n        if (j == m)\n            return true;\n    }\n    return false;",
    "    int n = A.size();\n    int m = B.size();\n    for (int i = 0; i < n - m + 1; i++) {\n        int j;\n        for (j = 0; j < m; j++) {\n            if (A[i + j] != B[j]) {\n                break;\n            }\n        }\n        if (j == m) {\n            return true;\n        }\n    }\n    return false;",
    "    int n = A.size();\n    int m = B.size();\n    int i = 0;\n    int j = 0;\n    while (i < n && j < m) {\n        if (A[i] == B[j]) {\n            i++;\n            j++;\n        } else {\n            i = i - j + 1;\n            j = 0;\n        }\n    }\n    if (j == m) {\n        return true;\n    } else {\n        return false;\n    }",
    "    int n = A.size();\n    int m = B.size();\n    if (m > n) {\n        return false;\n    }\n    for (int i = 0; i < n - m + 1; i++) {\n        int j;\n        for (j = 0; j < m; j++) {\n            if (A[i + j] != B[j]) {\n                break;\n            }\n        }\n        if (j == m) {\n            return true;\n        }\n    }\n    return false;",
    "    int i = 0, j = 0;\n    while(i < A.size() && j < B.size()) {\n        if(A[i] == B[j]) {\n            i++;\n            j++;\n        }\n        else {\n            i++;\n        }\n    }\n    if(j == B.size()) {\n        return true;\n    }\n    return false;",
    "    int n = A.size();\n    int m = B.size();\n    if(m > n)\n        return false;\n    for(int i = 0; i <= n - m; i++) {\n        int j;\n        for(j = 0; j < m; j++) {\n            if(A[i + j] != B[j])\n                break;\n        }\n        if(j == m)\n            return true;\n    }\n    return false;",
    "    // assert(A.size() > 0);\n    // assert(B.size() > 0);\n    // assert(A.size() >= B.size());\n    int i = 0;\n    int j = 0;\n    while(i < A.size() && j < B.size()) {\n        if(A[i] == B[j]) {\n            i++;\n            j++;\n        } else {\n            i = i - j + 1;\n            j = 0;\n        }\n    }\n    if(j == B.size()) {\n        return true;\n    } else {\n        return false;\n    }",
    "    int m = A.size();\n    int n = B.size();\n    int i = 0;\n    int j = 0;\n    while (i < n && j < m) {\n        if (A[j] == B[i]) {\n            j++;\n        }\n        i++;\n    }\n    return (j == m);",
    "    int n = A.size();\n    int m = B.size();\n    if(n < m) return false;\n    for(int i = 0; i < n - m + 1; i++) {\n        int j;\n        for(j = 0; j < m; j++) {\n            if(A[i + j] != B[j]) break;\n        }\n        if(j == m) return true;\n    }\n    return false;",
    "    int n = A.size();\n    int m = B.size();\n    int i = 0;\n    int j = 0;\n    while (i < n && j < m) {\n        if (A[i] == B[j]) {\n            i++;\n            j++;\n        } else {\n            i = i - j + 1;\n            j = 0;\n        }\n    }\n    if (j == m) {\n        return true;\n    } else {\n        return false;\n    }",
    "    int n = A.size();\n    int m = B.size();\n    if(n < m) {\n        return false;\n    }\n    for(int i = 0; i <= n - m; i++) {\n        int j;\n        for(j = 0; j < m; j++) {\n            if(A[i + j] != B[j]) {\n                break;\n            }\n        }\n        if(j == m) {\n            return true;\n        }\n    }\n    return false;",
    "    int n = A.size();\n    int m = B.size();\n    int i = 0;\n    int j = 0;\n    while (i < n && j < m) {\n        if (A[i] == B[j]) {\n            i++;\n            j++;\n        } else {\n            i = i - j + 1;\n            j = 0;\n        }\n    }\n    if (j == m) {\n        return true;\n    }\n    return false;",
    "    if(A.size() > B.size()) {\n        return false;\n    }\n    for(int i = 0; i < B.size(); i++) {\n        if(B[i] == A[0]) {\n            int j = 0;\n            while(j < A.size() && B[i+j] == A[j]) {\n                j++;\n            }\n            if(j == A.size()) {\n                return true;\n            }\n        }\n    }\n    return false;",
    "    int m = A.size();\n    int n = B.size();\n    if (m < n) {\n        return false;\n    }\n    for (int i = 0; i <= m - n; i++) {\n        int j;\n        for (j = 0; j < n; j++) {\n            if (A[i + j] != B[j]) {\n                break;\n            }\n        }\n        if (j == n) {\n            return true;\n        }\n    }\n    return false;",
    "    int i = 0, j = 0;\n    while (i < A.size() && j < B.size()) {\n        if (A[i] == B[j]) {\n            i++;\n            j++;\n        } else {\n            i = i - j + 1;\n            j = 0;\n        }\n    }\n    if (j == B.size()) {\n        return true;\n    } else {\n        return false;\n    }",
    "    int n = A.size();\n    int m = B.size();\n    for (int i = 0; i <= n - m; i++) {\n        int j;\n        for (j = 0; j < m; j++) {\n            if (A[i + j] != B[j]) {\n                break;\n            }\n        }\n        if (j == m) {\n            return true;\n        }\n    }\n    return false;",
    "    int n = A.size();\n    int m = B.size();\n    for (int i = 0; i <= n - m; i++) {\n        int j;\n        for (j = 0; j < m; j++) {\n            if (A[i + j] != B[j]) {\n                break;\n            }\n        }\n        if (j == m) {\n            return true;\n        }\n    }\n    return false;",
    "    int i = 0, j = 0;\n    while(i < A.size() && j < B.size()) {\n        if(A[i] == B[j]) {\n            i++;\n            j++;\n        } else {\n            i++;\n        }\n    }\n    if(j == B.size()) {\n        return true;\n    } else {\n        return false;\n    }"
  ]
}
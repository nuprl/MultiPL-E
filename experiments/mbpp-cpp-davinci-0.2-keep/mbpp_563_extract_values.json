{
  "name": "mbpp_563_extract_values",
  "language": "cpp",
  "prompt": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to extract values between quotation marks from a string.\nstd::vector<std::string> extract_values(std::string text) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_563_extract_values.py",
  "prompt_terminology": "verbatim",
  "tests": "}\nint main() {\n    auto candidate = extract_values;\n    assert(candidate((\"\"Python\", \"PHP\", \"Java\"\")) == (std::vector<std::string>({(std::string)\"Python\", (std::string)\"PHP\", (std::string)\"Java\"})));\n    assert(candidate((\"\"python\",\"program\",\"language\"\")) == (std::vector<std::string>({(std::string)\"python\", (std::string)\"program\", (std::string)\"language\"})));\n    assert(candidate((\"\"red\",\"blue\",\"green\",\"yellow\"\")) == (std::vector<std::string>({(std::string)\"red\", (std::string)\"blue\", (std::string)\"green\", (std::string)\"yellow\"})));\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    std::vector<std::string> values;\n    std::string value;\n    bool in_quotes = false;\n    for (char c : text) {\n        if (c == '\"') {\n            if (in_quotes) {\n                values.push_back(value);\n                value = \"\";\n            }\n            in_quotes = !in_quotes;\n        } else if (in_quotes) {\n            value += c;\n        }\n    }\n    return values;",
    "    std::vector<std::string> result;\n    std::string temp;\n    for(int i = 0; i < text.length(); i++) {\n        if(text[i] == '\"') {\n            i++;\n            while(text[i] != '\"') {\n                temp += text[i];\n                i++;\n            }\n            result.push_back(temp);\n            temp.clear();\n        }\n    }\n    return result;",
    "  std::vector<std::string> result;\n  std::string temp;\n  bool flag = false;\n  for (int i = 0; i < text.size(); i++) {\n    if (text[i] == '\"') {\n      if (flag) {\n        result.push_back(temp);\n        temp = \"\";\n        flag = false;\n      } else {\n        flag = true;\n      }\n    } else if (flag) {\n      temp += text[i];\n    }\n  }\n  return result;",
    "    std::vector<std::string> values;\n    std::string value;\n    bool in_quotes = false;\n    for (char c : text) {\n        if (c == '\"') {\n            in_quotes = !in_quotes;\n            if (!in_quotes) {\n                values.push_back(value);\n                value.clear();\n            }\n        } else if (in_quotes) {\n            value += c;\n        }\n    }\n    return values;",
    "    std::vector<std::string> result;\n    std::string temp;\n    bool flag = false;\n    for(auto i: text) {\n        if(i == '\"') {\n            if(flag) {\n                result.push_back(temp);\n                temp = \"\";\n            }\n            flag = !flag;\n        }\n        else if(flag) {\n            temp += i;\n        }\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::stringstream ss(text);\n    std::string item;\n    while (std::getline(ss, item, '\"')) {\n        if (!item.empty()) {\n            result.push_back(item);\n        }\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::string str;\n    int i=0;\n    while(i<text.length()){\n        if(text[i]=='\"'){\n            i++;\n            while(text[i]!='\"'){\n                str+=text[i];\n                i++;\n            }\n            result.push_back(str);\n            str=\"\";\n        }\n        i++;\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::string temp;\n    for(int i = 0; i < text.size(); i++) {\n        if(text[i] == '\"') {\n            temp = \"\";\n            i++;\n            while(text[i] != '\"') {\n                temp += text[i];\n                i++;\n            }\n            result.push_back(temp);\n        }\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::string temp;\n    bool flag = false;\n    for(int i = 0; i < text.length(); i++) {\n        if(text[i] == '\"') {\n            if(flag) {\n                result.push_back(temp);\n                temp.clear();\n                flag = false;\n            } else {\n                flag = true;\n            }\n        } else if(flag) {\n            temp += text[i];\n        }\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::string temp;\n    bool flag = false;\n    for(int i=0; i<text.length(); i++) {\n        if(text[i] == '\"') {\n            if(flag) {\n                result.push_back(temp);\n                temp = \"\";\n            }\n            flag = !flag;\n        }\n        else if(flag) {\n            temp += text[i];\n        }\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::string temp;\n    for(int i = 0; i < text.length(); i++) {\n        if(text[i] == '\"') {\n            temp = \"\";\n            for(int j = i + 1; j < text.length(); j++) {\n                if(text[j] == '\"') {\n                    result.push_back(temp);\n                    break;\n                }\n                temp += text[j];\n            }\n        }\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::string temp;\n    for(int i = 0; i < text.length(); i++) {\n        if(text[i] == '\"') {\n            temp = \"\";\n            i++;\n            while(text[i] != '\"') {\n                temp += text[i];\n                i++;\n            }\n            result.push_back(temp);\n        }\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::string temp;\n    for(int i = 0; i < text.size(); i++) {\n        if(text[i] == '\"') {\n            i++;\n            while(text[i] != '\"') {\n                temp += text[i];\n                i++;\n            }\n            result.push_back(temp);\n            temp.clear();\n        }\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::string temp;\n    for(int i=0;i<text.length();i++) {\n        if(text[i]=='\"') {\n            i++;\n            while(text[i]!='\"') {\n                temp.push_back(text[i]);\n                i++;\n            }\n            result.push_back(temp);\n            temp.clear();\n        }\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::string temp;\n    bool flag = false;\n    for(int i = 0; i < text.length(); i++) {\n        if(text[i] == '\"') {\n            if(flag) {\n                result.push_back(temp);\n                temp = \"\";\n            }\n            flag = !flag;\n        } else if(flag) {\n            temp += text[i];\n        }\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::string temp;\n    for(int i=0;i<text.length();i++)\n    {\n        if(text[i]=='\"')\n        {\n            temp.clear();\n            i++;\n            while(text[i]!='\"')\n            {\n                temp.push_back(text[i]);\n                i++;\n            }\n            result.push_back(temp);\n        }\n    }\n    return result;",
    "    std::vector<std::string> values;\n    std::string value;\n    bool in_quotes = false;\n    for (char c : text) {\n        if (c == '\"') {\n            in_quotes = !in_quotes;\n            if (!in_quotes) {\n                values.push_back(value);\n                value.clear();\n            }\n        } else if (in_quotes) {\n            value += c;\n        }\n    }\n    return values;",
    "    std::vector<std::string> values;\n    std::string value;\n    bool in_quotes = false;\n    for (char c : text) {\n        if (c == '\"') {\n            if (in_quotes) {\n                values.push_back(value);\n                value = \"\";\n            }\n            in_quotes = !in_quotes;\n        } else if (in_quotes) {\n            value += c;\n        }\n    }\n    return values;",
    "    std::vector<std::string> values;\n    std::string value;\n    bool in_quotes = false;\n    for (char c : text) {\n        if (c == '\"') {\n            if (in_quotes) {\n                values.push_back(value);\n                value = \"\";\n            }\n            in_quotes = !in_quotes;\n        } else if (in_quotes) {\n            value += c;\n        }\n    }\n    return values;",
    "    std::vector<std::string> result;\n    std::string temp;\n    for(int i=0;i<text.size();i++)\n    {\n        if(text[i]=='\"')\n        {\n            temp.clear();\n            i++;\n            while(text[i]!='\"')\n            {\n                temp.push_back(text[i]);\n                i++;\n            }\n            result.push_back(temp);\n        }\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::string temp;\n    bool flag = false;\n    for(int i = 0; i < text.length(); i++) {\n        if(text[i] == '\"') {\n            if(flag) {\n                result.push_back(temp);\n                temp = \"\";\n            }\n            flag = !flag;\n        } else if(flag) {\n            temp += text[i];\n        }\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::string temp;\n    for(int i = 0; i < text.length(); i++) {\n        if(text[i] == '\"') {\n            temp = \"\";\n            i++;\n            while(text[i] != '\"') {\n                temp += text[i];\n                i++;\n            }\n            result.push_back(temp);\n        }\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::string temp;\n    bool flag = false;\n    for(int i = 0; i < text.length(); i++) {\n        if(text[i] == '\"') {\n            if(flag) {\n                result.push_back(temp);\n                temp.clear();\n            }\n            flag = !flag;\n        }\n        else if(flag) {\n            temp += text[i];\n        }\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::string temp;\n    for(int i = 0; i < text.size(); i++) {\n        if(text[i] == '\"') {\n            temp.clear();\n            i++;\n            while(text[i] != '\"') {\n                temp.push_back(text[i]);\n                i++;\n            }\n            result.push_back(temp);\n        }\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::string temp;\n    bool flag = false;\n    for (int i = 0; i < text.length(); i++) {\n        if (text[i] == '\"') {\n            if (flag) {\n                result.push_back(temp);\n                temp = \"\";\n                flag = false;\n            } else {\n                flag = true;\n            }\n        } else if (flag) {\n            temp += text[i];\n        }\n    }\n    return result;",
    "  std::vector<std::string> result;\n  std::string temp;\n  int i = 0;\n  while (i < text.size()) {\n    if (text[i] == '\"') {\n      i++;\n      while (text[i] != '\"') {\n        temp += text[i];\n        i++;\n      }\n      result.push_back(temp);\n      temp = \"\";\n    }\n    i++;\n  }\n  return result;",
    "    std::vector<std::string> result;\n    std::string temp;\n    for (int i = 0; i < text.length(); i++) {\n        if (text[i] == '\"') {\n            temp.clear();\n            i++;\n            while (text[i] != '\"') {\n                temp += text[i];\n                i++;\n            }\n            result.push_back(temp);\n        }\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::string temp;\n    bool flag = false;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i] == '\"') {\n            if (flag) {\n                result.push_back(temp);\n                temp.clear();\n            }\n            flag = !flag;\n        } else if (flag) {\n            temp.push_back(text[i]);\n        }\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::string temp;\n    int i = 0;\n    while(i < text.length()) {\n        if(text[i] == '\"') {\n            temp = \"\";\n            i++;\n            while(text[i] != '\"') {\n                temp += text[i];\n                i++;\n            }\n            result.push_back(temp);\n        }\n        i++;\n    }\n    return result;",
    "    std::vector<std::string> values;\n    std::string value;\n    bool in_quotes = false;\n    for (char c : text) {\n        if (c == '\"') {\n            if (in_quotes) {\n                values.push_back(value);\n                value.clear();\n            }\n            in_quotes = !in_quotes;\n        } else if (in_quotes) {\n            value += c;\n        }\n    }\n    return values;",
    "    std::vector<std::string> result;\n    std::string temp;\n    bool flag = false;\n    for(int i = 0; i < text.length(); i++) {\n        if(text[i] == '\"') {\n            if(flag) {\n                result.push_back(temp);\n                temp = \"\";\n            }\n            flag = !flag;\n        }\n        else if(flag) {\n            temp += text[i];\n        }\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::string temp;\n    int i = 0;\n    while (i < text.size()) {\n        if (text[i] == '\"') {\n            temp.clear();\n            i++;\n            while (i < text.size() && text[i] != '\"') {\n                temp.push_back(text[i]);\n                i++;\n            }\n            result.push_back(temp);\n        }\n        i++;\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::string temp;\n    for(int i=0;i<text.size();i++) {\n        if(text[i]=='\"') {\n            temp.clear();\n            i++;\n            while(text[i]!='\"') {\n                temp.push_back(text[i]);\n                i++;\n            }\n            result.push_back(temp);\n        }\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::string temp;\n    bool flag = false;\n    for(int i = 0; i < text.length(); i++) {\n        if(text[i] == '\"') {\n            if(flag) {\n                result.push_back(temp);\n                temp.clear();\n            }\n            flag = !flag;\n        } else if(flag) {\n            temp += text[i];\n        }\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::string temp = \"\";\n    bool flag = false;\n    for(int i = 0; i < text.length(); i++) {\n        if(text[i] == '\"') {\n            if(flag) {\n                result.push_back(temp);\n                temp = \"\";\n            }\n            flag = !flag;\n        }\n        else if(flag) {\n            temp += text[i];\n        }\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::string temp;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i] == '\"') {\n            i++;\n            while (text[i] != '\"') {\n                temp += text[i];\n                i++;\n            }\n            result.push_back(temp);\n            temp = \"\";\n        }\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::string temp;\n    int flag = 0;\n    for(int i=0;i<text.length();i++) {\n        if(text[i] == '\"') {\n            flag = !flag;\n            if(flag == 0) {\n                result.push_back(temp);\n                temp.clear();\n            }\n        } else if(flag == 1) {\n            temp += text[i];\n        }\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::string temp;\n    int i = 0;\n    while(i < text.size()) {\n        if(text[i] == '\"') {\n            i++;\n            while(text[i] != '\"') {\n                temp += text[i];\n                i++;\n            }\n            result.push_back(temp);\n            temp.clear();\n        }\n        i++;\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::string temp;\n    for(int i=0;i<text.length();i++) {\n        if(text[i]=='\"') {\n            temp=\"\";\n            i++;\n            while(text[i]!='\"') {\n                temp+=text[i];\n                i++;\n            }\n            result.push_back(temp);\n        }\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::string temp;\n    for(int i=0;i<text.size();i++){\n        if(text[i]=='\"'){\n            i++;\n            while(text[i]!='\"'){\n                temp+=text[i];\n                i++;\n            }\n            result.push_back(temp);\n            temp.clear();\n        }\n    }\n    return result;",
    "    std::vector<std::string> values;\n    std::string value;\n    bool in_quotes = false;\n    for (auto c : text) {\n        if (c == '\"') {\n            in_quotes = !in_quotes;\n            if (!in_quotes) {\n                values.push_back(value);\n                value.clear();\n            }\n        } else if (in_quotes) {\n            value += c;\n        }\n    }\n    return values;",
    "    std::vector<std::string> result;\n    std::string temp;\n    int i = 0;\n    while (i < text.length()) {\n        if (text[i] == '\"') {\n            temp.clear();\n            i++;\n            while (text[i] != '\"') {\n                temp.push_back(text[i]);\n                i++;\n            }\n            result.push_back(temp);\n        }\n        i++;\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::string temp;\n    for(int i=0;i<text.length();i++){\n        if(text[i]=='\"'){\n            temp=\"\";\n            i++;\n            while(text[i]!='\"'){\n                temp+=text[i];\n                i++;\n            }\n            result.push_back(temp);\n        }\n    }\n    return result;",
    "    std::vector<std::string> values;\n    std::string value;\n    bool in_quotes = false;\n    for (char c : text) {\n        if (c == '\"') {\n            if (in_quotes) {\n                values.push_back(value);\n                value.clear();\n            }\n            in_quotes = !in_quotes;\n        } else if (in_quotes) {\n            value += c;\n        }\n    }\n    return values;",
    "    std::vector<std::string> values;\n    std::string value = \"\";\n    bool is_quoted = false;\n    for (int i = 0; i < text.length(); i++) {\n        if (text[i] == '\"') {\n            is_quoted = !is_quoted;\n            if (!is_quoted) {\n                values.push_back(value);\n                value = \"\";\n            }\n        } else if (is_quoted) {\n            value += text[i];\n        }\n    }\n    return values;",
    "    std::vector<std::string> result;\n    std::string temp;\n    for (int i = 0; i < text.length(); i++) {\n        if (text[i] == '\"') {\n            i++;\n            while (text[i] != '\"') {\n                temp += text[i];\n                i++;\n            }\n            result.push_back(temp);\n            temp.clear();\n        }\n    }\n    return result;",
    "    std::vector<std::string> result;\n    int start = 0;\n    int end = 0;\n    for (int i = 0; i < text.length(); i++) {\n        if (text[i] == '\"') {\n            if (start == 0) {\n                start = i + 1;\n            } else {\n                end = i;\n                result.push_back(text.substr(start, end - start));\n                start = 0;\n            }\n        }\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::string temp;\n    int i = 0;\n    while(i < text.length()) {\n        if(text[i] == '\"') {\n            i++;\n            while(text[i] != '\"') {\n                temp += text[i];\n                i++;\n            }\n            result.push_back(temp);\n            temp.clear();\n        }\n        i++;\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::string temp;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i] == '\"') {\n            i++;\n            while (text[i] != '\"') {\n                temp += text[i];\n                i++;\n            }\n            result.push_back(temp);\n            temp.clear();\n        }\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::string temp;\n    bool flag = false;\n    for(int i = 0; i < text.size(); i++) {\n        if(text[i] == '\"') {\n            if(flag) {\n                result.push_back(temp);\n                temp.clear();\n                flag = false;\n            }\n            else {\n                flag = true;\n            }\n        }\n        else if(flag) {\n            temp += text[i];\n        }\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::string temp;\n    bool flag = false;\n    for(int i = 0; i < text.length(); i++) {\n        if(text[i] == '\"') {\n            if(flag) {\n                result.push_back(temp);\n                temp = \"\";\n                flag = false;\n            } else {\n                flag = true;\n            }\n        } else if(flag) {\n            temp += text[i];\n        }\n    }\n    return result;",
    "    std::vector<std::string> values;\n    std::string value;\n    bool in_quotes = false;\n    for (auto c : text) {\n        if (c == '\"') {\n            in_quotes = !in_quotes;\n        } else if (in_quotes) {\n            value.push_back(c);\n        } else if (c == ',') {\n            values.push_back(value);\n            value.clear();\n        }\n    }\n    if (!value.empty()) {\n        values.push_back(value);\n    }\n    return values;",
    "    std::vector<std::string> result;\n    std::string temp;\n    bool flag = false;\n    for(int i=0; i<text.size(); i++) {\n        if(text[i] == '\"') {\n            if(flag) {\n                result.push_back(temp);\n                temp = \"\";\n            }\n            flag = !flag;\n        }\n        else if(flag) {\n            temp += text[i];\n        }\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::string temp = \"\";\n    bool flag = false;\n    for(int i = 0; i < text.size(); i++) {\n        if(text[i] == '\"') {\n            if(flag == false) {\n                flag = true;\n            } else {\n                flag = false;\n                result.push_back(temp);\n                temp = \"\";\n            }\n        } else if(flag == true) {\n            temp += text[i];\n        }\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::string temp;\n    bool flag = false;\n    for(int i=0;i<text.length();i++) {\n        if(text[i] == '\"') {\n            if(flag) {\n                result.push_back(temp);\n                temp = \"\";\n                flag = false;\n            }\n            else {\n                flag = true;\n            }\n        }\n        else if(flag) {\n            temp += text[i];\n        }\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::string temp;\n    int i = 0;\n    while(i < text.length()) {\n        if(text[i] == '\\\"') {\n            i++;\n            while(text[i] != '\\\"') {\n                temp += text[i];\n                i++;\n            }\n            result.push_back(temp);\n            temp.clear();\n        }\n        i++;\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::string temp;\n    int i = 0;\n    while(i < text.size()) {\n        if(text[i] == '\"') {\n            i++;\n            while(text[i] != '\"') {\n                temp += text[i];\n                i++;\n            }\n            result.push_back(temp);\n            temp = \"\";\n        }\n        i++;\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::string temp = \"\";\n    int i = 0;\n    while (i < text.length()) {\n        if (text[i] == '\"') {\n            while (text[i] != '\"') {\n                temp += text[i];\n                i++;\n            }\n            result.push_back(temp);\n            temp = \"\";\n        }\n        i++;\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::string temp;\n    for (int i = 0; i < text.length(); i++) {\n        if (text[i] == '\"') {\n            temp.clear();\n            i++;\n            while (text[i] != '\"') {\n                temp.push_back(text[i]);\n                i++;\n            }\n            result.push_back(temp);\n        }\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::string temp;\n    int i = 0;\n    while(i < text.size()) {\n        if(text[i] == '\"') {\n            temp = \"\";\n            i++;\n            while(text[i] != '\"') {\n                temp += text[i];\n                i++;\n            }\n            result.push_back(temp);\n        }\n        i++;\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::string temp;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i] == '\"') {\n            i++;\n            while (text[i] != '\"') {\n                temp += text[i];\n                i++;\n            }\n            result.push_back(temp);\n            temp = \"\";\n        }\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::string temp;\n    int i = 0;\n    while(i < text.length()) {\n        if(text[i] == '\\\"') {\n            i++;\n            while(text[i] != '\\\"') {\n                temp += text[i];\n                i++;\n            }\n            result.push_back(temp);\n            temp = \"\";\n        }\n        i++;\n    }\n    return result;",
    "    std::vector<std::string> values;\n    std::string temp;\n    bool flag = false;\n    for(int i = 0; i < text.length(); i++) {\n        if(text[i] == '\"') {\n            if(flag) {\n                values.push_back(temp);\n                temp = \"\";\n            }\n            flag = !flag;\n        } else if(flag) {\n            temp += text[i];\n        }\n    }\n    return values;",
    "    std::vector<std::string> result;\n    std::string temp;\n    for(int i=0;i<text.length();i++)\n    {\n        if(text[i]=='\"')\n        {\n            i++;\n            while(text[i]!='\"')\n            {\n                temp+=text[i];\n                i++;\n            }\n            result.push_back(temp);\n            temp=\"\";\n        }\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::string temp;\n    for (int i = 0; i < text.length(); i++) {\n        if (text[i] == '\"') {\n            i++;\n            while (text[i] != '\"') {\n                temp += text[i];\n                i++;\n            }\n            result.push_back(temp);\n            temp = \"\";\n        }\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::stringstream ss(text);\n    std::string item;\n    while (std::getline(ss, item, '\"')) {\n        if (!item.empty()) {\n            result.push_back(item);\n        }\n    }\n    return result;",
    "    std::vector<std::string> values;\n    std::string value;\n    bool in_quotes = false;\n    for (char c : text) {\n        if (c == '\"') {\n            if (in_quotes) {\n                values.push_back(value);\n                value = \"\";\n            }\n            in_quotes = !in_quotes;\n        } else if (in_quotes) {\n            value += c;\n        }\n    }\n    return values;",
    "    std::vector<std::string> result;\n    std::string temp;\n    for(int i = 0; i < text.length(); i++) {\n        if(text[i] == '\"') {\n            i++;\n            while(text[i] != '\"') {\n                temp += text[i];\n                i++;\n            }\n            result.push_back(temp);\n            temp.clear();\n        }\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::string temp;\n    bool flag = false;\n    for(int i = 0; i < text.length(); i++) {\n        if(text[i] == '\"') {\n            if(flag) {\n                result.push_back(temp);\n                temp = \"\";\n                flag = false;\n            } else {\n                flag = true;\n            }\n        } else if(flag) {\n            temp += text[i];\n        }\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::string temp;\n    bool flag = false;\n    for(int i = 0; i < text.size(); i++) {\n        if(text[i] == '\"') {\n            if(flag) {\n                result.push_back(temp);\n                temp = \"\";\n            }\n            flag = !flag;\n        } else if(flag) {\n            temp += text[i];\n        }\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::string temp;\n    bool flag = false;\n    for(int i = 0; i < text.length(); i++) {\n        if(text[i] == '\"') {\n            if(flag) {\n                result.push_back(temp);\n                temp = \"\";\n                flag = false;\n            }\n            else {\n                flag = true;\n            }\n        }\n        else if(flag) {\n            temp += text[i];\n        }\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::string temp;\n    bool flag = false;\n    for (int i = 0; i < text.length(); i++) {\n        if (text[i] == '\"') {\n            if (flag) {\n                result.push_back(temp);\n                temp.clear();\n                flag = false;\n            } else {\n                flag = true;\n            }\n        } else if (flag) {\n            temp.push_back(text[i]);\n        }\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::string temp;\n    for(int i = 0; i < text.length(); i++) {\n        if(text[i] == '\"') {\n            i++;\n            while(text[i] != '\"') {\n                temp += text[i];\n                i++;\n            }\n            result.push_back(temp);\n            temp = \"\";\n        }\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::string::iterator it = text.begin();\n    std::string::iterator it2 = text.begin();\n    while (it != text.end()) {\n        if (*it == '\"') {\n            it2 = it;\n            it2++;\n            while (*it2 != '\"') {\n                it2++;\n            }\n            result.push_back(std::string(it + 1, it2));\n            it = it2;\n        }\n        it++;\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::string temp;\n    bool flag = false;\n    for(char c : text) {\n        if(c == '\"') {\n            if(flag) {\n                result.push_back(temp);\n                temp.clear();\n                flag = false;\n            } else {\n                flag = true;\n            }\n        } else if(flag) {\n            temp += c;\n        }\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::string temp;\n    for (int i = 0; i < text.length(); i++) {\n        if (text[i] == '\"') {\n            i++;\n            while (text[i] != '\"') {\n                temp += text[i];\n                i++;\n            }\n            result.push_back(temp);\n            temp = \"\";\n        }\n    }\n    return result;",
    "    std::vector<std::string> values;\n    std::string value;\n    bool in_quotes = false;\n    for (char c : text) {\n        if (c == '\"') {\n            if (in_quotes) {\n                values.push_back(value);\n                value.clear();\n            }\n            in_quotes = !in_quotes;\n        } else if (in_quotes) {\n            value += c;\n        }\n    }\n    return values;",
    "    std::vector<std::string> values;\n    std::string value;\n    bool in_quotes = false;\n    for (char c : text) {\n        if (c == '\"') {\n            if (in_quotes) {\n                values.push_back(value);\n                value.clear();\n            }\n            in_quotes = !in_quotes;\n        } else if (in_quotes) {\n            value += c;\n        }\n    }\n    return values;",
    "    std::vector<std::string> result;\n    std::string::size_type start = 0;\n    std::string::size_type end = 0;\n    while (start != std::string::npos) {\n        start = text.find('\"', start);\n        if (start == std::string::npos) {\n            break;\n        }\n        end = text.find('\"', start + 1);\n        if (end == std::string::npos) {\n            break;\n        }\n        result.push_back(text.substr(start + 1, end - start - 1));\n        start = end + 1;\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::string temp;\n    for(int i = 0; i < text.length(); i++) {\n        if(text[i] == '\"') {\n            temp.clear();\n            for(int j = i+1; j < text.length(); j++) {\n                if(text[j] == '\"') {\n                    result.push_back(temp);\n                    break;\n                }\n                temp += text[j];\n            }\n        }\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::string temp;\n    bool flag = false;\n    for(int i = 0; i < text.size(); i++) {\n        if(text[i] == '\"') {\n            if(flag) {\n                result.push_back(temp);\n                temp = \"\";\n                flag = false;\n            } else {\n                flag = true;\n            }\n        } else if(flag) {\n            temp += text[i];\n        }\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::string temp;\n    for(int i = 0; i < text.length(); i++) {\n        if(text[i] == '\"') {\n            i++;\n            while(text[i] != '\"') {\n                temp += text[i];\n                i++;\n            }\n            result.push_back(temp);\n            temp = \"\";\n        }\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::string temp;\n    bool flag = false;\n    for(int i = 0; i < text.length(); i++) {\n        if(text[i] == '\"') {\n            if(flag) {\n                result.push_back(temp);\n                temp = \"\";\n                flag = false;\n            } else {\n                flag = true;\n            }\n        } else if(flag) {\n            temp += text[i];\n        }\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::string temp;\n    bool flag = false;\n    for (auto i : text) {\n        if (i == '\"') {\n            flag = !flag;\n            if (!flag) {\n                result.push_back(temp);\n                temp.clear();\n            }\n        } else if (flag) {\n            temp += i;\n        }\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::string temp;\n    int i = 0;\n    while (i < text.length()) {\n        if (text[i] == '\"') {\n            temp = \"\";\n            i++;\n            while (text[i] != '\"') {\n                temp += text[i];\n                i++;\n            }\n            result.push_back(temp);\n        }\n        i++;\n    }\n    return result;",
    "    std::vector<std::string> values;\n    std::string temp;\n    int i = 0;\n    while(i < text.length()) {\n        if(text[i] == '\"') {\n            temp = \"\";\n            i++;\n            while(text[i] != '\"') {\n                temp += text[i];\n                i++;\n            }\n            values.push_back(temp);\n        }\n        i++;\n    }\n    return values;",
    "    std::vector<std::string> result;\n    std::string temp;\n    bool flag = false;\n    for(int i = 0; i < text.length(); i++) {\n        if(text[i] == '\"') {\n            if(flag) {\n                result.push_back(temp);\n                temp.clear();\n            }\n            flag = !flag;\n        } else if(flag) {\n            temp += text[i];\n        }\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::string temp;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i] == '\"') {\n            i++;\n            while (text[i] != '\"') {\n                temp += text[i];\n                i++;\n            }\n            result.push_back(temp);\n            temp.clear();\n        }\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::string temp;\n    bool flag = false;\n    for (int i = 0; i < text.length(); i++) {\n        if (text[i] == '\"') {\n            if (flag) {\n                result.push_back(temp);\n                temp = \"\";\n                flag = false;\n            } else {\n                flag = true;\n            }\n        } else if (flag) {\n            temp += text[i];\n        }\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::string temp;\n    for (int i = 0; i < text.length(); i++) {\n        if (text[i] == '\"') {\n            temp.clear();\n            i++;\n            while (text[i] != '\"') {\n                temp.push_back(text[i]);\n                i++;\n            }\n            result.push_back(temp);\n        }\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::string::size_type pos = 0;\n    while (pos < text.size()) {\n        pos = text.find('\"', pos);\n        if (pos == std::string::npos) {\n            break;\n        }\n        std::string::size_type end = text.find('\"', pos + 1);\n        if (end == std::string::npos) {\n            break;\n        }\n        result.push_back(text.substr(pos + 1, end - pos - 1));\n        pos = end + 1;\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::string temp;\n    int i = 0;\n    while(i < text.length()) {\n        if(text[i] == '\"') {\n            i++;\n            while(text[i] != '\"') {\n                temp.push_back(text[i]);\n                i++;\n            }\n            result.push_back(temp);\n            temp.clear();\n        }\n        i++;\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::string temp;\n    for(int i = 0; i < text.length(); i++) {\n        if(text[i] == '\"') {\n            i++;\n            while(text[i] != '\"') {\n                temp += text[i];\n                i++;\n            }\n            result.push_back(temp);\n            temp.clear();\n        }\n    }\n    return result;",
    "  std::vector<std::string> values;\n  std::string value;\n  bool in_quotes = false;\n  for (char c : text) {\n    if (c == '\"') {\n      if (in_quotes) {\n        values.push_back(value);\n        value.clear();\n      }\n      in_quotes = !in_quotes;\n    } else if (in_quotes) {\n      value += c;\n    }\n  }\n  return values;",
    "    std::vector<std::string> result;\n    std::string temp;\n    for(int i = 0; i < text.size(); i++) {\n        if(text[i] == '\"') {\n            i++;\n            while(text[i] != '\"') {\n                temp += text[i];\n                i++;\n            }\n            result.push_back(temp);\n            temp.clear();\n        }\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::string temp;\n    bool flag = false;\n    for(int i = 0; i < text.length(); i++) {\n        if(text[i] == '\"') {\n            if(flag) {\n                result.push_back(temp);\n                temp = \"\";\n            }\n            flag = !flag;\n        } else if(flag) {\n            temp += text[i];\n        }\n    }\n    return result;",
    "    std::vector<std::string> values;\n    int start = 0;\n    int end = 0;\n    for (int i = 0; i < text.length(); i++) {\n        if (text[i] == '\"') {\n            start = i + 1;\n            for (int j = i + 1; j < text.length(); j++) {\n                if (text[j] == '\"') {\n                    end = j;\n                    break;\n                }\n            }\n            values.push_back(text.substr(start, end - start));\n        }\n    }\n    return values;",
    "    std::vector<std::string> result;\n    std::string temp;\n    for(int i = 0; i < text.size(); i++) {\n        if(text[i] == '\"') {\n            i++;\n            while(text[i] != '\"') {\n                temp += text[i];\n                i++;\n            }\n            result.push_back(temp);\n            temp.clear();\n        }\n    }\n    return result;",
    "    std::vector<std::string> values;\n    std::string value;\n    bool in_quotes = false;\n    for (char c : text) {\n        if (c == '\"') {\n            in_quotes = !in_quotes;\n            if (!in_quotes) {\n                values.push_back(value);\n                value.clear();\n            }\n        } else if (in_quotes) {\n            value += c;\n        }\n    }\n    return values;",
    "    std::vector<std::string> values;\n    std::string value;\n    bool in_quotes = false;\n    for (auto c : text) {\n        if (c == '\"') {\n            in_quotes = !in_quotes;\n            if (!in_quotes) {\n                values.push_back(value);\n                value.clear();\n            }\n        } else if (in_quotes) {\n            value += c;\n        }\n    }\n    return values;",
    "    std::vector<std::string> result;\n    std::string temp;\n    bool flag = false;\n    for(int i = 0; i < text.size(); i++) {\n        if(text[i] == '\"') {\n            if(flag) {\n                result.push_back(temp);\n                temp = \"\";\n            }\n            flag = !flag;\n        }\n        else if(flag) {\n            temp += text[i];\n        }\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::string temp;\n    bool flag = false;\n    for(int i = 0; i < text.length(); i++) {\n        if(text[i] == '\"') {\n            if(flag) {\n                result.push_back(temp);\n                temp = \"\";\n            }\n            flag = !flag;\n        } else if(flag) {\n            temp += text[i];\n        }\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::string temp;\n    bool flag = false;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i] == '\"') {\n            if (flag) {\n                result.push_back(temp);\n                temp.clear();\n            }\n            flag = !flag;\n        } else if (flag) {\n            temp.push_back(text[i]);\n        }\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::string value;\n    bool in_quotes = false;\n    for (auto c : text) {\n        if (c == '\"') {\n            if (in_quotes) {\n                result.push_back(value);\n                value.clear();\n            }\n            in_quotes = !in_quotes;\n        } else if (in_quotes) {\n            value += c;\n        }\n    }\n    return result;",
    "\tstd::vector<std::string> result;\n\tstd::string temp;\n\tfor (int i = 0; i < text.size(); i++) {\n\t\tif (text[i] == '\"') {\n\t\t\tfor (int j = i + 1; j < text.size(); j++) {\n\t\t\t\tif (text[j] == '\"') {\n\t\t\t\t\tresult.push_back(temp);\n\t\t\t\t\ttemp.clear();\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\ttemp += text[j];\n\t\t\t}\n\t\t}\n\t}\n\treturn result;",
    "    std::vector<std::string> values;\n    std::string value;\n    bool in_quotes = false;\n    for (char c : text) {\n        if (c == '\"') {\n            if (in_quotes) {\n                values.push_back(value);\n                value.clear();\n            }\n            in_quotes = !in_quotes;\n        } else if (in_quotes) {\n            value += c;\n        }\n    }\n    return values;",
    "  std::vector<std::string> result;\n  std::stringstream ss(text);\n  std::string token;\n  while (std::getline(ss, token, '\"')) {\n    if (!token.empty()) {\n      result.push_back(token);\n    }\n  }\n  return result;",
    "    std::vector<std::string> result;\n    std::string::size_type start = 0, end = 0;\n    while((start = text.find('\"', start)) != std::string::npos) {\n        end = text.find('\"', start + 1);\n        if(end == std::string::npos) {\n            break;\n        }\n        result.push_back(text.substr(start + 1, end - start - 1));\n        start = end + 1;\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::string temp;\n    int i = 0;\n    while(i < text.size()) {\n        if(text[i] == '\"') {\n            temp = \"\";\n            i++;\n            while(text[i] != '\"') {\n                temp += text[i];\n                i++;\n            }\n            result.push_back(temp);\n        }\n        i++;\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::string temp;\n    for(int i = 0; i < text.length(); i++) {\n        if(text[i] == '\"') {\n            temp.clear();\n            i++;\n            while(text[i] != '\"') {\n                temp += text[i];\n                i++;\n            }\n            result.push_back(temp);\n        }\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::string temp;\n    int i = 0;\n    while(i < text.length()) {\n        if(text[i] == '\"') {\n            i++;\n            while(text[i] != '\"') {\n                temp += text[i];\n                i++;\n            }\n            result.push_back(temp);\n            temp = \"\";\n        }\n        i++;\n    }\n    return result;",
    "    std::vector<std::string> values;\n    std::string value;\n    bool in_quotes = false;\n    for (auto c : text) {\n        if (c == '\"') {\n            in_quotes = !in_quotes;\n            if (!in_quotes) {\n                values.push_back(value);\n                value = \"\";\n            }\n        } else if (in_quotes) {\n            value += c;\n        }\n    }\n    return values;",
    "    std::vector<std::string> values;\n    std::string value;\n    bool in_quotes = false;\n    for (auto c : text) {\n        if (c == '\"') {\n            in_quotes = !in_quotes;\n            if (!in_quotes) {\n                values.push_back(value);\n                value.clear();\n            }\n        } else if (in_quotes) {\n            value += c;\n        }\n    }\n    return values;",
    "    std::vector<std::string> result;\n    std::string temp;\n    bool flag = false;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i] == '\"') {\n            if (flag) {\n                result.push_back(temp);\n                temp = \"\";\n                flag = false;\n            } else {\n                flag = true;\n            }\n        } else if (flag) {\n            temp += text[i];\n        }\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::string temp;\n    bool flag = false;\n    for (int i = 0; i < text.length(); i++) {\n        if (text[i] == '\"') {\n            if (flag) {\n                result.push_back(temp);\n                temp.clear();\n            }\n            flag = !flag;\n        } else if (flag) {\n            temp += text[i];\n        }\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::string temp;\n    int flag = 0;\n    for (int i = 0; i < text.length(); i++) {\n        if (text[i] == '\"') {\n            if (flag == 0) {\n                flag = 1;\n            } else {\n                flag = 0;\n                result.push_back(temp);\n                temp = \"\";\n            }\n        } else if (flag == 1) {\n            temp += text[i];\n        }\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::string temp;\n    for(int i=0;i<text.size();i++){\n        if(text[i]=='\"'){\n            temp=\"\";\n            for(int j=i+1;j<text.size();j++){\n                if(text[j]=='\"'){\n                    result.push_back(temp);\n                    break;\n                }\n                temp+=text[j];\n            }\n        }\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::string temp;\n    int i = 0;\n    while(i < text.length()) {\n        if(text[i] == '\"') {\n            i++;\n            while(text[i] != '\"') {\n                temp += text[i];\n                i++;\n            }\n            result.push_back(temp);\n            temp = \"\";\n        }\n        i++;\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::string temp;\n    for(int i = 0; i < text.size(); i++) {\n        if(text[i] == '\"') {\n            temp = \"\";\n            for(int j = i + 1; j < text.size(); j++) {\n                if(text[j] == '\"') {\n                    result.push_back(temp);\n                    break;\n                }\n                temp += text[j];\n            }\n        }\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::string temp;\n    bool flag = false;\n    for (int i = 0; i < text.length(); i++) {\n        if (text[i] == '\"') {\n            if (flag) {\n                result.push_back(temp);\n                temp = \"\";\n                flag = false;\n            } else {\n                flag = true;\n            }\n        } else if (flag) {\n            temp += text[i];\n        }\n    }\n    return result;",
    "    std::vector<std::string> result;\n    int start = 0;\n    int end = 0;\n    for (int i = 0; i < text.length(); i++) {\n        if (text[i] == '\"') {\n            if (start == 0) {\n                start = i + 1;\n            } else {\n                end = i;\n                result.push_back(text.substr(start, end - start));\n                start = 0;\n                end = 0;\n            }\n        }\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::string temp;\n    bool flag = false;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i] == '\"') {\n            if (flag) {\n                result.push_back(temp);\n                temp.clear();\n            }\n            flag = !flag;\n        } else if (flag) {\n            temp.push_back(text[i]);\n        }\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::string temp;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i] == '\"') {\n            i++;\n            while (text[i] != '\"') {\n                temp += text[i];\n                i++;\n            }\n            result.push_back(temp);\n            temp = \"\";\n        }\n    }\n    return result;",
    "    std::vector<std::string> values;\n    std::string value;\n    bool in_quote = false;\n    for (auto c : text) {\n        if (c == '\"') {\n            in_quote = !in_quote;\n        } else if (in_quote) {\n            value += c;\n        } else if (c == ',') {\n            values.push_back(value);\n            value = \"\";\n        }\n    }\n    values.push_back(value);\n    return values;",
    "    std::vector<std::string> result;\n    std::string temp;\n    bool flag = false;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i] == '\"') {\n            if (flag) {\n                result.push_back(temp);\n                temp.clear();\n                flag = false;\n            } else {\n                flag = true;\n            }\n        } else if (flag) {\n            temp += text[i];\n        }\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::string temp;\n    int i = 0;\n    while (i < text.length()) {\n        if (text[i] == '\"') {\n            i++;\n            while (text[i] != '\"') {\n                temp += text[i];\n                i++;\n            }\n            result.push_back(temp);\n            temp.clear();\n        }\n        i++;\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::string temp = \"\";\n    for (int i = 0; i < text.length(); i++) {\n        if (text[i] == '\"') {\n            if (temp != \"\") {\n                result.push_back(temp);\n                temp = \"\";\n            }\n        } else {\n            temp += text[i];\n        }\n    }\n    return result;",
    "    std::vector<std::string> values;\n    std::string value;\n    bool in_quotes = false;\n    for (char c : text) {\n        if (c == '\"') {\n            if (in_quotes) {\n                values.push_back(value);\n                value.clear();\n            }\n            in_quotes = !in_quotes;\n        } else if (in_quotes) {\n            value += c;\n        }\n    }\n    return values;",
    "    std::vector<std::string> result;\n    std::string temp;\n    for(int i = 0; i < text.size(); i++) {\n        if(text[i] == '\"') {\n            temp = \"\";\n            i++;\n            while(text[i] != '\"') {\n                temp += text[i];\n                i++;\n            }\n            result.push_back(temp);\n        }\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::string temp;\n    for(int i=0; i<text.length(); i++) {\n        if(text[i] == '\"') {\n            temp.clear();\n            i++;\n            while(text[i] != '\"') {\n                temp += text[i];\n                i++;\n            }\n            result.push_back(temp);\n        }\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::string temp;\n    bool flag = false;\n    for(int i = 0; i < text.length(); i++) {\n        if(text[i] == '\"') {\n            if(flag) {\n                result.push_back(temp);\n                temp.clear();\n                flag = false;\n            } else {\n                flag = true;\n            }\n        } else if(flag) {\n            temp += text[i];\n        }\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::string temp;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i] == '\"') {\n            temp.clear();\n            i++;\n            while (text[i] != '\"') {\n                temp += text[i];\n                i++;\n            }\n            result.push_back(temp);\n        }\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::string temp;\n    for(int i = 0; i < text.size(); i++) {\n        if(text[i] == '\"') {\n            for(int j = i + 1; j < text.size(); j++) {\n                if(text[j] == '\"') {\n                    result.push_back(temp);\n                    temp.clear();\n                    break;\n                }\n                else {\n                    temp += text[j];\n                }\n            }\n        }\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::string temp;\n    for(int i=0;i<text.length();i++){\n        if(text[i]=='\"'){\n            i++;\n            while(text[i]!='\"'){\n                temp+=text[i];\n                i++;\n            }\n            result.push_back(temp);\n            temp.clear();\n        }\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::string temp;\n    bool flag = false;\n    for(int i = 0; i < text.length(); i++) {\n        if(text[i] == '\"') {\n            if(flag) {\n                result.push_back(temp);\n                temp.clear();\n                flag = false;\n            } else {\n                flag = true;\n            }\n        } else if(flag) {\n            temp += text[i];\n        }\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::string temp;\n    for (int i = 0; i < text.length(); i++) {\n        if (text[i] == '\"') {\n            temp = \"\";\n            i++;\n            while (text[i] != '\"') {\n                temp += text[i];\n                i++;\n            }\n            result.push_back(temp);\n        }\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::string temp;\n    for(int i=0; i<text.length(); i++) {\n        if(text[i] == '\"') {\n            i++;\n            while(text[i] != '\"') {\n                temp += text[i];\n                i++;\n            }\n            result.push_back(temp);\n            temp.clear();\n        }\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::string temp;\n    bool flag = false;\n    for(int i = 0; i < text.length(); i++) {\n        if(text[i] == '\"') {\n            if(flag) {\n                result.push_back(temp);\n                temp.clear();\n            }\n            flag = !flag;\n        } else if(flag) {\n            temp += text[i];\n        }\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::string temp;\n    bool flag = false;\n    for(int i = 0; i < text.size(); i++) {\n        if(text[i] == '\"') {\n            if(flag) {\n                result.push_back(temp);\n                temp = \"\";\n                flag = false;\n            }\n            else {\n                flag = true;\n            }\n        }\n        else if(flag) {\n            temp += text[i];\n        }\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::string temp;\n    for (int i = 0; i < text.length(); i++) {\n        if (text[i] == '\"') {\n            temp = \"\";\n            i++;\n            while (text[i] != '\"') {\n                temp += text[i];\n                i++;\n            }\n            result.push_back(temp);\n        }\n    }\n    return result;",
    "    std::vector<std::string> values;\n    std::string value;\n    bool in_quotes = false;\n    for (char c : text) {\n        if (c == '\"') {\n            in_quotes = !in_quotes;\n            if (!in_quotes) {\n                values.push_back(value);\n                value = \"\";\n            }\n        } else if (in_quotes) {\n            value += c;\n        }\n    }\n    return values;",
    "    std::vector<std::string> result;\n    std::string temp = \"\";\n    int flag = 0;\n    for(int i = 0; i < text.length(); i++) {\n        if(text[i] == '\"') {\n            if(flag == 0) {\n                flag = 1;\n            } else {\n                flag = 0;\n                result.push_back(temp);\n                temp = \"\";\n            }\n        } else if(flag == 1) {\n            temp += text[i];\n        }\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::string temp;\n    int i = 0;\n    while (i < text.length()) {\n        if (text[i] == '\"') {\n            i++;\n            while (text[i] != '\"') {\n                temp += text[i];\n                i++;\n            }\n            result.push_back(temp);\n            temp = \"\";\n        }\n        i++;\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::string temp;\n    bool flag = false;\n    for (int i = 0; i < text.length(); i++) {\n        if (text[i] == '\"') {\n            if (flag) {\n                result.push_back(temp);\n                temp = \"\";\n                flag = false;\n            } else {\n                flag = true;\n            }\n        } else if (flag) {\n            temp += text[i];\n        }\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::string temp;\n    bool flag = false;\n    for(int i = 0; i < text.size(); i++) {\n        if(text[i] == '\"') {\n            if(flag) {\n                result.push_back(temp);\n                temp = \"\";\n            }\n            flag = !flag;\n        } else if(flag) {\n            temp += text[i];\n        }\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::string temp;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i] == '\"') {\n            temp = \"\";\n            i++;\n            while (text[i] != '\"') {\n                temp += text[i];\n                i++;\n            }\n            result.push_back(temp);\n        }\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::string temp;\n    bool in_quotes = false;\n    for (auto c : text) {\n        if (c == '\"') {\n            if (in_quotes) {\n                result.push_back(temp);\n                temp = \"\";\n            }\n            in_quotes = !in_quotes;\n        } else if (in_quotes) {\n            temp += c;\n        }\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::string temp;\n    for(int i=0;i<text.length();i++) {\n        if(text[i]=='\"') {\n            temp.clear();\n            for(int j=i+1;j<text.length();j++) {\n                if(text[j]=='\"') {\n                    result.push_back(temp);\n                    break;\n                }\n                temp.push_back(text[j]);\n            }\n        }\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::string temp;\n    for(int i=0;i<text.size();i++) {\n        if(text[i]=='\"') {\n            temp.clear();\n            i++;\n            while(text[i]!='\"') {\n                temp.push_back(text[i]);\n                i++;\n            }\n            result.push_back(temp);\n        }\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::string temp;\n    bool flag = false;\n    for(int i = 0; i < text.size(); i++) {\n        if(text[i] == '\"') {\n            if(flag) {\n                result.push_back(temp);\n                temp = \"\";\n                flag = false;\n            }\n            else {\n                flag = true;\n            }\n        }\n        else if(flag) {\n            temp += text[i];\n        }\n    }\n    return result;",
    "    std::vector<std::string> values;\n    std::string value;\n    bool in_quotes = false;\n    for (char c : text) {\n        if (c == '\"') {\n            if (in_quotes) {\n                values.push_back(value);\n                value.clear();\n            }\n            in_quotes = !in_quotes;\n        } else if (in_quotes) {\n            value += c;\n        }\n    }\n    return values;",
    "    std::vector<std::string> result;\n    std::string temp;\n    int i = 0;\n    while (i < text.length()) {\n        if (text[i] == '\"') {\n            i++;\n            while (text[i] != '\"') {\n                temp += text[i];\n                i++;\n            }\n            result.push_back(temp);\n            temp = \"\";\n        }\n        i++;\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::string temp;\n    for(int i = 0; i < text.size(); i++) {\n        if(text[i] == '\"') {\n            temp = \"\";\n            i++;\n            while(text[i] != '\"') {\n                temp += text[i];\n                i++;\n            }\n            result.push_back(temp);\n        }\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::string temp;\n    for(int i = 0; i < text.length(); i++) {\n        if(text[i] == '\"') {\n            temp = \"\";\n            i++;\n            while(text[i] != '\"') {\n                temp += text[i];\n                i++;\n            }\n            result.push_back(temp);\n        }\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::string temp;\n    bool flag = false;\n    for(int i = 0; i < text.length(); i++) {\n        if(text[i] == '\"') {\n            if(flag) {\n                result.push_back(temp);\n                temp = \"\";\n                flag = false;\n            }\n            else {\n                flag = true;\n            }\n        }\n        else if(flag) {\n            temp += text[i];\n        }\n    }\n    return result;",
    "    std::vector<std::string> values;\n    std::string value;\n    bool in_quotes = false;\n    for (char c : text) {\n        if (c == '\"') {\n            in_quotes = !in_quotes;\n            if (!in_quotes) {\n                values.push_back(value);\n                value = \"\";\n            }\n        } else if (in_quotes) {\n            value += c;\n        }\n    }\n    return values;",
    "    std::vector<std::string> values;\n    std::string value;\n    bool in_quotes = false;\n    for (char c : text) {\n        if (c == '\"') {\n            in_quotes = !in_quotes;\n        } else if (in_quotes) {\n            value += c;\n        } else if (c == ',') {\n            values.push_back(value);\n            value = \"\";\n        }\n    }\n    values.push_back(value);\n    return values;",
    "    std::vector<std::string> result;\n    std::string temp;\n    bool flag = false;\n    for(int i = 0; i < text.length(); i++) {\n        if(text[i] == '\"') {\n            if(flag) {\n                result.push_back(temp);\n                temp = \"\";\n            }\n            flag = !flag;\n        } else if(flag) {\n            temp += text[i];\n        }\n    }\n    return result;",
    "    std::vector<std::string> values;\n    std::string value;\n    bool in_quotes = false;\n    for (char c : text) {\n        if (c == '\"') {\n            if (in_quotes) {\n                values.push_back(value);\n                value = \"\";\n            }\n            in_quotes = !in_quotes;\n        } else if (in_quotes) {\n            value += c;\n        }\n    }\n    return values;",
    "    std::vector<std::string> result;\n    std::string temp;\n    bool flag = false;\n    for(int i = 0; i < text.length(); i++) {\n        if(text[i] == '\"') {\n            if(flag) {\n                result.push_back(temp);\n                temp = \"\";\n            }\n            flag = !flag;\n        } else if(flag) {\n            temp += text[i];\n        }\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::string temp;\n    bool flag = false;\n    for (int i = 0; i < text.length(); i++) {\n        if (text[i] == '\"') {\n            flag = !flag;\n            if (!flag) {\n                result.push_back(temp);\n                temp.clear();\n            }\n        } else if (flag) {\n            temp += text[i];\n        }\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::string temp;\n    int i = 0;\n    while(i < text.size()) {\n        if(text[i] == '\"') {\n            i++;\n            while(text[i] != '\"') {\n                temp += text[i];\n                i++;\n            }\n            result.push_back(temp);\n            temp.clear();\n        }\n        i++;\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::string temp = \"\";\n    bool is_quoted = false;\n    for (int i = 0; i < text.length(); i++) {\n        if (text[i] == '\"') {\n            if (is_quoted) {\n                result.push_back(temp);\n                temp = \"\";\n                is_quoted = false;\n            } else {\n                is_quoted = true;\n            }\n        } else if (is_quoted) {\n            temp += text[i];\n        }\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::string temp;\n    for(int i=0;i<text.length();i++) {\n        if(text[i]=='\"') {\n            i++;\n            while(text[i]!='\"') {\n                temp+=text[i];\n                i++;\n            }\n            result.push_back(temp);\n            temp.clear();\n        }\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::string temp;\n    bool flag = false;\n    for(auto i : text) {\n        if(i == '\"') {\n            if(flag) {\n                result.push_back(temp);\n                temp.clear();\n                flag = false;\n            } else {\n                flag = true;\n            }\n        } else if(flag) {\n            temp += i;\n        }\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::string temp;\n    bool flag = false;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i] == '\"') {\n            if (flag) {\n                result.push_back(temp);\n                temp = \"\";\n                flag = false;\n            } else {\n                flag = true;\n            }\n        } else if (flag) {\n            temp += text[i];\n        }\n    }\n    return result;",
    "  std::vector<std::string> result;\n  std::string value;\n  bool in_quotes = false;\n  for(auto c : text) {\n    if(c == '\"') {\n      if(in_quotes) {\n        result.push_back(value);\n        value.clear();\n      }\n      in_quotes = !in_quotes;\n    } else if(in_quotes) {\n      value += c;\n    }\n  }\n  return result;",
    "    std::vector<std::string> result;\n    std::string word = \"\";\n    bool flag = false;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i] == '\"') {\n            if (flag) {\n                result.push_back(word);\n                word = \"\";\n            }\n            flag = !flag;\n        } else if (flag) {\n            word += text[i];\n        }\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::stringstream ss(text);\n    std::string temp;\n    while(std::getline(ss, temp, '\"')) {\n        if(temp.empty()) {\n            continue;\n        }\n        result.push_back(temp);\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::string temp;\n    for (int i = 0; i < text.length(); i++) {\n        if (text[i] == '\"') {\n            temp = \"\";\n            i++;\n            while (text[i] != '\"') {\n                temp += text[i];\n                i++;\n            }\n            result.push_back(temp);\n        }\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::string temp;\n    int i = 0;\n    while(i < text.size()) {\n        if(text[i] == '\"') {\n            temp = \"\";\n            while(text[i] != '\"') {\n                temp += text[i];\n                i++;\n            }\n            result.push_back(temp);\n        }\n        i++;\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::string temp;\n    for(int i=0;i<text.size();i++){\n        if(text[i]=='\"'){\n            i++;\n            while(text[i]!='\"'){\n                temp+=text[i];\n                i++;\n            }\n            result.push_back(temp);\n            temp.clear();\n        }\n    }\n    return result;",
    "  std::vector<std::string> result;\n  std::string temp;\n  for (int i = 0; i < text.length(); i++) {\n    if (text[i] == '\"') {\n      i++;\n      while (text[i] != '\"') {\n        temp += text[i];\n        i++;\n      }\n      result.push_back(temp);\n      temp.clear();\n    }\n  }\n  return result;",
    "    std::vector<std::string> result;\n    std::string temp;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i] == '\"') {\n            temp.clear();\n            i++;\n            while (text[i] != '\"') {\n                temp.push_back(text[i]);\n                i++;\n            }\n            result.push_back(temp);\n        }\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::string::iterator it = text.begin();\n    std::string::iterator start = text.begin();\n    std::string::iterator end = text.begin();\n    while (it != text.end()) {\n        if (*it == '\"') {\n            start = it + 1;\n            while (*it != '\"') {\n                it++;\n            }\n            end = it;\n            result.push_back(std::string(start, end));\n        }\n        it++;\n    }\n    return result;",
    "  std::vector<std::string> result;\n  std::string::size_type pos = 0;\n  while (pos < text.length()) {\n    pos = text.find(\"\\\"\", pos);\n    if (pos == std::string::npos) {\n      break;\n    }\n    std::string::size_type end_pos = text.find(\"\\\"\", pos + 1);\n    if (end_pos == std::string::npos) {\n      break;\n    }\n    result.push_back(text.substr(pos + 1, end_pos - pos - 1));\n    pos = end_pos + 1;\n  }\n  return result;",
    "    std::vector<std::string> result;\n    std::string temp;\n    bool flag = false;\n    for(int i = 0; i < text.length(); i++) {\n        if(text[i] == '\"') {\n            if(flag) {\n                result.push_back(temp);\n                temp.clear();\n            }\n            flag = !flag;\n        } else if(flag) {\n            temp += text[i];\n        }\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::stringstream ss(text);\n    std::string item;\n    while (std::getline(ss, item, '\"')) {\n        if (!item.empty()) {\n            result.push_back(item);\n        }\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::string temp;\n    for (int i = 0; i < text.length(); i++) {\n        if (text[i] == '\"') {\n            temp = \"\";\n            i++;\n            while (text[i] != '\"') {\n                temp += text[i];\n                i++;\n            }\n            result.push_back(temp);\n        }\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::stringstream ss(text);\n    std::string item;\n    while (std::getline(ss, item, '\"')) {\n        if (!item.empty()) {\n            result.push_back(item);\n        }\n    }\n    return result;",
    "  std::vector<std::string> result;\n  std::string temp;\n  bool flag = false;\n  for (int i = 0; i < text.length(); i++) {\n    if (text[i] == '\"') {\n      if (flag) {\n        result.push_back(temp);\n        temp = \"\";\n      }\n      flag = !flag;\n    } else if (flag) {\n      temp += text[i];\n    }\n  }\n  return result;",
    "    std::vector<std::string> result;\n    std::string temp = \"\";\n    bool flag = false;\n    for(int i=0; i<text.size(); i++) {\n        if(text[i] == '\"') {\n            if(flag) {\n                result.push_back(temp);\n                temp = \"\";\n                flag = false;\n            } else {\n                flag = true;\n            }\n        } else if(flag) {\n            temp += text[i];\n        }\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::string temp;\n    int i = 0;\n    while (i < text.size()) {\n        if (text[i] == '\"') {\n            temp.clear();\n            i++;\n            while (text[i] != '\"') {\n                temp.push_back(text[i]);\n                i++;\n            }\n            result.push_back(temp);\n        }\n        i++;\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::string temp;\n    int i = 0;\n    while(i < text.size()) {\n        if(text[i] == '\"') {\n            i++;\n            while(text[i] != '\"') {\n                temp += text[i];\n                i++;\n            }\n            result.push_back(temp);\n            temp = \"\";\n        }\n        i++;\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::string temp;\n    bool flag = false;\n    for(int i = 0; i < text.size(); i++) {\n        if(text[i] == '\"') {\n            if(flag) {\n                result.push_back(temp);\n                temp.clear();\n            }\n            flag = !flag;\n        } else if(flag) {\n            temp += text[i];\n        }\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::string temp;\n    for (int i = 0; i < text.length(); i++) {\n        if (text[i] == '\"') {\n            temp = \"\";\n            i++;\n            while (text[i] != '\"') {\n                temp += text[i];\n                i++;\n            }\n            result.push_back(temp);\n        }\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::string temp;\n    int i = 0;\n    while(i < text.size()) {\n        if(text[i] == '\"') {\n            i++;\n            while(text[i] != '\"') {\n                temp += text[i];\n                i++;\n            }\n            result.push_back(temp);\n            temp.clear();\n        }\n        i++;\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::string temp;\n    bool flag = false;\n    for (auto i : text) {\n        if (i == '\"') {\n            if (flag) {\n                result.push_back(temp);\n                temp.clear();\n                flag = false;\n            } else {\n                flag = true;\n            }\n        } else if (flag) {\n            temp += i;\n        }\n    }\n    return result;",
    "    std::vector<std::string> values;\n    std::string value;\n    bool in_quotes = false;\n    for (auto c : text) {\n        if (c == '\"') {\n            if (in_quotes) {\n                values.push_back(value);\n                value.clear();\n            }\n            in_quotes = !in_quotes;\n        } else if (in_quotes) {\n            value += c;\n        }\n    }\n    return values;",
    "    std::vector<std::string> result;\n    std::string temp;\n    for(int i = 0; i < text.size(); i++) {\n        if(text[i] == '\"') {\n            i++;\n            while(text[i] != '\"') {\n                temp += text[i];\n                i++;\n            }\n            result.push_back(temp);\n            temp = \"\";\n        }\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::string temp = \"\";\n    int flag = 0;\n    for(int i = 0; i < text.length(); i++) {\n        if(text[i] == '\"') {\n            if(flag == 0) {\n                flag = 1;\n            } else {\n                flag = 0;\n                result.push_back(temp);\n                temp = \"\";\n            }\n        } else {\n            if(flag == 1) {\n                temp += text[i];\n            }\n        }\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::stringstream ss(text);\n    std::string item;\n    while (std::getline(ss, item, '\"')) {\n        if (!item.empty()) {\n            result.push_back(item);\n        }\n    }\n    return result;",
    "    std::vector<std::string> values;\n    std::string value;\n    bool in_quotes = false;\n    for (char c : text) {\n        if (c == '\"') {\n            in_quotes = !in_quotes;\n        } else if (in_quotes) {\n            value += c;\n        } else if (c == ',') {\n            values.push_back(value);\n            value.clear();\n        }\n    }\n    values.push_back(value);\n    return values;",
    "    std::vector<std::string> result;\n    std::string temp;\n    bool flag = false;\n    for (int i = 0; i < text.length(); i++) {\n        if (text[i] == '\"') {\n            if (flag) {\n                result.push_back(temp);\n                temp = \"\";\n            }\n            flag = !flag;\n        } else if (flag) {\n            temp += text[i];\n        }\n    }\n    return result;",
    "    std::vector<std::string> values;\n    std::string temp;\n    for(int i = 0; i < text.length(); i++) {\n        if(text[i] == '\"') {\n            i++;\n            while(text[i] != '\"') {\n                temp += text[i];\n                i++;\n            }\n            values.push_back(temp);\n            temp = \"\";\n        }\n    }\n    return values;",
    "    std::vector<std::string> result;\n    std::string temp;\n    bool flag = false;\n    for(int i = 0; i < text.size(); i++) {\n        if(text[i] == '\"') {\n            if(flag) {\n                result.push_back(temp);\n                temp.clear();\n            }\n            flag = !flag;\n        } else if(flag) {\n            temp += text[i];\n        }\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::string temp;\n    for(int i = 0; i < text.length(); i++) {\n        if(text[i] == '\"') {\n            temp.clear();\n            i++;\n            while(text[i] != '\"') {\n                temp.push_back(text[i]);\n                i++;\n            }\n            result.push_back(temp);\n        }\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::string temp;\n    bool flag = false;\n    for(int i=0;i<text.size();i++){\n        if(text[i]=='\"'){\n            if(flag){\n                result.push_back(temp);\n                temp.clear();\n                flag = false;\n            }\n            else{\n                flag = true;\n            }\n        }\n        else if(flag){\n            temp.push_back(text[i]);\n        }\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::string temp;\n    int i = 0;\n    while (i < text.length()) {\n        if (text[i] == '\"') {\n            i++;\n            while (text[i] != '\"') {\n                temp += text[i];\n                i++;\n            }\n            result.push_back(temp);\n            temp = \"\";\n        }\n        i++;\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::string temp;\n    bool flag = false;\n    for (int i = 0; i < text.length(); i++) {\n        if (text[i] == '\"') {\n            if (flag) {\n                result.push_back(temp);\n                temp = \"\";\n                flag = false;\n            }\n            else {\n                flag = true;\n            }\n        }\n        else if (flag) {\n            temp += text[i];\n        }\n    }\n    return result;"
  ]
}
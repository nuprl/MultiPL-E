{
  "name": "mbpp_132_tup_string",
  "language": "cpp",
  "prompt": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to convert a tuple to a string.\nstd::string tup_string(std::string tup1) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_132_tup_string.py",
  "prompt_terminology": "verbatim",
  "tests": "}\nint main() {\n    auto candidate = tup_string;\n    assert(candidate(std::make_tuple(\"e\", \"x\", \"e\", \"r\", \"c\", \"i\", \"s\", \"e\", \"s\")) == (\"exercises\"));\n    assert(candidate(std::make_tuple(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")) == (\"python\"));\n    assert(candidate(std::make_tuple(\"p\", \"r\", \"o\", \"g\", \"r\", \"a\", \"m\")) == (\"program\"));\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    std::string tup_str = \"\";\n    for (int i = 0; i < tup1.length(); i++) {\n        if (tup1[i] == '(' || tup1[i] == ')' || tup1[i] == ' ') {\n            continue;\n        }\n        tup_str += tup1[i];\n    }\n    return tup_str;",
    "    std::string tup = tup1;\n    std::string tup_str = \"\";\n    for(int i = 0; i < tup.length(); i++) {\n        if(tup[i] == '(' || tup[i] == ')' || tup[i] == ',') {\n            continue;\n        }\n        else {\n            tup_str += tup[i];\n        }\n    }\n    return tup_str;",
    "    std::string tup2 = \"\";\n    for (int i = 0; i < tup1.length(); i++) {\n        if (tup1[i] == '(') {\n            tup2 += \"(\";\n        }\n        else if (tup1[i] == ')') {\n            tup2 += \")\";\n        }\n        else if (tup1[i] == ',') {\n            tup2 += \",\";\n        }\n        else if (tup1[i] == ' ') {\n            tup2 += \" \";\n        }\n        else {\n            tup2 += tup1[i];\n        }\n    }\n    return tup2;",
    "    std::string tup2 = \"\";\n    for (int i = 0; i < tup1.length(); i++) {\n        if (tup1[i] == '(' || tup1[i] == ')' || tup1[i] == ',') {\n            continue;\n        }\n        else {\n            tup2 += tup1[i];\n        }\n    }\n    return tup2;",
    "    std::string tup_str;\n    tup_str = tup1;\n    return tup_str;",
    "    std::string str = \"\";\n    for (int i = 0; i < tup1.length(); i++) {\n        if (tup1[i] == '(' || tup1[i] == ')' || tup1[i] == ',') {\n            continue;\n        }\n        str += tup1[i];\n    }\n    return str;",
    "    std::string str1 = \"\";\n    for (int i = 0; i < tup1.size(); i++) {\n        if (tup1[i] == ',') {\n            str1 += \" \";\n        }\n        else {\n            str1 += tup1[i];\n        }\n    }\n    return str1;",
    "    std::string tup2 = \"\";\n    for (int i = 0; i < tup1.length(); i++) {\n        if (tup1[i] == '(' || tup1[i] == ')' || tup1[i] == ',') {\n            continue;\n        }\n        else {\n            tup2 += tup1[i];\n        }\n    }\n    return tup2;",
    "    std::string tup = tup1;\n    std::string tup_str = \"\";\n    for (int i = 0; i < tup.length(); i++) {\n        if (tup[i] == '(' || tup[i] == ')' || tup[i] == ',') {\n            tup_str += \" \";\n        } else {\n            tup_str += tup[i];\n        }\n    }\n    return tup_str;",
    "    std::string tup = tup1;\n    std::string tup_str = \"\";\n    for(int i = 0; i < tup.length(); i++) {\n        if(tup[i] == ',') {\n            tup_str += ' ';\n        }\n        else {\n            tup_str += tup[i];\n        }\n    }\n    return tup_str;",
    "    std::string tup_str = \"\";\n    for (int i = 0; i < tup1.length(); i++) {\n        if (tup1[i] == ',') {\n            tup_str += \" \";\n        }\n        else {\n            tup_str += tup1[i];\n        }\n    }\n    return tup_str;",
    "    std::string s = \"\";\n    for(int i=0;i<tup1.length();i++) {\n        if(tup1[i] == '(' || tup1[i] == ')' || tup1[i] == ',') {\n            continue;\n        }\n        else {\n            s += tup1[i];\n        }\n    }\n    return s;",
    "    std::string tup2 = tup1;\n    std::string tup3 = tup1;\n    std::string tup4 = tup1;\n    std::string tup5 = tup1;\n    std::string tup6 = tup1;\n    std::string tup7 = tup1;\n    std::string tup8 = tup1;\n    std::string tup9 = tup1;\n    std::string tup10 = tup1;\n    std::string tup11 = tup1;\n    std::string tup12 = tup1;\n    std::string tup13 = tup1;\n    std::string tup14 = tup1;\n    std::string tup15 = tup1;\n    std::string tup16 = tup1;\n    std::string tup17 = tup1;\n    std::string tup18 = tup1;\n    std::string tup19 = tup1;\n    std::string tup20 = tup1;\n    std::string tup21 = tup1;\n    std::string tup22 = tup1;\n    std::string tup23 = tup1;\n    std::string tup24 = tup1;\n    std::string tup25 = tup1;\n    std::string tup26 = tup1;\n    std::string tup27 = tup1;\n    std::string tup28 = tup1;\n    std::string tup29 = tup1;\n    std::string tup30 = tup1;\n    std::string tup31 = tup1;\n    std::string tup32 = tup1;\n    std::string tup33 = tup1;\n    std::string tup34 = tup1;\n    std::string tup35 = tup1;\n    std::string tup36 = tup1;\n    std::string tup37 = tup1;\n    std::string tup38 = tup1;\n    std::string tup39 = tup1;\n    std::string tup40 = tup1;\n    std::string",
    "    std::string tup2 = \"\";\n    for (int i = 0; i < tup1.length(); i++) {\n        if (tup1[i] == '(' || tup1[i] == ')' || tup1[i] == ',') {\n            continue;\n        }\n        tup2 += tup1[i];\n    }\n    return tup2;",
    "    std::string tup_str;\n    for (int i = 0; i < tup1.length(); i++) {\n        if (tup1[i] == '(') {\n            tup_str += \"(\";\n        }\n        else if (tup1[i] == ')') {\n            tup_str += \")\";\n        }\n        else if (tup1[i] == ',') {\n            tup_str += \",\";\n        }\n        else {\n            tup_str += tup1[i];\n        }\n    }\n    return tup_str;",
    "    std::string str = \"\";\n    for (int i = 0; i < tup1.length(); i++) {\n        if (tup1[i] == ',') {\n            str += \" \";\n        }\n        else {\n            str += tup1[i];\n        }\n    }\n    return str;",
    "    std::string s = \"\";\n    for (int i = 0; i < tup1.length(); i++) {\n        if (tup1[i] == '(' || tup1[i] == ')' || tup1[i] == ',') {\n            continue;\n        } else {\n            s += tup1[i];\n        }\n    }\n    return s;",
    "    std::string tup_string = \"\";\n    for (int i = 0; i < tup1.length(); i++) {\n        if (tup1[i] == '(' || tup1[i] == ')' || tup1[i] == ',') {\n            continue;\n        }\n        tup_string += tup1[i];\n    }\n    return tup_string;",
    "    std::string tup_str;\n    tup_str = tup1;\n    return tup_str;",
    "    std::string tup2 = tup1;\n    std::string tup3 = tup1;\n    std::string tup4 = tup1;\n    std::string tup5 = tup1;\n    std::string tup6 = tup1;\n    std::string tup7 = tup1;\n    std::string tup8 = tup1;\n    std::string tup9 = tup1;\n    std::string tup10 = tup1;\n    std::string tup11 = tup1;\n    std::string tup12 = tup1;\n    std::string tup13 = tup1;\n    std::string tup14 = tup1;\n    std::string tup15 = tup1;\n    std::string tup16 = tup1;\n    std::string tup17 = tup1;\n    std::string tup18 = tup1;\n    std::string tup19 = tup1;\n    std::string tup20 = tup1;\n    std::string tup21 = tup1;\n    std::string tup22 = tup1;\n    std::string tup23 = tup1;\n    std::string tup24 = tup1;\n    std::string tup25 = tup1;\n    std::string tup26 = tup1;\n    std::string tup27 = tup1;\n    std::string tup28 = tup1;\n    std::string tup29 = tup1;\n    std::string tup30 = tup1;\n    std::string tup31 = tup1;\n    std::string tup32 = tup1;\n    std::string tup33 = tup1;\n    std::string tup34 = tup1;\n    std::string tup35 = tup1;\n    std::string tup36 = tup1;\n    std::string tup37 = tup1;\n    std::string tup38 = tup1;\n    std::string tup39 = tup1;\n    std::string tup40 = tup1;\n    std::string",
    "    std::string tup_str = \"\";\n    for (int i = 0; i < tup1.size(); i++) {\n        if (tup1[i] == '(' || tup1[i] == ')' || tup1[i] == ',') {\n            tup_str += \"\";\n        }\n        else {\n            tup_str += tup1[i];\n        }\n    }\n    return tup_str;",
    "    std::string str = \"\";\n    int i = 0;\n    while (tup1[i] != ')') {\n        str += tup1[i];\n        i++;\n    }\n    return str;",
    "    std::string result;\n    for(int i = 0; i < tup1.size(); i++) {\n        if(tup1[i] == '(' || tup1[i] == ')' || tup1[i] == ',') {\n            continue;\n        }\n        result += tup1[i];\n    }\n    return result;",
    "    std::string tup2 = \"\";\n    for (int i = 0; i < tup1.length(); i++) {\n        if (tup1[i] == ',') {\n            tup2 += \" \";\n        }\n        else {\n            tup2 += tup1[i];\n        }\n    }\n    return tup2;",
    "    std::string s = \"\";\n    for (int i = 0; i < tup1.length(); i++) {\n        if (tup1[i] == ',') {\n            s += \" \";\n        }\n        else {\n            s += tup1[i];\n        }\n    }\n    return s;",
    "  std::string tup_str = \"\";\n  for (int i = 0; i < tup1.size(); i++) {\n    if (tup1[i] == '(' || tup1[i] == ')' || tup1[i] == ',') {\n      tup_str += ' ';\n    } else {\n      tup_str += tup1[i];\n    }\n  }\n  return tup_str;",
    "    std::string tup_str = \"\";\n    for (int i = 0; i < tup1.length(); i++) {\n        if (tup1[i] == ',') {\n            tup_str += \" \";\n        }\n        else {\n            tup_str += tup1[i];\n        }\n    }\n    return tup_str;",
    "    std::string tup2 = \"\";\n    for (int i = 0; i < tup1.length(); i++) {\n        if (tup1[i] == '(' || tup1[i] == ')' || tup1[i] == ',') {\n            tup2 += \"\";\n        }\n        else {\n            tup2 += tup1[i];\n        }\n    }\n    return tup2;",
    "    std::string tup_str = \"\";\n    for (int i = 0; i < tup1.size(); i++) {\n        if (tup1[i] == ',') {\n            tup_str += \" \";\n        }\n        else {\n            tup_str += tup1[i];\n        }\n    }\n    return tup_str;",
    "    std::string tup_str = \"\";\n    for(int i = 0; i < tup1.length(); i++) {\n        if(tup1[i] == '(' || tup1[i] == ')' || tup1[i] == ',') {\n            continue;\n        }\n        tup_str += tup1[i];\n    }\n    return tup_str;",
    "    std::string tup2 = \"\";\n    for (int i = 0; i < tup1.length(); i++) {\n        if (tup1[i] == '(' || tup1[i] == ')' || tup1[i] == ',') {\n            continue;\n        }\n        tup2 += tup1[i];\n    }\n    return tup2;",
    "    std::string tup_str = \"\";\n    for(int i = 0; i < tup1.length(); i++) {\n        if(tup1[i] == '(' || tup1[i] == ')') {\n            tup_str += tup1[i];\n        }\n        else if(tup1[i] == ' ') {\n            continue;\n        }\n        else {\n            tup_str += tup1[i];\n            tup_str += ',';\n        }\n    }\n    return tup_str;",
    "  std::string str = \"\";\n  for (int i = 0; i < tup1.length(); i++) {\n    if (tup1[i] == '(' || tup1[i] == ')' || tup1[i] == ',') {\n      continue;\n    }\n    str += tup1[i];\n  }\n  return str;",
    "    std::string str = \"\";\n    for (int i = 0; i < tup1.length(); i++) {\n        if (tup1[i] == '(' || tup1[i] == ')' || tup1[i] == ',') {\n            continue;\n        }\n        str += tup1[i];\n    }\n    return str;",
    "    std::string str = \"\";\n    for (int i = 0; i < tup1.length(); i++) {\n        if (tup1[i] == ',') {\n            str += \" \";\n        }\n        else {\n            str += tup1[i];\n        }\n    }\n    return str;",
    "    std::string tup_str;\n    for (int i = 0; i < tup1.length(); i++) {\n        if (tup1[i] == '(' || tup1[i] == ')' || tup1[i] == ',') {\n            continue;\n        }\n        else {\n            tup_str += tup1[i];\n        }\n    }\n    return tup_str;",
    "\tstd::string s = \"\";\n\tfor(int i = 0; i < tup1.length(); i++) {\n\t\tif(tup1[i] == '(' || tup1[i] == ')' || tup1[i] == ',') {\n\t\t\tcontinue;\n\t\t}\n\t\telse {\n\t\t\ts += tup1[i];\n\t\t}\n\t}\n\treturn s;",
    "    std::string tup2;\n    tup2 = tup1.substr(1, tup1.length() - 2);\n    return tup2;",
    "    std::string str = \"\";\n    for(int i=0;i<tup1.length();i++) {\n        if(tup1[i] == ',') {\n            str += \" \";\n        }\n        else {\n            str += tup1[i];\n        }\n    }\n    return str;",
    "    std::string tup2;\n    for (int i = 0; i < tup1.length(); i++) {\n        if (tup1[i] == '(' || tup1[i] == ')' || tup1[i] == ',') {\n            continue;\n        }\n        tup2 += tup1[i];\n    }\n    return tup2;",
    "    std::string str = \"\";\n    for(int i = 0; i < tup1.length(); i++) {\n        if(tup1[i] == ',') {\n            str += \" \";\n        }\n        else {\n            str += tup1[i];\n        }\n    }\n    return str;",
    "    std::string tup_str = \"\";\n    for (int i = 0; i < tup1.length(); i++) {\n        if (tup1[i] == ',') {\n            tup_str += \" \";\n        } else {\n            tup_str += tup1[i];\n        }\n    }\n    return tup_str;",
    "    std::string str = \"\";\n    for(int i = 0; i < tup1.size(); i++) {\n        if(tup1[i] == ',') {\n            str += \" \";\n        }\n        else {\n            str += tup1[i];\n        }\n    }\n    return str;",
    "    std::string tup2 = \"\";\n    for (int i = 0; i < tup1.length(); i++) {\n        if (tup1[i] == '(' || tup1[i] == ')' || tup1[i] == ',') {\n            continue;\n        }\n        tup2 += tup1[i];\n    }\n    return tup2;",
    "    std::string tup_str;\n    tup_str = tup1;\n    return tup_str;",
    "    std::string tup2 = \"\";\n    for (int i = 0; i < tup1.length(); i++) {\n        if (tup1[i] == '(' || tup1[i] == ')' || tup1[i] == ',') {\n            continue;\n        }\n        tup2 += tup1[i];\n    }\n    return tup2;",
    "    std::string str = \"\";\n    for(int i=0;i<tup1.length();i++) {\n        if(tup1[i] == '(' || tup1[i] == ')' || tup1[i] == ',') {\n            continue;\n        }\n        str += tup1[i];\n    }\n    return str;",
    "    std::string str = \"\";\n    for (int i = 0; i < tup1.length(); i++) {\n        if (tup1[i] == '(' || tup1[i] == ')' || tup1[i] == ',') {\n            continue;\n        } else {\n            str += tup1[i];\n        }\n    }\n    return str;",
    "    std::string str = \"\";\n    for(int i = 0; i < tup1.length(); i++) {\n        if(tup1[i] == ',') {\n            str += \" \";\n        }\n        else {\n            str += tup1[i];\n        }\n    }\n    return str;",
    "    std::string tup_str = \"\";\n    for (int i = 0; i < tup1.length(); i++) {\n        if (tup1[i] == '(' || tup1[i] == ')' || tup1[i] == ',') {\n            continue;\n        }\n        tup_str += tup1[i];\n    }\n    return tup_str;",
    "    std::string tup_str = \"\";\n    for (int i = 0; i < tup1.length(); i++) {\n        if (tup1[i] == '(' || tup1[i] == ')' || tup1[i] == ',') {\n            continue;\n        }\n        tup_str += tup1[i];\n    }\n    return tup_str;",
    "    std::string str = \"\";\n    for (int i = 0; i < tup1.size(); i++) {\n        if (tup1[i] == '(' || tup1[i] == ')' || tup1[i] == ',') {\n            continue;\n        }\n        else {\n            str += tup1[i];\n        }\n    }\n    return str;",
    "    std::string str;\n    str = std::get<0>(tup1) + \" \" + std::get<1>(tup1) + \" \" + std::get<2>(tup1);\n    return str;",
    "    std::string tup_str;\n    tup_str = tup1;\n    return tup_str;",
    "    std::string tup_str;\n    for (int i = 0; i < tup1.length(); i++) {\n        if (tup1[i] == ',') {\n            tup_str += \" \";\n        } else {\n            tup_str += tup1[i];\n        }\n    }\n    return tup_str;",
    "    std::string str = \"\";\n    for (int i = 0; i < tup1.length(); i++) {\n        if (tup1[i] == '(' || tup1[i] == ')' || tup1[i] == ',') {\n            continue;\n        }\n        str += tup1[i];\n    }\n    return str;",
    "    std::string tup_str = \"(\";\n    for(int i = 0; i < tup1.length(); i++) {\n        if(tup1[i] == ',') {\n            tup_str += \") (\";\n        }\n        else {\n            tup_str += tup1[i];\n        }\n    }\n    tup_str += \")\";\n    return tup_str;",
    "    std::string tup_str = \"(\";\n    for (int i = 0; i < tup1.length(); i++) {\n        if (tup1[i] == ',') {\n            tup_str += \") (\";\n        }\n        else {\n            tup_str += tup1[i];\n        }\n    }\n    tup_str += \")\";\n    return tup_str;",
    "    std::string tup_str = \"\";\n    for (int i = 0; i < tup1.length(); i++) {\n        if (tup1[i] == ',') {\n            tup_str += \" \";\n        } else {\n            tup_str += tup1[i];\n        }\n    }\n    return tup_str;",
    "    std::string tup_str = \"\";\n    for (int i = 0; i < tup1.length(); i++) {\n        if (tup1[i] == '(' || tup1[i] == ')' || tup1[i] == ',') {\n            tup_str += \"\";\n        }\n        else {\n            tup_str += tup1[i];\n        }\n    }\n    return tup_str;",
    "    std::string str = \"\";\n    for (int i = 0; i < tup1.size(); i++) {\n        if (tup1[i] == ',') {\n            str += \" \";\n        }\n        else {\n            str += tup1[i];\n        }\n    }\n    return str;",
    "    std::string tup_str;\n    tup_str = tup1;\n    return tup_str;",
    "    std::string tup_str = \"\";\n    for (int i = 0; i < tup1.length(); i++) {\n        if (tup1[i] == '(' || tup1[i] == ')' || tup1[i] == ',') {\n            continue;\n        }\n        tup_str += tup1[i];\n    }\n    return tup_str;",
    "    std::string str = \"\";\n    for (int i = 0; i < tup1.length(); i++) {\n        if (tup1[i] == ',') {\n            str += \" \";\n        }\n        else {\n            str += tup1[i];\n        }\n    }\n    return str;",
    "    std::string tup2 = \"\";\n    for(int i = 0; i < tup1.length(); i++) {\n        if(tup1[i] == ',') {\n            tup2 += \" \";\n        }\n        else {\n            tup2 += tup1[i];\n        }\n    }\n    return tup2;",
    "    std::string tup2 = \"\";\n    for (int i = 0; i < tup1.length(); i++) {\n        if (tup1[i] != ',') {\n            tup2 += tup1[i];\n        }\n    }\n    return tup2;",
    "    std::stringstream ss;\n    ss << tup1;\n    std::string str = ss.str();\n    return str;",
    "    std::string tup_str;\n    for (int i = 0; i < tup1.size(); i++) {\n        if (tup1[i] == '(' || tup1[i] == ')' || tup1[i] == ',') {\n            continue;\n        }\n        else {\n            tup_str += tup1[i];\n        }\n    }\n    return tup_str;",
    "    std::string tup_str;\n    for (int i = 0; i < tup1.length(); i++) {\n        if (tup1[i] == '(' || tup1[i] == ')' || tup1[i] == ',') {\n            tup_str += ' ';\n        } else {\n            tup_str += tup1[i];\n        }\n    }\n    return tup_str;",
    "    std::string tup_str = \"\";\n    for (int i = 0; i < tup1.size(); i++) {\n        if (tup1[i] == '(' || tup1[i] == ')' || tup1[i] == ',') {\n            continue;\n        }\n        tup_str += tup1[i];\n    }\n    return tup_str;",
    "    std::string tup_str = \"\";\n    for(int i = 0; i < tup1.size(); i++) {\n        if(tup1[i] == '(' || tup1[i] == ')' || tup1[i] == ',') {\n            continue;\n        }\n        tup_str += tup1[i];\n    }\n    return tup_str;",
    "    std::string tup2 = \"\";\n    for(int i = 0; i < tup1.length(); i++) {\n        if(tup1[i] == '(' || tup1[i] == ')' || tup1[i] == ',') {\n            continue;\n        }\n        else {\n            tup2 += tup1[i];\n        }\n    }\n    return tup2;",
    "    std::string s = \"\";\n    for(int i = 0; i < tup1.size(); i++) {\n        if(tup1[i] == '(' || tup1[i] == ')' || tup1[i] == ',') {\n            continue;\n        }\n        s += tup1[i];\n    }\n    return s;",
    "    std::string tup_str = \"\";\n    for (int i = 0; i < tup1.size(); i++) {\n        if (tup1[i] == '(' || tup1[i] == ')') {\n            tup_str += tup1[i];\n        }\n    }\n    return tup_str;",
    "    std::string tup2 = \"\";\n    for (int i = 0; i < tup1.length(); i++) {\n        if (tup1[i] == '(' || tup1[i] == ')' || tup1[i] == ',') {\n            continue;\n        }\n        tup2 += tup1[i];\n    }\n    return tup2;",
    "    std::string str = \"\";\n    for (int i = 0; i < tup1.length(); i++) {\n        if (tup1[i] == ',') {\n            str += \" \";\n        }\n        else {\n            str += tup1[i];\n        }\n    }\n    return str;",
    "    std::string tup_str = \"\";\n    for (int i = 0; i < tup1.length(); i++) {\n        if (tup1[i] == '(' || tup1[i] == ')' || tup1[i] == ',') {\n            continue;\n        }\n        tup_str += tup1[i];\n    }\n    return tup_str;",
    "\tstd::string tup_str = \"\";\n\tfor (int i = 0; i < tup1.size(); i++) {\n\t\tif (tup1[i] == ',') {\n\t\t\ttup_str += \" \";\n\t\t}\n\t\telse {\n\t\t\ttup_str += tup1[i];\n\t\t}\n\t}\n\treturn tup_str;",
    "    std::string tup_str;\n    for (int i = 0; i < tup1.length(); i++) {\n        if (tup1[i] == ',') {\n            tup_str += ' ';\n        }\n        else {\n            tup_str += tup1[i];\n        }\n    }\n    return tup_str;",
    "    std::string str = \"\";\n    for (int i = 0; i < tup1.length(); i++) {\n        if (tup1[i] == ',') {\n            str += ' ';\n        }\n        else {\n            str += tup1[i];\n        }\n    }\n    return str;",
    "    std::stringstream ss;\n    ss << tup1;\n    std::string str = ss.str();\n    return str;",
    "  std::string tup_str = \"\";\n  for (int i = 0; i < tup1.length(); i++) {\n    if (tup1[i] == ',') {\n      tup_str += \" \";\n    } else {\n      tup_str += tup1[i];\n    }\n  }\n  return tup_str;",
    "    std::string tup_str;\n    tup_str = tup1;\n    return tup_str;",
    "    std::string tup_str = \"\";\n    for(int i = 0; i < tup1.length(); i++) {\n        if(tup1[i] == ',') {\n            tup_str += ' ';\n        }\n        else {\n            tup_str += tup1[i];\n        }\n    }\n    return tup_str;",
    "    std::string tup_string = \"\";\n    for (int i = 0; i < tup1.size(); i++) {\n        if (tup1[i] == '(') {\n            tup_string += \"(\";\n        }\n        else if (tup1[i] == ')') {\n            tup_string += \")\";\n        }\n        else if (tup1[i] == ',') {\n            tup_string += \",\";\n        }\n        else if (tup1[i] == ' ') {\n            continue;\n        }\n        else {\n            tup_string += tup1[i];\n        }\n    }\n    return tup_string;",
    "    std::string str = \"\";\n    for (int i = 0; i < tup1.size(); i++) {\n        if (tup1[i] == '(' || tup1[i] == ')' || tup1[i] == ',') {\n            continue;\n        } else {\n            str += tup1[i];\n        }\n    }\n    return str;",
    "    std::string tup_str = \"\";\n    for (int i = 0; i < tup1.length(); i++) {\n        if (tup1[i] == ',') {\n            tup_str += \" \";\n        } else {\n            tup_str += tup1[i];\n        }\n    }\n    return tup_str;",
    "    std::stringstream ss;\n    ss << tup1;\n    std::string str = ss.str();\n    return str;",
    "    std::string str = \"\";\n    for (int i = 0; i < tup1.length(); i++) {\n        if (tup1[i] == ',') {\n            str += \" \";\n        }\n        else {\n            str += tup1[i];\n        }\n    }\n    return str;",
    "    std::string tup2 = \"\";\n    for (int i = 0; i < tup1.size(); i++) {\n        if (tup1[i] == '(' || tup1[i] == ')' || tup1[i] == ',') {\n            continue;\n        }\n        tup2 += tup1[i];\n    }\n    return tup2;",
    "    std::string tup_str = \"\";\n    for (int i = 0; i < tup1.size(); i++) {\n        if (tup1[i] == '(' || tup1[i] == ')' || tup1[i] == ',') {\n            continue;\n        }\n        tup_str += tup1[i];\n    }\n    return tup_str;",
    "    std::string str = \"\";\n    for (int i = 0; i < tup1.length(); i++) {\n        if (tup1[i] == ',') {\n            str += ' ';\n        } else {\n            str += tup1[i];\n        }\n    }\n    return str;",
    "    std::string tup2 = \"\";\n    for (int i = 0; i < tup1.length(); i++) {\n        if (tup1[i] == '(' || tup1[i] == ')' || tup1[i] == ',') {\n            continue;\n        }\n        else {\n            tup2 += tup1[i];\n        }\n    }\n    return tup2;",
    "    std::string str = \"\";\n    int i = 0;\n    while(tup1[i] != '\\0') {\n        if(tup1[i] == '(' || tup1[i] == ')' || tup1[i] == ',') {\n            i++;\n            continue;\n        }\n        str += tup1[i];\n        i++;\n    }\n    return str;",
    "    std::string tup = tup1;\n    std::string tup_str = \"\";\n    for (int i = 0; i < tup.length(); i++) {\n        if (tup[i] == '(' || tup[i] == ')' || tup[i] == ',') {\n            tup_str += ' ';\n        } else {\n            tup_str += tup[i];\n        }\n    }\n    return tup_str;",
    "    std::string str = \"\";\n    for (int i = 0; i < tup1.length(); i++) {\n        if (tup1[i] == '(' || tup1[i] == ')' || tup1[i] == ',') {\n            str += ' ';\n        } else {\n            str += tup1[i];\n        }\n    }\n    return str;",
    "    std::string str;\n    for(int i=0;i<tup1.length();i++) {\n        if(tup1[i]=='(' || tup1[i]==')' || tup1[i]==',') {\n            continue;\n        }\n        str+=tup1[i];\n    }\n    return str;",
    "    std::string tup_str;\n    tup_str = tup1;\n    return tup_str;",
    "    std::string tup = tup1;\n    std::string tup_str;\n    int i = 0;\n    while (tup[i] != '\\0') {\n        if (tup[i] == '(') {\n            tup_str += \"(\";\n            i++;\n        }\n        else if (tup[i] == ')') {\n            tup_str += \")\";\n            i++;\n        }\n        else if (tup[i] == ',') {\n            tup_str += \",\";\n            i++;\n        }\n        else {\n            while (tup[i] != ',' && tup[i] != ')' && tup[i] != '\\0') {\n                tup_str += tup[i];\n                i++;\n            }\n        }\n    }\n    return tup_str;",
    "    std::string str = \"\";\n    for(int i=0; i<tup1.size(); i++) {\n        if(tup1[i] == '(' || tup1[i] == ')' || tup1[i] == ',') {\n            continue;\n        }\n        str += tup1[i];\n    }\n    return str;",
    "    std::string tup_str = \"\";\n    for(int i=0; i<tup1.length(); i++) {\n        if(tup1[i] == '(' || tup1[i] == ')' || tup1[i] == ',') {\n            continue;\n        }\n        tup_str += tup1[i];\n    }\n    return tup_str;",
    "    std::string tup_string = \"\";\n    for(int i = 0; i < tup1.length(); i++) {\n        if(tup1[i] == ',') {\n            tup_string += ' ';\n        }\n        else {\n            tup_string += tup1[i];\n        }\n    }\n    return tup_string;",
    "    std::string tup2 = \"\";\n    for(int i = 0; i < tup1.length(); i++) {\n        if(tup1[i] == '(') {\n            tup2 += '(';\n        }\n        else if(tup1[i] == ')') {\n            tup2 += ')';\n        }\n        else if(tup1[i] == ',') {\n            tup2 += ',';\n        }\n        else if(tup1[i] == ' ') {\n            continue;\n        }\n        else {\n            tup2 += tup1[i];\n        }\n    }\n    return tup2;",
    "    std::string tup_str = \"\";\n    for (int i = 0; i < tup1.length(); i++) {\n        if (tup1[i] == '(' || tup1[i] == ')' || tup1[i] == ',') {\n            continue;\n        }\n        tup_str += tup1[i];\n    }\n    return tup_str;",
    "    std::string s = \"\";\n    for(int i = 0; i < tup1.length(); i++) {\n        if(tup1[i] == '(' || tup1[i] == ')' || tup1[i] == ',') {\n            continue;\n        }\n        s += tup1[i];\n    }\n    return s;",
    "    std::string str = \"\";\n    for (int i = 0; i < tup1.length(); i++) {\n        if (tup1[i] == '(' || tup1[i] == ')' || tup1[i] == ',') {\n            continue;\n        }\n        else {\n            str += tup1[i];\n        }\n    }\n    return str;",
    "    std::string tup_str = \"\";\n    for (int i = 0; i < tup1.length(); i++) {\n        if (tup1[i] == '(' || tup1[i] == ')') {\n            continue;\n        }\n        tup_str += tup1[i];\n    }\n    return tup_str;",
    "    std::string tup_str = \"\";\n    for (int i = 0; i < tup1.length(); i++) {\n        if (tup1[i] == '(' || tup1[i] == ')') {\n            tup_str += tup1[i];\n        }\n    }\n    return tup_str;",
    "    std::string tup_str = \"\";\n    for (int i = 0; i < tup1.length(); i++) {\n        if (tup1[i] == '(' || tup1[i] == ')') {\n            continue;\n        }\n        if (tup1[i] == ',') {\n            tup_str += \" \";\n        }\n        else {\n            tup_str += tup1[i];\n        }\n    }\n    return tup_str;",
    "    std::string tup2 = tup1;\n    tup2.erase(std::remove(tup2.begin(), tup2.end(), ' '), tup2.end());\n    tup2.erase(std::remove(tup2.begin(), tup2.end(), '('), tup2.end());\n    tup2.erase(std::remove(tup2.begin(), tup2.end(), ')'), tup2.end());\n    return tup2;",
    "    std::string str = \"\";\n    for (int i = 0; i < tup1.length(); i++) {\n        if (tup1[i] == ',') {\n            str += \" \";\n        }\n        else {\n            str += tup1[i];\n        }\n    }\n    return str;",
    "    std::string str = \"\";\n    for (int i = 0; i < tup1.length(); i++) {\n        if (tup1[i] == ',') {\n            str += \" \";\n        } else {\n            str += tup1[i];\n        }\n    }\n    return str;",
    "    std::string str = \"\";\n    for(int i=0;i<tup1.length();i++) {\n        if(tup1[i] == '(' || tup1[i] == ')' || tup1[i] == ',') {\n            continue;\n        }\n        else {\n            str += tup1[i];\n        }\n    }\n    return str;",
    "    std::string tup_str = \"\";\n    for (int i = 0; i < tup1.length(); i++) {\n        if (tup1[i] == '(' || tup1[i] == ')' || tup1[i] == ',') {\n            continue;\n        }\n        tup_str += tup1[i];\n    }\n    return tup_str;",
    "    std::string str = \"\";\n    for (int i = 0; i < tup1.size(); i++) {\n        if (tup1[i] == '(' || tup1[i] == ')' || tup1[i] == ',') {\n            continue;\n        }\n        str += tup1[i];\n    }\n    return str;",
    "    std::string tup2 = \"\";\n    for (int i = 0; i < tup1.length(); i++) {\n        if (tup1[i] == '(' || tup1[i] == ')' || tup1[i] == ',') {\n            continue;\n        }\n        tup2 += tup1[i];\n    }\n    return tup2;",
    "    std::string str = \"\";\n    for(int i = 0; i < tup1.size(); i++) {\n        if(tup1[i] == ',') {\n            str += \" \";\n        }\n        else {\n            str += tup1[i];\n        }\n    }\n    return str;",
    "    std::string tup = tup1;\n    std::string tup_str;\n    for (int i = 0; i < tup.length(); i++) {\n        if (tup[i] == ',') {\n            tup_str += \" \";\n        }\n        else {\n            tup_str += tup[i];\n        }\n    }\n    return tup_str;",
    "    std::string str1 = \"\";\n    for(int i = 0; i < tup1.length(); i++) {\n        if(tup1[i] == '(' || tup1[i] == ')' || tup1[i] == ',') {\n            str1 += \" \";\n        }\n        else {\n            str1 += tup1[i];\n        }\n    }\n    return str1;",
    "    std::string tup_str = \"\";\n    for(int i = 0; i < tup1.length(); i++) {\n        if(tup1[i] == '(' || tup1[i] == ')' || tup1[i] == ',') {\n            continue;\n        }\n        else {\n            tup_str += tup1[i];\n        }\n    }\n    return tup_str;",
    "    std::string tup_str = \"\";\n    for(int i = 0; i < tup1.length(); i++) {\n        if(tup1[i] == '(' || tup1[i] == ')' || tup1[i] == ',') {\n            continue;\n        }\n        tup_str += tup1[i];\n    }\n    return tup_str;",
    "    std::string tup2 = \"\";\n    for(int i = 0; i < tup1.length(); i++) {\n        if(tup1[i] == '(' || tup1[i] == ')' || tup1[i] == ',') {\n            continue;\n        }\n        else {\n            tup2 += tup1[i];\n        }\n    }\n    return tup2;",
    "  std::string tup_str = \"\";\n  for(int i = 0; i < tup1.length(); i++) {\n    if(tup1[i] == '(' || tup1[i] == ')') {\n      continue;\n    }\n    tup_str += tup1[i];\n  }\n  return tup_str;",
    "    std::string tup2 = \"\";\n    for(int i = 0; i < tup1.length(); i++) {\n        if(tup1[i] == '(' || tup1[i] == ')' || tup1[i] == ',') {\n            continue;\n        }\n        else {\n            tup2 += tup1[i];\n        }\n    }\n    return tup2;",
    "    std::string s = \"\";\n    for (int i = 0; i < tup1.size(); i++) {\n        if (tup1[i] == ',') {\n            s += \" \";\n        } else {\n            s += tup1[i];\n        }\n    }\n    return s;",
    "    std::string tup_str = \"\";\n    for (int i = 0; i < tup1.length(); i++) {\n        if (tup1[i] == '(' || tup1[i] == ')' || tup1[i] == ',') {\n            continue;\n        }\n        tup_str += tup1[i];\n    }\n    return tup_str;",
    "    std::string tup_str = \"\";\n    for (int i = 0; i < tup1.length(); i++) {\n        if (tup1[i] == '(') {\n            tup_str += \"(\";\n        }\n        else if (tup1[i] == ')') {\n            tup_str += \")\";\n        }\n        else if (tup1[i] == ',') {\n            tup_str += \",\";\n        }\n        else if (tup1[i] == ' ') {\n            continue;\n        }\n        else {\n            tup_str += tup1[i];\n        }\n    }\n    return tup_str;",
    "    std::string tup2 = tup1;\n    tup2.erase(std::remove(tup2.begin(), tup2.end(), '('), tup2.end());\n    tup2.erase(std::remove(tup2.begin(), tup2.end(), ')'), tup2.end());\n    tup2.erase(std::remove(tup2.begin(), tup2.end(), ','), tup2.end());\n    return tup2;",
    "    std::string str = \"\";\n    for(int i=0; i<tup1.length(); i++) {\n        if(tup1[i] == '(' || tup1[i] == ')' || tup1[i] == ',') {\n            continue;\n        }\n        else {\n            str += tup1[i];\n        }\n    }\n    return str;",
    "    std::string tup2;\n    for (int i = 0; i < tup1.length(); i++) {\n        if (tup1[i] == ',') {\n            tup2 += ' ';\n        } else {\n            tup2 += tup1[i];\n        }\n    }\n    return tup2;",
    "    std::string tup_str = \"(\";\n    for (int i = 0; i < tup1.length(); i++) {\n        if (tup1[i] == ',') {\n            tup_str += \") (\";\n        } else {\n            tup_str += tup1[i];\n        }\n    }\n    tup_str += \")\";\n    return tup_str;",
    "    std::string tup_str;\n    tup_str = \"(\" + tup1 + \")\";\n    return tup_str;",
    "\tstd::string tup_str = \"\";\n\tfor (int i = 0; i < tup1.size(); i++) {\n\t\tif (tup1[i] == ',') {\n\t\t\ttup_str += \" \";\n\t\t}\n\t\telse {\n\t\t\ttup_str += tup1[i];\n\t\t}\n\t}\n\treturn tup_str;",
    "    std::string tup_str = \"\";\n    for (int i = 0; i < tup1.length(); i++) {\n        if (tup1[i] == '(' || tup1[i] == ')') {\n            continue;\n        }\n        tup_str += tup1[i];\n    }\n    return tup_str;",
    "    std::string tup2 = \"\";\n    for (int i = 0; i < tup1.length(); i++) {\n        if (tup1[i] == ',') {\n            tup2 += \" \";\n        }\n        else {\n            tup2 += tup1[i];\n        }\n    }\n    return tup2;",
    "    std::stringstream ss;\n    ss << tup1;\n    return ss.str();",
    "    std::string str = \"\";\n    for (int i = 0; i < tup1.length(); i++) {\n        if (tup1[i] == ',') {\n            str += \" \";\n        }\n        else {\n            str += tup1[i];\n        }\n    }\n    return str;",
    "    std::string tup2 = \"\";\n    for(int i = 0; i < tup1.length(); i++) {\n        if(tup1[i] == '(' || tup1[i] == ')' || tup1[i] == ',') {\n            continue;\n        }\n        else {\n            tup2 += tup1[i];\n        }\n    }\n    return tup2;",
    "    std::string str = \"\";\n    for(int i = 0; i < tup1.length(); i++) {\n        if(tup1[i] == '(' || tup1[i] == ')' || tup1[i] == ',') {\n            continue;\n        }\n        str += tup1[i];\n    }\n    return str;",
    "    std::string tup2 = \"\";\n    for(int i = 0; i < tup1.length(); i++) {\n        if(tup1[i] == ',') {\n            tup2 += \" \";\n        }\n        else {\n            tup2 += tup1[i];\n        }\n    }\n    return tup2;",
    "    std::string str;\n    for (int i = 0; i < tup1.size(); i++) {\n        if (tup1[i] == '(' || tup1[i] == ')' || tup1[i] == ',') {\n            continue;\n        }\n        else {\n            str += tup1[i];\n        }\n    }\n    return str;",
    "    std::string str = \"\";\n    for(int i=0; i<tup1.length(); i++) {\n        if(tup1[i] == '(' || tup1[i] == ')' || tup1[i] == ',') {\n            continue;\n        }\n        str += tup1[i];\n    }\n    return str;",
    "    std::string tup2 = \"\";\n    for(int i = 0; i < tup1.length(); i++) {\n        if(tup1[i] == '(' || tup1[i] == ')' || tup1[i] == ',') {\n            continue;\n        }\n        tup2 += tup1[i];\n    }\n    return tup2;",
    "    std::string tup_str;\n    for (int i = 0; i < tup1.size(); i++) {\n        if (tup1[i] == '(' || tup1[i] == ')' || tup1[i] == ',') {\n            continue;\n        }\n        tup_str += tup1[i];\n    }\n    return tup_str;",
    "    std::string str = \"\";\n    for (int i = 0; i < tup1.length(); i++) {\n        if (tup1[i] == ',') {\n            str += \" \";\n        }\n        else {\n            str += tup1[i];\n        }\n    }\n    return str;",
    "    std::string str = \"\";\n    for(int i = 0; i < tup1.length(); i++) {\n        if(tup1[i] == '(' || tup1[i] == ')' || tup1[i] == ',') {\n            continue;\n        }\n        else {\n            str += tup1[i];\n        }\n    }\n    return str;",
    "    std::string str = \"\";\n    for (int i = 0; i < tup1.length(); i++) {\n        if (tup1[i] == '(' || tup1[i] == ')' || tup1[i] == ',') {\n            continue;\n        }\n        str += tup1[i];\n    }\n    return str;",
    "    std::string tup2 = \"\";\n    for (int i = 0; i < tup1.length(); i++) {\n        if (tup1[i] == '(' || tup1[i] == ')' || tup1[i] == ',') {\n            continue;\n        }\n        tup2 += tup1[i];\n    }\n    return tup2;",
    "    std::string str = \"\";\n    for (int i = 0; i < tup1.length(); i++) {\n        if (tup1[i] == ',') {\n            str += ' ';\n        }\n        else {\n            str += tup1[i];\n        }\n    }\n    return str;",
    "    std::string str = \"\";\n    for(int i = 0; i < tup1.length(); i++) {\n        if(tup1[i] == '(' || tup1[i] == ')' || tup1[i] == ',') {\n            continue;\n        }\n        str += tup1[i];\n    }\n    return str;",
    "    std::string tup2;\n    for(int i=0; i<tup1.length(); i++) {\n        if(tup1[i] == ',') {\n            tup2 += ' ';\n        }\n        else {\n            tup2 += tup1[i];\n        }\n    }\n    return tup2;",
    "    std::string str = \"\";\n    for (int i = 0; i < tup1.length(); i++) {\n        if (tup1[i] == ',') {\n            str += \" \";\n        } else {\n            str += tup1[i];\n        }\n    }\n    return str;",
    "    std::string tup_str = \"\";\n    for (int i = 0; i < tup1.size(); i++) {\n        if (tup1[i] == '(' || tup1[i] == ')') {\n            continue;\n        }\n        tup_str += tup1[i];\n    }\n    return tup_str;",
    "    std::string str = \"\";\n    for(int i = 0; i < tup1.size(); i++) {\n        if(tup1[i] == '(' || tup1[i] == ')' || tup1[i] == ',') {\n            continue;\n        }\n        else {\n            str += tup1[i];\n        }\n    }\n    return str;",
    "    std::string tup2 = \"\";\n    for (int i = 0; i < tup1.length(); i++) {\n        if (tup1[i] == '(' || tup1[i] == ')' || tup1[i] == ',') {\n            tup2 += \" \";\n        }\n        else {\n            tup2 += tup1[i];\n        }\n    }\n    return tup2;",
    "    std::string str = \"\";\n    for (int i = 0; i < tup1.size(); i++) {\n        if (tup1[i] == ',') {\n            str += \" \";\n        }\n        else {\n            str += tup1[i];\n        }\n    }\n    return str;",
    "    std::string str = \"\";\n    for (int i = 0; i < tup1.length(); i++) {\n        if (tup1[i] == '(' || tup1[i] == ')' || tup1[i] == ',') {\n            continue;\n        }\n        str += tup1[i];\n    }\n    return str;",
    "    std::string str;\n    str = tup1;\n    return str;",
    "    std::string str = \"\";\n    for (int i = 0; i < tup1.length(); i++) {\n        if (tup1[i] == '(' || tup1[i] == ')' || tup1[i] == ',') {\n            continue;\n        }\n        str += tup1[i];\n    }\n    return str;",
    "    std::string str = \"\";\n    for(int i = 0; i < tup1.size(); i++) {\n        if(tup1[i] == '(' || tup1[i] == ')' || tup1[i] == ',') {\n            continue;\n        }\n        else {\n            str += tup1[i];\n        }\n    }\n    return str;",
    "    std::string tup2;\n    for (int i = 0; i < tup1.length(); i++) {\n        if (tup1[i] == '(') {\n            tup2 += '{';\n        }\n        else if (tup1[i] == ')') {\n            tup2 += '}';\n        }\n        else {\n            tup2 += tup1[i];\n        }\n    }\n    return tup2;",
    "    std::string tup_str = \"(\";\n    int i = 0;\n    while(tup1[i] != ')') {\n        if(tup1[i] == ',') {\n            tup_str += \",\";\n        }\n        else {\n            tup_str += tup1[i];\n        }\n        i++;\n    }\n    tup_str += \")\";\n    return tup_str;",
    "    std::stringstream ss;\n    ss << tup1;\n    std::string str = ss.str();\n    return str;",
    "    std::string tup_str = \"\";\n    for (int i = 0; i < tup1.size(); i++) {\n        if (tup1[i] == ',') {\n            tup_str += \" \";\n        }\n        else {\n            tup_str += tup1[i];\n        }\n    }\n    return tup_str;",
    "    std::string tup_str = \"\";\n    for (int i = 0; i < tup1.length(); i++) {\n        if (tup1[i] == '(' || tup1[i] == ')' || tup1[i] == ' ') {\n            continue;\n        }\n        tup_str += tup1[i];\n    }\n    return tup_str;",
    "    std::string tup_str = \"\";\n    for (int i = 0; i < tup1.length(); i++) {\n        if (tup1[i] == '(' || tup1[i] == ')') {\n            continue;\n        }\n        tup_str += tup1[i];\n    }\n    return tup_str;",
    "    std::string str;\n    str = \"(\" + tup1 + \")\";\n    return str;",
    "    std::string tup2 = \"\";\n    for(int i = 0; i < tup1.length(); i++) {\n        if(tup1[i] == ',') {\n            tup2 += \" \";\n        }\n        else {\n            tup2 += tup1[i];\n        }\n    }\n    return tup2;",
    "    std::string str;\n    for(int i = 0; i < tup1.length(); i++) {\n        if(tup1[i] == '(' || tup1[i] == ')' || tup1[i] == ',') {\n            continue;\n        }\n        else {\n            str += tup1[i];\n        }\n    }\n    return str;",
    "    std::string str = \"\";\n    for (int i = 0; i < tup1.length(); i++) {\n        if (tup1[i] == ',') {\n            str += \" \";\n        } else {\n            str += tup1[i];\n        }\n    }\n    return str;",
    "    std::string str = \"\";\n    for(int i = 0; i < tup1.length(); i++) {\n        if(tup1[i] == '(' || tup1[i] == ')' || tup1[i] == ',') {\n            continue;\n        }\n        else {\n            str += tup1[i];\n        }\n    }\n    return str;",
    "    std::string tup_str = \"\";\n    for (int i = 0; i < tup1.length(); i++) {\n        if (tup1[i] == ',') {\n            tup_str += \" \";\n        }\n        else {\n            tup_str += tup1[i];\n        }\n    }\n    return tup_str;",
    "    std::string tup_str = \"\";\n    for (int i = 0; i < tup1.length(); i++) {\n        if (tup1[i] == ',') {\n            tup_str += \" \";\n        } else {\n            tup_str += tup1[i];\n        }\n    }\n    return tup_str;",
    "    std::stringstream ss;\n    ss << tup1;\n    std::string str = ss.str();\n    return str;",
    "    std::string tup_str;\n    for(int i=0;i<tup1.length();i++) {\n        if(tup1[i]=='(' || tup1[i]==')' || tup1[i]==',') {\n            continue;\n        }\n        else {\n            tup_str+=tup1[i];\n        }\n    }\n    return tup_str;",
    "    std::string str = \"\";\n    for (int i = 0; i < tup1.length(); i++) {\n        if (tup1[i] == '(' || tup1[i] == ')' || tup1[i] == ',') {\n            continue;\n        }\n        str += tup1[i];\n    }\n    return str;",
    "    std::string str;\n    str = std::get<0>(tup1);\n    str += \" \";\n    str += std::get<1>(tup1);\n    str += \" \";\n    str += std::get<2>(tup1);\n    str += \" \";\n    str += std::get<3>(tup1);\n    return str;",
    "    std::string str = \"\";\n    for (int i = 0; i < tup1.size(); i++) {\n        if (tup1[i] == ',') {\n            str += ' ';\n        }\n        else {\n            str += tup1[i];\n        }\n    }\n    return str;",
    "    std::string str = \"\";\n    for (int i = 0; i < tup1.length(); i++) {\n        if (tup1[i] == '(' || tup1[i] == ')' || tup1[i] == ',') {\n            continue;\n        }\n        else {\n            str += tup1[i];\n        }\n    }\n    return str;",
    "    std::string tup_str = \"\";\n    for (int i = 0; i < tup1.length(); i++) {\n        if (tup1[i] == '(' || tup1[i] == ')' || tup1[i] == ',') {\n            continue;\n        }\n        tup_str += tup1[i];\n    }\n    return tup_str;",
    "    std::string tup = tup1;\n    std::string tup_str = \"\";\n    int i = 0;\n    while(i < tup.length()) {\n        if(tup[i] == '(' || tup[i] == ')') {\n            tup_str += tup[i];\n            i++;\n        }\n        else {\n            std::string temp = \"\";\n            while(tup[i] != ',' && tup[i] != ')') {\n                temp += tup[i];\n                i++;\n            }\n            tup_str += temp;\n            if(tup[i] == ',') {\n                tup_str += tup[i];\n                i++;\n            }\n        }\n    }\n    return tup_str;",
    "\tstd::string tup1_str = \"\";\n\tfor (int i = 0; i < tup1.size(); i++) {\n\t\tif (tup1[i] == ',') {\n\t\t\ttup1_str += \" \";\n\t\t}\n\t\telse {\n\t\t\ttup1_str += tup1[i];\n\t\t}\n\t}\n\treturn tup1_str;",
    "    std::string tup_str = \"\";\n    for (int i = 0; i < tup1.length(); i++) {\n        if (tup1[i] == '(' || tup1[i] == ')' || tup1[i] == ',') {\n            continue;\n        }\n        tup_str += tup1[i];\n    }\n    return tup_str;",
    "    std::string tup2;\n    tup2 = tup1.substr(1, tup1.size()-2);\n    return tup2;",
    "    std::string tup_str;\n    for (int i = 0; i < tup1.length(); i++) {\n        if (tup1[i] == ',') {\n            tup_str += \" \";\n        }\n        else {\n            tup_str += tup1[i];\n        }\n    }\n    return tup_str;",
    "    std::string str = \"\";\n    int i = 0;\n    while(tup1[i] != '\\0') {\n        if(tup1[i] == '(' || tup1[i] == ')' || tup1[i] == ',') {\n            i++;\n            continue;\n        }\n        str += tup1[i];\n        i++;\n    }\n    return str;",
    "    std::string tup_str = \"\";\n    for (int i = 0; i < tup1.size(); i++) {\n        if (tup1[i] == ',') {\n            tup_str += \" \";\n        }\n        else {\n            tup_str += tup1[i];\n        }\n    }\n    return tup_str;",
    "    std::stringstream ss;\n    ss << tup1;\n    std::string str = ss.str();\n    return str;",
    "    std::string tup = tup1;\n    std::string tup_str = \"\";\n    for(int i = 0; i < tup.length(); i++) {\n        if(tup[i] == ',') {\n            tup_str += \" \";\n        }\n        else {\n            tup_str += tup[i];\n        }\n    }\n    return tup_str;",
    "    std::string str = \"\";\n    for (int i = 0; i < tup1.length(); i++) {\n        if (tup1[i] == '(' || tup1[i] == ')' || tup1[i] == ',') {\n            continue;\n        }\n        str += tup1[i];\n    }\n    return str;",
    "    std::string tup_str;\n    int i = 0;\n    while(tup1[i] != ')') {\n        if(tup1[i] == ',') {\n            tup_str += \" \";\n        }\n        else {\n            tup_str += tup1[i];\n        }\n        i++;\n    }\n    return tup_str;",
    "    std::string tup_str = \"\";\n    for (int i = 0; i < tup1.size(); i++) {\n        if (tup1[i] == ',') {\n            tup_str += \" \";\n        }\n        else {\n            tup_str += tup1[i];\n        }\n    }\n    return tup_str;",
    "    std::string tup = tup1;\n    std::string tup_str = \"\";\n    int i = 0;\n    while(i < tup.length()) {\n        if(tup[i] == '(') {\n            tup_str += \"(\";\n            i++;\n        }\n        else if(tup[i] == ')') {\n            tup_str += \")\";\n            i++;\n        }\n        else if(tup[i] == ',') {\n            tup_str += \",\";\n            i++;\n        }\n        else if(tup[i] == ' ') {\n            i++;\n        }\n        else {\n            tup_str += tup[i];\n            i++;\n        }\n    }\n    return tup_str;",
    "    std::string str = \"\";\n    for (int i = 0; i < tup1.length(); i++) {\n        if (tup1[i] == ',') {\n            str += \" \";\n        } else {\n            str += tup1[i];\n        }\n    }\n    return str;",
    "    std::string tup_str = \"\";\n    for (int i = 0; i < tup1.length(); i++) {\n        if (tup1[i] == ',') {\n            tup_str += \" \";\n        } else {\n            tup_str += tup1[i];\n        }\n    }\n    return tup_str;",
    "    std::string tup_string = \"\";\n    for (int i = 0; i < tup1.length(); i++) {\n        if (tup1[i] == ',') {\n            tup_string += \" \";\n        } else {\n            tup_string += tup1[i];\n        }\n    }\n    return tup_string;",
    "    std::string result = \"\";\n    for(int i = 0; i < tup1.length(); i++) {\n        if(tup1[i] == '(' || tup1[i] == ')') {\n            continue;\n        }\n        result += tup1[i];\n    }\n    return result;",
    "    std::stringstream ss;\n    ss << tup1;\n    return ss.str();",
    "    std::string str = \"\";\n    for (int i = 0; i < tup1.size(); i++) {\n        if (tup1[i] == ',') {\n            str += \" \";\n        } else {\n            str += tup1[i];\n        }\n    }\n    return str;",
    "    std::string tup = tup1;\n    std::string tup_str = \"\";\n    for (int i = 0; i < tup.length(); i++) {\n        if (tup[i] == ',') {\n            tup_str += ' ';\n        }\n        else {\n            tup_str += tup[i];\n        }\n    }\n    return tup_str;"
  ]
}
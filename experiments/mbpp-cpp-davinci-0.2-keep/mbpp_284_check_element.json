{
  "name": "mbpp_284_check_element",
  "language": "cpp",
  "prompt": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\nbool check_element(std::any list, std::any element) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_284_check_element.py",
  "prompt_terminology": "verbatim",
  "tests": "}\nint main() {\n    auto candidate = check_element;\n    assert(candidate((std::any({(std::string)\"green\", (std::string)\"orange\", (std::string)\"black\", (std::string)\"white\"})), (std::any(\"blue\"))) == (false));\n    assert(candidate((std::any({(long)1, (long)2, (long)3, (long)4})), (std::any(7))) == (false));\n    assert(candidate((std::any({(std::string)\"green\", (std::string)\"green\", (std::string)\"green\", (std::string)\"green\"})), (std::any(\"green\"))) == (true));\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    for (auto i : list) {\n        if (i != element) {\n            return false;\n        }\n    }\n    return true;",
    "    for (int i = 0; i < list.size(); i++) {\n        if (list[i] != element) {\n            return false;\n        }\n    }\n    return true;",
    "    for(auto i : list) {\n        if(i != element) {\n            return false;\n        }\n    }\n    return true;",
    "    for (auto i : list) {\n        if (i != element) {\n            return false;\n        }\n    }\n    return true;",
    "    for (auto i : list) {\n        if (i != element) {\n            return false;\n        }\n    }\n    return true;",
    "    if (list.size() == 0) {\n        return true;\n    }\n    if (list[0] == element) {\n        return check_element(list.slice(1), element);\n    }\n    return false;",
    "    for (auto i : list) {\n        if (i != element) {\n            return false;\n        }\n    }\n    return true;",
    "    for (auto i : list) {\n        if (i != element) {\n            return false;\n        }\n    }\n    return true;",
    "    for(auto i : list) {\n        if(i != element) {\n            return false;\n        }\n    }\n    return true;",
    "    for (auto i : list) {\n        if (i != element) {\n            return false;\n        }\n    }\n    return true;",
    "    for (auto i : list) {\n        if (i != element) {\n            return false;\n        }\n    }\n    return true;",
    "  for (auto i : list) {\n    if (i != element) {\n      return false;\n    }\n  }\n  return true;",
    "    for (auto i : list) {\n        if (i != element) {\n            return false;\n        }\n    }\n    return true;",
    "    for (std::any item : list) {\n        if (item != element) {\n            return false;\n        }\n    }\n    return true;",
    "    for (int i = 0; i < list.size(); i++) {\n        if (list[i] != element) {\n            return false;\n        }\n    }\n    return true;",
    "    for (auto i : list) {\n        if (i != element) {\n            return false;\n        }\n    }\n    return true;",
    "    for (auto i : list) {\n        if (i != element) {\n            return false;\n        }\n    }\n    return true;",
    "    for (auto i : list) {\n        if (i != element) {\n            return false;\n        }\n    }\n    return true;",
    "    if (list.type() == typeid(std::vector<int>)) {\n        std::vector<int> v = std::any_cast<std::vector<int>>(list);\n        for (int i = 0; i < v.size(); i++) {\n            if (v[i] != element) {\n                return false;\n            }\n        }\n        return true;\n    }\n    else if (list.type() == typeid(std::vector<float>)) {\n        std::vector<float> v = std::any_cast<std::vector<float>>(list);\n        for (int i = 0; i < v.size(); i++) {\n            if (v[i] != element) {\n                return false;\n            }\n        }\n        return true;\n    }\n    else if (list.type() == typeid(std::vector<double>)) {\n        std::vector<double> v = std::any_cast<std::vector<double>>(list);\n        for (int i = 0; i < v.size(); i++) {\n            if (v[i] != element) {\n                return false;\n            }\n        }\n        return true;\n    }\n    else if (list.type() == typeid(std::vector<std::string>)) {\n        std::vector<std::string> v = std::any_cast<std::vector<std::string>>(list);\n        for (int i = 0; i < v.size(); i++) {\n            if (v[i] != element) {\n                return false;\n            }\n        }\n        return true;\n    }\n    else if (list.type() == typeid(std::vector<char>)) {\n        std::vector<char> v = std::any_cast<std::vector<char>>(list);\n        for (int i = 0; i < v.size(); i++) {\n            if (v[i] != element) {\n                return false;\n            }\n        }\n        return true;\n    }\n    else if (list.type() == typeid(std::vector<bool>)) {\n        std::vector<bool> v = std",
    "    for (int i = 0; i < list.size(); i++) {\n        if (list[i] != element) {\n            return false;\n        }\n    }\n    return true;",
    "    if (list.empty()) {\n        return true;\n    }\n    if (list.front() == element) {\n        return check_element(list.pop_front(), element);\n    }\n    return false;",
    "    for (int i = 0; i < list.size(); i++) {\n        if (list[i] != element) {\n            return false;\n        }\n    }\n    return true;",
    "    for (auto i : list) {\n        if (i != element) {\n            return false;\n        }\n    }\n    return true;",
    "    for (int i = 0; i < list.size(); i++) {\n        if (list[i] != element) {\n            return false;\n        }\n    }\n    return true;",
    "    for (auto i : list) {\n        if (i != element) {\n            return false;\n        }\n    }\n    return true;",
    "    for(auto i : list) {\n        if(i != element) {\n            return false;\n        }\n    }\n    return true;",
    "    for(auto i : list) {\n        if(i != element) {\n            return false;\n        }\n    }\n    return true;",
    "    for (auto i : list) {\n        if (i != element) {\n            return false;\n        }\n    }\n    return true;",
    "    for (int i = 0; i < list.size(); i++) {\n        if (list[i] != element) {\n            return false;\n        }\n    }\n    return true;",
    "    for (int i = 0; i < list.size(); i++) {\n        if (list[i] != element) {\n            return false;\n        }\n    }\n    return true;",
    "    for (auto i : list) {\n        if (i != element) {\n            return false;\n        }\n    }\n    return true;",
    "    for (auto i : list) {\n        if (i != element) {\n            return false;\n        }\n    }\n    return true;",
    "  for (auto i : list) {\n    if (i != element) {\n      return false;\n    }\n  }\n  return true;",
    "    for (auto i : list) {\n        if (i != element) {\n            return false;\n        }\n    }\n    return true;",
    "    for (auto i : list) {\n        if (i != element) {\n            return false;\n        }\n    }\n    return true;",
    "    for (auto i : list) {\n        if (i != element) {\n            return false;\n        }\n    }\n    return true;",
    "    for(int i = 0; i < list.size(); i++) {\n        if(list[i] != element) {\n            return false;\n        }\n    }\n    return true;",
    "    for (int i = 0; i < list.size(); i++) {\n        if (list[i] != element) {\n            return false;\n        }\n    }\n    return true;",
    "    for (auto i : list) {\n        if (i != element) {\n            return false;\n        }\n    }\n    return true;",
    "    for(int i = 0; i < list.size(); i++) {\n        if(list[i] != element) {\n            return false;\n        }\n    }\n    return true;",
    "    for (int i = 0; i < list.size(); i++) {\n        if (list[i] != element) {\n            return false;\n        }\n    }\n    return true;",
    "    for (auto i : list) {\n        if (i != element) {\n            return false;\n        }\n    }\n    return true;",
    "    for (auto i : list) {\n        if (i != element) {\n            return false;\n        }\n    }\n    return true;",
    "    for (auto i : list) {\n        if (i != element) {\n            return false;\n        }\n    }\n    return true;",
    "    if (list.empty()) {\n        return true;\n    }\n    if (list.front() == element) {\n        return check_element(list.pop_front(), element);\n    }\n    return false;",
    "    for (int i = 0; i < list.size(); i++) {\n        if (list[i] != element) {\n            return false;\n        }\n    }\n    return true;",
    "    for (auto i : list) {\n        if (i != element) {\n            return false;\n        }\n    }\n    return true;",
    "    for (auto i : list) {\n        if (i != element) {\n            return false;\n        }\n    }\n    return true;",
    "    for (auto i : list) {\n        if (i != element) {\n            return false;\n        }\n    }\n    return true;",
    "    for (auto i : list) {\n        if (i != element) {\n            return false;\n        }\n    }\n    return true;",
    "    for (auto i : list) {\n        if (i != element) {\n            return false;\n        }\n    }\n    return true;",
    "    for (auto i: list) {\n        if (i != element) {\n            return false;\n        }\n    }\n    return true;",
    "    for (auto i : list) {\n        if (i != element) {\n            return false;\n        }\n    }\n    return true;",
    "    for (auto i : list) {\n        if (i != element) {\n            return false;\n        }\n    }\n    return true;",
    "    for (auto i : list) {\n        if (i != element) {\n            return false;\n        }\n    }\n    return true;",
    "    for (int i = 0; i < list.size(); i++) {\n        if (list[i] != element) {\n            return false;\n        }\n    }\n    return true;",
    "    for(int i = 0; i < list.size(); i++) {\n        if(list[i] != element) {\n            return false;\n        }\n    }\n    return true;",
    "    for (auto i : list) {\n        if (i != element) {\n            return false;\n        }\n    }\n    return true;",
    "    for (auto i : list) {\n        if (i != element) {\n            return false;\n        }\n    }\n    return true;",
    "    for (auto i : list) {\n        if (i != element) {\n            return false;\n        }\n    }\n    return true;",
    "    for (auto i : list) {\n        if (i != element) {\n            return false;\n        }\n    }\n    return true;",
    "    if (list.empty()) {\n        return true;\n    }\n    if (list.front() == element) {\n        return check_element(list.pop_front(), element);\n    }\n    return false;",
    "    for (auto i : list) {\n        if (i != element) {\n            return false;\n        }\n    }\n    return true;",
    "    for (auto i: list) {\n        if (i != element) {\n            return false;\n        }\n    }\n    return true;",
    "    for (int i = 0; i < list.size(); i++) {\n        if (list[i] != element) {\n            return false;\n        }\n    }\n    return true;",
    "    for (auto i : list) {\n        if (i != element) {\n            return false;\n        }\n    }\n    return true;",
    "    for (auto i : list) {\n        if (i != element) {\n            return false;\n        }\n    }\n    return true;",
    "    for (auto i : list) {\n        if (i != element) {\n            return false;\n        }\n    }\n    return true;",
    "    for (int i = 0; i < list.size(); i++) {\n        if (list[i] != element) {\n            return false;\n        }\n    }\n    return true;",
    "    for (int i = 0; i < list.size(); i++) {\n        if (list[i] != element) {\n            return false;\n        }\n    }\n    return true;",
    "    for(auto i:list) {\n        if(i!=element) {\n            return false;\n        }\n    }\n    return true;",
    "    for (auto i : list) {\n        if (i != element) {\n            return false;\n        }\n    }\n    return true;",
    "  for (int i = 0; i < list.size(); i++) {\n    if (list[i] != element) {\n      return false;\n    }\n  }\n  return true;",
    "    for(int i=0;i<list.size();i++){\n        if(list[i]!=element){\n            return false;\n        }\n    }\n    return true;",
    "    for (auto i : list) {\n        if (i != element) {\n            return false;\n        }\n    }\n    return true;",
    "    for (auto i : list) {\n        if (i != element) {\n            return false;\n        }\n    }\n    return true;",
    "\tfor (auto i : list) {\n\t\tif (i != element) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;",
    "    for (auto i : list) {\n        if (i != element) {\n            return false;\n        }\n    }\n    return true;",
    "    for (auto i : list) {\n        if (i != element) {\n            return false;\n        }\n    }\n    return true;",
    "    for (auto i : list) {\n        if (i != element) {\n            return false;\n        }\n    }\n    return true;",
    "    for (auto i: list) {\n        if (i != element) {\n            return false;\n        }\n    }\n    return true;",
    "    for (int i = 0; i < list.size(); i++) {\n        if (list[i] != element) {\n            return false;\n        }\n    }\n    return true;",
    "    for (auto i : list) {\n        if (i != element) {\n            return false;\n        }\n    }\n    return true;",
    "    for (int i = 0; i < list.size(); i++) {\n        if (list[i] != element) {\n            return false;\n        }\n    }\n    return true;",
    "    for (int i = 0; i < list.size(); i++) {\n        if (list[i] != element) {\n            return false;\n        }\n    }\n    return true;",
    "    for (auto i : list) {\n        if (i != element) {\n            return false;\n        }\n    }\n    return true;",
    "    for (int i = 0; i < list.size(); i++) {\n        if (list[i] != element) {\n            return false;\n        }\n    }\n    return true;",
    "    for (int i = 0; i < list.size(); i++) {\n        if (list[i] != element) {\n            return false;\n        }\n    }\n    return true;",
    "    for (int i = 0; i < list.size(); i++) {\n        if (list[i] != element) {\n            return false;\n        }\n    }\n    return true;",
    "    for (int i = 0; i < list.size(); i++) {\n        if (list[i] != element) {\n            return false;\n        }\n    }\n    return true;",
    "  if (list.empty()) {\n    return true;\n  }\n  if (list.front() != element) {\n    return false;\n  }\n  return check_element(list.pop_front(), element);",
    "  for(int i = 0; i < list.size(); i++) {\n    if(list[i] != element) {\n      return false;\n    }\n  }\n  return true;",
    "    for (auto i : list) {\n        if (i != element) {\n            return false;\n        }\n    }\n    return true;",
    "    for (int i = 0; i < list.size(); i++) {\n        if (list[i] != element) {\n            return false;\n        }\n    }\n    return true;",
    "    for (int i = 0; i < list.size(); i++) {\n        if (list[i] != element) {\n            return false;\n        }\n    }\n    return true;",
    "    for (auto i : list) {\n        if (i != element) {\n            return false;\n        }\n    }\n    return true;",
    "    for (auto i : list) {\n        if (i != element) {\n            return false;\n        }\n    }\n    return true;",
    "    for(int i = 0; i < list.size(); i++) {\n        if(list[i] != element) {\n            return false;\n        }\n    }\n    return true;",
    "    for (auto i : list) {\n        if (i != element) {\n            return false;\n        }\n    }\n    return true;",
    "    for (auto i : list) {\n        if (i != element) {\n            return false;\n        }\n    }\n    return true;",
    "    for (auto i : list) {\n        if (i != element) {\n            return false;\n        }\n    }\n    return true;",
    "    for (int i = 0; i < list.size(); i++) {\n        if (list[i] != element) {\n            return false;\n        }\n    }\n    return true;",
    "    for (auto i : list) {\n        if (i != element) {\n            return false;\n        }\n    }\n    return true;",
    "    for (auto i : list) {\n        if (i != element) {\n            return false;\n        }\n    }\n    return true;",
    "    for(int i=0;i<list.size();i++) {\n        if(list[i] != element) {\n            return false;\n        }\n    }\n    return true;",
    "    for (int i = 0; i < list.size(); i++) {\n        if (list[i] != element) {\n            return false;\n        }\n    }\n    return true;",
    "    for (auto i : list) {\n        if (i != element) {\n            return false;\n        }\n    }\n    return true;",
    "    for (auto i : list) {\n        if (i != element) {\n            return false;\n        }\n    }\n    return true;",
    "    for (int i = 0; i < list.size(); i++) {\n        if (list[i] != element) {\n            return false;\n        }\n    }\n    return true;",
    "    for (int i = 0; i < list.size(); i++) {\n        if (list[i] != element) {\n            return false;\n        }\n    }\n    return true;",
    "    for (int i = 0; i < list.size(); i++) {\n        if (list[i] != element) {\n            return false;\n        }\n    }\n    return true;",
    "  for (int i = 0; i < list.size(); i++) {\n    if (list[i] != element) {\n      return false;\n    }\n  }\n  return true;",
    "    for (int i = 0; i < list.size(); i++) {\n        if (list[i] != element) {\n            return false;\n        }\n    }\n    return true;",
    "    for (int i = 0; i < list.size(); i++) {\n        if (list[i] != element) {\n            return false;\n        }\n    }\n    return true;",
    "  for (int i = 0; i < list.size(); i++) {\n    if (list[i] != element) {\n      return false;\n    }\n  }\n  return true;",
    "    for(int i=0;i<list.size();i++){\n        if(list[i]!=element){\n            return false;\n        }\n    }\n    return true;",
    "    for (auto i : list) {\n        if (i != element) {\n            return false;\n        }\n    }\n    return true;",
    "    for (int i = 0; i < list.size(); i++) {\n        if (list[i] != element) {\n            return false;\n        }\n    }\n    return true;",
    "    for(auto i: list) {\n        if(i != element) {\n            return false;\n        }\n    }\n    return true;",
    "    for (auto i: list) {\n        if (i != element) {\n            return false;\n        }\n    }\n    return true;",
    "    for(auto i : list) {\n        if(i != element) {\n            return false;\n        }\n    }\n    return true;",
    "    for (auto i : list) {\n        if (i != element) {\n            return false;\n        }\n    }\n    return true;",
    "    for (auto i : list) {\n        if (i != element) {\n            return false;\n        }\n    }\n    return true;",
    "    for (auto x : list) {\n        if (x != element) {\n            return false;\n        }\n    }\n    return true;",
    "    for (auto i : list) {\n        if (i != element) {\n            return false;\n        }\n    }\n    return true;",
    "    for (auto i : list) {\n        if (i != element) {\n            return false;\n        }\n    }\n    return true;",
    "    for (auto i : list) {\n        if (i != element) {\n            return false;\n        }\n    }\n    return true;",
    "    for (auto i : list) {\n        if (i != element) {\n            return false;\n        }\n    }\n    return true;",
    "    for (auto i : list) {\n        if (i != element) {\n            return false;\n        }\n    }\n    return true;",
    "    for (int i = 0; i < list.size(); i++) {\n        if (list[i] != element) {\n            return false;\n        }\n    }\n    return true;",
    "    for (int i = 0; i < list.size(); i++) {\n        if (list[i] != element) {\n            return false;\n        }\n    }\n    return true;",
    "    for (auto i : list) {\n        if (i != element) {\n            return false;\n        }\n    }\n    return true;",
    "    for (int i = 0; i < list.size(); i++) {\n        if (list[i] != element) {\n            return false;\n        }\n    }\n    return true;",
    "    for (auto i : list) {\n        if (i != element) {\n            return false;\n        }\n    }\n    return true;",
    "    for (auto i : list) {\n        if (i != element) {\n            return false;\n        }\n    }\n    return true;",
    "    for (auto i: list) {\n        if (i != element) {\n            return false;\n        }\n    }\n    return true;",
    "    if (list.empty()) {\n        return true;\n    }\n    if (list.front() == element) {\n        list.pop_front();\n        return check_element(list, element);\n    }\n    return false;",
    "    for (int i = 0; i < list.size(); i++) {\n        if (list[i] != element) {\n            return false;\n        }\n    }\n    return true;",
    "    for (int i = 0; i < list.size(); i++) {\n        if (list[i] != element) {\n            return false;\n        }\n    }\n    return true;",
    "    for (auto i : list) {\n        if (i != element) {\n            return false;\n        }\n    }\n    return true;",
    "    for (std::any x : list) {\n        if (x != element) {\n            return false;\n        }\n    }\n    return true;",
    "    for (auto i : list) {\n        if (i != element) {\n            return false;\n        }\n    }\n    return true;",
    "    for (int i = 0; i < list.size(); i++) {\n        if (list[i] != element) {\n            return false;\n        }\n    }\n    return true;",
    "    for (int i = 0; i < list.size(); i++) {\n        if (list[i] != element) {\n            return false;\n        }\n    }\n    return true;",
    "    for(int i=0;i<list.size();i++){\n        if(list[i]!=element){\n            return false;\n        }\n    }\n    return true;",
    "    for (int i = 0; i < list.size(); i++) {\n        if (list[i] != element) {\n            return false;\n        }\n    }\n    return true;",
    "    for (int i = 0; i < list.size(); i++) {\n        if (list[i] != element) {\n            return false;\n        }\n    }\n    return true;",
    "  if (list.empty()) {\n    return true;\n  }\n  if (list.front() != element) {\n    return false;\n  }\n  return check_element(list.pop_front(), element);",
    "    for (auto i : list) {\n        if (i != element) {\n            return false;\n        }\n    }\n    return true;",
    "    for (int i = 0; i < list.size(); i++) {\n        if (list[i] != element) {\n            return false;\n        }\n    }\n    return true;",
    "    for(int i=0; i<list.size(); i++) {\n        if(list[i] != element) {\n            return false;\n        }\n    }\n    return true;",
    "    for (int i = 0; i < list.size(); i++) {\n        if (list[i] != element) {\n            return false;\n        }\n    }\n    return true;",
    "    for (auto i : list) {\n        if (i != element) {\n            return false;\n        }\n    }\n    return true;",
    "    for(int i=0;i<list.size();i++)\n    {\n        if(list[i]!=element)\n        {\n            return false;\n        }\n    }\n    return true;",
    "    for (auto i : list) {\n        if (i != element) {\n            return false;\n        }\n    }\n    return true;",
    "    for(auto i : list) {\n        if(i != element) {\n            return false;\n        }\n    }\n    return true;",
    "    for (auto i : list) {\n        if (i != element) {\n            return false;\n        }\n    }\n    return true;",
    "    for (int i = 0; i < list.size(); i++) {\n        if (list[i] != element) {\n            return false;\n        }\n    }\n    return true;",
    "    for (int i = 0; i < list.size(); i++) {\n        if (list[i] != element) {\n            return false;\n        }\n    }\n    return true;",
    "    for (int i = 0; i < list.size(); i++) {\n        if (list[i] != element) {\n            return false;\n        }\n    }\n    return true;",
    "    for (std::any item : list) {\n        if (item != element) {\n            return false;\n        }\n    }\n    return true;",
    "    for(auto i: list) {\n        if(i != element) {\n            return false;\n        }\n    }\n    return true;",
    "    for (auto i : list) {\n        if (i != element) {\n            return false;\n        }\n    }\n    return true;",
    "    for (auto i : list) {\n        if (i != element) {\n            return false;\n        }\n    }\n    return true;",
    "    for (int i = 0; i < list.size(); i++) {\n        if (list[i] != element) {\n            return false;\n        }\n    }\n    return true;",
    "    for (auto i : list) {\n        if (i != element) {\n            return false;\n        }\n    }\n    return true;",
    "    for (auto i : list) {\n        if (i != element) {\n            return false;\n        }\n    }\n    return true;",
    "    for(int i=0;i<list.size();i++)\n    {\n        if(list[i]!=element)\n        {\n            return false;\n        }\n    }\n    return true;",
    "    for (auto i : list) {\n        if (i != element) {\n            return false;\n        }\n    }\n    return true;",
    "    for (int i = 0; i < list.size(); i++) {\n        if (list[i] != element) {\n            return false;\n        }\n    }\n    return true;",
    "    for (auto i : list) {\n        if (i != element) {\n            return false;\n        }\n    }\n    return true;",
    "    for(int i=0; i<list.size(); i++) {\n        if(list[i] != element) {\n            return false;\n        }\n    }\n    return true;",
    "    for(int i=0;i<list.size();i++) {\n        if(list[i]!=element) {\n            return false;\n        }\n    }\n    return true;",
    "  for (auto i : list) {\n    if (i != element) {\n      return false;\n    }\n  }\n  return true;",
    "    for (int i = 0; i < list.size(); i++) {\n        if (list[i] != element) {\n            return false;\n        }\n    }\n    return true;",
    "    for (int i = 0; i < list.size(); i++) {\n        if (list[i] != element) {\n            return false;\n        }\n    }\n    return true;",
    "    for (auto i : list) {\n        if (i != element) {\n            return false;\n        }\n    }\n    return true;",
    "    if (list.empty()) {\n        return true;\n    }\n    if (list.front() == element) {\n        return check_element(list.pop_front(), element);\n    }\n    return false;",
    "    for (auto i : list) {\n        if (i != element) {\n            return false;\n        }\n    }\n    return true;",
    "    for (auto i : list) {\n        if (i != element) {\n            return false;\n        }\n    }\n    return true;",
    "    for (auto i : list) {\n        if (i != element) {\n            return false;\n        }\n    }\n    return true;",
    "    for (auto i : list) {\n        if (i != element) {\n            return false;\n        }\n    }\n    return true;",
    "    for (auto i : list) {\n        if (i != element) {\n            return false;\n        }\n    }\n    return true;",
    "    for (int i = 0; i < list.size(); i++) {\n        if (list[i] != element) {\n            return false;\n        }\n    }\n    return true;",
    "    for (auto i : list) {\n        if (i != element) {\n            return false;\n        }\n    }\n    return true;",
    "    for (auto i : list) {\n        if (i != element) {\n            return false;\n        }\n    }\n    return true;",
    "  for (int i = 0; i < list.size(); i++) {\n    if (list[i] != element) {\n      return false;\n    }\n  }\n  return true;",
    "    if (list.type() == typeid(std::vector<int>)) {\n        std::vector<int> l = std::any_cast<std::vector<int>>(list);\n        int e = std::any_cast<int>(element);\n        for (int i = 0; i < l.size(); i++) {\n            if (l[i] != e) {\n                return false;\n            }\n        }\n        return true;\n    }\n    else if (list.type() == typeid(std::vector<double>)) {\n        std::vector<double> l = std::any_cast<std::vector<double>>(list);\n        double e = std::any_cast<double>(element);\n        for (int i = 0; i < l.size(); i++) {\n            if (l[i] != e) {\n                return false;\n            }\n        }\n        return true;\n    }\n    else if (list.type() == typeid(std::vector<std::string>)) {\n        std::vector<std::string> l = std::any_cast<std::vector<std::string>>(list);\n        std::string e = std::any_cast<std::string>(element);\n        for (int i = 0; i < l.size(); i++) {\n            if (l[i] != e) {\n                return false;\n            }\n        }\n        return true;\n    }\n    else if (list.type() == typeid(std::vector<char>)) {\n        std::vector<char> l = std::any_cast<std::vector<char>>(list);\n        char e = std::any_cast<char>(element);\n        for (int i = 0; i < l.size(); i++) {\n            if (l[i] != e) {\n                return false;\n            }\n        }\n        return true;\n    }\n    else if (list.type() == typeid(std::vector<bool>)) {\n        std::vector<bool> l = std::any_cast<std::vector<bool>>(list);\n        bool e = std::any_cast<bool>(element);\n       ",
    "    for (auto i : list) {\n        if (i != element) {\n            return false;\n        }\n    }\n    return true;",
    "    for (auto i : list) {\n        if (i != element) {\n            return false;\n        }\n    }\n    return true;",
    "    for(std::any item : list) {\n        if(item != element) {\n            return false;\n        }\n    }\n    return true;",
    "    for (auto i : list) {\n        if (i != element) {\n            return false;\n        }\n    }\n    return true;",
    "    for (auto i = list.begin(); i != list.end(); i++) {\n        if (*i != element) {\n            return false;\n        }\n    }\n    return true;",
    "    if (list.empty()) {\n        return true;\n    }\n    if (list.front() == element) {\n        return check_element(list.pop_front(), element);\n    }\n    return false;",
    "    for (auto i : list) {\n        if (i != element) {\n            return false;\n        }\n    }\n    return true;",
    "    for (int i = 0; i < list.size(); i++) {\n        if (list[i] != element) {\n            return false;\n        }\n    }\n    return true;",
    "    for (auto i : list) {\n        if (i != element) {\n            return false;\n        }\n    }\n    return true;",
    "    for (auto i = 0; i < list.size(); i++) {\n        if (list[i] != element) {\n            return false;\n        }\n    }\n    return true;",
    "    for (auto i : list) {\n        if (i != element) {\n            return false;\n        }\n    }\n    return true;",
    "    for (int i = 0; i < list.size(); i++) {\n        if (list[i] != element) {\n            return false;\n        }\n    }\n    return true;"
  ]
}
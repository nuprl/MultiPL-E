{
  "name": "mbpp_598_armstrong_number",
  "language": "cpp",
  "prompt": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check whether the given number is armstrong or not.\nbool armstrong_number(long number) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_598_armstrong_number.py",
  "prompt_terminology": "verbatim",
  "tests": "}\nint main() {\n    auto candidate = armstrong_number;\n    assert(candidate((153)) == (true));\n    assert(candidate((259)) == (false));\n    assert(candidate((4458)) == (false));\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    long sum = 0, temp;\n    int remainder, digits = 0;\n    temp = number;\n    while (temp != 0) {\n        digits++;\n        temp = temp/10;\n    }\n    temp = number;\n    while (temp != 0) {\n        remainder = temp%10;\n        sum = sum + pow(remainder, digits);\n        temp = temp/10;\n    }\n    if(number == sum)\n        return true;\n    else\n        return false;",
    "    long temp = number;\n    long sum = 0;\n    while(temp != 0) {\n        int digit = temp % 10;\n        sum += digit * digit * digit;\n        temp /= 10;\n    }\n    return sum == number;",
    "    long sum = 0;\n    long temp = number;\n    while(temp > 0) {\n        sum += pow(temp % 10, 3);\n        temp /= 10;\n    }\n    return sum == number;",
    "    long sum = 0;\n    long temp = number;\n    while(temp != 0) {\n        int digit = temp % 10;\n        sum += digit * digit * digit;\n        temp /= 10;\n    }\n    return sum == number;",
    "    long sum = 0;\n    long temp = number;\n    while(temp > 0) {\n        long digit = temp % 10;\n        sum += digit * digit * digit;\n        temp /= 10;\n    }\n    return sum == number;",
    "    long sum = 0;\n    long temp = number;\n    while(temp > 0) {\n        long digit = temp % 10;\n        sum += digit * digit * digit;\n        temp /= 10;\n    }\n    return sum == number;",
    "    long sum = 0;\n    long temp = number;\n    while (temp != 0) {\n        sum += pow(temp % 10, 3);\n        temp /= 10;\n    }\n    return sum == number;",
    "    long sum = 0;\n    long temp = number;\n    while(temp) {\n        sum += pow(temp % 10, 3);\n        temp /= 10;\n    }\n    return sum == number;",
    "    long sum = 0;\n    long temp = number;\n    while(temp > 0) {\n        int digit = temp % 10;\n        sum += digit * digit * digit;\n        temp /= 10;\n    }\n    return sum == number;",
    "    int sum = 0;\n    int temp = number;\n    while (temp != 0) {\n        int last_digit = temp % 10;\n        sum += last_digit * last_digit * last_digit;\n        temp /= 10;\n    }\n    return sum == number;",
    "    long sum = 0;\n    long temp = number;\n    while(temp > 0) {\n        int digit = temp % 10;\n        sum += digit * digit * digit;\n        temp /= 10;\n    }\n    return sum == number;",
    "  long long sum = 0;\n  long long temp = number;\n  while (temp != 0) {\n    int digit = temp % 10;\n    sum += digit * digit * digit;\n    temp /= 10;\n  }\n  if (sum == number) {\n    return true;\n  }\n  return false;",
    "    long sum = 0;\n    long temp = number;\n    while (temp > 0) {\n        long digit = temp % 10;\n        sum += digit * digit * digit;\n        temp /= 10;\n    }\n    return sum == number;",
    "    int num = number;\n    int sum = 0;\n    while (num != 0) {\n        int digit = num % 10;\n        sum += digit * digit * digit;\n        num /= 10;\n    }\n    return sum == number;",
    "    long sum = 0;\n    long temp = number;\n    while (temp != 0) {\n        int digit = temp % 10;\n        sum += digit * digit * digit;\n        temp /= 10;\n    }\n    return sum == number;",
    "    long sum = 0;\n    long temp = number;\n    while (temp > 0) {\n        int digit = temp % 10;\n        sum += digit * digit * digit;\n        temp /= 10;\n    }\n    return sum == number;",
    "    long temp = number;\n    long sum = 0;\n    while(temp > 0) {\n        int digit = temp % 10;\n        sum += digit * digit * digit;\n        temp /= 10;\n    }\n    return sum == number;",
    "    long original_number = number;\n    long sum = 0;\n    while (number != 0) {\n        int digit = number % 10;\n        sum += digit * digit * digit;\n        number /= 10;\n    }\n    return sum == original_number;",
    "    long sum = 0, temp;\n    int remainder, digits = 0;\n    temp = number;\n    while (temp != 0) {\n        digits++;\n        temp = temp/10;\n    }\n    temp = number;\n    while (temp != 0) {\n        remainder = temp%10;\n        sum = sum + pow(remainder, digits);\n        temp = temp/10;\n    }\n    if(number == sum)\n        return true;\n    else\n        return false;",
    "    int sum = 0;\n    long temp = number;\n    while (temp > 0) {\n        int digit = temp % 10;\n        sum += digit * digit * digit;\n        temp /= 10;\n    }\n    return sum == number;"
  ]
}
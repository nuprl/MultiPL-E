{
  "name": "mbpp_627_find_First_Missing",
  "language": "cpp",
  "prompt": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the smallest missing number from a sorted list of natural numbers.\nlong find_First_Missing(std::vector<long> array) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_627_find_First_Missing.py",
  "prompt_terminology": "verbatim",
  "tests": "}\nint main() {\n    auto candidate = find_First_Missing;\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)2, (long)3}))) == (4));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)2, (long)6, (long)9}))) == (3));\n    assert(candidate((std::vector<long>({(long)2, (long)3, (long)5, (long)8, (long)9}))) == (0));\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    long n = array.size();\n    long low = 0;\n    long high = n-1;\n    long mid = 0;\n    while(low <= high) {\n        mid = (low + high) / 2;\n        if(array[mid] != mid && array[mid-1] == mid-1) {\n            return mid;\n        }\n        else if(array[mid] == mid) {\n            low = mid + 1;\n        }\n        else {\n            high = mid - 1;\n        }\n    }\n    return mid;",
    "    long n = array.size();\n    long low = 0;\n    long high = n-1;\n    while(low <= high) {\n        long mid = low + (high-low)/2;\n        if(array[mid] != mid+1 && array[mid-1] == mid) {\n            return mid+1;\n        }\n        else if(array[mid] != mid+1) {\n            high = mid-1;\n        }\n        else {\n            low = mid+1;\n        }\n    }\n    return -1;",
    "    // Write your code here\n    long n=array.size();\n    for(long i=0;i<n;i++)\n    {\n        if(array[i]!=i)\n        {\n            return i;\n        }\n    }\n    return n;",
    "    // Write your code here\n    long n = array.size();\n    long i = 0;\n    while(i < n) {\n        if(array[i] != i) {\n            return i;\n        }\n        i++;\n    }\n    return i;",
    "    long n = array.size();\n    long low = 0;\n    long high = n-1;\n    long mid = 0;\n    while(low <= high) {\n        mid = (low + high)/2;\n        if(array[mid] == mid) {\n            low = mid + 1;\n        }\n        else {\n            high = mid - 1;\n        }\n    }\n    return low;",
    "    long n = array.size();\n    long low = 0;\n    long high = n-1;\n    while(low <= high) {\n        long mid = (low + high)/2;\n        if(array[mid] != mid+1 && array[mid-1] == mid) {\n            return mid+1;\n        }\n        else if(array[mid] != mid+1) {\n            high = mid-1;\n        }\n        else {\n            low = mid+1;\n        }\n    }\n    return -1;",
    "    long n = array.size();\n    long low = 0;\n    long high = n - 1;\n    while (low <= high) {\n        long mid = low + (high - low) / 2;\n        if (array[mid] != mid && array[mid - 1] == mid - 1) {\n            return mid;\n        }\n        else if (array[mid] == mid) {\n            low = mid + 1;\n        }\n        else {\n            high = mid - 1;\n        }\n    }\n    return n;",
    "    long n = array.size();\n    long low = 0;\n    long high = n-1;\n    while(low <= high) {\n        long mid = low + (high-low)/2;\n        if(array[mid] != mid+1 && array[mid-1] == mid) {\n            return mid+1;\n        }\n        else if(array[mid] != mid+1) {\n            high = mid-1;\n        }\n        else {\n            low = mid+1;\n        }\n    }\n    if(low > high) {\n        return low+1;\n    }",
    "    long n = array.size();\n    long low = 0, high = n - 1;\n    while (low <= high) {\n        long mid = low + (high - low) / 2;\n        if (array[mid] != mid + 1 && array[mid - 1] == mid)\n            return mid + 1;\n        else if (array[mid] != mid + 1)\n            high = mid - 1;\n        else\n            low = mid + 1;\n    }\n    return -1;",
    "    long n = array.size();\n    long low = 0;\n    long high = n-1;\n    while(low <= high) {\n        long mid = low + (high - low)/2;\n        if(array[mid] != mid+1 && array[mid-1] == mid)\n            return mid+1;\n        else if(array[mid] != mid+1)\n            high = mid-1;\n        else\n            low = mid+1;\n    }\n    if(low == n)\n        return n+1;\n    return -1;",
    "    // Write your code here\n    int n = array.size();\n    int low = 0, high = n-1;\n    while(low <= high){\n        int mid = low + (high - low)/2;\n        if(array[mid] != mid+1 && array[mid-1] == mid){\n            return mid+1;\n        }\n        else if(array[mid] != mid+1){\n            high = mid-1;\n        }\n        else{\n            low = mid+1;\n        }\n    }\n    return -1;",
    "    long n = array.size();\n    long low = 0;\n    long high = n-1;\n    while(low<=high){\n        long mid = (low+high)/2;\n        if(array[mid]!=mid+1){\n            if(mid==0 || array[mid-1]==mid){\n                return mid+1;\n            }\n            high = mid-1;\n        }\n        else{\n            low = mid+1;\n        }\n    }\n    return n+1;",
    "    // Write your code here\n    long n=array.size();\n    long low=0;\n    long high=n-1;\n    while(low<=high){\n        long mid=low+(high-low)/2;\n        if(array[mid]!=mid+1 && array[mid-1]==mid){\n            return mid+1;\n        }\n        else if(array[mid]!=mid+1){\n            high=mid-1;\n        }\n        else{\n            low=mid+1;\n        }\n    }\n    return n+1;",
    "    long n = array.size();\n    long low = 0;\n    long high = n - 1;\n    long mid = 0;\n    while (low <= high) {\n        mid = (low + high) / 2;\n        if (array[mid] != mid + 1 && array[mid - 1] == mid) {\n            return mid + 1;\n        }\n        else if (array[mid] != mid + 1) {\n            high = mid - 1;\n        }\n        else {\n            low = mid + 1;\n        }\n    }\n    return -1;",
    "    // Write your code here\n    long n = array.size();\n    long low = 0;\n    long high = n-1;\n    while(low <= high){\n        long mid = low + (high - low)/2;\n        if(array[mid] != mid+1 && array[mid-1] == mid){\n            return mid+1;\n        }\n        else if(array[mid] != mid+1){\n            high = mid-1;\n        }\n        else{\n            low = mid+1;\n        }\n    }\n    return -1;",
    "    // Write your code here\n    int n = array.size();\n    int low = 0, high = n-1;\n    while(low <= high) {\n        int mid = low + (high-low)/2;\n        if(array[mid] != mid+1) {\n            if(mid == 0 || array[mid-1] == mid)\n                return mid+1;\n            high = mid-1;\n        }\n        else\n            low = mid+1;\n    }\n    return n+1;",
    "    long n = array.size();\n    long low = 0, high = n - 1;\n    while (low <= high) {\n        long mid = low + (high - low) / 2;\n        if (array[mid] == mid + 1) {\n            low = mid + 1;\n        } else {\n            high = mid - 1;\n        }\n    }\n    return low + 1;",
    "    long n = array.size();\n    long low = 0, high = n-1;\n    while(low <= high) {\n        long mid = low + (high - low)/2;\n        if(array[mid] != mid) {\n            if(mid == 0 || array[mid-1] == mid-1)\n                return mid;\n            high = mid - 1;\n        }\n        else\n            low = mid + 1;\n    }\n    return n;",
    "    long n = array.size();\n    long l = 0, r = n - 1;\n    while (l <= r) {\n        long mid = l + (r - l) / 2;\n        if (array[mid] != mid + 1 && array[mid - 1] == mid) {\n            return mid + 1;\n        }\n        if (array[mid] != mid + 1) {\n            r = mid - 1;\n        } else {\n            l = mid + 1;\n        }\n    }\n    if (l == n) {\n        return n + 1;\n    }\n    return 1;",
    "    // Write your code here\n    int n = array.size();\n    int i = 0;\n    while(i < n) {\n        if(array[i] == i+1) {\n            i++;\n        }\n        else if(array[i] <= i || array[i] > n || array[i] == array[array[i]-1]) {\n            array[i] = array[n-1];\n            n--;\n        }\n        else {\n            std::swap(array[i], array[array[i]-1]);\n        }\n    }\n    return i+1;",
    "    long n = array.size();\n    long low = 0;\n    long high = n-1;\n    while(low<=high){\n        long mid = low + (high-low)/2;\n        if(array[mid]!=mid+1 && array[mid-1]==mid){\n            return mid+1;\n        }\n        else if(array[mid]!=mid+1){\n            high = mid-1;\n        }\n        else{\n            low = mid+1;\n        }\n    }\n    return -1;",
    "    // Write your code here\n    long n=array.size();\n    long i=0;\n    while(i<n){\n        if(array[i]!=i+1){\n            return i+1;\n        }\n        i++;\n    }\n    return n+1;",
    "    // Write your code here\n    long n = array.size();\n    for(long i = 0; i < n; i++) {\n        if(array[i] != i) {\n            return i;\n        }\n    }\n    return n;",
    "    // Write your code here\n    long n = array.size();\n    long low = 0;\n    long high = n-1;\n    long mid;\n    while(low <= high){\n        mid = (low + high)/2;\n        if(array[mid] == mid + 1){\n            low = mid + 1;\n        }\n        else{\n            high = mid - 1;\n        }\n    }\n    return low + 1;",
    "    // Write your code here\n    long n = array.size();\n    long low = 0;\n    long high = n-1;\n    while(low<=high){\n        long mid = (low+high)/2;\n        if(array[mid]!=mid+1 && array[mid-1]==mid){\n            return mid+1;\n        }\n        else if(array[mid]!=mid+1){\n            high = mid-1;\n        }\n        else{\n            low = mid+1;\n        }\n    }\n    return -1;",
    "    // Write your code here\n    long n = array.size();\n    for(long i=0;i<n;i++){\n        if(array[i]!=i){\n            return i;\n        }\n    }\n    return n;",
    "    long n = array.size();\n    long low = 0, high = n-1;\n    while(low <= high) {\n        long mid = low + (high - low)/2;\n        if(array[mid] != mid+1) {\n            if(mid == 0 || array[mid-1] == mid) {\n                return mid+1;\n            }\n            high = mid-1;\n        } else {\n            low = mid+1;\n        }\n    }\n    return n+1;",
    "    long n = array.size();\n    if(n == 0)\n        return 1;\n    if(array[0] != 1)\n        return 1;\n    for(long i = 0; i < n - 1; i++) {\n        if(array[i + 1] - array[i] > 1)\n            return array[i] + 1;\n    }\n    return array[n - 1] + 1;",
    "    long n = array.size();\n    long low = 0;\n    long high = n - 1;\n    while (low <= high) {\n        long mid = (low + high) / 2;\n        if (array[mid] != mid + 1 && array[mid - 1] == mid) {\n            return mid + 1;\n        }\n        if (array[mid] != mid + 1) {\n            high = mid - 1;\n        }\n        else {\n            low = mid + 1;\n        }\n    }\n    if (low > high) {\n        return low + 1;\n    }",
    "    long n = array.size();\n    long low = 0;\n    long high = n;\n    while(low < high) {\n        long mid = low + (high - low)/2;\n        if(array[mid] == mid) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;",
    "    long n = array.size();\n    long low = 0;\n    long high = n-1;\n    while(low <= high) {\n        long mid = (low + high)/2;\n        if(array[mid] != mid+1 && array[mid-1] == mid) {\n            return mid+1;\n        }\n        else if(array[mid] != mid+1) {\n            high = mid-1;\n        }\n        else {\n            low = mid+1;\n        }\n    }\n    return -1;",
    "    int n = array.size();\n    int low = 0;\n    int high = n-1;\n    while(low <= high) {\n        int mid = low + (high - low)/2;\n        if(array[mid] != mid + 1) {\n            if(mid == 0 || array[mid-1] == mid) {\n                return mid+1;\n            }\n            high = mid - 1;\n        }\n        else {\n            low = mid + 1;\n        }\n    }\n    return n+1;",
    "    int n = array.size();\n    int low = 0;\n    int high = n-1;\n    while(low <= high) {\n        int mid = low + (high - low)/2;\n        if(array[mid] == mid + 1) {\n            low = mid + 1;\n        } else {\n            high = mid - 1;\n        }\n    }\n    return low + 1;",
    "    long n = array.size();\n    long low = 0;\n    long high = n-1;\n    long mid;\n    while(low <= high) {\n        mid = low + (high - low)/2;\n        if(array[mid] != mid+1) {\n            if(mid == 0 || array[mid-1] == mid)\n                return mid+1;\n            high = mid-1;\n        }\n        else\n            low = mid+1;\n    }\n    return n+1;",
    "    // Write your code here\n    long n = array.size();\n    for(long i = 0; i < n; i++) {\n        if(array[i] != i) {\n            return i;\n        }\n    }\n    return n;",
    "    long n = array.size();\n    long low = 0;\n    long high = n-1;\n    while(low <= high) {\n        long mid = low + (high - low)/2;\n        if(array[mid] != mid+1 && array[mid-1] == mid) {\n            return mid+1;\n        }\n        else if(array[mid] != mid+1) {\n            high = mid-1;\n        }\n        else {\n            low = mid+1;\n        }\n    }\n    return n+1;",
    "    // Write your code here\n    long n = array.size();\n    long low = 0, high = n-1;\n    while(low <= high) {\n        long mid = low + (high-low)/2;\n        if(array[mid] != mid+1) {\n            if(mid == 0 || array[mid-1] == mid)\n                return mid+1;\n            high = mid-1;\n        }\n        else\n            low = mid+1;\n    }\n    return -1;",
    "    // Write your code here\n    long n = array.size();\n    long low = 0;\n    long high = n-1;\n    long mid;\n    while(low<=high){\n        mid = (low+high)/2;\n        if(array[mid] == mid+1){\n            low = mid+1;\n        }\n        else if(array[mid] == mid){\n            high = mid-1;\n        }\n        else{\n            return mid+1;\n        }\n    }\n    return low+1;",
    "    long n = array.size();\n    long low = 0;\n    long high = n-1;\n    while(low <= high) {\n        long mid = low + (high - low)/2;\n        if(array[mid] != mid+1 && array[mid-1] == mid) {\n            return mid+1;\n        }\n        else if(array[mid] != mid+1) {\n            high = mid-1;\n        }\n        else {\n            low = mid+1;\n        }\n    }\n    return -1;",
    "    long n = array.size();\n    long low = 0;\n    long high = n - 1;\n    long mid = 0;\n    while (low <= high) {\n        mid = (low + high) / 2;\n        if (array[mid] == mid + 1) {\n            low = mid + 1;\n        } else {\n            high = mid - 1;\n        }\n    }\n    return low + 1;",
    "    long n = array.size();\n    long low = 0;\n    long high = n-1;\n    long mid = 0;\n    while(low <= high) {\n        mid = (low+high)/2;\n        if(array[mid] != mid+1 && array[mid-1] == mid) {\n            return mid+1;\n        }\n        else if(array[mid] != mid+1) {\n            high = mid-1;\n        }\n        else {\n            low = mid+1;\n        }\n    }\n    return mid+1;",
    "    long n = array.size();\n    long low = 0;\n    long high = n-1;\n    long mid;\n    while(low <= high) {\n        mid = low + (high-low)/2;\n        if(array[mid] != mid+1 && array[mid-1] == mid) {\n            return mid+1;\n        }\n        else if(array[mid] != mid+1) {\n            high = mid-1;\n        }\n        else {\n            low = mid+1;\n        }\n    }\n    return -1;",
    "    /*\n    :param array: a sorted list of natural numbers\n    :return: the smallest missing number from the list\n    */\n    int n = array.size();\n    int low = 0;\n    int high = n-1;\n    while(low <= high){\n        int mid = (low+high)/2;\n        if(array[mid] != mid+1){\n            if(mid == 0 || array[mid-1] == mid){\n                return mid+1;\n            }\n            high = mid-1;\n        }\n        else{\n            low = mid+1;\n        }\n    }\n    return n+1;",
    "    int n = array.size();\n    int low = 0;\n    int high = n-1;\n    while(low <= high) {\n        int mid = low + (high-low)/2;\n        if(array[mid] != mid+1) {\n            if(mid == 0 || array[mid-1] == mid)\n                return mid+1;\n            high = mid-1;\n        }\n        else\n            low = mid+1;\n    }\n    return n+1;",
    "    // Write your code here\n    long n = array.size();\n    long low = 0;\n    long high = n-1;\n    long mid;\n    while(low<=high){\n        mid = low + (high-low)/2;\n        if(array[mid] != mid+1 && array[mid-1] == mid){\n            return mid+1;\n        }\n        else if(array[mid] == mid+1){\n            low = mid+1;\n        }\n        else{\n            high = mid-1;\n        }\n    }\n    return mid+1;",
    "    int n = array.size();\n    int low = 0;\n    int high = n-1;\n    while(low <= high) {\n        int mid = low + (high-low)/2;\n        if(array[mid] != mid+1) {\n            if(mid == 0 || array[mid-1] == mid) {\n                return mid+1;\n            }\n            high = mid-1;\n        } else {\n            low = mid+1;\n        }\n    }\n    return n+1;",
    "    long n = array.size();\n    long low = 0;\n    long high = n-1;\n    while(low <= high) {\n        long mid = low + (high - low)/2;\n        if(array[mid] != mid && array[mid-1] == mid-1)\n            return mid;\n        else if(array[mid] == mid)\n            low = mid+1;\n        else\n            high = mid-1;\n    }\n    return -1;",
    "    long n = array.size();\n    long low = 0, high = n - 1;\n    while (low <= high) {\n        long mid = low + (high - low) / 2;\n        if (array[mid] != mid + 1 && array[mid - 1] == mid)\n            return mid + 1;\n        else if (array[mid] != mid + 1)\n            high = mid - 1;\n        else\n            low = mid + 1;\n    }\n    return -1;",
    "    // Write your code here\n    long n = array.size();\n    long low = 0, high = n-1;\n    while(low <= high) {\n        long mid = low + (high - low)/2;\n        if(array[mid] != mid + 1 && array[mid - 1] == mid)\n            return mid + 1;\n        else if(array[mid] != mid + 1)\n            high = mid - 1;\n        else\n            low = mid + 1;\n    }\n    return -1;",
    "    long n = array.size();\n    long low = 0;\n    long high = n - 1;\n    long mid;\n    while(low <= high) {\n        mid = (low + high) / 2;\n        if(array[mid] == mid) {\n            low = mid + 1;\n        } else {\n            high = mid - 1;\n        }\n    }\n    return low;",
    "    // Write your code here\n    long n = array.size();\n    long start = 0;\n    long end = n-1;\n    while(start<=end){\n        long mid = (start+end)/2;\n        if(array[mid]!=mid+1){\n            if(mid==0 || array[mid-1]==mid){\n                return mid+1;\n            }\n            end = mid-1;\n        }\n        else{\n            start = mid+1;\n        }\n    }\n    return n+1;",
    "    // Write your code here\n    int n = array.size();\n    int low = 0, high = n-1;\n    while(low <= high){\n        int mid = (low+high)/2;\n        if(array[mid] == mid+1){\n            low = mid+1;\n        }\n        else{\n            high = mid-1;\n        }\n    }\n    return low+1;",
    "    // Write your code here\n    long n = array.size();\n    long low = 0;\n    long high = n-1;\n    long mid;\n    while(low <= high){\n        mid = (low+high)/2;\n        if(array[mid] == mid+1){\n            low = mid+1;\n        }\n        else{\n            high = mid-1;\n        }\n    }\n    return low+1;",
    "    // Write your code here\n    long n = array.size();\n    long low = 0, high = n-1;\n    while(low <= high){\n        long mid = low + (high-low)/2;\n        if(array[mid] == mid+1){\n            low = mid+1;\n        }else{\n            high = mid-1;\n        }\n    }\n    return low+1;",
    "    // Write your code here\n    long n = array.size();\n    long low = 0;\n    long high = n-1;\n    long mid;\n    while(low <= high) {\n        mid = low + (high-low)/2;\n        if(array[mid] == mid+1) {\n            low = mid+1;\n        }\n        else {\n            high = mid-1;\n        }\n    }\n    return low+1;",
    "    // Write your code here\n    long n = array.size();\n    long i = 0;\n    while(i < n)\n    {\n        if(array[i] != i)\n        {\n            return i;\n        }\n        i++;\n    }\n    return i;",
    "    int n = array.size();\n    int low = 0, high = n-1;\n    while(low <= high) {\n        int mid = low + (high-low)/2;\n        if(array[mid] != mid+1 && array[mid-1] == mid) {\n            return mid+1;\n        }\n        else if(array[mid] == mid+1) {\n            low = mid+1;\n        }\n        else {\n            high = mid-1;\n        }\n    }\n    return -1;",
    "    long n = array.size();\n    long low = 0;\n    long high = n-1;\n    long mid;\n    while(low<=high){\n        mid = (low+high)/2;\n        if(array[mid] == mid+1){\n            low = mid+1;\n        }\n        else{\n            high = mid-1;\n        }\n    }\n    return low+1;",
    "    long n = array.size();\n    if (n == 0) {\n        return 1;\n    }\n    if (n == 1) {\n        if (array[0] == 1) {\n            return 2;\n        }\n        else {\n            return 1;\n        }\n    }\n    long first = 0;\n    long last = n - 1;\n    long mid = (first + last) / 2;\n    while (first < last) {\n        mid = (first + last) / 2;\n        if (array[mid] > mid + 1) {\n            last = mid;\n        }\n        else {\n            first = mid + 1;\n        }\n    }\n    return first + 1;",
    "\t// Write your code here\n\tlong n = array.size();\n\tlong low = 0;\n\tlong high = n - 1;\n\tlong mid = 0;\n\twhile (low <= high) {\n\t\tmid = (low + high) / 2;\n\t\tif (array[mid] == mid + 1) {\n\t\t\tlow = mid + 1;\n\t\t}\n\t\telse {\n\t\t\thigh = mid - 1;\n\t\t}\n\t}\n\treturn low + 1;",
    "    long n = array.size();\n    long low = 0;\n    long high = n-1;\n    while(low <= high) {\n        long mid = low + (high - low)/2;\n        if(array[mid] != mid) {\n            if(mid == 0 || array[mid-1] == mid-1) {\n                return mid;\n            }\n            high = mid - 1;\n        }\n        else {\n            low = mid + 1;\n        }\n    }\n    return n;",
    "    long n = array.size();\n    long low = 0;\n    long high = n-1;\n    while(low <= high) {\n        long mid = low + (high-low)/2;\n        if(array[mid] != mid+1 && array[mid-1] == mid) {\n            return mid+1;\n        }\n        else if(array[mid] != mid+1) {\n            high = mid-1;\n        }\n        else {\n            low = mid+1;\n        }\n    }\n    if(low > high) {\n        return low+1;\n    }",
    "    int n = array.size();\n    int low = 0;\n    int high = n-1;\n    while(low <= high) {\n        int mid = low + (high - low)/2;\n        if(array[mid] != mid + 1 && array[mid - 1] == mid) {\n            return mid + 1;\n        }\n        else if(array[mid] != mid + 1) {\n            high = mid - 1;\n        }\n        else {\n            low = mid + 1;\n        }\n    }\n    return -1;",
    "    // Write your code here\n    long n = array.size();\n    long low = 0, high = n-1;\n    while(low <= high){\n        long mid = low + (high-low)/2;\n        if(array[mid] != mid+1 && array[mid-1] == mid){\n            return mid+1;\n        }\n        else if(array[mid] != mid+1){\n            high = mid-1;\n        }\n        else{\n            low = mid+1;\n        }\n    }\n    return -1;",
    "    // Write your code here\n    long n=array.size();\n    long low=0,high=n-1;\n    while(low<=high)\n    {\n        long mid=low+(high-low)/2;\n        if(array[mid]!=mid+1 && array[mid-1]==mid)\n        {\n            return mid+1;\n        }\n        else if(array[mid]!=mid+1)\n        {\n            high=mid-1;\n        }\n        else\n        {\n            low=mid+1;\n        }\n    }\n    return -1;",
    "    // Write your code here\n    int n = array.size();\n    int i = 0;\n    while(i < n){\n        if(array[i] != i+1){\n            return i+1;\n        }\n        i++;\n    }\n    return -1;",
    "    // Write your code here\n    long n = array.size();\n    long low = 0;\n    long high = n-1;\n    long mid;\n    while(low <= high){\n        mid = low + (high-low)/2;\n        if(array[mid] != mid+1 && array[mid-1] == mid){\n            return mid+1;\n        }\n        else if(array[mid] != mid+1){\n            high = mid-1;\n        }\n        else{\n            low = mid+1;\n        }\n    }\n    return n+1;",
    "    // Write your code here\n    int n = array.size();\n    int low = 0;\n    int high = n-1;\n    int mid = 0;\n    while(low <= high) {\n        mid = low + (high - low)/2;\n        if(array[mid] == mid) {\n            low = mid + 1;\n        }\n        else {\n            high = mid - 1;\n        }\n    }\n    return low;",
    "    // Write your code here\n    long n = array.size();\n    long low = 0;\n    long high = n-1;\n    while(low <= high){\n        long mid = low + (high-low)/2;\n        if(array[mid] != mid+1 && array[mid-1] == mid){\n            return mid+1;\n        }\n        if(array[mid] != mid+1){\n            high = mid-1;\n        }\n        else{\n            low = mid+1;\n        }\n    }\n    return -1;",
    "    // Write your code here\n    long n = array.size();\n    long low = 0;\n    long high = n-1;\n    long mid;\n    while(low<=high){\n        mid = low + (high-low)/2;\n        if(array[mid]!=mid+1 && array[mid-1]==mid){\n            return mid+1;\n        }\n        else if(array[mid]!=mid+1){\n            high = mid-1;\n        }\n        else{\n            low = mid+1;\n        }\n    }\n    return -1;",
    "    int n = array.size();\n    int i = 0;\n    while(i < n) {\n        if(array[i] == i+1) {\n            i++;\n        } else if(array[i] <= i || array[i] > n || array[array[i]-1] == array[i]) {\n            array[i] = array[n-1];\n            n--;\n        } else {\n            std::swap(array[i], array[array[i]-1]);\n        }\n    }\n    return i+1;",
    "    // Write your code here\n    long n = array.size();\n    long low = 0, high = n - 1;\n    long mid;\n    while (low <= high) {\n        mid = low + (high - low) / 2;\n        if (array[mid] != mid + 1 && array[mid - 1] == mid)\n            return mid + 1;\n        else if (array[mid] != mid + 1)\n            high = mid - 1;\n        else\n            low = mid + 1;\n    }\n    if (low > high)\n        return low + 1;",
    "    // Write your code here\n    long n = array.size();\n    long low = 0;\n    long high = n-1;\n    long mid;\n    while(low <= high){\n        mid = (low+high)/2;\n        if(array[mid] != mid+1 && array[mid-1] == mid){\n            return mid+1;\n        }\n        else if(array[mid] != mid+1){\n            high = mid-1;\n        }\n        else{\n            low = mid+1;\n        }\n    }\n    return low+1;",
    "    long n = array.size();\n    long low = 0, high = n - 1;\n    while (low <= high) {\n        long mid = low + (high - low) / 2;\n        if (array[mid] != mid + 1 && array[mid - 1] == mid)\n            return mid + 1;\n        if (array[mid] != mid + 1)\n            high = mid - 1;\n        else\n            low = mid + 1;\n    }\n    return -1;",
    "    // Write your code here\n    long n = array.size();\n    long low = 0, high = n-1;\n    while(low <= high){\n        long mid = low + (high - low)/2;\n        if(array[mid] != mid + 1){\n            if(mid == 0 || array[mid-1] == mid)\n                return mid+1;\n            high = mid - 1;\n        }\n        else\n            low = mid + 1;\n    }\n    return n+1;",
    "    // Write your code here\n    long n = array.size();\n    long low = 0;\n    long high = n-1;\n    long mid;\n    while(low <= high){\n        mid = (low+high)/2;\n        if(array[mid] == mid+1){\n            low = mid+1;\n        }\n        else if(array[mid] > mid+1){\n            high = mid-1;\n        }\n    }\n    return low+1;",
    "    // Write your code here\n    long n = array.size();\n    long low = 0;\n    long high = n-1;\n    while(low<=high){\n        long mid = low + (high-low)/2;\n        if(array[mid]!=mid+1 && array[mid-1]==mid){\n            return mid+1;\n        }\n        else if(array[mid]!=mid+1){\n            high = mid-1;\n        }\n        else{\n            low = mid+1;\n        }\n    }\n    return n+1;",
    "    long n = array.size();\n    long low = 0;\n    long high = n;\n    while(low < high) {\n        long mid = low + (high - low)/2;\n        if(array[mid] == mid) {\n            low = mid + 1;\n        } else {\n            high = mid;\n        }\n    }\n    return low;",
    "    long n = array.size();\n    long low = 0;\n    long high = n-1;\n    while(low <= high) {\n        long mid = low + (high - low)/2;\n        if(array[mid] != mid) {\n            if(mid == 0 || array[mid-1] == mid-1) {\n                return mid;\n            }\n            high = mid - 1;\n        }\n        else {\n            low = mid + 1;\n        }\n    }\n    return n;",
    "    // Write your code here\n    long n = array.size();\n    long low = 0;\n    long high = n-1;\n    long mid;\n    while(low <= high) {\n        mid = low + (high - low)/2;\n        if(array[mid] != mid+1 && array[mid-1] == mid) {\n            return mid+1;\n        }\n        else if(array[mid] != mid+1) {\n            high = mid - 1;\n        }\n        else {\n            low = mid + 1;\n        }\n    }\n    return -1;",
    "    long n = array.size();\n    for(long i = 0; i < n; i++) {\n        if(array[i] != i) {\n            return i;\n        }\n    }\n    return n;",
    "    long n = array.size();\n    long low = 0;\n    long high = n-1;\n    long mid;\n    while(low <= high) {\n        mid = low + (high-low)/2;\n        if(array[mid] != mid && array[mid-1] == mid-1) {\n            return mid;\n        }\n        else if(array[mid] != mid) {\n            high = mid-1;\n        }\n        else {\n            low = mid+1;\n        }\n    }\n    return n;",
    "    // Write your code here\n    int n = array.size();\n    int low = 0;\n    int high = n-1;\n    int mid;\n    while(low <= high){\n        mid = (low+high)/2;\n        if(array[mid] == mid+1){\n            low = mid+1;\n        }\n        else{\n            high = mid-1;\n        }\n    }\n    return low+1;",
    "    // Write your code here\n    int n = array.size();\n    int low = 0;\n    int high = n-1;\n    int mid;\n    while(low <= high){\n        mid = (low + high)/2;\n        if(array[mid] == mid+1){\n            low = mid+1;\n        }\n        else if(array[mid] > mid+1){\n            high = mid-1;\n        }\n    }\n    return low+1;",
    "    long n = array.size();\n    long low = 0;\n    long high = n - 1;\n    while (low <= high) {\n        long mid = low + (high - low) / 2;\n        if (array[mid] != mid + 1 && array[mid - 1] == mid) {\n            return mid + 1;\n        } else if (array[mid] != mid + 1) {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n    if (low == n) {\n        return n + 1;\n    }\n    return 1;",
    "    // Write your code here\n    long n = array.size();\n    long low = 0;\n    long high = n - 1;\n    while (low <= high) {\n        long mid = low + (high - low) / 2;\n        if (array[mid] != mid + 1 && array[mid - 1] == mid) {\n            return mid + 1;\n        } else if (array[mid] != mid + 1) {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n    return -1;",
    "    long n = array.size();\n    long low = 0, high = n - 1;\n    while (low <= high) {\n        long mid = (low + high) / 2;\n        if (array[mid] != mid + 1 && array[mid - 1] == mid)\n            return mid + 1;\n        else if (array[mid] != mid + 1)\n            high = mid - 1;\n        else\n            low = mid + 1;\n    }\n    return -1;",
    "    int i = 0;\n    while (i < array.size()) {\n        if (array[i] != i) {\n            return i;\n        }\n        i++;\n    }\n    return i;",
    "    long n = array.size();\n    long low = 0;\n    long high = n-1;\n    while(low <= high) {\n        long mid = low + (high - low)/2;\n        if(array[mid] != mid+1 && array[mid-1] == mid) {\n            return mid+1;\n        }\n        else if(array[mid] != mid+1) {\n            high = mid-1;\n        }\n        else {\n            low = mid+1;\n        }\n    }\n    return -1;",
    "    // Write your code here\n    long n = array.size();\n    if(array[n-1] != n)\n        return n;\n    if(array[0] != 0)\n        return 0;\n    for(long i = 1; i < n; i++) {\n        if(array[i] - array[i-1] > 1)\n            return array[i-1] + 1;\n    }\n    return -1;",
    "    int n = array.size();\n    int low = 0, high = n - 1;\n    while (low <= high) {\n        int mid = low + (high - low) / 2;\n        if (array[mid] != mid + 1 && array[mid - 1] == mid)\n            return mid + 1;\n        else if (array[mid] != mid + 1)\n            high = mid - 1;\n        else\n            low = mid + 1;\n    }\n    if (low == n)\n        return n + 1;\n    return 1;",
    "    int n = array.size();\n    int low = 0;\n    int high = n-1;\n    while(low <= high) {\n        int mid = (low + high)/2;\n        if(array[mid] != mid+1 && array[mid-1] == mid) {\n            return mid+1;\n        }\n        else if(array[mid] != mid+1) {\n            high = mid-1;\n        }\n        else {\n            low = mid+1;\n        }\n    }\n    return n+1;",
    "    long n = array.size();\n    long low = 0;\n    long high = n-1;\n    while(low <= high) {\n        long mid = low + (high - low)/2;\n        if(array[mid] != mid+1 && array[mid-1] == mid) {\n            return mid+1;\n        }\n        else if(array[mid] != mid+1) {\n            high = mid-1;\n        }\n        else {\n            low = mid+1;\n        }\n    }\n    if(low > high) {\n        return low+1;\n    }",
    "    long n = array.size();\n    long low = 0, high = n-1;\n    long mid = 0;\n    while(low <= high) {\n        mid = (low + high)/2;\n        if(array[mid] != mid+1 && array[mid-1] == mid) {\n            return mid+1;\n        }\n        else if(array[mid] != mid+1) {\n            high = mid-1;\n        }\n        else {\n            low = mid+1;\n        }\n    }\n    if(low > high) {\n        return mid+2;\n    }\n    return -1;",
    "    long n = array.size();\n    long low = 0;\n    long high = n-1;\n    long mid;\n    while(low <= high) {\n        mid = (low + high)/2;\n        if(array[mid] != mid+1 && array[mid-1] == mid) {\n            return mid+1;\n        }\n        else if(array[mid] != mid+1) {\n            high = mid-1;\n        }\n        else {\n            low = mid+1;\n        }\n    }\n    return -1;",
    "    long n = array.size();\n    long low = 0;\n    long high = n-1;\n    while(low <= high) {\n        long mid = low + (high - low)/2;\n        if(array[mid] != mid) {\n            if(mid == 0 || array[mid-1] == mid-1) {\n                return mid;\n            }\n            high = mid - 1;\n        }\n        else {\n            low = mid + 1;\n        }\n    }\n    return n;",
    "    long n = array.size();\n    long low = 0;\n    long high = n-1;\n    while(low <= high) {\n        long mid = low + (high - low)/2;\n        if(array[mid] != mid) {\n            if(mid == 0 || array[mid-1] == mid-1) {\n                return mid;\n            }\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n    return n;",
    "    // Write your code here\n    long n = array.size();\n    long low = 0;\n    long high = n-1;\n    long mid;\n    while(low <= high){\n        mid = low + (high-low)/2;\n        if(array[mid] == mid+1){\n            low = mid+1;\n        }\n        else{\n            high = mid-1;\n        }\n    }\n    return low+1;",
    "    long n = array.size();\n    long low = 0, high = n-1;\n    while(low <= high) {\n        long mid = low + (high - low)/2;\n        if(array[mid] != mid) {\n            if(mid == 0 || array[mid-1] == mid-1) {\n                return mid;\n            }\n            high = mid - 1;\n        }\n        else {\n            low = mid + 1;\n        }\n    }\n    return n;",
    "    int n = array.size();\n    if (n == 0)\n        return 1;\n    if (array[0] != 1)\n        return 1;\n    if (array[n - 1] == n)\n        return n + 1;\n    int l = 0, h = n - 1;\n    while (l <= h) {\n        int mid = (l + h) / 2;\n        if (array[mid] == mid + 1) {\n            if (array[mid + 1] != mid + 2)\n                return mid + 2;\n            else\n                l = mid + 1;\n        } else {\n            if (array[mid - 1] != mid)\n                return mid;\n            else\n                h = mid - 1;\n        }\n    }\n    return -1;",
    "    // Write your code here\n    int n = array.size();\n    int i = 0;\n    while(i < n){\n        if(array[i] != i){\n            return i;\n        }\n        i++;\n    }\n    return i;",
    "    // Write your code here\n    long n = array.size();\n    long low = 0;\n    long high = n-1;\n    long mid;\n    while(low <= high){\n        mid = (low + high)/2;\n        if(array[mid] == mid+1){\n            low = mid + 1;\n        }\n        else{\n            high = mid - 1;\n        }\n    }\n    return low+1;",
    "    // Write your code here\n    int n = array.size();\n    int i = 0;\n    while(i < n) {\n        if(array[i] != i+1) {\n            return i+1;\n        }\n        i++;\n    }\n    return i+1;",
    "    // Write your code here\n    long n = array.size();\n    long low = 0;\n    long high = n-1;\n    while(low <= high) {\n        long mid = (low + high)/2;\n        if(array[mid] != mid+1 && array[mid-1] == mid) {\n            return mid+1;\n        }\n        else if(array[mid] != mid+1) {\n            high = mid-1;\n        }\n        else {\n            low = mid+1;\n        }\n    }\n    return n+1;",
    "    int n = array.size();\n    int low = 0;\n    int high = n - 1;\n    while (low <= high) {\n        int mid = low + (high - low) / 2;\n        if (array[mid] != mid + 1) {\n            if (mid == 0 || array[mid - 1] == mid) {\n                return mid + 1;\n            }\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n    return -1;",
    "    long n = array.size();\n    long low = 0;\n    long high = n-1;\n    while(low <= high) {\n        long mid = low + (high - low)/2;\n        if(array[mid] != mid+1 && array[mid-1] == mid) {\n            return mid+1;\n        }\n        else if(array[mid] != mid+1) {\n            high = mid-1;\n        }\n        else {\n            low = mid+1;\n        }\n    }\n    return -1;",
    "    int size = array.size();\n    int low = 0, high = size - 1;\n    while (low <= high) {\n        int mid = (low + high) / 2;\n        if (array[mid] != mid + 1 && array[mid - 1] == mid)\n            return mid + 1;\n        else if (array[mid] != mid + 1)\n            high = mid - 1;\n        else\n            low = mid + 1;\n    }\n    return -1;",
    "    // Write your code here\n    long n = array.size();\n    long low = 0;\n    long high = n-1;\n    while(low <= high) {\n        long mid = (low + high) / 2;\n        if(array[mid] != mid+1 && array[mid-1] == mid) {\n            return mid+1;\n        }\n        else if(array[mid] != mid+1) {\n            high = mid-1;\n        }\n        else {\n            low = mid+1;\n        }\n    }\n    return -1;",
    "    long n = array.size();\n    long low = 0;\n    long high = n-1;\n    while(low <= high) {\n        long mid = (low + high) / 2;\n        if(array[mid] != mid + 1 && array[mid-1] == mid) {\n            return mid+1;\n        }\n        else if(array[mid] != mid + 1) {\n            high = mid - 1;\n        }\n        else {\n            low = mid + 1;\n        }\n    }\n    return -1;",
    "    long n = array.size();\n    for(long i = 0; i < n; i++) {\n        if(array[i] != i) {\n            return i;\n        }\n    }\n    return n;",
    "    // Write your code here\n    long n = array.size();\n    long low = 0;\n    long high = n-1;\n    long mid;\n    while(low <= high) {\n        mid = (low + high) / 2;\n        if(array[mid] != mid + 1 && array[mid - 1] == mid) {\n            return mid + 1;\n        }\n        else if(array[mid] != mid + 1) {\n            high = mid - 1;\n        }\n        else {\n            low = mid + 1;\n        }\n    }\n    return -1;",
    "    long n = array.size();\n    long low = 0;\n    long high = n-1;\n    while (low <= high) {\n        long mid = low + (high - low)/2;\n        if (array[mid] != mid+1 && array[mid-1] == mid) {\n            return mid+1;\n        }\n        if (array[mid] != mid+1) {\n            high = mid-1;\n        }\n        else {\n            low = mid+1;\n        }\n    }\n    return n+1;",
    "    // Write your code here\n    long n = array.size();\n    long low = 0, high = n-1;\n    while(low <= high){\n        long mid = low + (high - low)/2;\n        if(array[mid] != mid+1 && array[mid-1] == mid){\n            return mid+1;\n        }\n        else if(array[mid] != mid+1){\n            high = mid-1;\n        }\n        else{\n            low = mid+1;\n        }\n    }\n    return n+1;",
    "    long n = array.size();\n    long low = 0;\n    long high = n - 1;\n    while (low <= high) {\n        long mid = low + (high - low) / 2;\n        if (array[mid] != mid + 1 && array[mid - 1] == mid) {\n            return mid + 1;\n        } else if (array[mid] != mid + 1) {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n    return -1;",
    "    // Write your code here\n    int n = array.size();\n    int low = 0;\n    int high = n-1;\n    int mid;\n    while(low<=high){\n        mid = (low+high)/2;\n        if(array[mid] == mid+1){\n            low = mid+1;\n        }\n        else{\n            high = mid-1;\n        }\n    }\n    return low+1;",
    "    // Write your code here\n    int n = array.size();\n    int low = 0;\n    int high = n-1;\n    int mid;\n    while(low <= high){\n        mid = low + (high-low)/2;\n        if(array[mid] == mid+1){\n            low = mid+1;\n        }\n        else{\n            high = mid-1;\n        }\n    }\n    return low+1;",
    "    int n = array.size();\n    int low = 0;\n    int high = n-1;\n    int mid;\n    while(low <= high) {\n        mid = (low + high)/2;\n        if(array[mid] == mid+1) {\n            low = mid+1;\n        }\n        else {\n            high = mid-1;\n        }\n    }\n    return low+1;",
    "    // Write your code here\n    long n = array.size();\n    long i = 0;\n    while(i < n) {\n        if(array[i] != i) {\n            return i;\n        }\n        i++;\n    }\n    return i;",
    "    // Write your code here\n    int n = array.size();\n    int low = 0;\n    int high = n-1;\n    while(low <= high){\n        int mid = low + (high-low)/2;\n        if(array[mid] != mid+1 && array[mid-1] == mid){\n            return mid+1;\n        }\n        else if(array[mid] != mid+1){\n            high = mid-1;\n        }\n        else{\n            low = mid+1;\n        }\n    }\n    return -1;",
    "    long n = array.size();\n    long low = 0, high = n-1;\n    long mid;\n    while(low <= high) {\n        mid = (low + high)/2;\n        if(array[mid] == mid) {\n            low = mid + 1;\n        }\n        else {\n            high = mid - 1;\n        }\n    }\n    return low;",
    "    // Write your code here\n    long n=array.size();\n    long low=0;\n    long high=n-1;\n    while(low<=high){\n        long mid=low+(high-low)/2;\n        if(array[mid]!=mid+1 && array[mid-1]==mid){\n            return mid+1;\n        }\n        else if(array[mid]!=mid+1){\n            high=mid-1;\n        }\n        else{\n            low=mid+1;\n        }\n    }\n    return -1;",
    "    // Write your code here\n    int n = array.size();\n    int low = 0, high = n-1;\n    while(low <= high){\n        int mid = (low+high)/2;\n        if(array[mid] == mid+1){\n            low = mid+1;\n        }\n        else{\n            high = mid-1;\n        }\n    }\n    return low+1;",
    "    long n = array.size();\n    long low = 0, high = n - 1;\n    while (low <= high) {\n        long mid = low + (high - low) / 2;\n        if (array[mid] != mid + 1 && array[mid - 1] == mid)\n            return mid + 1;\n        else if (array[mid] != mid + 1)\n            high = mid - 1;\n        else\n            low = mid + 1;\n    }\n    return -1;",
    "    // Write your code here\n    long n = array.size();\n    long low = 0, high = n-1;\n    while(low<=high){\n        long mid = low + (high-low)/2;\n        if(array[mid] != mid+1 && array[mid-1] == mid){\n            return mid+1;\n        }\n        else if(array[mid] != mid+1){\n            high = mid-1;\n        }\n        else{\n            low = mid+1;\n        }\n    }\n    return -1;",
    "    long n = array.size();\n    long low = 0;\n    long high = n-1;\n    while(low <= high) {\n        long mid = low + (high - low)/2;\n        if(array[mid] != mid+1 && array[mid-1] == mid) {\n            return mid+1;\n        }\n        else if(array[mid] != mid+1) {\n            high = mid-1;\n        }\n        else {\n            low = mid+1;\n        }\n    }\n    if(low > high) {\n        return low+1;\n    }",
    "    // Write your code here\n    long n = array.size();\n    long low = 0;\n    long high = n-1;\n    long mid;\n    while(low <= high) {\n        mid = low + (high-low)/2;\n        if(array[mid] != mid+1 && array[mid-1] == mid) {\n            return mid+1;\n        }\n        else if(array[mid] != mid+1) {\n            high = mid-1;\n        }\n        else {\n            low = mid+1;\n        }\n    }\n    return -1;",
    "    long n = array.size();\n    long low = 0;\n    long high = n-1;\n    long mid;\n    while(low <= high) {\n        mid = low + (high - low)/2;\n        if(array[mid] != mid+1 && array[mid-1] == mid) {\n            return mid+1;\n        }\n        else if(array[mid] != mid+1) {\n            high = mid-1;\n        }\n        else {\n            low = mid+1;\n        }\n    }\n    return -1;",
    "    // Write your code here\n    int n = array.size();\n    int low = 0;\n    int high = n-1;\n    while(low <= high){\n        int mid = low + (high-low)/2;\n        if(array[mid] != mid+1){\n            if(mid == 0 || array[mid-1] == mid){\n                return mid+1;\n            }\n            high = mid-1;\n        }\n        else{\n            low = mid+1;\n        }\n    }\n    return n+1;",
    "    long n = array.size();\n    long low = 0;\n    long high = n-1;\n    while(low <= high) {\n        long mid = low + (high-low)/2;\n        if(array[mid] != mid) {\n            if(mid == 0 || array[mid-1] == mid-1) {\n                return mid;\n            }\n            high = mid - 1;\n        }\n        else {\n            low = mid + 1;\n        }\n    }\n    return n;",
    "    int n = array.size();\n    int low = 0;\n    int high = n-1;\n    while(low <= high) {\n        int mid = low + (high - low)/2;\n        if(array[mid] != mid+1 && array[mid-1] == mid) {\n            return mid+1;\n        }\n        else if(array[mid] != mid+1) {\n            high = mid-1;\n        }\n        else {\n            low = mid+1;\n        }\n    }\n    return n+1;",
    "    long n = array.size();\n    long low = 0;\n    long high = n-1;\n    while(low <= high) {\n        long mid = low + (high-low)/2;\n        if(array[mid] != mid) {\n            if(mid == 0 || array[mid-1] == mid-1) {\n                return mid;\n            }\n            high = mid-1;\n        }\n        else {\n            low = mid+1;\n        }\n    }\n    return n;",
    "    // Write your code here\n    int n = array.size();\n    int low = 0;\n    int high = n-1;\n    while(low <= high){\n        int mid = low + (high-low)/2;\n        if(array[mid] != mid+1){\n            if(mid == 0 || array[mid-1] == mid){\n                return mid+1;\n            }\n            high = mid-1;\n        }\n        else{\n            low = mid+1;\n        }\n    }\n    return n+1;",
    "    // Write your code here\n    int n = array.size();\n    int low = 0;\n    int high = n-1;\n    int mid;\n    while(low <= high){\n        mid = (low + high)/2;\n        if(array[mid] == mid+1){\n            low = mid + 1;\n        }\n        else{\n            high = mid - 1;\n        }\n    }\n    return low + 1;",
    "    long n = array.size();\n    long low = 0;\n    long high = n-1;\n    long mid = 0;\n    while(low <= high) {\n        mid = (low + high)/2;\n        if(array[mid] != mid+1 && array[mid-1] == mid) {\n            return mid+1;\n        }\n        else if(array[mid] != mid+1) {\n            high = mid-1;\n        }\n        else {\n            low = mid+1;\n        }\n    }\n    if(low > high) {\n        return mid+2;\n    }",
    "    long n = array.size();\n    long low = 0;\n    long high = n - 1;\n    while (low <= high) {\n        long mid = (low + high) / 2;\n        if (array[mid] != mid + 1 && array[mid - 1] == mid) {\n            return mid + 1;\n        }\n        else if (array[mid] != mid + 1) {\n            high = mid - 1;\n        }\n        else {\n            low = mid + 1;\n        }\n    }\n    return -1;",
    "    // Write your code here\n    long n = array.size();\n    long low = 0;\n    long high = n-1;\n    long mid = 0;\n    while(low <= high) {\n        mid = low + (high - low)/2;\n        if(array[mid] == mid+1) {\n            low = mid + 1;\n        }\n        else {\n            high = mid - 1;\n        }\n    }\n    return low+1;",
    "    long n = array.size();\n    long low = 0, high = n - 1;\n    while (low <= high) {\n        long mid = low + (high - low) / 2;\n        if (array[mid] != mid + 1 && array[mid - 1] == mid)\n            return mid + 1;\n        if (array[mid] != mid + 1)\n            high = mid - 1;\n        else\n            low = mid + 1;\n    }\n    return n + 1;",
    "    long n = array.size();\n    long low = 0;\n    long high = n-1;\n    long mid;\n    while(low <= high) {\n        mid = (low + high) / 2;\n        if(array[mid] != mid+1 && array[mid-1] == mid) {\n            return mid+1;\n        }\n        else if(array[mid] != mid+1) {\n            high = mid-1;\n        }\n        else {\n            low = mid+1;\n        }\n    }\n    return -1;",
    "    // Write your code here\n    int n = array.size();\n    int low = 0, high = n-1;\n    while(low <= high) {\n        int mid = low + (high - low)/2;\n        if(array[mid] != mid+1) {\n            if(mid == 0 || array[mid-1] == mid)\n                return mid+1;\n            high = mid-1;\n        }\n        else\n            low = mid+1;\n    }\n    return n+1;",
    "    // Write your code here\n    long n = array.size();\n    long low = 0;\n    long high = n-1;\n    while(low <= high){\n        long mid = low + (high - low)/2;\n        if(array[mid] != mid+1 && array[mid-1] == mid){\n            return mid+1;\n        }\n        else if(array[mid] != mid+1){\n            high = mid-1;\n        }\n        else{\n            low = mid+1;\n        }\n    }\n    return n+1;",
    "    // Write your code here\n    long n = array.size();\n    long low = 0;\n    long high = n-1;\n    long mid;\n    while(low <= high){\n        mid = (low + high)/2;\n        if(array[mid] == mid+1){\n            low = mid + 1;\n        }\n        else{\n            high = mid - 1;\n        }\n    }\n    return low+1;",
    "    long n = array.size();\n    long low = 0;\n    long high = n-1;\n    long mid = 0;\n    while(low <= high) {\n        mid = (low + high)/2;\n        if(array[mid] != mid+1 && array[mid-1] == mid) {\n            return mid+1;\n        }\n        else if(array[mid] != mid+1) {\n            high = mid-1;\n        }\n        else {\n            low = mid+1;\n        }\n    }\n    return mid+1;",
    "    // Write your code here\n    long n = array.size();\n    long low = 0;\n    long high = n-1;\n    while(low <= high){\n        long mid = low + (high - low)/2;\n        if(array[mid] != mid+1 && array[mid-1] == mid){\n            return mid+1;\n        }\n        else if(array[mid] != mid+1){\n            high = mid-1;\n        }\n        else{\n            low = mid+1;\n        }\n    }\n    return n+1;",
    "    long n = array.size();\n    long low = 0;\n    long high = n-1;\n    while(low<=high){\n        long mid = (low+high)/2;\n        if(array[mid]!=mid+1){\n            if(mid==0 || array[mid-1]==mid){\n                return mid+1;\n            }\n            high = mid-1;\n        }\n        else{\n            low = mid+1;\n        }\n    }\n    return -1;",
    "    long n = array.size();\n    long low = 0;\n    long high = n-1;\n    long mid;\n    while(low <= high) {\n        mid = (low + high)/2;\n        if(array[mid] == mid+1) {\n            low = mid+1;\n        }\n        else {\n            high = mid-1;\n        }\n    }\n    return low+1;",
    "    long n = array.size();\n    long low = 0, high = n - 1;\n    while (low <= high) {\n        long mid = (low + high) / 2;\n        if (array[mid] == mid + 1) {\n            low = mid + 1;\n        } else {\n            high = mid - 1;\n        }\n    }\n    return low + 1;",
    "    long n = array.size();\n    long low = 0, high = n - 1;\n    long mid;\n    while (low <= high) {\n        mid = (low + high) / 2;\n        if (array[mid] == mid + 1) {\n            low = mid + 1;\n        }\n        else {\n            high = mid - 1;\n        }\n    }\n    return low + 1;",
    "    long n = array.size();\n    if(n == 0)\n        return 1;\n    if(n == 1)\n        return array[0] == 1 ? 2 : 1;\n    long i = 0;\n    while(i < n) {\n        if(array[i] != i + 1)\n            return i + 1;\n        i++;\n    }\n    return i + 1;",
    "    long n = array.size();\n    long low = 0, high = n - 1;\n    while (low <= high) {\n        long mid = low + (high - low) / 2;\n        if (array[mid] != mid + 1 && array[mid - 1] == mid)\n            return mid + 1;\n        else if (array[mid] != mid + 1)\n            high = mid - 1;\n        else\n            low = mid + 1;\n    }\n    return -1;",
    "    // Write your code here\n    long n=array.size();\n    long low=0,high=n-1;\n    while(low<=high){\n        long mid=low+(high-low)/2;\n        if(array[mid]!=mid+1 && array[mid-1]==mid){\n            return mid+1;\n        }\n        else if(array[mid]!=mid+1){\n            high=mid-1;\n        }\n        else{\n            low=mid+1;\n        }\n    }\n    return -1;",
    "    long n = array.size();\n    long low = 0;\n    long high = n-1;\n    while(low <= high) {\n        long mid = low + (high - low)/2;\n        if(array[mid] != mid + 1 && array[mid-1] == mid) {\n            return mid+1;\n        }\n        else if(array[mid] != mid + 1) {\n            high = mid - 1;\n        }\n        else {\n            low = mid + 1;\n        }\n    }\n    return -1;",
    "    long n = array.size();\n    long low = 0;\n    long high = n-1;\n    while(low <= high) {\n        long mid = low + (high - low)/2;\n        if(array[mid] != mid+1 && array[mid-1] == mid) {\n            return mid+1;\n        } else if(array[mid] != mid+1) {\n            high = mid-1;\n        } else {\n            low = mid+1;\n        }\n    }\n    if(low == n) {\n        return n+1;\n    }\n    return 1;",
    "    int n = array.size();\n    int low = 0, high = n - 1;\n    while (low <= high) {\n        int mid = low + (high - low) / 2;\n        if (array[mid] != mid + 1 && array[mid - 1] == mid)\n            return mid + 1;\n        else if (array[mid] != mid + 1)\n            high = mid - 1;\n        else\n            low = mid + 1;\n    }\n    return -1;",
    "    // Write your code here\n    int n = array.size();\n    int low = 0;\n    int high = n-1;\n    int mid;\n    while(low <= high)\n    {\n        mid = low + (high-low)/2;\n        if(array[mid] == mid+1)\n            low = mid+1;\n        else\n            high = mid-1;\n    }\n    return low+1;",
    "    int n = array.size();\n    int low = 0;\n    int high = n-1;\n    int mid;\n    while(low <= high) {\n        mid = low + (high - low)/2;\n        if(array[mid] != mid+1 && array[mid-1] == mid) {\n            return mid+1;\n        }\n        else if(array[mid] != mid+1) {\n            high = mid-1;\n        }\n        else {\n            low = mid+1;\n        }\n    }\n    return -1;",
    "    long n = array.size();\n    long low = 0;\n    long high = n-1;\n    while(low <= high) {\n        long mid = low + (high-low)/2;\n        if(array[mid] != mid+1 && array[mid-1] == mid) {\n            return mid+1;\n        }\n        else if(array[mid] != mid+1) {\n            high = mid-1;\n        }\n        else {\n            low = mid+1;\n        }\n    }\n    return n+1;",
    "    long n = array.size();\n    long low = 0;\n    long high = n-1;\n    long mid = 0;\n    while(low <= high) {\n        mid = (low + high)/2;\n        if(array[mid] == mid) {\n            low = mid + 1;\n        }\n        else {\n            high = mid - 1;\n        }\n    }\n    return low;",
    "    // Write your code here\n    long n = array.size();\n    long i = 0;\n    while(i < n) {\n        if(array[i] != i) {\n            return i;\n        }\n        i++;\n    }\n    return i;",
    "    // Write your code here\n    int n = array.size();\n    int i;\n    for(i=0;i<n;i++){\n        if(array[i]!=i+1){\n            return i+1;\n        }\n    }\n    return i+1;",
    "    long n = array.size();\n    long l = 0;\n    long r = n - 1;\n    while (l <= r) {\n        long mid = l + (r - l) / 2;\n        if (array[mid] == mid + 1) {\n            l = mid + 1;\n        } else {\n            r = mid - 1;\n        }\n    }\n    return l + 1;",
    "    long n = array.size();\n    long low = 0;\n    long high = n-1;\n    while(low <= high) {\n        long mid = low + (high-low)/2;\n        if(array[mid] != mid+1 && array[mid-1] == mid) {\n            return mid+1;\n        }\n        else if(array[mid] != mid+1) {\n            high = mid-1;\n        }\n        else {\n            low = mid+1;\n        }\n    }\n    if(low > high) {\n        return low+1;\n    }",
    "    long n = array.size();\n    long low = 0, high = n-1;\n    while(low <= high) {\n        long mid = (low + high)/2;\n        if(array[mid] != mid + 1 && array[mid-1] == mid) {\n            return mid+1;\n        }\n        else if(array[mid] != mid + 1) {\n            high = mid - 1;\n        }\n        else {\n            low = mid + 1;\n        }\n    }\n    return -1;",
    "    long n = array.size();\n    long low = 0;\n    long high = n-1;\n    long mid = 0;\n    while(low <= high) {\n        mid = low + (high - low)/2;\n        if(array[mid] != mid+1 && array[mid-1] == mid) {\n            return mid+1;\n        }\n        else if(array[mid] != mid+1) {\n            high = mid-1;\n        }\n        else {\n            low = mid+1;\n        }\n    }\n    if(low > high) {\n        return mid+2;\n    }",
    "    // Write your code here\n    long n = array.size();\n    long low = 0;\n    long high = n-1;\n    long mid;\n    while(low<=high){\n        mid = (low+high)/2;\n        if(array[mid]==mid+1){\n            low = mid+1;\n        }\n        else{\n            high = mid-1;\n        }\n    }\n    return low+1;",
    "    long n = array.size();\n    long low = 0, high = n-1;\n    while(low <= high) {\n        long mid = (low + high)/2;\n        if(array[mid] != mid+1) {\n            if(mid == 0 || array[mid-1] == mid) {\n                return mid+1;\n            }\n            high = mid - 1;\n        }\n        else {\n            low = mid + 1;\n        }\n    }\n    return n+1;",
    "    int n = array.size();\n    int low = 0;\n    int high = n-1;\n    int mid;\n    while(low <= high) {\n        mid = (low+high)/2;\n        if(array[mid] == mid+1) {\n            low = mid+1;\n        }\n        else {\n            high = mid-1;\n        }\n    }\n    return low+1;",
    "    // Write your code here\n    long n = array.size();\n    long low = 0;\n    long high = n-1;\n    while(low <= high)\n    {\n        long mid = low + (high - low)/2;\n        if(array[mid] != mid + 1 && array[mid-1] == mid)\n        {\n            return mid+1;\n        }\n        else if(array[mid] != mid + 1)\n        {\n            high = mid - 1;\n        }\n        else\n        {\n            low = mid + 1;\n        }\n    }\n    return n+1;",
    "    // Write your code here\n    long n = array.size();\n    long low = 0;\n    long high = n-1;\n    long mid;\n    while(low<=high){\n        mid = (low+high)/2;\n        if(array[mid] == mid+1){\n            low = mid+1;\n        }\n        else{\n            high = mid-1;\n        }\n    }\n    return low+1;",
    "    long n = array.size();\n    long low = 0, high = n - 1;\n    while (low <= high) {\n        long mid = (low + high) / 2;\n        if (array[mid] != mid + 1 && array[mid - 1] == mid)\n            return mid + 1;\n        else if (array[mid] != mid + 1)\n            high = mid - 1;\n        else\n            low = mid + 1;\n    }\n    return -1;",
    "    long n = array.size();\n    long low = 0;\n    long high = n-1;\n    long mid;\n    while (low <= high) {\n        mid = (low + high)/2;\n        if (array[mid] != mid+1 && array[mid-1] == mid) {\n            return mid+1;\n        }\n        else if (array[mid] != mid+1) {\n            high = mid-1;\n        }\n        else {\n            low = mid+1;\n        }\n    }\n    return -1;",
    "    // Write your code here\n    long n = array.size();\n    long low = 0;\n    long high = n-1;\n    long mid;\n    while(low <= high) {\n        mid = low + (high-low)/2;\n        if(array[mid] == mid+1) {\n            low = mid+1;\n        }\n        else {\n            high = mid-1;\n        }\n    }\n    return low+1;",
    "    long n = array.size();\n    long low = 0;\n    long high = n-1;\n    long mid = 0;\n    while(low <= high) {\n        mid = (low + high)/2;\n        if(array[mid] == mid) {\n            low = mid + 1;\n        }\n        else {\n            high = mid - 1;\n        }\n    }\n    return low;",
    "    long n = array.size();\n    long low = 0;\n    long high = n-1;\n    while(low <= high) {\n        long mid = low + (high - low)/2;\n        if(array[mid] != mid+1 && array[mid-1] == mid)\n            return mid+1;\n        else if(array[mid] != mid+1)\n            high = mid - 1;\n        else\n            low = mid + 1;\n    }\n    return -1;",
    "    int n = array.size();\n    int low = 0;\n    int high = n - 1;\n    int mid;\n    while (low <= high) {\n        mid = (low + high) / 2;\n        if (array[mid] == mid + 1) {\n            low = mid + 1;\n        } else {\n            high = mid - 1;\n        }\n    }\n    return low + 1;",
    "    long n = array.size();\n    long low = 0;\n    long high = n - 1;\n    while (low <= high) {\n        long mid = low + (high - low) / 2;\n        if (array[mid] != mid + 1 && array[mid - 1] == mid) {\n            return mid + 1;\n        } else if (array[mid] != mid + 1) {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n    return n + 1;",
    "    int n = array.size();\n    int low = 0, high = n-1;\n    while(low <= high) {\n        int mid = low + (high-low)/2;\n        if(array[mid] != mid+1) {\n            if(mid == 0 || array[mid-1] == mid)\n                return mid+1;\n            high = mid-1;\n        }\n        else\n            low = mid+1;\n    }\n    return n+1;",
    "    // Write your code here\n    int n = array.size();\n    int low = 0;\n    int high = n-1;\n    int mid;\n    while(low <= high)\n    {\n        mid = low + (high-low)/2;\n        if(array[mid] == mid+1)\n        {\n            low = mid+1;\n        }\n        else\n        {\n            high = mid-1;\n        }\n    }\n    return low+1;",
    "    // Write your code here\n    int n = array.size();\n    int i = 0;\n    while(i < n) {\n        if(array[i] != i) {\n            return i;\n        }\n        i++;\n    }\n    return i;",
    "    // Write your code here\n    long n = array.size();\n    long low = 0;\n    long high = n-1;\n    long mid = 0;\n    while(low <= high)\n    {\n        mid = (low + high)/2;\n        if(array[mid] == mid+1)\n            low = mid+1;\n        else\n            high = mid-1;\n    }\n    return low+1;",
    "    // Write your code here\n    int n = array.size();\n    int i;\n    for(i=0;i<n;i++){\n        if(array[i]!=i+1){\n            return i+1;\n        }\n    }\n    return i+1;",
    "    // Write your code here\n    long n = array.size();\n    long low = 0, high = n-1;\n    while(low <= high){\n        long mid = low + (high-low)/2;\n        if(array[mid] != mid+1 && array[mid-1] == mid){\n            return mid+1;\n        }\n        else if(array[mid] != mid+1){\n            high = mid-1;\n        }\n        else{\n            low = mid+1;\n        }\n    }\n    return -1;",
    "    // Write your code here\n    long n=array.size();\n    long low=0;\n    long high=n-1;\n    while(low<=high)\n    {\n        long mid=low+(high-low)/2;\n        if(array[mid]!=mid+1 && array[mid-1]==mid)\n        {\n            return mid+1;\n        }\n        else if(array[mid]!=mid+1)\n        {\n            high=mid-1;\n        }\n        else\n        {\n            low=mid+1;\n        }\n    }\n    return -1;",
    "    long n = array.size();\n    long low = 0;\n    long high = n - 1;\n    long mid = 0;\n    while (low <= high) {\n        mid = (low + high) / 2;\n        if (array[mid] != mid + 1 && array[mid - 1] == mid) {\n            return mid + 1;\n        }\n        else if (array[mid] != mid + 1) {\n            high = mid - 1;\n        }\n        else {\n            low = mid + 1;\n        }\n    }\n    if (low > high) {\n        return mid + 2;\n    }",
    "    long n = array.size();\n    long low = 0;\n    long high = n-1;\n    while(low <= high) {\n        long mid = low + (high - low)/2;\n        if(array[mid] == mid) {\n            low = mid + 1;\n        }\n        else {\n            high = mid - 1;\n        }\n    }\n    return low;",
    "    long n = array.size();\n    long low = 0;\n    long high = n-1;\n    while(low<=high){\n        long mid = low + (high-low)/2;\n        if(array[mid]!=mid+1){\n            if(mid==0 || array[mid-1]==mid){\n                return mid+1;\n            }\n            high = mid-1;\n        }\n        else{\n            low = mid+1;\n        }\n    }\n    return -1;",
    "    long n = array.size();\n    long low = 0;\n    long high = n - 1;\n    long mid = 0;\n    while (low <= high) {\n        mid = (low + high) / 2;\n        if (array[mid] != mid + 1 && array[mid - 1] == mid) {\n            return mid + 1;\n        }\n        else if (array[mid] != mid + 1) {\n            high = mid - 1;\n        }\n        else {\n            low = mid + 1;\n        }\n    }\n    return -1;",
    "    // Write your code here\n    long n = array.size();\n    long low = 0, high = n-1;\n    while(low <= high){\n        long mid = (low + high)/2;\n        if(array[mid] == mid+1){\n            low = mid+1;\n        }\n        else{\n            high = mid-1;\n        }\n    }\n    return low+1;",
    "    // Write your code here\n    long n = array.size();\n    long low = 0;\n    long high = n-1;\n    long mid;\n    while(low <= high){\n        mid = low + (high - low)/2;\n        if(array[mid] == mid+1){\n            low = mid + 1;\n        }\n        else{\n            high = mid - 1;\n        }\n    }\n    return low+1;",
    "    // Write your code here\n    int n = array.size();\n    int l = 0, r = n-1;\n    while(l<=r){\n        int mid = l + (r-l)/2;\n        if(array[mid] == mid+1){\n            l = mid+1;\n        }\n        else{\n            r = mid-1;\n        }\n    }\n    return l+1;",
    "    //write your code here\n    int n = array.size();\n    int low = 0;\n    int high = n-1;\n    int mid;\n    while(low <= high) {\n        mid = low + (high-low)/2;\n        if(array[mid] == mid+1) {\n            low = mid+1;\n        }\n        else {\n            high = mid-1;\n        }\n    }\n    return low+1;",
    "    // Write your code here\n    long n=array.size();\n    long low=0,high=n-1;\n    while(low<=high){\n        long mid=low+(high-low)/2;\n        if(array[mid]!=mid+1 && array[mid-1]==mid){\n            return mid+1;\n        }\n        else if(array[mid]!=mid+1){\n            high=mid-1;\n        }\n        else{\n            low=mid+1;\n        }\n    }\n    return -1;",
    "    long n = array.size();\n    if(n == 0) {\n        return 1;\n    }\n    if(n == 1) {\n        if(array[0] == 1) {\n            return 2;\n        }\n        else {\n            return 1;\n        }\n    }\n    long i = 0;\n    while(i < n) {\n        if(array[i] != i + 1) {\n            return i + 1;\n        }\n        i++;\n    }\n    return i + 1;",
    "    // Write your code here\n    long n=array.size();\n    long low=0;\n    long high=n-1;\n    long mid;\n    while(low<=high){\n        mid=(low+high)/2;\n        if(array[mid]==mid+1){\n            low=mid+1;\n        }\n        else{\n            high=mid-1;\n        }\n    }\n    return low+1;",
    "    // Write your code here\n    long n = array.size();\n    long i = 0;\n    while(i<n){\n        if(array[i] != i+1){\n            return i+1;\n        }\n        i++;\n    }\n    return n+1;",
    "    long n = array.size();\n    long low = 0;\n    long high = n-1;\n    while(low <= high) {\n        long mid = low + (high - low)/2;\n        if(array[mid] != mid+1 && array[mid-1] == mid) {\n            return mid+1;\n        } else if(array[mid] != mid+1) {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n    return -1;",
    "    int n = array.size();\n    int low = 0;\n    int high = n-1;\n    int mid;\n    while(low <= high){\n        mid = (low+high)/2;\n        if(array[mid] == mid+1){\n            low = mid+1;\n        }\n        else{\n            high = mid-1;\n        }\n    }\n    return low+1;",
    "    long n = array.size();\n    long low = 0;\n    long high = n-1;\n    while(low <= high) {\n        long mid = low + (high-low)/2;\n        if(array[mid] != mid+1 && array[mid-1] == mid) {\n            return mid+1;\n        }\n        else if(array[mid] != mid+1) {\n            high = mid-1;\n        }\n        else {\n            low = mid+1;\n        }\n    }\n    return -1;",
    "    // Write your code here\n    long n = array.size();\n    long low = 0;\n    long high = n-1;\n    while(low<=high){\n        long mid = low + (high-low)/2;\n        if(array[mid]!=mid+1 && array[mid-1]==mid){\n            return mid+1;\n        }\n        else if(array[mid]!=mid+1){\n            high = mid-1;\n        }\n        else{\n            low = mid+1;\n        }\n    }\n    return -1;",
    "    int n = array.size();\n    int low = 0;\n    int high = n-1;\n    while(low <= high){\n        int mid = (low + high)/2;\n        if(array[mid] != mid+1 && array[mid-1] == mid){\n            return mid+1;\n        }\n        else if(array[mid] != mid+1){\n            high = mid - 1;\n        }\n        else{\n            low = mid + 1;\n        }\n    }\n    if(low > high){\n        return low+1;\n    }",
    "    int n = array.size();\n    int low = 0, high = n - 1;\n    while (low <= high) {\n        int mid = low + (high - low) / 2;\n        if (array[mid] != mid + 1 && array[mid - 1] == mid)\n            return mid + 1;\n        else if (array[mid] != mid + 1)\n            high = mid - 1;\n        else\n            low = mid + 1;\n    }\n    return -1;"
  ]
}
{
  "name": "mbpp_113_check_integer",
  "language": "cpp",
  "prompt": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if a string represents an integer or not.\nbool check_integer(std::string text) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_113_check_integer.py",
  "prompt_terminology": "verbatim",
  "tests": "}\nint main() {\n    auto candidate = check_integer;\n    assert(candidate((\"python\")) == (false));\n    assert(candidate((\"1\")) == (true));\n    assert(candidate((\"12345\")) == (true));\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    if (text.empty()) {\n        return false;\n    }\n    for (int i = 0; i < text.length(); i++) {\n        if (text[i] < '0' || text[i] > '9') {\n            return false;\n        }\n    }\n    return true;",
    "    if (text.empty()) {\n        return false;\n    }\n    if (text[0] == '-') {\n        text = text.substr(1);\n    }\n    if (text.empty()) {\n        return false;\n    }\n    for (int i = 0; i < text.length(); i++) {\n        if (text[i] < '0' || text[i] > '9') {\n            return false;\n        }\n    }\n    return true;",
    "    int i = 0;\n    if (text[0] == '-') {\n        i++;\n    }\n    for (; i < text.size(); i++) {\n        if (text[i] < '0' || text[i] > '9') {\n            return false;\n        }\n    }\n    return true;",
    "    int i = 0;\n    if (text[0] == '-') i = 1;\n    for (; i < text.size(); i++) {\n        if (!isdigit(text[i])) return false;\n    }\n    return true;",
    "    int i = 0;\n    if(text[0] == '+' || text[0] == '-') {\n        i++;\n    }\n    for(; i < text.length(); i++) {\n        if(text[i] < '0' || text[i] > '9') {\n            return false;\n        }\n    }\n    return true;",
    "    int i = 0;\n    if(text[0] == '-') {\n        i = 1;\n    }\n    for(; i < text.length(); i++) {\n        if(text[i] < '0' || text[i] > '9') {\n            return false;\n        }\n    }\n    return true;",
    "    if (text.empty()) {\n        return false;\n    }\n    int i = 0;\n    if (text[0] == '-') {\n        i = 1;\n    }\n    for (; i < text.length(); i++) {\n        if (!isdigit(text[i])) {\n            return false;\n        }\n    }\n    return true;",
    "    if(text.length() == 0) {\n        return false;\n    }\n    int i = 0;\n    if(text[0] == '-') {\n        i++;\n    }\n    for(; i < text.length(); i++) {\n        if(text[i] < '0' || text[i] > '9') {\n            return false;\n        }\n    }\n    return true;",
    "    int i = 0;\n    if (text[0] == '-') {\n        i++;\n    }\n    for (; i < text.size(); i++) {\n        if (text[i] < '0' || text[i] > '9') {\n            return false;\n        }\n    }\n    return true;",
    "    std::string::iterator it = text.begin();\n    if(*it == '-') {\n        it++;\n    }\n    while(it != text.end()) {\n        if(*it < '0' || *it > '9') {\n            return false;\n        }\n        it++;\n    }\n    return true;",
    "    if (text.length() == 0) {\n        return false;\n    }\n    if (text[0] == '-' || text[0] == '+') {\n        text = text.substr(1);\n    }\n    for (int i = 0; i < text.length(); i++) {\n        if (text[i] < '0' || text[i] > '9') {\n            return false;\n        }\n    }\n    return true;",
    "  if (text.length() == 0) {\n    return false;\n  }\n  int i = 0;\n  if (text[0] == '-') {\n    i = 1;\n  }\n  for (; i < text.length(); i++) {\n    if (text[i] < '0' || text[i] > '9') {\n      return false;\n    }\n  }\n  return true;",
    "    // Write your code here\n    int i = 0;\n    if(text[0] == '-')\n        i++;\n    for(; i < text.length(); i++) {\n        if(text[i] < '0' || text[i] > '9')\n            return false;\n    }\n    return true;",
    "    int i = 0;\n    if (text[0] == '-') {\n        i = 1;\n    }\n    for (; i < text.length(); i++) {\n        if (text[i] < '0' || text[i] > '9') {\n            return false;\n        }\n    }\n    return true;",
    "    int i = 0;\n    if(text[0] == '-') {\n        i = 1;\n    }\n    for(; i < text.length(); i++) {\n        if(text[i] < '0' || text[i] > '9') {\n            return false;\n        }\n    }\n    return true;",
    "    int i = 0;\n    if (text[0] == '-') {\n        i = 1;\n    }\n    for (; i < text.length(); i++) {\n        if (text[i] < '0' || text[i] > '9') {\n            return false;\n        }\n    }\n    return true;",
    "    if(text.length() == 0) {\n        return false;\n    }\n    if(text[0] == '-' || text[0] == '+') {\n        text = text.substr(1);\n    }\n    for(int i = 0; i < text.length(); i++) {\n        if(text[i] < '0' || text[i] > '9') {\n            return false;\n        }\n    }\n    return true;",
    "  if(text.empty()) {\n    return false;\n  }\n  int i = 0;\n  if(text[0] == '-') {\n    i = 1;\n  }\n  for(; i < text.size(); ++i) {\n    if(!isdigit(text[i])) {\n      return false;\n    }\n  }\n  return true;",
    "  for (char c : text) {\n    if (c < '0' || c > '9') {\n      return false;\n    }\n  }\n  return true;",
    "    if (text.length() == 0) {\n        return false;\n    }\n    int i = 0;\n    if (text[0] == '-') {\n        i = 1;\n    }\n    for (; i < text.length(); i++) {\n        if (text[i] < '0' || text[i] > '9') {\n            return false;\n        }\n    }\n    return true;"
  ]
}
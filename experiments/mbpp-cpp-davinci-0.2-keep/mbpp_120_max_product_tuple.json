{
  "name": "mbpp_120_max_product_tuple",
  "language": "cpp",
  "prompt": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list.\nlong max_product_tuple(std::vector<long> list1) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_120_max_product_tuple.py",
  "prompt_terminology": "verbatim",
  "tests": "}\nint main() {\n    auto candidate = max_product_tuple;\n    assert(candidate((std::vector<long>({(std::tuple<long, long>)std::make_tuple(2, 7), (std::tuple<long, long>)std::make_tuple(2, 6), (std::tuple<long, long>)std::make_tuple(1, 8), (std::tuple<long, long>)std::make_tuple(4, 9)}))) == (36));\n    assert(candidate((std::vector<long>({(std::tuple<long, long>)std::make_tuple(10, 20), (std::tuple<long, long>)std::make_tuple(15, 2), (std::tuple<long, long>)std::make_tuple(5, 10)}))) == (200));\n    assert(candidate((std::vector<long>({(std::tuple<long, long>)std::make_tuple(11, 44), (std::tuple<long, long>)std::make_tuple(10, 15), (std::tuple<long, long>)std::make_tuple(20, 5), (std::tuple<long, long>)std::make_tuple(12, 9)}))) == (484));\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    long max = 0;\n    for(int i = 0; i < list1.size(); i++) {\n        for(int j = i+1; j < list1.size(); j++) {\n            long product = list1[i] * list1[j];\n            if(product > max) {\n                max = product;\n            }\n        }\n    }\n    return max;",
    "    long max_product = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        for (int j = i + 1; j < list1.size(); j++) {\n            long product = list1[i] * list1[j];\n            if (product > max_product) {\n                max_product = product;\n            }\n        }\n    }\n    return max_product;",
    "    // Write your code here\n    long max = 0;\n    for(int i=0;i<list1.size();i+=2){\n        long product = list1[i]*list1[i+1];\n        if(product>max)\n            max = product;\n    }\n    return max;",
    "    long max_product = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        for (int j = i + 1; j < list1.size(); j++) {\n            long product = list1[i] * list1[j];\n            if (product > max_product) {\n                max_product = product;\n            }\n        }\n    }\n    return max_product;",
    "    long max_product = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        for (int j = i + 1; j < list1.size(); j++) {\n            if (abs(list1[i] * list1[j]) > max_product) {\n                max_product = abs(list1[i] * list1[j]);\n            }\n        }\n    }\n    return max_product;",
    "    long max_product = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        for (int j = i + 1; j < list1.size(); j++) {\n            long product = list1[i] * list1[j];\n            if (product > max_product) {\n                max_product = product;\n            }\n        }\n    }\n    return max_product;",
    "    long max_product = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        for (int j = i + 1; j < list1.size(); j++) {\n            long product = list1[i] * list1[j];\n            if (product > max_product) {\n                max_product = product;\n            }\n        }\n    }\n    return max_product;",
    "    long max_product = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        for (int j = i + 1; j < list1.size(); j++) {\n            long product = list1[i] * list1[j];\n            if (product > max_product) {\n                max_product = product;\n            }\n        }\n    }\n    return max_product;",
    "    long max_product = 0;\n    for(int i=0; i<list1.size(); i++) {\n        for(int j=i+1; j<list1.size(); j++) {\n            long product = list1[i] * list1[j];\n            if(product > max_product) {\n                max_product = product;\n            }\n        }\n    }\n    return max_product;",
    "    long max_product = 0;\n    for(int i = 0; i < list1.size(); i++) {\n        for(int j = i + 1; j < list1.size(); j++) {\n            long product = list1[i] * list1[j];\n            if(product > max_product) {\n                max_product = product;\n            }\n        }\n    }\n    return max_product;",
    "    long max_product = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        for (int j = i + 1; j < list1.size(); j++) {\n            if (abs(list1[i] * list1[j]) > max_product) {\n                max_product = abs(list1[i] * list1[j]);\n            }\n        }\n    }\n    return max_product;",
    "    long max_product = 0;\n    for(int i = 0; i < list1.size(); i++) {\n        for(int j = i + 1; j < list1.size(); j++) {\n            if(abs(list1[i] * list1[j]) > max_product) {\n                max_product = abs(list1[i] * list1[j]);\n            }\n        }\n    }\n    return max_product;",
    "    long max = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        for (int j = i+1; j < list1.size(); j++) {\n            if (abs(list1[i] * list1[j]) > max) {\n                max = abs(list1[i] * list1[j]);\n            }\n        }\n    }\n    return max;",
    "    long max_product = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        for (int j = i + 1; j < list1.size(); j++) {\n            long product = list1[i] * list1[j];\n            if (product > max_product) {\n                max_product = product;\n            }\n        }\n    }\n    return max_product;",
    "    long max_product = 0;\n    for(int i = 0; i < list1.size(); i++) {\n        for(int j = i + 1; j < list1.size(); j++) {\n            long product = list1[i] * list1[j];\n            if(product > max_product) {\n                max_product = product;\n            }\n        }\n    }\n    return max_product;",
    "    long max_product = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        for (int j = i + 1; j < list1.size(); j++) {\n            long product = list1[i] * list1[j];\n            if (product > max_product) {\n                max_product = product;\n            }\n        }\n    }\n    return max_product;",
    "    long max_product = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        for (int j = i + 1; j < list1.size(); j++) {\n            long product = list1[i] * list1[j];\n            if (product > max_product) {\n                max_product = product;\n            }\n        }\n    }\n    return max_product;",
    "    std::vector<long> list2;\n    for(int i=0;i<list1.size();i++)\n    {\n        for(int j=i+1;j<list1.size();j++)\n        {\n            list2.push_back(list1[i]*list1[j]);\n        }\n    }\n    long max=list2[0];\n    for(int i=0;i<list2.size();i++)\n    {\n        if(list2[i]>max)\n        {\n            max=list2[i];\n        }\n    }\n    return max;",
    "    long max_product = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        for (int j = i + 1; j < list1.size(); j++) {\n            long product = list1[i] * list1[j];\n            if (product > max_product) {\n                max_product = product;\n            }\n        }\n    }\n    return max_product;",
    "    long max_product = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        for (int j = i + 1; j < list1.size(); j++) {\n            long product = list1[i] * list1[j];\n            if (product > max_product) {\n                max_product = product;\n            }\n        }\n    }\n    return max_product;",
    "    long max_product = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        for (int j = i + 1; j < list1.size(); j++) {\n            long product = list1[i] * list1[j];\n            if (product > max_product) {\n                max_product = product;\n            }\n        }\n    }\n    return max_product;",
    "    // Write your code here\n    long max_product = 0;\n    for(int i = 0; i < list1.size(); i++) {\n        for(int j = i+1; j < list1.size(); j++) {\n            long product = list1[i] * list1[j];\n            if(product > max_product) {\n                max_product = product;\n            }\n        }\n    }\n    return max_product;",
    "    long max_product = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        for (int j = i + 1; j < list1.size(); j++) {\n            if (max_product < list1[i] * list1[j]) {\n                max_product = list1[i] * list1[j];\n            }\n        }\n    }\n    return max_product;",
    "    long max_product = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        for (int j = i + 1; j < list1.size(); j++) {\n            long product = list1[i] * list1[j];\n            if (product > max_product) {\n                max_product = product;\n            }\n        }\n    }\n    return max_product;",
    "    // Write your code here\n    long max_product = 0;\n    for (int i = 0; i < list1.size(); i += 2) {\n        long product = list1[i] * list1[i + 1];\n        if (product > max_product) {\n            max_product = product;\n        }\n    }\n    return max_product;",
    "    long max_product = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        for (int j = i + 1; j < list1.size(); j++) {\n            long product = list1[i] * list1[j];\n            if (product > max_product) {\n                max_product = product;\n            }\n        }\n    }\n    return max_product;",
    "    long max_product = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        for (int j = i + 1; j < list1.size(); j++) {\n            long product = list1[i] * list1[j];\n            if (product > max_product) {\n                max_product = product;\n            }\n        }\n    }\n    return max_product;",
    "  // Write your code here\n  long max = 0;\n  for(int i = 0; i < list1.size(); i++) {\n    for(int j = i + 1; j < list1.size(); j++) {\n      if(abs(list1[i] * list1[j]) > max) {\n        max = abs(list1[i] * list1[j]);\n      }\n    }\n  }\n  return max;",
    "    long max_product = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        for (int j = i+1; j < list1.size(); j++) {\n            long product = list1[i] * list1[j];\n            if (product > max_product) {\n                max_product = product;\n            }\n        }\n    }\n    return max_product;",
    "    long max_product = 0;\n    long product = 1;\n    for (int i = 0; i < list1.size(); i++) {\n        for (int j = i + 1; j < list1.size(); j++) {\n            product = list1[i] * list1[j];\n            if (product > max_product) {\n                max_product = product;\n            }\n        }\n    }\n    return max_product;",
    "    long max_product = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        for (int j = i + 1; j < list1.size(); j++) {\n            long product = list1[i] * list1[j];\n            if (product > max_product) {\n                max_product = product;\n            }\n        }\n    }\n    return max_product;",
    "    long max_product = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        for (int j = i + 1; j < list1.size(); j++) {\n            long product = list1[i] * list1[j];\n            if (product > max_product) {\n                max_product = product;\n            }\n        }\n    }\n    return max_product;",
    "    long max_product = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        for (int j = i + 1; j < list1.size(); j++) {\n            long product = list1[i] * list1[j];\n            if (product > max_product) {\n                max_product = product;\n            }\n        }\n    }\n    return max_product;",
    "    long max_product = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        for (int j = i + 1; j < list1.size(); j++) {\n            long product = list1[i] * list1[j];\n            if (product > max_product) {\n                max_product = product;\n            }\n        }\n    }\n    return max_product;",
    "    long max_product = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        for (int j = i + 1; j < list1.size(); j++) {\n            long product = list1[i] * list1[j];\n            if (product > max_product) {\n                max_product = product;\n            }\n        }\n    }\n    return max_product;",
    "    long max_product = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        for (int j = i + 1; j < list1.size(); j++) {\n            long product = list1[i] * list1[j];\n            if (product > max_product) {\n                max_product = product;\n            }\n        }\n    }\n    return max_product;",
    "    long max_product = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        for (int j = i + 1; j < list1.size(); j++) {\n            if (list1[i] * list1[j] > max_product) {\n                max_product = list1[i] * list1[j];\n            }\n        }\n    }\n    return max_product;",
    "    // Write your code here\n    long max_product = 0;\n    for(int i = 0; i < list1.size(); i++) {\n        for(int j = i+1; j < list1.size(); j++) {\n            long product = list1[i] * list1[j];\n            if(product > max_product) {\n                max_product = product;\n            }\n        }\n    }\n    return max_product;",
    "    long max = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        for (int j = i + 1; j < list1.size(); j++) {\n            if (std::abs(list1[i] * list1[j]) > max) {\n                max = std::abs(list1[i] * list1[j]);\n            }\n        }\n    }\n    return max;",
    "    long max_product = 0;\n    for(int i = 0; i < list1.size(); i++) {\n        for(int j = i + 1; j < list1.size(); j++) {\n            long product = list1[i] * list1[j];\n            if(product > max_product) {\n                max_product = product;\n            }\n        }\n    }\n    return max_product;",
    "    long max_product = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        for (int j = i + 1; j < list1.size(); j++) {\n            if (abs(list1[i] * list1[j]) > max_product) {\n                max_product = abs(list1[i] * list1[j]);\n            }\n        }\n    }\n    return max_product;",
    "    std::vector<long> list2;\n    for(int i=0;i<list1.size();i++)\n    {\n        for(int j=i+1;j<list1.size();j++)\n        {\n            list2.push_back(list1[i]*list1[j]);\n        }\n    }\n    std::sort(list2.begin(),list2.end());\n    return list2[list2.size()-1];",
    "    // Write your code here\n    long max_product = 0;\n    for(int i=0;i<list1.size();i+=2){\n        for(int j=i+2;j<list1.size();j+=2){\n            max_product = std::max(max_product,list1[i]*list1[i+1]*list1[j]*list1[j+1]);\n        }\n    }\n    return max_product;",
    "    long max_product = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        for (int j = i + 1; j < list1.size(); j++) {\n            long product = list1[i] * list1[j];\n            if (product > max_product) {\n                max_product = product;\n            }\n        }\n    }\n    return max_product;",
    "    long max_product = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        for (int j = i + 1; j < list1.size(); j++) {\n            long product = list1[i] * list1[j];\n            if (product > max_product) {\n                max_product = product;\n            }\n        }\n    }\n    return max_product;",
    "    long max_product = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        for (int j = i + 1; j < list1.size(); j++) {\n            long product = list1[i] * list1[j];\n            if (product > max_product) {\n                max_product = product;\n            }\n        }\n    }\n    return max_product;",
    "    long max_product = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        for (int j = i + 1; j < list1.size(); j++) {\n            long product = list1[i] * list1[j];\n            if (product > max_product) {\n                max_product = product;\n            }\n        }\n    }\n    return max_product;",
    "    // Write your code here\n    long max_product = 0;\n    for(int i = 0; i < list1.size(); i++) {\n        for(int j = i + 1; j < list1.size(); j++) {\n            long product = list1[i] * list1[j];\n            if(product > max_product) {\n                max_product = product;\n            }\n        }\n    }\n    return max_product;",
    "    long max_product = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        for (int j = i + 1; j < list1.size(); j++) {\n            long product = list1[i] * list1[j];\n            if (product > max_product) {\n                max_product = product;\n            }\n        }\n    }\n    return max_product;",
    "    long max_product = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        for (int j = i + 1; j < list1.size(); j++) {\n            if (max_product < list1[i] * list1[j]) {\n                max_product = list1[i] * list1[j];\n            }\n        }\n    }\n    return max_product;",
    "    long max = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        for (int j = i + 1; j < list1.size(); j++) {\n            if (list1[i] * list1[j] > max) {\n                max = list1[i] * list1[j];\n            }\n        }\n    }\n    return max;",
    "    long max_product = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        for (int j = i + 1; j < list1.size(); j++) {\n            long product = list1[i] * list1[j];\n            if (product > max_product) {\n                max_product = product;\n            }\n        }\n    }\n    return max_product;",
    "    long max_product = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        for (int j = i + 1; j < list1.size(); j++) {\n            long product = list1[i] * list1[j];\n            if (product > max_product) {\n                max_product = product;\n            }\n        }\n    }\n    return max_product;",
    "    long max_product = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        for (int j = i + 1; j < list1.size(); j++) {\n            if (std::abs(list1[i] * list1[j]) > max_product) {\n                max_product = std::abs(list1[i] * list1[j]);\n            }\n        }\n    }\n    return max_product;",
    "    long max_prod = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        for (int j = i + 1; j < list1.size(); j++) {\n            long prod = list1[i] * list1[j];\n            if (prod > max_prod) {\n                max_prod = prod;\n            }\n        }\n    }\n    return max_prod;",
    "    long max_product = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        for (int j = i + 1; j < list1.size(); j++) {\n            long product = list1[i] * list1[j];\n            if (product > max_product) {\n                max_product = product;\n            }\n        }\n    }\n    return max_product;",
    "    long max_product = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        for (int j = i + 1; j < list1.size(); j++) {\n            if (list1[i] * list1[j] > max_product) {\n                max_product = list1[i] * list1[j];\n            }\n        }\n    }\n    return max_product;",
    "    std::vector<long> list2;\n    for (int i = 0; i < list1.size(); i++) {\n        list2.push_back(list1[i] * list1[i + 1]);\n        i++;\n    }\n    long max = list2[0];\n    for (int i = 1; i < list2.size(); i++) {\n        if (list2[i] > max) {\n            max = list2[i];\n        }\n    }\n    return max;",
    "    long max_product = 0;\n    for(int i = 0; i < list1.size(); i++) {\n        for(int j = i+1; j < list1.size(); j++) {\n            long product = list1[i] * list1[j];\n            if(product > max_product) {\n                max_product = product;\n            }\n        }\n    }\n    return max_product;",
    "    long max_product = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        for (int j = i + 1; j < list1.size(); j++) {\n            long product = list1[i] * list1[j];\n            if (product > max_product) {\n                max_product = product;\n            }\n        }\n    }\n    return max_product;",
    "    std::vector<long> list2;\n    for (int i = 0; i < list1.size(); i++) {\n        for (int j = i + 1; j < list1.size(); j++) {\n            list2.push_back(list1[i] * list1[j]);\n        }\n    }\n    long max = list2[0];\n    for (int i = 0; i < list2.size(); i++) {\n        if (list2[i] > max) {\n            max = list2[i];\n        }\n    }\n    return max;",
    "    long max_product = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        for (int j = i + 1; j < list1.size(); j++) {\n            long product = list1[i] * list1[j];\n            if (product > max_product) {\n                max_product = product;\n            }\n        }\n    }\n    return max_product;",
    "    int n = list1.size();\n    long max_product = 0;\n    for(int i = 0; i < n; i++) {\n        for(int j = i + 1; j < n; j++) {\n            long product = list1[i] * list1[j];\n            if(product > max_product) {\n                max_product = product;\n            }\n        }\n    }\n    return max_product;",
    "    long max_product = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        for (int j = i + 1; j < list1.size(); j++) {\n            if (list1[i] * list1[j] > max_product) {\n                max_product = list1[i] * list1[j];\n            }\n        }\n    }\n    return max_product;",
    "    long max_product = 0;\n    for(int i = 0; i < list1.size(); i++) {\n        for(int j = i + 1; j < list1.size(); j++) {\n            long product = list1[i] * list1[j];\n            if(product > max_product) {\n                max_product = product;\n            }\n        }\n    }\n    return max_product;",
    "    long max_product = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        for (int j = i + 1; j < list1.size(); j++) {\n            long product = list1[i] * list1[j];\n            if (product > max_product) {\n                max_product = product;\n            }\n        }\n    }\n    return max_product;",
    "    long max_product = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        for (int j = i + 1; j < list1.size(); j++) {\n            long product = list1[i] * list1[j];\n            if (product > max_product) {\n                max_product = product;\n            }\n        }\n    }\n    return max_product;",
    "    long max_product = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        for (int j = i+1; j < list1.size(); j++) {\n            long product = list1[i] * list1[j];\n            if (product > max_product) {\n                max_product = product;\n            }\n        }\n    }\n    return max_product;",
    "    // Write your code here\n    long max = 0;\n    for(int i = 0; i < list1.size(); i++){\n        for(int j = i+1; j < list1.size(); j++){\n            if(list1[i]*list1[j] > max){\n                max = list1[i]*list1[j];\n            }\n        }\n    }\n    return max;",
    "    long max_product = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        for (int j = i + 1; j < list1.size(); j++) {\n            long product = list1[i] * list1[j];\n            if (product > max_product) {\n                max_product = product;\n            }\n        }\n    }\n    return max_product;",
    "  long max = 0;\n  for (int i = 0; i < list1.size(); i++) {\n    for (int j = i + 1; j < list1.size(); j++) {\n      if (list1[i] * list1[j] > max) {\n        max = list1[i] * list1[j];\n      }\n    }\n  }\n  return max;",
    "    // Write your code here\n    long max_prod = 0;\n    for(int i = 0; i < list1.size(); i++){\n        for(int j = i + 1; j < list1.size(); j++){\n            long prod = list1[i] * list1[j];\n            if(prod > max_prod){\n                max_prod = prod;\n            }\n        }\n    }\n    return max_prod;",
    "    long max_product = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        for (int j = i + 1; j < list1.size(); j++) {\n            long product = list1[i] * list1[j];\n            if (product > max_product) {\n                max_product = product;\n            }\n        }\n    }\n    return max_product;",
    "    // Write your code here\n    long max_product = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        for (int j = i + 1; j < list1.size(); j++) {\n            long product = list1[i] * list1[j];\n            if (product > max_product) {\n                max_product = product;\n            }\n        }\n    }\n    return max_product;",
    "    long max_product = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        for (int j = i+1; j < list1.size(); j++) {\n            long product = list1[i] * list1[j];\n            if (product > max_product) {\n                max_product = product;\n            }\n        }\n    }\n    return max_product;",
    "    // Write your code here\n    long max_product = 0;\n    for(int i=0;i<list1.size();i++)\n    {\n        for(int j=i+1;j<list1.size();j++)\n        {\n            long product = list1[i]*list1[j];\n            if(product>max_product)\n            {\n                max_product = product;\n            }\n        }\n    }\n    return max_product;",
    "    long max_product = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        for (int j = i + 1; j < list1.size(); j++) {\n            long product = list1[i] * list1[j];\n            if (product > max_product) {\n                max_product = product;\n            }\n        }\n    }\n    return max_product;",
    "    long max_product = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        for (int j = i + 1; j < list1.size(); j++) {\n            if (list1[i] * list1[j] > max_product) {\n                max_product = list1[i] * list1[j];\n            }\n        }\n    }\n    return max_product;",
    "  long max_product = 0;\n  for(int i = 0; i < list1.size(); i++) {\n    for(int j = i + 1; j < list1.size(); j++) {\n      long product = list1[i] * list1[j];\n      if(product > max_product) {\n        max_product = product;\n      }\n    }\n  }\n  return max_product;",
    "    long max_product = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        for (int j = i + 1; j < list1.size(); j++) {\n            long product = list1[i] * list1[j];\n            if (product > max_product) {\n                max_product = product;\n            }\n        }\n    }\n    return max_product;",
    "  long max_product = 0;\n  for (int i = 0; i < list1.size(); i++) {\n    for (int j = i + 1; j < list1.size(); j++) {\n      long product = list1[i] * list1[j];\n      if (product > max_product) {\n        max_product = product;\n      }\n    }\n  }\n  return max_product;",
    "    long max_product = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        for (int j = i + 1; j < list1.size(); j++) {\n            if (list1[i] * list1[j] > max_product) {\n                max_product = list1[i] * list1[j];\n            }\n        }\n    }\n    return max_product;",
    "  long max_product = 0;\n  for (int i = 0; i < list1.size(); i++) {\n    for (int j = i + 1; j < list1.size(); j++) {\n      long product = list1[i] * list1[j];\n      if (product > max_product) {\n        max_product = product;\n      }\n    }\n  }\n  return max_product;",
    "    long max_product = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        for (int j = i + 1; j < list1.size(); j++) {\n            if (list1[i] * list1[j] > max_product) {\n                max_product = list1[i] * list1[j];\n            }\n        }\n    }\n    return max_product;",
    "    long max_product = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        for (int j = i + 1; j < list1.size(); j++) {\n            long product = list1[i] * list1[j];\n            if (product > max_product) {\n                max_product = product;\n            }\n        }\n    }\n    return max_product;",
    "    long max_product = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        for (int j = i + 1; j < list1.size(); j++) {\n            long product = list1[i] * list1[j];\n            if (product > max_product) {\n                max_product = product;\n            }\n        }\n    }\n    return max_product;",
    "    long max_product = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        for (int j = i + 1; j < list1.size(); j++) {\n            long product = list1[i] * list1[j];\n            if (product > max_product) {\n                max_product = product;\n            }\n        }\n    }\n    return max_product;",
    "    long max = 0;\n    for(int i = 0; i < list1.size(); i++) {\n        for(int j = i+1; j < list1.size(); j++) {\n            if(abs(list1[i]*list1[j]) > max) {\n                max = abs(list1[i]*list1[j]);\n            }\n        }\n    }\n    return max;",
    "    long max_product = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        for (int j = i + 1; j < list1.size(); j++) {\n            long product = list1[i] * list1[j];\n            if (product > max_product) {\n                max_product = product;\n            }\n        }\n    }\n    return max_product;",
    "  long max_product = 0;\n  for (int i = 0; i < list1.size(); i++) {\n    for (int j = i + 1; j < list1.size(); j++) {\n      long product = std::abs(list1[i] * list1[j]);\n      if (product > max_product) {\n        max_product = product;\n      }\n    }\n  }\n  return max_product;",
    "    long max_product = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        for (int j = i + 1; j < list1.size(); j++) {\n            long product = list1[i] * list1[j];\n            if (product > max_product) {\n                max_product = product;\n            }\n        }\n    }\n    return max_product;",
    "    long max_product = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        for (int j = i + 1; j < list1.size(); j++) {\n            if (list1[i] * list1[j] > max_product) {\n                max_product = list1[i] * list1[j];\n            }\n        }\n    }\n    return max_product;",
    "    long max_product = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        for (int j = i + 1; j < list1.size(); j++) {\n            if (list1[i] * list1[j] > max_product) {\n                max_product = list1[i] * list1[j];\n            }\n        }\n    }\n    return max_product;",
    "    long max_product = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        for (int j = i + 1; j < list1.size(); j++) {\n            long product = list1[i] * list1[j];\n            if (product > max_product) {\n                max_product = product;\n            }\n        }\n    }\n    return max_product;",
    "    long max_product = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        for (int j = i + 1; j < list1.size(); j++) {\n            long product = list1[i] * list1[j];\n            if (product > max_product) {\n                max_product = product;\n            }\n        }\n    }\n    return max_product;",
    "    long max_product = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        for (int j = i + 1; j < list1.size(); j++) {\n            long product = list1[i] * list1[j];\n            if (product > max_product) {\n                max_product = product;\n            }\n        }\n    }\n    return max_product;",
    "    long max_product = 0;\n    for(int i=0; i<list1.size(); i++) {\n        for(int j=i+1; j<list1.size(); j++) {\n            long product = list1[i] * list1[j];\n            if(product > max_product) {\n                max_product = product;\n            }\n        }\n    }\n    return max_product;",
    "    long max_product = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        for (int j = i + 1; j < list1.size(); j++) {\n            long product = list1[i] * list1[j];\n            if (product > max_product) {\n                max_product = product;\n            }\n        }\n    }\n    return max_product;",
    "    long max_product = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        for (int j = i + 1; j < list1.size(); j++) {\n            long product = list1[i] * list1[j];\n            if (product > max_product) {\n                max_product = product;\n            }\n        }\n    }\n    return max_product;",
    "    long max_product = 0;\n    for(int i = 0; i < list1.size(); i++) {\n        for(int j = i + 1; j < list1.size(); j++) {\n            long product = list1[i] * list1[j];\n            if(product > max_product) {\n                max_product = product;\n            }\n        }\n    }\n    return max_product;",
    "    long max_product = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        for (int j = i + 1; j < list1.size(); j++) {\n            if (list1[i] * list1[j] > max_product) {\n                max_product = list1[i] * list1[j];\n            }\n        }\n    }\n    return max_product;",
    "    long max_product = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        for (int j = i + 1; j < list1.size(); j++) {\n            long product = list1[i] * list1[j];\n            if (product > max_product) {\n                max_product = product;\n            }\n        }\n    }\n    return max_product;",
    "    long max_product = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        for (int j = i + 1; j < list1.size(); j++) {\n            long product = std::abs(list1[i] * list1[j]);\n            if (product > max_product) {\n                max_product = product;\n            }\n        }\n    }\n    return max_product;",
    "    long max_product = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        for (int j = i + 1; j < list1.size(); j++) {\n            long product = list1[i] * list1[j];\n            if (product > max_product) {\n                max_product = product;\n            }\n        }\n    }\n    return max_product;",
    "    long max_product = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        for (int j = i + 1; j < list1.size(); j++) {\n            long product = list1[i] * list1[j];\n            if (product > max_product) {\n                max_product = product;\n            }\n        }\n    }\n    return max_product;",
    "    long max_prod = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        for (int j = i + 1; j < list1.size(); j++) {\n            long prod = list1[i] * list1[j];\n            if (prod > max_prod) {\n                max_prod = prod;\n            }\n        }\n    }\n    return max_prod;",
    "    long max_product = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        for (int j = i + 1; j < list1.size(); j++) {\n            long product = list1[i] * list1[j];\n            if (product > max_product) {\n                max_product = product;\n            }\n        }\n    }\n    return max_product;",
    "    int n = list1.size();\n    long max_prod = 0;\n    for(int i = 0; i < n; i++) {\n        for(int j = i + 1; j < n; j++) {\n            long prod = list1[i] * list1[j];\n            if(prod > max_prod) {\n                max_prod = prod;\n            }\n        }\n    }\n    return max_prod;",
    "    long max_product = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        for (int j = i + 1; j < list1.size(); j++) {\n            long product = list1[i] * list1[j];\n            if (product > max_product) {\n                max_product = product;\n            }\n        }\n    }\n    return max_product;",
    "    long max_product = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        for (int j = i + 1; j < list1.size(); j++) {\n            long product = list1[i] * list1[j];\n            if (product > max_product) {\n                max_product = product;\n            }\n        }\n    }\n    return max_product;",
    "    long max_product = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        for (int j = i + 1; j < list1.size(); j++) {\n            long product = list1[i] * list1[j];\n            if (product > max_product) {\n                max_product = product;\n            }\n        }\n    }\n    return max_product;",
    "    long max_product = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        for (int j = i + 1; j < list1.size(); j++) {\n            long product = list1[i] * list1[j];\n            if (product > max_product) {\n                max_product = product;\n            }\n        }\n    }\n    return max_product;",
    "    long max_product = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        for (int j = i + 1; j < list1.size(); j++) {\n            long product = list1[i] * list1[j];\n            if (product > max_product) {\n                max_product = product;\n            }\n        }\n    }\n    return max_product;",
    "    long max_product = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        for (int j = i + 1; j < list1.size(); j++) {\n            long product = list1[i] * list1[j];\n            if (product > max_product) {\n                max_product = product;\n            }\n        }\n    }\n    return max_product;",
    "    assert(list1.size() % 2 == 0);\n    long max = 0;\n    for (int i = 0; i < list1.size(); i += 2) {\n        long product = list1[i] * list1[i + 1];\n        if (product > max) {\n            max = product;\n        }\n    }\n    return max;",
    "    long max_product = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        for (int j = i + 1; j < list1.size(); j++) {\n            long product = list1[i] * list1[j];\n            if (product > max_product) {\n                max_product = product;\n            }\n        }\n    }\n    return max_product;",
    "  long max_product = 0;\n  for (int i = 0; i < list1.size() - 1; i++) {\n    for (int j = i + 1; j < list1.size(); j++) {\n      long product = list1[i] * list1[j];\n      if (product > max_product) {\n        max_product = product;\n      }\n    }\n  }\n  return max_product;",
    "    long max_product = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        for (int j = i + 1; j < list1.size(); j++) {\n            long product = list1[i] * list1[j];\n            if (product > max_product) {\n                max_product = product;\n            }\n        }\n    }\n    return max_product;",
    "    long max_product = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        for (int j = i + 1; j < list1.size(); j++) {\n            long product = list1[i] * list1[j];\n            if (product > max_product) {\n                max_product = product;\n            }\n        }\n    }\n    return max_product;",
    "    long max_product = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        for (int j = i + 1; j < list1.size(); j++) {\n            long product = list1[i] * list1[j];\n            if (product > max_product) {\n                max_product = product;\n            }\n        }\n    }\n    return max_product;",
    "    long max_product = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        for (int j = i + 1; j < list1.size(); j++) {\n            long product = list1[i] * list1[j];\n            if (product > max_product) {\n                max_product = product;\n            }\n        }\n    }\n    return max_product;",
    "    long max_product = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        for (int j = i + 1; j < list1.size(); j++) {\n            if (list1[i] * list1[j] > max_product) {\n                max_product = list1[i] * list1[j];\n            }\n        }\n    }\n    return max_product;",
    "    long max_product = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        for (int j = i + 1; j < list1.size(); j++) {\n            long product = list1[i] * list1[j];\n            if (product > max_product) {\n                max_product = product;\n            }\n        }\n    }\n    return max_product;",
    "    long max_product = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        for (int j = i + 1; j < list1.size(); j++) {\n            long product = list1[i] * list1[j];\n            if (product > max_product) {\n                max_product = product;\n            }\n        }\n    }\n    return max_product;",
    "  long max_product = 0;\n  for (int i = 0; i < list1.size(); i++) {\n    for (int j = i + 1; j < list1.size(); j++) {\n      long product = list1[i] * list1[j];\n      if (product > max_product) {\n        max_product = product;\n      }\n    }\n  }\n  return max_product;",
    "    long max_product = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        for (int j = i + 1; j < list1.size(); j++) {\n            long product = list1[i] * list1[j];\n            if (product > max_product) {\n                max_product = product;\n            }\n        }\n    }\n    return max_product;",
    "    long max_product = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        for (int j = i + 1; j < list1.size(); j++) {\n            long product = std::abs(list1[i] * list1[j]);\n            if (product > max_product) {\n                max_product = product;\n            }\n        }\n    }\n    return max_product;",
    "    long max = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        for (int j = i + 1; j < list1.size(); j++) {\n            if (std::abs(list1[i] * list1[j]) > max) {\n                max = std::abs(list1[i] * list1[j]);\n            }\n        }\n    }\n    return max;",
    "    long max_product = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        for (int j = i + 1; j < list1.size(); j++) {\n            long product = list1[i] * list1[j];\n            if (product > max_product) {\n                max_product = product;\n            }\n        }\n    }\n    return max_product;",
    "    long max_product = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        for (int j = i + 1; j < list1.size(); j++) {\n            long product = list1[i] * list1[j];\n            if (product > max_product) {\n                max_product = product;\n            }\n        }\n    }\n    return max_product;",
    "    long max = 0;\n    for(int i=0;i<list1.size();i+=2){\n        long product = list1[i]*list1[i+1];\n        if(product>max){\n            max = product;\n        }\n    }\n    return max;",
    "    long max_product = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        for (int j = i + 1; j < list1.size(); j++) {\n            long product = list1[i] * list1[j];\n            if (product > max_product) {\n                max_product = product;\n            }\n        }\n    }\n    return max_product;",
    "  // Write your code here\n  long max_product = 0;\n  for (int i = 0; i < list1.size(); i++) {\n    for (int j = i + 1; j < list1.size(); j++) {\n      long product = list1[i] * list1[j];\n      if (product > max_product) {\n        max_product = product;\n      }\n    }\n  }\n  return max_product;",
    "    long max_product = 0;\n    for (int i = 0; i < list1.size() - 1; i++) {\n        for (int j = i + 1; j < list1.size(); j++) {\n            if (std::abs(list1[i] * list1[j]) > max_product) {\n                max_product = std::abs(list1[i] * list1[j]);\n            }\n        }\n    }\n    return max_product;",
    "    long max_product = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        for (int j = i + 1; j < list1.size(); j++) {\n            long product = list1[i] * list1[j];\n            if (product > max_product) {\n                max_product = product;\n            }\n        }\n    }\n    return max_product;",
    "    long max_product = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        for (int j = i + 1; j < list1.size(); j++) {\n            long product = list1[i] * list1[j];\n            if (product > max_product) {\n                max_product = product;\n            }\n        }\n    }\n    return max_product;",
    "    long max_product = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        for (int j = i + 1; j < list1.size(); j++) {\n            long product = list1[i] * list1[j];\n            if (product > max_product) {\n                max_product = product;\n            }\n        }\n    }\n    return max_product;",
    "    long max = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        for (int j = i + 1; j < list1.size(); j++) {\n            if (max < list1[i] * list1[j]) {\n                max = list1[i] * list1[j];\n            }\n        }\n    }\n    return max;",
    "    long max_product = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        for (int j = i + 1; j < list1.size(); j++) {\n            if (std::abs(list1[i] * list1[j]) > max_product) {\n                max_product = std::abs(list1[i] * list1[j]);\n            }\n        }\n    }\n    return max_product;",
    "    long max_product = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        for (int j = i + 1; j < list1.size(); j++) {\n            long product = list1[i] * list1[j];\n            if (product > max_product) {\n                max_product = product;\n            }\n        }\n    }\n    return max_product;",
    "    long max_product = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        for (int j = i + 1; j < list1.size(); j++) {\n            long product = list1[i] * list1[j];\n            if (product > max_product) {\n                max_product = product;\n            }\n        }\n    }\n    return max_product;",
    "    long max_product = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        for (int j = i + 1; j < list1.size(); j++) {\n            long product = list1[i] * list1[j];\n            if (product > max_product) {\n                max_product = product;\n            }\n        }\n    }\n    return max_product;",
    "    // Write your code here\n    long max_product = 0;\n    for(int i = 0; i < list1.size(); i++){\n        for(int j = i+1; j < list1.size(); j++){\n            long product = list1[i] * list1[j];\n            if(product > max_product){\n                max_product = product;\n            }\n        }\n    }\n    return max_product;",
    "    long max_product = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        for (int j = i + 1; j < list1.size(); j++) {\n            if (list1[i] * list1[j] > max_product) {\n                max_product = list1[i] * list1[j];\n            }\n        }\n    }\n    return max_product;",
    "    long max_product = 0;\n    for(int i = 0; i < list1.size(); i++) {\n        for(int j = i + 1; j < list1.size(); j++) {\n            if(list1[i] * list1[j] > max_product) {\n                max_product = list1[i] * list1[j];\n            }\n        }\n    }\n    return max_product;",
    "    long max_product = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        for (int j = i + 1; j < list1.size(); j++) {\n            long product = list1[i] * list1[j];\n            if (max_product < product) {\n                max_product = product;\n            }\n        }\n    }\n    return max_product;",
    "    // Write your code here\n    long max_product = 0;\n    for(int i = 0; i < list1.size(); i++) {\n        for(int j = i + 1; j < list1.size(); j++) {\n            if(abs(list1[i] * list1[j]) > max_product) {\n                max_product = abs(list1[i] * list1[j]);\n            }\n        }\n    }\n    return max_product;",
    "    long max_product = 0;\n    for(int i = 0; i < list1.size(); i++) {\n        for(int j = i+1; j < list1.size(); j++) {\n            long product = list1[i] * list1[j];\n            if(product > max_product) {\n                max_product = product;\n            }\n        }\n    }\n    return max_product;",
    "    long max_product = 0;\n    std::vector<long>::iterator it1;\n    std::vector<long>::iterator it2;\n    for (it1 = list1.begin(); it1 != list1.end(); it1++) {\n        for (it2 = it1 + 1; it2 != list1.end(); it2++) {\n            long product = std::abs(*it1 * *it2);\n            if (product > max_product) {\n                max_product = product;\n            }\n        }\n    }\n    return max_product;",
    "    long max_product = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        for (int j = i + 1; j < list1.size(); j++) {\n            long product = list1[i] * list1[j];\n            if (product > max_product) {\n                max_product = product;\n            }\n        }\n    }\n    return max_product;",
    "    long max_product = 0;\n    for(int i = 0; i < list1.size(); i++) {\n        for(int j = i+1; j < list1.size(); j++) {\n            if(abs(list1[i] * list1[j]) > max_product) {\n                max_product = abs(list1[i] * list1[j]);\n            }\n        }\n    }\n    return max_product;",
    "    long max_product = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        for (int j = i + 1; j < list1.size(); j++) {\n            long product = list1[i] * list1[j];\n            if (product > max_product) {\n                max_product = product;\n            }\n        }\n    }\n    return max_product;",
    "    long max_product = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        for (int j = i + 1; j < list1.size(); j++) {\n            long product = list1[i] * list1[j];\n            if (product > max_product) {\n                max_product = product;\n            }\n        }\n    }\n    return max_product;",
    "    long max_product = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        for (int j = i + 1; j < list1.size(); j++) {\n            long product = list1[i] * list1[j];\n            if (product > max_product) {\n                max_product = product;\n            }\n        }\n    }\n    return max_product;",
    "    long max_product = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        for (int j = i + 1; j < list1.size(); j++) {\n            long product = list1[i] * list1[j];\n            if (product > max_product) {\n                max_product = product;\n            }\n        }\n    }\n    return max_product;",
    "    long max_product = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        for (int j = i + 1; j < list1.size(); j++) {\n            long product = list1[i] * list1[j];\n            if (product > max_product) {\n                max_product = product;\n            }\n        }\n    }\n    return max_product;",
    "    long max_product = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        for (int j = i + 1; j < list1.size(); j++) {\n            long product = list1[i] * list1[j];\n            if (product > max_product) {\n                max_product = product;\n            }\n        }\n    }\n    return max_product;",
    "    long max_product = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        for (int j = i+1; j < list1.size(); j++) {\n            if (std::abs(list1[i] * list1[j]) > max_product) {\n                max_product = std::abs(list1[i] * list1[j]);\n            }\n        }\n    }\n    return max_product;",
    "    long max = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        for (int j = i + 1; j < list1.size(); j++) {\n            if (abs(list1[i] * list1[j]) > max) {\n                max = abs(list1[i] * list1[j]);\n            }\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        for (int j = i + 1; j < list1.size(); j++) {\n            if (list1[i] * list1[j] > max) {\n                max = list1[i] * list1[j];\n            }\n        }\n    }\n    return max;",
    "    long max = 0;\n    for(int i = 0; i < list1.size(); i++) {\n        for(int j = i + 1; j < list1.size(); j++) {\n            if(abs(list1[i] * list1[j]) > max) {\n                max = abs(list1[i] * list1[j]);\n            }\n        }\n    }\n    return max;",
    "    long max_product = 0;\n    for (int i = 0; i < list1.size(); i += 2) {\n        long product = list1[i] * list1[i + 1];\n        if (product > max_product) {\n            max_product = product;\n        }\n    }\n    return max_product;",
    "  // Write your code here\n  long max_product = 0;\n  for (int i = 0; i < list1.size(); i++) {\n    for (int j = i + 1; j < list1.size(); j++) {\n      long product = list1[i] * list1[j];\n      if (product > max_product) {\n        max_product = product;\n      }\n    }\n  }\n  return max_product;",
    "    long max_product = 0;\n    for (int i = 0; i < list1.size() - 1; i++) {\n        for (int j = i + 1; j < list1.size(); j++) {\n            long product = list1[i] * list1[j];\n            if (product > max_product) {\n                max_product = product;\n            }\n        }\n    }\n    return max_product;",
    "    // Write your code here\n    long max_product = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        for (int j = i + 1; j < list1.size(); j++) {\n            long product = list1[i] * list1[j];\n            if (product > max_product) {\n                max_product = product;\n            }\n        }\n    }\n    return max_product;",
    "    // Write your code here\n    long max_product = 0;\n    for(int i = 0; i < list1.size(); i++) {\n        for(int j = i+1; j < list1.size(); j++) {\n            long product = list1[i] * list1[j];\n            if(product > max_product) {\n                max_product = product;\n            }\n        }\n    }\n    return max_product;",
    "  long max_product = 0;\n  long product = 0;\n  for (int i = 0; i < list1.size(); i++) {\n    for (int j = i + 1; j < list1.size(); j++) {\n      product = list1[i] * list1[j];\n      if (product > max_product) {\n        max_product = product;\n      }\n    }\n  }\n  return max_product;",
    "    long max_product = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        for (int j = i+1; j < list1.size(); j++) {\n            if (std::abs(list1[i]*list1[j]) > max_product) {\n                max_product = std::abs(list1[i]*list1[j]);\n            }\n        }\n    }\n    return max_product;",
    "    long max_product = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        for (int j = i+1; j < list1.size(); j++) {\n            long product = list1[i] * list1[j];\n            if (product > max_product) {\n                max_product = product;\n            }\n        }\n    }\n    return max_product;",
    "    long max_product = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        for (int j = i + 1; j < list1.size(); j++) {\n            long product = list1[i] * list1[j];\n            if (product > max_product) {\n                max_product = product;\n            }\n        }\n    }\n    return max_product;",
    "    long max_product = 0;\n    for(int i = 0; i < list1.size(); i++) {\n        for(int j = i + 1; j < list1.size(); j++) {\n            long product = list1[i] * list1[j];\n            if(product > max_product) {\n                max_product = product;\n            }\n        }\n    }\n    return max_product;",
    "    long max_prod = 0;\n    for(int i = 0; i < list1.size(); i++) {\n        for(int j = i + 1; j < list1.size(); j++) {\n            long prod = list1[i] * list1[j];\n            if(prod > max_prod) {\n                max_prod = prod;\n            }\n        }\n    }\n    return max_prod;",
    "    long max_product = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        for (int j = i + 1; j < list1.size(); j++) {\n            if (list1[i] * list1[j] > max_product) {\n                max_product = list1[i] * list1[j];\n            }\n        }\n    }\n    return max_product;",
    "    // Write your code here\n    long max_product = 0;\n    for(int i = 0; i < list1.size(); i++) {\n        for(int j = i + 1; j < list1.size(); j++) {\n            long product = list1[i] * list1[j];\n            if(product > max_product) {\n                max_product = product;\n            }\n        }\n    }\n    return max_product;",
    "  long max_product = 0;\n  for (int i = 0; i < list1.size(); i++) {\n    for (int j = i + 1; j < list1.size(); j++) {\n      long product = list1[i] * list1[j];\n      if (product > max_product) {\n        max_product = product;\n      }\n    }\n  }\n  return max_product;",
    "    long max_product = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        for (int j = i + 1; j < list1.size(); j++) {\n            long product = list1[i] * list1[j];\n            if (product > max_product) {\n                max_product = product;\n            }\n        }\n    }\n    return max_product;",
    "    long max_product = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        for (int j = i + 1; j < list1.size(); j++) {\n            long product = list1[i] * list1[j];\n            if (product > max_product) {\n                max_product = product;\n            }\n        }\n    }\n    return max_product;",
    "    long max_product = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        for (int j = i + 1; j < list1.size(); j++) {\n            long product = list1[i] * list1[j];\n            if (product > max_product) {\n                max_product = product;\n            }\n        }\n    }\n    return max_product;",
    "    long max_product = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        for (int j = i + 1; j < list1.size(); j++) {\n            long product = list1[i] * list1[j];\n            if (product > max_product) {\n                max_product = product;\n            }\n        }\n    }\n    return max_product;",
    "  long max_product = 0;\n  for (int i = 0; i < list1.size(); i++) {\n    for (int j = i + 1; j < list1.size(); j++) {\n      long product = list1[i] * list1[j];\n      if (product > max_product) {\n        max_product = product;\n      }\n    }\n  }\n  return max_product;",
    "    long max_product = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        for (int j = i + 1; j < list1.size(); j++) {\n            long product = list1[i] * list1[j];\n            if (product > max_product) {\n                max_product = product;\n            }\n        }\n    }\n    return max_product;",
    "    long max_product = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        for (int j = i + 1; j < list1.size(); j++) {\n            long product = list1[i] * list1[j];\n            if (product > max_product) {\n                max_product = product;\n            }\n        }\n    }\n    return max_product;",
    "    long max_product = 0;\n    for(int i = 0; i < list1.size(); i++) {\n        for(int j = i + 1; j < list1.size(); j++) {\n            long product = list1[i] * list1[j];\n            if(product > max_product) {\n                max_product = product;\n            }\n        }\n    }\n    return max_product;",
    "    long max_product = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        for (int j = i + 1; j < list1.size(); j++) {\n            long product = list1[i] * list1[j];\n            if (product > max_product) {\n                max_product = product;\n            }\n        }\n    }\n    return max_product;",
    "    long max_product = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        for (int j = i + 1; j < list1.size(); j++) {\n            long product = list1[i] * list1[j];\n            if (product > max_product) {\n                max_product = product;\n            }\n        }\n    }\n    return max_product;",
    "    long max_product = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        for (int j = i + 1; j < list1.size(); j++) {\n            long product = list1[i] * list1[j];\n            if (product > max_product) {\n                max_product = product;\n            }\n        }\n    }\n    return max_product;",
    "    long max_product = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        for (int j = i+1; j < list1.size(); j++) {\n            long product = list1[i] * list1[j];\n            if (product > max_product) {\n                max_product = product;\n            }\n        }\n    }\n    return max_product;",
    "    long max_product = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        for (int j = i + 1; j < list1.size(); j++) {\n            long product = list1[i] * list1[j];\n            if (product > max_product) {\n                max_product = product;\n            }\n        }\n    }\n    return max_product;",
    "    long max_product = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        for (int j = i + 1; j < list1.size(); j++) {\n            long product = list1[i] * list1[j];\n            if (product > max_product) {\n                max_product = product;\n            }\n        }\n    }\n    return max_product;",
    "    long max_product = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        for (int j = i + 1; j < list1.size(); j++) {\n            long product = list1[i] * list1[j];\n            if (product > max_product) {\n                max_product = product;\n            }\n        }\n    }\n    return max_product;",
    "    long max_product = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        for (int j = i + 1; j < list1.size(); j++) {\n            long product = list1[i] * list1[j];\n            if (product > max_product) {\n                max_product = product;\n            }\n        }\n    }\n    return max_product;",
    "    // Write your code here\n    long max_product = 0;\n    for(int i = 0; i < list1.size(); i++){\n        for(int j = i+1; j < list1.size(); j++){\n            long product = list1[i] * list1[j];\n            if(product > max_product){\n                max_product = product;\n            }\n        }\n    }\n    return max_product;",
    "    long max_product = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        for (int j = i + 1; j < list1.size(); j++) {\n            long product = list1[i] * list1[j];\n            if (product > max_product) {\n                max_product = product;\n            }\n        }\n    }\n    return max_product;",
    "    // Write your code here\n    long max_product = 0;\n    for(int i = 0; i < list1.size(); i+=2){\n        for(int j = i+2; j < list1.size(); j+=2){\n            long product = list1[i] * list1[i+1] * list1[j] * list1[j+1];\n            if(product > max_product){\n                max_product = product;\n            }\n        }\n    }\n    return max_product;",
    "    long max_product = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        for (int j = i + 1; j < list1.size(); j++) {\n            long product = list1[i] * list1[j];\n            if (product > max_product) {\n                max_product = product;\n            }\n        }\n    }\n    return max_product;",
    "    long max_product = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        for (int j = i + 1; j < list1.size(); j++) {\n            max_product = std::max(max_product, list1[i] * list1[j]);\n        }\n    }\n    return max_product;",
    "    long max_product = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        for (int j = i + 1; j < list1.size(); j++) {\n            long product = list1[i] * list1[j];\n            if (product > max_product) {\n                max_product = product;\n            }\n        }\n    }\n    return max_product;",
    "    // Write your code here\n    long max_product = 0;\n    for(int i=0;i<list1.size();i+=2)\n    {\n        for(int j=i+2;j<list1.size();j+=2)\n        {\n            long product = list1[i]*list1[i+1]*list1[j]*list1[j+1];\n            if(product>max_product)\n            {\n                max_product = product;\n            }\n        }\n    }\n    return max_product;",
    "    long max_product = 0;\n    long max_product_temp = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        for (int j = i + 1; j < list1.size(); j++) {\n            max_product_temp = list1[i] * list1[j];\n            if (max_product_temp > max_product) {\n                max_product = max_product_temp;\n            }\n        }\n    }\n    return max_product;",
    "    long max_product = 0;\n    for(int i = 0; i < list1.size(); i++) {\n        for(int j = i + 1; j < list1.size(); j++) {\n            long product = list1[i] * list1[j];\n            if(product > max_product) {\n                max_product = product;\n            }\n        }\n    }\n    return max_product;"
  ]
}
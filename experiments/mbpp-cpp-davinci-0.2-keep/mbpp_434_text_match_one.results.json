{
  "name": "mbpp_434_text_match_one",
  "language": "cpp",
  "prompt": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_434_text_match_one.py",
  "prompt_terminology": "verbatim",
  "tests": "}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "results": [
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i] == 'a') {\n            for (int j = i + 1; j < text.size(); j++) {\n                if (text[j] == 'b') {\n                    match = true;\n                } else {\n                    match = false;\n                    break;\n                }\n            }\n        }\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "tmpqrwimqg8: /tmp/tmpqrwimqg8.cpp:24: int main(): Assertion `candidate((\"abba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    int i = 0;\n    while (i < text.size()) {\n        if (text[i] == 'a') {\n            match = true;\n            i++;\n            while (i < text.size() && text[i] == 'b') {\n                i++;\n            }\n        }\n        else {\n            match = false;\n            i++;\n        }\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509801,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    int i = 0;\n    while (i < text.size()) {\n        if (text[i] == 'a') {\n            i++;\n            while (text[i] == 'b') {\n                i++;\n            }\n            match = true;\n        }\n        i++;\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "tmp5curbph2: /tmp/tmp5curbph2.cpp:21: int main(): Assertion `candidate((\"ac\")) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    int i = 0;\n    while (i < text.size()) {\n        if (text[i] == 'a') {\n            i++;\n            while (text[i] == 'b') {\n                i++;\n            }\n            match = true;\n        }\n        i++;\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "tmp5curbph2: /tmp/tmp5curbph2.cpp:21: int main(): Assertion `candidate((\"ac\")) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    int i = 0;\n    while (i < text.size()) {\n        if (text[i] == 'a') {\n            i++;\n            while (i < text.size() && text[i] == 'b') {\n                i++;\n            }\n            match = true;\n        }\n        else {\n            i++;\n        }\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509801,
      "stdout": "",
      "stderr": "tmp8a_257xf: /tmp/tmp8a_257xf.cpp:23: int main(): Assertion `candidate((\"ac\")) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    int i = 0;\n    while (i < text.size()) {\n        if (text[i] == 'a') {\n            i++;\n            while (text[i] == 'b') {\n                i++;\n            }\n            match = true;\n        }\n        i++;\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "tmp5curbph2: /tmp/tmp5curbph2.cpp:21: int main(): Assertion `candidate((\"ac\")) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    int i = 0;\n    while (i < text.size()) {\n        if (text[i] == 'a') {\n            i++;\n            while (text[i] == 'b') {\n                i++;\n            }\n            match = true;\n        }\n        i++;\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "tmp5curbph2: /tmp/tmp5curbph2.cpp:21: int main(): Assertion `candidate((\"ac\")) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    int a = 0;\n    int b = 0;\n    for (int i = 0; i < text.length(); i++) {\n        if (text[i] == 'a') {\n            a++;\n        }\n        if (text[i] == 'b') {\n            b++;\n        }\n    }\n    if (a == 1 && b >= 1) {\n        match = true;\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509801,
      "stdout": "",
      "stderr": "tmp7oquhicr: /tmp/tmp7oquhicr.cpp:25: int main(): Assertion `candidate((\"abba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    int a_count = 0;\n    int b_count = 0;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i] == 'a') {\n            a_count++;\n        }\n        if (text[i] == 'b') {\n            b_count++;\n        }\n    }\n    if (a_count == 1 && b_count >= 1) {\n        match = true;\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509801,
      "stdout": "",
      "stderr": "tmply0eqobo: /tmp/tmply0eqobo.cpp:25: int main(): Assertion `candidate((\"abba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i] == 'a') {\n            for (int j = i+1; j < text.size(); j++) {\n                if (text[j] == 'b') {\n                    match = true;\n                }\n            }\n        }\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509801,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i] == 'a') {\n            for (int j = i+1; j < text.size(); j++) {\n                if (text[j] == 'b') {\n                    match = true;\n                }\n            }\n        }\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509801,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    int i = 0;\n    while (i < text.size()) {\n        if (text[i] == 'a') {\n            i++;\n            while (text[i] == 'b') {\n                i++;\n            }\n            match = true;\n        }\n        i++;\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "tmp5curbph2: /tmp/tmp5curbph2.cpp:21: int main(): Assertion `candidate((\"ac\")) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    int i = 0;\n    while (i < text.size()) {\n        if (text[i] == 'a') {\n            i++;\n            while (text[i] == 'b') {\n                i++;\n            }\n            match = true;\n        }\n        i++;\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "tmp5curbph2: /tmp/tmp5curbph2.cpp:21: int main(): Assertion `candidate((\"ac\")) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    for(int i = 0; i < text.size(); i++) {\n        if(text[i] == 'a') {\n            match = true;\n        } else if(text[i] == 'b' && match) {\n            match = true;\n        } else {\n            match = false;\n        }\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i] == 'a') {\n            match = true;\n        } else if (text[i] == 'b' && match) {\n            match = true;\n        } else {\n            match = false;\n        }\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509801,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    int i = 0;\n    while (i < text.size()) {\n        if (text[i] == 'a') {\n            i++;\n            while (text[i] == 'b') {\n                i++;\n            }\n            match = true;\n        }\n        i++;\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "tmp5curbph2: /tmp/tmp5curbph2.cpp:21: int main(): Assertion `candidate((\"ac\")) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i] == 'a') {\n            for (int j = i+1; j < text.size(); j++) {\n                if (text[j] == 'b') {\n                    match = true;\n                }\n            }\n        }\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509801,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n  bool match = false;\n  int a = 0;\n  int b = 0;\n  for (int i = 0; i < text.size(); i++) {\n    if (text[i] == 'a') {\n      a++;\n    }\n    if (text[i] == 'b') {\n      b++;\n    }\n  }\n  if (a == 1 && b >= 1) {\n    match = true;\n  }\n  return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509801,
      "stdout": "",
      "stderr": "tmpcuc8bypc: /tmp/tmpcuc8bypc.cpp:25: int main(): Assertion `candidate((\"abba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n  bool match = false;\n  int i = 0;\n  while (i < text.size()) {\n    if (text[i] == 'a') {\n      i++;\n      while (text[i] == 'b') {\n        i++;\n      }\n      match = true;\n    }\n    i++;\n  }\n  return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509801,
      "stdout": "",
      "stderr": "tmp7p1tvqc1: /tmp/tmp7p1tvqc1.cpp:21: int main(): Assertion `candidate((\"ac\")) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    int i = 0;\n    while (i < text.size()) {\n        if (text[i] == 'a') {\n            i++;\n            while (text[i] == 'b') {\n                i++;\n            }\n            match = true;\n        }\n        i++;\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "tmp5curbph2: /tmp/tmp5curbph2.cpp:21: int main(): Assertion `candidate((\"ac\")) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    int i = 0;\n    while (i < text.size()) {\n        if (text[i] == 'a') {\n            i++;\n            while (text[i] == 'b') {\n                i++;\n            }\n            match = true;\n        }\n        i++;\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "tmp5curbph2: /tmp/tmp5curbph2.cpp:21: int main(): Assertion `candidate((\"ac\")) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    for(int i = 0; i < text.size(); i++) {\n        if(text[i] == 'a') {\n            match = true;\n        } else if(text[i] == 'b' && match) {\n            match = true;\n        } else {\n            match = false;\n        }\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    int i = 0;\n    while (i < text.size()) {\n        if (text[i] == 'a') {\n            i++;\n            while (text[i] == 'b') {\n                i++;\n            }\n            match = true;\n        }\n        i++;\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "tmp5curbph2: /tmp/tmp5curbph2.cpp:21: int main(): Assertion `candidate((\"ac\")) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    int i = 0;\n    while (i < text.size()) {\n        if (text[i] == 'a') {\n            i++;\n            while (text[i] == 'b') {\n                i++;\n            }\n            match = true;\n        }\n        i++;\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "tmp5curbph2: /tmp/tmp5curbph2.cpp:21: int main(): Assertion `candidate((\"ac\")) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i] == 'a') {\n            for (int j = i + 1; j < text.size(); j++) {\n                if (text[j] == 'b') {\n                    match = true;\n                } else {\n                    match = false;\n                    break;\n                }\n            }\n        }\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "tmpqrwimqg8: /tmp/tmpqrwimqg8.cpp:24: int main(): Assertion `candidate((\"abba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    for(int i = 0; i < text.length(); i++) {\n        if(text[i] == 'a') {\n            for(int j = i+1; j < text.length(); j++) {\n                if(text[j] == 'b') {\n                    match = true;\n                }\n            }\n        }\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1666123981,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    int i = 0;\n    while (i < text.size()) {\n        if (text[i] == 'a') {\n            i++;\n            while (text[i] == 'b') {\n                i++;\n            }\n            match = true;\n        }\n        i++;\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "tmp5curbph2: /tmp/tmp5curbph2.cpp:21: int main(): Assertion `candidate((\"ac\")) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    int a = 0;\n    int b = 0;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i] == 'a') {\n            a++;\n        }\n        if (text[i] == 'b') {\n            b++;\n        }\n    }\n    if (a == 1 && b >= 1) {\n        match = true;\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1666123982,
      "stdout": "",
      "stderr": "tmph14b2ep1: /tmp/tmph14b2ep1.cpp:25: int main(): Assertion `candidate((\"abba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n  bool match = false;\n  int i = 0;\n  while (i < text.size()) {\n    if (text[i] == 'a') {\n      i++;\n      while (text[i] == 'b') {\n        i++;\n      }\n      match = true;\n    }\n    i++;\n  }\n  return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509801,
      "stdout": "",
      "stderr": "tmp7p1tvqc1: /tmp/tmp7p1tvqc1.cpp:21: int main(): Assertion `candidate((\"ac\")) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i] == 'a') {\n            for (int j = i + 1; j < text.size(); j++) {\n                if (text[j] == 'b') {\n                    match = true;\n                }\n            }\n        }\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    for(int i = 0; i < text.size(); i++) {\n        if(text[i] == 'a') {\n            for(int j = i+1; j < text.size(); j++) {\n                if(text[j] == 'b') {\n                    match = true;\n                }\n            }\n        }\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    int i = 0;\n    while (i < text.size()) {\n        if (text[i] == 'a') {\n            i++;\n            while (text[i] == 'b') {\n                i++;\n            }\n            match = true;\n        }\n        i++;\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "tmp5curbph2: /tmp/tmp5curbph2.cpp:21: int main(): Assertion `candidate((\"ac\")) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    int i = 0;\n    while (i < text.size()) {\n        if (text[i] == 'a') {\n            i++;\n            while (i < text.size() && text[i] == 'b') {\n                i++;\n            }\n            match = true;\n        }\n        else {\n            i++;\n        }\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509801,
      "stdout": "",
      "stderr": "tmp8a_257xf: /tmp/tmp8a_257xf.cpp:23: int main(): Assertion `candidate((\"ac\")) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    int i = 0;\n    while (i < text.size()) {\n        if (text[i] == 'a') {\n            i++;\n            while (text[i] == 'b') {\n                i++;\n            }\n            match = true;\n        }\n        i++;\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "tmp5curbph2: /tmp/tmp5curbph2.cpp:21: int main(): Assertion `candidate((\"ac\")) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    int a_count = 0;\n    int b_count = 0;\n    for (int i = 0; i < text.length(); i++) {\n        if (text[i] == 'a') {\n            a_count++;\n        }\n        else if (text[i] == 'b') {\n            b_count++;\n        }\n    }\n    if (a_count == 1 && b_count >= 1) {\n        match = true;\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "tmp4u29dy_r: /tmp/tmp4u29dy_r.cpp:25: int main(): Assertion `candidate((\"abba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    for (int i = 0; i < text.length(); i++) {\n        if (text[i] == 'a') {\n            for (int j = i + 1; j < text.length(); j++) {\n                if (text[j] == 'b') {\n                    match = true;\n                } else {\n                    match = false;\n                    break;\n                }\n            }\n        }\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1666123977,
      "stdout": "",
      "stderr": "tmpzs5lpe_l: /tmp/tmpzs5lpe_l.cpp:24: int main(): Assertion `candidate((\"abba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    for(int i = 0; i < text.size(); i++) {\n        if(text[i] == 'a') {\n            for(int j = i+1; j < text.size(); j++) {\n                if(text[j] == 'b') {\n                    match = true;\n                }\n            }\n        }\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    int i = 0;\n    while (i < text.size()) {\n        if (text[i] == 'a') {\n            i++;\n            while (text[i] == 'b') {\n                i++;\n            }\n            match = true;\n        }\n        i++;\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "tmp5curbph2: /tmp/tmp5curbph2.cpp:21: int main(): Assertion `candidate((\"ac\")) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i] == 'a') {\n            for (int j = i + 1; j < text.size(); j++) {\n                if (text[j] == 'b') {\n                    match = true;\n                }\n            }\n        }\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    int i = 0;\n    while (i < text.size()) {\n        if (text[i] == 'a') {\n            i++;\n            while (i < text.size() && text[i] == 'b') {\n                i++;\n            }\n            match = true;\n        }\n        else {\n            i++;\n        }\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509801,
      "stdout": "",
      "stderr": "tmp8a_257xf: /tmp/tmp8a_257xf.cpp:23: int main(): Assertion `candidate((\"ac\")) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    int i = 0;\n    while (i < text.size()) {\n        if (text[i] == 'a') {\n            i++;\n            while (text[i] == 'b') {\n                i++;\n            }\n            match = true;\n        }\n        i++;\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "tmp5curbph2: /tmp/tmp5curbph2.cpp:21: int main(): Assertion `candidate((\"ac\")) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    int i = 0;\n    while (i < text.size()) {\n        if (text[i] == 'a') {\n            i++;\n            while (text[i] == 'b') {\n                i++;\n            }\n            match = true;\n        }\n        i++;\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "tmp5curbph2: /tmp/tmp5curbph2.cpp:21: int main(): Assertion `candidate((\"ac\")) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    int i = 0;\n    while (i < text.size()) {\n        if (text[i] == 'a') {\n            i++;\n            while (text[i] == 'b') {\n                i++;\n            }\n            match = true;\n        }\n        i++;\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "tmp5curbph2: /tmp/tmp5curbph2.cpp:21: int main(): Assertion `candidate((\"ac\")) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    int i = 0;\n    while (i < text.size()) {\n        if (text[i] == 'a') {\n            i++;\n            while (text[i] == 'b') {\n                i++;\n            }\n            match = true;\n        }\n        i++;\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "tmp5curbph2: /tmp/tmp5curbph2.cpp:21: int main(): Assertion `candidate((\"ac\")) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i] == 'a') {\n            for (int j = i + 1; j < text.size(); j++) {\n                if (text[j] == 'b') {\n                    match = true;\n                } else {\n                    match = false;\n                    break;\n                }\n            }\n        }\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "tmpqrwimqg8: /tmp/tmpqrwimqg8.cpp:24: int main(): Assertion `candidate((\"abba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    int i = 0;\n    while (i < text.size()) {\n        if (text[i] == 'a') {\n            i++;\n            while (text[i] == 'b') {\n                i++;\n            }\n            match = true;\n        }\n        i++;\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "tmp5curbph2: /tmp/tmp5curbph2.cpp:21: int main(): Assertion `candidate((\"ac\")) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i] == 'a') {\n            for (int j = i + 1; j < text.size(); j++) {\n                if (text[j] == 'b') {\n                    match = true;\n                } else {\n                    match = false;\n                    break;\n                }\n            }\n        }\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "tmpqrwimqg8: /tmp/tmpqrwimqg8.cpp:24: int main(): Assertion `candidate((\"abba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    int a_count = 0;\n    int b_count = 0;\n    for (int i = 0; i < text.length(); i++) {\n        if (text[i] == 'a') {\n            a_count++;\n        }\n        if (text[i] == 'b') {\n            b_count++;\n        }\n    }\n    if (a_count == 1 && b_count > 0) {\n        match = true;\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1666123981,
      "stdout": "",
      "stderr": "tmp6c_aozey: /tmp/tmp6c_aozey.cpp:25: int main(): Assertion `candidate((\"abba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    int i = 0;\n    while (i < text.size()) {\n        if (text[i] == 'a') {\n            i++;\n            while (text[i] == 'b') {\n                i++;\n            }\n            match = true;\n        }\n        i++;\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "tmp5curbph2: /tmp/tmp5curbph2.cpp:21: int main(): Assertion `candidate((\"ac\")) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i] == 'a') {\n            for (int j = i + 1; j < text.size(); j++) {\n                if (text[j] == 'b') {\n                    match = true;\n                }\n            }\n        }\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    int i = 0;\n    while (i < text.length()) {\n        if (text[i] == 'a') {\n            i++;\n            while (text[i] == 'b') {\n                i++;\n            }\n            match = true;\n        }\n        i++;\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1666123981,
      "stdout": "",
      "stderr": "tmp2bqqxbef: /tmp/tmp2bqqxbef.cpp:21: int main(): Assertion `candidate((\"ac\")) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    int i = 0;\n    while (i < text.size()) {\n        if (text[i] == 'a') {\n            i++;\n            while (text[i] == 'b') {\n                i++;\n            }\n            match = true;\n        }\n        i++;\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "tmp5curbph2: /tmp/tmp5curbph2.cpp:21: int main(): Assertion `candidate((\"ac\")) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i] == 'a') {\n            for (int j = i + 1; j < text.size(); j++) {\n                if (text[j] == 'b') {\n                    match = true;\n                }\n            }\n        }\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i] == 'a') {\n            for (int j = i + 1; j < text.size(); j++) {\n                if (text[j] == 'b') {\n                    match = true;\n                }\n            }\n        }\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n  bool match = false;\n  int i = 0;\n  while(i < text.size()) {\n    if(text[i] == 'a') {\n      i++;\n      while(text[i] == 'b') {\n        i++;\n      }\n      match = true;\n    }\n    i++;\n  }\n  return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1666123981,
      "stdout": "",
      "stderr": "tmpjnvev8vy: /tmp/tmpjnvev8vy.cpp:21: int main(): Assertion `candidate((\"ac\")) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    int i = 0;\n    while (i < text.size()) {\n        if (text[i] == 'a') {\n            i++;\n            while (text[i] == 'b') {\n                i++;\n            }\n            match = true;\n        }\n        i++;\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "tmp5curbph2: /tmp/tmp5curbph2.cpp:21: int main(): Assertion `candidate((\"ac\")) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n  bool match = false;\n  int i = 0;\n  while (i < text.size()) {\n    if (text[i] == 'a') {\n      i++;\n      while (text[i] == 'b') {\n        i++;\n      }\n      match = true;\n    }\n    i++;\n  }\n  return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509801,
      "stdout": "",
      "stderr": "tmp7p1tvqc1: /tmp/tmp7p1tvqc1.cpp:21: int main(): Assertion `candidate((\"ac\")) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    for(int i = 0; i < text.size(); i++) {\n        if(text[i] == 'a') {\n            match = true;\n        } else if(text[i] == 'b' && match) {\n            match = true;\n        } else {\n            match = false;\n        }\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    int i = 0;\n    while (i < text.size()) {\n        if (text[i] == 'a') {\n            i++;\n            while (text[i] == 'b') {\n                i++;\n            }\n            match = true;\n        }\n        i++;\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "tmp5curbph2: /tmp/tmp5curbph2.cpp:21: int main(): Assertion `candidate((\"ac\")) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i] == 'a') {\n            match = true;\n        } else if (text[i] == 'b' && match) {\n            match = true;\n        } else {\n            match = false;\n        }\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509801,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    int i = 0;\n    while (i < text.size()) {\n        if (text[i] == 'a') {\n            i++;\n            while (text[i] == 'b') {\n                i++;\n            }\n            match = true;\n        }\n        i++;\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "tmp5curbph2: /tmp/tmp5curbph2.cpp:21: int main(): Assertion `candidate((\"ac\")) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    int i = 0;\n    while (i < text.size()) {\n        if (text[i] == 'a') {\n            i++;\n            while (text[i] == 'b') {\n                i++;\n            }\n            match = true;\n        }\n        i++;\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "tmp5curbph2: /tmp/tmp5curbph2.cpp:21: int main(): Assertion `candidate((\"ac\")) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    for(int i = 0; i < text.size(); i++) {\n        if(text[i] == 'a') {\n            match = true;\n        } else if(text[i] == 'b' && match) {\n            match = true;\n        } else {\n            match = false;\n        }\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    int i = 0;\n    while (i < text.size()) {\n        if (text[i] == 'a') {\n            i++;\n            while (text[i] == 'b') {\n                i++;\n            }\n            match = true;\n        }\n        i++;\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "tmp5curbph2: /tmp/tmp5curbph2.cpp:21: int main(): Assertion `candidate((\"ac\")) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    int j = 0;\n    for (int i = 0; i < text.length(); i++) {\n        if (text[i] == 'a') {\n            j = i + 1;\n            match = true;\n        }\n        else if (text[i] == 'b' && match) {\n            j++;\n        }\n        else {\n            match = false;\n        }\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1666123982,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    int i = 0;\n    while (i < text.size()) {\n        if (text[i] == 'a') {\n            i++;\n            while (text[i] == 'b') {\n                i++;\n            }\n            match = true;\n        }\n        i++;\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "tmp5curbph2: /tmp/tmp5curbph2.cpp:21: int main(): Assertion `candidate((\"ac\")) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i] == 'a') {\n            for (int j = i + 1; j < text.size(); j++) {\n                if (text[j] == 'b') {\n                    match = true;\n                }\n            }\n        }\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    int i = 0;\n    while (i < text.size()) {\n        if (text[i] == 'a') {\n            i++;\n            while (text[i] == 'b') {\n                i++;\n            }\n            match = true;\n        }\n        i++;\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "tmp5curbph2: /tmp/tmp5curbph2.cpp:21: int main(): Assertion `candidate((\"ac\")) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    for(int i = 0; i < text.size(); i++) {\n        if(text[i] == 'a') {\n            match = true;\n        } else if(text[i] == 'b' && match) {\n            match = true;\n        } else {\n            match = false;\n        }\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    int a = 0;\n    int b = 0;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i] == 'a') {\n            a++;\n        }\n        if (text[i] == 'b') {\n            b++;\n        }\n    }\n    if (a == 1 && b >= 1) {\n        match = true;\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1666123982,
      "stdout": "",
      "stderr": "tmph14b2ep1: /tmp/tmph14b2ep1.cpp:25: int main(): Assertion `candidate((\"abba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    for (int i = 0; i < text.length(); i++) {\n        if (text[i] == 'a') {\n            for (int j = i+1; j < text.length(); j++) {\n                if (text[j] == 'b') {\n                    match = true;\n                }\n            }\n        }\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1666123981,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    int i = 0;\n    while (i < text.size()) {\n        if (text[i] == 'a') {\n            i++;\n            while (text[i] == 'b') {\n                i++;\n            }\n            match = true;\n        }\n        i++;\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "tmp5curbph2: /tmp/tmp5curbph2.cpp:21: int main(): Assertion `candidate((\"ac\")) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    int i = 0;\n    while (i < text.size()) {\n        if (text[i] == 'a') {\n            i++;\n            while (text[i] == 'b') {\n                i++;\n            }\n            match = true;\n        }\n        i++;\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "tmp5curbph2: /tmp/tmp5curbph2.cpp:21: int main(): Assertion `candidate((\"ac\")) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    int i = 0;\n    int j = 0;\n    int k = 0;\n    int count = 0;\n    while (text[i] != '\\0') {\n        if (text[i] == 'a') {\n            j = i + 1;\n            while (text[j] != '\\0') {\n                if (text[j] == 'b') {\n                    count++;\n                }\n                j++;\n            }\n            if (count > 0) {\n                match = true;\n                break;\n            }\n        }\n        i++;\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1666123981,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    int i = 0;\n    while (i < text.size()) {\n        if (text[i] == 'a') {\n            i++;\n            while (text[i] == 'b') {\n                i++;\n            }\n            match = true;\n        }\n        i++;\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "tmp5curbph2: /tmp/tmp5curbph2.cpp:21: int main(): Assertion `candidate((\"ac\")) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    int i = 0;\n    while (i < text.size()) {\n        if (text[i] == 'a') {\n            i++;\n            while (text[i] == 'b') {\n                i++;\n            }\n            match = true;\n        }\n        i++;\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "tmp5curbph2: /tmp/tmp5curbph2.cpp:21: int main(): Assertion `candidate((\"ac\")) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    int i = 0;\n    while(i < text.size()) {\n        if(text[i] == 'a') {\n            match = true;\n            i++;\n            while(text[i] == 'b') {\n                i++;\n            }\n        }\n        else {\n            match = false;\n            i++;\n        }\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1666123982,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    int i = 0;\n    while (i < text.size()) {\n        if (text[i] == 'a') {\n            i++;\n            while (text[i] == 'b') {\n                i++;\n            }\n            match = true;\n        }\n        i++;\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "tmp5curbph2: /tmp/tmp5curbph2.cpp:21: int main(): Assertion `candidate((\"ac\")) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n  bool match = false;\n  int i = 0;\n  while (i < text.size()) {\n    if (text[i] == 'a') {\n      i++;\n      while (text[i] == 'b') {\n        i++;\n      }\n      match = true;\n    }\n    i++;\n  }\n  return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509801,
      "stdout": "",
      "stderr": "tmp7p1tvqc1: /tmp/tmp7p1tvqc1.cpp:21: int main(): Assertion `candidate((\"ac\")) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    for (int i = 0; i < text.length(); i++) {\n        if (text[i] == 'a') {\n            for (int j = i + 1; j < text.length(); j++) {\n                if (text[j] == 'b') {\n                    match = true;\n                }\n            }\n        }\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1666123981,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    int i = 0;\n    while (i < text.length()) {\n        if (text[i] == 'a') {\n            i++;\n            while (text[i] == 'b') {\n                i++;\n            }\n            match = true;\n        }\n        i++;\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1666123981,
      "stdout": "",
      "stderr": "tmp2bqqxbef: /tmp/tmp2bqqxbef.cpp:21: int main(): Assertion `candidate((\"ac\")) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    int i = 0;\n    int a_count = 0;\n    int b_count = 0;\n    while (i < text.size()) {\n        if (text[i] == 'a') {\n            a_count++;\n            i++;\n        }\n        else if (text[i] == 'b') {\n            b_count++;\n            i++;\n        }\n        else {\n            i++;\n        }\n    }\n    if (a_count == 1 && b_count >= 1) {\n        match = true;\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1666123981,
      "stdout": "",
      "stderr": "tmp38c_9svl: /tmp/tmp38c_9svl.cpp:31: int main(): Assertion `candidate((\"abba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    for(int i = 0; i < text.size(); i++) {\n        if(text[i] == 'a') {\n            for(int j = i+1; j < text.size(); j++) {\n                if(text[j] == 'b') {\n                    match = true;\n                }\n            }\n        }\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    int i = 0;\n    while (i < text.size()) {\n        if (text[i] == 'a') {\n            i++;\n            while (text[i] == 'b') {\n                i++;\n            }\n            match = true;\n        }\n        i++;\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "tmp5curbph2: /tmp/tmp5curbph2.cpp:21: int main(): Assertion `candidate((\"ac\")) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    int i = 0;\n    while (i < text.length()) {\n        if (text[i] == 'a') {\n            i++;\n            while (i < text.length() && text[i] == 'b') {\n                i++;\n            }\n            match = true;\n        }\n        else {\n            i++;\n        }\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1666123981,
      "stdout": "",
      "stderr": "tmpjee4mxdn: /tmp/tmpjee4mxdn.cpp:23: int main(): Assertion `candidate((\"ac\")) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    for(int i = 0; i < text.size(); i++) {\n        if(text[i] == 'a') {\n            match = true;\n        } else if(text[i] == 'b' && match) {\n            match = true;\n        } else {\n            match = false;\n        }\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    int a = 0;\n    int b = 0;\n    for (int i = 0; i < text.length(); i++) {\n        if (text[i] == 'a') {\n            a++;\n        }\n        if (text[i] == 'b') {\n            b++;\n        }\n    }\n    if (a == 1 && b > 0) {\n        match = true;\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1666123982,
      "stdout": "",
      "stderr": "tmpk_43rnqg: /tmp/tmpk_43rnqg.cpp:25: int main(): Assertion `candidate((\"abba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    int i = 0;\n    while (i < text.length()) {\n        if (text[i] == 'a') {\n            i++;\n            while (text[i] == 'b') {\n                i++;\n            }\n            match = true;\n        }\n        i++;\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1666123981,
      "stdout": "",
      "stderr": "tmp2bqqxbef: /tmp/tmp2bqqxbef.cpp:21: int main(): Assertion `candidate((\"ac\")) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    int i = 0;\n    while (i < text.size()) {\n        if (text[i] == 'a') {\n            i++;\n            while (text[i] == 'b') {\n                i++;\n            }\n            match = true;\n        }\n        i++;\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "tmp5curbph2: /tmp/tmp5curbph2.cpp:21: int main(): Assertion `candidate((\"ac\")) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    int i = 0;\n    while (i < text.size()) {\n        if (text[i] == 'a') {\n            i++;\n            while (text[i] == 'b') {\n                i++;\n            }\n            match = true;\n        }\n        i++;\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "tmp5curbph2: /tmp/tmp5curbph2.cpp:21: int main(): Assertion `candidate((\"ac\")) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    for(int i = 0; i < text.size(); i++) {\n        if(text[i] == 'a') {\n            for(int j = i + 1; j < text.size(); j++) {\n                if(text[j] == 'b') {\n                    match = true;\n                }\n                else {\n                    match = false;\n                    break;\n                }\n            }\n        }\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1666123981,
      "stdout": "",
      "stderr": "tmps9q6in7n: /tmp/tmps9q6in7n.cpp:25: int main(): Assertion `candidate((\"abba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    int i = 0;\n    while (i < text.size()) {\n        if (text[i] == 'a') {\n            i++;\n            while (text[i] == 'b') {\n                i++;\n            }\n            match = true;\n        }\n        i++;\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "tmp5curbph2: /tmp/tmp5curbph2.cpp:21: int main(): Assertion `candidate((\"ac\")) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i] == 'a') {\n            for (int j = i + 1; j < text.size(); j++) {\n                if (text[j] == 'b') {\n                    match = true;\n                }\n                else {\n                    match = false;\n                    break;\n                }\n            }\n        }\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "tmpioip7fsz: /tmp/tmpioip7fsz.cpp:25: int main(): Assertion `candidate((\"abba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    int i = 0;\n    while (i < text.size()) {\n        if (text[i] == 'a') {\n            i++;\n            while (text[i] == 'b') {\n                i++;\n            }\n            match = true;\n        }\n        i++;\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "tmp5curbph2: /tmp/tmp5curbph2.cpp:21: int main(): Assertion `candidate((\"ac\")) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    int i = 0;\n    while (i < text.size()) {\n        if (text[i] == 'a') {\n            i++;\n            while (text[i] == 'b') {\n                i++;\n            }\n            match = true;\n        }\n        i++;\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "tmp5curbph2: /tmp/tmp5curbph2.cpp:21: int main(): Assertion `candidate((\"ac\")) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n  bool match = false;\n  int i = 0;\n  while (i < text.size()) {\n    if (text[i] == 'a') {\n      i++;\n      while (text[i] == 'b') {\n        i++;\n      }\n      match = true;\n    }\n    i++;\n  }\n  return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509801,
      "stdout": "",
      "stderr": "tmp7p1tvqc1: /tmp/tmp7p1tvqc1.cpp:21: int main(): Assertion `candidate((\"ac\")) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    int a_count = 0;\n    int b_count = 0;\n    for (int i = 0; i < text.length(); i++) {\n        if (text[i] == 'a') {\n            a_count++;\n        } else if (text[i] == 'b') {\n            b_count++;\n        }\n    }\n    if (a_count == 1 && b_count >= 1) {\n        match = true;\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1666123982,
      "stdout": "",
      "stderr": "tmpni2d2er4: /tmp/tmpni2d2er4.cpp:24: int main(): Assertion `candidate((\"abba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    int a_count = 0;\n    int b_count = 0;\n    for(int i = 0; i < text.length(); i++) {\n        if(text[i] == 'a') {\n            a_count++;\n        }\n        if(text[i] == 'b') {\n            b_count++;\n        }\n    }\n    if(a_count == 1 && b_count >= 1) {\n        match = true;\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1666123977,
      "stdout": "",
      "stderr": "tmp3mxx9dwx: /tmp/tmp3mxx9dwx.cpp:25: int main(): Assertion `candidate((\"abba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i] == 'a') {\n            for (int j = i + 1; j < text.size(); j++) {\n                if (text[j] == 'b') {\n                    match = true;\n                }\n            }\n        }\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    int i = 0;\n    while (i < text.size()) {\n        if (text[i] == 'a') {\n            i++;\n            while (text[i] == 'b') {\n                i++;\n            }\n            match = true;\n        }\n        i++;\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "tmp5curbph2: /tmp/tmp5curbph2.cpp:21: int main(): Assertion `candidate((\"ac\")) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    int i = 0;\n    while (i < text.size()) {\n        if (text[i] == 'a') {\n            i++;\n            while (text[i] == 'b') {\n                i++;\n            }\n            match = true;\n        }\n        i++;\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "tmp5curbph2: /tmp/tmp5curbph2.cpp:21: int main(): Assertion `candidate((\"ac\")) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    int i = 0;\n    while (i < text.size()) {\n        if (text[i] == 'a') {\n            i++;\n            while (text[i] == 'b') {\n                i++;\n            }\n            match = true;\n        }\n        i++;\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "tmp5curbph2: /tmp/tmp5curbph2.cpp:21: int main(): Assertion `candidate((\"ac\")) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    int a_count = 0;\n    int b_count = 0;\n    for(int i = 0; i < text.length(); i++) {\n        if(text[i] == 'a') {\n            a_count++;\n        }\n        else if(text[i] == 'b') {\n            b_count++;\n        }\n    }\n    if(a_count == 1 && b_count >= 1) {\n        match = true;\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1666123979,
      "stdout": "",
      "stderr": "tmp77cuv2oe: /tmp/tmp77cuv2oe.cpp:25: int main(): Assertion `candidate((\"abba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i] == 'a') {\n            for (int j = i + 1; j < text.size(); j++) {\n                if (text[j] == 'b') {\n                    match = true;\n                } else {\n                    match = false;\n                    break;\n                }\n            }\n        }\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "tmpqrwimqg8: /tmp/tmpqrwimqg8.cpp:24: int main(): Assertion `candidate((\"abba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    int i = 0;\n    while (i < text.size()) {\n        if (text[i] == 'a') {\n            i++;\n            while (text[i] == 'b') {\n                i++;\n            }\n            match = true;\n        }\n        i++;\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "tmp5curbph2: /tmp/tmp5curbph2.cpp:21: int main(): Assertion `candidate((\"ac\")) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    int a_count = 0;\n    int b_count = 0;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i] == 'a') {\n            a_count++;\n        }\n        if (text[i] == 'b') {\n            b_count++;\n        }\n    }\n    if (a_count == 1 && b_count >= 1) {\n        match = true;\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509801,
      "stdout": "",
      "stderr": "tmply0eqobo: /tmp/tmply0eqobo.cpp:25: int main(): Assertion `candidate((\"abba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    int i = 0;\n    while (i < text.size()) {\n        if (text[i] == 'a') {\n            i++;\n            while (text[i] == 'b') {\n                i++;\n            }\n            match = true;\n        }\n        i++;\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "tmp5curbph2: /tmp/tmp5curbph2.cpp:21: int main(): Assertion `candidate((\"ac\")) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    int i = 0;\n    while (i < text.size()) {\n        if (text[i] == 'a') {\n            i++;\n            while (text[i] == 'b') {\n                i++;\n            }\n            match = true;\n        }\n        else {\n            match = false;\n        }\n        i++;\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "tmp3n53poqe: /tmp/tmp3n53poqe.cpp:24: int main(): Assertion `candidate((\"ac\")) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i] == 'a') {\n            for (int j = i + 1; j < text.size(); j++) {\n                if (text[j] == 'b') {\n                    match = true;\n                } else {\n                    match = false;\n                    break;\n                }\n            }\n        }\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "tmpqrwimqg8: /tmp/tmpqrwimqg8.cpp:24: int main(): Assertion `candidate((\"abba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    for(int i = 0; i < text.size(); i++) {\n        if(text[i] == 'a') {\n            match = true;\n        } else if(text[i] == 'b' && match) {\n            match = true;\n        } else {\n            match = false;\n        }\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    int a_count = 0;\n    int b_count = 0;\n    for (int i = 0; i < text.length(); i++) {\n        if (text[i] == 'a') {\n            a_count++;\n        } else if (text[i] == 'b') {\n            b_count++;\n        }\n    }\n    if (a_count == 1 && b_count >= 1) {\n        match = true;\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1666123982,
      "stdout": "",
      "stderr": "tmpni2d2er4: /tmp/tmpni2d2er4.cpp:24: int main(): Assertion `candidate((\"abba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i] == 'a') {\n            for (int j = i + 1; j < text.size(); j++) {\n                if (text[j] == 'b') {\n                    match = true;\n                }\n            }\n        }\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i] == 'a') {\n            for (int j = i + 1; j < text.size(); j++) {\n                if (text[j] == 'b') {\n                    match = true;\n                } else {\n                    match = false;\n                    break;\n                }\n            }\n        }\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "tmpqrwimqg8: /tmp/tmpqrwimqg8.cpp:24: int main(): Assertion `candidate((\"abba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i] == 'a') {\n            for (int j = i + 1; j < text.size(); j++) {\n                if (text[j] == 'b') {\n                    match = true;\n                } else {\n                    match = false;\n                    break;\n                }\n            }\n        }\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "tmpqrwimqg8: /tmp/tmpqrwimqg8.cpp:24: int main(): Assertion `candidate((\"abba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    int i = 0;\n    while (i < text.size()) {\n        if (text[i] == 'a') {\n            i++;\n            match = true;\n            while (text[i] == 'b') {\n                i++;\n            }\n        }\n        else {\n            match = false;\n            i++;\n        }\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1666123982,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i] == 'a') {\n            for (int j = i+1; j < text.size(); j++) {\n                if (text[j] == 'b') {\n                    match = true;\n                }\n            }\n        }\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509801,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i] == 'a') {\n            for (int j = i + 1; j < text.size(); j++) {\n                if (text[j] == 'b') {\n                    match = true;\n                }\n            }\n        }\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    int i = 0;\n    while (i < text.size()) {\n        if (text[i] == 'a') {\n            i++;\n            while (text[i] == 'b') {\n                i++;\n            }\n            match = true;\n        }\n        i++;\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "tmp5curbph2: /tmp/tmp5curbph2.cpp:21: int main(): Assertion `candidate((\"ac\")) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    int i = 0;\n    while (i < text.size()) {\n        if (text[i] == 'a') {\n            i++;\n            while (text[i] == 'b') {\n                i++;\n            }\n            match = true;\n        }\n        i++;\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "tmp5curbph2: /tmp/tmp5curbph2.cpp:21: int main(): Assertion `candidate((\"ac\")) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    int i = 0;\n    while (i < text.size()) {\n        if (text[i] == 'a') {\n            i++;\n            while (i < text.size() && text[i] == 'b') {\n                i++;\n            }\n            match = true;\n        }\n        else {\n            i++;\n        }\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509801,
      "stdout": "",
      "stderr": "tmp8a_257xf: /tmp/tmp8a_257xf.cpp:23: int main(): Assertion `candidate((\"ac\")) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    for(int i = 0; i < text.size(); i++) {\n        if(text[i] == 'a') {\n            match = true;\n        } else if(text[i] == 'b' && match) {\n            match = true;\n        } else {\n            match = false;\n        }\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    int a_count = 0;\n    int b_count = 0;\n    for (int i = 0; i < text.length(); i++) {\n        if (text[i] == 'a') {\n            a_count++;\n        }\n        else if (text[i] == 'b') {\n            b_count++;\n        }\n    }\n    if (a_count == 1 && b_count >= 1) {\n        match = true;\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "tmp4u29dy_r: /tmp/tmp4u29dy_r.cpp:25: int main(): Assertion `candidate((\"abba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n  bool match = false;\n  int i = 0;\n  while (i < text.size()) {\n    if (text[i] == 'a') {\n      i++;\n      while (text[i] == 'b') {\n        i++;\n      }\n      match = true;\n    }\n    i++;\n  }\n  return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509801,
      "stdout": "",
      "stderr": "tmp7p1tvqc1: /tmp/tmp7p1tvqc1.cpp:21: int main(): Assertion `candidate((\"ac\")) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    int a_count = 0;\n    int b_count = 0;\n    for (int i = 0; i < text.length(); i++) {\n        if (text[i] == 'a') {\n            a_count++;\n        }\n        if (text[i] == 'b') {\n            b_count++;\n        }\n    }\n    if (a_count == 1 && b_count >= 1) {\n        match = true;\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1666123979,
      "stdout": "",
      "stderr": "tmpp89v25u2: /tmp/tmpp89v25u2.cpp:25: int main(): Assertion `candidate((\"abba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    for(int i = 0; i < text.size(); i++) {\n        if(text[i] == 'a') {\n            match = true;\n        } else if(text[i] == 'b' && match) {\n            match = true;\n        } else {\n            match = false;\n        }\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    int a_count = 0;\n    int b_count = 0;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i] == 'a') {\n            a_count++;\n        } else if (text[i] == 'b') {\n            b_count++;\n        }\n    }\n    if (a_count == 1 && b_count >= 1) {\n        match = true;\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1666123982,
      "stdout": "",
      "stderr": "tmp6poawkj2: /tmp/tmp6poawkj2.cpp:24: int main(): Assertion `candidate((\"abba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    int a_count = 0;\n    int b_count = 0;\n    for (int i = 0; i < text.length(); i++) {\n        if (text[i] == 'a') {\n            a_count++;\n        }\n        else if (text[i] == 'b') {\n            b_count++;\n        }\n    }\n    if (a_count == 1 && b_count >= 1) {\n        match = true;\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "tmp4u29dy_r: /tmp/tmp4u29dy_r.cpp:25: int main(): Assertion `candidate((\"abba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    int a_count = 0;\n    int b_count = 0;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i] == 'a') {\n            a_count++;\n        } else if (text[i] == 'b') {\n            b_count++;\n        }\n    }\n    if (a_count == 1 && b_count >= 1) {\n        match = true;\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1666123982,
      "stdout": "",
      "stderr": "tmp6poawkj2: /tmp/tmp6poawkj2.cpp:24: int main(): Assertion `candidate((\"abba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    int i = 0;\n    while (i < text.size()) {\n        if (text[i] == 'a') {\n            i++;\n            while (text[i] == 'b') {\n                i++;\n            }\n            match = true;\n        }\n        i++;\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "tmp5curbph2: /tmp/tmp5curbph2.cpp:21: int main(): Assertion `candidate((\"ac\")) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    int i = 0;\n    while (i < text.size()) {\n        if (text[i] == 'a') {\n            i++;\n            while (text[i] == 'b') {\n                i++;\n            }\n            match = true;\n        }\n        i++;\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "tmp5curbph2: /tmp/tmp5curbph2.cpp:21: int main(): Assertion `candidate((\"ac\")) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i] == 'a') {\n            match = true;\n        } else if (text[i] == 'b' && match) {\n            match = true;\n        } else {\n            match = false;\n        }\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509801,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    for(int i = 0; i < text.size(); i++) {\n        if(text[i] == 'a') {\n            for(int j = i+1; j < text.size(); j++) {\n                if(text[j] == 'b') {\n                    match = true;\n                }\n            }\n        }\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i] == 'a') {\n            for (int j = i + 1; j < text.size(); j++) {\n                if (text[j] == 'b') {\n                    match = true;\n                }\n            }\n        }\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    int i = 0;\n    while (i < text.size()) {\n        if (text[i] == 'a') {\n            i++;\n            while (text[i] == 'b') {\n                i++;\n            }\n            match = true;\n        }\n        i++;\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "tmp5curbph2: /tmp/tmp5curbph2.cpp:21: int main(): Assertion `candidate((\"ac\")) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    for(int i = 0; i < text.size(); i++) {\n        if(text[i] == 'a') {\n            match = true;\n        } else if(text[i] == 'b' && match) {\n            match = true;\n        } else {\n            match = false;\n        }\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    int a_count = 0;\n    int b_count = 0;\n    for (int i = 0; i < text.length(); i++) {\n        if (text[i] == 'a') {\n            a_count++;\n        }\n        if (text[i] == 'b') {\n            b_count++;\n        }\n    }\n    if (a_count == 1 && b_count > 0) {\n        match = true;\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1666123981,
      "stdout": "",
      "stderr": "tmp6c_aozey: /tmp/tmp6c_aozey.cpp:25: int main(): Assertion `candidate((\"abba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i] == 'a') {\n            for (int j = i + 1; j < text.size(); j++) {\n                if (text[j] == 'b') {\n                    match = true;\n                } else {\n                    match = false;\n                    break;\n                }\n            }\n        }\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "tmpqrwimqg8: /tmp/tmpqrwimqg8.cpp:24: int main(): Assertion `candidate((\"abba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    for(int i = 0; i < text.size(); i++) {\n        if(text[i] == 'a') {\n            match = true;\n        } else if(text[i] == 'b' && match) {\n            match = true;\n        } else {\n            match = false;\n        }\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    int i = 0;\n    while (i < text.size()) {\n        if (text[i] == 'a') {\n            i++;\n            while (text[i] == 'b') {\n                i++;\n            }\n            match = true;\n        }\n        i++;\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "tmp5curbph2: /tmp/tmp5curbph2.cpp:21: int main(): Assertion `candidate((\"ac\")) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    int i = 0;\n    while (i < text.size()) {\n        if (text[i] == 'a') {\n            i++;\n            while (text[i] == 'b') {\n                i++;\n            }\n            match = true;\n        }\n        i++;\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "tmp5curbph2: /tmp/tmp5curbph2.cpp:21: int main(): Assertion `candidate((\"ac\")) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i] == 'a') {\n            for (int j = i + 1; j < text.size(); j++) {\n                if (text[j] == 'b') {\n                    match = true;\n                } else {\n                    match = false;\n                    break;\n                }\n            }\n        }\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "tmpqrwimqg8: /tmp/tmpqrwimqg8.cpp:24: int main(): Assertion `candidate((\"abba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    int i = 0;\n    while (i < text.size()) {\n        if (text[i] == 'a') {\n            i++;\n            while (text[i] == 'b') {\n                i++;\n            }\n            match = true;\n        }\n        i++;\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "tmp5curbph2: /tmp/tmp5curbph2.cpp:21: int main(): Assertion `candidate((\"ac\")) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i] == 'a') {\n            while (text[i] == 'a') {\n                i++;\n            }\n            if (text[i] == 'b') {\n                match = true;\n            }\n        }\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1666123977,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n  bool match = false;\n  int i = 0;\n  int a_count = 0;\n  int b_count = 0;\n  while (i < text.size()) {\n    if (text[i] == 'a') {\n      a_count++;\n      i++;\n      while (text[i] == 'b') {\n        b_count++;\n        i++;\n      }\n    }\n    else {\n      i++;\n    }\n  }\n  if (a_count == 1 && b_count >= 1) {\n    match = true;\n  }\n  return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1666123982,
      "stdout": "",
      "stderr": "tmpkckjgcc2: /tmp/tmpkckjgcc2.cpp:31: int main(): Assertion `candidate((\"abba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    int a_count = 0;\n    int b_count = 0;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i] == 'a') {\n            a_count++;\n        }\n        else if (text[i] == 'b') {\n            b_count++;\n        }\n        else {\n            return false;\n        }\n    }\n    if (a_count == 1 && b_count >= 1) {\n        match = true;\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1666123982,
      "stdout": "",
      "stderr": "tmpomd1toth: /tmp/tmpomd1toth.cpp:28: int main(): Assertion `candidate((\"abba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    int i = 0;\n    while (i < text.size()) {\n        if (text[i] == 'a') {\n            i++;\n            while (text[i] == 'b') {\n                i++;\n            }\n            match = true;\n        }\n        i++;\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "tmp5curbph2: /tmp/tmp5curbph2.cpp:21: int main(): Assertion `candidate((\"ac\")) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    int i = 0;\n    while (i < text.size()) {\n        if (text[i] == 'a') {\n            i++;\n            while (text[i] == 'b') {\n                i++;\n            }\n            match = true;\n        }\n        i++;\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "tmp5curbph2: /tmp/tmp5curbph2.cpp:21: int main(): Assertion `candidate((\"ac\")) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    for(int i = 0; i < text.size(); i++) {\n        if(text[i] == 'a') {\n            match = true;\n        } else if(text[i] == 'b' && match) {\n            match = true;\n        } else {\n            match = false;\n        }\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    int i = 0;\n    while (i < text.size()) {\n        if (text[i] == 'a') {\n            i++;\n            while (text[i] == 'b') {\n                i++;\n            }\n            match = true;\n        }\n        i++;\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "tmp5curbph2: /tmp/tmp5curbph2.cpp:21: int main(): Assertion `candidate((\"ac\")) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    for(int i = 0; i < text.size(); i++) {\n        if(text[i] == 'a') {\n            match = true;\n        } else if(text[i] == 'b' && match) {\n            match = true;\n        } else {\n            match = false;\n        }\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i] == 'a') {\n            for (int j = i + 1; j < text.size(); j++) {\n                if (text[j] == 'b') {\n                    match = true;\n                }\n            }\n        }\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    int i = 0;\n    while (i < text.size()) {\n        if (text[i] == 'a') {\n            i++;\n            while (text[i] == 'b') {\n                i++;\n            }\n            match = true;\n        }\n        i++;\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "tmp5curbph2: /tmp/tmp5curbph2.cpp:21: int main(): Assertion `candidate((\"ac\")) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    int i = 0;\n    while (i < text.size()) {\n        if (text[i] == 'a') {\n            i++;\n            while (text[i] == 'b') {\n                i++;\n            }\n            match = true;\n        }\n        i++;\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "tmp5curbph2: /tmp/tmp5curbph2.cpp:21: int main(): Assertion `candidate((\"ac\")) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    int i = 0;\n    while (i < text.size()) {\n        if (text[i] == 'a') {\n            i++;\n            while (text[i] == 'b') {\n                i++;\n            }\n            match = true;\n        }\n        i++;\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "tmp5curbph2: /tmp/tmp5curbph2.cpp:21: int main(): Assertion `candidate((\"ac\")) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i] == 'a') {\n            for (int j = i + 1; j < text.size(); j++) {\n                if (text[j] == 'b') {\n                    match = true;\n                } else {\n                    match = false;\n                    break;\n                }\n            }\n        }\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "tmpqrwimqg8: /tmp/tmpqrwimqg8.cpp:24: int main(): Assertion `candidate((\"abba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i] == 'a') {\n            for (int j = i + 1; j < text.size(); j++) {\n                if (text[j] == 'b') {\n                    match = true;\n                } else {\n                    match = false;\n                    break;\n                }\n            }\n        }\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "tmpqrwimqg8: /tmp/tmpqrwimqg8.cpp:24: int main(): Assertion `candidate((\"abba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i] == 'a') {\n            for (int j = i + 1; j < text.size(); j++) {\n                if (text[j] == 'b') {\n                    match = true;\n                } else {\n                    match = false;\n                    break;\n                }\n            }\n        }\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "tmpqrwimqg8: /tmp/tmpqrwimqg8.cpp:24: int main(): Assertion `candidate((\"abba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i] == 'a') {\n            for (int j = i + 1; j < text.size(); j++) {\n                if (text[j] == 'b') {\n                    match = true;\n                } else {\n                    match = false;\n                    break;\n                }\n            }\n        }\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "tmpqrwimqg8: /tmp/tmpqrwimqg8.cpp:24: int main(): Assertion `candidate((\"abba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i] == 'a') {\n            for (int j = i + 1; j < text.size(); j++) {\n                if (text[j] == 'b') {\n                    match = true;\n                }\n            }\n        }\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    int i = 0;\n    while (i < text.size()) {\n        if (text[i] == 'a') {\n            i++;\n            while (text[i] == 'b') {\n                i++;\n            }\n            match = true;\n        }\n        i++;\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "tmp5curbph2: /tmp/tmp5curbph2.cpp:21: int main(): Assertion `candidate((\"ac\")) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n  bool match = false;\n  for (int i = 0; i < text.size(); i++) {\n    if (text[i] == 'a') {\n      match = true;\n    } else if (text[i] == 'b' && match) {\n      match = true;\n    } else {\n      match = false;\n    }\n  }\n  return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1666123982,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    int i = 0;\n    while (i < text.size()) {\n        if (text[i] == 'a') {\n            i++;\n            while (text[i] == 'b') {\n                i++;\n            }\n            match = true;\n        }\n        i++;\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "tmp5curbph2: /tmp/tmp5curbph2.cpp:21: int main(): Assertion `candidate((\"ac\")) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n  bool match = false;\n  int i = 0;\n  while (i < text.size()) {\n    if (text[i] == 'a') {\n      i++;\n      while (text[i] == 'b') {\n        i++;\n      }\n      match = true;\n    }\n    i++;\n  }\n  return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509801,
      "stdout": "",
      "stderr": "tmp7p1tvqc1: /tmp/tmp7p1tvqc1.cpp:21: int main(): Assertion `candidate((\"ac\")) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    int i = 0;\n    while (i < text.size()) {\n        if (text[i] == 'a') {\n            i++;\n            while (text[i] == 'b') {\n                i++;\n            }\n            match = true;\n        }\n        i++;\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "tmp5curbph2: /tmp/tmp5curbph2.cpp:21: int main(): Assertion `candidate((\"ac\")) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i] == 'a') {\n            for (int j = i+1; j < text.size(); j++) {\n                if (text[j] == 'b') {\n                    match = true;\n                } else {\n                    match = false;\n                    break;\n                }\n            }\n        }\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1666123977,
      "stdout": "",
      "stderr": "tmpuht6wwx1: /tmp/tmpuht6wwx1.cpp:24: int main(): Assertion `candidate((\"abba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i] == 'a') {\n            for (int j = i+1; j < text.size(); j++) {\n                if (text[j] == 'b') {\n                    match = true;\n                }\n            }\n        }\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509801,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i] == 'a') {\n            for (int j = i + 1; j < text.size(); j++) {\n                if (text[j] == 'b') {\n                    match = true;\n                }\n            }\n        }\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    int i = 0;\n    while (i < text.size()) {\n        if (text[i] == 'a') {\n            i++;\n            while (text[i] == 'b') {\n                i++;\n            }\n            match = true;\n        }\n        i++;\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "tmp5curbph2: /tmp/tmp5curbph2.cpp:21: int main(): Assertion `candidate((\"ac\")) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    int i = 0;\n    for (i = 0; i < text.size(); i++) {\n        if (text[i] == 'a') {\n            match = true;\n            break;\n        }\n    }\n    if (match) {\n        for (int j = i+1; j < text.size(); j++) {\n            if (text[j] != 'b') {\n                match = false;\n                break;\n            }\n        }\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1666123982,
      "stdout": "",
      "stderr": "tmpr8nqvx_y: /tmp/tmpr8nqvx_y.cpp:27: int main(): Assertion `candidate((\"abba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i] == 'a') {\n            for (int j = i + 1; j < text.size(); j++) {\n                if (text[j] == 'b') {\n                    match = true;\n                } else {\n                    match = false;\n                    break;\n                }\n            }\n        }\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "tmpqrwimqg8: /tmp/tmpqrwimqg8.cpp:24: int main(): Assertion `candidate((\"abba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i] == 'a') {\n            match = true;\n        } else if (text[i] == 'b' && match) {\n            match = true;\n        } else {\n            match = false;\n        }\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509801,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    int i = 0;\n    while (i < text.size()) {\n        if (text[i] == 'a') {\n            i++;\n            while (text[i] == 'b') {\n                i++;\n            }\n            match = true;\n        }\n        i++;\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "tmp5curbph2: /tmp/tmp5curbph2.cpp:21: int main(): Assertion `candidate((\"ac\")) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i] == 'a') {\n            for (int j = i + 1; j < text.size(); j++) {\n                if (text[j] == 'b') {\n                    match = true;\n                }\n            }\n        }\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    int i = 0;\n    while (i < text.size()) {\n        if (text[i] == 'a') {\n            i++;\n            while (text[i] == 'b') {\n                i++;\n            }\n            match = true;\n        }\n        i++;\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "tmp5curbph2: /tmp/tmp5curbph2.cpp:21: int main(): Assertion `candidate((\"ac\")) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    int i = 0;\n    while (i < text.size()) {\n        if (text[i] == 'a') {\n            match = true;\n            i++;\n            while (text[i] == 'b') {\n                i++;\n            }\n        }\n        else {\n            match = false;\n            i++;\n        }\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1666123982,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    int i = 0;\n    while (i < text.size()) {\n        if (text[i] == 'a') {\n            i++;\n            while (text[i] == 'b') {\n                i++;\n            }\n            match = true;\n        }\n        i++;\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "tmp5curbph2: /tmp/tmp5curbph2.cpp:21: int main(): Assertion `candidate((\"ac\")) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    int i = 0;\n    while (i < text.size()) {\n        if (text[i] == 'a') {\n            match = true;\n            i++;\n            while (text[i] == 'b') {\n                i++;\n            }\n        }\n        else {\n            match = false;\n            i++;\n        }\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1666123982,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    int i = 0;\n    while (i < text.size()) {\n        if (text[i] == 'a') {\n            i++;\n            while (text[i] == 'b') {\n                i++;\n            }\n            match = true;\n        }\n        i++;\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "tmp5curbph2: /tmp/tmp5curbph2.cpp:21: int main(): Assertion `candidate((\"ac\")) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    int a_count = 0;\n    int b_count = 0;\n    for (int i = 0; i < text.length(); i++) {\n        if (text[i] == 'a') {\n            a_count++;\n        }\n        else if (text[i] == 'b') {\n            b_count++;\n        }\n    }\n    if (a_count == 1 && b_count >= 1) {\n        match = true;\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "tmp4u29dy_r: /tmp/tmp4u29dy_r.cpp:25: int main(): Assertion `candidate((\"abba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    int i = 0;\n    while (i < text.size()) {\n        if (text[i] == 'a') {\n            i++;\n            while (i < text.size() && text[i] == 'b') {\n                i++;\n            }\n            match = true;\n        }\n        i++;\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1666123982,
      "stdout": "",
      "stderr": "tmpmvd6nqc9: /tmp/tmpmvd6nqc9.cpp:21: int main(): Assertion `candidate((\"ac\")) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    int i = 0;\n    while (i < text.size()) {\n        if (text[i] == 'a') {\n            i++;\n            while (text[i] == 'b') {\n                i++;\n            }\n            match = true;\n        }\n        else {\n            match = false;\n        }\n        i++;\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "tmp3n53poqe: /tmp/tmp3n53poqe.cpp:24: int main(): Assertion `candidate((\"ac\")) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    int a_count = 0;\n    int b_count = 0;\n    for (int i = 0; i < text.length(); i++) {\n        if (text[i] == 'a') {\n            a_count++;\n        } else if (text[i] == 'b') {\n            b_count++;\n        }\n    }\n    if (a_count == 1 && b_count >= 1) {\n        match = true;\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1666123982,
      "stdout": "",
      "stderr": "tmpni2d2er4: /tmp/tmpni2d2er4.cpp:24: int main(): Assertion `candidate((\"abba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    for(int i = 0; i < text.size(); i++) {\n        if(text[i] == 'a') {\n            match = true;\n        } else if(text[i] == 'b') {\n            match = match && true;\n        } else {\n            match = false;\n        }\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1666123983,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    int i = 0;\n    while (i < text.size()) {\n        if (text[i] == 'a') {\n            i++;\n            while (text[i] == 'b') {\n                i++;\n            }\n            match = true;\n        }\n        i++;\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "tmp5curbph2: /tmp/tmp5curbph2.cpp:21: int main(): Assertion `candidate((\"ac\")) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    for(int i = 0; i < text.size(); i++) {\n        if(text[i] == 'a') {\n            for(int j = i+1; j < text.size(); j++) {\n                if(text[j] == 'b') {\n                    match = true;\n                }\n            }\n        }\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    for(int i = 0; i < text.size(); i++) {\n        if(text[i] == 'a') {\n            match = true;\n        } else if(text[i] == 'b' && match) {\n            match = true;\n        } else {\n            match = false;\n        }\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    for(int i = 0; i < text.size(); i++) {\n        if(text[i] == 'a') {\n            for(int j = i + 1; j < text.size(); j++) {\n                if(text[j] == 'b') {\n                    match = true;\n                }\n            }\n        }\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1666123983,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n  bool match = false;\n  int a_count = 0;\n  int b_count = 0;\n  for (int i = 0; i < text.size(); i++) {\n    if (text[i] == 'a') {\n      a_count++;\n    }\n    else if (text[i] == 'b') {\n      b_count++;\n    }\n  }\n  if (a_count == 1 && b_count > 0) {\n    match = true;\n  }\n  return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1666123983,
      "stdout": "",
      "stderr": "tmpeqglj9n7: /tmp/tmpeqglj9n7.cpp:25: int main(): Assertion `candidate((\"abba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    int i = 0;\n    while (i < text.size()) {\n        if (text[i] == 'a') {\n            i++;\n            while (text[i] == 'b') {\n                i++;\n            }\n            match = true;\n        }\n        i++;\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "tmp5curbph2: /tmp/tmp5curbph2.cpp:21: int main(): Assertion `candidate((\"ac\")) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    for(int i = 0; i < text.size(); i++) {\n        if(text[i] == 'a') {\n            match = true;\n        } else if(text[i] == 'b' && match) {\n            match = true;\n        } else {\n            match = false;\n        }\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i] == 'a') {\n            for (int j = i + 1; j < text.size(); j++) {\n                if (text[j] == 'b') {\n                    match = true;\n                } else {\n                    match = false;\n                    break;\n                }\n            }\n        }\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "tmpqrwimqg8: /tmp/tmpqrwimqg8.cpp:24: int main(): Assertion `candidate((\"abba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    int i = 0;\n    while (i < text.size()) {\n        if (text[i] == 'a') {\n            i++;\n            while (text[i] == 'b') {\n                i++;\n            }\n            match = true;\n        }\n        i++;\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "tmp5curbph2: /tmp/tmp5curbph2.cpp:21: int main(): Assertion `candidate((\"ac\")) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    int i = 0;\n    while (i < text.size()) {\n        if (text[i] == 'a') {\n            i++;\n            while (text[i] == 'b') {\n                i++;\n            }\n            match = true;\n        }\n        i++;\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "tmp5curbph2: /tmp/tmp5curbph2.cpp:21: int main(): Assertion `candidate((\"ac\")) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i] == 'a') {\n            for (int j = i + 1; j < text.size(); j++) {\n                if (text[j] == 'b') {\n                    match = true;\n                }\n            }\n        }\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i] == 'a') {\n            for (int j = i+1; j < text.size(); j++) {\n                if (text[j] == 'b') {\n                    match = true;\n                }\n                else {\n                    match = false;\n                }\n            }\n        }\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1666123983,
      "stdout": "",
      "stderr": "tmpmchez31c: /tmp/tmpmchez31c.cpp:24: int main(): Assertion `candidate((\"abba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    int i = 0;\n    while (i < text.size()) {\n        if (text[i] == 'a') {\n            i++;\n            while (text[i] == 'b') {\n                i++;\n            }\n            match = true;\n        }\n        i++;\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "tmp5curbph2: /tmp/tmp5curbph2.cpp:21: int main(): Assertion `candidate((\"ac\")) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    int a_count = 0;\n    int b_count = 0;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i] == 'a') {\n            a_count++;\n        } else if (text[i] == 'b') {\n            b_count++;\n        }\n    }\n    if (a_count == 1 && b_count >= 1) {\n        match = true;\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1666123982,
      "stdout": "",
      "stderr": "tmp6poawkj2: /tmp/tmp6poawkj2.cpp:24: int main(): Assertion `candidate((\"abba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    for(int i = 0; i < text.size(); i++) {\n        if(text[i] == 'a') {\n            match = true;\n        } else if(text[i] == 'b' && match) {\n            match = true;\n        } else {\n            match = false;\n        }\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    int i = 0;\n    while (i < text.size()) {\n        if (text[i] == 'a') {\n            i++;\n            while (i < text.size() && text[i] == 'b') {\n                i++;\n            }\n            match = true;\n        } else {\n            i++;\n        }\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1666123983,
      "stdout": "",
      "stderr": "tmp1bk75xwi: /tmp/tmp1bk75xwi.cpp:22: int main(): Assertion `candidate((\"ac\")) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    int i = 0;\n    while (i < text.size()) {\n        if (text[i] == 'a') {\n            i++;\n            while (text[i] == 'b') {\n                i++;\n            }\n            match = true;\n        }\n        i++;\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "tmp5curbph2: /tmp/tmp5curbph2.cpp:21: int main(): Assertion `candidate((\"ac\")) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    }
  ]
}
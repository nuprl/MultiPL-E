{
  "name": "mbpp_419_round_and_sum",
  "language": "cpp",
  "prompt": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list.\nlong round_and_sum(std::any list1) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_419_round_and_sum.py",
  "prompt_terminology": "verbatim",
  "tests": "}\nint main() {\n    auto candidate = round_and_sum;\n    assert(candidate((std::any({(float)22.4, (float)4.0, (float)-16.22, (float)-9.1, (float)11.0, (float)-12.22, (float)14.2, (float)-5.2, (float)17.5}))) == (243));\n    assert(candidate((std::any({(long)5, (long)2, (long)9, (long)24.3, (long)29}))) == (345));\n    assert(candidate((std::any({(float)25.0, (float)56.7, (float)89.2}))) == (513));\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "  long sum = 0;\n  for (auto& i : list1) {\n    sum += round(i);\n  }\n  return sum * list1.size();",
    "  // your code here\n  long sum = 0;\n  for(auto i : list1){\n    sum += std::round(i);\n  }\n  return sum * list1.size();",
    "  long sum = 0;\n  for (auto i : list1) {\n    sum += std::round(i);\n  }\n  return sum * list1.size();",
    "  long sum = 0;\n  int len = list1.size();\n  for (int i = 0; i < len; i++) {\n    sum += std::round(list1[i]);\n  }\n  return sum * len;",
    "  long sum = 0;\n  for (auto it = list1.begin(); it != list1.end(); ++it) {\n    sum += std::round(*it);\n  }\n  return sum * list1.size();",
    "  long sum = 0;\n  for (auto i : list1) {\n    sum += std::round(i);\n  }\n  return sum * list1.size();",
    "  long sum = 0;\n  for (auto i : list1) {\n    sum += std::round(i);\n  }\n  return sum * list1.size();",
    "  long sum = 0;\n  for (auto i : list1) {\n    sum += std::round(i);\n  }\n  return sum * list1.size();",
    "  long sum = 0;\n  for (int i = 0; i < list1.size(); i++) {\n    sum += std::round(list1[i]);\n  }\n  return sum * list1.size();",
    "    long sum = 0;\n    for (auto i : list1) {\n        sum += std::round(i);\n    }\n    return sum * list1.size();",
    "  long sum = 0;\n  for (auto i : list1) {\n    sum += std::round(i);\n  }\n  return sum * list1.size();",
    "  long sum = 0;\n  for (auto i : list1) {\n    sum += round(i);\n  }\n  return sum * list1.size();",
    "  // your code here\n  return 0;",
    "  long sum = 0;\n  for (int i = 0; i < list1.size(); i++) {\n    sum += std::round(list1[i]);\n  }\n  return sum * list1.size();",
    "  // your code here\n  long sum = 0;\n  int len = list1.size();\n  for(int i = 0; i < len; i++)\n  {\n    sum += round(list1[i]);\n  }\n  return sum * len;",
    "  long sum = 0;\n  for (int i = 0; i < list1.size(); i++) {\n    sum += std::round(list1[i]);\n  }\n  return sum * list1.size();",
    "  // your code here\n  long sum = 0;\n  for(int i = 0; i < list1.size(); i++){\n    sum += std::round(list1[i]);\n  }\n  return sum * list1.size();",
    "  long sum = 0;\n  for (auto i : list1) {\n    sum += std::round(i);\n  }\n  return sum * list1.size();",
    "    long sum = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        sum += std::round(list1[i]);\n    }\n    return sum * list1.size();",
    "  long sum = 0;\n  for (auto i : list1) {\n    sum += std::round(i);\n  }\n  return sum * list1.size();",
    "  long sum = 0;\n  for (auto i : list1) {\n    sum += std::round(i);\n  }\n  return sum * list1.size();",
    "  long sum = 0;\n  for (auto i : list1) {\n    sum += std::round(i);\n  }\n  return sum * list1.size();",
    "  long sum = 0;\n  for (auto i : list1) {\n    sum += std::round(i);\n  }\n  return sum * list1.size();",
    "  // your code here\n  return 0;",
    "    long sum = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        sum += std::round(list1[i]);\n    }\n    return sum * list1.size();",
    "  long sum = 0;\n  for (auto i : list1) {\n    sum += std::round(i);\n  }\n  return sum * list1.size();",
    "  long sum = 0;\n  for (auto i : list1) {\n    sum += std::round(i);\n  }\n  return sum * list1.size();",
    "  long sum = 0;\n  for (int i = 0; i < list1.size(); i++) {\n    sum += std::round(list1[i]);\n  }\n  return sum * list1.size();",
    "  long sum = 0;\n  for (auto i : list1) {\n    sum += std::round(i);\n  }\n  return sum * list1.size();",
    "  long sum = 0;\n  for (auto i : list1) {\n    sum += std::round(i);\n  }\n  return sum * list1.size();",
    "    long sum = 0;\n    for (auto i : list1) {\n        sum += std::round(i);\n    }\n    return sum * list1.size();",
    "  long sum = 0;\n  long length = 0;\n  for (auto i : list1) {\n    sum += std::round(i);\n    length += 1;\n  }\n  return sum * length;",
    "  // your code here\n  long sum=0;\n  for(int i=0;i<list1.size();i++)\n  {\n    sum+=std::round(list1[i]);\n  }\n  return sum*list1.size();",
    "    long sum = 0;\n    for (auto i : list1) {\n        sum += std::round(i);\n    }\n    return sum * list1.size();",
    "    long sum = 0;\n    for (auto i : list1) {\n        sum += std::round(i);\n    }\n    return sum * list1.size();",
    "  long sum = 0;\n  for (auto i : list1) {\n    sum += std::round(i);\n  }\n  return sum * list1.size();",
    "  long sum = 0;\n  for (int i = 0; i < list1.size(); i++) {\n    sum += std::round(list1[i]);\n  }\n  return sum * list1.size();",
    "  long sum = 0;\n  for (int i = 0; i < list1.size(); i++) {\n    sum += std::round(list1[i]);\n  }\n  return sum * list1.size();",
    "  // your code here\n  int sum = 0;\n  for(int i = 0; i < list1.size(); i++){\n    sum += round(list1[i]);\n  }\n  return sum*list1.size();",
    "  long sum = 0;\n  for (auto i : list1) {\n    sum += std::round(i);\n  }\n  return sum * list1.size();",
    "  // your code here\n  return 0;",
    "  long sum = 0;\n  for (auto i : list1) {\n    sum += std::round(i);\n  }\n  return sum * list1.size();",
    "  // your code here\n  long sum = 0;\n  for(auto i : list1){\n    sum += round(i);\n  }\n  return sum * list1.size();",
    "  long sum = 0;\n  for (auto it = list1.begin(); it != list1.end(); it++) {\n    sum += round(*it);\n  }\n  return sum * list1.size();",
    "  long sum = 0;\n  for (int i = 0; i < list1.size(); i++) {\n    sum += std::round(list1[i]);\n  }\n  return sum * list1.size();",
    "  long sum = 0;\n  for(auto i : list1) {\n    sum += std::round(i);\n  }\n  return sum * list1.size();",
    "\tlong sum = 0;\n\tfor (int i = 0; i < list1.size(); i++) {\n\t\tsum += round(list1[i]);\n\t}\n\treturn sum * list1.size();",
    "  long sum = 0;\n  for (auto i : list1) {\n    sum += std::round(i);\n  }\n  return sum * list1.size();",
    "  long sum = 0;\n  for (auto i : list1) {\n    sum += std::round(i);\n  }\n  return sum * list1.size();",
    "  long sum = 0;\n  for (auto i : list1) {\n    sum += std::round(i);\n  }\n  return sum * list1.size();",
    "  long sum = 0;\n  for(auto i: list1) {\n    sum += std::round(i);\n  }\n  return sum * list1.size();",
    "  long sum = 0;\n  for (auto x : list1) {\n    sum += std::round(x);\n  }\n  return sum * list1.size();",
    "  assert(list1.type() == typeid(std::vector<int>));\n  std::vector<int> list = std::any_cast<std::vector<int>>(list1);\n  long sum = 0;\n  for (int i = 0; i < list.size(); i++) {\n    sum += std::round(list[i]);\n  }\n  return sum * list.size();",
    "  long sum = 0;\n  for (auto i : list1) {\n    sum += std::round(i);\n  }\n  return sum * list1.size();",
    "  // your code here\n  return 0;",
    "  long sum = 0;\n  for (auto &i : list1) {\n    sum += std::round(i);\n  }\n  return sum * list1.size();",
    "  long sum = 0;\n  for (auto i = 0; i < list1.size(); i++) {\n    sum += std::round(list1[i]);\n  }\n  return sum * list1.size();",
    "  long sum = 0;\n  for (auto i : list1) {\n    sum += std::round(i);\n  }\n  return sum * list1.size();",
    "  long sum = 0;\n  for (auto i : list1) {\n    sum += std::round(i);\n  }\n  return sum * list1.size();",
    "  long sum = 0;\n  for (auto i : list1) {\n    sum += std::round(i);\n  }\n  return sum * list1.size();",
    "  long sum = 0;\n  int len = list1.size();\n  for (int i = 0; i < len; i++) {\n    sum += round(list1[i]);\n  }\n  return sum * len;",
    "    long sum = 0;\n    for (auto i = list1.begin(); i != list1.end(); i++)\n        sum += round(*i);\n    return sum * list1.size();",
    "  long sum = 0;\n  for (auto i : list1) {\n    sum += std::round(i);\n  }\n  return sum * list1.size();",
    "  long sum = 0;\n  for (auto i : list1) {\n    sum += std::round(i);\n  }\n  return sum * list1.size();",
    "  long sum = 0;\n  for (auto x : list1) {\n    sum += std::round(x);\n  }\n  return sum * list1.size();",
    "  long sum = 0;\n  for (int i = 0; i < list1.size(); i++) {\n    sum += std::round(list1[i]);\n  }\n  return sum * list1.size();",
    "    long sum = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        sum += std::round(list1[i]);\n    }\n    return sum * list1.size();",
    "  long sum = 0;\n  for(int i = 0; i < list1.size(); i++) {\n    sum += std::round(list1[i]);\n  }\n  return sum * list1.size();",
    "  long sum = 0;\n  for (auto i = list1.begin(); i != list1.end(); i++) {\n    sum += round(*i);\n  }\n  return sum * list1.size();",
    "    long sum = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        sum += std::round(list1[i]);\n    }\n    return sum * list1.size();",
    "  // your code here\n  long sum = 0;\n  for(int i = 0; i < list1.size(); i++){\n    sum += std::round(list1[i]);\n  }\n  return sum * list1.size();",
    "  // your code here\n  long sum = 0;\n  for(auto i : list1){\n    sum += std::round(i);\n  }\n  return sum * list1.size();",
    "  // your code here\n  int sum=0;\n  int len=list1.size();\n  for(int i=0;i<len;i++)\n  {\n    sum+=round(list1[i]);\n  }\n  return sum*len;",
    "  long sum = 0;\n  for (auto i : list1) {\n    sum += std::round(i);\n  }\n  return sum * list1.size();",
    "  long sum = 0;\n  for (auto i : list1) {\n    sum += std::round(i);\n  }\n  return sum * list1.size();",
    "  long sum = 0;\n  int len = list1.size();\n  for (int i = 0; i < len; i++) {\n    sum += std::round(list1[i]);\n  }\n  return sum * len;",
    "  // your code here\n  return 0;",
    "  long sum = 0;\n  for (int i = 0; i < list1.size(); i++) {\n    sum += std::round(list1[i]);\n  }\n  return sum * list1.size();",
    "  long sum = 0;\n  for(auto i : list1) {\n    sum += std::round(i);\n  }\n  return sum * list1.size();",
    "  int sum = 0;\n  int len = 0;\n  for(auto i : list1) {\n    sum += round(i);\n    len += 1;\n  }\n  return sum * len;",
    "  long sum = 0;\n  for (auto i : list1) {\n    sum += std::round(i);\n  }\n  return sum * list1.size();",
    "    // your code here\n    long sum=0;\n    for(auto i:list1)\n    {\n        sum+=std::round(i);\n    }\n    return sum*list1.size();",
    "  long sum = 0;\n  for (auto &i : list1) {\n    sum += std::round(i);\n  }\n  return sum * list1.size();",
    "  long sum = 0;\n  for (auto i : list1) {\n    sum += std::round(i);\n  }\n  return sum * list1.size();",
    "  long sum = 0;\n  for (auto i : list1) {\n    sum += std::round(i);\n  }\n  return sum * list1.size();",
    "  long sum = 0;\n  for (auto x : list1) {\n    sum += std::round(x);\n  }\n  return sum * list1.size();",
    "  long sum = 0;\n  long length = 0;\n  for (auto i : list1) {\n    sum += round(i);\n    length++;\n  }\n  return sum * length;",
    "    long sum = 0;\n    for (auto i : list1) {\n        sum += std::round(i);\n    }\n    return sum * list1.size();",
    "  long sum = 0;\n  for (int i = 0; i < list1.size(); i++) {\n    sum += std::round(list1[i]);\n  }\n  return sum * list1.size();",
    "  // your code here\n  long sum=0;\n  for(auto i:list1)\n  {\n    sum+=round(i);\n  }\n  return sum*list1.size();",
    "  long sum = 0;\n  for (auto i : list1) {\n    sum += std::round(i);\n  }\n  return sum * list1.size();",
    "  long sum = 0;\n  for (int i = 0; i < list1.size(); i++) {\n    sum += std::round(list1[i]);\n  }\n  return sum * list1.size();",
    "  long sum = 0;\n  for (auto i : list1) {\n    sum += std::round(i);\n  }\n  return sum * list1.size();",
    "  long sum = 0;\n  for (int i = 0; i < list1.size(); i++) {\n    sum += std::round(list1[i]);\n  }\n  return sum * list1.size();",
    "  // your code here\n  long sum = 0;\n  for(auto i : list1){\n    sum += std::round(i);\n  }\n  return sum * list1.size();",
    "  // your code here\n  long sum = 0;\n  for(auto i : list1){\n    sum += std::round(i);\n  }\n  return sum * list1.size();",
    "  // your code here\n  long sum = 0;\n  for(auto i : list1)\n  {\n    sum += std::round(i);\n  }\n  return sum * list1.size();",
    "  long sum = 0;\n  for (auto i : list1) {\n    sum += std::round(i);\n  }\n  return sum * list1.size();",
    "  long sum = 0;\n  for (auto i : list1) {\n    sum += std::round(i);\n  }\n  return sum * list1.size();",
    "  long sum = 0;\n  for (auto i = list1.begin(); i != list1.end(); i++) {\n    sum += std::round(*i);\n  }\n  return sum * list1.size();",
    "  long sum = 0;\n  for (auto i : list1) {\n    sum += std::round(i);\n  }\n  return sum * list1.size();",
    "  // your code here\n  long sum = 0;\n  for(int i=0;i<list1.size();i++){\n    sum += std::round(list1[i]);\n  }\n  return sum*list1.size();",
    "  long sum = 0;\n  for (auto i : list1) {\n    sum += std::round(i);\n  }\n  return sum * list1.size();",
    "  // your code here\n  int sum = 0;\n  for(auto i : list1){\n    sum += round(i);\n  }\n  return sum * list1.size();",
    "  // your code here\n  return 0;",
    "  long sum = 0;\n  for (auto i : list1) {\n    sum += std::round(i);\n  }\n  return sum * list1.size();",
    "  int sum = 0;\n  int length = 0;\n  for (auto it = list1.begin(); it != list1.end(); it++) {\n    sum += std::round(*it);\n    length++;\n  }\n  return sum * length;",
    "    long sum = 0;\n    for (auto x : list1) {\n        sum += std::round(x);\n    }\n    return sum * list1.size();",
    "  long sum = 0;\n  for (auto i : list1) {\n    sum += std::round(i);\n  }\n  return sum * list1.size();",
    "  long sum = 0;\n  for (auto i : list1) {\n    sum += std::round(i);\n  }\n  return sum;",
    "  assert(list1.type() == typeid(std::vector<int>));\n  std::vector<int> list = std::any_cast<std::vector<int>>(list1);\n  long sum = 0;\n  for (int i = 0; i < list.size(); i++) {\n    sum += std::round(list[i]);\n  }\n  return sum * list.size();",
    "  long sum = 0;\n  for (auto i : list1) {\n    sum += std::round(i);\n  }\n  return sum * list1.size();",
    "  long sum = 0;\n  for (auto i = list1.begin(); i != list1.end(); i++) {\n    sum += round(*i);\n  }\n  return sum * list1.size();",
    "  long sum = 0;\n  for (auto i : list1) {\n    sum += std::round(i);\n  }\n  return sum * list1.size();",
    "  long sum = 0;\n  for (auto i : list1) {\n    sum += std::any_cast<int>(i);\n  }\n  return sum;",
    "  long sum = 0;\n  for (auto i : list1) {\n    sum += std::round(i);\n  }\n  return sum * list1.size();",
    "  // your code here\n  long sum = 0;\n  for(auto i : list1){\n    sum += std::round(i);\n  }\n  return sum * list1.size();",
    "  long sum = 0;\n  for (auto i : list1) {\n    sum += std::round(i);\n  }\n  return sum * list1.size();",
    "  long sum = 0;\n  for (auto i : list1) {\n    sum += std::round(i);\n  }\n  return sum * list1.size();",
    "  // your code here\n  return 0;",
    "  // your code here\n  long sum = 0;\n  for (auto i : list1) {\n    sum += std::any_cast<long>(i);\n  }\n  return sum * list1.size();",
    "  long sum = 0;\n  for (int i = 0; i < list1.size(); i++) {\n    sum += std::round(list1[i]);\n  }\n  return sum * list1.size();",
    "  long sum = 0;\n  for (auto it = list1.begin(); it != list1.end(); it++) {\n    sum += std::round(*it);\n  }\n  return sum * list1.size();",
    "\tlong sum=0;\n\tfor(int i=0;i<list1.size();i++)\n\t{\n\t\tsum+=round(list1[i]);\n\t}\n\treturn sum*list1.size();",
    "  long sum = 0;\n  for (auto i : list1) {\n    sum += round(i);\n  }\n  return sum * list1.size();",
    "  long sum = 0;\n  for (int i = 0; i < list1.size(); i++) {\n    sum += std::round(list1[i]);\n  }\n  return sum * list1.size();",
    "  long sum = 0;\n  for (auto i : list1) {\n    sum += std::round(i);\n  }\n  return sum * list1.size();",
    "  long sum = 0;\n  for (auto i : list1) {\n    sum += std::round(i);\n  }\n  return sum * list1.size();",
    "  long sum = 0;\n  for (auto i : list1) {\n    sum += std::round(i);\n  }\n  return sum * list1.size();",
    "  long sum = 0;\n  for (auto i : list1) {\n    sum += std::round(i);\n  }\n  return sum * list1.size();",
    "  long sum = 0;\n  for (int i = 0; i < list1.size(); i++) {\n    sum += std::round(list1[i]);\n  }\n  return sum * list1.size();",
    "  // your code here\n  long sum = 0;\n  for (auto i : list1) {\n    sum += std::round(i);\n  }\n  return sum * list1.size();",
    "  long sum = 0;\n  for (auto i : list1) {\n    sum += std::round(i);\n  }\n  return sum * list1.size();",
    "  long sum = 0;\n  for (auto i = list1.begin(); i != list1.end(); i++) {\n    sum += round(*i);\n  }\n  return sum * list1.size();",
    "  long sum = 0;\n  for (auto i : list1) {\n    sum += std::round(i);\n  }\n  return sum * list1.size();",
    "  long sum = 0;\n  for(auto i:list1)\n    sum += std::round(i);\n  return sum * list1.size();",
    "  long sum = 0;\n  for (auto i : list1) {\n    sum += std::round(i);\n  }\n  return sum * list1.size();",
    "  long sum = 0;\n  for (auto i : list1) {\n    sum += std::round(i);\n  }\n  return sum * list1.size();",
    "    long sum = 0;\n    for (auto i : list1) {\n        sum += std::round(i);\n    }\n    return sum * list1.size();",
    "  int sum = 0;\n  for (auto i : list1) {\n    sum += std::round(i);\n  }\n  return sum * list1.size();",
    "  long sum = 0;\n  for (auto i : list1) {\n    sum += std::round(i);\n  }\n  return sum * list1.size();",
    "  // your code here\n  long sum = 0;\n  for(auto i : list1){\n    sum += std::round(i);\n  }\n  return sum * list1.size();",
    "  int sum = 0;\n  int len = list1.size();\n  for(int i = 0; i < len; i++) {\n    sum += std::round(list1[i]);\n  }\n  return sum * len;",
    "  long sum = 0;\n  for (auto i : list1) {\n    sum += std::round(i);\n  }\n  return sum * list1.size();",
    "    long sum = 0;\n    for(auto i : list1){\n        sum += std::round(i);\n    }\n    return sum * list1.size();",
    "  // your code here\n  return 0;",
    "  long sum = 0;\n  int len = list1.size();\n  for (int i = 0; i < len; i++) {\n    sum += std::round(list1[i]);\n  }\n  return sum * len;",
    "  long sum = 0;\n  for (int i = 0; i < list1.size(); i++) {\n    sum += std::round(list1[i]);\n  }\n  return sum * list1.size();",
    "  long sum = 0;\n  for(int i=0;i<list1.size();i++){\n    sum+=std::round(list1[i]);\n  }\n  return sum*list1.size();",
    "  // Your code here\n  long sum = 0;\n  for(auto i : list1){\n    sum += std::round(i);\n  }\n  return sum * list1.size();",
    "  long sum = 0;\n  for (auto i : list1) {\n    sum += std::round(i);\n  }\n  return sum * list1.size();",
    "  long sum = 0;\n  for (auto i = list1.begin(); i != list1.end(); i++) {\n    sum += std::round(*i);\n  }\n  return sum * list1.size();",
    "  long sum = 0;\n  for (auto i : list1) {\n    sum += std::round(i);\n  }\n  return sum * list1.size();",
    "  long sum = 0;\n  for (auto i : list1) {\n    sum += std::round(i);\n  }\n  return sum * list1.size();",
    "  long sum = 0;\n  for (int i = 0; i < list1.size(); i++) {\n    sum += std::round(list1[i]);\n  }\n  return sum * list1.size();",
    "  long sum = 0;\n  for (auto i : list1) {\n    sum += round(i);\n  }\n  return sum * list1.size();",
    "  long sum = 0;\n  int len = list1.size();\n  for (int i = 0; i < len; i++) {\n    sum += std::round(list1[i]);\n  }\n  return sum * len;",
    "  long sum = 0;\n  for (auto i : list1) {\n    sum += round(i);\n  }\n  return sum * list1.size();",
    "  long sum = 0;\n  for (int i = 0; i < list1.size(); i++) {\n    sum += std::round(list1[i]);\n  }\n  return sum * list1.size();",
    "  long sum = 0;\n  for (auto i = list1.begin(); i != list1.end(); i++) {\n    sum += std::round(*i);\n  }\n  return sum * list1.size();",
    "  long sum = 0;\n  for (int i = 0; i < list1.size(); i++) {\n    sum += std::round(list1[i]);\n  }\n  return sum * list1.size();",
    "  long sum = 0;\n  for (auto i : list1) {\n    sum += std::round(i);\n  }\n  return sum * list1.size();",
    "  long sum = 0;\n  for (auto i : list1) {\n    sum += std::round(i);\n  }\n  return sum * list1.size();",
    "  long sum = 0;\n  for (int i = 0; i < list1.size(); i++) {\n    sum += std::round(list1[i]);\n  }\n  return sum * list1.size();",
    "  long sum = 0;\n  for (int i = 0; i < list1.size(); i++) {\n    sum += std::round(list1[i]);\n  }\n  return sum * list1.size();",
    "  long sum = 0;\n  for (auto i : list1) {\n    sum += round(i);\n  }\n  return sum * list1.size();",
    "  // your code here\n  long sum = 0;\n  for(auto i:list1)\n  {\n    sum += round(i);\n  }\n  return sum * list1.size();",
    "  long sum = 0;\n  for (int i = 0; i < list1.size(); i++) {\n    sum += std::round(list1[i]);\n  }\n  return sum * list1.size();",
    "  long sum = 0;\n  for (int i = 0; i < list1.size(); i++) {\n    sum += std::round(list1[i]);\n  }\n  return sum * list1.size();",
    "  long sum = 0;\n  for (auto i : list1) {\n    sum += std::round(i);\n  }\n  return sum * list1.size();",
    "  // your code here\n  return 0;",
    "  long sum = 0;\n  for (auto i = list1.begin(); i != list1.end(); ++i) {\n    sum += std::round(*i);\n  }\n  return sum * list1.size();",
    "  // your code here\n  long sum = 0;\n  for(int i = 0; i < list1.size(); i++)\n  {\n    sum += round(list1[i]);\n  }\n  return sum * list1.size();",
    "  // your code here\n  long sum = 0;\n  for(auto i : list1){\n    sum += std::round(i);\n  }\n  return sum * list1.size();",
    "    long sum = 0;\n    for (auto i : list1) {\n        sum += std::round(i);\n    }\n    return sum * list1.size();",
    "  // your code here\n  return 0;",
    "  long sum = 0;\n  for (auto i : list1) {\n    sum += std::round(i);\n  }\n  return sum * list1.size();",
    "  // your code here\n  long sum = 0;\n  for(auto i : list1){\n    sum += std::round(i);\n  }\n  return sum * list1.size();",
    "    long sum = 0;\n    for (auto i : list1) {\n        sum += round(i);\n    }\n    return sum * list1.size();",
    "  long sum = 0;\n  for (auto it = list1.begin(); it != list1.end(); it++) {\n    sum += round(*it);\n  }\n  return sum * list1.size();",
    "  long sum = 0;\n  for (auto i = list1.begin(); i != list1.end(); i++) {\n    sum += std::round(*i);\n  }\n  return sum * list1.size();",
    "  // Your code here\n  long sum=0;\n  for(int i=0;i<list1.size();i++)\n  {\n    sum+=round(list1[i]);\n  }\n  return sum*list1.size();",
    "  long sum = 0;\n  for (auto &elem : list1) {\n    sum += std::round(elem);\n  }\n  return sum * list1.size();",
    "  long sum = 0;\n  for (auto i : list1) {\n    sum += std::round(i);\n  }\n  return sum * list1.size();",
    "  long sum = 0;\n  for (auto i : list1) {\n    sum += std::round(i);\n  }\n  return sum * list1.size();",
    "  long sum = 0;\n  for (int i = 0; i < list1.size(); i++) {\n    sum += std::round(list1[i]);\n  }\n  return sum * list1.size();",
    "  long sum = 0;\n  for(auto i : list1) {\n    sum += std::round(i);\n  }\n  return sum * list1.size();",
    "    long sum = 0;\n    for (auto i : list1) {\n        sum += std::round(i);\n    }\n    return sum * list1.size();",
    "  long sum = 0;\n  for (int i = 0; i < list1.size(); i++) {\n    sum += std::round(list1[i]);\n  }\n  return sum * list1.size();",
    "  long sum = 0;\n  for (auto i : list1) {\n    sum += std::round(i);\n  }\n  return sum * list1.size();",
    "  long sum = 0;\n  for (int i = 0; i < list1.size(); i++) {\n    sum += std::round(list1[i]);\n  }\n  return sum * list1.size();",
    "  long sum = 0;\n  for (auto i : list1) {\n    sum += std::round(i);\n  }\n  return sum * list1.size();",
    "\tlong sum = 0;\n\tfor (auto i : list1) {\n\t\tsum += std::round(i);\n\t}\n\treturn sum * list1.size();",
    "  // your code here\n  long sum = 0;\n  int len = list1.size();\n  for(int i = 0; i < len; i++){\n    sum += std::round(list1[i]);\n  }\n  return sum * len;",
    "  // your code here\n  return 0;",
    "  long sum = 0;\n  for (auto i = list1.begin(); i != list1.end(); i++) {\n    sum += std::round(*i);\n  }\n  return sum * list1.size();",
    "    long sum = 0;\n    for (auto i : list1) {\n        sum += std::round(i);\n    }\n    return sum * list1.size();",
    "  long sum = 0;\n  for (int i = 0; i < list1.size(); i++) {\n    sum += std::round(list1[i]);\n  }\n  return sum * list1.size();",
    "    int sum = 0;\n    for(int i = 0; i < list1.size(); i++) {\n        sum += round(list1[i]);\n    }\n    return sum * list1.size();",
    "  long sum = 0;\n  for (auto it = list1.begin(); it != list1.end(); it++) {\n    sum += std::round(*it);\n  }\n  return sum * list1.size();"
  ]
}
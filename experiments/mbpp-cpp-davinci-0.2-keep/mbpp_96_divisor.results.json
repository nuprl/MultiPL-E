{
  "name": "mbpp_96_divisor",
  "language": "cpp",
  "prompt": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the number of divisors of a given integer.\nlong divisor(long n) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_96_divisor.py",
  "prompt_terminology": "verbatim",
  "tests": "}\nint main() {\n    auto candidate = divisor;\n    assert(candidate((15)) == (4));\n    assert(candidate((12)) == (6));\n    assert(candidate((9)) == (3));\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "results": [
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the number of divisors of a given integer.\nlong divisor(long n) {\n    long count = 0;\n    for (int i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = divisor;\n    assert(candidate((15)) == (4));\n    assert(candidate((12)) == (6));\n    assert(candidate((9)) == (3));\n}\n",
      "timestamp": 1665510053,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the number of divisors of a given integer.\nlong divisor(long n) {\n    long count = 0;\n    for(long i = 1; i <= n; i++) {\n        if(n % i == 0) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = divisor;\n    assert(candidate((15)) == (4));\n    assert(candidate((12)) == (6));\n    assert(candidate((9)) == (3));\n}\n",
      "timestamp": 1665510053,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the number of divisors of a given integer.\nlong divisor(long n) {\n    long count = 0;\n    for (int i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = divisor;\n    assert(candidate((15)) == (4));\n    assert(candidate((12)) == (6));\n    assert(candidate((9)) == (3));\n}\n",
      "timestamp": 1665510053,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the number of divisors of a given integer.\nlong divisor(long n) {\n    long count = 0;\n    for (long i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = divisor;\n    assert(candidate((15)) == (4));\n    assert(candidate((12)) == (6));\n    assert(candidate((9)) == (3));\n}\n",
      "timestamp": 1665510053,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the number of divisors of a given integer.\nlong divisor(long n) {\n    long count = 0;\n    for(long i = 1; i <= n; i++) {\n        if(n % i == 0) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = divisor;\n    assert(candidate((15)) == (4));\n    assert(candidate((12)) == (6));\n    assert(candidate((9)) == (3));\n}\n",
      "timestamp": 1665510053,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the number of divisors of a given integer.\nlong divisor(long n) {\n    long count = 0;\n    for (int i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = divisor;\n    assert(candidate((15)) == (4));\n    assert(candidate((12)) == (6));\n    assert(candidate((9)) == (3));\n}\n",
      "timestamp": 1665510053,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the number of divisors of a given integer.\nlong divisor(long n) {\n    long count = 0;\n    for(int i=1;i<=n;i++) {\n        if(n%i==0) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = divisor;\n    assert(candidate((15)) == (4));\n    assert(candidate((12)) == (6));\n    assert(candidate((9)) == (3));\n}\n",
      "timestamp": 1665510053,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the number of divisors of a given integer.\nlong divisor(long n) {\n    long count = 0;\n    for (long i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = divisor;\n    assert(candidate((15)) == (4));\n    assert(candidate((12)) == (6));\n    assert(candidate((9)) == (3));\n}\n",
      "timestamp": 1665510053,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the number of divisors of a given integer.\nlong divisor(long n) {\n    long count = 0;\n    for (long i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = divisor;\n    assert(candidate((15)) == (4));\n    assert(candidate((12)) == (6));\n    assert(candidate((9)) == (3));\n}\n",
      "timestamp": 1665510053,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the number of divisors of a given integer.\nlong divisor(long n) {\n    long count = 0;\n    for (long i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = divisor;\n    assert(candidate((15)) == (4));\n    assert(candidate((12)) == (6));\n    assert(candidate((9)) == (3));\n}\n",
      "timestamp": 1665510053,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the number of divisors of a given integer.\nlong divisor(long n) {\n    long count = 0;\n    for(long i = 1; i <= n; i++) {\n        if(n % i == 0) {\n            count = count + 1;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = divisor;\n    assert(candidate((15)) == (4));\n    assert(candidate((12)) == (6));\n    assert(candidate((9)) == (3));\n}\n",
      "timestamp": 1665510053,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the number of divisors of a given integer.\nlong divisor(long n) {\n    long count = 0;\n    for(long i = 1; i <= n; i++) {\n        if(n % i == 0) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = divisor;\n    assert(candidate((15)) == (4));\n    assert(candidate((12)) == (6));\n    assert(candidate((9)) == (3));\n}\n",
      "timestamp": 1665510053,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the number of divisors of a given integer.\nlong divisor(long n) {\n    // Write your code here\n    long count=0;\n    for(long i=1;i<=n;i++)\n    {\n        if(n%i==0)\n        {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = divisor;\n    assert(candidate((15)) == (4));\n    assert(candidate((12)) == (6));\n    assert(candidate((9)) == (3));\n}\n",
      "timestamp": 1665510053,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the number of divisors of a given integer.\nlong divisor(long n) {\n    long count = 0;\n    for(long i = 1; i <= n; i++) {\n        if(n % i == 0) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = divisor;\n    assert(candidate((15)) == (4));\n    assert(candidate((12)) == (6));\n    assert(candidate((9)) == (3));\n}\n",
      "timestamp": 1665510053,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the number of divisors of a given integer.\nlong divisor(long n) {\n    long count = 0;\n    for(int i=1;i<=n;i++) {\n        if(n%i==0) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = divisor;\n    assert(candidate((15)) == (4));\n    assert(candidate((12)) == (6));\n    assert(candidate((9)) == (3));\n}\n",
      "timestamp": 1665510053,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the number of divisors of a given integer.\nlong divisor(long n) {\n    long count = 0;\n    for (long i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = divisor;\n    assert(candidate((15)) == (4));\n    assert(candidate((12)) == (6));\n    assert(candidate((9)) == (3));\n}\n",
      "timestamp": 1665510053,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the number of divisors of a given integer.\nlong divisor(long n) {\n    long count = 0;\n    for (long i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = divisor;\n    assert(candidate((15)) == (4));\n    assert(candidate((12)) == (6));\n    assert(candidate((9)) == (3));\n}\n",
      "timestamp": 1665510053,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the number of divisors of a given integer.\nlong divisor(long n) {\n    long count = 0;\n    for(long i = 1; i <= n; i++) {\n        if(n % i == 0) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = divisor;\n    assert(candidate((15)) == (4));\n    assert(candidate((12)) == (6));\n    assert(candidate((9)) == (3));\n}\n",
      "timestamp": 1665510053,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the number of divisors of a given integer.\nlong divisor(long n) {\n    long count = 0;\n    for (long i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = divisor;\n    assert(candidate((15)) == (4));\n    assert(candidate((12)) == (6));\n    assert(candidate((9)) == (3));\n}\n",
      "timestamp": 1665510053,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the number of divisors of a given integer.\nlong divisor(long n) {\n    long count = 0;\n    for (long i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count += 1;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = divisor;\n    assert(candidate((15)) == (4));\n    assert(candidate((12)) == (6));\n    assert(candidate((9)) == (3));\n}\n",
      "timestamp": 1665510053,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the number of divisors of a given integer.\nlong divisor(long n) {\n    long count = 0;\n    for(long i = 1; i <= n; i++) {\n        if(n % i == 0) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = divisor;\n    assert(candidate((15)) == (4));\n    assert(candidate((12)) == (6));\n    assert(candidate((9)) == (3));\n}\n",
      "timestamp": 1665510053,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the number of divisors of a given integer.\nlong divisor(long n) {\n    long count = 0;\n    for(long i = 1; i <= n; i++) {\n        if(n % i == 0) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = divisor;\n    assert(candidate((15)) == (4));\n    assert(candidate((12)) == (6));\n    assert(candidate((9)) == (3));\n}\n",
      "timestamp": 1665510053,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the number of divisors of a given integer.\nlong divisor(long n) {\n    long count = 0;\n    for(long i = 1; i <= n; i++) {\n        if(n % i == 0) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = divisor;\n    assert(candidate((15)) == (4));\n    assert(candidate((12)) == (6));\n    assert(candidate((9)) == (3));\n}\n",
      "timestamp": 1665510053,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the number of divisors of a given integer.\nlong divisor(long n) {\n    long count = 0;\n    for (long i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = divisor;\n    assert(candidate((15)) == (4));\n    assert(candidate((12)) == (6));\n    assert(candidate((9)) == (3));\n}\n",
      "timestamp": 1665510053,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the number of divisors of a given integer.\nlong divisor(long n) {\n    long c=0;\n    for(long i=1;i<=n;i++)\n    {\n        if(n%i==0)\n        {\n            c++;\n        }\n    }\n    return c;\n}\nint main() {\n    auto candidate = divisor;\n    assert(candidate((15)) == (4));\n    assert(candidate((12)) == (6));\n    assert(candidate((9)) == (3));\n}\n",
      "timestamp": 1666122606,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the number of divisors of a given integer.\nlong divisor(long n) {\n    long count = 0;\n    for(long i = 1; i <= n; i++) {\n        if(n % i == 0) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = divisor;\n    assert(candidate((15)) == (4));\n    assert(candidate((12)) == (6));\n    assert(candidate((9)) == (3));\n}\n",
      "timestamp": 1665510053,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the number of divisors of a given integer.\nlong divisor(long n) {\n    long count = 0;\n    for (long i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = divisor;\n    assert(candidate((15)) == (4));\n    assert(candidate((12)) == (6));\n    assert(candidate((9)) == (3));\n}\n",
      "timestamp": 1665510053,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the number of divisors of a given integer.\nlong divisor(long n) {\n    long count = 0;\n    for (long i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = divisor;\n    assert(candidate((15)) == (4));\n    assert(candidate((12)) == (6));\n    assert(candidate((9)) == (3));\n}\n",
      "timestamp": 1665510053,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the number of divisors of a given integer.\nlong divisor(long n) {\n    long count = 0;\n    for(long i = 1; i <= n; i++) {\n        if(n % i == 0) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = divisor;\n    assert(candidate((15)) == (4));\n    assert(candidate((12)) == (6));\n    assert(candidate((9)) == (3));\n}\n",
      "timestamp": 1665510053,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the number of divisors of a given integer.\nlong divisor(long n) {\n    long count = 0;\n    for(int i = 1; i <= n; i++) {\n        if(n % i == 0) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = divisor;\n    assert(candidate((15)) == (4));\n    assert(candidate((12)) == (6));\n    assert(candidate((9)) == (3));\n}\n",
      "timestamp": 1666122606,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the number of divisors of a given integer.\nlong divisor(long n) {\n    long c=0;\n    for(long i=1;i<=n;i++)\n    {\n        if(n%i==0)\n        {\n            c++;\n        }\n    }\n    return c;\n}\nint main() {\n    auto candidate = divisor;\n    assert(candidate((15)) == (4));\n    assert(candidate((12)) == (6));\n    assert(candidate((9)) == (3));\n}\n",
      "timestamp": 1666122606,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the number of divisors of a given integer.\nlong divisor(long n) {\n    long count = 0;\n    for(long i = 1; i <= n; i++) {\n        if(n % i == 0) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = divisor;\n    assert(candidate((15)) == (4));\n    assert(candidate((12)) == (6));\n    assert(candidate((9)) == (3));\n}\n",
      "timestamp": 1665510053,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the number of divisors of a given integer.\nlong divisor(long n) {\n    long count = 0;\n    for (int i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = divisor;\n    assert(candidate((15)) == (4));\n    assert(candidate((12)) == (6));\n    assert(candidate((9)) == (3));\n}\n",
      "timestamp": 1665510053,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the number of divisors of a given integer.\nlong divisor(long n) {\n    long count = 0;\n    for(long i = 1; i <= n; i++) {\n        if(n % i == 0) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = divisor;\n    assert(candidate((15)) == (4));\n    assert(candidate((12)) == (6));\n    assert(candidate((9)) == (3));\n}\n",
      "timestamp": 1665510053,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the number of divisors of a given integer.\nlong divisor(long n) {\n    long count = 0;\n    for(long i = 1; i <= n; i++) {\n        if(n % i == 0) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = divisor;\n    assert(candidate((15)) == (4));\n    assert(candidate((12)) == (6));\n    assert(candidate((9)) == (3));\n}\n",
      "timestamp": 1665510053,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the number of divisors of a given integer.\nlong divisor(long n) {\n    long count = 0;\n    for(int i = 1; i <= n; i++) {\n        if(n % i == 0) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = divisor;\n    assert(candidate((15)) == (4));\n    assert(candidate((12)) == (6));\n    assert(candidate((9)) == (3));\n}\n",
      "timestamp": 1666122606,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the number of divisors of a given integer.\nlong divisor(long n) {\n    long count = 0;\n    for (long i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = divisor;\n    assert(candidate((15)) == (4));\n    assert(candidate((12)) == (6));\n    assert(candidate((9)) == (3));\n}\n",
      "timestamp": 1665510053,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the number of divisors of a given integer.\nlong divisor(long n) {\n    long count = 0;\n    for(long i = 1; i <= n; i++) {\n        if(n % i == 0) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = divisor;\n    assert(candidate((15)) == (4));\n    assert(candidate((12)) == (6));\n    assert(candidate((9)) == (3));\n}\n",
      "timestamp": 1665510053,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the number of divisors of a given integer.\nlong divisor(long n) {\n    long count = 0;\n    for (long i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count += 1;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = divisor;\n    assert(candidate((15)) == (4));\n    assert(candidate((12)) == (6));\n    assert(candidate((9)) == (3));\n}\n",
      "timestamp": 1665510053,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the number of divisors of a given integer.\nlong divisor(long n) {\n    long count = 0;\n    for (long i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = divisor;\n    assert(candidate((15)) == (4));\n    assert(candidate((12)) == (6));\n    assert(candidate((9)) == (3));\n}\n",
      "timestamp": 1665510053,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the number of divisors of a given integer.\nlong divisor(long n) {\n    long count = 0;\n    for(long i = 1; i <= n; i++) {\n        if(n % i == 0)\n            count++;\n    }\n    return count;\n}\nint main() {\n    auto candidate = divisor;\n    assert(candidate((15)) == (4));\n    assert(candidate((12)) == (6));\n    assert(candidate((9)) == (3));\n}\n",
      "timestamp": 1666122606,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the number of divisors of a given integer.\nlong divisor(long n) {\n    long count = 0;\n    for(long i = 1; i <= n; i++) {\n        if(n % i == 0) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = divisor;\n    assert(candidate((15)) == (4));\n    assert(candidate((12)) == (6));\n    assert(candidate((9)) == (3));\n}\n",
      "timestamp": 1665510053,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the number of divisors of a given integer.\nlong divisor(long n) {\n    long count = 0;\n    for(long i = 1; i <= n; i++) {\n        if(n % i == 0) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = divisor;\n    assert(candidate((15)) == (4));\n    assert(candidate((12)) == (6));\n    assert(candidate((9)) == (3));\n}\n",
      "timestamp": 1665510053,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the number of divisors of a given integer.\nlong divisor(long n) {\n    long count = 0;\n    for(long i = 1; i <= n; i++) {\n        if(n % i == 0) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = divisor;\n    assert(candidate((15)) == (4));\n    assert(candidate((12)) == (6));\n    assert(candidate((9)) == (3));\n}\n",
      "timestamp": 1665510053,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the number of divisors of a given integer.\nlong divisor(long n) {\n    long count = 0;\n    for(long i = 1; i <= n; i++) {\n        if(n % i == 0) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = divisor;\n    assert(candidate((15)) == (4));\n    assert(candidate((12)) == (6));\n    assert(candidate((9)) == (3));\n}\n",
      "timestamp": 1665510053,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the number of divisors of a given integer.\nlong divisor(long n) {\n    long count = 0;\n    for (long i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = divisor;\n    assert(candidate((15)) == (4));\n    assert(candidate((12)) == (6));\n    assert(candidate((9)) == (3));\n}\n",
      "timestamp": 1665510053,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the number of divisors of a given integer.\nlong divisor(long n) {\n    long count = 0;\n    for(long i = 1; i <= n; i++) {\n        if(n % i == 0) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = divisor;\n    assert(candidate((15)) == (4));\n    assert(candidate((12)) == (6));\n    assert(candidate((9)) == (3));\n}\n",
      "timestamp": 1665510053,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the number of divisors of a given integer.\nlong divisor(long n) {\n    long count = 0;\n    for(long i = 1; i <= n; i++) {\n        if(n % i == 0) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = divisor;\n    assert(candidate((15)) == (4));\n    assert(candidate((12)) == (6));\n    assert(candidate((9)) == (3));\n}\n",
      "timestamp": 1665510053,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the number of divisors of a given integer.\nlong divisor(long n) {\n    long count = 0;\n    for(long i = 1; i <= n; i++) {\n        if(n % i == 0) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = divisor;\n    assert(candidate((15)) == (4));\n    assert(candidate((12)) == (6));\n    assert(candidate((9)) == (3));\n}\n",
      "timestamp": 1665510053,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the number of divisors of a given integer.\nlong divisor(long n) {\n    long count = 0;\n    for (long i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = divisor;\n    assert(candidate((15)) == (4));\n    assert(candidate((12)) == (6));\n    assert(candidate((9)) == (3));\n}\n",
      "timestamp": 1665510053,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the number of divisors of a given integer.\nlong divisor(long n) {\n    long count = 0;\n    for(int i = 1; i <= n; i++) {\n        if(n % i == 0) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = divisor;\n    assert(candidate((15)) == (4));\n    assert(candidate((12)) == (6));\n    assert(candidate((9)) == (3));\n}\n",
      "timestamp": 1666122606,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the number of divisors of a given integer.\nlong divisor(long n) {\n    long count = 0;\n    for (int i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = divisor;\n    assert(candidate((15)) == (4));\n    assert(candidate((12)) == (6));\n    assert(candidate((9)) == (3));\n}\n",
      "timestamp": 1665510053,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the number of divisors of a given integer.\nlong divisor(long n) {\n    long count = 0;\n    for (long i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = divisor;\n    assert(candidate((15)) == (4));\n    assert(candidate((12)) == (6));\n    assert(candidate((9)) == (3));\n}\n",
      "timestamp": 1665510053,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the number of divisors of a given integer.\nlong divisor(long n) {\n    long count = 0;\n    for(long i = 1; i <= n; i++) {\n        if(n % i == 0) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = divisor;\n    assert(candidate((15)) == (4));\n    assert(candidate((12)) == (6));\n    assert(candidate((9)) == (3));\n}\n",
      "timestamp": 1665510053,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the number of divisors of a given integer.\nlong divisor(long n) {\n    long count = 0;\n    for(long i = 1; i <= n; i++) {\n        if(n % i == 0) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = divisor;\n    assert(candidate((15)) == (4));\n    assert(candidate((12)) == (6));\n    assert(candidate((9)) == (3));\n}\n",
      "timestamp": 1665510053,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the number of divisors of a given integer.\nlong divisor(long n) {\n    long count = 0;\n    for (long i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = divisor;\n    assert(candidate((15)) == (4));\n    assert(candidate((12)) == (6));\n    assert(candidate((9)) == (3));\n}\n",
      "timestamp": 1665510053,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the number of divisors of a given integer.\nlong divisor(long n) {\n    long count = 0;\n    for (long i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = divisor;\n    assert(candidate((15)) == (4));\n    assert(candidate((12)) == (6));\n    assert(candidate((9)) == (3));\n}\n",
      "timestamp": 1665510053,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the number of divisors of a given integer.\nlong divisor(long n) {\n    long count = 0;\n    for(long i = 1; i <= n; i++) {\n        if(n % i == 0) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = divisor;\n    assert(candidate((15)) == (4));\n    assert(candidate((12)) == (6));\n    assert(candidate((9)) == (3));\n}\n",
      "timestamp": 1665510053,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the number of divisors of a given integer.\nlong divisor(long n) {\n    long count = 0;\n    for (long i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = divisor;\n    assert(candidate((15)) == (4));\n    assert(candidate((12)) == (6));\n    assert(candidate((9)) == (3));\n}\n",
      "timestamp": 1665510053,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the number of divisors of a given integer.\nlong divisor(long n) {\n    long count = 0;\n    for(long i = 1; i <= n; i++) {\n        if(n % i == 0) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = divisor;\n    assert(candidate((15)) == (4));\n    assert(candidate((12)) == (6));\n    assert(candidate((9)) == (3));\n}\n",
      "timestamp": 1665510053,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the number of divisors of a given integer.\nlong divisor(long n) {\n    long count = 0;\n    for (long i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = divisor;\n    assert(candidate((15)) == (4));\n    assert(candidate((12)) == (6));\n    assert(candidate((9)) == (3));\n}\n",
      "timestamp": 1665510053,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the number of divisors of a given integer.\nlong divisor(long n) {\n    long count = 0;\n    for (long i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = divisor;\n    assert(candidate((15)) == (4));\n    assert(candidate((12)) == (6));\n    assert(candidate((9)) == (3));\n}\n",
      "timestamp": 1665510053,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the number of divisors of a given integer.\nlong divisor(long n) {\n    int count = 0;\n    for (int i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = divisor;\n    assert(candidate((15)) == (4));\n    assert(candidate((12)) == (6));\n    assert(candidate((9)) == (3));\n}\n",
      "timestamp": 1666122606,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the number of divisors of a given integer.\nlong divisor(long n) {\n    long count = 0;\n    for (long i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = divisor;\n    assert(candidate((15)) == (4));\n    assert(candidate((12)) == (6));\n    assert(candidate((9)) == (3));\n}\n",
      "timestamp": 1665510053,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the number of divisors of a given integer.\nlong divisor(long n) {\n    long count = 0;\n    for (long i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = divisor;\n    assert(candidate((15)) == (4));\n    assert(candidate((12)) == (6));\n    assert(candidate((9)) == (3));\n}\n",
      "timestamp": 1665510053,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the number of divisors of a given integer.\nlong divisor(long n) {\n    long count = 0;\n    for(long i = 1; i <= n; i++) {\n        if(n % i == 0) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = divisor;\n    assert(candidate((15)) == (4));\n    assert(candidate((12)) == (6));\n    assert(candidate((9)) == (3));\n}\n",
      "timestamp": 1665510053,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the number of divisors of a given integer.\nlong divisor(long n) {\n    long count = 0;\n    for(long i = 1; i <= n; i++) {\n        if(n % i == 0) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = divisor;\n    assert(candidate((15)) == (4));\n    assert(candidate((12)) == (6));\n    assert(candidate((9)) == (3));\n}\n",
      "timestamp": 1665510053,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the number of divisors of a given integer.\nlong divisor(long n) {\n    long count = 0;\n    for (long i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = divisor;\n    assert(candidate((15)) == (4));\n    assert(candidate((12)) == (6));\n    assert(candidate((9)) == (3));\n}\n",
      "timestamp": 1665510053,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the number of divisors of a given integer.\nlong divisor(long n) {\n    long count = 0;\n    for (long i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = divisor;\n    assert(candidate((15)) == (4));\n    assert(candidate((12)) == (6));\n    assert(candidate((9)) == (3));\n}\n",
      "timestamp": 1665510053,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the number of divisors of a given integer.\nlong divisor(long n) {\n    long count = 0;\n    for (long i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = divisor;\n    assert(candidate((15)) == (4));\n    assert(candidate((12)) == (6));\n    assert(candidate((9)) == (3));\n}\n",
      "timestamp": 1665510053,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the number of divisors of a given integer.\nlong divisor(long n) {\n    long count = 0;\n    for(long i = 1; i <= n; i++) {\n        if(n%i == 0) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = divisor;\n    assert(candidate((15)) == (4));\n    assert(candidate((12)) == (6));\n    assert(candidate((9)) == (3));\n}\n",
      "timestamp": 1666122606,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the number of divisors of a given integer.\nlong divisor(long n) {\n    long count = 0;\n    for(long i = 1; i <= n; i++) {\n        if(n % i == 0) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = divisor;\n    assert(candidate((15)) == (4));\n    assert(candidate((12)) == (6));\n    assert(candidate((9)) == (3));\n}\n",
      "timestamp": 1665510053,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the number of divisors of a given integer.\nlong divisor(long n) {\n    long count = 0;\n    for(long i = 1; i <= n; i++) {\n        if(n % i == 0) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = divisor;\n    assert(candidate((15)) == (4));\n    assert(candidate((12)) == (6));\n    assert(candidate((9)) == (3));\n}\n",
      "timestamp": 1665510053,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the number of divisors of a given integer.\nlong divisor(long n) {\n    long count = 0;\n    for (long i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = divisor;\n    assert(candidate((15)) == (4));\n    assert(candidate((12)) == (6));\n    assert(candidate((9)) == (3));\n}\n",
      "timestamp": 1665510053,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the number of divisors of a given integer.\nlong divisor(long n) {\n    long count = 0;\n    for (long i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = divisor;\n    assert(candidate((15)) == (4));\n    assert(candidate((12)) == (6));\n    assert(candidate((9)) == (3));\n}\n",
      "timestamp": 1665510053,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the number of divisors of a given integer.\nlong divisor(long n) {\n    long count = 0;\n    for(long i = 1; i <= n; i++) {\n        if(n % i == 0) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = divisor;\n    assert(candidate((15)) == (4));\n    assert(candidate((12)) == (6));\n    assert(candidate((9)) == (3));\n}\n",
      "timestamp": 1665510053,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the number of divisors of a given integer.\nlong divisor(long n) {\n    long count = 0;\n    for(long i = 1; i <= n; i++) {\n        if(n % i == 0) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = divisor;\n    assert(candidate((15)) == (4));\n    assert(candidate((12)) == (6));\n    assert(candidate((9)) == (3));\n}\n",
      "timestamp": 1665510053,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the number of divisors of a given integer.\nlong divisor(long n) {\n    long count = 0;\n    for(long i = 1; i <= n; i++) {\n        if(n % i == 0) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = divisor;\n    assert(candidate((15)) == (4));\n    assert(candidate((12)) == (6));\n    assert(candidate((9)) == (3));\n}\n",
      "timestamp": 1665510053,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the number of divisors of a given integer.\nlong divisor(long n) {\n    long count = 0;\n    for (long i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = divisor;\n    assert(candidate((15)) == (4));\n    assert(candidate((12)) == (6));\n    assert(candidate((9)) == (3));\n}\n",
      "timestamp": 1665510053,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the number of divisors of a given integer.\nlong divisor(long n) {\n    long count = 0;\n    for (long i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = divisor;\n    assert(candidate((15)) == (4));\n    assert(candidate((12)) == (6));\n    assert(candidate((9)) == (3));\n}\n",
      "timestamp": 1665510053,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the number of divisors of a given integer.\nlong divisor(long n) {\n    long count = 0;\n    for(long i = 1; i <= n; i++) {\n        if(n % i == 0) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = divisor;\n    assert(candidate((15)) == (4));\n    assert(candidate((12)) == (6));\n    assert(candidate((9)) == (3));\n}\n",
      "timestamp": 1665510053,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the number of divisors of a given integer.\nlong divisor(long n) {\n    long count = 0;\n    for(long i = 1; i <= n; i++) {\n        if(n % i == 0) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = divisor;\n    assert(candidate((15)) == (4));\n    assert(candidate((12)) == (6));\n    assert(candidate((9)) == (3));\n}\n",
      "timestamp": 1665510053,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the number of divisors of a given integer.\nlong divisor(long n) {\n    long count = 0;\n    for (long i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = divisor;\n    assert(candidate((15)) == (4));\n    assert(candidate((12)) == (6));\n    assert(candidate((9)) == (3));\n}\n",
      "timestamp": 1665510053,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the number of divisors of a given integer.\nlong divisor(long n) {\n    long count = 0;\n    for (long i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = divisor;\n    assert(candidate((15)) == (4));\n    assert(candidate((12)) == (6));\n    assert(candidate((9)) == (3));\n}\n",
      "timestamp": 1665510053,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the number of divisors of a given integer.\nlong divisor(long n) {\n    long count = 0;\n    for (int i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = divisor;\n    assert(candidate((15)) == (4));\n    assert(candidate((12)) == (6));\n    assert(candidate((9)) == (3));\n}\n",
      "timestamp": 1665510053,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the number of divisors of a given integer.\nlong divisor(long n) {\n    long count = 0;\n    for(long i = 1; i <= n; i++) {\n        if(n % i == 0) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = divisor;\n    assert(candidate((15)) == (4));\n    assert(candidate((12)) == (6));\n    assert(candidate((9)) == (3));\n}\n",
      "timestamp": 1665510053,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the number of divisors of a given integer.\nlong divisor(long n) {\n    long count = 0;\n    for(long i = 1; i <= n; i++) {\n        if(n % i == 0) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = divisor;\n    assert(candidate((15)) == (4));\n    assert(candidate((12)) == (6));\n    assert(candidate((9)) == (3));\n}\n",
      "timestamp": 1665510053,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the number of divisors of a given integer.\nlong divisor(long n) {\n    long count = 0;\n    for (long i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = divisor;\n    assert(candidate((15)) == (4));\n    assert(candidate((12)) == (6));\n    assert(candidate((9)) == (3));\n}\n",
      "timestamp": 1665510053,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the number of divisors of a given integer.\nlong divisor(long n) {\n    long count = 0;\n    for (long i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = divisor;\n    assert(candidate((15)) == (4));\n    assert(candidate((12)) == (6));\n    assert(candidate((9)) == (3));\n}\n",
      "timestamp": 1665510053,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the number of divisors of a given integer.\nlong divisor(long n) {\n    long count = 0;\n    for(long i = 1; i <= n; i++) {\n        if(n % i == 0) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = divisor;\n    assert(candidate((15)) == (4));\n    assert(candidate((12)) == (6));\n    assert(candidate((9)) == (3));\n}\n",
      "timestamp": 1665510053,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the number of divisors of a given integer.\nlong divisor(long n) {\n    long count = 0;\n    for(int i = 1; i <= n; i++) {\n        if(n % i == 0) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = divisor;\n    assert(candidate((15)) == (4));\n    assert(candidate((12)) == (6));\n    assert(candidate((9)) == (3));\n}\n",
      "timestamp": 1666122606,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the number of divisors of a given integer.\nlong divisor(long n) {\n    long count = 0;\n    for(long i = 1; i <= n; i++) {\n        if(n % i == 0) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = divisor;\n    assert(candidate((15)) == (4));\n    assert(candidate((12)) == (6));\n    assert(candidate((9)) == (3));\n}\n",
      "timestamp": 1665510053,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the number of divisors of a given integer.\nlong divisor(long n) {\n    long count = 0;\n    for (long i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = divisor;\n    assert(candidate((15)) == (4));\n    assert(candidate((12)) == (6));\n    assert(candidate((9)) == (3));\n}\n",
      "timestamp": 1665510053,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the number of divisors of a given integer.\nlong divisor(long n) {\n    long count = 0;\n    for(long i = 1; i <= n; i++) {\n        if(n % i == 0) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = divisor;\n    assert(candidate((15)) == (4));\n    assert(candidate((12)) == (6));\n    assert(candidate((9)) == (3));\n}\n",
      "timestamp": 1665510053,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the number of divisors of a given integer.\nlong divisor(long n) {\n    long count = 0;\n    for(long i = 1; i <= n; i++) {\n        if(n % i == 0) {\n            count += 1;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = divisor;\n    assert(candidate((15)) == (4));\n    assert(candidate((12)) == (6));\n    assert(candidate((9)) == (3));\n}\n",
      "timestamp": 1666122606,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the number of divisors of a given integer.\nlong divisor(long n) {\n    long count = 0;\n    for (long i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = divisor;\n    assert(candidate((15)) == (4));\n    assert(candidate((12)) == (6));\n    assert(candidate((9)) == (3));\n}\n",
      "timestamp": 1665510053,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the number of divisors of a given integer.\nlong divisor(long n) {\n    long count = 0;\n    for(long i = 1; i <= n; i++) {\n        if(n % i == 0)\n            count++;\n    }\n    return count;\n}\nint main() {\n    auto candidate = divisor;\n    assert(candidate((15)) == (4));\n    assert(candidate((12)) == (6));\n    assert(candidate((9)) == (3));\n}\n",
      "timestamp": 1666122606,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the number of divisors of a given integer.\nlong divisor(long n) {\n    long count = 0;\n    for(long i = 1; i <= n; i++) {\n        if(n % i == 0) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = divisor;\n    assert(candidate((15)) == (4));\n    assert(candidate((12)) == (6));\n    assert(candidate((9)) == (3));\n}\n",
      "timestamp": 1665510053,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the number of divisors of a given integer.\nlong divisor(long n) {\n    long count = 0;\n    for(long i = 1; i <= n; i++) {\n        if(n % i == 0) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = divisor;\n    assert(candidate((15)) == (4));\n    assert(candidate((12)) == (6));\n    assert(candidate((9)) == (3));\n}\n",
      "timestamp": 1665510053,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the number of divisors of a given integer.\nlong divisor(long n) {\n    long count = 0;\n    for(long i = 1; i <= n; i++) {\n        if(n % i == 0) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = divisor;\n    assert(candidate((15)) == (4));\n    assert(candidate((12)) == (6));\n    assert(candidate((9)) == (3));\n}\n",
      "timestamp": 1665510053,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the number of divisors of a given integer.\nlong divisor(long n) {\n    long count = 0;\n    for(long i = 1; i <= n; i++) {\n        if(n % i == 0) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = divisor;\n    assert(candidate((15)) == (4));\n    assert(candidate((12)) == (6));\n    assert(candidate((9)) == (3));\n}\n",
      "timestamp": 1665510053,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the number of divisors of a given integer.\nlong divisor(long n) {\n    long count = 0;\n    for(long i = 1; i <= n; i++) {\n        if(n % i == 0) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = divisor;\n    assert(candidate((15)) == (4));\n    assert(candidate((12)) == (6));\n    assert(candidate((9)) == (3));\n}\n",
      "timestamp": 1665510053,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the number of divisors of a given integer.\nlong divisor(long n) {\n    long count = 0;\n    for(long i = 1; i <= n; i++) {\n        if(n % i == 0) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = divisor;\n    assert(candidate((15)) == (4));\n    assert(candidate((12)) == (6));\n    assert(candidate((9)) == (3));\n}\n",
      "timestamp": 1665510053,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the number of divisors of a given integer.\nlong divisor(long n) {\n    long count = 0;\n    for(int i=1;i<=n;i++) {\n        if(n%i == 0) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = divisor;\n    assert(candidate((15)) == (4));\n    assert(candidate((12)) == (6));\n    assert(candidate((9)) == (3));\n}\n",
      "timestamp": 1666122606,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the number of divisors of a given integer.\nlong divisor(long n) {\n    long count = 0;\n    for (long i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = divisor;\n    assert(candidate((15)) == (4));\n    assert(candidate((12)) == (6));\n    assert(candidate((9)) == (3));\n}\n",
      "timestamp": 1665510053,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the number of divisors of a given integer.\nlong divisor(long n) {\n    long count = 0;\n    for (long i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = divisor;\n    assert(candidate((15)) == (4));\n    assert(candidate((12)) == (6));\n    assert(candidate((9)) == (3));\n}\n",
      "timestamp": 1665510053,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the number of divisors of a given integer.\nlong divisor(long n) {\n    long count = 0;\n    for(long i = 1; i <= n; i++) {\n        if(n % i == 0) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = divisor;\n    assert(candidate((15)) == (4));\n    assert(candidate((12)) == (6));\n    assert(candidate((9)) == (3));\n}\n",
      "timestamp": 1665510053,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the number of divisors of a given integer.\nlong divisor(long n) {\n    long count = 0;\n    for(long i = 1; i <= n; i++) {\n        if(n % i == 0) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = divisor;\n    assert(candidate((15)) == (4));\n    assert(candidate((12)) == (6));\n    assert(candidate((9)) == (3));\n}\n",
      "timestamp": 1665510053,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the number of divisors of a given integer.\nlong divisor(long n) {\n    // Write your code here\n    long count = 0;\n    for(int i = 1; i <= n; i++){\n        if(n % i == 0){\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = divisor;\n    assert(candidate((15)) == (4));\n    assert(candidate((12)) == (6));\n    assert(candidate((9)) == (3));\n}\n",
      "timestamp": 1666122606,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the number of divisors of a given integer.\nlong divisor(long n) {\n    int count = 0;\n    for(int i = 1; i <= n; i++) {\n        if(n % i == 0)\n            count++;\n    }\n    return count;\n}\nint main() {\n    auto candidate = divisor;\n    assert(candidate((15)) == (4));\n    assert(candidate((12)) == (6));\n    assert(candidate((9)) == (3));\n}\n",
      "timestamp": 1666122606,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the number of divisors of a given integer.\nlong divisor(long n) {\n    long count = 0;\n    for (long i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = divisor;\n    assert(candidate((15)) == (4));\n    assert(candidate((12)) == (6));\n    assert(candidate((9)) == (3));\n}\n",
      "timestamp": 1665510053,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the number of divisors of a given integer.\nlong divisor(long n) {\n    long count = 0;\n    for(long i = 1; i <= n; i++) {\n        if(n % i == 0) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = divisor;\n    assert(candidate((15)) == (4));\n    assert(candidate((12)) == (6));\n    assert(candidate((9)) == (3));\n}\n",
      "timestamp": 1665510053,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the number of divisors of a given integer.\nlong divisor(long n) {\n    long count = 0;\n    for(long i = 1; i <= n; i++) {\n        if(n % i == 0) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = divisor;\n    assert(candidate((15)) == (4));\n    assert(candidate((12)) == (6));\n    assert(candidate((9)) == (3));\n}\n",
      "timestamp": 1665510053,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the number of divisors of a given integer.\nlong divisor(long n) {\n    long count = 0;\n    for(long i = 1; i <= n; i++) {\n        if(n % i == 0) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = divisor;\n    assert(candidate((15)) == (4));\n    assert(candidate((12)) == (6));\n    assert(candidate((9)) == (3));\n}\n",
      "timestamp": 1665510053,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the number of divisors of a given integer.\nlong divisor(long n) {\n    long count = 0;\n    for (long i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = divisor;\n    assert(candidate((15)) == (4));\n    assert(candidate((12)) == (6));\n    assert(candidate((9)) == (3));\n}\n",
      "timestamp": 1665510053,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the number of divisors of a given integer.\nlong divisor(long n) {\n    long count = 0;\n    for (long i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = divisor;\n    assert(candidate((15)) == (4));\n    assert(candidate((12)) == (6));\n    assert(candidate((9)) == (3));\n}\n",
      "timestamp": 1665510053,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the number of divisors of a given integer.\nlong divisor(long n) {\n    long count = 0;\n    for(long i = 1; i <= n; i++) {\n        if(n % i == 0) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = divisor;\n    assert(candidate((15)) == (4));\n    assert(candidate((12)) == (6));\n    assert(candidate((9)) == (3));\n}\n",
      "timestamp": 1665510053,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the number of divisors of a given integer.\nlong divisor(long n) {\n    long count = 0;\n    for(long i = 1; i <= n; i++) {\n        if(n % i == 0) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = divisor;\n    assert(candidate((15)) == (4));\n    assert(candidate((12)) == (6));\n    assert(candidate((9)) == (3));\n}\n",
      "timestamp": 1665510053,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the number of divisors of a given integer.\nlong divisor(long n) {\n    // Write your code here\n    int count = 0;\n    for(int i=1;i<=n;i++){\n        if(n%i==0){\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = divisor;\n    assert(candidate((15)) == (4));\n    assert(candidate((12)) == (6));\n    assert(candidate((9)) == (3));\n}\n",
      "timestamp": 1666122606,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the number of divisors of a given integer.\nlong divisor(long n) {\n    long count = 0;\n    for (long i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = divisor;\n    assert(candidate((15)) == (4));\n    assert(candidate((12)) == (6));\n    assert(candidate((9)) == (3));\n}\n",
      "timestamp": 1665510053,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the number of divisors of a given integer.\nlong divisor(long n) {\n    long count = 0;\n    for(long i = 1; i <= n; i++) {\n        if(n % i == 0) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = divisor;\n    assert(candidate((15)) == (4));\n    assert(candidate((12)) == (6));\n    assert(candidate((9)) == (3));\n}\n",
      "timestamp": 1665510053,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the number of divisors of a given integer.\nlong divisor(long n) {\n    long count = 0;\n    for(long i=1;i<=n;i++) {\n        if(n%i==0) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = divisor;\n    assert(candidate((15)) == (4));\n    assert(candidate((12)) == (6));\n    assert(candidate((9)) == (3));\n}\n",
      "timestamp": 1666122606,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the number of divisors of a given integer.\nlong divisor(long n) {\n    long count = 0;\n    for (long i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = divisor;\n    assert(candidate((15)) == (4));\n    assert(candidate((12)) == (6));\n    assert(candidate((9)) == (3));\n}\n",
      "timestamp": 1665510053,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the number of divisors of a given integer.\nlong divisor(long n) {\n    long count = 0;\n    for(long i = 1; i <= n; i++) {\n        if(n % i == 0) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = divisor;\n    assert(candidate((15)) == (4));\n    assert(candidate((12)) == (6));\n    assert(candidate((9)) == (3));\n}\n",
      "timestamp": 1665510053,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the number of divisors of a given integer.\nlong divisor(long n) {\n    long count = 0;\n    for (long i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = divisor;\n    assert(candidate((15)) == (4));\n    assert(candidate((12)) == (6));\n    assert(candidate((9)) == (3));\n}\n",
      "timestamp": 1665510053,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the number of divisors of a given integer.\nlong divisor(long n) {\n    long count = 0;\n    for(long i = 1; i <= n; i++) {\n        if(n % i == 0) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = divisor;\n    assert(candidate((15)) == (4));\n    assert(candidate((12)) == (6));\n    assert(candidate((9)) == (3));\n}\n",
      "timestamp": 1665510053,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the number of divisors of a given integer.\nlong divisor(long n) {\n    long count = 0;\n    for(long i = 1; i <= n; i++) {\n        if(n % i == 0) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = divisor;\n    assert(candidate((15)) == (4));\n    assert(candidate((12)) == (6));\n    assert(candidate((9)) == (3));\n}\n",
      "timestamp": 1665510053,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the number of divisors of a given integer.\nlong divisor(long n) {\n    long count = 0;\n    for(long i = 1; i <= n; i++) {\n        if(n % i == 0) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = divisor;\n    assert(candidate((15)) == (4));\n    assert(candidate((12)) == (6));\n    assert(candidate((9)) == (3));\n}\n",
      "timestamp": 1665510053,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the number of divisors of a given integer.\nlong divisor(long n) {\n\tlong c = 0;\n\tfor (long i = 1; i <= n; i++) {\n\t\tif (n % i == 0) {\n\t\t\tc++;\n\t\t}\n\t}\n\treturn c;\n}\nint main() {\n    auto candidate = divisor;\n    assert(candidate((15)) == (4));\n    assert(candidate((12)) == (6));\n    assert(candidate((9)) == (3));\n}\n",
      "timestamp": 1666122606,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the number of divisors of a given integer.\nlong divisor(long n) {\n    long count = 0;\n    for (long i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = divisor;\n    assert(candidate((15)) == (4));\n    assert(candidate((12)) == (6));\n    assert(candidate((9)) == (3));\n}\n",
      "timestamp": 1665510053,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the number of divisors of a given integer.\nlong divisor(long n) {\n    long c = 0;\n    for(long i = 1; i <= n; i++) {\n        if(n % i == 0) {\n            c++;\n        }\n    }\n    return c;\n}\nint main() {\n    auto candidate = divisor;\n    assert(candidate((15)) == (4));\n    assert(candidate((12)) == (6));\n    assert(candidate((9)) == (3));\n}\n",
      "timestamp": 1666122606,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the number of divisors of a given integer.\nlong divisor(long n) {\n    long count = 0;\n    for (int i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = divisor;\n    assert(candidate((15)) == (4));\n    assert(candidate((12)) == (6));\n    assert(candidate((9)) == (3));\n}\n",
      "timestamp": 1665510053,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the number of divisors of a given integer.\nlong divisor(long n) {\n    long count = 0;\n    for (long i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = divisor;\n    assert(candidate((15)) == (4));\n    assert(candidate((12)) == (6));\n    assert(candidate((9)) == (3));\n}\n",
      "timestamp": 1665510053,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the number of divisors of a given integer.\nlong divisor(long n) {\n    long count = 0;\n    for (long i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = divisor;\n    assert(candidate((15)) == (4));\n    assert(candidate((12)) == (6));\n    assert(candidate((9)) == (3));\n}\n",
      "timestamp": 1665510053,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the number of divisors of a given integer.\nlong divisor(long n) {\n    long count = 0;\n    for (long i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = divisor;\n    assert(candidate((15)) == (4));\n    assert(candidate((12)) == (6));\n    assert(candidate((9)) == (3));\n}\n",
      "timestamp": 1665510053,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the number of divisors of a given integer.\nlong divisor(long n) {\n    long count = 0;\n    for (long i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = divisor;\n    assert(candidate((15)) == (4));\n    assert(candidate((12)) == (6));\n    assert(candidate((9)) == (3));\n}\n",
      "timestamp": 1665510053,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the number of divisors of a given integer.\nlong divisor(long n) {\n    long count = 0;\n    for (long i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = divisor;\n    assert(candidate((15)) == (4));\n    assert(candidate((12)) == (6));\n    assert(candidate((9)) == (3));\n}\n",
      "timestamp": 1665510053,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the number of divisors of a given integer.\nlong divisor(long n) {\n    long count = 0;\n    for (long i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = divisor;\n    assert(candidate((15)) == (4));\n    assert(candidate((12)) == (6));\n    assert(candidate((9)) == (3));\n}\n",
      "timestamp": 1665510053,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the number of divisors of a given integer.\nlong divisor(long n) {\n    long count = 0;\n    for(int i = 1; i <= n; i++) {\n        if(n % i == 0) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = divisor;\n    assert(candidate((15)) == (4));\n    assert(candidate((12)) == (6));\n    assert(candidate((9)) == (3));\n}\n",
      "timestamp": 1666122606,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the number of divisors of a given integer.\nlong divisor(long n) {\n    long count = 0;\n    for(long i = 1; i <= n; i++) {\n        if(n % i == 0) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = divisor;\n    assert(candidate((15)) == (4));\n    assert(candidate((12)) == (6));\n    assert(candidate((9)) == (3));\n}\n",
      "timestamp": 1665510053,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the number of divisors of a given integer.\nlong divisor(long n) {\n    long count = 0;\n    for (long i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = divisor;\n    assert(candidate((15)) == (4));\n    assert(candidate((12)) == (6));\n    assert(candidate((9)) == (3));\n}\n",
      "timestamp": 1665510053,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the number of divisors of a given integer.\nlong divisor(long n) {\n    long count = 0;\n    for (int i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = divisor;\n    assert(candidate((15)) == (4));\n    assert(candidate((12)) == (6));\n    assert(candidate((9)) == (3));\n}\n",
      "timestamp": 1665510053,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the number of divisors of a given integer.\nlong divisor(long n) {\n    long count = 0;\n    for(long i = 1; i <= n; i++) {\n        if(n % i == 0) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = divisor;\n    assert(candidate((15)) == (4));\n    assert(candidate((12)) == (6));\n    assert(candidate((9)) == (3));\n}\n",
      "timestamp": 1665510053,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the number of divisors of a given integer.\nlong divisor(long n) {\n    long count = 0;\n    for(long i = 1; i <= n; i++) {\n        if(n % i == 0)\n            count++;\n    }\n    return count;\n}\nint main() {\n    auto candidate = divisor;\n    assert(candidate((15)) == (4));\n    assert(candidate((12)) == (6));\n    assert(candidate((9)) == (3));\n}\n",
      "timestamp": 1666122606,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the number of divisors of a given integer.\nlong divisor(long n) {\n    long count = 0;\n    for(long i = 1; i <= n; i++) {\n        if(n % i == 0) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = divisor;\n    assert(candidate((15)) == (4));\n    assert(candidate((12)) == (6));\n    assert(candidate((9)) == (3));\n}\n",
      "timestamp": 1665510053,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the number of divisors of a given integer.\nlong divisor(long n) {\n    long count = 0;\n    for(long i = 1; i <= n; i++) {\n        if(n % i == 0) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = divisor;\n    assert(candidate((15)) == (4));\n    assert(candidate((12)) == (6));\n    assert(candidate((9)) == (3));\n}\n",
      "timestamp": 1665510053,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the number of divisors of a given integer.\nlong divisor(long n) {\n    // Write your code here\n    int count = 0;\n    for(int i=1;i<=n;i++){\n        if(n%i==0){\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = divisor;\n    assert(candidate((15)) == (4));\n    assert(candidate((12)) == (6));\n    assert(candidate((9)) == (3));\n}\n",
      "timestamp": 1666122606,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the number of divisors of a given integer.\nlong divisor(long n) {\n    long count = 0;\n    for (long i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = divisor;\n    assert(candidate((15)) == (4));\n    assert(candidate((12)) == (6));\n    assert(candidate((9)) == (3));\n}\n",
      "timestamp": 1665510053,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the number of divisors of a given integer.\nlong divisor(long n) {\n    long count = 0;\n    for (long i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = divisor;\n    assert(candidate((15)) == (4));\n    assert(candidate((12)) == (6));\n    assert(candidate((9)) == (3));\n}\n",
      "timestamp": 1665510053,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the number of divisors of a given integer.\nlong divisor(long n) {\n    int count = 0;\n    for (int i = 1; i <= n; i++) {\n        if (n % i == 0)\n            count++;\n    }\n    return count;\n}\nint main() {\n    auto candidate = divisor;\n    assert(candidate((15)) == (4));\n    assert(candidate((12)) == (6));\n    assert(candidate((9)) == (3));\n}\n",
      "timestamp": 1666122606,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the number of divisors of a given integer.\nlong divisor(long n) {\n    long count = 0;\n    for(long i = 1; i <= n; i++) {\n        if(n % i == 0) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = divisor;\n    assert(candidate((15)) == (4));\n    assert(candidate((12)) == (6));\n    assert(candidate((9)) == (3));\n}\n",
      "timestamp": 1665510053,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the number of divisors of a given integer.\nlong divisor(long n) {\n    long count = 0;\n    for (long i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = divisor;\n    assert(candidate((15)) == (4));\n    assert(candidate((12)) == (6));\n    assert(candidate((9)) == (3));\n}\n",
      "timestamp": 1665510053,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the number of divisors of a given integer.\nlong divisor(long n) {\n    long count = 0;\n    for (long i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = divisor;\n    assert(candidate((15)) == (4));\n    assert(candidate((12)) == (6));\n    assert(candidate((9)) == (3));\n}\n",
      "timestamp": 1665510053,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the number of divisors of a given integer.\nlong divisor(long n) {\n    long count = 0;\n    for(long i = 1; i <= n; i++) {\n        if(n % i == 0) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = divisor;\n    assert(candidate((15)) == (4));\n    assert(candidate((12)) == (6));\n    assert(candidate((9)) == (3));\n}\n",
      "timestamp": 1665510053,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the number of divisors of a given integer.\nlong divisor(long n) {\n    long count = 0;\n    for(long i = 1; i <= n; i++) {\n        if(n % i == 0) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = divisor;\n    assert(candidate((15)) == (4));\n    assert(candidate((12)) == (6));\n    assert(candidate((9)) == (3));\n}\n",
      "timestamp": 1665510053,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the number of divisors of a given integer.\nlong divisor(long n) {\n    long count = 0;\n    for (long i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = divisor;\n    assert(candidate((15)) == (4));\n    assert(candidate((12)) == (6));\n    assert(candidate((9)) == (3));\n}\n",
      "timestamp": 1665510053,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the number of divisors of a given integer.\nlong divisor(long n) {\n    long count = 0;\n    for(long i = 1; i <= n; i++) {\n        if(n % i == 0) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = divisor;\n    assert(candidate((15)) == (4));\n    assert(candidate((12)) == (6));\n    assert(candidate((9)) == (3));\n}\n",
      "timestamp": 1665510053,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the number of divisors of a given integer.\nlong divisor(long n) {\n    long count = 0;\n    for(long i = 1; i <= n; i++) {\n        if(n % i == 0) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = divisor;\n    assert(candidate((15)) == (4));\n    assert(candidate((12)) == (6));\n    assert(candidate((9)) == (3));\n}\n",
      "timestamp": 1665510053,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the number of divisors of a given integer.\nlong divisor(long n) {\n    long count = 0;\n    for(long i = 1; i <= n; i++) {\n        if(n % i == 0) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = divisor;\n    assert(candidate((15)) == (4));\n    assert(candidate((12)) == (6));\n    assert(candidate((9)) == (3));\n}\n",
      "timestamp": 1665510053,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the number of divisors of a given integer.\nlong divisor(long n) {\n    long count = 0;\n    for (long i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = divisor;\n    assert(candidate((15)) == (4));\n    assert(candidate((12)) == (6));\n    assert(candidate((9)) == (3));\n}\n",
      "timestamp": 1665510053,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the number of divisors of a given integer.\nlong divisor(long n) {\n    long count = 0;\n    for(long i = 1; i <= n; i++) {\n        if(n % i == 0) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = divisor;\n    assert(candidate((15)) == (4));\n    assert(candidate((12)) == (6));\n    assert(candidate((9)) == (3));\n}\n",
      "timestamp": 1665510053,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the number of divisors of a given integer.\nlong divisor(long n) {\n\tlong count = 0;\n\tfor (long i = 1; i <= n; i++) {\n\t\tif (n % i == 0) {\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\nint main() {\n    auto candidate = divisor;\n    assert(candidate((15)) == (4));\n    assert(candidate((12)) == (6));\n    assert(candidate((9)) == (3));\n}\n",
      "timestamp": 1666122606,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the number of divisors of a given integer.\nlong divisor(long n) {\n    long cnt = 0;\n    for (long i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            cnt += 1;\n        }\n    }\n    return cnt;\n}\nint main() {\n    auto candidate = divisor;\n    assert(candidate((15)) == (4));\n    assert(candidate((12)) == (6));\n    assert(candidate((9)) == (3));\n}\n",
      "timestamp": 1666122606,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the number of divisors of a given integer.\nlong divisor(long n) {\n    long count = 0;\n    for (long i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = divisor;\n    assert(candidate((15)) == (4));\n    assert(candidate((12)) == (6));\n    assert(candidate((9)) == (3));\n}\n",
      "timestamp": 1665510053,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the number of divisors of a given integer.\nlong divisor(long n) {\n    long count = 0;\n    for(long i = 1; i <= n; i++) {\n        if(n % i == 0) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = divisor;\n    assert(candidate((15)) == (4));\n    assert(candidate((12)) == (6));\n    assert(candidate((9)) == (3));\n}\n",
      "timestamp": 1665510053,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the number of divisors of a given integer.\nlong divisor(long n) {\n    long count = 0;\n    for(long i = 1; i <= n; i++) {\n        if(n % i == 0) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = divisor;\n    assert(candidate((15)) == (4));\n    assert(candidate((12)) == (6));\n    assert(candidate((9)) == (3));\n}\n",
      "timestamp": 1665510053,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the number of divisors of a given integer.\nlong divisor(long n) {\n    long count = 0;\n    for(long i = 1; i <= n; i++) {\n        if(n % i == 0) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = divisor;\n    assert(candidate((15)) == (4));\n    assert(candidate((12)) == (6));\n    assert(candidate((9)) == (3));\n}\n",
      "timestamp": 1665510053,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the number of divisors of a given integer.\nlong divisor(long n) {\n    long count = 0;\n    for(int i = 1; i <= n; i++) {\n        if(n % i == 0) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = divisor;\n    assert(candidate((15)) == (4));\n    assert(candidate((12)) == (6));\n    assert(candidate((9)) == (3));\n}\n",
      "timestamp": 1666122606,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the number of divisors of a given integer.\nlong divisor(long n) {\n    long count = 0;\n    for (long i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = divisor;\n    assert(candidate((15)) == (4));\n    assert(candidate((12)) == (6));\n    assert(candidate((9)) == (3));\n}\n",
      "timestamp": 1665510053,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the number of divisors of a given integer.\nlong divisor(long n) {\n    // Write your code here\n    long count = 0;\n    for(long i=1; i<=n; i++){\n        if(n%i == 0){\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = divisor;\n    assert(candidate((15)) == (4));\n    assert(candidate((12)) == (6));\n    assert(candidate((9)) == (3));\n}\n",
      "timestamp": 1666122606,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the number of divisors of a given integer.\nlong divisor(long n) {\n    long count = 0;\n    for(long i = 1; i <= n; i++) {\n        if(n % i == 0) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = divisor;\n    assert(candidate((15)) == (4));\n    assert(candidate((12)) == (6));\n    assert(candidate((9)) == (3));\n}\n",
      "timestamp": 1665510053,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the number of divisors of a given integer.\nlong divisor(long n) {\n    long count = 0;\n    for(long i = 1; i <= n; i++) {\n        if(n % i == 0) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = divisor;\n    assert(candidate((15)) == (4));\n    assert(candidate((12)) == (6));\n    assert(candidate((9)) == (3));\n}\n",
      "timestamp": 1665510053,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the number of divisors of a given integer.\nlong divisor(long n) {\n    long count = 0;\n    for(long i = 1; i <= n; i++) {\n        if(n % i == 0) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = divisor;\n    assert(candidate((15)) == (4));\n    assert(candidate((12)) == (6));\n    assert(candidate((9)) == (3));\n}\n",
      "timestamp": 1665510053,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the number of divisors of a given integer.\nlong divisor(long n) {\n    long count = 0;\n    for (long i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = divisor;\n    assert(candidate((15)) == (4));\n    assert(candidate((12)) == (6));\n    assert(candidate((9)) == (3));\n}\n",
      "timestamp": 1665510053,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the number of divisors of a given integer.\nlong divisor(long n) {\n    long count = 0;\n    for(long i = 1; i <= n; i++) {\n        if(n % i == 0) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = divisor;\n    assert(candidate((15)) == (4));\n    assert(candidate((12)) == (6));\n    assert(candidate((9)) == (3));\n}\n",
      "timestamp": 1665510053,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the number of divisors of a given integer.\nlong divisor(long n) {\n    long count = 0;\n    for(long i = 1; i <= n; i++) {\n        if(n % i == 0) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = divisor;\n    assert(candidate((15)) == (4));\n    assert(candidate((12)) == (6));\n    assert(candidate((9)) == (3));\n}\n",
      "timestamp": 1665510053,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the number of divisors of a given integer.\nlong divisor(long n) {\n    long count = 0;\n    for (long i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count += 1;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = divisor;\n    assert(candidate((15)) == (4));\n    assert(candidate((12)) == (6));\n    assert(candidate((9)) == (3));\n}\n",
      "timestamp": 1665510053,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the number of divisors of a given integer.\nlong divisor(long n) {\n    long count = 0;\n    for (int i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = divisor;\n    assert(candidate((15)) == (4));\n    assert(candidate((12)) == (6));\n    assert(candidate((9)) == (3));\n}\n",
      "timestamp": 1665510053,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the number of divisors of a given integer.\nlong divisor(long n) {\n    long count = 0;\n    for (long i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = divisor;\n    assert(candidate((15)) == (4));\n    assert(candidate((12)) == (6));\n    assert(candidate((9)) == (3));\n}\n",
      "timestamp": 1665510053,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the number of divisors of a given integer.\nlong divisor(long n) {\n    // Write your code here\n    long count = 0;\n    for(long i = 1; i <= n; i++) {\n        if(n % i == 0) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = divisor;\n    assert(candidate((15)) == (4));\n    assert(candidate((12)) == (6));\n    assert(candidate((9)) == (3));\n}\n",
      "timestamp": 1666122606,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the number of divisors of a given integer.\nlong divisor(long n) {\n    long count = 0;\n    for (long i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = divisor;\n    assert(candidate((15)) == (4));\n    assert(candidate((12)) == (6));\n    assert(candidate((9)) == (3));\n}\n",
      "timestamp": 1665510053,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the number of divisors of a given integer.\nlong divisor(long n) {\n    long count = 0;\n    for (long i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = divisor;\n    assert(candidate((15)) == (4));\n    assert(candidate((12)) == (6));\n    assert(candidate((9)) == (3));\n}\n",
      "timestamp": 1665510053,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the number of divisors of a given integer.\nlong divisor(long n) {\n    long count = 0;\n    for(long i = 1; i <= n; i++) {\n        if(n % i == 0) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = divisor;\n    assert(candidate((15)) == (4));\n    assert(candidate((12)) == (6));\n    assert(candidate((9)) == (3));\n}\n",
      "timestamp": 1665510053,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the number of divisors of a given integer.\nlong divisor(long n) {\n    long count = 0;\n    for(long i = 1; i <= n; i++) {\n        if(n % i == 0) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = divisor;\n    assert(candidate((15)) == (4));\n    assert(candidate((12)) == (6));\n    assert(candidate((9)) == (3));\n}\n",
      "timestamp": 1665510053,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the number of divisors of a given integer.\nlong divisor(long n) {\n    long count = 0;\n    for(long i = 1; i <= n; i++) {\n        if(n % i == 0) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = divisor;\n    assert(candidate((15)) == (4));\n    assert(candidate((12)) == (6));\n    assert(candidate((9)) == (3));\n}\n",
      "timestamp": 1665510053,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the number of divisors of a given integer.\nlong divisor(long n) {\n    long count = 0;\n    for(long i = 1; i <= n; i++) {\n        if(n % i == 0) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = divisor;\n    assert(candidate((15)) == (4));\n    assert(candidate((12)) == (6));\n    assert(candidate((9)) == (3));\n}\n",
      "timestamp": 1665510053,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the number of divisors of a given integer.\nlong divisor(long n) {\n    long count = 0;\n    for (long i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = divisor;\n    assert(candidate((15)) == (4));\n    assert(candidate((12)) == (6));\n    assert(candidate((9)) == (3));\n}\n",
      "timestamp": 1665510053,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the number of divisors of a given integer.\nlong divisor(long n) {\n    long count = 0;\n    for (long i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = divisor;\n    assert(candidate((15)) == (4));\n    assert(candidate((12)) == (6));\n    assert(candidate((9)) == (3));\n}\n",
      "timestamp": 1665510053,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the number of divisors of a given integer.\nlong divisor(long n) {\n    long count = 0;\n    for (long i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = divisor;\n    assert(candidate((15)) == (4));\n    assert(candidate((12)) == (6));\n    assert(candidate((9)) == (3));\n}\n",
      "timestamp": 1665510053,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the number of divisors of a given integer.\nlong divisor(long n) {\n    long count = 0;\n    for (long i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = divisor;\n    assert(candidate((15)) == (4));\n    assert(candidate((12)) == (6));\n    assert(candidate((9)) == (3));\n}\n",
      "timestamp": 1665510053,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the number of divisors of a given integer.\nlong divisor(long n) {\n    long count = 0;\n    for(long i = 1; i <= n; i++) {\n        if(n % i == 0) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = divisor;\n    assert(candidate((15)) == (4));\n    assert(candidate((12)) == (6));\n    assert(candidate((9)) == (3));\n}\n",
      "timestamp": 1665510053,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the number of divisors of a given integer.\nlong divisor(long n) {\n    long count = 0;\n    for(int i=1;i<=n;i++){\n        if(n%i==0){\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = divisor;\n    assert(candidate((15)) == (4));\n    assert(candidate((12)) == (6));\n    assert(candidate((9)) == (3));\n}\n",
      "timestamp": 1666122606,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the number of divisors of a given integer.\nlong divisor(long n) {\n    long count = 0;\n    for (long i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = divisor;\n    assert(candidate((15)) == (4));\n    assert(candidate((12)) == (6));\n    assert(candidate((9)) == (3));\n}\n",
      "timestamp": 1665510053,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the number of divisors of a given integer.\nlong divisor(long n) {\n    long count = 0;\n    for(long i = 1; i <= n; i++) {\n        if(n % i == 0) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = divisor;\n    assert(candidate((15)) == (4));\n    assert(candidate((12)) == (6));\n    assert(candidate((9)) == (3));\n}\n",
      "timestamp": 1665510053,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the number of divisors of a given integer.\nlong divisor(long n) {\n\t// Write your code here\n\tlong count = 0;\n\tfor (long i = 1; i <= n; i++) {\n\t\tif (n % i == 0) {\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\nint main() {\n    auto candidate = divisor;\n    assert(candidate((15)) == (4));\n    assert(candidate((12)) == (6));\n    assert(candidate((9)) == (3));\n}\n",
      "timestamp": 1666122606,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the number of divisors of a given integer.\nlong divisor(long n) {\n    long count = 0;\n    for(long i = 1; i <= n; i++) {\n        if(n % i == 0) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = divisor;\n    assert(candidate((15)) == (4));\n    assert(candidate((12)) == (6));\n    assert(candidate((9)) == (3));\n}\n",
      "timestamp": 1665510053,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the number of divisors of a given integer.\nlong divisor(long n) {\n    long count = 0;\n    for(long i = 1; i <= n; i++) {\n        if(n % i == 0) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = divisor;\n    assert(candidate((15)) == (4));\n    assert(candidate((12)) == (6));\n    assert(candidate((9)) == (3));\n}\n",
      "timestamp": 1665510053,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the number of divisors of a given integer.\nlong divisor(long n) {\n    long count = 0;\n    for(long i = 1; i <= n; i++) {\n        if(n % i == 0) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = divisor;\n    assert(candidate((15)) == (4));\n    assert(candidate((12)) == (6));\n    assert(candidate((9)) == (3));\n}\n",
      "timestamp": 1665510053,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the number of divisors of a given integer.\nlong divisor(long n) {\n    long count = 0;\n    for (long i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = divisor;\n    assert(candidate((15)) == (4));\n    assert(candidate((12)) == (6));\n    assert(candidate((9)) == (3));\n}\n",
      "timestamp": 1665510053,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the number of divisors of a given integer.\nlong divisor(long n) {\n    long count = 0;\n    for(long i = 1; i <= n; i++) {\n        if(n % i == 0) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = divisor;\n    assert(candidate((15)) == (4));\n    assert(candidate((12)) == (6));\n    assert(candidate((9)) == (3));\n}\n",
      "timestamp": 1665510053,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
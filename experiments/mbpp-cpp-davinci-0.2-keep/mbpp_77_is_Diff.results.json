{
  "name": "mbpp_77_is_Diff",
  "language": "cpp",
  "prompt": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_77_is_Diff.py",
  "prompt_terminology": "verbatim",
  "tests": "}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "results": [
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    if (n < 0) {\n        n = -n;\n    }\n    if (n == 0) {\n        return true;\n    }\n    if (n == 1) {\n        return false;\n    }\n    int even_digits = 0;\n    int odd_digits = 0;\n    while (n > 0) {\n        if (n % 2 == 0) {\n            even_digits += n % 10;\n        } else {\n            odd_digits += n % 10;\n        }\n        n /= 10;\n    }\n    return is_Diff(abs(even_digits - odd_digits));\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1665517279,
      "stdout": "",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int odd_sum = 0;\n    int even_sum = 0;\n    while (n > 0) {\n        odd_sum += n % 10;\n        n /= 10;\n        even_sum += n % 10;\n        n /= 10;\n    }\n    return abs(odd_sum - even_sum) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1665517264,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    if (n < 0) {\n        n = -n;\n    }\n    if (n == 0) {\n        return true;\n    }\n    if (n == 1) {\n        return false;\n    }\n    long even_sum = 0;\n    long odd_sum = 0;\n    while (n) {\n        odd_sum += n % 10;\n        n /= 10;\n        even_sum += n % 10;\n        n /= 10;\n    }\n    return is_Diff(abs(odd_sum - even_sum));\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1665517279,
      "stdout": "",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    if (n < 0) {\n        n = -n;\n    }\n    if (n == 0) {\n        return true;\n    }\n    if (n == 1) {\n        return false;\n    }\n    long odd_digits_sum = 0;\n    long even_digits_sum = 0;\n    while (n) {\n        odd_digits_sum += n % 10;\n        n /= 10;\n        if (n == 0) {\n            break;\n        }\n        even_digits_sum += n % 10;\n        n /= 10;\n    }\n    return is_Diff(abs(odd_digits_sum - even_digits_sum));\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1665517279,
      "stdout": "",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int even = 0;\n    int odd = 0;\n    while(n) {\n        if(n%2 == 0) {\n            even += n%10;\n        } else {\n            odd += n%10;\n        }\n        n /= 10;\n    }\n    return abs(even-odd)%11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1665517264,
      "stdout": "",
      "stderr": "tmpy6hv6zih: /tmp/tmpy6hv6zih.cpp:20: int main(): Assertion `candidate((1212112)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int even_sum = 0;\n    int odd_sum = 0;\n    int i = 0;\n    while (n != 0) {\n        if (i % 2 == 0) {\n            even_sum += n % 10;\n        } else {\n            odd_sum += n % 10;\n        }\n        n /= 10;\n        i++;\n    }\n    return abs(even_sum - odd_sum) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1665517264,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int sum_odd = 0;\n    int sum_even = 0;\n    while (n > 0) {\n        sum_odd += n % 10;\n        n /= 10;\n        if (n > 0) {\n            sum_even += n % 10;\n            n /= 10;\n        }\n    }\n    return sum_odd - sum_even == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1665517264,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int odd_sum = 0;\n    int even_sum = 0;\n    while(n) {\n        odd_sum += n%10;\n        n /= 10;\n        even_sum += n%10;\n        n /= 10;\n    }\n    return abs(odd_sum - even_sum)%11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1665517264,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int even = 0;\n    int odd = 0;\n    while(n) {\n        if(n%2 == 0) {\n            even += n%10;\n        } else {\n            odd += n%10;\n        }\n        n /= 10;\n    }\n    return (even-odd)%11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1665517264,
      "stdout": "",
      "stderr": "tmpvk9kh01y: /tmp/tmpvk9kh01y.cpp:20: int main(): Assertion `candidate((1212112)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int odd = 0, even = 0;\n    while (n) {\n        if (n & 1)\n            odd++;\n        else\n            even++;\n        n >>= 1;\n    }\n    return (odd - even) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1665517264,
      "stdout": "",
      "stderr": "tmpr6_f2mkd: /tmp/tmpr6_f2mkd.cpp:18: int main(): Assertion `candidate((1212112)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int odd_sum = 0;\n    int even_sum = 0;\n    while (n > 0) {\n        odd_sum += n % 10;\n        n /= 10;\n        even_sum += n % 10;\n        n /= 10;\n    }\n    return (odd_sum - even_sum) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1665517264,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int odd_sum = 0;\n    int even_sum = 0;\n    while(n) {\n        odd_sum += n%10;\n        n /= 10;\n        even_sum += n%10;\n        n /= 10;\n    }\n    return abs(odd_sum - even_sum) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1665517264,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int even_sum = 0, odd_sum = 0;\n    while (n) {\n        even_sum += n % 10;\n        n /= 10;\n        odd_sum += n % 10;\n        n /= 10;\n    }\n    return (abs(even_sum - odd_sum) % 11 == 0);\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1665517264,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int odd_sum = 0;\n    int even_sum = 0;\n    while(n) {\n        int r = n%10;\n        if(n%2 == 0) {\n            even_sum += r;\n        } else {\n            odd_sum += r;\n        }\n        n /= 10;\n    }\n    return abs(odd_sum - even_sum)%11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1665517264,
      "stdout": "",
      "stderr": "tmp5tkirr_e: /tmp/tmp5tkirr_e.cpp:21: int main(): Assertion `candidate((1212112)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int sum_odd = 0;\n    int sum_even = 0;\n    int i = 0;\n    while (n > 0) {\n        if (i % 2 == 0) {\n            sum_even += n % 10;\n        } else {\n            sum_odd += n % 10;\n        }\n        i++;\n        n /= 10;\n    }\n    return (sum_odd - sum_even) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1665517264,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    if (n < 0) {\n        n = -n;\n    }\n    if (n == 0) {\n        return true;\n    }\n    if (n == 1) {\n        return false;\n    }\n    long even_sum = 0;\n    long odd_sum = 0;\n    while (n) {\n        long last_digit = n % 10;\n        if (n % 2 == 0) {\n            even_sum += last_digit;\n        } else {\n            odd_sum += last_digit;\n        }\n        n /= 10;\n    }\n    return is_Diff(abs(even_sum - odd_sum));\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1665517279,
      "stdout": "",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int odd = 0;\n    int even = 0;\n    while (n > 0) {\n        if (n % 2 == 0) {\n            even += n % 10;\n        } else {\n            odd += n % 10;\n        }\n        n /= 10;\n    }\n    return (odd - even) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1665517264,
      "stdout": "",
      "stderr": "tmplr3lr_ad: /tmp/tmplr3lr_ad.cpp:20: int main(): Assertion `candidate((1212112)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int odd_digits = 0;\n    int even_digits = 0;\n    while(n > 0) {\n        if(n % 2 == 0) {\n            even_digits += n % 10;\n        } else {\n            odd_digits += n % 10;\n        }\n        n /= 10;\n    }\n    return abs(odd_digits - even_digits) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1665517264,
      "stdout": "",
      "stderr": "tmpzx_ohlne: /tmp/tmpzx_ohlne.cpp:20: int main(): Assertion `candidate((1212112)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    if(n<11)\n        return false;\n    if(n==11)\n        return true;\n    long odd_sum=0,even_sum=0;\n    while(n!=0) {\n        odd_sum+=n%10;\n        n/=10;\n        even_sum+=n%10;\n        n/=10;\n    }\n    return is_Diff(abs(odd_sum-even_sum));\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1665517264,
      "stdout": "",
      "stderr": "tmpyig4l710: /tmp/tmpyig4l710.cpp:21: int main(): Assertion `candidate((1212112)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int odd_sum = 0;\n    int even_sum = 0;\n    int i = 0;\n    while(n != 0) {\n        int digit = n % 10;\n        if(i % 2 == 0) {\n            even_sum += digit;\n        } else {\n            odd_sum += digit;\n        }\n        i++;\n        n /= 10;\n    }\n    return abs(odd_sum - even_sum) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1665517264,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int even_sum = 0;\n    int odd_sum = 0;\n    int i = 0;\n    while (n != 0) {\n        if (i % 2 == 0) {\n            even_sum += n % 10;\n        } else {\n            odd_sum += n % 10;\n        }\n        i++;\n        n /= 10;\n    }\n    return (even_sum - odd_sum) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122724,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int odd_sum = 0;\n    int even_sum = 0;\n    while(n) {\n        int digit = n % 10;\n        if(digit & 1) {\n            odd_sum += digit;\n        } else {\n            even_sum += digit;\n        }\n        n /= 10;\n    }\n    return abs(odd_sum - even_sum) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122724,
      "stdout": "",
      "stderr": "tmpcix6b1fy: /tmp/tmpcix6b1fy.cpp:21: int main(): Assertion `candidate((1212112)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int even = 0, odd = 0;\n    while (n) {\n        if (n & 1)\n            odd += 1;\n        else\n            even += 1;\n        n = n >> 1;\n    }\n    return abs(odd - even) % 3 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122724,
      "stdout": "",
      "stderr": "tmpmh2dos6q: /tmp/tmpmh2dos6q.cpp:18: int main(): Assertion `candidate((1212112)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int even_sum = 0;\n    int odd_sum = 0;\n    int i = 0;\n    while (n != 0) {\n        if (i % 2 == 0) {\n            even_sum += n % 10;\n        } else {\n            odd_sum += n % 10;\n        }\n        n /= 10;\n        i++;\n    }\n    return (even_sum - odd_sum) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122724,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int even_sum = 0;\n    int odd_sum = 0;\n    int i = 0;\n    while(n != 0) {\n        if(i % 2 == 0) {\n            even_sum += n % 10;\n        } else {\n            odd_sum += n % 10;\n        }\n        n /= 10;\n        i++;\n    }\n    return (even_sum - odd_sum) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122724,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int even_sum = 0;\n    int odd_sum = 0;\n    int i = 0;\n    while(n != 0) {\n        if(i % 2 == 0) {\n            even_sum += n % 10;\n        } else {\n            odd_sum += n % 10;\n        }\n        n /= 10;\n        i++;\n    }\n    return abs(even_sum - odd_sum) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122724,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    long odd_sum = 0, even_sum = 0;\n    while (n) {\n        odd_sum += n % 10;\n        n /= 10;\n        even_sum += n % 10;\n        n /= 10;\n    }\n    return abs(odd_sum - even_sum) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122724,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int sum_even = 0;\n    int sum_odd = 0;\n    int i = 0;\n    while(n > 0) {\n        if(i % 2 == 0) {\n            sum_even += n % 10;\n        }\n        else {\n            sum_odd += n % 10;\n        }\n        n /= 10;\n        i++;\n    }\n    return (sum_even - sum_odd) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122724,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int odd_sum = 0;\n    int even_sum = 0;\n    while (n) {\n        odd_sum += n % 10;\n        n /= 10;\n        even_sum += n % 10;\n        n /= 10;\n    }\n    return abs(odd_sum - even_sum) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122724,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int odd = 0;\n    int even = 0;\n    while(n > 0) {\n        if(n % 2 == 0) {\n            even += n % 10;\n        }\n        else {\n            odd += n % 10;\n        }\n        n /= 10;\n    }\n    return abs(odd - even) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122724,
      "stdout": "",
      "stderr": "tmp6umjr4t3: /tmp/tmp6umjr4t3.cpp:21: int main(): Assertion `candidate((1212112)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int even = 0;\n    int odd = 0;\n    while(n > 0) {\n        int rem = n % 10;\n        if(rem % 2 == 0) {\n            even += rem;\n        } else {\n            odd += rem;\n        }\n        n /= 10;\n    }\n    return (even - odd) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122724,
      "stdout": "",
      "stderr": "tmpd0bu7lpz: /tmp/tmpd0bu7lpz.cpp:21: int main(): Assertion `candidate((1212112)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int odd_digits = 0;\n    int even_digits = 0;\n    while (n > 0) {\n        if (n % 2 == 0) {\n            even_digits += n % 10;\n        } else {\n            odd_digits += n % 10;\n        }\n        n /= 10;\n    }\n    return abs(odd_digits - even_digits) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122724,
      "stdout": "",
      "stderr": "tmpr9fgr31z: /tmp/tmpr9fgr31z.cpp:20: int main(): Assertion `candidate((1212112)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    if (n < 0)\n        n = -n;\n    if (n == 0 || n == 11)\n        return true;\n    if (n < 10)\n        return false;\n    return is_Diff((n / 10 - n % 10 * 2) % 11);\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122724,
      "stdout": "",
      "stderr": "tmp4fidlt79: /tmp/tmp4fidlt79.cpp:16: int main(): Assertion `candidate((1212112)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    long odd_sum = 0;\n    long even_sum = 0;\n    while (n != 0) {\n        odd_sum += n % 10;\n        n /= 10;\n        even_sum += n % 10;\n        n /= 10;\n    }\n    return (odd_sum - even_sum) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122724,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    if (n < 0)\n        n = -n;\n    if (n == 0 || n == 11)\n        return true;\n    if (n < 10)\n        return false;\n    return is_Diff((n / 10) - (n % 10));\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122724,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int even_sum = 0;\n    int odd_sum = 0;\n    int count = 0;\n    while (n != 0) {\n        if (count % 2 == 0) {\n            even_sum += n % 10;\n        }\n        else {\n            odd_sum += n % 10;\n        }\n        n /= 10;\n        count++;\n    }\n    return (even_sum - odd_sum) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122724,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    if (n < 0) {\n        n = -n;\n    }\n    if (n == 0 || n == 11) {\n        return true;\n    }\n    if (n < 10) {\n        return false;\n    }\n    return is_Diff((n / 10) - (n % 10));\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122724,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int even_sum = 0;\n    int odd_sum = 0;\n    int count = 0;\n    while(n > 0) {\n        if(count % 2 == 0) {\n            even_sum += n % 10;\n        }\n        else {\n            odd_sum += n % 10;\n        }\n        n /= 10;\n        count++;\n    }\n    return (even_sum - odd_sum) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122724,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    if (n < 0)\n        n = -n;\n    if (n == 0 || n == 11)\n        return true;\n    if (n < 10)\n        return false;\n    return is_Diff((n / 10 - n % 10 * 2) % 11);\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122724,
      "stdout": "",
      "stderr": "tmp4fidlt79: /tmp/tmp4fidlt79.cpp:16: int main(): Assertion `candidate((1212112)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int even = 0;\n    int odd = 0;\n    while(n > 0) {\n        if(n % 2 == 0) {\n            even += n % 10;\n        } else {\n            odd += n % 10;\n        }\n        n /= 10;\n    }\n    return (even - odd) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122724,
      "stdout": "",
      "stderr": "tmpfrzzrdcb: /tmp/tmpfrzzrdcb.cpp:20: int main(): Assertion `candidate((1212112)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int odd_sum = 0;\n    int even_sum = 0;\n    while (n) {\n        odd_sum += n % 10;\n        n /= 10;\n        if (n) {\n            even_sum += n % 10;\n            n /= 10;\n        }\n    }\n    return abs(odd_sum - even_sum) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122724,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int odd_sum = 0, even_sum = 0;\n    while (n > 0) {\n        odd_sum += n % 10;\n        n /= 10;\n        even_sum += n % 10;\n        n /= 10;\n    }\n    return (odd_sum - even_sum) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122724,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    long even = 0, odd = 0;\n    while(n > 0) {\n        even += n % 10;\n        n /= 10;\n        if(n == 0) {\n            break;\n        }\n        odd += n % 10;\n        n /= 10;\n    }\n    return (even - odd) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122724,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int sum_odd = 0;\n    int sum_even = 0;\n    int i = 0;\n    while (n > 0) {\n        if (i % 2 == 0) {\n            sum_even += n % 10;\n        } else {\n            sum_odd += n % 10;\n        }\n        i++;\n        n /= 10;\n    }\n    return (sum_odd - sum_even) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1665517264,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int odd_sum = 0;\n    int even_sum = 0;\n    while (n != 0) {\n        odd_sum += n % 10;\n        n /= 10;\n        even_sum += n % 10;\n        n /= 10;\n    }\n    return abs(odd_sum - even_sum) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122724,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int sum_odd = 0;\n    int sum_even = 0;\n    int count = 0;\n    while(n > 0) {\n        int digit = n % 10;\n        if(count % 2 == 0) {\n            sum_even += digit;\n        } else {\n            sum_odd += digit;\n        }\n        count++;\n        n = n / 10;\n    }\n    return (sum_even - sum_odd) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122725,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    if (n < 0) {\n        n = -n;\n    }\n    if (n == 0) {\n        return true;\n    }\n    if (n == 1) {\n        return false;\n    }\n    long even_digits = 0;\n    long odd_digits = 0;\n    while (n) {\n        if (n % 2 == 0) {\n            even_digits += n % 10;\n        } else {\n            odd_digits += n % 10;\n        }\n        n /= 10;\n    }\n    return is_Diff(abs(even_digits - odd_digits));\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122740,
      "stdout": "",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    if (n < 0) {\n        n = -n;\n    }\n    if (n == 0) {\n        return true;\n    }\n    if (n == 1) {\n        return false;\n    }\n    long odd_digits = 0;\n    long even_digits = 0;\n    while (n) {\n        if (n % 2 == 0) {\n            even_digits += n % 10;\n        } else {\n            odd_digits += n % 10;\n        }\n        n /= 10;\n    }\n    return is_Diff(abs(odd_digits - even_digits));\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122740,
      "stdout": "",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int even = 0;\n    int odd = 0;\n    while(n > 0) {\n        even += n % 10;\n        n /= 10;\n        odd += n % 10;\n        n /= 10;\n    }\n    return abs(even - odd) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122725,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int odd_sum = 0, even_sum = 0;\n    while(n) {\n        odd_sum += n % 10;\n        n /= 10;\n        even_sum += n % 10;\n        n /= 10;\n    }\n    return (odd_sum - even_sum) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122725,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    long odd_sum = 0;\n    long even_sum = 0;\n    while (n > 0) {\n        odd_sum += n % 10;\n        n /= 10;\n        even_sum += n % 10;\n        n /= 10;\n    }\n    return (odd_sum - even_sum) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122725,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    if (n < 0) {\n        n = -n;\n    }\n    if (n == 0) {\n        return true;\n    }\n    if (n == 1) {\n        return false;\n    }\n    long odd_digits = 0;\n    long even_digits = 0;\n    while (n) {\n        if (n % 2 == 0) {\n            even_digits += n % 10;\n        } else {\n            odd_digits += n % 10;\n        }\n        n /= 10;\n    }\n    return is_Diff(abs(odd_digits - even_digits));\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122740,
      "stdout": "",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int odd = 0;\n    int even = 0;\n    while (n > 0) {\n        int rem = n % 10;\n        if (rem % 2 == 0) {\n            even += rem;\n        } else {\n            odd += rem;\n        }\n        n /= 10;\n    }\n    if (abs(odd - even) % 11 == 0) {\n        return true;\n    }\n    return false;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122725,
      "stdout": "",
      "stderr": "tmprbxw5_ce: /tmp/tmprbxw5_ce.cpp:24: int main(): Assertion `candidate((1212112)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int sum_even = 0;\n    int sum_odd = 0;\n    while (n > 0) {\n        sum_even += n % 10;\n        n /= 10;\n        sum_odd += n % 10;\n        n /= 10;\n    }\n    return (sum_even - sum_odd) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122725,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    long odd_sum = 0, even_sum = 0;\n    while (n > 0) {\n        odd_sum += n % 10;\n        n /= 10;\n        even_sum += n % 10;\n        n /= 10;\n    }\n    return (odd_sum - even_sum) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122725,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int odd_digits = 0;\n    int even_digits = 0;\n    while (n > 0) {\n        if (n % 2 == 0) {\n            even_digits += n % 10;\n        } else {\n            odd_digits += n % 10;\n        }\n        n /= 10;\n    }\n    return abs(odd_digits - even_digits) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122724,
      "stdout": "",
      "stderr": "tmpr9fgr31z: /tmp/tmpr9fgr31z.cpp:20: int main(): Assertion `candidate((1212112)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int sum_even = 0;\n    int sum_odd = 0;\n    int i = 0;\n    while(n) {\n        if(i%2 == 0) {\n            sum_even += n%10;\n        }\n        else {\n            sum_odd += n%10;\n        }\n        n /= 10;\n        i++;\n    }\n    return (sum_even - sum_odd)%11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122726,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    if (n < 0) {\n        n = -n;\n    }\n    if (n == 0) {\n        return true;\n    }\n    if (n == 1) {\n        return false;\n    }\n    long even_sum = 0;\n    long odd_sum = 0;\n    while (n) {\n        odd_sum += n % 10;\n        n /= 10;\n        if (n == 0) {\n            break;\n        }\n        even_sum += n % 10;\n        n /= 10;\n    }\n    return is_Diff(abs(odd_sum - even_sum));\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122740,
      "stdout": "",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int even = 0;\n    int odd = 0;\n    while (n > 0) {\n        even += n % 10;\n        n /= 10;\n        odd += n % 10;\n        n /= 10;\n    }\n    return abs(even - odd) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122725,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int odd_sum = 0;\n    int even_sum = 0;\n    while (n > 0) {\n        odd_sum += n % 10;\n        n /= 10;\n        even_sum += n % 10;\n        n /= 10;\n    }\n    return abs(odd_sum - even_sum) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1665517264,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int odd_sum = 0;\n    int even_sum = 0;\n    int i = 0;\n    while(n != 0) {\n        if(i % 2 == 0) {\n            even_sum += n % 10;\n        } else {\n            odd_sum += n % 10;\n        }\n        n /= 10;\n        i++;\n    }\n    return abs(even_sum - odd_sum) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122725,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int odd_digits = 0;\n    int even_digits = 0;\n    while (n != 0) {\n        if (n % 2 == 0) {\n            even_digits += n % 10;\n        } else {\n            odd_digits += n % 10;\n        }\n        n /= 10;\n    }\n    return abs(odd_digits - even_digits) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122725,
      "stdout": "",
      "stderr": "tmpameoztos: /tmp/tmpameoztos.cpp:20: int main(): Assertion `candidate((1212112)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    long odd_sum = 0, even_sum = 0;\n    while (n != 0) {\n        odd_sum += n % 10;\n        n = n / 10;\n        even_sum += n % 10;\n        n = n / 10;\n    }\n    return (odd_sum - even_sum) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122726,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n\tint sum1 = 0;\n\tint sum2 = 0;\n\tint i = 0;\n\twhile (n != 0) {\n\t\tif (i % 2 == 0) {\n\t\t\tsum1 += n % 10;\n\t\t}\n\t\telse {\n\t\t\tsum2 += n % 10;\n\t\t}\n\t\tn = n / 10;\n\t\ti++;\n\t}\n\treturn (abs(sum1 - sum2) % 11 == 0);\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122726,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int sum1 = 0, sum2 = 0;\n    while (n) {\n        sum1 += n % 10;\n        n /= 10;\n        sum2 += n % 10;\n        n /= 10;\n    }\n    return (sum1 - sum2) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122726,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int odd_sum = 0;\n    int even_sum = 0;\n    while (n > 0) {\n        int digit = n % 10;\n        if (digit % 2 == 0) {\n            even_sum += digit;\n        } else {\n            odd_sum += digit;\n        }\n        n /= 10;\n    }\n    return abs(odd_sum - even_sum) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122726,
      "stdout": "",
      "stderr": "tmp960pot3i: /tmp/tmp960pot3i.cpp:21: int main(): Assertion `candidate((1212112)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    if (n < 0) {\n        n = -n;\n    }\n    if (n == 0) {\n        return true;\n    }\n    if (n == 1) {\n        return false;\n    }\n    long odd_digits = 0;\n    long even_digits = 0;\n    while (n) {\n        if (n & 1) {\n            odd_digits += n % 10;\n        } else {\n            even_digits += n % 10;\n        }\n        n /= 10;\n    }\n    return is_Diff(abs(odd_digits - even_digits));\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122740,
      "stdout": "",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int odd_sum = 0;\n    int even_sum = 0;\n    while (n > 0) {\n        odd_sum += n % 10;\n        n /= 10;\n        even_sum += n % 10;\n        n /= 10;\n    }\n    return abs(odd_sum - even_sum) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1665517264,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    if(n < 0) {\n        n = -n;\n    }\n    if(n == 0) {\n        return true;\n    }\n    if(n == 1) {\n        return false;\n    }\n    long odd_digits = 0;\n    long even_digits = 0;\n    while(n) {\n        if(n % 2 == 0) {\n            even_digits += n % 10;\n        }\n        else {\n            odd_digits += n % 10;\n        }\n        n /= 10;\n    }\n    return is_Diff(abs(odd_digits - even_digits));\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122740,
      "stdout": "",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int sum_even = 0;\n    int sum_odd = 0;\n    int i = 0;\n    while (n > 0) {\n        if (i % 2 == 0) {\n            sum_even += n % 10;\n        } else {\n            sum_odd += n % 10;\n        }\n        i++;\n        n /= 10;\n    }\n    return abs(sum_even - sum_odd) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122726,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int even = 0;\n    int odd = 0;\n    while(n > 0) {\n        int rem = n % 10;\n        if(rem % 2 == 0) {\n            even += rem;\n        } else {\n            odd += rem;\n        }\n        n /= 10;\n    }\n    return (odd - even) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122726,
      "stdout": "",
      "stderr": "tmp7hb7ctuf: /tmp/tmp7hb7ctuf.cpp:21: int main(): Assertion `candidate((1212112)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int even_sum = 0;\n    int odd_sum = 0;\n    int count = 0;\n    while (n != 0) {\n        if (count % 2 == 0) {\n            even_sum += n % 10;\n        } else {\n            odd_sum += n % 10;\n        }\n        n /= 10;\n        count++;\n    }\n    return (even_sum - odd_sum) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122726,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int odd_sum = 0;\n    int even_sum = 0;\n    while (n > 0) {\n        int digit = n % 10;\n        if (n % 2 == 0) {\n            even_sum += digit;\n        } else {\n            odd_sum += digit;\n        }\n        n /= 10;\n    }\n    return (odd_sum - even_sum) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122727,
      "stdout": "",
      "stderr": "tmpuw91xhen: /tmp/tmpuw91xhen.cpp:21: int main(): Assertion `candidate((1212112)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    long odd_sum = 0;\n    long even_sum = 0;\n    while(n) {\n        odd_sum += n%10;\n        n /= 10;\n        even_sum += n%10;\n        n /= 10;\n    }\n    return abs(odd_sum - even_sum) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122727,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int sum_even = 0;\n    int sum_odd = 0;\n    int i = 0;\n    while(n > 0) {\n        if(i % 2 == 0) {\n            sum_even += n % 10;\n        } else {\n            sum_odd += n % 10;\n        }\n        n /= 10;\n        i++;\n    }\n    return abs(sum_even - sum_odd) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122727,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    long even_sum = 0, odd_sum = 0;\n    while (n > 0) {\n        even_sum += n % 10;\n        n /= 10;\n        odd_sum += n % 10;\n        n /= 10;\n    }\n    return (even_sum - odd_sum) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122727,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int even = 0;\n    int odd = 0;\n    while (n > 0) {\n        even += n % 10;\n        n /= 10;\n        odd += n % 10;\n        n /= 10;\n    }\n    return (even - odd) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122727,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    if (n < 0) {\n        n = -n;\n    }\n    if (n == 0) {\n        return true;\n    }\n    if (n == 1) {\n        return false;\n    }\n    long odd_digit_sum = 0;\n    long even_digit_sum = 0;\n    while (n) {\n        odd_digit_sum += n % 10;\n        n /= 10;\n        if (n == 0) {\n            break;\n        }\n        even_digit_sum += n % 10;\n        n /= 10;\n    }\n    return is_Diff(abs(odd_digit_sum - even_digit_sum));\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122742,
      "stdout": "",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int odd_sum = 0;\n    int even_sum = 0;\n    while (n > 0) {\n        int digit = n % 10;\n        if (digit % 2 == 0) {\n            even_sum += digit;\n        } else {\n            odd_sum += digit;\n        }\n        n /= 10;\n    }\n    return abs(odd_sum - even_sum) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122726,
      "stdout": "",
      "stderr": "tmp960pot3i: /tmp/tmp960pot3i.cpp:21: int main(): Assertion `candidate((1212112)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int odd_sum = 0;\n    int even_sum = 0;\n    while(n != 0) {\n        odd_sum += n % 10;\n        n /= 10;\n        even_sum += n % 10;\n        n /= 10;\n    }\n    return (odd_sum - even_sum) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122727,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int even_sum = 0;\n    int odd_sum = 0;\n    int i = 0;\n    while (n != 0) {\n        if (i % 2 == 0) {\n            even_sum += n % 10;\n        } else {\n            odd_sum += n % 10;\n        }\n        n /= 10;\n        i++;\n    }\n    return (even_sum - odd_sum) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122724,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int sum_odd = 0, sum_even = 0;\n    while(n) {\n        sum_odd += n % 10;\n        n /= 10;\n        sum_even += n % 10;\n        n /= 10;\n    }\n    return (sum_odd - sum_even) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122727,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int odd = 0;\n    int even = 0;\n    while (n > 0) {\n        if (n % 2 == 0) {\n            even += n % 10;\n        } else {\n            odd += n % 10;\n        }\n        n /= 10;\n    }\n    return abs(odd - even) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122727,
      "stdout": "",
      "stderr": "tmp59o7q0cn: /tmp/tmp59o7q0cn.cpp:20: int main(): Assertion `candidate((1212112)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int even_sum = 0, odd_sum = 0;\n    while (n) {\n        even_sum += n % 10;\n        n /= 10;\n        odd_sum += n % 10;\n        n /= 10;\n    }\n    return abs(even_sum - odd_sum) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122727,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int odd_digits_sum = 0;\n    int even_digits_sum = 0;\n    while (n) {\n        odd_digits_sum += n % 10;\n        n /= 10;\n        if (n) {\n            even_digits_sum += n % 10;\n            n /= 10;\n        }\n    }\n    return abs(odd_digits_sum - even_digits_sum) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122727,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    if(n<0) {\n        n = -n;\n    }\n    if(n<10) {\n        return true;\n    }\n    int odd_sum = 0;\n    int even_sum = 0;\n    while(n) {\n        odd_sum += n%10;\n        n /= 10;\n        if(n==0) {\n            break;\n        }\n        even_sum += n%10;\n        n /= 10;\n    }\n    return is_Diff(abs(odd_sum-even_sum));\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122727,
      "stdout": "",
      "stderr": "tmp9c5mx0o3: /tmp/tmp9c5mx0o3.cpp:26: int main(): Assertion `candidate((12345)) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    if (n < 0) {\n        n = -n;\n    }\n    if (n == 0 || n == 11) {\n        return true;\n    }\n    if (n < 10) {\n        return false;\n    }\n    return is_Diff((n / 10) - (n % 10));\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122724,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int odd_sum = 0;\n    int even_sum = 0;\n    int count = 0;\n    while(n) {\n        if(count % 2 == 0) {\n            odd_sum += n % 10;\n        } else {\n            even_sum += n % 10;\n        }\n        n /= 10;\n        count++;\n    }\n    return abs(odd_sum - even_sum) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122727,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int sum1 = 0;\n    int sum2 = 0;\n    while (n > 0) {\n        sum1 += n % 10;\n        n /= 10;\n        sum2 += n % 10;\n        n /= 10;\n    }\n    return (sum1 - sum2) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122727,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int s = 0;\n    while (n) {\n        s += n % 10;\n        n /= 10;\n        s -= n % 10;\n        n /= 10;\n    }\n    return s % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122727,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int odd_sum = 0;\n    int even_sum = 0;\n    int i = 0;\n    while (n != 0) {\n        if (i % 2 == 0) {\n            even_sum += n % 10;\n        } else {\n            odd_sum += n % 10;\n        }\n        n /= 10;\n        i++;\n    }\n    return abs(odd_sum - even_sum) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122727,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    long even = 0, odd = 0;\n    while(n) {\n        if(n%2 == 0) {\n            even += n%10;\n        } else {\n            odd += n%10;\n        }\n        n /= 10;\n    }\n    return (abs(even-odd)%11 == 0);\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122727,
      "stdout": "",
      "stderr": "tmp1qhqun3c: /tmp/tmp1qhqun3c.cpp:19: int main(): Assertion `candidate((1212112)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    long odd = 0, even = 0;\n    while (n) {\n        if (n & 1)\n            odd++;\n        else\n            even++;\n        n >>= 1;\n    }\n    return (odd - even) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122728,
      "stdout": "",
      "stderr": "tmp7ztum474: /tmp/tmp7ztum474.cpp:18: int main(): Assertion `candidate((1212112)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    long odd_sum = 0;\n    long even_sum = 0;\n    while(n) {\n        odd_sum += n%10;\n        n /= 10;\n        even_sum += n%10;\n        n /= 10;\n    }\n    return abs(odd_sum - even_sum) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122727,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int odd = 0, even = 0;\n    while (n) {\n        if (n & 1)\n            odd += 1;\n        else\n            even += 1;\n        n >>= 1;\n    }\n    return (odd - even) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122729,
      "stdout": "",
      "stderr": "tmp_hurpri0: /tmp/tmp_hurpri0.cpp:18: int main(): Assertion `candidate((1212112)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int sum_even = 0;\n    int sum_odd = 0;\n    int i = 0;\n    while (n != 0) {\n        if (i % 2 == 0) {\n            sum_even += n % 10;\n        } else {\n            sum_odd += n % 10;\n        }\n        n /= 10;\n        i++;\n    }\n    return (sum_even - sum_odd) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122729,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int odd_sum = 0;\n    int even_sum = 0;\n    while(n > 0) {\n        int rem = n % 10;\n        if(rem % 2 == 0) {\n            even_sum += rem;\n        } else {\n            odd_sum += rem;\n        }\n        n /= 10;\n    }\n    return abs(odd_sum - even_sum) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122729,
      "stdout": "",
      "stderr": "tmpo0s3aphc: /tmp/tmpo0s3aphc.cpp:21: int main(): Assertion `candidate((1212112)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    if (n < 0) {\n        n = -n;\n    }\n    if (n == 0 || n == 11) {\n        return true;\n    }\n    if (n < 10) {\n        return false;\n    }\n    return is_Diff((n / 10) - (n % 10));\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122724,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int even = 0;\n    int odd = 0;\n    while (n > 0) {\n        if (n % 2 == 0) {\n            even += n % 10;\n        } else {\n            odd += n % 10;\n        }\n        n /= 10;\n    }\n    return (even - odd) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122729,
      "stdout": "",
      "stderr": "tmpr9ft33r3: /tmp/tmpr9ft33r3.cpp:20: int main(): Assertion `candidate((1212112)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    long odd_sum = 0;\n    long even_sum = 0;\n    while(n) {\n        odd_sum += n%10;\n        n /= 10;\n        if(n) {\n            even_sum += n%10;\n            n /= 10;\n        }\n    }\n    return abs(odd_sum - even_sum) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122729,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int odd = 0, even = 0;\n    while (n) {\n        if (n & 1) {\n            odd++;\n        } else {\n            even++;\n        }\n        n >>= 1;\n    }\n    return (odd - even) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122729,
      "stdout": "",
      "stderr": "tmpyg0eem__: /tmp/tmpyg0eem__.cpp:19: int main(): Assertion `candidate((1212112)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int odd_sum = 0, even_sum = 0;\n    int i = 1;\n    while(n) {\n        if(i%2) {\n            odd_sum += n%10;\n        } else {\n            even_sum += n%10;\n        }\n        n /= 10;\n        i++;\n    }\n    return (odd_sum - even_sum)%11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122729,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int even = 0;\n    int odd = 0;\n    while(n > 0) {\n        even += n % 10;\n        n /= 10;\n        odd += n % 10;\n        n /= 10;\n    }\n    return (abs(even - odd) % 11 == 0);\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122729,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    if (n < 0) {\n        n = -n;\n    }\n    if (n == 0) {\n        return true;\n    }\n    if (n == 1) {\n        return false;\n    }\n    long odd_digit_sum = 0;\n    long even_digit_sum = 0;\n    while (n) {\n        odd_digit_sum += n % 10;\n        n /= 100;\n    }\n    n = n / 10;\n    while (n) {\n        even_digit_sum += n % 10;\n        n /= 100;\n    }\n    return is_Diff(abs(odd_digit_sum - even_digit_sum));\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122744,
      "stdout": "",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int odd_digits = 0;\n    int even_digits = 0;\n    while (n > 0) {\n        if (n % 2 == 0) {\n            even_digits += n % 10;\n        } else {\n            odd_digits += n % 10;\n        }\n        n /= 10;\n    }\n    return abs(odd_digits - even_digits) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122724,
      "stdout": "",
      "stderr": "tmpr9fgr31z: /tmp/tmpr9fgr31z.cpp:20: int main(): Assertion `candidate((1212112)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    if (n < 0)\n        n = -n;\n    if (n == 0 || n == 11)\n        return true;\n    if (n < 10)\n        return false;\n    return is_Diff((n / 10) - (2 * (n % 10)));\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122729,
      "stdout": "",
      "stderr": "tmpwpmtgth6: /tmp/tmpwpmtgth6.cpp:16: int main(): Assertion `candidate((1212112)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int odd_sum = 0;\n    int even_sum = 0;\n    while(n) {\n        odd_sum += n%10;\n        n /= 10;\n        if(n) {\n            even_sum += n%10;\n            n /= 10;\n        }\n    }\n    return (odd_sum - even_sum)%11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122729,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int even_sum = 0;\n    int odd_sum = 0;\n    int i = 0;\n    while (n != 0) {\n        if (i % 2 == 0) {\n            even_sum += n % 10;\n        } else {\n            odd_sum += n % 10;\n        }\n        n /= 10;\n        i++;\n    }\n    return (even_sum - odd_sum) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122724,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int sum_odd = 0;\n    int sum_even = 0;\n    int i = 0;\n    while(n != 0) {\n        if(i % 2 == 0) {\n            sum_even += n % 10;\n        }\n        else {\n            sum_odd += n % 10;\n        }\n        n = n / 10;\n        i++;\n    }\n    return (sum_even - sum_odd) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122729,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    if(n < 0) {\n        n = -n;\n    }\n    if(n == 0) {\n        return true;\n    }\n    if(n == 1) {\n        return false;\n    }\n    long odd_digits = 0;\n    long even_digits = 0;\n    while(n) {\n        if(n & 1) {\n            odd_digits += (n % 10);\n        } else {\n            even_digits += (n % 10);\n        }\n        n /= 10;\n    }\n    return is_Diff(abs(odd_digits - even_digits));\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122744,
      "stdout": "",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    if (n < 0) {\n        n = -n;\n    }\n    if (n == 0) {\n        return true;\n    }\n    if (n == 1) {\n        return false;\n    }\n    long even_sum = 0;\n    long odd_sum = 0;\n    while (n) {\n        odd_sum += n % 10;\n        n /= 10;\n        if (n == 0) {\n            break;\n        }\n        even_sum += n % 10;\n        n /= 10;\n    }\n    return is_Diff(abs(odd_sum - even_sum));\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122740,
      "stdout": "",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int even = 0, odd = 0;\n    while (n > 0) {\n        if (n % 2 == 0) {\n            even += n % 10;\n        } else {\n            odd += n % 10;\n        }\n        n /= 10;\n    }\n    return (abs(even - odd) % 11 == 0);\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122730,
      "stdout": "",
      "stderr": "tmpsrfxhc5e: /tmp/tmpsrfxhc5e.cpp:19: int main(): Assertion `candidate((1212112)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int odd_sum = 0;\n    int even_sum = 0;\n    int i = 0;\n    while (n > 0) {\n        if (i % 2 == 0) {\n            even_sum += n % 10;\n        } else {\n            odd_sum += n % 10;\n        }\n        n /= 10;\n        i++;\n    }\n    return (odd_sum - even_sum) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122729,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int odd = 0, even = 0;\n    while (n) {\n        if (n & 1)\n            odd++;\n        else\n            even++;\n        n >>= 1;\n    }\n    return (odd - even) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1665517264,
      "stdout": "",
      "stderr": "tmpr6_f2mkd: /tmp/tmpr6_f2mkd.cpp:18: int main(): Assertion `candidate((1212112)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n\tint odd = 0, even = 0;\n\twhile(n > 0) {\n\t\todd += n % 10;\n\t\tn /= 10;\n\t\teven += n % 10;\n\t\tn /= 10;\n\t}\n\treturn (odd - even) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122729,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int even = 0, odd = 0;\n    while (n) {\n        if (n % 2 == 0) {\n            even += n % 10;\n        } else {\n            odd += n % 10;\n        }\n        n /= 10;\n    }\n    return abs(even - odd) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122730,
      "stdout": "",
      "stderr": "tmptbdwovo6: /tmp/tmptbdwovo6.cpp:19: int main(): Assertion `candidate((1212112)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int odd_sum = 0;\n    int even_sum = 0;\n    while (n > 0) {\n        odd_sum += n % 10;\n        n /= 10;\n        even_sum += n % 10;\n        n /= 10;\n    }\n    return (odd_sum - even_sum) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1665517264,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int even = 0;\n    int odd = 0;\n    while(n) {\n        if(n % 2 == 0) {\n            even += n % 10;\n        }\n        else {\n            odd += n % 10;\n        }\n        n /= 10;\n    }\n    return abs(even - odd) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122731,
      "stdout": "",
      "stderr": "tmp12y64890: /tmp/tmp12y64890.cpp:21: int main(): Assertion `candidate((1212112)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    if (n < 0)\n        n = -n;\n    if (n == 0 || n == 11)\n        return true;\n    if (n < 10)\n        return false;\n    return is_Diff((n / 10) - (2 * (n % 10)));\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122729,
      "stdout": "",
      "stderr": "tmpwpmtgth6: /tmp/tmpwpmtgth6.cpp:16: int main(): Assertion `candidate((1212112)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    if (n < 0) {\n        n = -n;\n    }\n    if (n == 0) {\n        return true;\n    }\n    if (n == 1) {\n        return false;\n    }\n    long odd_digits = 0;\n    long even_digits = 0;\n    while (n) {\n        if (n & 1) {\n            odd_digits += 1;\n        }\n        else {\n            even_digits += 1;\n        }\n        n = n >> 1;\n    }\n    return is_Diff(abs(odd_digits - even_digits));\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122731,
      "stdout": "",
      "stderr": "tmp9lc8rbyw: /tmp/tmp9lc8rbyw.cpp:29: int main(): Assertion `candidate((12345)) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int odd_sum = 0;\n    int even_sum = 0;\n    while (n > 0) {\n        odd_sum += n % 10;\n        n /= 10;\n        even_sum += n % 10;\n        n /= 10;\n    }\n    return (odd_sum - even_sum) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1665517264,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int even = 0;\n    int odd = 0;\n    while(n) {\n        if(n % 2 == 0) {\n            even += n % 10;\n        } else {\n            odd += n % 10;\n        }\n        n /= 10;\n    }\n    return abs(even - odd) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122731,
      "stdout": "",
      "stderr": "tmpn1jkcgvu: /tmp/tmpn1jkcgvu.cpp:20: int main(): Assertion `candidate((1212112)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int odd_digits_sum = 0;\n    int even_digits_sum = 0;\n    while (n > 0) {\n        odd_digits_sum += n % 10;\n        n /= 10;\n        even_digits_sum += n % 10;\n        n /= 10;\n    }\n    return (abs(odd_digits_sum - even_digits_sum) % 11 == 0);\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122731,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    if (n < 0) {\n        n = -n;\n    }\n    if (n == 0) {\n        return true;\n    }\n    if (n == 1) {\n        return false;\n    }\n    long even_sum = 0;\n    long odd_sum = 0;\n    while (n) {\n        odd_sum += n % 10;\n        n /= 10;\n        if (n == 0) {\n            break;\n        }\n        even_sum += n % 10;\n        n /= 10;\n    }\n    return is_Diff(abs(odd_sum - even_sum));\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122740,
      "stdout": "",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int odd_digits = 0;\n    int even_digits = 0;\n    while(n > 0) {\n        if(n % 2 == 0) {\n            even_digits += n % 10;\n        } else {\n            odd_digits += n % 10;\n        }\n        n /= 10;\n    }\n    return abs(odd_digits - even_digits) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1665517264,
      "stdout": "",
      "stderr": "tmpzx_ohlne: /tmp/tmpzx_ohlne.cpp:20: int main(): Assertion `candidate((1212112)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    long even = 0, odd = 0;\n    while (n) {\n        if (n % 2 == 0) {\n            even += n % 10;\n        } else {\n            odd += n % 10;\n        }\n        n /= 10;\n    }\n    return abs(even - odd) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122731,
      "stdout": "",
      "stderr": "tmpff07cvbq: /tmp/tmpff07cvbq.cpp:19: int main(): Assertion `candidate((1212112)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    long even_sum = 0;\n    long odd_sum = 0;\n    long i = 1;\n    while(n != 0) {\n        if(i % 2 == 0) {\n            even_sum += n % 10;\n        } else {\n            odd_sum += n % 10;\n        }\n        n /= 10;\n        i++;\n    }\n    return abs(even_sum - odd_sum) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122731,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int sum_odd = 0;\n    int sum_even = 0;\n    while (n > 0) {\n        sum_odd += n % 10;\n        n /= 10;\n        sum_even += n % 10;\n        n /= 10;\n    }\n    return (sum_odd - sum_even) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122731,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int even_sum = 0;\n    int odd_sum = 0;\n    int i = 0;\n    while (n != 0) {\n        if (i % 2 == 0) {\n            even_sum += n % 10;\n        } else {\n            odd_sum += n % 10;\n        }\n        n /= 10;\n        i++;\n    }\n    return abs(even_sum - odd_sum) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1665517264,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int even_sum = 0;\n    int odd_sum = 0;\n    int i = 0;\n    while (n != 0) {\n        if (i % 2 == 0) {\n            even_sum += n % 10;\n        } else {\n            odd_sum += n % 10;\n        }\n        i++;\n        n /= 10;\n    }\n    return abs(even_sum - odd_sum) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122731,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int odd_sum = 0;\n    int even_sum = 0;\n    while(n > 0) {\n        odd_sum += n % 10;\n        n /= 10;\n        even_sum += n % 10;\n        n /= 10;\n    }\n    return (odd_sum - even_sum) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122731,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int even_sum = 0;\n    int odd_sum = 0;\n    while(n) {\n        even_sum += n%10;\n        n /= 10;\n        odd_sum += n%10;\n        n /= 10;\n    }\n    return abs(even_sum - odd_sum) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122731,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int odd = 0;\n    int even = 0;\n    while (n > 0) {\n        if (n % 2 == 0) {\n            even += n % 10;\n        } else {\n            odd += n % 10;\n        }\n        n /= 10;\n    }\n    return (odd - even) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1665517264,
      "stdout": "",
      "stderr": "tmplr3lr_ad: /tmp/tmplr3lr_ad.cpp:20: int main(): Assertion `candidate((1212112)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int even = 0, odd = 0;\n    while (n) {\n        if (n % 2 == 0)\n            even += n % 10;\n        else\n            odd += n % 10;\n        n /= 10;\n    }\n    return (abs(even - odd) % 11 == 0);\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122731,
      "stdout": "",
      "stderr": "tmpoyrs4q9i: /tmp/tmpoyrs4q9i.cpp:18: int main(): Assertion `candidate((1212112)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int even = 0;\n    int odd = 0;\n    while(n) {\n        if(n%2 == 0) {\n            even += n%10;\n        }\n        else {\n            odd += n%10;\n        }\n        n /= 10;\n    }\n    return (even - odd)%11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122731,
      "stdout": "",
      "stderr": "tmpwksfowfy: /tmp/tmpwksfowfy.cpp:21: int main(): Assertion `candidate((1212112)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int odd_sum = 0;\n    int even_sum = 0;\n    while(n > 0) {\n        odd_sum += n % 10;\n        n /= 10;\n        even_sum += n % 10;\n        n /= 10;\n    }\n    return (odd_sum - even_sum) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122731,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int even_sum = 0;\n    int odd_sum = 0;\n    int count = 0;\n    while(n) {\n        if(count % 2 == 0) {\n            even_sum += n % 10;\n        } else {\n            odd_sum += n % 10;\n        }\n        count++;\n        n /= 10;\n    }\n    return (even_sum - odd_sum) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122731,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int sum_even = 0;\n    int sum_odd = 0;\n    int i = 0;\n    while(n!=0) {\n        if(i%2 == 0) {\n            sum_even += n%10;\n        } else {\n            sum_odd += n%10;\n        }\n        n /= 10;\n        i++;\n    }\n    return (sum_even-sum_odd)%11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122731,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int odd = 0, even = 0;\n    while(n > 0) {\n        if(n % 2 == 0) {\n            even += n % 10;\n        } else {\n            odd += n % 10;\n        }\n        n /= 10;\n    }\n    return abs(odd - even) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122732,
      "stdout": "",
      "stderr": "tmpn32g7xz3: /tmp/tmpn32g7xz3.cpp:19: int main(): Assertion `candidate((1212112)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int even_sum = 0;\n    int odd_sum = 0;\n    int i = 0;\n    while (n != 0) {\n        if (i % 2 == 0) {\n            even_sum += n % 10;\n        } else {\n            odd_sum += n % 10;\n        }\n        n /= 10;\n        i++;\n    }\n    return abs(even_sum - odd_sum) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1665517264,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int odd_sum = 0;\n    int even_sum = 0;\n    int count = 0;\n    while(n != 0) {\n        if(count % 2 == 0) {\n            odd_sum += n % 10;\n        }\n        else {\n            even_sum += n % 10;\n        }\n        n /= 10;\n        count++;\n    }\n    return (odd_sum - even_sum) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int odd_sum = 0;\n    int even_sum = 0;\n    int count = 0;\n    while(n) {\n        if(count % 2 == 0) {\n            even_sum += n % 10;\n        } else {\n            odd_sum += n % 10;\n        }\n        count++;\n        n /= 10;\n    }\n    return (odd_sum - even_sum) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int odd_sum = 0;\n    int even_sum = 0;\n    int i = 0;\n    while (n > 0) {\n        if (i % 2 == 0) {\n            even_sum += n % 10;\n        } else {\n            odd_sum += n % 10;\n        }\n        n /= 10;\n        i++;\n    }\n    return abs(odd_sum - even_sum) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int even = 0;\n    int odd = 0;\n    while (n > 0) {\n        if (n % 2 == 0) {\n            even += n % 10;\n        } else {\n            odd += n % 10;\n        }\n        n = n / 10;\n    }\n    return abs(even - odd) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122733,
      "stdout": "",
      "stderr": "tmpblfpkskd: /tmp/tmpblfpkskd.cpp:20: int main(): Assertion `candidate((1212112)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int odd_digits_sum = 0;\n    int even_digits_sum = 0;\n    int count = 0;\n    while (n != 0) {\n        if (count % 2 == 0) {\n            even_digits_sum += n % 10;\n        } else {\n            odd_digits_sum += n % 10;\n        }\n        n /= 10;\n        count++;\n    }\n    return abs(odd_digits_sum - even_digits_sum) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int odd_sum = 0;\n    int even_sum = 0;\n    while (n > 0) {\n        odd_sum += n % 10;\n        n /= 10;\n        even_sum += n % 10;\n        n /= 10;\n    }\n    return (odd_sum - even_sum) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1665517264,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int i = 0;\n    int sum1 = 0;\n    int sum2 = 0;\n    while (n > 0) {\n        if (i % 2 == 0) {\n            sum1 += n % 10;\n        } else {\n            sum2 += n % 10;\n        }\n        n /= 10;\n        i++;\n    }\n    return sum1 - sum2 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    if(n < 0)\n        n = -n;\n    if(n == 0 || n == 11)\n        return true;\n    if(n < 10)\n        return false;\n    int odd = 0, even = 0;\n    while(n) {\n        if(n % 2 == 0)\n            even += n % 10;\n        else\n            odd += n % 10;\n        n /= 10;\n    }\n    return is_Diff(abs(odd - even));\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122733,
      "stdout": "",
      "stderr": "tmp8hghjia2: /tmp/tmp8hghjia2.cpp:24: int main(): Assertion `candidate((1212112)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int even = 0;\n    int odd = 0;\n    while (n > 0) {\n        int r = n % 10;\n        if (n % 2 == 0) {\n            even += r;\n        } else {\n            odd += r;\n        }\n        n /= 10;\n    }\n    if (abs(even - odd) % 11 == 0) {\n        return true;\n    }\n    return false;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122733,
      "stdout": "",
      "stderr": "tmp5vq4_ziz: /tmp/tmp5vq4_ziz.cpp:24: int main(): Assertion `candidate((1212112)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int sum_even = 0;\n    int sum_odd = 0;\n    int i = 0;\n    while (n > 0) {\n        if (i % 2 == 0) {\n            sum_even += n % 10;\n        } else {\n            sum_odd += n % 10;\n        }\n        n /= 10;\n        i++;\n    }\n    return (sum_even - sum_odd) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int sum_even = 0;\n    int sum_odd = 0;\n    int i = 0;\n    while(n > 0) {\n        if(i % 2 == 0) {\n            sum_even += n % 10;\n        }\n        else {\n            sum_odd += n % 10;\n        }\n        n /= 10;\n        i++;\n    }\n    return (sum_even - sum_odd) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122724,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    if (n < 0) {\n        n = -n;\n    }\n    if (n == 0 || n == 11) {\n        return true;\n    }\n    if (n < 10) {\n        return false;\n    }\n    return is_Diff((n / 10) - (n % 10));\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122724,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int odd_sum = 0, even_sum = 0;\n    while (n) {\n        odd_sum += n % 10;\n        n /= 10;\n        even_sum += n % 10;\n        n /= 10;\n    }\n    return abs(odd_sum - even_sum) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int odd_sum = 0;\n    int even_sum = 0;\n    while (n > 0) {\n        odd_sum += n % 10;\n        n /= 10;\n        even_sum += n % 10;\n        n /= 10;\n    }\n    return (odd_sum - even_sum) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1665517264,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int even = 0, odd = 0;\n    while(n) {\n        if(n%2) {\n            odd += n%10;\n        } else {\n            even += n%10;\n        }\n        n /= 10;\n    }\n    return abs(odd-even)%11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122733,
      "stdout": "",
      "stderr": "tmpuuw8mucd: /tmp/tmpuuw8mucd.cpp:19: int main(): Assertion `candidate((1212112)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    long odd_sum = 0;\n    long even_sum = 0;\n    while (n > 0) {\n        odd_sum += n % 10;\n        n /= 10;\n        even_sum += n % 10;\n        n /= 10;\n    }\n    return (odd_sum - even_sum) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122725,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int odd = 0;\n    int even = 0;\n    while(n) {\n        if(n%2 == 0) {\n            even += n%10;\n        } else {\n            odd += n%10;\n        }\n        n /= 10;\n    }\n    return abs(odd - even) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122733,
      "stdout": "",
      "stderr": "tmpbjwcw80r: /tmp/tmpbjwcw80r.cpp:20: int main(): Assertion `candidate((1212112)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    if (n < 0) {\n        n = -n;\n    }\n    if (n == 0 || n == 11) {\n        return true;\n    }\n    if (n < 10) {\n        return false;\n    }\n    return is_Diff((n / 10) - (n % 10));\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122724,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int sum = 0;\n    int diff = 0;\n    while (n > 0) {\n        int digit = n % 10;\n        n = n / 10;\n        if (sum > diff) {\n            diff = diff - digit;\n        } else {\n            sum = sum + digit;\n        }\n    }\n    return sum == diff;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122733,
      "stdout": "",
      "stderr": "tmpv7hz8n6g: /tmp/tmpv7hz8n6g.cpp:21: int main(): Assertion `candidate((1212112)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    if (n < 0) {\n        n = -n;\n    }\n    if (n == 0) {\n        return true;\n    }\n    if (n == 1) {\n        return false;\n    }\n    long odd_digit_sum = 0;\n    long even_digit_sum = 0;\n    while (n > 0) {\n        odd_digit_sum += n % 10;\n        n /= 10;\n        if (n > 0) {\n            even_digit_sum += n % 10;\n            n /= 10;\n        }\n    }\n    return is_Diff(abs(odd_digit_sum - even_digit_sum));\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122748,
      "stdout": "",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int even_sum = 0;\n    int odd_sum = 0;\n    int i = 0;\n    while(n > 0) {\n        if(i % 2 == 0) {\n            even_sum += n % 10;\n        } else {\n            odd_sum += n % 10;\n        }\n        n /= 10;\n        i++;\n    }\n    return (even_sum - odd_sum) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122734,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    if (n < 0) {\n        n = -n;\n    }\n    if (n == 0 || n == 11) {\n        return true;\n    }\n    if (n < 10) {\n        return false;\n    }\n    return is_Diff((n / 10) - (n % 10));\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122724,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    if (n < 0) {\n        n = -n;\n    }\n    if (n == 0) {\n        return true;\n    }\n    if (n == 1) {\n        return false;\n    }\n    long odd_digit_sum = 0;\n    long even_digit_sum = 0;\n    while (n) {\n        odd_digit_sum += n % 10;\n        n /= 10;\n        if (n == 0) {\n            break;\n        }\n        even_digit_sum += n % 10;\n        n /= 10;\n    }\n    return is_Diff(abs(odd_digit_sum - even_digit_sum));\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122742,
      "stdout": "",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    if (n < 0) {\n        n = -n;\n    }\n    if (n == 0) {\n        return true;\n    }\n    if (n == 1) {\n        return false;\n    }\n    long odd_digits = 0;\n    long even_digits = 0;\n    while (n) {\n        if (n % 2 == 0) {\n            even_digits += n % 10;\n        } else {\n            odd_digits += n % 10;\n        }\n        n /= 10;\n    }\n    return is_Diff(abs(odd_digits - even_digits));\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122740,
      "stdout": "",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int odd = 0, even = 0;\n    while(n > 0) {\n        if(n % 2 == 0)\n            even += n % 10;\n        else\n            odd += n % 10;\n        n /= 10;\n    }\n    return abs(odd - even) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122735,
      "stdout": "",
      "stderr": "tmp_0_87yuv: /tmp/tmp_0_87yuv.cpp:18: int main(): Assertion `candidate((1212112)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int even = 0, odd = 0;\n    while(n > 0) {\n        even += n % 10;\n        n /= 10;\n        odd += n % 10;\n        n /= 10;\n    }\n    return (abs(even - odd) % 11 == 0);\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122735,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int odd_sum = 0;\n    int even_sum = 0;\n    while (n > 0) {\n        int digit = n % 10;\n        if (digit % 2 == 0) {\n            even_sum += digit;\n        } else {\n            odd_sum += digit;\n        }\n        n /= 10;\n    }\n    return abs(odd_sum - even_sum) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122726,
      "stdout": "",
      "stderr": "tmp960pot3i: /tmp/tmp960pot3i.cpp:21: int main(): Assertion `candidate((1212112)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int even = 0, odd = 0;\n    while (n) {\n        if (n % 2 == 0) {\n            even += n % 10;\n        } else {\n            odd += n % 10;\n        }\n        n /= 10;\n    }\n    return (abs(even - odd) % 11 == 0);\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122735,
      "stdout": "",
      "stderr": "tmpf66493wx: /tmp/tmpf66493wx.cpp:19: int main(): Assertion `candidate((1212112)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    if (n < 0) {\n        n = -n;\n    }\n    if (n == 0) {\n        return true;\n    }\n    if (n == 1) {\n        return false;\n    }\n    long odd_digits_sum = 0;\n    long even_digits_sum = 0;\n    while (n) {\n        odd_digits_sum += n % 10;\n        n /= 10;\n        if (n == 0) {\n            break;\n        }\n        even_digits_sum += n % 10;\n        n /= 10;\n    }\n    return is_Diff(abs(odd_digits_sum - even_digits_sum));\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1665517279,
      "stdout": "",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    if (n < 0) {\n        n = -n;\n    }\n    if (n == 0) {\n        return true;\n    }\n    if (n == 1) {\n        return false;\n    }\n    long odd_digits = 0;\n    long even_digits = 0;\n    while (n) {\n        if (n & 1) {\n            odd_digits += n % 10;\n        } else {\n            even_digits += n % 10;\n        }\n        n /= 10;\n    }\n    return is_Diff(abs(odd_digits - even_digits));\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122740,
      "stdout": "",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int even_sum = 0;\n    int odd_sum = 0;\n    while(n) {\n        even_sum += n%10;\n        n /= 10;\n        if(n) {\n            odd_sum += n%10;\n            n /= 10;\n        }\n    }\n    return (even_sum - odd_sum)%11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122735,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    if (n < 0) {\n        n = -n;\n    }\n    if (n == 0) {\n        return true;\n    }\n    if (n == 1) {\n        return false;\n    }\n    long even_sum = 0;\n    long odd_sum = 0;\n    while (n) {\n        even_sum += n % 10;\n        n /= 10;\n        if (n == 0) {\n            break;\n        }\n        odd_sum += n % 10;\n        n /= 10;\n    }\n    return is_Diff(abs(even_sum - odd_sum));\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122750,
      "stdout": "",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int even = 0;\n    int odd = 0;\n    while(n > 0) {\n        int rem = n % 10;\n        if(rem % 2 == 0) {\n            even += rem;\n        } else {\n            odd += rem;\n        }\n        n /= 10;\n    }\n    return abs(even - odd) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122735,
      "stdout": "",
      "stderr": "tmpz6lr_nqo: /tmp/tmpz6lr_nqo.cpp:21: int main(): Assertion `candidate((1212112)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    if (n < 0) {\n        n = -n;\n    }\n    if (n == 0) {\n        return true;\n    }\n    if (n == 1) {\n        return false;\n    }\n    long odd_digits = 0;\n    long even_digits = 0;\n    while (n) {\n        if (n % 2 == 0) {\n            even_digits += n % 10;\n        } else {\n            odd_digits += n % 10;\n        }\n        n /= 10;\n    }\n    return is_Diff(abs(odd_digits - even_digits));\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122740,
      "stdout": "",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int sum1 = 0, sum2 = 0;\n    while (n) {\n        sum1 += n % 10;\n        n /= 10;\n        sum2 += n % 10;\n        n /= 10;\n    }\n    return (sum1 - sum2) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122726,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int even = 0;\n    int odd = 0;\n    while(n) {\n        if(n%2 == 0) {\n            even += n%10;\n        } else {\n            odd += n%10;\n        }\n        n = n/10;\n    }\n    return (even-odd)%11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122735,
      "stdout": "",
      "stderr": "tmp3ci0me6_: /tmp/tmp3ci0me6_.cpp:20: int main(): Assertion `candidate((1212112)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int even_sum = 0;\n    int odd_sum = 0;\n    while(n > 0) {\n        even_sum += n % 10;\n        n /= 10;\n        odd_sum += n % 10;\n        n /= 10;\n    }\n    return abs(even_sum - odd_sum) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122735,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    if (n < 0)\n        n = -n;\n    if (n == 0 || n == 11)\n        return true;\n    if (n < 10)\n        return false;\n    return is_Diff((n / 10) - (n % 10));\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122724,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    long even_sum = 0;\n    long odd_sum = 0;\n    while(n) {\n        even_sum += n%10;\n        n /= 10;\n        odd_sum += n%10;\n        n /= 10;\n    }\n    return (even_sum - odd_sum)%11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122735,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    if (n == 0)\n        return true;\n    int even_sum = 0, odd_sum = 0;\n    while (n != 0) {\n        even_sum += n % 10;\n        n /= 10;\n        odd_sum += n % 10;\n        n /= 10;\n    }\n    return is_Diff(abs(even_sum - odd_sum));\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122750,
      "stdout": "",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    long odd_sum = 0, even_sum = 0;\n    while (n > 0) {\n        odd_sum += n % 10;\n        n /= 10;\n        even_sum += n % 10;\n        n /= 10;\n    }\n    return (odd_sum - even_sum) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122725,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int odd_sum = 0;\n    int even_sum = 0;\n    while(n != 0) {\n        int digit = n % 10;\n        if(digit % 2 == 0) {\n            even_sum += digit;\n        } else {\n            odd_sum += digit;\n        }\n        n /= 10;\n    }\n    return (odd_sum - even_sum) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122735,
      "stdout": "",
      "stderr": "tmpfncu1fdh: /tmp/tmpfncu1fdh.cpp:21: int main(): Assertion `candidate((1212112)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int odd = 0;\n    int even = 0;\n    while (n > 0) {\n        int digit = n % 10;\n        if (digit % 2 == 0) {\n            even += digit;\n        } else {\n            odd += digit;\n        }\n        n /= 10;\n    }\n    return (odd - even) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122735,
      "stdout": "",
      "stderr": "tmp6dt_nho9: /tmp/tmp6dt_nho9.cpp:21: int main(): Assertion `candidate((1212112)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    if (n < 0) {\n        n = -n;\n    }\n    if (n == 0) {\n        return true;\n    }\n    if (n == 1) {\n        return false;\n    }\n    long odd_digit_sum = 0;\n    long even_digit_sum = 0;\n    while (n) {\n        odd_digit_sum += n % 10;\n        n /= 100;\n        if (n == 0) {\n            break;\n        }\n        even_digit_sum += n % 10;\n        n /= 100;\n    }\n    return is_Diff(abs(odd_digit_sum - even_digit_sum));\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122750,
      "stdout": "",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int odd = 0, even = 0;\n    while (n > 0) {\n        if (n % 2 == 0) {\n            even += n % 10;\n        } else {\n            odd += n % 10;\n        }\n        n /= 10;\n    }\n    return (odd - even) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122736,
      "stdout": "",
      "stderr": "tmp7b1dp39u: /tmp/tmp7b1dp39u.cpp:19: int main(): Assertion `candidate((1212112)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int sum1 = 0;\n    int sum2 = 0;\n    while (n != 0) {\n        sum1 += n % 10;\n        n /= 10;\n        sum2 += n % 10;\n        n /= 10;\n    }\n    return (sum1 - sum2) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122737,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int odd_sum = 0;\n    int even_sum = 0;\n    while(n != 0) {\n        int digit = n % 10;\n        if(digit % 2 == 0) {\n            even_sum += digit;\n        } else {\n            odd_sum += digit;\n        }\n        n /= 10;\n    }\n    return abs(odd_sum - even_sum) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122737,
      "stdout": "",
      "stderr": "tmpgt8_81d8: /tmp/tmpgt8_81d8.cpp:21: int main(): Assertion `candidate((1212112)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    if (n < 0) {\n        n = -n;\n    }\n    if (n == 0) {\n        return true;\n    }\n    if (n == 1) {\n        return false;\n    }\n    long odd_digits_sum = 0;\n    long even_digits_sum = 0;\n    while (n) {\n        odd_digits_sum += n % 10;\n        n /= 10;\n        if (n == 0) {\n            break;\n        }\n        even_digits_sum += n % 10;\n        n /= 10;\n    }\n    return is_Diff(abs(odd_digits_sum - even_digits_sum));\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1665517279,
      "stdout": "",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int odd_sum = 0;\n    int even_sum = 0;\n    while(n) {\n        even_sum += n%10;\n        n /= 10;\n        odd_sum += n%10;\n        n /= 10;\n    }\n    return (abs(odd_sum - even_sum) % 11 == 0);\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122737,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int even_sum = 0;\n    int odd_sum = 0;\n    while (n) {\n        even_sum += n % 10;\n        n /= 10;\n        odd_sum += n % 10;\n        n /= 10;\n    }\n    return abs(even_sum - odd_sum) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122737,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int even_sum = 0;\n    int odd_sum = 0;\n    int count = 0;\n    while (n > 0) {\n        if (count % 2 == 0) {\n            even_sum += n % 10;\n        } else {\n            odd_sum += n % 10;\n        }\n        n /= 10;\n        count++;\n    }\n    return (even_sum - odd_sum) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122737,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int odd_sum = 0;\n    int even_sum = 0;\n    while(n) {\n        odd_sum += n%10;\n        n /= 10;\n        even_sum += n%10;\n        n /= 10;\n    }\n    return (odd_sum - even_sum)%11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122737,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    if (n < 0) {\n        n = -n;\n    }\n    if (n == 0) {\n        return true;\n    }\n    if (n == 1) {\n        return false;\n    }\n    int odd_digits = 0;\n    int even_digits = 0;\n    while (n) {\n        if (n & 1) {\n            odd_digits += 1;\n        }\n        else {\n            even_digits += 1;\n        }\n        n = n >> 1;\n    }\n    return is_Diff(abs(odd_digits - even_digits));\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122737,
      "stdout": "",
      "stderr": "tmpnh2_qvs5: /tmp/tmpnh2_qvs5.cpp:29: int main(): Assertion `candidate((12345)) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int even_sum = 0;\n    int odd_sum = 0;\n    int i = 0;\n    while (n != 0) {\n        if (i % 2 == 0) {\n            even_sum += n % 10;\n        } else {\n            odd_sum += n % 10;\n        }\n        n /= 10;\n        i++;\n    }\n    return (even_sum - odd_sum) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122724,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    long odd_sum = 0;\n    long even_sum = 0;\n    while (n != 0) {\n        odd_sum += n % 10;\n        n /= 10;\n        even_sum += n % 10;\n        n /= 10;\n    }\n    return (odd_sum - even_sum) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122724,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    if(n < 0) {\n        n = -n;\n    }\n    if(n == 0) {\n        return true;\n    }\n    if(n == 1) {\n        return false;\n    }\n    long even_sum = 0;\n    long odd_sum = 0;\n    while(n) {\n        if(n % 2 == 0) {\n            even_sum += n % 10;\n        }\n        else {\n            odd_sum += n % 10;\n        }\n        n /= 10;\n    }\n    return is_Diff(abs(even_sum - odd_sum));\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122752,
      "stdout": "",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int odd_sum = 0;\n    int even_sum = 0;\n    while(n) {\n        int digit = n%10;\n        if(digit%2) {\n            odd_sum += digit;\n        } else {\n            even_sum += digit;\n        }\n        n /= 10;\n    }\n    return (odd_sum - even_sum)%11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122737,
      "stdout": "",
      "stderr": "tmp5fvuchp8: /tmp/tmp5fvuchp8.cpp:21: int main(): Assertion `candidate((1212112)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int sum1 = 0;\n    int sum2 = 0;\n    while (n > 0) {\n        sum1 += n % 10;\n        n /= 10;\n        sum2 += n % 10;\n        n /= 10;\n    }\n    return (sum1 - sum2) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122727,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int odd_sum = 0;\n    int even_sum = 0;\n    while(n > 0) {\n        odd_sum += n % 10;\n        n /= 10;\n        even_sum += n % 10;\n        n /= 10;\n    }\n    return abs(odd_sum - even_sum) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122737,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int odd = 0;\n    int even = 0;\n    while (n != 0) {\n        if (n % 2 == 0) {\n            even += n % 10;\n        } else {\n            odd += n % 10;\n        }\n        n /= 10;\n    }\n    return abs(odd - even) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122738,
      "stdout": "",
      "stderr": "tmprufgdgs8: /tmp/tmprufgdgs8.cpp:20: int main(): Assertion `candidate((1212112)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    }
  ]
}
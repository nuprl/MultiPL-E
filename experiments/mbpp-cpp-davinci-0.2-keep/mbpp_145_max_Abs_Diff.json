{
  "name": "mbpp_145_max_Abs_Diff",
  "language": "cpp",
  "prompt": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the maximum difference between any two elements in a given array.\nlong max_Abs_Diff(long arr) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_145_max_Abs_Diff.py",
  "prompt_terminology": "verbatim",
  "tests": "}\nint main() {\n    auto candidate = max_Abs_Diff;\n    assert(candidate(std::make_tuple(2, 1, 5, 3)) == (4));\n    assert(candidate(std::make_tuple(9, 3, 2, 5, 1)) == (8));\n    assert(candidate(std::make_tuple(3, 2, 1)) == (2));\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    long max = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        for (int j = i+1; j < arr.size(); j++) {\n            if (abs(arr[i] - arr[j]) > max) {\n                max = abs(arr[i] - arr[j]);\n            }\n        }\n    }\n    return max;",
    "    long max_diff = 0;\n    for(int i = 0; i < arr.size(); i++) {\n        for(int j = i + 1; j < arr.size(); j++) {\n            if(abs(arr[i] - arr[j]) > max_diff) {\n                max_diff = abs(arr[i] - arr[j]);\n            }\n        }\n    }\n    return max_diff;",
    "    long max_diff = 0;\n    long n = arr.size();\n    for(int i = 0; i < n; i++) {\n        for(int j = i+1; j < n; j++) {\n            if(abs(arr[i] - arr[j]) > max_diff) {\n                max_diff = abs(arr[i] - arr[j]);\n            }\n        }\n    }\n    return max_diff;",
    "    long max = arr[0];\n    long min = arr[0];\n    for (int i = 0; i < arr.size(); i++) {\n        if (arr[i] > max) {\n            max = arr[i];\n        }\n        if (arr[i] < min) {\n            min = arr[i];\n        }\n    }\n    return max - min;",
    "    // Write your code here\n    long max = 0;\n    for(int i=0;i<arr.size();i++)\n    {\n        for(int j=i+1;j<arr.size();j++)\n        {\n            if(abs(arr[i]-arr[j])>max)\n            {\n                max = abs(arr[i]-arr[j]);\n            }\n        }\n    }\n    return max;",
    "    long max = arr[0];\n    long min = arr[0];\n    for (int i = 1; i < arr.size(); i++) {\n        if (arr[i] > max) {\n            max = arr[i];\n        }\n        if (arr[i] < min) {\n            min = arr[i];\n        }\n    }\n    return max - min;",
    "    long max_diff = 0;\n    long n = sizeof(arr)/sizeof(arr[0]);\n    for(int i = 0; i < n; i++) {\n        for(int j = i+1; j < n; j++) {\n            if(arr[j] - arr[i] > max_diff) {\n                max_diff = arr[j] - arr[i];\n            }\n        }\n    }\n    return max_diff;",
    "    long max = 0;\n    for (long i = 0; i < arr.size(); i++) {\n        for (long j = 0; j < arr.size(); j++) {\n            if (abs(arr[i] - arr[j]) > max) {\n                max = abs(arr[i] - arr[j]);\n            }\n        }\n    }\n    return max;",
    "    long max_diff = 0;\n    for(int i = 0; i < arr.size(); i++) {\n        for(int j = 0; j < arr.size(); j++) {\n            if(arr[i] - arr[j] > max_diff) {\n                max_diff = arr[i] - arr[j];\n            }\n        }\n    }\n    return max_diff;",
    "    long max_diff = 0;\n    long max_element = arr[0];\n    long min_element = arr[0];\n    for (int i = 0; i < arr.size(); i++) {\n        if (arr[i] > max_element) {\n            max_element = arr[i];\n        }\n        if (arr[i] < min_element) {\n            min_element = arr[i];\n        }\n    }\n    max_diff = max_element - min_element;\n    return max_diff;",
    "    long max_diff = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        for (int j = 0; j < arr.size(); j++) {\n            if (arr[i] - arr[j] > max_diff) {\n                max_diff = arr[i] - arr[j];\n            }\n        }\n    }\n    return max_diff;",
    "    long max_diff = 0;\n    long size = sizeof(arr)/sizeof(arr[0]);\n    for(int i = 0; i < size; i++) {\n        for(int j = i+1; j < size; j++) {\n            if(arr[i] - arr[j] > max_diff) {\n                max_diff = arr[i] - arr[j];\n            }\n        }\n    }\n    return max_diff;",
    "    long max = 0;\n    long min = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        if (arr[i] > max) {\n            max = arr[i];\n        }\n        if (arr[i] < min) {\n            min = arr[i];\n        }\n    }\n    return max - min;",
    "    long max = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        for (int j = i + 1; j < arr.size(); j++) {\n            if (abs(arr[i] - arr[j]) > max) {\n                max = abs(arr[i] - arr[j]);\n            }\n        }\n    }\n    return max;",
    "    long max_diff = 0;\n    long n = sizeof(arr) / sizeof(arr[0]);\n    long i, j;\n    for (i = 0; i < n; i++) {\n        for (j = i + 1; j < n; j++) {\n            if (arr[j] - arr[i] > max_diff) {\n                max_diff = arr[j] - arr[i];\n            }\n        }\n    }\n    return max_diff;",
    "    long max = arr[0];\n    long min = arr[0];\n    for(int i = 0; i < arr.length; i++) {\n        if(arr[i] > max) {\n            max = arr[i];\n        }\n        if(arr[i] < min) {\n            min = arr[i];\n        }\n    }\n    return max - min;",
    "    long max = 0;\n    for(int i = 0; i < arr.length; i++) {\n        for(int j = i+1; j < arr.length; j++) {\n            if(abs(arr[i] - arr[j]) > max) {\n                max = abs(arr[i] - arr[j]);\n            }\n        }\n    }\n    return max;",
    "    int n = sizeof(arr)/sizeof(arr[0]);\n    int max1 = INT_MIN, min1 = INT_MAX;\n    for(int i = 0; i < n; i++) {\n        max1 = max(max1, arr[i] + i);\n        min1 = min(min1, arr[i] + i);\n    }\n    return max1 - min1;",
    "    long max_diff = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        for (int j = i + 1; j < arr.size(); j++) {\n            if (abs(arr[i] - arr[j]) > max_diff) {\n                max_diff = abs(arr[i] - arr[j]);\n            }\n        }\n    }\n    return max_diff;",
    "    long max = arr[0];\n    long min = arr[0];\n    for(int i = 0; i < arr.size(); i++) {\n        if(arr[i] > max) {\n            max = arr[i];\n        }\n        if(arr[i] < min) {\n            min = arr[i];\n        }\n    }\n    return max - min;"
  ]
}
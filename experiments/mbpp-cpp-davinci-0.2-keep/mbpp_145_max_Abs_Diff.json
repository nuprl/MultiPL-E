{
  "name": "mbpp_145_max_Abs_Diff",
  "language": "cpp",
  "prompt": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the maximum difference between any two elements in a given array.\nlong max_Abs_Diff(long arr) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_145_max_Abs_Diff.py",
  "prompt_terminology": "verbatim",
  "tests": "}\nint main() {\n    auto candidate = max_Abs_Diff;\n    assert(candidate(std::make_tuple(2, 1, 5, 3)) == (4));\n    assert(candidate(std::make_tuple(9, 3, 2, 5, 1)) == (8));\n    assert(candidate(std::make_tuple(3, 2, 1)) == (2));\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    long max = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        for (int j = i+1; j < arr.size(); j++) {\n            if (abs(arr[i] - arr[j]) > max) {\n                max = abs(arr[i] - arr[j]);\n            }\n        }\n    }\n    return max;",
    "    long max_diff = 0;\n    for(int i = 0; i < arr.size(); i++) {\n        for(int j = i + 1; j < arr.size(); j++) {\n            if(abs(arr[i] - arr[j]) > max_diff) {\n                max_diff = abs(arr[i] - arr[j]);\n            }\n        }\n    }\n    return max_diff;",
    "    long max_diff = 0;\n    long n = arr.size();\n    for(int i = 0; i < n; i++) {\n        for(int j = i+1; j < n; j++) {\n            if(abs(arr[i] - arr[j]) > max_diff) {\n                max_diff = abs(arr[i] - arr[j]);\n            }\n        }\n    }\n    return max_diff;",
    "    long max = arr[0];\n    long min = arr[0];\n    for (int i = 0; i < arr.size(); i++) {\n        if (arr[i] > max) {\n            max = arr[i];\n        }\n        if (arr[i] < min) {\n            min = arr[i];\n        }\n    }\n    return max - min;",
    "    // Write your code here\n    long max = 0;\n    for(int i=0;i<arr.size();i++)\n    {\n        for(int j=i+1;j<arr.size();j++)\n        {\n            if(abs(arr[i]-arr[j])>max)\n            {\n                max = abs(arr[i]-arr[j]);\n            }\n        }\n    }\n    return max;",
    "    long max = arr[0];\n    long min = arr[0];\n    for (int i = 1; i < arr.size(); i++) {\n        if (arr[i] > max) {\n            max = arr[i];\n        }\n        if (arr[i] < min) {\n            min = arr[i];\n        }\n    }\n    return max - min;",
    "    long max_diff = 0;\n    long n = sizeof(arr)/sizeof(arr[0]);\n    for(int i = 0; i < n; i++) {\n        for(int j = i+1; j < n; j++) {\n            if(arr[j] - arr[i] > max_diff) {\n                max_diff = arr[j] - arr[i];\n            }\n        }\n    }\n    return max_diff;",
    "    long max = 0;\n    for (long i = 0; i < arr.size(); i++) {\n        for (long j = 0; j < arr.size(); j++) {\n            if (abs(arr[i] - arr[j]) > max) {\n                max = abs(arr[i] - arr[j]);\n            }\n        }\n    }\n    return max;",
    "    long max_diff = 0;\n    for(int i = 0; i < arr.size(); i++) {\n        for(int j = 0; j < arr.size(); j++) {\n            if(arr[i] - arr[j] > max_diff) {\n                max_diff = arr[i] - arr[j];\n            }\n        }\n    }\n    return max_diff;",
    "    long max_diff = 0;\n    long max_element = arr[0];\n    long min_element = arr[0];\n    for (int i = 0; i < arr.size(); i++) {\n        if (arr[i] > max_element) {\n            max_element = arr[i];\n        }\n        if (arr[i] < min_element) {\n            min_element = arr[i];\n        }\n    }\n    max_diff = max_element - min_element;\n    return max_diff;",
    "    long max_diff = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        for (int j = 0; j < arr.size(); j++) {\n            if (arr[i] - arr[j] > max_diff) {\n                max_diff = arr[i] - arr[j];\n            }\n        }\n    }\n    return max_diff;",
    "    long max_diff = 0;\n    long size = sizeof(arr)/sizeof(arr[0]);\n    for(int i = 0; i < size; i++) {\n        for(int j = i+1; j < size; j++) {\n            if(arr[i] - arr[j] > max_diff) {\n                max_diff = arr[i] - arr[j];\n            }\n        }\n    }\n    return max_diff;",
    "    long max = 0;\n    long min = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        if (arr[i] > max) {\n            max = arr[i];\n        }\n        if (arr[i] < min) {\n            min = arr[i];\n        }\n    }\n    return max - min;",
    "    long max = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        for (int j = i + 1; j < arr.size(); j++) {\n            if (abs(arr[i] - arr[j]) > max) {\n                max = abs(arr[i] - arr[j]);\n            }\n        }\n    }\n    return max;",
    "    long max_diff = 0;\n    long n = sizeof(arr) / sizeof(arr[0]);\n    long i, j;\n    for (i = 0; i < n; i++) {\n        for (j = i + 1; j < n; j++) {\n            if (arr[j] - arr[i] > max_diff) {\n                max_diff = arr[j] - arr[i];\n            }\n        }\n    }\n    return max_diff;",
    "    long max = arr[0];\n    long min = arr[0];\n    for(int i = 0; i < arr.length; i++) {\n        if(arr[i] > max) {\n            max = arr[i];\n        }\n        if(arr[i] < min) {\n            min = arr[i];\n        }\n    }\n    return max - min;",
    "    long max = 0;\n    for(int i = 0; i < arr.length; i++) {\n        for(int j = i+1; j < arr.length; j++) {\n            if(abs(arr[i] - arr[j]) > max) {\n                max = abs(arr[i] - arr[j]);\n            }\n        }\n    }\n    return max;",
    "    int n = sizeof(arr)/sizeof(arr[0]);\n    int max1 = INT_MIN, min1 = INT_MAX;\n    for(int i = 0; i < n; i++) {\n        max1 = max(max1, arr[i] + i);\n        min1 = min(min1, arr[i] + i);\n    }\n    return max1 - min1;",
    "    long max_diff = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        for (int j = i + 1; j < arr.size(); j++) {\n            if (abs(arr[i] - arr[j]) > max_diff) {\n                max_diff = abs(arr[i] - arr[j]);\n            }\n        }\n    }\n    return max_diff;",
    "    long max = arr[0];\n    long min = arr[0];\n    for(int i = 0; i < arr.size(); i++) {\n        if(arr[i] > max) {\n            max = arr[i];\n        }\n        if(arr[i] < min) {\n            min = arr[i];\n        }\n    }\n    return max - min;",
    "    long max_diff = 0;\n    for(int i = 0; i < arr.size(); i++) {\n        for(int j = i+1; j < arr.size(); j++) {\n            if(abs(arr[i] - arr[j]) > max_diff) {\n                max_diff = abs(arr[i] - arr[j]);\n            }\n        }\n    }\n    return max_diff;",
    "    long max_diff = 0;\n    for(long i = 0; i < arr.size(); i++) {\n        for(long j = 0; j < arr.size(); j++) {\n            long diff = abs(arr[i] - arr[j]);\n            if(diff > max_diff) {\n                max_diff = diff;\n            }\n        }\n    }\n    return max_diff;",
    "    long max = arr[0];\n    long min = arr[0];\n    for(int i = 0; i < arr.size(); i++) {\n        if(arr[i] > max) {\n            max = arr[i];\n        }\n        if(arr[i] < min) {\n            min = arr[i];\n        }\n    }\n    return max - min;",
    "    long max_diff = 0;\n    long len = sizeof(arr)/sizeof(arr[0]);\n    for(long i = 0; i < len; i++) {\n        for(long j = i+1; j < len; j++) {\n            if(abs(arr[i] - arr[j]) > max_diff) {\n                max_diff = abs(arr[i] - arr[j]);\n            }\n        }\n    }\n    return max_diff;",
    "    long max_diff = 0;\n    long diff = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        for (int j = i + 1; j < arr.size(); j++) {\n            diff = abs(arr[i] - arr[j]);\n            if (diff > max_diff) {\n                max_diff = diff;\n            }\n        }\n    }\n    return max_diff;",
    "    long max_diff = 0;\n    long n = sizeof(arr)/sizeof(arr[0]);\n    for(long i = 0; i < n; i++) {\n        for(long j = i+1; j < n; j++) {\n            if(arr[i] - arr[j] > max_diff) {\n                max_diff = arr[i] - arr[j];\n            }\n        }\n    }\n    return max_diff;",
    "    long max = arr[0];\n    long min = arr[0];\n    for(int i = 0; i < arr.size(); i++) {\n        if(arr[i] > max) {\n            max = arr[i];\n        }\n        if(arr[i] < min) {\n            min = arr[i];\n        }\n    }\n    return max - min;",
    "    long max_diff = 0;\n    long n = sizeof(arr)/sizeof(arr[0]);\n    for(int i = 0; i < n; i++) {\n        for(int j = i+1; j < n; j++) {\n            if(abs(arr[i] - arr[j]) > max_diff) {\n                max_diff = abs(arr[i] - arr[j]);\n            }\n        }\n    }\n    return max_diff;",
    "    int n = sizeof(arr)/sizeof(arr[0]);\n    int max1 = INT_MIN, min1 = INT_MAX;\n    for(int i=0;i<n;i++) {\n        max1 = max(max1, arr[i]+i);\n        min1 = min(min1, arr[i]+i);\n    }\n    return max1-min1;",
    "    long max_diff = 0;\n    for(int i = 0; i < arr.size(); i++) {\n        for(int j = i + 1; j < arr.size(); j++) {\n            if(abs(arr[i] - arr[j]) > max_diff) {\n                max_diff = abs(arr[i] - arr[j]);\n            }\n        }\n    }\n    return max_diff;",
    "    int n = sizeof(arr)/sizeof(arr[0]);\n    int max1 = INT_MIN, min1 = INT_MAX;\n    for (int i = 0; i < n; i++) {\n        max1 = max(max1, arr[i] + i);\n        min1 = min(min1, arr[i] + i);\n    }\n    return max1 - min1;",
    "    long max_diff = 0;\n    for(int i=0; i<arr.size(); i++) {\n        for(int j=0; j<arr.size(); j++) {\n            if(abs(arr[i]-arr[j]) > max_diff) {\n                max_diff = abs(arr[i]-arr[j]);\n            }\n        }\n    }\n    return max_diff;",
    "    long max = 0;\n    long min = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        if (arr[i] > max) {\n            max = arr[i];\n        }\n        if (arr[i] < min) {\n            min = arr[i];\n        }\n    }\n    return max - min;",
    "    long max_diff = 0;\n    long max_element = arr[0];\n    long min_element = arr[0];\n    for (int i = 0; i < arr.size(); i++) {\n        if (arr[i] > max_element) {\n            max_element = arr[i];\n        }\n        if (arr[i] < min_element) {\n            min_element = arr[i];\n        }\n    }\n    max_diff = max_element - min_element;\n    return max_diff;",
    "    long max_diff = 0;\n    for(int i = 0; i < arr.size(); i++) {\n        for(int j = 0; j < arr.size(); j++) {\n            if(arr[i] - arr[j] > max_diff) {\n                max_diff = arr[i] - arr[j];\n            }\n        }\n    }\n    return max_diff;",
    "    long max_diff = 0;\n    for(long i = 0; i < arr.size(); i++) {\n        for(long j = i+1; j < arr.size(); j++) {\n            long diff = abs(arr[i] - arr[j]);\n            if(diff > max_diff) {\n                max_diff = diff;\n            }\n        }\n    }\n    return max_diff;",
    "    long max_diff = 0;\n    long n = sizeof(arr)/sizeof(arr[0]);\n    for(int i = 0; i < n; i++) {\n        for(int j = i+1; j < n; j++) {\n            if(abs(arr[i] - arr[j]) > max_diff) {\n                max_diff = abs(arr[i] - arr[j]);\n            }\n        }\n    }\n    return max_diff;",
    "    int n = sizeof(arr)/sizeof(arr[0]);\n    int max1 = INT_MIN, min1 = INT_MAX;\n    for (int i = 0; i < n; i++) {\n        max1 = max(max1, arr[i] + i);\n        min1 = min(min1, arr[i] + i);\n    }\n    return max1 - min1;",
    "    int n = sizeof(arr)/sizeof(arr[0]);\n    int max1 = INT_MIN, min1 = INT_MAX;\n    for (int i = 0; i < n; i++) {\n        max1 = max(max1, arr[i] + i);\n        min1 = min(min1, arr[i] + i);\n    }\n    return max1 - min1;",
    "    long max_diff = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        for (int j = i + 1; j < arr.size(); j++) {\n            if (abs(arr[i] - arr[j]) > max_diff) {\n                max_diff = abs(arr[i] - arr[j]);\n            }\n        }\n    }\n    return max_diff;",
    "    long max_diff = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        for (int j = i + 1; j < arr.size(); j++) {\n            if (abs(arr[i] - arr[j]) > max_diff) {\n                max_diff = abs(arr[i] - arr[j]);\n            }\n        }\n    }\n    return max_diff;",
    "    long max_diff = 0;\n    long curr_diff = 0;\n    for(int i=0;i<arr.size();i++) {\n        for(int j=i+1;j<arr.size();j++) {\n            curr_diff = abs(arr[i]-arr[j]);\n            if(curr_diff > max_diff) {\n                max_diff = curr_diff;\n            }\n        }\n    }\n    return max_diff;",
    "    long max_diff = 0;\n    long n = sizeof(arr) / sizeof(arr[0]);\n    for (long i = 0; i < n; i++) {\n        for (long j = i + 1; j < n; j++) {\n            if (abs(arr[i] - arr[j]) > max_diff) {\n                max_diff = abs(arr[i] - arr[j]);\n            }\n        }\n    }\n    return max_diff;",
    "    long max_diff = 0;\n    for(int i = 0; i < arr.size(); i++) {\n        for(int j = i+1; j < arr.size(); j++) {\n            if(abs(arr[i] - arr[j]) > max_diff) {\n                max_diff = abs(arr[i] - arr[j]);\n            }\n        }\n    }\n    return max_diff;",
    "    long max_diff = 0;\n    for(int i = 0; i < arr.size(); i++) {\n        for(int j = 0; j < arr.size(); j++) {\n            if(abs(arr[i] - arr[j]) > max_diff) {\n                max_diff = abs(arr[i] - arr[j]);\n            }\n        }\n    }\n    return max_diff;",
    "    long max = 0;\n    long min = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        if (arr[i] > max) {\n            max = arr[i];\n        }\n        if (arr[i] < min) {\n            min = arr[i];\n        }\n    }\n    return max - min;",
    "    long max_diff = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        for (int j = 0; j < arr.size(); j++) {\n            if (abs(arr[i] - arr[j]) > max_diff) {\n                max_diff = abs(arr[i] - arr[j]);\n            }\n        }\n    }\n    return max_diff;",
    "    long max_diff = 0;\n    long n = sizeof(arr)/sizeof(arr[0]);\n    long i, j;\n    for (i = 0; i < n; i++) {\n        for (j = i + 1; j < n; j++) {\n            if (arr[j] - arr[i] > max_diff) {\n                max_diff = arr[j] - arr[i];\n            }\n        }\n    }\n    return max_diff;",
    "    long max_diff = 0;\n    for(int i = 0; i < arr.size(); i++) {\n        for(int j = i+1; j < arr.size(); j++) {\n            if(abs(arr[i] - arr[j]) > max_diff) {\n                max_diff = abs(arr[i] - arr[j]);\n            }\n        }\n    }\n    return max_diff;",
    "    int n = sizeof(arr)/sizeof(arr[0]);\n    int max1 = INT_MIN, min1 = INT_MAX;\n    for (int i = 0; i < n; i++) {\n        max1 = max(max1, arr[i] + i);\n        min1 = min(min1, arr[i] + i);\n    }\n    return max1 - min1;",
    "    // Write your code here\n    long max = arr[0];\n    long min = arr[0];\n    for(int i=1;i<arr.size();i++)\n    {\n        if(arr[i]>max)\n        {\n            max = arr[i];\n        }\n        if(arr[i]<min)\n        {\n            min = arr[i];\n        }\n    }\n    return max-min;",
    "    long max_diff = 0;\n    for(int i=0; i<arr.size(); i++) {\n        for(int j=i+1; j<arr.size(); j++) {\n            if(abs(arr[i] - arr[j]) > max_diff) {\n                max_diff = abs(arr[i] - arr[j]);\n            }\n        }\n    }\n    return max_diff;",
    "    long max_diff = 0;\n    long n = sizeof(arr)/sizeof(arr[0]);\n    for (int i = 0; i < n; i++) {\n        for (int j = i+1; j < n; j++) {\n            if (abs(arr[i] - arr[j]) > max_diff) {\n                max_diff = abs(arr[i] - arr[j]);\n            }\n        }\n    }\n    return max_diff;",
    "    long max = arr[0];\n    long min = arr[0];\n    for (int i = 0; i < arr.size(); i++) {\n        if (arr[i] > max) {\n            max = arr[i];\n        }\n        if (arr[i] < min) {\n            min = arr[i];\n        }\n    }\n    return max - min;",
    "    long max_diff = 0;\n    long n = arr.size();\n    for (long i = 0; i < n; i++) {\n        for (long j = i + 1; j < n; j++) {\n            long diff = abs(arr[i] - arr[j]);\n            if (diff > max_diff) {\n                max_diff = diff;\n            }\n        }\n    }\n    return max_diff;",
    "    long max_diff = 0;\n    for(int i = 0; i < arr.size(); i++) {\n        for(int j = i+1; j < arr.size(); j++) {\n            if(abs(arr[i] - arr[j]) > max_diff) {\n                max_diff = abs(arr[i] - arr[j]);\n            }\n        }\n    }\n    return max_diff;",
    "    long max_diff = arr[1] - arr[0];\n    long min_element = arr[0];\n    for(int i = 1; i < arr.size(); i++) {\n        if(arr[i] - min_element > max_diff) {\n            max_diff = arr[i] - min_element;\n        }\n        if(arr[i] < min_element) {\n            min_element = arr[i];\n        }\n    }\n    return max_diff;",
    "    long max_diff = 0;\n    long n = sizeof(arr)/sizeof(arr[0]);\n    for (int i = 0; i < n; i++) {\n        for (int j = i+1; j < n; j++) {\n            if (abs(arr[i] - arr[j]) > max_diff) {\n                max_diff = abs(arr[i] - arr[j]);\n            }\n        }\n    }\n    return max_diff;",
    "    int n = sizeof(arr)/sizeof(arr[0]);\n    int max1 = INT_MIN, min1 = INT_MAX;\n    for(int i = 0; i < n; i++) {\n        max1 = max(max1, arr[i] + i);\n        min1 = min(min1, arr[i] + i);\n    }\n    return (max1 - min1);",
    "    long max_diff = 0;\n    long n = sizeof(arr)/sizeof(arr[0]);\n    for(long i=0;i<n;i++) {\n        for(long j=i+1;j<n;j++) {\n            if(abs(arr[i]-arr[j]) > max_diff) {\n                max_diff = abs(arr[i]-arr[j]);\n            }\n        }\n    }\n    return max_diff;",
    "    long max = arr[0];\n    long min = arr[0];\n    for(int i = 0; i < arr.size(); i++) {\n        if(arr[i] > max) {\n            max = arr[i];\n        }\n        if(arr[i] < min) {\n            min = arr[i];\n        }\n    }\n    return max - min;",
    "    long max_diff = 0;\n    for(int i = 0; i < arr.length; i++) {\n        for(int j = 0; j < arr.length; j++) {\n            if(arr[i] - arr[j] > max_diff) {\n                max_diff = arr[i] - arr[j];\n            }\n        }\n    }\n    return max_diff;",
    "    long max_diff = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        for (int j = 0; j < arr.size(); j++) {\n            if (arr[i] - arr[j] > max_diff) {\n                max_diff = arr[i] - arr[j];\n            }\n        }\n    }\n    return max_diff;",
    "    long max = arr[0];\n    long min = arr[0];\n    for (int i = 0; i < arr.length; i++) {\n        if (arr[i] > max) {\n            max = arr[i];\n        }\n        if (arr[i] < min) {\n            min = arr[i];\n        }\n    }\n    return max - min;",
    "    long max_diff = 0;\n    for(int i=0;i<arr.size();i++) {\n        for(int j=i+1;j<arr.size();j++) {\n            if(abs(arr[i]-arr[j]) > max_diff) {\n                max_diff = abs(arr[i]-arr[j]);\n            }\n        }\n    }\n    return max_diff;",
    "    long max_diff = 0;\n    long max_element = arr[0];\n    long min_element = arr[0];\n    for(long i = 0; i < arr.size(); i++) {\n        if(arr[i] > max_element) {\n            max_element = arr[i];\n        }\n        if(arr[i] < min_element) {\n            min_element = arr[i];\n        }\n    }\n    max_diff = max_element - min_element;\n    return max_diff;",
    "    long max = arr[0];\n    long min = arr[0];\n    for (int i = 0; i < arr.size(); i++) {\n        if (arr[i] > max) {\n            max = arr[i];\n        }\n        if (arr[i] < min) {\n            min = arr[i];\n        }\n    }\n    return max - min;",
    "    int n = sizeof(arr)/sizeof(arr[0]);\n    int max1 = INT_MIN, min1 = INT_MAX;\n    for (int i = 0; i < n; i++) {\n        max1 = max(max1, arr[i] + i);\n        min1 = min(min1, arr[i] + i);\n    }\n    return max1 - min1;",
    "    long max_diff = 0;\n    long n = sizeof(arr)/sizeof(arr[0]);\n    for(long i = 0; i < n; i++) {\n        for(long j = i + 1; j < n; j++) {\n            if(abs(arr[i] - arr[j]) > max_diff) {\n                max_diff = abs(arr[i] - arr[j]);\n            }\n        }\n    }\n    return max_diff;",
    "    long max_diff = 0;\n    for(int i = 0; i < arr.size(); i++) {\n        for(int j = i+1; j < arr.size(); j++) {\n            if(abs(arr[i] - arr[j]) > max_diff) {\n                max_diff = abs(arr[i] - arr[j]);\n            }\n        }\n    }\n    return max_diff;",
    "    long max_diff = 0;\n    long n = sizeof(arr)/sizeof(arr[0]);\n    for(int i=0;i<n;i++) {\n        for(int j=i+1;j<n;j++) {\n            if(arr[j]-arr[i] > max_diff) {\n                max_diff = arr[j]-arr[i];\n            }\n        }\n    }\n    return max_diff;",
    "    long max_diff = arr[1] - arr[0];\n    long min_element = arr[0];\n    long i;\n    for(i = 1; i < arr.size(); i++) {\n        if(arr[i] - min_element > max_diff)\n            max_diff = arr[i] - min_element;\n        if(arr[i] < min_element)\n            min_element = arr[i];\n    }\n    return max_diff;",
    "    long max_diff = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        for (int j = i + 1; j < arr.size(); j++) {\n            if (abs(arr[i] - arr[j]) > max_diff) {\n                max_diff = abs(arr[i] - arr[j]);\n            }\n        }\n    }\n    return max_diff;",
    "    long max_diff = 0;\n    for(long i = 0; i < arr.size(); i++) {\n        for(long j = i+1; j < arr.size(); j++) {\n            if(abs(arr[i] - arr[j]) > max_diff) {\n                max_diff = abs(arr[i] - arr[j]);\n            }\n        }\n    }\n    return max_diff;",
    "    long max_diff = 0;\n    long min_element = arr[0];\n    for (int i = 1; i < arr.length; i++) {\n        if (arr[i] - min_element > max_diff) {\n            max_diff = arr[i] - min_element;\n        }\n        if (arr[i] < min_element) {\n            min_element = arr[i];\n        }\n    }\n    return max_diff;",
    "    long max_diff = 0;\n    for(int i = 0; i < arr.size(); i++) {\n        for(int j = i+1; j < arr.size(); j++) {\n            if(abs(arr[i] - arr[j]) > max_diff) {\n                max_diff = abs(arr[i] - arr[j]);\n            }\n        }\n    }\n    return max_diff;",
    "\tlong max_diff = 0;\n\tfor(int i=0;i<arr.size();i++) {\n\t\tfor(int j=i+1;j<arr.size();j++) {\n\t\t\tlong diff = abs(arr[i]-arr[j]);\n\t\t\tif(diff > max_diff) {\n\t\t\t\tmax_diff = diff;\n\t\t\t}\n\t\t}\n\t}\n\treturn max_diff;",
    "    long max = arr[0];\n    long min = arr[0];\n    for(int i = 0; i < arr.size(); i++) {\n        if(arr[i] > max) {\n            max = arr[i];\n        }\n        if(arr[i] < min) {\n            min = arr[i];\n        }\n    }\n    return max - min;",
    "    long max_diff = 0;\n    long n = sizeof(arr)/sizeof(arr[0]);\n    for(int i = 0; i < n; i++) {\n        for(int j = i+1; j < n; j++) {\n            if(arr[i] - arr[j] > max_diff) {\n                max_diff = arr[i] - arr[j];\n            }\n        }\n    }\n    return max_diff;",
    "    long max_diff = 0;\n    for(int i = 0; i < arr.size(); i++) {\n        for(int j = i+1; j < arr.size(); j++) {\n            if(abs(arr[i] - arr[j]) > max_diff) {\n                max_diff = abs(arr[i] - arr[j]);\n            }\n        }\n    }\n    return max_diff;",
    "    long max = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        for (int j = 0; j < arr.size(); j++) {\n            if (abs(arr[i] - arr[j]) > max) {\n                max = abs(arr[i] - arr[j]);\n            }\n        }\n    }\n    return max;",
    "    long max_diff = 0;\n    long diff;\n    for (int i = 0; i < arr.size(); i++) {\n        for (int j = i+1; j < arr.size(); j++) {\n            diff = abs(arr[i] - arr[j]);\n            if (diff > max_diff) {\n                max_diff = diff;\n            }\n        }\n    }\n    return max_diff;",
    "    long max_diff = 0;\n    long n = sizeof(arr)/sizeof(arr[0]);\n    long i, j;\n    for (i = 0; i < n; i++) {\n        for (j = i+1; j < n; j++) {\n            if (arr[j] - arr[i] > max_diff) {\n                max_diff = arr[j] - arr[i];\n            }\n        }\n    }\n    return max_diff;",
    "    long max_diff = 0;\n    long max_element = arr[0];\n    long min_element = arr[0];\n    for (int i = 0; i < arr.size(); i++) {\n        if (arr[i] > max_element) {\n            max_element = arr[i];\n        }\n        if (arr[i] < min_element) {\n            min_element = arr[i];\n        }\n    }\n    max_diff = max_element - min_element;\n    return max_diff;",
    "    long max_diff = 0;\n    for (int i = 0; i < sizeof(arr); i++) {\n        for (int j = i + 1; j < sizeof(arr); j++) {\n            if (abs(arr[i] - arr[j]) > max_diff) {\n                max_diff = abs(arr[i] - arr[j]);\n            }\n        }\n    }\n    return max_diff;",
    "    long max_diff = 0;\n    long max_element = arr[0];\n    long min_element = arr[0];\n    for(int i = 0; i < arr.size(); i++) {\n        if(arr[i] > max_element) {\n            max_element = arr[i];\n        }\n        if(arr[i] < min_element) {\n            min_element = arr[i];\n        }\n    }\n    max_diff = max_element - min_element;\n    return max_diff;",
    "    long max_diff = 0;\n    for(int i = 0; i < arr.size(); i++) {\n        for(int j = 0; j < arr.size(); j++) {\n            if(abs(arr[i] - arr[j]) > max_diff) {\n                max_diff = abs(arr[i] - arr[j]);\n            }\n        }\n    }\n    return max_diff;",
    "    long max_diff = 0;\n    long min_ele = arr[0];\n    for (int i = 1; i < arr.size(); i++) {\n        max_diff = max(max_diff, arr[i] - min_ele);\n        min_ele = min(min_ele, arr[i]);\n    }\n    return max_diff;",
    "    long max_diff = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        for (int j = i+1; j < arr.size(); j++) {\n            if (abs(arr[i] - arr[j]) > max_diff) {\n                max_diff = abs(arr[i] - arr[j]);\n            }\n        }\n    }\n    return max_diff;",
    "    long max_diff = 0;\n    long max_element = arr[0];\n    long min_element = arr[0];\n    long size = sizeof(arr)/sizeof(arr[0]);\n    for (long i = 0; i < size; i++) {\n        if (arr[i] > max_element) {\n            max_element = arr[i];\n        }\n        if (arr[i] < min_element) {\n            min_element = arr[i];\n        }\n    }\n    max_diff = max_element - min_element;\n    return max_diff;",
    "    long max_diff = 0;\n    long i, j;\n    for (i = 0; i < arr.size(); i++) {\n        for (j = 0; j < arr.size(); j++) {\n            if (arr[i] - arr[j] > max_diff) {\n                max_diff = arr[i] - arr[j];\n            }\n        }\n    }\n    return max_diff;",
    "    long max_diff = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        for (int j = 0; j < arr.size(); j++) {\n            if (arr[i] - arr[j] > max_diff) {\n                max_diff = arr[i] - arr[j];\n            }\n        }\n    }\n    return max_diff;",
    "    long max = 0;\n    for(int i = 0; i < arr.size(); i++) {\n        for(int j = i + 1; j < arr.size(); j++) {\n            if(abs(arr[i] - arr[j]) > max) {\n                max = abs(arr[i] - arr[j]);\n            }\n        }\n    }\n    return max;",
    "    long max_diff = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        for (int j = i + 1; j < arr.size(); j++) {\n            if (abs(arr[i] - arr[j]) > max_diff) {\n                max_diff = abs(arr[i] - arr[j]);\n            }\n        }\n    }\n    return max_diff;",
    "    long max = arr[0];\n    long min = arr[0];\n    for(int i = 0; i < arr.size(); i++) {\n        if(arr[i] > max) {\n            max = arr[i];\n        }\n        if(arr[i] < min) {\n            min = arr[i];\n        }\n    }\n    return max - min;",
    "    long max_diff = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        for (int j = 0; j < arr.size(); j++) {\n            if (arr[i] - arr[j] > max_diff) {\n                max_diff = arr[i] - arr[j];\n            }\n        }\n    }\n    return max_diff;",
    "    // Write your code here\n    long max = arr[0];\n    long min = arr[0];\n    for(int i = 0; i < arr.size(); i++) {\n        if(arr[i] > max) {\n            max = arr[i];\n        }\n        if(arr[i] < min) {\n            min = arr[i];\n        }\n    }\n    return max - min;",
    "    long max_diff = 0;\n    long n = sizeof(arr)/sizeof(arr[0]);\n    for(int i=0;i<n;i++) {\n        for(int j=i+1;j<n;j++) {\n            if(abs(arr[i]-arr[j]) > max_diff) {\n                max_diff = abs(arr[i]-arr[j]);\n            }\n        }\n    }\n    return max_diff;",
    "    long max = 0;\n    long min = arr[0];\n    for (int i = 0; i < arr.size(); i++) {\n        if (arr[i] > max) {\n            max = arr[i];\n        }\n        if (arr[i] < min) {\n            min = arr[i];\n        }\n    }\n    return max - min;",
    "    long max_diff = 0;\n    for(int i = 0; i < arr.size(); i++) {\n        for(int j = i+1; j < arr.size(); j++) {\n            if(abs(arr[i] - arr[j]) > max_diff) {\n                max_diff = abs(arr[i] - arr[j]);\n            }\n        }\n    }\n    return max_diff;",
    "    long max = arr[0];\n    long min = arr[0];\n    for (int i = 0; i < arr.size(); i++) {\n        if (arr[i] > max) {\n            max = arr[i];\n        }\n        if (arr[i] < min) {\n            min = arr[i];\n        }\n    }\n    return max - min;",
    "    long max_diff = 0;\n    long n = sizeof(arr)/sizeof(arr[0]);\n    for(long i = 0; i < n; i++) {\n        for(long j = i+1; j < n; j++) {\n            if(abs(arr[i] - arr[j]) > max_diff) {\n                max_diff = abs(arr[i] - arr[j]);\n            }\n        }\n    }\n    return max_diff;",
    "    long max_diff = 0;\n    long n = sizeof(arr)/sizeof(arr[0]);\n    for(int i = 0; i < n; i++) {\n        for(int j = i+1; j < n; j++) {\n            if(abs(arr[i]-arr[j]) > max_diff) {\n                max_diff = abs(arr[i]-arr[j]);\n            }\n        }\n    }\n    return max_diff;",
    "    long max = arr[0];\n    long min = arr[0];\n    for(int i = 0; i < arr.size(); i++) {\n        if(arr[i] > max) {\n            max = arr[i];\n        }\n        if(arr[i] < min) {\n            min = arr[i];\n        }\n    }\n    return max - min;",
    "    long max = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        for (int j = i + 1; j < arr.size(); j++) {\n            if (abs(arr[i] - arr[j]) > max) {\n                max = abs(arr[i] - arr[j]);\n            }\n        }\n    }\n    return max;",
    "    long max_diff = 0;\n    long n = arr.size();\n    for(long i = 0; i < n; i++) {\n        for(long j = i+1; j < n; j++) {\n            if(abs(arr[i] - arr[j]) > max_diff) {\n                max_diff = abs(arr[i] - arr[j]);\n            }\n        }\n    }\n    return max_diff;",
    "    long max = 0;\n    for(int i = 0; i < arr.size(); i++) {\n        for(int j = 0; j < arr.size(); j++) {\n            if(abs(arr[i] - arr[j]) > max) {\n                max = abs(arr[i] - arr[j]);\n            }\n        }\n    }\n    return max;",
    "    int n = sizeof(arr)/sizeof(arr[0]);\n    int max1 = INT_MIN, max2 = INT_MIN;\n    int min1 = INT_MAX, min2 = INT_MAX;\n    for(int i=0;i<n;i++) {\n        if(arr[i]>max1) {\n            max2 = max1;\n            max1 = arr[i];\n        }\n        else if(arr[i]>max2) {\n            max2 = arr[i];\n        }\n        if(arr[i]<min1) {\n            min2 = min1;\n            min1 = arr[i];\n        }\n        else if(arr[i]<min2) {\n            min2 = arr[i];\n        }\n    }\n    return max(abs(max1-min2), abs(max2-min1));",
    "    long max_diff = 0;\n    long diff;\n    for (int i = 0; i < arr.size(); i++) {\n        for (int j = 0; j < arr.size(); j++) {\n            diff = abs(arr[i] - arr[j]);\n            if (diff > max_diff) {\n                max_diff = diff;\n            }\n        }\n    }\n    return max_diff;",
    "    long max_diff = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        for (int j = i + 1; j < arr.size(); j++) {\n            if (abs(arr[i] - arr[j]) > max_diff) {\n                max_diff = abs(arr[i] - arr[j]);\n            }\n        }\n    }\n    return max_diff;",
    "    long max = 0;\n    for(int i=0;i<arr.length();i++) {\n        for(int j=i+1;j<arr.length();j++) {\n            long diff = abs(arr[i]-arr[j]);\n            if(diff > max) {\n                max = diff;\n            }\n        }\n    }\n    return max;",
    "    long max_diff = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        for (int j = i + 1; j < arr.size(); j++) {\n            if (abs(arr[i] - arr[j]) > max_diff) {\n                max_diff = abs(arr[i] - arr[j]);\n            }\n        }\n    }\n    return max_diff;",
    "    long max = arr[0];\n    long min = arr[0];\n    for (int i = 1; i < arr.size(); i++) {\n        if (arr[i] > max) {\n            max = arr[i];\n        }\n        if (arr[i] < min) {\n            min = arr[i];\n        }\n    }\n    return max - min;",
    "    long max_diff = 0;\n    long temp_diff;\n    for(int i = 0; i < arr.size(); i++) {\n        for(int j = 0; j < arr.size(); j++) {\n            temp_diff = abs(arr[i] - arr[j]);\n            if(temp_diff > max_diff) {\n                max_diff = temp_diff;\n            }\n        }\n    }\n    return max_diff;",
    "    long max_diff = 0;\n    long n = sizeof(arr)/sizeof(arr[0]);\n    for (long i = 0; i < n; i++) {\n        for (long j = 0; j < n; j++) {\n            if (arr[i] - arr[j] > max_diff) {\n                max_diff = arr[i] - arr[j];\n            }\n        }\n    }\n    return max_diff;",
    "    long max = arr[0];\n    long min = arr[0];\n    for(int i = 0; i < arr.size(); i++) {\n        if(arr[i] > max) {\n            max = arr[i];\n        }\n        if(arr[i] < min) {\n            min = arr[i];\n        }\n    }\n    return max - min;",
    "    long max = 0;\n    for(int i = 0; i < arr.size(); i++) {\n        for(int j = 0; j < arr.size(); j++) {\n            if(abs(arr[i] - arr[j]) > max) {\n                max = abs(arr[i] - arr[j]);\n            }\n        }\n    }\n    return max;",
    "    int n = sizeof(arr)/sizeof(arr[0]);\n    int max1 = INT_MIN, min1 = INT_MAX;\n    for(int i=0;i<n;i++) {\n        max1 = max(max1, arr[i]+i);\n        min1 = min(min1, arr[i]+i);\n    }\n    return max1-min1;",
    "    int n = sizeof(arr)/sizeof(arr[0]);\n    int max1 = INT_MIN, min1 = INT_MAX;\n    for(int i = 0; i < n; i++) {\n        max1 = max(max1, arr[i] + i);\n        min1 = min(min1, arr[i] + i);\n    }\n    return max1 - min1;",
    "    long max_diff = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        for (int j = 0; j < arr.size(); j++) {\n            if (arr[i] - arr[j] > max_diff) {\n                max_diff = arr[i] - arr[j];\n            }\n        }\n    }\n    return max_diff;",
    "    long max_diff = arr[1] - arr[0];\n    long min_element = arr[0];\n    for (int i = 1; i < arr.size(); i++) {\n        if (arr[i] - min_element > max_diff)\n            max_diff = arr[i] - min_element;\n        if (arr[i] < min_element)\n            min_element = arr[i];\n    }\n    return max_diff;",
    "    long max = 0;\n    long diff;\n    for(int i = 0; i < arr.size(); i++) {\n        for(int j = i+1; j < arr.size(); j++) {\n            diff = abs(arr[i] - arr[j]);\n            if(diff > max) {\n                max = diff;\n            }\n        }\n    }\n    return max;",
    "    long max_diff = 0;\n    long n = sizeof(arr)/sizeof(arr[0]);\n    for (int i = 0; i < n; i++) {\n        for (int j = i+1; j < n; j++) {\n            if (abs(arr[i] - arr[j]) > max_diff) {\n                max_diff = abs(arr[i] - arr[j]);\n            }\n        }\n    }\n    return max_diff;",
    "    long max_diff = 0;\n    long n = sizeof(arr)/sizeof(arr[0]);\n    for(int i=0;i<n;i++) {\n        for(int j=i+1;j<n;j++) {\n            if(abs(arr[i]-arr[j]) > max_diff) {\n                max_diff = abs(arr[i]-arr[j]);\n            }\n        }\n    }\n    return max_diff;",
    "    long max_diff = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        for (int j = 0; j < arr.size(); j++) {\n            if (max_diff < abs(arr[i] - arr[j])) {\n                max_diff = abs(arr[i] - arr[j]);\n            }\n        }\n    }\n    return max_diff;",
    "    long max_diff = arr[1] - arr[0];\n    long min_element = arr[0];\n    for(int i = 1; i < arr.size(); i++) {\n        if(arr[i] - min_element > max_diff)\n            max_diff = arr[i] - min_element;\n        if(arr[i] < min_element)\n            min_element = arr[i];\n    }\n    return max_diff;",
    "    long max_diff = 0;\n    for(int i = 0; i < arr.size(); i++) {\n        for(int j = i + 1; j < arr.size(); j++) {\n            if(arr[i] - arr[j] > max_diff) {\n                max_diff = arr[i] - arr[j];\n            }\n        }\n    }\n    return max_diff;",
    "    // Write your code here\n    long max = arr[0];\n    long min = arr[0];\n    for(int i = 1; i < arr.size(); i++) {\n        if(arr[i] > max) {\n            max = arr[i];\n        }\n        if(arr[i] < min) {\n            min = arr[i];\n        }\n    }\n    return max - min;",
    "    long max_diff = 0;\n    long n = sizeof(arr)/sizeof(arr[0]);\n    for(int i = 0; i < n; i++) {\n        for(int j = 0; j < n; j++) {\n            if(arr[i] - arr[j] > max_diff) {\n                max_diff = arr[i] - arr[j];\n            }\n        }\n    }\n    return max_diff;",
    "    long max_diff = -1;\n    long n = sizeof(arr)/sizeof(arr[0]);\n    for (int i = 0; i < n; i++) {\n        for (int j = 0; j < n; j++) {\n            if (arr[i] > arr[j]) {\n                long diff = arr[i] - arr[j];\n                if (diff > max_diff) {\n                    max_diff = diff;\n                }\n            }\n        }\n    }\n    return max_diff;",
    "    long max = 0;\n    for(int i=0;i<arr.size();i++){\n        for(int j=i+1;j<arr.size();j++){\n            if(abs(arr[i]-arr[j])>max){\n                max = abs(arr[i]-arr[j]);\n            }\n        }\n    }\n    return max;",
    "    long max_diff = 0;\n    for(int i = 0; i < arr.size(); i++) {\n        for(int j = i + 1; j < arr.size(); j++) {\n            if(abs(arr[i] - arr[j]) > max_diff) {\n                max_diff = abs(arr[i] - arr[j]);\n            }\n        }\n    }\n    return max_diff;",
    "    long max_diff = 0;\n    long max_element = arr[0];\n    long min_element = arr[0];\n    for (int i = 0; i < arr.size(); i++) {\n        max_element = max(max_element, arr[i]);\n        min_element = min(min_element, arr[i]);\n    }\n    return max_element - min_element;",
    "    long max_diff = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        for (int j = i + 1; j < arr.size(); j++) {\n            if (abs(arr[i] - arr[j]) > max_diff) {\n                max_diff = abs(arr[i] - arr[j]);\n            }\n        }\n    }\n    return max_diff;",
    "    long max_diff = 0;\n    long n = sizeof(arr)/sizeof(arr[0]);\n    for(int i = 0; i < n; i++) {\n        for(int j = i+1; j < n; j++) {\n            if(abs(arr[i] - arr[j]) > max_diff) {\n                max_diff = abs(arr[i] - arr[j]);\n            }\n        }\n    }\n    return max_diff;",
    "    long max_diff = 0;\n    for(int i=0; i<arr.size(); i++) {\n        for(int j=0; j<arr.size(); j++) {\n            if(arr[i] - arr[j] > max_diff) {\n                max_diff = arr[i] - arr[j];\n            }\n        }\n    }\n    return max_diff;",
    "    long max_diff = 0;\n    long diff = 0;\n    for(int i=0; i<arr.size(); i++) {\n        for(int j=i+1; j<arr.size(); j++) {\n            diff = abs(arr[i]-arr[j]);\n            if(diff > max_diff) {\n                max_diff = diff;\n            }\n        }\n    }\n    return max_diff;",
    "    long max = arr[0];\n    long min = arr[0];\n    for(int i = 0; i < arr.size(); i++) {\n        if(arr[i] > max) {\n            max = arr[i];\n        }\n        if(arr[i] < min) {\n            min = arr[i];\n        }\n    }\n    return max - min;",
    "    long max = 0;\n    for(int i=0;i<arr.size();i++) {\n        for(int j=0;j<arr.size();j++) {\n            if(abs(arr[i]-arr[j]) > max) {\n                max = abs(arr[i]-arr[j]);\n            }\n        }\n    }\n    return max;",
    "    long max = arr[0];\n    long min = arr[0];\n    for(int i = 0; i < arr.size(); i++) {\n        if(arr[i] > max) {\n            max = arr[i];\n        }\n        if(arr[i] < min) {\n            min = arr[i];\n        }\n    }\n    return max - min;",
    "    int n = sizeof(arr)/sizeof(arr[0]);\n    int max1 = INT_MIN, min1 = INT_MAX;\n    for(int i=0; i<n; i++) {\n        max1 = max(max1, arr[i]+i);\n        min1 = min(min1, arr[i]+i);\n    }\n    return max1-min1;",
    "    long max = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        for (int j = 0; j < arr.size(); j++) {\n            if (abs(arr[i] - arr[j]) > max) {\n                max = abs(arr[i] - arr[j]);\n            }\n        }\n    }\n    return max;",
    "    long max_diff = 0;\n    long n = sizeof(arr)/sizeof(arr[0]);\n    for(int i=0; i<n; i++) {\n        for(int j=i+1; j<n; j++) {\n            if(arr[i] > arr[j]) {\n                long diff = arr[i] - arr[j];\n                if(diff > max_diff) {\n                    max_diff = diff;\n                }\n            }\n            else {\n                long diff = arr[j] - arr[i];\n                if(diff > max_diff) {\n                    max_diff = diff;\n                }\n            }\n        }\n    }\n    return max_diff;",
    "    long max_diff = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        for (int j = i+1; j < arr.size(); j++) {\n            if (abs(arr[i] - arr[j]) > max_diff) {\n                max_diff = abs(arr[i] - arr[j]);\n            }\n        }\n    }\n    return max_diff;",
    "    long max_diff = 0;\n    for(int i=0;i<arr.length();i++) {\n        for(int j=i+1;j<arr.length();j++) {\n            if(abs(arr[i]-arr[j]) > max_diff) {\n                max_diff = abs(arr[i]-arr[j]);\n            }\n        }\n    }\n    return max_diff;",
    "    long max_diff = 0;\n    long n = sizeof(arr)/sizeof(arr[0]);\n    for (int i = 0; i < n; i++) {\n        for (int j = i + 1; j < n; j++) {\n            if (arr[i] - arr[j] > max_diff) {\n                max_diff = arr[i] - arr[j];\n            }\n        }\n    }\n    return max_diff;",
    "    int max = arr[0];\n    int min = arr[0];\n    for(int i = 0; i < arr.size(); i++) {\n        if(arr[i] > max) {\n            max = arr[i];\n        }\n        if(arr[i] < min) {\n            min = arr[i];\n        }\n    }\n    return max - min;",
    "    long max_diff = 0;\n    long min_ele = arr[0];\n    long max_ele = arr[0];\n    for(long i = 0; i < arr.size(); i++) {\n        if(arr[i] < min_ele) {\n            min_ele = arr[i];\n        }\n        if(arr[i] > max_ele) {\n            max_ele = arr[i];\n        }\n    }\n    max_diff = max_ele - min_ele;\n    return max_diff;",
    "    long max_diff = 0;\n    long n = sizeof(arr)/sizeof(arr[0]);\n    for(long i = 0; i < n; i++) {\n        for(long j = i+1; j < n; j++) {\n            if(abs(arr[i]-arr[j]) > max_diff) {\n                max_diff = abs(arr[i]-arr[j]);\n            }\n        }\n    }\n    return max_diff;",
    "    long max_diff = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        for (int j = 0; j < arr.size(); j++) {\n            if (abs(arr[i] - arr[j]) > max_diff) {\n                max_diff = abs(arr[i] - arr[j]);\n            }\n        }\n    }\n    return max_diff;",
    "    long max_diff = 0;\n    long diff;\n    for (int i = 0; i < arr.size(); i++) {\n        for (int j = 0; j < arr.size(); j++) {\n            diff = abs(arr[i] - arr[j]);\n            if (diff > max_diff) {\n                max_diff = diff;\n            }\n        }\n    }\n    return max_diff;",
    "    long max_diff = 0;\n    long n = sizeof(arr) / sizeof(arr[0]);\n    long i, j;\n    for (i = 0; i < n; i++) {\n        for (j = i + 1; j < n; j++) {\n            if (arr[j] - arr[i] > max_diff) {\n                max_diff = arr[j] - arr[i];\n            }\n        }\n    }\n    return max_diff;",
    "    long max = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        for (int j = i + 1; j < arr.size(); j++) {\n            if (abs(arr[i] - arr[j]) > max) {\n                max = abs(arr[i] - arr[j]);\n            }\n        }\n    }\n    return max;",
    "    int n = sizeof(arr)/sizeof(arr[0]);\n    int max1 = INT_MIN, max2 = INT_MIN;\n    int min1 = INT_MAX, min2 = INT_MAX;\n    for(int i = 0; i < n; i++) {\n        if(arr[i] > max1) {\n            max2 = max1;\n            max1 = arr[i];\n        } else if(arr[i] > max2) {\n            max2 = arr[i];\n        }\n        if(arr[i] < min1) {\n            min2 = min1;\n            min1 = arr[i];\n        } else if(arr[i] < min2) {\n            min2 = arr[i];\n        }\n    }\n    return max(max1 - min2, max2 - min1);",
    "    long max_diff = 0;\n    long max_element = arr[0];\n    long min_element = arr[0];\n    for (int i = 0; i < arr.length; i++) {\n        if (arr[i] > max_element) {\n            max_element = arr[i];\n        }\n        if (arr[i] < min_element) {\n            min_element = arr[i];\n        }\n    }\n    max_diff = max_element - min_element;\n    return max_diff;",
    "    long max_diff = -1;\n    long n = sizeof(arr)/sizeof(arr[0]);\n    for(int i=0;i<n;i++) {\n        for(int j=i+1;j<n;j++) {\n            if(abs(arr[i]-arr[j]) > max_diff) {\n                max_diff = abs(arr[i]-arr[j]);\n            }\n        }\n    }\n    return max_diff;",
    "    long max_diff = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        for (int j = i + 1; j < arr.size(); j++) {\n            if (abs(arr[i] - arr[j]) > max_diff) {\n                max_diff = abs(arr[i] - arr[j]);\n            }\n        }\n    }\n    return max_diff;",
    "    long max = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        for (int j = i + 1; j < arr.size(); j++) {\n            if (abs(arr[i] - arr[j]) > max) {\n                max = abs(arr[i] - arr[j]);\n            }\n        }\n    }\n    return max;",
    "    long max_diff = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        for (int j = i + 1; j < arr.size(); j++) {\n            max_diff = max(max_diff, abs(arr[i] - arr[j]));\n        }\n    }\n    return max_diff;",
    "    long max = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        for (int j = i+1; j < arr.size(); j++) {\n            if (abs(arr[i] - arr[j]) > max) {\n                max = abs(arr[i] - arr[j]);\n            }\n        }\n    }\n    return max;",
    "    long max = 0;\n    for(int i = 0; i < arr.size(); i++) {\n        for(int j = i + 1; j < arr.size(); j++) {\n            if(abs(arr[i] - arr[j]) > max) {\n                max = abs(arr[i] - arr[j]);\n            }\n        }\n    }\n    return max;",
    "    long max_diff = 0;\n    long n = sizeof(arr)/sizeof(arr[0]);\n    long i, j;\n    for (i = 0; i < n; i++) {\n        for (j = i+1; j < n; j++) {\n            if (abs(arr[i] - arr[j]) > max_diff) {\n                max_diff = abs(arr[i] - arr[j]);\n            }\n        }\n    }\n    return max_diff;",
    "    long max_diff = 0;\n    long n = sizeof(arr)/sizeof(arr[0]);\n    for (int i = 0; i < n; i++) {\n        for (int j = i+1; j < n; j++) {\n            if (abs(arr[i] - arr[j]) > max_diff) {\n                max_diff = abs(arr[i] - arr[j]);\n            }\n        }\n    }\n    return max_diff;",
    "    long max_diff = 0;\n    long n = sizeof(arr)/sizeof(arr[0]);\n    for (int i = 0; i < n; i++) {\n        for (int j = i+1; j < n; j++) {\n            if (abs(arr[i] - arr[j]) > max_diff) {\n                max_diff = abs(arr[i] - arr[j]);\n            }\n        }\n    }\n    return max_diff;",
    "    long max_diff = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        for (int j = 0; j < arr.size(); j++) {\n            if (arr[i] - arr[j] > max_diff) {\n                max_diff = arr[i] - arr[j];\n            }\n        }\n    }\n    return max_diff;",
    "    long max_diff = 0;\n    long min_element = arr[0];\n    for(long i = 1; i < arr.size(); i++) {\n        max_diff = max(max_diff, arr[i] - min_element);\n        min_element = min(min_element, arr[i]);\n    }\n    return max_diff;",
    "    long max = arr[0];\n    long min = arr[0];\n    for(int i = 0; i < arr.size(); i++) {\n        if(arr[i] > max) {\n            max = arr[i];\n        }\n        if(arr[i] < min) {\n            min = arr[i];\n        }\n    }\n    return max - min;",
    "    long max_diff = 0;\n    for (int i = 0; i < len(arr); i++) {\n        for (int j = i + 1; j < len(arr); j++) {\n            if (abs(arr[i] - arr[j]) > max_diff) {\n                max_diff = abs(arr[i] - arr[j]);\n            }\n        }\n    }\n    return max_diff;",
    "    long max = arr[0];\n    long min = arr[0];\n    for (int i = 0; i < arr.size(); i++) {\n        if (arr[i] > max) {\n            max = arr[i];\n        }\n        if (arr[i] < min) {\n            min = arr[i];\n        }\n    }\n    return max - min;",
    "    int n = sizeof(arr)/sizeof(arr[0]);\n    int max1 = INT_MIN, min1 = INT_MAX;\n    for(int i = 0; i < n; i++) {\n        max1 = max(max1, arr[i]);\n        min1 = min(min1, arr[i]);\n    }\n    return max1 - min1;",
    "    long max = 0;\n    long min = arr[0];\n    for (int i = 1; i < arr.size(); i++) {\n        if (arr[i] > max) {\n            max = arr[i];\n        }\n        if (arr[i] < min) {\n            min = arr[i];\n        }\n    }\n    return max - min;",
    "    long max = 0;\n    for(int i = 0; i < arr.size(); i++) {\n        for(int j = i + 1; j < arr.size(); j++) {\n            long diff = abs(arr[i] - arr[j]);\n            if(diff > max) {\n                max = diff;\n            }\n        }\n    }\n    return max;",
    "    long max_diff = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        for (int j = 0; j < arr.size(); j++) {\n            if (arr[i] - arr[j] > max_diff) {\n                max_diff = arr[i] - arr[j];\n            }\n        }\n    }\n    return max_diff;",
    "    long max_diff = 0;\n    long n = sizeof(arr)/sizeof(arr[0]);\n    for(long i = 0; i < n; i++) {\n        for(long j = i + 1; j < n; j++) {\n            if(abs(arr[i] - arr[j]) > max_diff) {\n                max_diff = abs(arr[i] - arr[j]);\n            }\n        }\n    }\n    return max_diff;",
    "    long max_diff = 0;\n    long n = sizeof(arr)/sizeof(arr[0]);\n    for (long i = 0; i < n; i++) {\n        for (long j = i+1; j < n; j++) {\n            if (abs(arr[i] - arr[j]) > max_diff) {\n                max_diff = abs(arr[i] - arr[j]);\n            }\n        }\n    }\n    return max_diff;",
    "    long max_diff = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        for (int j = 0; j < arr.size(); j++) {\n            if (arr[i] - arr[j] > max_diff) {\n                max_diff = arr[i] - arr[j];\n            }\n        }\n    }\n    return max_diff;",
    "    long max_diff = 0;\n    for (int i = 0; i < arr.length; i++) {\n        for (int j = i + 1; j < arr.length; j++) {\n            if (abs(arr[i] - arr[j]) > max_diff) {\n                max_diff = abs(arr[i] - arr[j]);\n            }\n        }\n    }\n    return max_diff;",
    "    long max_diff = 0;\n    long max_element = arr[0];\n    long min_element = arr[0];\n    for (int i = 0; i < arr.size(); i++) {\n        if (arr[i] > max_element) {\n            max_element = arr[i];\n        }\n        if (arr[i] < min_element) {\n            min_element = arr[i];\n        }\n    }\n    max_diff = max_element - min_element;\n    return max_diff;",
    "    long max_diff = 0;\n    for (long i = 0; i < arr.size(); i++) {\n        for (long j = i + 1; j < arr.size(); j++) {\n            long diff = abs(arr[i] - arr[j]);\n            if (diff > max_diff) {\n                max_diff = diff;\n            }\n        }\n    }\n    return max_diff;",
    "    long max_diff = 0;\n    for(int i=0;i<arr.size();i++) {\n        for(int j=i+1;j<arr.size();j++) {\n            if(abs(arr[i]-arr[j]) > max_diff) {\n                max_diff = abs(arr[i]-arr[j]);\n            }\n        }\n    }\n    return max_diff;",
    "    long max_diff = 0;\n    for(int i = 0; i < arr.size(); i++) {\n        for(int j = i+1; j < arr.size(); j++) {\n            if(abs(arr[i] - arr[j]) > max_diff) {\n                max_diff = abs(arr[i] - arr[j]);\n            }\n        }\n    }\n    return max_diff;",
    "    long max_diff = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        for (int j = i + 1; j < arr.size(); j++) {\n            if (abs(arr[i] - arr[j]) > max_diff) {\n                max_diff = abs(arr[i] - arr[j]);\n            }\n        }\n    }\n    return max_diff;",
    "    long max = arr[0];\n    long min = arr[0];\n    for(int i=1;i<arr.size();i++) {\n        if(arr[i] > max) {\n            max = arr[i];\n        }\n        if(arr[i] < min) {\n            min = arr[i];\n        }\n    }\n    return max - min;",
    "    long max = 0;\n    for(int i = 0; i < arr.size(); i++) {\n        for(int j = i+1; j < arr.size(); j++) {\n            if(abs(arr[i] - arr[j]) > max) {\n                max = abs(arr[i] - arr[j]);\n            }\n        }\n    }\n    return max;",
    "    long max_diff = 0;\n    for(int i = 0; i < arr.size(); i++) {\n        for(int j = i+1; j < arr.size(); j++) {\n            if(abs(arr[i] - arr[j]) > max_diff) {\n                max_diff = abs(arr[i] - arr[j]);\n            }\n        }\n    }\n    return max_diff;",
    "    long max_diff = 0;\n    long max_element = arr[0];\n    long min_element = arr[0];\n    for(int i = 0; i < arr.length; i++) {\n        if(arr[i] > max_element) {\n            max_element = arr[i];\n        }\n        if(arr[i] < min_element) {\n            min_element = arr[i];\n        }\n    }\n    max_diff = max_element - min_element;\n    return max_diff;",
    "    long max_diff = 0;\n    long max_elem = arr[0];\n    long min_elem = arr[0];\n    for (int i = 1; i < arr.size(); i++) {\n        if (arr[i] > max_elem) {\n            max_elem = arr[i];\n        }\n        if (arr[i] < min_elem) {\n            min_elem = arr[i];\n        }\n    }\n    max_diff = max_elem - min_elem;\n    return max_diff;",
    "    long max_diff = 0;\n    long n = sizeof(arr)/sizeof(arr[0]);\n    long i, j;\n    for (i = 0; i < n; i++) {\n        for (j = i+1; j < n; j++) {\n            if (abs(arr[i] - arr[j]) > max_diff) {\n                max_diff = abs(arr[i] - arr[j]);\n            }\n        }\n    }\n    return max_diff;",
    "    long max_diff = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        for (int j = i + 1; j < arr.size(); j++) {\n            if (arr[i] - arr[j] > max_diff) {\n                max_diff = arr[i] - arr[j];\n            }\n        }\n    }\n    return max_diff;",
    "    int n = arr.size();\n    int max1 = INT_MIN;\n    int max2 = INT_MIN;\n    int min1 = INT_MAX;\n    int min2 = INT_MAX;\n    for(int i = 0; i < n; i++) {\n        max1 = max(max1, arr[i] + i);\n        max2 = max(max2, arr[i] - i);\n        min1 = min(min1, arr[i] + i);\n        min2 = min(min2, arr[i] - i);\n    }\n    return max(max1 - min1, max2 - min2);",
    "    long max_diff = 0;\n    for(int i = 0; i < arr.size(); i++) {\n        for(int j = i+1; j < arr.size(); j++) {\n            if(abs(arr[i] - arr[j]) > max_diff) {\n                max_diff = abs(arr[i] - arr[j]);\n            }\n        }\n    }\n    return max_diff;",
    "  long max_diff = 0;\n  long n = sizeof(arr)/sizeof(arr[0]);\n  for (int i = 0; i < n; i++) {\n    for (int j = i+1; j < n; j++) {\n      if (abs(arr[i] - arr[j]) > max_diff) {\n        max_diff = abs(arr[i] - arr[j]);\n      }\n    }\n  }\n  return max_diff;",
    "    long max_diff = 0;\n    long n = sizeof(arr)/sizeof(arr[0]);\n    for(int i = 0; i < n; i++) {\n        for(int j = i+1; j < n; j++) {\n            if(abs(arr[i] - arr[j]) > max_diff) {\n                max_diff = abs(arr[i] - arr[j]);\n            }\n        }\n    }\n    return max_diff;",
    "    long max_diff = 0;\n    long n = sizeof(arr) / sizeof(arr[0]);\n    for (long i = 0; i < n; i++) {\n        for (long j = i + 1; j < n; j++) {\n            if (abs(arr[i] - arr[j]) > max_diff) {\n                max_diff = abs(arr[i] - arr[j]);\n            }\n        }\n    }\n    return max_diff;",
    "    int n = sizeof(arr)/sizeof(arr[0]);\n    int max1 = INT_MIN, min1 = INT_MAX;\n    for(int i=0;i<n;i++) {\n        max1 = max(max1, arr[i]+i);\n        min1 = min(min1, arr[i]+i);\n    }\n    return max1-min1;",
    "    long max_diff = 0;\n    long max_element = arr[0];\n    long min_element = arr[0];\n    for (int i = 1; i < arr.size(); i++) {\n        if (arr[i] > max_element) {\n            max_element = arr[i];\n        }\n        if (arr[i] < min_element) {\n            min_element = arr[i];\n        }\n    }\n    max_diff = max_element - min_element;\n    return max_diff;",
    "    long max = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        for (int j = i + 1; j < arr.size(); j++) {\n            if (abs(arr[i] - arr[j]) > max) {\n                max = abs(arr[i] - arr[j]);\n            }\n        }\n    }\n    return max;",
    "    long max_diff = -1;\n    long n = sizeof(arr)/sizeof(arr[0]);\n    for(long i = 0; i < n; i++) {\n        for(long j = i+1; j < n; j++) {\n            if(abs(arr[i] - arr[j]) > max_diff) {\n                max_diff = abs(arr[i] - arr[j]);\n            }\n        }\n    }\n    return max_diff;",
    "    long max_diff = 0;\n    long n = sizeof(arr)/sizeof(arr[0]);\n    for(long i = 0; i < n; i++) {\n        for(long j = i+1; j < n; j++) {\n            if(abs(arr[i] - arr[j]) > max_diff) {\n                max_diff = abs(arr[i] - arr[j]);\n            }\n        }\n    }\n    return max_diff;",
    "    long max = arr[0];\n    long min = arr[0];\n    for (int i = 0; i < arr.length; i++) {\n        if (arr[i] > max) {\n            max = arr[i];\n        }\n        if (arr[i] < min) {\n            min = arr[i];\n        }\n    }\n    return max - min;"
  ]
}
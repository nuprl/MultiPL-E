{
  "name": "mbpp_632_move_zero",
  "language": "cpp",
  "prompt": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to move all zeroes to the end of the given list.\nstd::vector<long> move_zero(std::vector<long> num_list) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_632_move_zero.py",
  "prompt_terminology": "verbatim",
  "tests": "}\nint main() {\n    auto candidate = move_zero;\n    assert(candidate((std::vector<long>({(long)1, (long)0, (long)2, (long)0, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)0, (long)0})));\n    assert(candidate((std::vector<long>({(long)2, (long)3, (long)2, (long)0, (long)0, (long)4, (long)0, (long)5, (long)0}))) == (std::vector<long>({(long)2, (long)3, (long)2, (long)4, (long)5, (long)0, (long)0, (long)0, (long)0})));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)0, (long)1, (long)1}))) == (std::vector<long>({(long)1, (long)1, (long)1, (long)0, (long)0})));\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    std::vector<long> result;\n    for (int i = 0; i < num_list.size(); i++) {\n        if (num_list[i] != 0) {\n            result.push_back(num_list[i]);\n        }\n    }\n    for (int i = 0; i < num_list.size(); i++) {\n        if (num_list[i] == 0) {\n            result.push_back(num_list[i]);\n        }\n    }\n    return result;",
    "    std::vector<long> result;\n    for(int i=0;i<num_list.size();i++){\n        if(num_list[i]!=0){\n            result.push_back(num_list[i]);\n        }\n    }\n    for(int i=0;i<num_list.size();i++){\n        if(num_list[i]==0){\n            result.push_back(num_list[i]);\n        }\n    }\n    return result;",
    "    int count = 0;\n    for (int i = 0; i < num_list.size(); i++) {\n        if (num_list[i] != 0) {\n            num_list[count++] = num_list[i];\n        }\n    }\n    while (count < num_list.size()) {\n        num_list[count++] = 0;\n    }\n    return num_list;",
    "    // Write your code here\n    int n = num_list.size();\n    int count = 0;\n    for(int i=0;i<n;i++)\n    {\n        if(num_list[i]!=0)\n        {\n            num_list[count++] = num_list[i];\n        }\n    }\n    while(count<n)\n    {\n        num_list[count++] = 0;\n    }\n    return num_list;",
    "    std::vector<long> result;\n    int count = 0;\n    for (int i = 0; i < num_list.size(); i++) {\n        if (num_list[i] != 0) {\n            result.push_back(num_list[i]);\n        } else {\n            count++;\n        }\n    }\n    for (int i = 0; i < count; i++) {\n        result.push_back(0);\n    }\n    return result;",
    "    int n = num_list.size();\n    int count = 0;\n    for (int i = 0; i < n; i++) {\n        if (num_list[i] != 0) {\n            num_list[count++] = num_list[i];\n        }\n    }\n    while (count < n) {\n        num_list[count++] = 0;\n    }\n    return num_list;",
    "    // Write your code here\n    int n = num_list.size();\n    int count = 0;\n    for(int i = 0; i < n; i++) {\n        if(num_list[i] != 0) {\n            num_list[count++] = num_list[i];\n        }\n    }\n    while(count < n) {\n        num_list[count++] = 0;\n    }\n    return num_list;",
    "    std::vector<long> result;\n    int count = 0;\n    for (int i = 0; i < num_list.size(); i++) {\n        if (num_list[i] != 0) {\n            result.push_back(num_list[i]);\n        } else {\n            count++;\n        }\n    }\n    for (int i = 0; i < count; i++) {\n        result.push_back(0);\n    }\n    return result;",
    "    std::vector<long> result;\n    for (auto i = num_list.begin(); i != num_list.end(); i++) {\n        if (*i != 0) {\n            result.push_back(*i);\n        }\n    }\n    for (auto i = 0; i < num_list.size(); i++) {\n        if (num_list[i] == 0) {\n            result.push_back(0);\n        }\n    }\n    return result;",
    "    std::vector<long> result;\n    int count = 0;\n    for (int i = 0; i < num_list.size(); i++) {\n        if (num_list[i] != 0) {\n            result.push_back(num_list[i]);\n        }\n        else {\n            count++;\n        }\n    }\n    for (int i = 0; i < count; i++) {\n        result.push_back(0);\n    }\n    return result;",
    "    std::vector<long> result;\n    for (long i = 0; i < num_list.size(); i++) {\n        if (num_list[i] != 0) {\n            result.push_back(num_list[i]);\n        }\n    }\n    for (long i = 0; i < num_list.size(); i++) {\n        if (num_list[i] == 0) {\n            result.push_back(num_list[i]);\n        }\n    }\n    return result;",
    "    // Write your code here\n    int n=num_list.size();\n    int count=0;\n    for(int i=0;i<n;i++)\n    {\n        if(num_list[i]!=0)\n        {\n            num_list[count++]=num_list[i];\n        }\n    }\n    while(count<n)\n    {\n        num_list[count++]=0;\n    }\n    return num_list;",
    "    // Write your code here\n    long n = num_list.size();\n    long count = 0;\n    for(long i = 0; i < n; i++) {\n        if(num_list[i] != 0) {\n            num_list[count++] = num_list[i];\n        }\n    }\n    while(count < n) {\n        num_list[count++] = 0;\n    }\n    return num_list;",
    "    std::vector<long>::iterator itr;\n    std::vector<long>::iterator itr1;\n    itr = num_list.begin();\n    itr1 = num_list.end();\n    while(itr != itr1) {\n        if(*itr == 0) {\n            num_list.erase(itr);\n            num_list.push_back(0);\n            itr1 = num_list.end();\n        }\n        else {\n            itr++;\n        }\n    }\n    return num_list;",
    "    std::vector<long> res;\n    for (auto i = num_list.begin(); i != num_list.end(); i++) {\n        if (*i != 0) {\n            res.push_back(*i);\n        }\n    }\n    for (auto i = num_list.begin(); i != num_list.end(); i++) {\n        if (*i == 0) {\n            res.push_back(*i);\n        }\n    }\n    return res;",
    "    // Write your code here\n    std::vector<long>::iterator it;\n    for(it=num_list.begin();it!=num_list.end();it++)\n    {\n        if(*it==0)\n        {\n            num_list.erase(it);\n            num_list.push_back(0);\n        }\n    }\n    return num_list;",
    "    std::vector<long> result;\n    for (auto i : num_list) {\n        if (i != 0) {\n            result.push_back(i);\n        }\n    }\n    for (auto i : num_list) {\n        if (i == 0) {\n            result.push_back(i);\n        }\n    }\n    return result;",
    "    int count = 0;\n    for (int i = 0; i < num_list.size(); i++) {\n        if (num_list[i] != 0) {\n            num_list[count++] = num_list[i];\n        }\n    }\n    while (count < num_list.size()) {\n        num_list[count++] = 0;\n    }\n    return num_list;",
    "    std::vector<long>::iterator it = num_list.begin();\n    while(it != num_list.end()) {\n        if(*it == 0) {\n            num_list.erase(it);\n            num_list.push_back(0);\n        }\n        else {\n            it++;\n        }\n    }\n    return num_list;",
    "    int count = 0;\n    for (int i = 0; i < num_list.size(); i++) {\n        if (num_list[i] != 0) {\n            num_list[count++] = num_list[i];\n        }\n    }\n    while (count < num_list.size()) {\n        num_list[count++] = 0;\n    }\n    return num_list;"
  ]
}
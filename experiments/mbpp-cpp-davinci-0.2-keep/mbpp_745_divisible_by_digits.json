{
  "name": "mbpp_745_divisible_by_digits",
  "language": "cpp",
  "prompt": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\nstd::vector<long> divisible_by_digits(long startnum, long endnum) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_745_divisible_by_digits.py",
  "prompt_terminology": "verbatim",
  "tests": "}\nint main() {\n    auto candidate = divisible_by_digits;\n    assert(candidate((1), (22)) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)7, (long)8, (long)9, (long)11, (long)12, (long)15, (long)22})));\n    assert(candidate((1), (15)) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)7, (long)8, (long)9, (long)11, (long)12, (long)15})));\n    assert(candidate((20), (25)) == (std::vector<long>({(long)22, (long)24})));\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    std::vector<long> result;\n    for(long i = startnum; i <= endnum; i++) {\n        std::string s = std::to_string(i);\n        bool flag = true;\n        for(int j = 0; j < s.length(); j++) {\n            if(s[j] == '0') {\n                flag = false;\n                break;\n            }\n            if(i % (s[j] - '0') != 0) {\n                flag = false;\n                break;\n            }\n        }\n        if(flag) {\n            result.push_back(i);\n        }\n    }\n    return result;",
    "    std::vector<long> result;\n    for (long i = startnum; i <= endnum; i++) {\n        bool divisible = true;\n        long num = i;\n        while (num) {\n            long digit = num % 10;\n            if (digit == 0) {\n                divisible = false;\n                break;\n            }\n            if (i % digit != 0) {\n                divisible = false;\n                break;\n            }\n            num /= 10;\n        }\n        if (divisible) {\n            result.push_back(i);\n        }\n    }\n    return result;",
    "    std::vector<long> result;\n    for (long i = startnum; i <= endnum; i++) {\n        bool flag = true;\n        long temp = i;\n        while (temp > 0) {\n            long digit = temp % 10;\n            if (digit == 0) {\n                flag = false;\n                break;\n            }\n            if (i % digit != 0) {\n                flag = false;\n                break;\n            }\n            temp = temp / 10;\n        }\n        if (flag) {\n            result.push_back(i);\n        }\n    }\n    return result;",
    "    std::vector<long> result;\n    for (long i = startnum; i <= endnum; i++) {\n        long num = i;\n        bool is_divisible = true;\n        while (num > 0) {\n            long digit = num % 10;\n            if (digit == 0 || i % digit != 0) {\n                is_divisible = false;\n                break;\n            }\n            num /= 10;\n        }\n        if (is_divisible) {\n            result.push_back(i);\n        }\n    }\n    return result;",
    "    std::vector<long> result;\n    for (long i = startnum; i <= endnum; i++) {\n        bool flag = true;\n        long temp = i;\n        while (temp > 0) {\n            long digit = temp % 10;\n            if (digit == 0) {\n                flag = false;\n                break;\n            }\n            if (i % digit != 0) {\n                flag = false;\n                break;\n            }\n            temp /= 10;\n        }\n        if (flag) {\n            result.push_back(i);\n        }\n    }\n    return result;",
    "    std::vector<long> result;\n    for (long i = startnum; i <= endnum; i++) {\n        bool is_divisible = true;\n        long num = i;\n        while (num > 0) {\n            long digit = num % 10;\n            if (digit == 0) {\n                is_divisible = false;\n                break;\n            }\n            if (i % digit != 0) {\n                is_divisible = false;\n                break;\n            }\n            num /= 10;\n        }\n        if (is_divisible) {\n            result.push_back(i);\n        }\n    }\n    return result;",
    "    std::vector<long> result;\n    for(long i = startnum; i <= endnum; i++) {\n        long num = i;\n        bool is_divisible = true;\n        while(num) {\n            long digit = num % 10;\n            if(digit == 0 || i % digit != 0) {\n                is_divisible = false;\n                break;\n            }\n            num /= 10;\n        }\n        if(is_divisible) {\n            result.push_back(i);\n        }\n    }\n    return result;",
    "    std::vector<long> result;\n    for (long i = startnum; i <= endnum; ++i) {\n        bool flag = true;\n        long temp = i;\n        while (temp > 0) {\n            long digit = temp % 10;\n            if (digit == 0) {\n                flag = false;\n                break;\n            }\n            if (i % digit != 0) {\n                flag = false;\n                break;\n            }\n            temp /= 10;\n        }\n        if (flag) {\n            result.push_back(i);\n        }\n    }\n    return result;",
    "\tstd::vector<long> result;\n\tfor (long i = startnum; i <= endnum; i++) {\n\t\tlong temp = i;\n\t\tbool flag = true;\n\t\twhile (temp > 0) {\n\t\t\tlong digit = temp % 10;\n\t\t\tif (digit == 0 || i % digit != 0) {\n\t\t\t\tflag = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\ttemp /= 10;\n\t\t}\n\t\tif (flag) {\n\t\t\tresult.push_back(i);\n\t\t}\n\t}\n\treturn result;",
    "    std::vector<long> result;\n    for (long i = startnum; i <= endnum; i++) {\n        long num = i;\n        bool is_divisible = true;\n        while (num > 0) {\n            long digit = num % 10;\n            if (digit == 0 || i % digit != 0) {\n                is_divisible = false;\n                break;\n            }\n            num /= 10;\n        }\n        if (is_divisible) {\n            result.push_back(i);\n        }\n    }\n    return result;",
    "    std::vector<long> result;\n    for (long i = startnum; i <= endnum; i++) {\n        bool is_divisible = true;\n        long num = i;\n        while (num > 0) {\n            long digit = num % 10;\n            if (digit == 0 || i % digit != 0) {\n                is_divisible = false;\n                break;\n            }\n            num /= 10;\n        }\n        if (is_divisible) {\n            result.push_back(i);\n        }\n    }\n    return result;",
    "    std::vector<long> result;\n    for (long i = startnum; i <= endnum; i++) {\n        bool is_divisible = true;\n        long num = i;\n        while (num > 0) {\n            long digit = num % 10;\n            if (digit == 0) {\n                is_divisible = false;\n                break;\n            }\n            if (i % digit != 0) {\n                is_divisible = false;\n                break;\n            }\n            num /= 10;\n        }\n        if (is_divisible) {\n            result.push_back(i);\n        }\n    }\n    return result;",
    "    std::vector<long> result;\n    for (long i = startnum; i <= endnum; i++) {\n        long temp = i;\n        bool flag = true;\n        while (temp > 0) {\n            int digit = temp % 10;\n            if (digit == 0) {\n                flag = false;\n                break;\n            }\n            if (i % digit != 0) {\n                flag = false;\n                break;\n            }\n            temp /= 10;\n        }\n        if (flag) {\n            result.push_back(i);\n        }\n    }\n    return result;",
    "    std::vector<long> result;\n    for (long i = startnum; i <= endnum; i++) {\n        std::string s = std::to_string(i);\n        bool is_divisible = true;\n        for (auto c : s) {\n            if (i % (c - '0') != 0) {\n                is_divisible = false;\n                break;\n            }\n        }\n        if (is_divisible) {\n            result.push_back(i);\n        }\n    }\n    return result;",
    "    std::vector<long> result;\n    for (long i = startnum; i <= endnum; i++) {\n        long num = i;\n        bool flag = true;\n        while (num) {\n            int digit = num % 10;\n            if (digit == 0) {\n                flag = false;\n                break;\n            }\n            if (i % digit != 0) {\n                flag = false;\n                break;\n            }\n            num /= 10;\n        }\n        if (flag) {\n            result.push_back(i);\n        }\n    }\n    return result;",
    "    std::vector<long> result;\n    for (long i = startnum; i <= endnum; i++) {\n        long temp = i;\n        bool flag = true;\n        while (temp > 0) {\n            long digit = temp % 10;\n            if (digit == 0) {\n                flag = false;\n                break;\n            }\n            if (i % digit != 0) {\n                flag = false;\n                break;\n            }\n            temp /= 10;\n        }\n        if (flag) {\n            result.push_back(i);\n        }\n    }\n    return result;",
    "    std::vector<long> result;\n    for (long i = startnum; i <= endnum; i++) {\n        bool is_divisible = true;\n        long num = i;\n        while (num > 0) {\n            long digit = num % 10;\n            if (digit == 0 || i % digit != 0) {\n                is_divisible = false;\n                break;\n            }\n            num /= 10;\n        }\n        if (is_divisible) {\n            result.push_back(i);\n        }\n    }\n    return result;",
    "    std::vector<long> result;\n    for (long i = startnum; i <= endnum; i++) {\n        long num = i;\n        bool divisible = true;\n        while (num > 0) {\n            long digit = num % 10;\n            if (digit == 0 || i % digit != 0) {\n                divisible = false;\n                break;\n            }\n            num /= 10;\n        }\n        if (divisible) {\n            result.push_back(i);\n        }\n    }\n    return result;",
    "    std::vector<long> result;\n    for (long i = startnum; i <= endnum; i++) {\n        bool is_divisible = true;\n        long num = i;\n        while (num > 0) {\n            long digit = num % 10;\n            if (digit == 0 || i % digit != 0) {\n                is_divisible = false;\n                break;\n            }\n            num /= 10;\n        }\n        if (is_divisible) {\n            result.push_back(i);\n        }\n    }\n    return result;",
    "    std::vector<long> result;\n    for (long i = startnum; i <= endnum; i++) {\n        long num = i;\n        bool divisible = true;\n        while (num > 0) {\n            long digit = num % 10;\n            if (digit == 0 || i % digit != 0) {\n                divisible = false;\n                break;\n            }\n            num /= 10;\n        }\n        if (divisible) {\n            result.push_back(i);\n        }\n    }\n    return result;",
    "    std::vector<long> result;\n    for (long i = startnum; i <= endnum; i++) {\n        bool divisible = true;\n        long num = i;\n        while (num > 0) {\n            long digit = num % 10;\n            if (digit == 0 || i % digit != 0) {\n                divisible = false;\n                break;\n            }\n            num /= 10;\n        }\n        if (divisible) {\n            result.push_back(i);\n        }\n    }\n    return result;",
    "    std::vector<long> result;\n    for (long i = startnum; i <= endnum; i++) {\n        bool flag = true;\n        long temp = i;\n        while (temp > 0) {\n            long digit = temp % 10;\n            if (digit == 0 || i % digit != 0) {\n                flag = false;\n                break;\n            }\n            temp /= 10;\n        }\n        if (flag) {\n            result.push_back(i);\n        }\n    }\n    return result;",
    "    std::vector<long> result;\n    for(long i = startnum; i <= endnum; i++) {\n        long num = i;\n        bool is_divisible = true;\n        while(num > 0) {\n            long digit = num % 10;\n            if(digit == 0 || i % digit != 0) {\n                is_divisible = false;\n                break;\n            }\n            num /= 10;\n        }\n        if(is_divisible) {\n            result.push_back(i);\n        }\n    }\n    return result;",
    "    std::vector<long> res;\n    for (long i = startnum; i <= endnum; i++) {\n        bool is_divisible = true;\n        long num = i;\n        while (num > 0) {\n            long digit = num % 10;\n            if (digit == 0) {\n                is_divisible = false;\n                break;\n            }\n            if (i % digit != 0) {\n                is_divisible = false;\n                break;\n            }\n            num /= 10;\n        }\n        if (is_divisible) {\n            res.push_back(i);\n        }\n    }\n    return res;",
    "\tstd::vector<long> result;\n\tfor(long i = startnum; i <= endnum; i++) {\n\t\tlong num = i;\n\t\tbool flag = true;\n\t\twhile(num > 0) {\n\t\t\tlong digit = num % 10;\n\t\t\tif(digit == 0) {\n\t\t\t\tflag = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif(i % digit != 0) {\n\t\t\t\tflag = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tnum /= 10;\n\t\t}\n\t\tif(flag) {\n\t\t\tresult.push_back(i);\n\t\t}\n\t}\n\treturn result;",
    "    std::vector<long> result;\n    for (long i = startnum; i <= endnum; i++) {\n        long num = i;\n        bool divisible = true;\n        while (num > 0) {\n            long digit = num % 10;\n            if (digit == 0) {\n                divisible = false;\n                break;\n            }\n            if (i % digit != 0) {\n                divisible = false;\n                break;\n            }\n            num /= 10;\n        }\n        if (divisible) {\n            result.push_back(i);\n        }\n    }\n    return result;",
    "    std::vector<long> result;\n    for (long i = startnum; i <= endnum; i++) {\n        bool divisible = true;\n        long num = i;\n        while (num > 0) {\n            int digit = num % 10;\n            if (digit == 0 || i % digit != 0) {\n                divisible = false;\n                break;\n            }\n            num /= 10;\n        }\n        if (divisible) {\n            result.push_back(i);\n        }\n    }\n    return result;",
    "    std::vector<long> result;\n    for(long i=startnum; i<=endnum; i++) {\n        long num = i;\n        bool divisible = true;\n        while(num > 0) {\n            long digit = num % 10;\n            if(digit == 0 || i % digit != 0) {\n                divisible = false;\n                break;\n            }\n            num /= 10;\n        }\n        if(divisible) {\n            result.push_back(i);\n        }\n    }\n    return result;",
    "    std::vector<long> result;\n    for (long i = startnum; i <= endnum; i++) {\n        bool divisible = true;\n        long num = i;\n        while (num > 0) {\n            long digit = num % 10;\n            if (digit == 0) {\n                divisible = false;\n                break;\n            }\n            if (i % digit != 0) {\n                divisible = false;\n                break;\n            }\n            num /= 10;\n        }\n        if (divisible) {\n            result.push_back(i);\n        }\n    }\n    return result;",
    "    std::vector<long> res;\n    for (long i = startnum; i <= endnum; i++) {\n        long num = i;\n        bool flag = true;\n        while (num > 0) {\n            long digit = num % 10;\n            if (digit == 0 || i % digit != 0) {\n                flag = false;\n                break;\n            }\n            num /= 10;\n        }\n        if (flag) {\n            res.push_back(i);\n        }\n    }\n    return res;",
    "    std::vector<long> result;\n    for (long i = startnum; i <= endnum; i++) {\n        long temp = i;\n        bool flag = true;\n        while (temp > 0) {\n            long digit = temp % 10;\n            if (digit == 0) {\n                flag = false;\n                break;\n            }\n            if (i % digit != 0) {\n                flag = false;\n                break;\n            }\n            temp /= 10;\n        }\n        if (flag) {\n            result.push_back(i);\n        }\n    }\n    return result;",
    "    std::vector<long> result;\n    for (long i = startnum; i <= endnum; i++) {\n        long temp = i;\n        bool flag = true;\n        while (temp > 0) {\n            long digit = temp % 10;\n            if (digit == 0) {\n                flag = false;\n                break;\n            }\n            if (i % digit != 0) {\n                flag = false;\n                break;\n            }\n            temp /= 10;\n        }\n        if (flag) {\n            result.push_back(i);\n        }\n    }\n    return result;",
    "    std::vector<long> result;\n    for (long i = startnum; i <= endnum; i++) {\n        bool is_divisible = true;\n        long num = i;\n        while (num > 0) {\n            long digit = num % 10;\n            if (digit == 0 || i % digit != 0) {\n                is_divisible = false;\n                break;\n            }\n            num /= 10;\n        }\n        if (is_divisible) {\n            result.push_back(i);\n        }\n    }\n    return result;",
    "  std::vector<long> result;\n  for (long i = startnum; i <= endnum; i++) {\n    bool flag = true;\n    long num = i;\n    while (num > 0) {\n      long digit = num % 10;\n      if (digit == 0 || i % digit != 0) {\n        flag = false;\n        break;\n      }\n      num /= 10;\n    }\n    if (flag) {\n      result.push_back(i);\n    }\n  }\n  return result;",
    "    std::vector<long> result;\n    for (long i = startnum; i <= endnum; i++) {\n        std::string str = std::to_string(i);\n        bool divisible = true;\n        for (char c : str) {\n            if (c != '0' && i % (c - '0') != 0) {\n                divisible = false;\n                break;\n            }\n        }\n        if (divisible) {\n            result.push_back(i);\n        }\n    }\n    return result;",
    "    std::vector<long> result;\n    for(long i = startnum; i <= endnum; i++) {\n        bool is_divisible = true;\n        long num = i;\n        while(num > 0) {\n            long digit = num % 10;\n            if(digit == 0 || i % digit != 0) {\n                is_divisible = false;\n                break;\n            }\n            num /= 10;\n        }\n        if(is_divisible) {\n            result.push_back(i);\n        }\n    }\n    return result;",
    "    std::vector<long> result;\n    for (long i = startnum; i <= endnum; i++) {\n        long num = i;\n        bool divisible = true;\n        while (num != 0) {\n            long digit = num % 10;\n            if (digit == 0 || i % digit != 0) {\n                divisible = false;\n                break;\n            }\n            num /= 10;\n        }\n        if (divisible) {\n            result.push_back(i);\n        }\n    }\n    return result;",
    "    std::vector<long> result;\n    for(long i = startnum; i <= endnum; i++) {\n        std::vector<long> digits;\n        long num = i;\n        while(num > 0) {\n            digits.push_back(num % 10);\n            num /= 10;\n        }\n        bool is_divisible = true;\n        for(long digit : digits) {\n            if(digit == 0) {\n                is_divisible = false;\n                break;\n            }\n            if(i % digit != 0) {\n                is_divisible = false;\n                break;\n            }\n        }\n        if(is_divisible) {\n            result.push_back(i);\n        }\n    }\n    return result;",
    "    std::vector<long> res;\n    for(long i = startnum; i <= endnum; i++) {\n        long num = i;\n        bool flag = true;\n        while(num) {\n            long digit = num % 10;\n            if(digit == 0) {\n                flag = false;\n                break;\n            }\n            if(i % digit != 0) {\n                flag = false;\n                break;\n            }\n            num /= 10;\n        }\n        if(flag) {\n            res.push_back(i);\n        }\n    }\n    return res;",
    "    std::vector<long> result;\n    for (long i = startnum; i <= endnum; i++) {\n        bool flag = true;\n        long num = i;\n        while (num > 0) {\n            long digit = num % 10;\n            if (digit == 0) {\n                flag = false;\n                break;\n            }\n            if (i % digit != 0) {\n                flag = false;\n                break;\n            }\n            num /= 10;\n        }\n        if (flag) {\n            result.push_back(i);\n        }\n    }\n    return result;",
    "    std::vector<long> result;\n    for (long i = startnum; i <= endnum; i++) {\n        bool divisible = true;\n        long temp = i;\n        while (temp > 0) {\n            long digit = temp % 10;\n            if (digit == 0 || i % digit != 0) {\n                divisible = false;\n                break;\n            }\n            temp /= 10;\n        }\n        if (divisible) {\n            result.push_back(i);\n        }\n    }\n    return result;",
    "    std::vector<long> result;\n    for (long i = startnum; i <= endnum; i++) {\n        std::string str = std::to_string(i);\n        bool flag = true;\n        for (char c : str) {\n            if (c != '0' && i % (c - '0') != 0) {\n                flag = false;\n                break;\n            }\n        }\n        if (flag) {\n            result.push_back(i);\n        }\n    }\n    return result;",
    "    std::vector<long> result;\n    for (long i = startnum; i <= endnum; i++) {\n        long num = i;\n        bool flag = true;\n        while (num > 0) {\n            long digit = num % 10;\n            if (digit == 0 || i % digit != 0) {\n                flag = false;\n                break;\n            }\n            num = num / 10;\n        }\n        if (flag) {\n            result.push_back(i);\n        }\n    }\n    return result;",
    "    std::vector<long> result;\n    for (long i = startnum; i <= endnum; i++) {\n        bool divisible = true;\n        long num = i;\n        while (num > 0) {\n            long digit = num % 10;\n            if (digit == 0) {\n                divisible = false;\n                break;\n            }\n            if (i % digit != 0) {\n                divisible = false;\n                break;\n            }\n            num /= 10;\n        }\n        if (divisible) {\n            result.push_back(i);\n        }\n    }\n    return result;",
    "    std::vector<long> result;\n    for (long i = startnum; i <= endnum; i++) {\n        std::string str = std::to_string(i);\n        bool flag = true;\n        for (char c : str) {\n            if (i % (c - '0') != 0) {\n                flag = false;\n                break;\n            }\n        }\n        if (flag) {\n            result.push_back(i);\n        }\n    }\n    return result;",
    "    std::vector<long> result;\n    for(long i = startnum; i <= endnum; i++) {\n        long num = i;\n        bool divisible = true;\n        while(num > 0) {\n            long digit = num % 10;\n            if(digit == 0 || i % digit != 0) {\n                divisible = false;\n                break;\n            }\n            num /= 10;\n        }\n        if(divisible) {\n            result.push_back(i);\n        }\n    }\n    return result;",
    "    std::vector<long> result;\n    for (long i = startnum; i <= endnum; i++) {\n        long num = i;\n        bool divisible = true;\n        while (num > 0) {\n            long digit = num % 10;\n            if (digit == 0) {\n                divisible = false;\n                break;\n            }\n            if (i % digit != 0) {\n                divisible = false;\n                break;\n            }\n            num /= 10;\n        }\n        if (divisible) {\n            result.push_back(i);\n        }\n    }\n    return result;",
    "    std::vector<long> result;\n    for(long i=startnum; i<=endnum; i++) {\n        long num = i;\n        bool flag = true;\n        while(num > 0) {\n            long digit = num % 10;\n            if(digit == 0 || i % digit != 0) {\n                flag = false;\n                break;\n            }\n            num = num / 10;\n        }\n        if(flag) {\n            result.push_back(i);\n        }\n    }\n    return result;",
    "    std::vector<long> result;\n    for(long i = startnum; i <= endnum; i++) {\n        long num = i;\n        bool is_divisible = true;\n        while(num > 0) {\n            long digit = num % 10;\n            if(digit == 0) {\n                is_divisible = false;\n                break;\n            }\n            if(i % digit != 0) {\n                is_divisible = false;\n                break;\n            }\n            num /= 10;\n        }\n        if(is_divisible) {\n            result.push_back(i);\n        }\n    }\n    return result;",
    "    std::vector<long> result;\n    for (long i = startnum; i <= endnum; i++) {\n        long num = i;\n        bool flag = true;\n        while (num > 0) {\n            long digit = num % 10;\n            if (digit == 0) {\n                flag = false;\n                break;\n            }\n            if (i % digit != 0) {\n                flag = false;\n                break;\n            }\n            num /= 10;\n        }\n        if (flag) {\n            result.push_back(i);\n        }\n    }\n    return result;",
    "    std::vector<long> result;\n    for (long i = startnum; i <= endnum; i++) {\n        long num = i;\n        bool is_divisible = true;\n        while (num > 0) {\n            long digit = num % 10;\n            if (digit == 0 || i % digit != 0) {\n                is_divisible = false;\n                break;\n            }\n            num /= 10;\n        }\n        if (is_divisible) {\n            result.push_back(i);\n        }\n    }\n    return result;",
    "    std::vector<long> result;\n    for (long i = startnum; i <= endnum; i++) {\n        bool is_divisible = true;\n        long num = i;\n        while (num > 0) {\n            long digit = num % 10;\n            if (digit == 0) {\n                is_divisible = false;\n                break;\n            }\n            if (i % digit != 0) {\n                is_divisible = false;\n                break;\n            }\n            num /= 10;\n        }\n        if (is_divisible) {\n            result.push_back(i);\n        }\n    }\n    return result;",
    "\tstd::vector<long> result;\n\tfor (long i = startnum; i <= endnum; i++) {\n\t\tlong num = i;\n\t\tbool is_divisible = true;\n\t\twhile (num > 0) {\n\t\t\tlong digit = num % 10;\n\t\t\tif (digit == 0 || i % digit != 0) {\n\t\t\t\tis_divisible = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tnum /= 10;\n\t\t}\n\t\tif (is_divisible) {\n\t\t\tresult.push_back(i);\n\t\t}\n\t}\n\treturn result;",
    "    std::vector<long> result;\n    for (long i = startnum; i <= endnum; i++) {\n        bool is_divisible = true;\n        long number = i;\n        while (number > 0) {\n            long digit = number % 10;\n            if (digit == 0) {\n                is_divisible = false;\n                break;\n            }\n            if (i % digit != 0) {\n                is_divisible = false;\n                break;\n            }\n            number /= 10;\n        }\n        if (is_divisible) {\n            result.push_back(i);\n        }\n    }\n    return result;",
    "    std::vector<long> result;\n    for (long i = startnum; i <= endnum; i++) {\n        bool is_divisible = true;\n        long num = i;\n        while (num > 0) {\n            long digit = num % 10;\n            if (digit != 0 && i % digit != 0) {\n                is_divisible = false;\n                break;\n            }\n            num /= 10;\n        }\n        if (is_divisible) {\n            result.push_back(i);\n        }\n    }\n    return result;",
    "    std::vector<long> result;\n    for (long i = startnum; i <= endnum; i++) {\n        bool divisible = true;\n        long num = i;\n        while (num > 0) {\n            long digit = num % 10;\n            if (digit == 0 || i % digit != 0) {\n                divisible = false;\n                break;\n            }\n            num /= 10;\n        }\n        if (divisible) {\n            result.push_back(i);\n        }\n    }\n    return result;",
    "    std::vector<long> result;\n    for (long i = startnum; i <= endnum; i++) {\n        long temp = i;\n        bool flag = true;\n        while (temp != 0) {\n            int digit = temp % 10;\n            if (digit == 0) {\n                flag = false;\n                break;\n            }\n            if (i % digit != 0) {\n                flag = false;\n                break;\n            }\n            temp /= 10;\n        }\n        if (flag) {\n            result.push_back(i);\n        }\n    }\n    return result;",
    "    std::vector<long> result;\n    for(long i=startnum; i<=endnum; i++) {\n        std::string s = std::to_string(i);\n        bool flag = true;\n        for(int j=0; j<s.size(); j++) {\n            if(s[j] == '0') {\n                flag = false;\n                break;\n            }\n            if(i%(s[j]-'0') != 0) {\n                flag = false;\n                break;\n            }\n        }\n        if(flag) {\n            result.push_back(i);\n        }\n    }\n    return result;",
    "    std::vector<long> result;\n    for (long i = startnum; i <= endnum; i++) {\n        long num = i;\n        bool divisible = true;\n        while (num > 0) {\n            int digit = num % 10;\n            if (digit == 0 || i % digit != 0) {\n                divisible = false;\n                break;\n            }\n            num /= 10;\n        }\n        if (divisible) {\n            result.push_back(i);\n        }\n    }\n    return result;",
    "    std::vector<long> result;\n    for(long i = startnum; i <= endnum; i++) {\n        long num = i;\n        bool is_divisible = true;\n        while(num > 0) {\n            long digit = num % 10;\n            if(digit == 0 || i % digit != 0) {\n                is_divisible = false;\n                break;\n            }\n            num /= 10;\n        }\n        if(is_divisible) {\n            result.push_back(i);\n        }\n    }\n    return result;",
    "    std::vector<long> result;\n    for (long i = startnum; i <= endnum; i++) {\n        bool divisible = true;\n        long num = i;\n        while (num > 0) {\n            long digit = num % 10;\n            if (digit == 0 || i % digit != 0) {\n                divisible = false;\n                break;\n            }\n            num = num / 10;\n        }\n        if (divisible) {\n            result.push_back(i);\n        }\n    }\n    return result;",
    "    std::vector<long> result;\n    for (long i = startnum; i <= endnum; i++) {\n        long num = i;\n        bool divisible = true;\n        while (num > 0) {\n            long digit = num % 10;\n            if (digit == 0 || i % digit != 0) {\n                divisible = false;\n                break;\n            }\n            num /= 10;\n        }\n        if (divisible) {\n            result.push_back(i);\n        }\n    }\n    return result;",
    "    std::vector<long> result;\n    for(long i = startnum; i <= endnum; i++) {\n        long num = i;\n        bool flag = true;\n        while(num > 0) {\n            long digit = num % 10;\n            if(digit == 0 || i % digit != 0) {\n                flag = false;\n                break;\n            }\n            num /= 10;\n        }\n        if(flag) {\n            result.push_back(i);\n        }\n    }\n    return result;",
    "    std::vector<long> result;\n    for(long i = startnum; i <= endnum; i++) {\n        long num = i;\n        bool is_divisible = true;\n        while(num > 0) {\n            long digit = num % 10;\n            if(digit == 0) {\n                is_divisible = false;\n                break;\n            }\n            if(i % digit != 0) {\n                is_divisible = false;\n                break;\n            }\n            num = num / 10;\n        }\n        if(is_divisible) {\n            result.push_back(i);\n        }\n    }\n    return result;",
    "\tstd::vector<long> result;\n\tfor (long i = startnum; i <= endnum; i++) {\n\t\tbool is_divisible = true;\n\t\tlong num = i;\n\t\twhile (num > 0) {\n\t\t\tlong digit = num % 10;\n\t\t\tif (digit == 0) {\n\t\t\t\tis_divisible = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (i % digit != 0) {\n\t\t\t\tis_divisible = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tnum /= 10;\n\t\t}\n\t\tif (is_divisible) {\n\t\t\tresult.push_back(i);\n\t\t}\n\t}\n\treturn result;",
    "    std::vector<long> result;\n    for (long i = startnum; i <= endnum; i++) {\n        bool is_divisible = true;\n        long num = i;\n        while (num > 0) {\n            long digit = num % 10;\n            if (digit == 0 || i % digit != 0) {\n                is_divisible = false;\n                break;\n            }\n            num /= 10;\n        }\n        if (is_divisible) {\n            result.push_back(i);\n        }\n    }\n    return result;",
    "    std::vector<long> result;\n    for (long i = startnum; i <= endnum; i++) {\n        long num = i;\n        bool divisible = true;\n        while (num) {\n            int digit = num % 10;\n            if (digit == 0 || i % digit != 0) {\n                divisible = false;\n                break;\n            }\n            num /= 10;\n        }\n        if (divisible) {\n            result.push_back(i);\n        }\n    }\n    return result;",
    "    std::vector<long> result;\n    for (long i = startnum; i <= endnum; ++i) {\n        std::string s = std::to_string(i);\n        bool divisible = true;\n        for (char c : s) {\n            if (c == '0') {\n                divisible = false;\n                break;\n            }\n            if (i % (c - '0') != 0) {\n                divisible = false;\n                break;\n            }\n        }\n        if (divisible) {\n            result.push_back(i);\n        }\n    }\n    return result;",
    "    std::vector<long> result;\n    for (long i = startnum; i <= endnum; i++) {\n        bool divisible = true;\n        long num = i;\n        while (num > 0) {\n            long digit = num % 10;\n            if (digit != 0 && i % digit != 0) {\n                divisible = false;\n                break;\n            }\n            num /= 10;\n        }\n        if (divisible) {\n            result.push_back(i);\n        }\n    }\n    return result;",
    "    std::vector<long> result;\n    for (long i = startnum; i <= endnum; i++) {\n        bool is_divisible = true;\n        long num = i;\n        while (num > 0) {\n            long digit = num % 10;\n            if (digit == 0 || i % digit != 0) {\n                is_divisible = false;\n                break;\n            }\n            num /= 10;\n        }\n        if (is_divisible) {\n            result.push_back(i);\n        }\n    }\n    return result;",
    "    std::vector<long> result;\n    for(long i = startnum; i <= endnum; i++) {\n        long num = i;\n        bool divisible = true;\n        while(num) {\n            int digit = num % 10;\n            if(digit == 0 || i % digit != 0) {\n                divisible = false;\n                break;\n            }\n            num /= 10;\n        }\n        if(divisible) {\n            result.push_back(i);\n        }\n    }\n    return result;",
    "    std::vector<long> result;\n    for (long i = startnum; i <= endnum; i++) {\n        long temp = i;\n        bool flag = true;\n        while (temp > 0) {\n            long digit = temp % 10;\n            if (digit == 0) {\n                flag = false;\n                break;\n            }\n            if (i % digit != 0) {\n                flag = false;\n                break;\n            }\n            temp /= 10;\n        }\n        if (flag) {\n            result.push_back(i);\n        }\n    }\n    return result;",
    "    std::vector<long> result;\n    for (long i = startnum; i <= endnum; i++) {\n        long num = i;\n        bool divisible = true;\n        while (num > 0) {\n            long digit = num % 10;\n            if (digit == 0 || i % digit != 0) {\n                divisible = false;\n                break;\n            }\n            num /= 10;\n        }\n        if (divisible) {\n            result.push_back(i);\n        }\n    }\n    return result;",
    "    std::vector<long> result;\n    for (long i = startnum; i <= endnum; i++) {\n        bool is_divisible = true;\n        long num = i;\n        while (num > 0) {\n            long digit = num % 10;\n            if (digit == 0) {\n                is_divisible = false;\n                break;\n            }\n            if (i % digit != 0) {\n                is_divisible = false;\n                break;\n            }\n            num /= 10;\n        }\n        if (is_divisible) {\n            result.push_back(i);\n        }\n    }\n    return result;",
    "    std::vector<long> result;\n    for (long i = startnum; i <= endnum; i++) {\n        std::string s = std::to_string(i);\n        bool flag = true;\n        for (char c : s) {\n            if (c == '0') {\n                flag = false;\n                break;\n            }\n            if (i % (c - '0') != 0) {\n                flag = false;\n                break;\n            }\n        }\n        if (flag) {\n            result.push_back(i);\n        }\n    }\n    return result;",
    "    std::vector<long> result;\n    for (long i = startnum; i <= endnum; i++) {\n        bool is_divisible = true;\n        long temp = i;\n        while (temp > 0) {\n            long digit = temp % 10;\n            if (digit == 0) {\n                is_divisible = false;\n                break;\n            }\n            if (i % digit != 0) {\n                is_divisible = false;\n                break;\n            }\n            temp /= 10;\n        }\n        if (is_divisible) {\n            result.push_back(i);\n        }\n    }\n    return result;",
    "    std::vector<long> result;\n    for (long i = startnum; i <= endnum; i++) {\n        std::string str = std::to_string(i);\n        bool flag = true;\n        for (int j = 0; j < str.length(); j++) {\n            if (str[j] == '0') {\n                flag = false;\n                break;\n            }\n            if (i % (str[j] - '0') != 0) {\n                flag = false;\n                break;\n            }\n        }\n        if (flag) {\n            result.push_back(i);\n        }\n    }\n    return result;",
    "    std::vector<long> result;\n    for (long i = startnum; i <= endnum; i++) {\n        bool is_divisible = true;\n        long num = i;\n        while (num > 0) {\n            long digit = num % 10;\n            if (digit == 0 || i % digit != 0) {\n                is_divisible = false;\n                break;\n            }\n            num /= 10;\n        }\n        if (is_divisible) {\n            result.push_back(i);\n        }\n    }\n    return result;",
    "    std::vector<long> result;\n    for(long i = startnum; i <= endnum; i++) {\n        long temp = i;\n        bool flag = true;\n        while(temp > 0) {\n            long digit = temp % 10;\n            if(digit == 0) {\n                flag = false;\n                break;\n            }\n            if(i % digit != 0) {\n                flag = false;\n                break;\n            }\n            temp /= 10;\n        }\n        if(flag) {\n            result.push_back(i);\n        }\n    }\n    return result;",
    "    std::vector<long> result;\n    for(long i = startnum; i <= endnum; i++) {\n        std::string str = std::to_string(i);\n        bool is_divisible = true;\n        for(char c : str) {\n            if(c == '0') {\n                is_divisible = false;\n                break;\n            }\n            if(i % (c - '0') != 0) {\n                is_divisible = false;\n                break;\n            }\n        }\n        if(is_divisible) {\n            result.push_back(i);\n        }\n    }\n    return result;",
    "    std::vector<long> result;\n    for (long i = startnum; i <= endnum; i++) {\n        std::string s = std::to_string(i);\n        bool flag = true;\n        for (char c : s) {\n            if (c == '0') {\n                flag = false;\n                break;\n            }\n            if (i % (c - '0') != 0) {\n                flag = false;\n                break;\n            }\n        }\n        if (flag) {\n            result.push_back(i);\n        }\n    }\n    return result;",
    "    std::vector<long> result;\n    for (long i = startnum; i <= endnum; i++) {\n        long num = i;\n        bool flag = true;\n        while (num > 0) {\n            long digit = num % 10;\n            if (digit == 0 || i % digit != 0) {\n                flag = false;\n                break;\n            }\n            num /= 10;\n        }\n        if (flag) {\n            result.push_back(i);\n        }\n    }\n    return result;",
    "    std::vector<long> result;\n    for (long i = startnum; i <= endnum; i++) {\n        bool is_divisible = true;\n        long temp = i;\n        while (temp > 0) {\n            long digit = temp % 10;\n            if (digit == 0 || i % digit != 0) {\n                is_divisible = false;\n                break;\n            }\n            temp /= 10;\n        }\n        if (is_divisible) {\n            result.push_back(i);\n        }\n    }\n    return result;",
    "    std::vector<long> result;\n    for (long i = startnum; i <= endnum; i++) {\n        long num = i;\n        bool flag = true;\n        while (num > 0) {\n            long digit = num % 10;\n            if (digit == 0) {\n                flag = false;\n                break;\n            }\n            if (i % digit != 0) {\n                flag = false;\n                break;\n            }\n            num = num / 10;\n        }\n        if (flag) {\n            result.push_back(i);\n        }\n    }\n    return result;",
    "    std::vector<long> result;\n    for (long i = startnum; i <= endnum; i++) {\n        bool flag = true;\n        long num = i;\n        while (num > 0) {\n            int digit = num % 10;\n            if (digit == 0 || i % digit != 0) {\n                flag = false;\n                break;\n            }\n            num /= 10;\n        }\n        if (flag) {\n            result.push_back(i);\n        }\n    }\n    return result;",
    "    std::vector<long> result;\n    for (long i = startnum; i <= endnum; i++) {\n        bool flag = true;\n        long num = i;\n        while (num > 0) {\n            long digit = num % 10;\n            if (digit == 0 || i % digit != 0) {\n                flag = false;\n                break;\n            }\n            num /= 10;\n        }\n        if (flag) {\n            result.push_back(i);\n        }\n    }\n    return result;",
    "    std::vector<long> result;\n    for (long i = startnum; i <= endnum; i++) {\n        bool is_divisible = true;\n        long num = i;\n        while (num > 0) {\n            long digit = num % 10;\n            if (digit == 0) {\n                is_divisible = false;\n                break;\n            }\n            if (i % digit != 0) {\n                is_divisible = false;\n                break;\n            }\n            num /= 10;\n        }\n        if (is_divisible) {\n            result.push_back(i);\n        }\n    }\n    return result;",
    "    std::vector<long> result;\n    for (long i = startnum; i <= endnum; i++) {\n        long num = i;\n        bool divisible = true;\n        while (num > 0) {\n            long digit = num % 10;\n            if (digit == 0 || i % digit != 0) {\n                divisible = false;\n                break;\n            }\n            num /= 10;\n        }\n        if (divisible) {\n            result.push_back(i);\n        }\n    }\n    return result;",
    "    std::vector<long> result;\n    for (long i = startnum; i <= endnum; i++) {\n        long num = i;\n        bool is_divisible = true;\n        while (num > 0) {\n            long digit = num % 10;\n            if (digit != 0 && i % digit != 0) {\n                is_divisible = false;\n                break;\n            }\n            num /= 10;\n        }\n        if (is_divisible) {\n            result.push_back(i);\n        }\n    }\n    return result;",
    "    std::vector<long> result;\n    for (long i = startnum; i <= endnum; i++) {\n        bool flag = true;\n        long temp = i;\n        while (temp > 0) {\n            long digit = temp % 10;\n            if (digit == 0) {\n                flag = false;\n                break;\n            }\n            if (i % digit != 0) {\n                flag = false;\n                break;\n            }\n            temp /= 10;\n        }\n        if (flag) {\n            result.push_back(i);\n        }\n    }\n    return result;",
    "    std::vector<long> result;\n    for (long i = startnum; i <= endnum; ++i) {\n        bool flag = true;\n        long temp = i;\n        while (temp > 0) {\n            long digit = temp % 10;\n            if (digit == 0) {\n                flag = false;\n                break;\n            }\n            if (i % digit != 0) {\n                flag = false;\n                break;\n            }\n            temp /= 10;\n        }\n        if (flag) {\n            result.push_back(i);\n        }\n    }\n    return result;",
    "    std::vector<long> result;\n    for (long i = startnum; i <= endnum; i++) {\n        long num = i;\n        bool divisible = true;\n        while (num > 0) {\n            long digit = num % 10;\n            if (digit == 0 || i % digit != 0) {\n                divisible = false;\n                break;\n            }\n            num /= 10;\n        }\n        if (divisible) {\n            result.push_back(i);\n        }\n    }\n    return result;",
    "    std::vector<long> result;\n    for (long i = startnum; i <= endnum; i++) {\n        long num = i;\n        bool is_divisible = true;\n        while (num > 0) {\n            int digit = num % 10;\n            if (digit == 0) {\n                is_divisible = false;\n                break;\n            }\n            if (i % digit != 0) {\n                is_divisible = false;\n                break;\n            }\n            num /= 10;\n        }\n        if (is_divisible) {\n            result.push_back(i);\n        }\n    }\n    return result;",
    "    std::vector<long> result;\n    for (long i = startnum; i <= endnum; i++) {\n        bool divisible = true;\n        long num = i;\n        while (num > 0) {\n            long digit = num % 10;\n            if (digit == 0 || i % digit != 0) {\n                divisible = false;\n                break;\n            }\n            num /= 10;\n        }\n        if (divisible) {\n            result.push_back(i);\n        }\n    }\n    return result;",
    "  std::vector<long> result;\n  for(long i = startnum; i <= endnum; i++) {\n    bool flag = true;\n    long num = i;\n    while(num > 0) {\n      long digit = num % 10;\n      if(digit == 0 || i % digit != 0) {\n        flag = false;\n        break;\n      }\n      num /= 10;\n    }\n    if(flag) {\n      result.push_back(i);\n    }\n  }\n  return result;",
    "    std::vector<long> result;\n    for (long i = startnum; i <= endnum; i++) {\n        bool is_divisible = true;\n        long num = i;\n        while (num > 0) {\n            long digit = num % 10;\n            if (digit == 0) {\n                is_divisible = false;\n                break;\n            }\n            if (i % digit != 0) {\n                is_divisible = false;\n                break;\n            }\n            num /= 10;\n        }\n        if (is_divisible) {\n            result.push_back(i);\n        }\n    }\n    return result;",
    "    std::vector<long> result;\n    for (long i = startnum; i <= endnum; i++) {\n        long num = i;\n        bool flag = true;\n        while (num > 0) {\n            long digit = num % 10;\n            if (digit == 0 || i % digit != 0) {\n                flag = false;\n                break;\n            }\n            num /= 10;\n        }\n        if (flag) {\n            result.push_back(i);\n        }\n    }\n    return result;",
    "    std::vector<long> result;\n    for(long i = startnum; i <= endnum; i++) {\n        bool flag = true;\n        long temp = i;\n        while(temp > 0) {\n            long digit = temp % 10;\n            if(digit == 0) {\n                flag = false;\n                break;\n            }\n            if(i % digit != 0) {\n                flag = false;\n                break;\n            }\n            temp /= 10;\n        }\n        if(flag) {\n            result.push_back(i);\n        }\n    }\n    return result;",
    "    std::vector<long> result;\n    for (long i = startnum; i <= endnum; i++) {\n        bool flag = true;\n        long temp = i;\n        while (temp > 0) {\n            long digit = temp % 10;\n            if (digit == 0 || i % digit != 0) {\n                flag = false;\n                break;\n            }\n            temp = temp / 10;\n        }\n        if (flag) {\n            result.push_back(i);\n        }\n    }\n    return result;",
    "    std::vector<long> result;\n    for (long i = startnum; i <= endnum; i++) {\n        bool is_divisible = true;\n        long num = i;\n        while (num > 0) {\n            long digit = num % 10;\n            if (digit == 0 || i % digit != 0) {\n                is_divisible = false;\n                break;\n            }\n            num /= 10;\n        }\n        if (is_divisible) {\n            result.push_back(i);\n        }\n    }\n    return result;",
    "    std::vector<long> result;\n    for (long i = startnum; i <= endnum; i++) {\n        long num = i;\n        bool is_divisible = true;\n        while (num > 0) {\n            long digit = num % 10;\n            if (digit == 0) {\n                is_divisible = false;\n                break;\n            }\n            if (i % digit != 0) {\n                is_divisible = false;\n                break;\n            }\n            num = num / 10;\n        }\n        if (is_divisible) {\n            result.push_back(i);\n        }\n    }\n    return result;",
    "    std::vector<long> result;\n    for (long i = startnum; i <= endnum; i++) {\n        long num = i;\n        bool divisible = true;\n        while (num > 0) {\n            long digit = num % 10;\n            if (digit == 0 || i % digit != 0) {\n                divisible = false;\n                break;\n            }\n            num /= 10;\n        }\n        if (divisible) {\n            result.push_back(i);\n        }\n    }\n    return result;",
    "    std::vector<long> result;\n    for (long i = startnum; i <= endnum; i++) {\n        long num = i;\n        bool divisible = true;\n        while (num > 0) {\n            long digit = num % 10;\n            if (digit == 0) {\n                divisible = false;\n                break;\n            }\n            if (i % digit != 0) {\n                divisible = false;\n                break;\n            }\n            num /= 10;\n        }\n        if (divisible) {\n            result.push_back(i);\n        }\n    }\n    return result;",
    "    std::vector<long> result;\n    for (long i = startnum; i <= endnum; i++) {\n        bool is_divisible = true;\n        long num = i;\n        while (num > 0) {\n            long digit = num % 10;\n            if (digit == 0 || i % digit != 0) {\n                is_divisible = false;\n                break;\n            }\n            num /= 10;\n        }\n        if (is_divisible) {\n            result.push_back(i);\n        }\n    }\n    return result;",
    "    std::vector<long> result;\n    for (long i = startnum; i <= endnum; i++) {\n        bool flag = true;\n        long temp = i;\n        while (temp > 0) {\n            long digit = temp % 10;\n            if (digit == 0) {\n                flag = false;\n                break;\n            }\n            if (i % digit != 0) {\n                flag = false;\n                break;\n            }\n            temp /= 10;\n        }\n        if (flag) {\n            result.push_back(i);\n        }\n    }\n    return result;",
    "    std::vector<long> result;\n    for(long i = startnum; i <= endnum; i++) {\n        long num = i;\n        bool divisible = true;\n        while(num > 0) {\n            long digit = num % 10;\n            if(digit == 0 || i % digit != 0) {\n                divisible = false;\n                break;\n            }\n            num /= 10;\n        }\n        if(divisible) {\n            result.push_back(i);\n        }\n    }\n    return result;",
    "    std::vector<long> result;\n    for (long i = startnum; i <= endnum; i++) {\n        std::string num = std::to_string(i);\n        bool divisible = true;\n        for (char c : num) {\n            if (c == '0') {\n                divisible = false;\n                break;\n            }\n            if (i % (c - '0') != 0) {\n                divisible = false;\n                break;\n            }\n        }\n        if (divisible) {\n            result.push_back(i);\n        }\n    }\n    return result;",
    "    std::vector<long> result;\n    for (long i = startnum; i <= endnum; i++) {\n        std::string s = std::to_string(i);\n        bool flag = true;\n        for (auto c : s) {\n            if (i % (c - '0') != 0) {\n                flag = false;\n                break;\n            }\n        }\n        if (flag) {\n            result.push_back(i);\n        }\n    }\n    return result;",
    "    std::vector<long> result;\n    for (long i = startnum; i <= endnum; i++) {\n        bool flag = true;\n        long num = i;\n        while (num > 0) {\n            long digit = num % 10;\n            if (digit == 0 || i % digit != 0) {\n                flag = false;\n                break;\n            }\n            num /= 10;\n        }\n        if (flag) {\n            result.push_back(i);\n        }\n    }\n    return result;",
    "    std::vector<long> result;\n    for (long i = startnum; i <= endnum; i++) {\n        std::string s = std::to_string(i);\n        bool flag = true;\n        for (int j = 0; j < s.size(); j++) {\n            if (s[j] == '0') {\n                flag = false;\n                break;\n            }\n            if (i % (s[j] - '0') != 0) {\n                flag = false;\n                break;\n            }\n        }\n        if (flag) {\n            result.push_back(i);\n        }\n    }\n    return result;",
    "    std::vector<long> result;\n    for (long i = startnum; i <= endnum; i++) {\n        bool is_divisible = true;\n        long num = i;\n        while (num > 0) {\n            long digit = num % 10;\n            if (digit == 0 || i % digit != 0) {\n                is_divisible = false;\n                break;\n            }\n            num /= 10;\n        }\n        if (is_divisible) {\n            result.push_back(i);\n        }\n    }\n    return result;",
    "    std::vector<long> result;\n    for (long i = startnum; i <= endnum; i++) {\n        bool is_divisible = true;\n        long num = i;\n        while (num > 0) {\n            int digit = num % 10;\n            if (digit == 0 || i % digit != 0) {\n                is_divisible = false;\n                break;\n            }\n            num /= 10;\n        }\n        if (is_divisible) {\n            result.push_back(i);\n        }\n    }\n    return result;",
    "    std::vector<long> result;\n    for (long i = startnum; i <= endnum; i++) {\n        long num = i;\n        bool divisible = true;\n        while (num > 0) {\n            long digit = num % 10;\n            if (digit == 0 || i % digit != 0) {\n                divisible = false;\n                break;\n            }\n            num /= 10;\n        }\n        if (divisible) {\n            result.push_back(i);\n        }\n    }\n    return result;",
    "    std::vector<long> result;\n    for (long i = startnum; i <= endnum; i++) {\n        bool is_divisible = true;\n        long temp = i;\n        while (temp > 0) {\n            int digit = temp % 10;\n            if (digit == 0 || i % digit != 0) {\n                is_divisible = false;\n                break;\n            }\n            temp /= 10;\n        }\n        if (is_divisible) {\n            result.push_back(i);\n        }\n    }\n    return result;",
    "    std::vector<long> result;\n    for (long i = startnum; i <= endnum; i++) {\n        long num = i;\n        bool divisible = true;\n        while (num > 0) {\n            long digit = num % 10;\n            if (digit == 0 || i % digit != 0) {\n                divisible = false;\n                break;\n            }\n            num = num / 10;\n        }\n        if (divisible) {\n            result.push_back(i);\n        }\n    }\n    return result;",
    "\tstd::vector<long> result;\n\tfor (long i = startnum; i <= endnum; i++) {\n\t\tlong num = i;\n\t\tbool is_divisible = true;\n\t\twhile (num > 0) {\n\t\t\tlong digit = num % 10;\n\t\t\tif (digit == 0) {\n\t\t\t\tis_divisible = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (i % digit != 0) {\n\t\t\t\tis_divisible = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tnum /= 10;\n\t\t}\n\t\tif (is_divisible) {\n\t\t\tresult.push_back(i);\n\t\t}\n\t}\n\treturn result;",
    "    std::vector<long> result;\n    for (long i = startnum; i <= endnum; i++) {\n        bool is_divisible = true;\n        long num = i;\n        while (num > 0) {\n            long digit = num % 10;\n            if (digit == 0) {\n                is_divisible = false;\n                break;\n            }\n            if (i % digit != 0) {\n                is_divisible = false;\n                break;\n            }\n            num /= 10;\n        }\n        if (is_divisible) {\n            result.push_back(i);\n        }\n    }\n    return result;",
    "    std::vector<long> result;\n    for (long i = startnum; i <= endnum; i++) {\n        std::string s = std::to_string(i);\n        bool divisible = true;\n        for (int j = 0; j < s.length(); j++) {\n            if (s[j] == '0') {\n                divisible = false;\n                break;\n            }\n            if (i % (s[j] - '0') != 0) {\n                divisible = false;\n                break;\n            }\n        }\n        if (divisible) {\n            result.push_back(i);\n        }\n    }\n    return result;",
    "    std::vector<long> result;\n    for (long i = startnum; i <= endnum; i++) {\n        bool divisible = true;\n        long num = i;\n        while (num > 0) {\n            long digit = num % 10;\n            if (digit == 0 || i % digit != 0) {\n                divisible = false;\n                break;\n            }\n            num /= 10;\n        }\n        if (divisible) {\n            result.push_back(i);\n        }\n    }\n    return result;",
    "    std::vector<long> result;\n    for (long i = startnum; i <= endnum; i++) {\n        std::string s = std::to_string(i);\n        bool is_divisible = true;\n        for (auto c : s) {\n            if (c == '0') {\n                is_divisible = false;\n                break;\n            }\n            if (i % (c - '0') != 0) {\n                is_divisible = false;\n                break;\n            }\n        }\n        if (is_divisible) {\n            result.push_back(i);\n        }\n    }\n    return result;",
    "    std::vector<long> result;\n    for (long i = startnum; i <= endnum; i++) {\n        bool is_divisible = true;\n        long num = i;\n        while (num > 0) {\n            long digit = num % 10;\n            if (digit == 0 || i % digit != 0) {\n                is_divisible = false;\n                break;\n            }\n            num /= 10;\n        }\n        if (is_divisible) {\n            result.push_back(i);\n        }\n    }\n    return result;",
    "    std::vector<long> result;\n    for (long i = startnum; i <= endnum; i++) {\n        bool is_divisible = true;\n        long num = i;\n        while (num > 0) {\n            long digit = num % 10;\n            if (digit == 0 || i % digit != 0) {\n                is_divisible = false;\n                break;\n            }\n            num /= 10;\n        }\n        if (is_divisible) {\n            result.push_back(i);\n        }\n    }\n    return result;",
    "    std::vector<long> result;\n    for(long i = startnum; i <= endnum; i++) {\n        long num = i;\n        bool is_divisible = true;\n        while(num > 0) {\n            long digit = num % 10;\n            if(digit == 0) {\n                is_divisible = false;\n                break;\n            }\n            if(i % digit != 0) {\n                is_divisible = false;\n                break;\n            }\n            num /= 10;\n        }\n        if(is_divisible) {\n            result.push_back(i);\n        }\n    }\n    return result;",
    "    std::vector<long> result;\n    for (long i = startnum; i <= endnum; ++i) {\n        long num = i;\n        bool divisible = true;\n        while (num > 0) {\n            long digit = num % 10;\n            if (digit == 0 || i % digit != 0) {\n                divisible = false;\n                break;\n            }\n            num /= 10;\n        }\n        if (divisible) {\n            result.push_back(i);\n        }\n    }\n    return result;",
    "    std::vector<long> result;\n    for (long i = startnum; i <= endnum; i++) {\n        std::string s = std::to_string(i);\n        bool is_divisible = true;\n        for (auto c : s) {\n            if (c == '0') {\n                is_divisible = false;\n                break;\n            }\n            if (i % (c - '0') != 0) {\n                is_divisible = false;\n                break;\n            }\n        }\n        if (is_divisible) {\n            result.push_back(i);\n        }\n    }\n    return result;",
    "    std::vector<long> result;\n    for (long i = startnum; i <= endnum; i++) {\n        long num = i;\n        bool divisible = true;\n        while (num > 0) {\n            long digit = num % 10;\n            if (digit == 0 || i % digit != 0) {\n                divisible = false;\n                break;\n            }\n            num /= 10;\n        }\n        if (divisible) {\n            result.push_back(i);\n        }\n    }\n    return result;",
    "    std::vector<long> result;\n    for (long i = startnum; i <= endnum; i++) {\n        long num = i;\n        bool divisible = true;\n        while (num > 0) {\n            long digit = num % 10;\n            if (digit == 0 || i % digit != 0) {\n                divisible = false;\n                break;\n            }\n            num /= 10;\n        }\n        if (divisible) {\n            result.push_back(i);\n        }\n    }\n    return result;",
    "    std::vector<long> result;\n    for(long i = startnum; i <= endnum; i++) {\n        long num = i;\n        bool flag = true;\n        while(num) {\n            int digit = num % 10;\n            if(digit == 0 || i % digit != 0) {\n                flag = false;\n                break;\n            }\n            num /= 10;\n        }\n        if(flag)\n            result.push_back(i);\n    }\n    return result;",
    "    std::vector<long> result;\n    for (long i = startnum; i <= endnum; i++) {\n        bool flag = true;\n        long num = i;\n        while (num) {\n            long digit = num % 10;\n            if (digit == 0 || i % digit != 0) {\n                flag = false;\n                break;\n            }\n            num /= 10;\n        }\n        if (flag) {\n            result.push_back(i);\n        }\n    }\n    return result;",
    "    std::vector<long> result;\n    for (long i = startnum; i <= endnum; i++) {\n        bool divisible = true;\n        long n = i;\n        while (n > 0) {\n            int digit = n % 10;\n            if (digit == 0 || i % digit != 0) {\n                divisible = false;\n                break;\n            }\n            n /= 10;\n        }\n        if (divisible) {\n            result.push_back(i);\n        }\n    }\n    return result;",
    "    std::vector<long> result;\n    for (long i = startnum; i <= endnum; i++) {\n        bool flag = true;\n        long num = i;\n        while (num > 0) {\n            long digit = num % 10;\n            if (digit == 0 || i % digit != 0) {\n                flag = false;\n                break;\n            }\n            num /= 10;\n        }\n        if (flag) {\n            result.push_back(i);\n        }\n    }\n    return result;",
    "    std::vector<long> result;\n    for (long i = startnum; i <= endnum; i++) {\n        std::string str = std::to_string(i);\n        bool flag = true;\n        for (auto c : str) {\n            if (i % (c - '0') != 0) {\n                flag = false;\n                break;\n            }\n        }\n        if (flag) {\n            result.push_back(i);\n        }\n    }\n    return result;",
    "    std::vector<long> result;\n    for (long i = startnum; i <= endnum; i++) {\n        long num = i;\n        bool divisible = true;\n        while (num > 0) {\n            long digit = num % 10;\n            if (digit == 0) {\n                divisible = false;\n                break;\n            }\n            if (i % digit != 0) {\n                divisible = false;\n                break;\n            }\n            num /= 10;\n        }\n        if (divisible) {\n            result.push_back(i);\n        }\n    }\n    return result;",
    "\tstd::vector<long> result;\n\tfor(long i=startnum;i<=endnum;i++) {\n\t\tlong temp = i;\n\t\tbool is_divisible = true;\n\t\twhile(temp>0) {\n\t\t\tlong digit = temp%10;\n\t\t\tif(digit==0) {\n\t\t\t\tis_divisible = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif(i%digit!=0) {\n\t\t\t\tis_divisible = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\ttemp = temp/10;\n\t\t}\n\t\tif(is_divisible) {\n\t\t\tresult.push_back(i);\n\t\t}\n\t}\n\treturn result;",
    "    std::vector<long> result;\n    for (long i = startnum; i <= endnum; i++) {\n        std::string s = std::to_string(i);\n        bool flag = true;\n        for (char c : s) {\n            int digit = c - '0';\n            if (digit == 0) {\n                flag = false;\n                break;\n            }\n            if (i % digit != 0) {\n                flag = false;\n                break;\n            }\n        }\n        if (flag) {\n            result.push_back(i);\n        }\n    }\n    return result;",
    "    std::vector<long> result;\n    for (long i = startnum; i <= endnum; i++) {\n        long num = i;\n        bool divisible = true;\n        while (num > 0) {\n            long digit = num % 10;\n            if (digit == 0 || i % digit != 0) {\n                divisible = false;\n                break;\n            }\n            num /= 10;\n        }\n        if (divisible) {\n            result.push_back(i);\n        }\n    }\n    return result;",
    "    std::vector<long> result;\n    for(long i = startnum; i <= endnum; i++) {\n        bool is_divisible = true;\n        long num = i;\n        while(num > 0) {\n            long digit = num % 10;\n            if(digit == 0 || i % digit != 0) {\n                is_divisible = false;\n                break;\n            }\n            num /= 10;\n        }\n        if(is_divisible) {\n            result.push_back(i);\n        }\n    }\n    return result;",
    "    std::vector<long> result;\n    for (long i = startnum; i <= endnum; i++) {\n        bool flag = true;\n        long temp = i;\n        while (temp > 0) {\n            long digit = temp % 10;\n            if (digit == 0 || i % digit != 0) {\n                flag = false;\n                break;\n            }\n            temp /= 10;\n        }\n        if (flag) {\n            result.push_back(i);\n        }\n    }\n    return result;",
    "    std::vector<long> result;\n    for (long i = startnum; i <= endnum; i++) {\n        bool is_divisible = true;\n        long temp = i;\n        while (temp > 0) {\n            long digit = temp % 10;\n            if (digit == 0 || i % digit != 0) {\n                is_divisible = false;\n                break;\n            }\n            temp /= 10;\n        }\n        if (is_divisible) {\n            result.push_back(i);\n        }\n    }\n    return result;",
    "    std::vector<long> result;\n    for (long i = startnum; i <= endnum; i++) {\n        bool is_divisible = true;\n        long num = i;\n        while (num > 0) {\n            long digit = num % 10;\n            if (digit == 0 || i % digit != 0) {\n                is_divisible = false;\n                break;\n            }\n            num /= 10;\n        }\n        if (is_divisible) {\n            result.push_back(i);\n        }\n    }\n    return result;",
    "    std::vector<long> result;\n    for (long i = startnum; i <= endnum; i++) {\n        long temp = i;\n        bool flag = true;\n        while (temp > 0) {\n            long digit = temp % 10;\n            if (digit == 0 || i % digit != 0) {\n                flag = false;\n                break;\n            }\n            temp /= 10;\n        }\n        if (flag) {\n            result.push_back(i);\n        }\n    }\n    return result;",
    "    std::vector<long> result;\n    for (long i = startnum; i <= endnum; i++) {\n        long num = i;\n        bool is_divisible = true;\n        while (num > 0) {\n            int digit = num % 10;\n            if (digit == 0 || i % digit != 0) {\n                is_divisible = false;\n                break;\n            }\n            num /= 10;\n        }\n        if (is_divisible) {\n            result.push_back(i);\n        }\n    }\n    return result;",
    "    std::vector<long> v;\n    for(long i = startnum; i <= endnum; i++) {\n        long num = i;\n        bool flag = true;\n        while(num > 0) {\n            long digit = num % 10;\n            if(digit == 0) {\n                flag = false;\n                break;\n            }\n            if(i % digit != 0) {\n                flag = false;\n                break;\n            }\n            num /= 10;\n        }\n        if(flag) {\n            v.push_back(i);\n        }\n    }\n    return v;",
    "    std::vector<long> result;\n    for (long i = startnum; i <= endnum; i++) {\n        bool flag = true;\n        long num = i;\n        while (num > 0) {\n            long digit = num % 10;\n            if (digit == 0 || i % digit != 0) {\n                flag = false;\n                break;\n            }\n            num /= 10;\n        }\n        if (flag) {\n            result.push_back(i);\n        }\n    }\n    return result;",
    "\tstd::vector<long> result;\n\tfor (long i = startnum; i <= endnum; i++) {\n\t\tbool divisible = true;\n\t\tlong num = i;\n\t\twhile (num > 0) {\n\t\t\tlong digit = num % 10;\n\t\t\tif (digit == 0 || i % digit != 0) {\n\t\t\t\tdivisible = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tnum /= 10;\n\t\t}\n\t\tif (divisible) {\n\t\t\tresult.push_back(i);\n\t\t}\n\t}\n\treturn result;",
    "    std::vector<long> result;\n    for (long i = startnum; i <= endnum; i++) {\n        long num = i;\n        bool is_divisible = true;\n        while (num > 0) {\n            int digit = num % 10;\n            if (digit == 0 || i % digit != 0) {\n                is_divisible = false;\n                break;\n            }\n            num /= 10;\n        }\n        if (is_divisible) {\n            result.push_back(i);\n        }\n    }\n    return result;",
    "    std::vector<long> result;\n    for (long i = startnum; i <= endnum; i++) {\n        long num = i;\n        bool divisible = true;\n        while (num > 0) {\n            long digit = num % 10;\n            if (digit == 0 || i % digit != 0) {\n                divisible = false;\n                break;\n            }\n            num /= 10;\n        }\n        if (divisible) {\n            result.push_back(i);\n        }\n    }\n    return result;",
    "    std::vector<long> result;\n    for(long i = startnum; i <= endnum; i++) {\n        long temp = i;\n        bool flag = true;\n        while(temp > 0) {\n            long digit = temp % 10;\n            if(digit == 0) {\n                flag = false;\n                break;\n            }\n            if(i % digit != 0) {\n                flag = false;\n                break;\n            }\n            temp /= 10;\n        }\n        if(flag) {\n            result.push_back(i);\n        }\n    }\n    return result;",
    "    std::vector<long> result;\n    for(long i = startnum; i <= endnum; i++) {\n        long num = i;\n        bool divisible = true;\n        while(num > 0) {\n            long digit = num % 10;\n            if(digit == 0) {\n                divisible = false;\n                break;\n            }\n            if(i % digit != 0) {\n                divisible = false;\n                break;\n            }\n            num /= 10;\n        }\n        if(divisible) {\n            result.push_back(i);\n        }\n    }\n    return result;",
    "\tstd::vector<long> result;\n\tfor (long i = startnum; i <= endnum; i++) {\n\t\tlong num = i;\n\t\tbool is_divisible = true;\n\t\twhile (num > 0) {\n\t\t\tlong digit = num % 10;\n\t\t\tif (digit == 0 || i % digit != 0) {\n\t\t\t\tis_divisible = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tnum /= 10;\n\t\t}\n\t\tif (is_divisible) {\n\t\t\tresult.push_back(i);\n\t\t}\n\t}\n\treturn result;",
    "    std::vector<long> result;\n    for(long i = startnum; i <= endnum; i++) {\n        std::string str = std::to_string(i);\n        bool flag = true;\n        for(char c : str) {\n            if(i % (c - '0') != 0) {\n                flag = false;\n                break;\n            }\n        }\n        if(flag) {\n            result.push_back(i);\n        }\n    }\n    return result;",
    "    std::vector<long> result;\n    for(long i = startnum; i <= endnum; i++) {\n        long num = i;\n        bool divisible = true;\n        while(num > 0) {\n            long digit = num % 10;\n            if(digit == 0 || i % digit != 0) {\n                divisible = false;\n                break;\n            }\n            num /= 10;\n        }\n        if(divisible) {\n            result.push_back(i);\n        }\n    }\n    return result;",
    "    std::vector<long> divisible_nums;\n    for (long i = startnum; i <= endnum; i++) {\n        long num = i;\n        bool is_divisible = true;\n        while (num > 0) {\n            long digit = num % 10;\n            if (digit == 0) {\n                is_divisible = false;\n                break;\n            }\n            if (i % digit != 0) {\n                is_divisible = false;\n                break;\n            }\n            num /= 10;\n        }\n        if (is_divisible) {\n            divisible_nums.push_back(i);\n        }\n    }\n    return divisible_nums;",
    "    std::vector<long> result;\n    for(long i = startnum; i <= endnum; i++) {\n        bool flag = true;\n        long num = i;\n        while(num > 0) {\n            long digit = num % 10;\n            if(digit == 0) {\n                flag = false;\n                break;\n            }\n            if(i % digit != 0) {\n                flag = false;\n                break;\n            }\n            num /= 10;\n        }\n        if(flag) {\n            result.push_back(i);\n        }\n    }\n    return result;",
    "    std::vector<long> result;\n    for (long i = startnum; i <= endnum; ++i) {\n        std::string s = std::to_string(i);\n        bool flag = true;\n        for (char c : s) {\n            if (c == '0') {\n                flag = false;\n                break;\n            }\n            if (i % (c - '0') != 0) {\n                flag = false;\n                break;\n            }\n        }\n        if (flag) {\n            result.push_back(i);\n        }\n    }\n    return result;",
    "    std::vector<long> result;\n    for (long i = startnum; i <= endnum; i++) {\n        long num = i;\n        bool flag = true;\n        while (num > 0) {\n            long digit = num % 10;\n            if (digit == 0 || i % digit != 0) {\n                flag = false;\n                break;\n            }\n            num /= 10;\n        }\n        if (flag) {\n            result.push_back(i);\n        }\n    }\n    return result;",
    "    std::vector<long> result;\n    for (long i = startnum; i <= endnum; i++) {\n        long temp = i;\n        bool flag = true;\n        while (temp > 0) {\n            long digit = temp % 10;\n            if (digit == 0 || i % digit != 0) {\n                flag = false;\n                break;\n            }\n            temp /= 10;\n        }\n        if (flag) {\n            result.push_back(i);\n        }\n    }\n    return result;",
    "    std::vector<long> result;\n    for (long i = startnum; i <= endnum; i++) {\n        long num = i;\n        bool is_divisible = true;\n        while (num > 0) {\n            long digit = num % 10;\n            if (digit == 0) {\n                is_divisible = false;\n                break;\n            }\n            if (i % digit != 0) {\n                is_divisible = false;\n                break;\n            }\n            num /= 10;\n        }\n        if (is_divisible) {\n            result.push_back(i);\n        }\n    }\n    return result;",
    "    std::vector<long> result;\n    for (long i = startnum; i <= endnum; i++) {\n        std::stringstream ss;\n        ss << i;\n        std::string s = ss.str();\n        bool flag = true;\n        for (auto c : s) {\n            if (i % (c - '0') != 0) {\n                flag = false;\n                break;\n            }\n        }\n        if (flag) {\n            result.push_back(i);\n        }\n    }\n    return result;",
    "    std::vector<long> result;\n    for (long i = startnum; i <= endnum; i++) {\n        bool is_divisible = true;\n        long num = i;\n        while (num > 0) {\n            long digit = num % 10;\n            if (digit == 0) {\n                is_divisible = false;\n                break;\n            }\n            if (i % digit != 0) {\n                is_divisible = false;\n                break;\n            }\n            num /= 10;\n        }\n        if (is_divisible) {\n            result.push_back(i);\n        }\n    }\n    return result;",
    "    std::vector<long> result;\n    for (long i = startnum; i <= endnum; i++) {\n        bool is_divisible = true;\n        long temp = i;\n        while (temp > 0) {\n            long digit = temp % 10;\n            if (digit == 0) {\n                is_divisible = false;\n                break;\n            }\n            if (i % digit != 0) {\n                is_divisible = false;\n                break;\n            }\n            temp /= 10;\n        }\n        if (is_divisible) {\n            result.push_back(i);\n        }\n    }\n    return result;",
    "    std::vector<long> result;\n    for (long i = startnum; i <= endnum; i++) {\n        std::string s = std::to_string(i);\n        bool flag = true;\n        for (int j = 0; j < s.size(); j++) {\n            if (s[j] == '0') {\n                flag = false;\n                break;\n            }\n            if (i % (s[j] - '0') != 0) {\n                flag = false;\n                break;\n            }\n        }\n        if (flag) {\n            result.push_back(i);\n        }\n    }\n    return result;",
    "    std::vector<long> result;\n    for (long i = startnum; i <= endnum; i++) {\n        std::string s = std::to_string(i);\n        bool flag = true;\n        for (int j = 0; j < s.length(); j++) {\n            if (s[j] == '0') {\n                flag = false;\n                break;\n            }\n            if (i % (s[j] - '0') != 0) {\n                flag = false;\n                break;\n            }\n        }\n        if (flag) {\n            result.push_back(i);\n        }\n    }\n    return result;",
    "    std::vector<long> result;\n    for (long i = startnum; i <= endnum; i++) {\n        bool divisible = true;\n        long num = i;\n        while (num > 0) {\n            int digit = num % 10;\n            if (digit == 0) {\n                divisible = false;\n                break;\n            }\n            if (i % digit != 0) {\n                divisible = false;\n                break;\n            }\n            num /= 10;\n        }\n        if (divisible) {\n            result.push_back(i);\n        }\n    }\n    return result;",
    "    std::vector<long> result;\n    for (long i = startnum; i <= endnum; i++) {\n        bool is_divisible = true;\n        long num = i;\n        while (num > 0) {\n            int digit = num % 10;\n            if (digit == 0 || i % digit != 0) {\n                is_divisible = false;\n                break;\n            }\n            num /= 10;\n        }\n        if (is_divisible) {\n            result.push_back(i);\n        }\n    }\n    return result;",
    "    std::vector<long> result;\n    for(long i = startnum; i <= endnum; i++) {\n        std::string s = std::to_string(i);\n        bool flag = true;\n        for(char c : s) {\n            if(c == '0') {\n                flag = false;\n                break;\n            }\n            if(i % (c - '0') != 0) {\n                flag = false;\n                break;\n            }\n        }\n        if(flag) {\n            result.push_back(i);\n        }\n    }\n    return result;",
    "    std::vector<long> res;\n    for (long i = startnum; i <= endnum; i++) {\n        std::string str = std::to_string(i);\n        bool flag = true;\n        for (int j = 0; j < str.size(); j++) {\n            if (str[j] == '0') {\n                flag = false;\n                break;\n            }\n            if (i % (str[j] - '0') != 0) {\n                flag = false;\n                break;\n            }\n        }\n        if (flag) {\n            res.push_back(i);\n        }\n    }\n    return res;",
    "    std::vector<long> result;\n    for (long i = startnum; i <= endnum; i++) {\n        long num = i;\n        bool is_divisible = true;\n        while (num > 0) {\n            long digit = num % 10;\n            if (digit == 0) {\n                is_divisible = false;\n                break;\n            }\n            if (i % digit != 0) {\n                is_divisible = false;\n                break;\n            }\n            num /= 10;\n        }\n        if (is_divisible) {\n            result.push_back(i);\n        }\n    }\n    return result;",
    "    std::vector<long> result;\n    for (long i = startnum; i <= endnum; i++) {\n        std::string num = std::to_string(i);\n        bool flag = true;\n        for (int j = 0; j < num.length(); j++) {\n            if (num[j] == '0') {\n                flag = false;\n                break;\n            }\n            if (i % (num[j] - '0') != 0) {\n                flag = false;\n                break;\n            }\n        }\n        if (flag) {\n            result.push_back(i);\n        }\n    }\n    return result;",
    "    std::vector<long> result;\n    for (long i = startnum; i <= endnum; i++) {\n        bool divisible = true;\n        long num = i;\n        while (num > 0) {\n            long digit = num % 10;\n            if (digit == 0) {\n                divisible = false;\n                break;\n            }\n            if (i % digit != 0) {\n                divisible = false;\n                break;\n            }\n            num /= 10;\n        }\n        if (divisible) {\n            result.push_back(i);\n        }\n    }\n    return result;",
    "    std::vector<long> result;\n    for (long i = startnum; i <= endnum; i++) {\n        bool flag = true;\n        long num = i;\n        while (num > 0) {\n            long digit = num % 10;\n            if (digit == 0 || i % digit != 0) {\n                flag = false;\n                break;\n            }\n            num /= 10;\n        }\n        if (flag) {\n            result.push_back(i);\n        }\n    }\n    return result;",
    "    std::vector<long> result;\n    for(long i = startnum; i <= endnum; i++) {\n        bool is_divisible = true;\n        long num = i;\n        while(num > 0) {\n            long digit = num % 10;\n            if(digit == 0 || i % digit != 0) {\n                is_divisible = false;\n                break;\n            }\n            num /= 10;\n        }\n        if(is_divisible) {\n            result.push_back(i);\n        }\n    }\n    return result;",
    "    std::vector<long> divisible_numbers;\n    for (long i = startnum; i <= endnum; i++) {\n        long num = i;\n        bool is_divisible = true;\n        while (num > 0) {\n            long digit = num % 10;\n            if (digit != 0 && i % digit != 0) {\n                is_divisible = false;\n                break;\n            }\n            num /= 10;\n        }\n        if (is_divisible) {\n            divisible_numbers.push_back(i);\n        }\n    }\n    return divisible_numbers;",
    "    std::vector<long> result;\n    for (long i = startnum; i <= endnum; i++) {\n        bool is_divisible = true;\n        long num = i;\n        while (num > 0) {\n            long digit = num % 10;\n            if (digit == 0) {\n                is_divisible = false;\n                break;\n            }\n            if (i % digit != 0) {\n                is_divisible = false;\n                break;\n            }\n            num /= 10;\n        }\n        if (is_divisible) {\n            result.push_back(i);\n        }\n    }\n    return result;",
    "    std::vector<long> result;\n    for (long i = startnum; i <= endnum; i++) {\n        long temp = i;\n        bool flag = true;\n        while (temp > 0) {\n            long digit = temp % 10;\n            if (digit == 0 || i % digit != 0) {\n                flag = false;\n                break;\n            }\n            temp /= 10;\n        }\n        if (flag) {\n            result.push_back(i);\n        }\n    }\n    return result;",
    "\tstd::vector<long> v;\n\tfor (long i = startnum; i <= endnum; i++) {\n\t\tlong num = i;\n\t\tbool flag = true;\n\t\twhile (num > 0) {\n\t\t\tlong digit = num % 10;\n\t\t\tif (digit == 0) {\n\t\t\t\tflag = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (i % digit != 0) {\n\t\t\t\tflag = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tnum /= 10;\n\t\t}\n\t\tif (flag) {\n\t\t\tv.push_back(i);\n\t\t}\n\t}\n\treturn v;",
    "    std::vector<long> result;\n    for(long i = startnum; i <= endnum; i++) {\n        bool divisible = true;\n        long num = i;\n        while(num > 0) {\n            long digit = num % 10;\n            if(digit == 0 || i % digit != 0) {\n                divisible = false;\n                break;\n            }\n            num /= 10;\n        }\n        if(divisible) {\n            result.push_back(i);\n        }\n    }\n    return result;",
    "    std::vector<long> result;\n    for (long i = startnum; i <= endnum; i++) {\n        bool flag = true;\n        long temp = i;\n        while (temp > 0) {\n            long digit = temp % 10;\n            if (digit == 0 || i % digit != 0) {\n                flag = false;\n                break;\n            }\n            temp /= 10;\n        }\n        if (flag) {\n            result.push_back(i);\n        }\n    }\n    return result;",
    "    std::vector<long> result;\n    for (long i = startnum; i <= endnum; i++) {\n        std::vector<int> digits;\n        long num = i;\n        while (num > 0) {\n            digits.push_back(num % 10);\n            num /= 10;\n        }\n        bool is_divisible = true;\n        for (int digit : digits) {\n            if (digit == 0) {\n                is_divisible = false;\n                break;\n            }\n            if (i % digit != 0) {\n                is_divisible = false;\n                break;\n            }\n        }\n        if (is_divisible) {\n            result.push_back(i);\n        }\n    }\n    return result;",
    "    std::vector<long> result;\n    for (long i = startnum; i <= endnum; i++) {\n        bool flag = true;\n        long num = i;\n        while (num > 0) {\n            long digit = num % 10;\n            if (digit == 0 || i % digit != 0) {\n                flag = false;\n                break;\n            }\n            num = num / 10;\n        }\n        if (flag) {\n            result.push_back(i);\n        }\n    }\n    return result;",
    "    std::vector<long> result;\n    for (long i = startnum; i <= endnum; i++) {\n        std::string str = std::to_string(i);\n        bool flag = true;\n        for (char c : str) {\n            int digit = c - '0';\n            if (digit == 0) {\n                flag = false;\n                break;\n            }\n            if (i % digit != 0) {\n                flag = false;\n                break;\n            }\n        }\n        if (flag) {\n            result.push_back(i);\n        }\n    }\n    return result;",
    "    std::vector<long> result;\n    for(long i = startnum; i <= endnum; i++) {\n        long num = i;\n        bool is_divisible = true;\n        while(num > 0) {\n            int digit = num % 10;\n            if(digit == 0) {\n                is_divisible = false;\n                break;\n            }\n            if(i % digit != 0) {\n                is_divisible = false;\n                break;\n            }\n            num /= 10;\n        }\n        if(is_divisible) {\n            result.push_back(i);\n        }\n    }\n    return result;",
    "    std::vector<long> result;\n    for (long i = startnum; i <= endnum; i++) {\n        std::string str = std::to_string(i);\n        bool is_divisible = true;\n        for (auto c : str) {\n            if (c == '0') {\n                is_divisible = false;\n                break;\n            }\n            if (i % (c - '0') != 0) {\n                is_divisible = false;\n                break;\n            }\n        }\n        if (is_divisible) {\n            result.push_back(i);\n        }\n    }\n    return result;",
    "    std::vector<long> result;\n    for (long i = startnum; i <= endnum; i++) {\n        long temp = i;\n        bool flag = true;\n        while (temp > 0) {\n            int digit = temp % 10;\n            if (digit == 0 || i % digit != 0) {\n                flag = false;\n                break;\n            }\n            temp /= 10;\n        }\n        if (flag) {\n            result.push_back(i);\n        }\n    }\n    return result;",
    "    std::vector<long> result;\n    for (long i = startnum; i <= endnum; i++) {\n        bool divisible = true;\n        long num = i;\n        while (num > 0) {\n            long digit = num % 10;\n            if (digit == 0 || i % digit != 0) {\n                divisible = false;\n                break;\n            }\n            num /= 10;\n        }\n        if (divisible) {\n            result.push_back(i);\n        }\n    }\n    return result;",
    "    std::vector<long> result;\n    for (long i = startnum; i <= endnum; i++) {\n        bool divisible = true;\n        long num = i;\n        while (num > 0) {\n            long digit = num % 10;\n            if (digit == 0 || i % digit != 0) {\n                divisible = false;\n                break;\n            }\n            num /= 10;\n        }\n        if (divisible) {\n            result.push_back(i);\n        }\n    }\n    return result;",
    "    std::vector<long> result;\n    for (long i = startnum; i <= endnum; i++) {\n        bool flag = true;\n        long num = i;\n        while (num > 0) {\n            long digit = num % 10;\n            if (digit == 0) {\n                flag = false;\n                break;\n            }\n            if (i % digit != 0) {\n                flag = false;\n                break;\n            }\n            num /= 10;\n        }\n        if (flag) {\n            result.push_back(i);\n        }\n    }\n    return result;",
    "  std::vector<long> result;\n  for (long i = startnum; i <= endnum; i++) {\n    long num = i;\n    bool divisible = true;\n    while (num > 0) {\n      long digit = num % 10;\n      if (digit == 0 || i % digit != 0) {\n        divisible = false;\n        break;\n      }\n      num /= 10;\n    }\n    if (divisible) {\n      result.push_back(i);\n    }\n  }\n  return result;",
    "    std::vector<long> result;\n    for (long i = startnum; i <= endnum; i++) {\n        bool flag = true;\n        long num = i;\n        while (num > 0) {\n            long digit = num % 10;\n            if (digit == 0) {\n                flag = false;\n                break;\n            }\n            if (i % digit != 0) {\n                flag = false;\n                break;\n            }\n            num /= 10;\n        }\n        if (flag) {\n            result.push_back(i);\n        }\n    }\n    return result;",
    "    std::vector<long> result;\n    for (long i = startnum; i <= endnum; i++) {\n        long num = i;\n        bool is_divisible = true;\n        while (num > 0) {\n            long digit = num % 10;\n            if (digit == 0 || i % digit != 0) {\n                is_divisible = false;\n                break;\n            }\n            num /= 10;\n        }\n        if (is_divisible) {\n            result.push_back(i);\n        }\n    }\n    return result;",
    "    std::vector<long> result;\n    for(long i = startnum; i <= endnum; i++) {\n        std::string s = std::to_string(i);\n        bool flag = true;\n        for(char c : s) {\n            if(i % (c - '0') != 0) {\n                flag = false;\n                break;\n            }\n        }\n        if(flag) {\n            result.push_back(i);\n        }\n    }\n    return result;",
    "    std::vector<long> result;\n    for (long i = startnum; i <= endnum; i++) {\n        bool is_divisible = true;\n        long number = i;\n        while (number > 0) {\n            long digit = number % 10;\n            if (digit == 0) {\n                is_divisible = false;\n                break;\n            }\n            if (i % digit != 0) {\n                is_divisible = false;\n                break;\n            }\n            number /= 10;\n        }\n        if (is_divisible) {\n            result.push_back(i);\n        }\n    }\n    return result;",
    "    std::vector<long> result;\n    for (long i = startnum; i <= endnum; i++) {\n        std::string s = std::to_string(i);\n        bool flag = true;\n        for (int j = 0; j < s.length(); j++) {\n            if (s[j] == '0') {\n                flag = false;\n                break;\n            }\n            if (i % (s[j] - '0') != 0) {\n                flag = false;\n                break;\n            }\n        }\n        if (flag) {\n            result.push_back(i);\n        }\n    }\n    return result;",
    "    std::vector<long> result;\n    for (long i = startnum; i <= endnum; i++) {\n        std::string num = std::to_string(i);\n        bool is_divisible = true;\n        for (char c : num) {\n            if (c == '0') {\n                is_divisible = false;\n                break;\n            }\n            if (i % (c - '0') != 0) {\n                is_divisible = false;\n                break;\n            }\n        }\n        if (is_divisible) {\n            result.push_back(i);\n        }\n    }\n    return result;",
    "    std::vector<long> result;\n    for (long i = startnum; i <= endnum; i++) {\n        bool is_divisible = true;\n        long temp = i;\n        while (temp > 0) {\n            long digit = temp % 10;\n            if (digit == 0) {\n                is_divisible = false;\n                break;\n            }\n            if (i % digit != 0) {\n                is_divisible = false;\n                break;\n            }\n            temp /= 10;\n        }\n        if (is_divisible) {\n            result.push_back(i);\n        }\n    }\n    return result;",
    "  std::vector<long> result;\n  for (long i = startnum; i <= endnum; i++) {\n    bool is_divisible = true;\n    long num = i;\n    while (num > 0) {\n      long digit = num % 10;\n      if (digit == 0 || i % digit != 0) {\n        is_divisible = false;\n        break;\n      }\n      num /= 10;\n    }\n    if (is_divisible) {\n      result.push_back(i);\n    }\n  }\n  return result;",
    "    std::vector<long> result;\n    for(long i = startnum; i <= endnum; i++) {\n        bool flag = true;\n        long num = i;\n        while(num) {\n            long digit = num % 10;\n            if(digit == 0) {\n                flag = false;\n                break;\n            }\n            if(i % digit != 0) {\n                flag = false;\n                break;\n            }\n            num = num / 10;\n        }\n        if(flag) {\n            result.push_back(i);\n        }\n    }\n    return result;",
    "    std::vector<long> result;\n    for (long i = startnum; i <= endnum; i++) {\n        bool flag = true;\n        long temp = i;\n        while (temp > 0) {\n            long digit = temp % 10;\n            if (digit == 0) {\n                flag = false;\n                break;\n            }\n            if (i % digit != 0) {\n                flag = false;\n                break;\n            }\n            temp /= 10;\n        }\n        if (flag) {\n            result.push_back(i);\n        }\n    }\n    return result;",
    "    std::vector<long> result;\n    for (long i = startnum; i <= endnum; i++) {\n        long num = i;\n        bool divisible = true;\n        while (num > 0) {\n            long digit = num % 10;\n            if (digit == 0 || i % digit != 0) {\n                divisible = false;\n                break;\n            }\n            num /= 10;\n        }\n        if (divisible) {\n            result.push_back(i);\n        }\n    }\n    return result;",
    "    std::vector<long> result;\n    for (long i = startnum; i <= endnum; i++) {\n        long num = i;\n        bool is_divisible = true;\n        while (num > 0) {\n            long digit = num % 10;\n            if (digit == 0 || i % digit != 0) {\n                is_divisible = false;\n                break;\n            }\n            num /= 10;\n        }\n        if (is_divisible) {\n            result.push_back(i);\n        }\n    }\n    return result;"
  ]
}
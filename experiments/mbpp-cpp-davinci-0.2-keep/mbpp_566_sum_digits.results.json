{
  "name": "mbpp_566_sum_digits",
  "language": "cpp",
  "prompt": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to get the sum of the digits of a non-negative integer.\nlong sum_digits(long n) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_566_sum_digits.py",
  "prompt_terminology": "verbatim",
  "tests": "}\nint main() {\n    auto candidate = sum_digits;\n    assert(candidate((345)) == (12));\n    assert(candidate((12)) == (3));\n    assert(candidate((97)) == (16));\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "results": [
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to get the sum of the digits of a non-negative integer.\nlong sum_digits(long n) {\n    long sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = sum_digits;\n    assert(candidate((345)) == (12));\n    assert(candidate((12)) == (3));\n    assert(candidate((97)) == (16));\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to get the sum of the digits of a non-negative integer.\nlong sum_digits(long n) {\n    long sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = sum_digits;\n    assert(candidate((345)) == (12));\n    assert(candidate((12)) == (3));\n    assert(candidate((97)) == (16));\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to get the sum of the digits of a non-negative integer.\nlong sum_digits(long n) {\n    long sum = 0;\n    while(n > 0) {\n        sum += n % 10;\n        n /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = sum_digits;\n    assert(candidate((345)) == (12));\n    assert(candidate((12)) == (3));\n    assert(candidate((97)) == (16));\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to get the sum of the digits of a non-negative integer.\nlong sum_digits(long n) {\n  if (n == 0) {\n    return 0;\n  }\n  return n % 10 + sum_digits(n / 10);\n}\nint main() {\n    auto candidate = sum_digits;\n    assert(candidate((345)) == (12));\n    assert(candidate((12)) == (3));\n    assert(candidate((97)) == (16));\n}\n",
      "timestamp": 1665510639,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to get the sum of the digits of a non-negative integer.\nlong sum_digits(long n) {\n    if(n<10)\n        return n;\n    else\n        return n%10 + sum_digits(n/10);\n}\nint main() {\n    auto candidate = sum_digits;\n    assert(candidate((345)) == (12));\n    assert(candidate((12)) == (3));\n    assert(candidate((97)) == (16));\n}\n",
      "timestamp": 1665510639,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to get the sum of the digits of a non-negative integer.\nlong sum_digits(long n) {\n    if(n==0)\n        return 0;\n    return (n%10)+sum_digits(n/10);\n}\nint main() {\n    auto candidate = sum_digits;\n    assert(candidate((345)) == (12));\n    assert(candidate((12)) == (3));\n    assert(candidate((97)) == (16));\n}\n",
      "timestamp": 1665510639,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to get the sum of the digits of a non-negative integer.\nlong sum_digits(long n) {\n    long sum = 0;\n    while(n > 0) {\n        sum += n % 10;\n        n /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = sum_digits;\n    assert(candidate((345)) == (12));\n    assert(candidate((12)) == (3));\n    assert(candidate((97)) == (16));\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to get the sum of the digits of a non-negative integer.\nlong sum_digits(long n) {\n    // Write your code here\n    long sum = 0;\n    while(n > 0) {\n        sum += n % 10;\n        n /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = sum_digits;\n    assert(candidate((345)) == (12));\n    assert(candidate((12)) == (3));\n    assert(candidate((97)) == (16));\n}\n",
      "timestamp": 1665510639,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to get the sum of the digits of a non-negative integer.\nlong sum_digits(long n) {\n    long sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = sum_digits;\n    assert(candidate((345)) == (12));\n    assert(candidate((12)) == (3));\n    assert(candidate((97)) == (16));\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to get the sum of the digits of a non-negative integer.\nlong sum_digits(long n) {\n    long sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = sum_digits;\n    assert(candidate((345)) == (12));\n    assert(candidate((12)) == (3));\n    assert(candidate((97)) == (16));\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to get the sum of the digits of a non-negative integer.\nlong sum_digits(long n) {\n    if (n < 10) return n;\n    return n % 10 + sum_digits(n / 10);\n}\nint main() {\n    auto candidate = sum_digits;\n    assert(candidate((345)) == (12));\n    assert(candidate((12)) == (3));\n    assert(candidate((97)) == (16));\n}\n",
      "timestamp": 1665510639,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to get the sum of the digits of a non-negative integer.\nlong sum_digits(long n) {\n    if (n == 0) {\n        return 0;\n    }\n    return n % 10 + sum_digits(n / 10);\n}\nint main() {\n    auto candidate = sum_digits;\n    assert(candidate((345)) == (12));\n    assert(candidate((12)) == (3));\n    assert(candidate((97)) == (16));\n}\n",
      "timestamp": 1665510639,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to get the sum of the digits of a non-negative integer.\nlong sum_digits(long n) {\n    long sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = sum_digits;\n    assert(candidate((345)) == (12));\n    assert(candidate((12)) == (3));\n    assert(candidate((97)) == (16));\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to get the sum of the digits of a non-negative integer.\nlong sum_digits(long n) {\n    long sum = 0;\n    while (n != 0) {\n        sum += n % 10;\n        n /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = sum_digits;\n    assert(candidate((345)) == (12));\n    assert(candidate((12)) == (3));\n    assert(candidate((97)) == (16));\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to get the sum of the digits of a non-negative integer.\nlong sum_digits(long n) {\n    long sum = 0;\n    while(n > 0) {\n        sum += n % 10;\n        n /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = sum_digits;\n    assert(candidate((345)) == (12));\n    assert(candidate((12)) == (3));\n    assert(candidate((97)) == (16));\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to get the sum of the digits of a non-negative integer.\nlong sum_digits(long n) {\n    if(n<10)\n        return n;\n    return n%10 + sum_digits(n/10);\n}\nint main() {\n    auto candidate = sum_digits;\n    assert(candidate((345)) == (12));\n    assert(candidate((12)) == (3));\n    assert(candidate((97)) == (16));\n}\n",
      "timestamp": 1665510639,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to get the sum of the digits of a non-negative integer.\nlong sum_digits(long n) {\n  if (n == 0) {\n    return 0;\n  }\n  return (n % 10) + sum_digits(n / 10);\n}\nint main() {\n    auto candidate = sum_digits;\n    assert(candidate((345)) == (12));\n    assert(candidate((12)) == (3));\n    assert(candidate((97)) == (16));\n}\n",
      "timestamp": 1665510639,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to get the sum of the digits of a non-negative integer.\nlong sum_digits(long n) {\n    if(n<10)\n        return n;\n    return n%10 + sum_digits(n/10);\n}\nint main() {\n    auto candidate = sum_digits;\n    assert(candidate((345)) == (12));\n    assert(candidate((12)) == (3));\n    assert(candidate((97)) == (16));\n}\n",
      "timestamp": 1665510639,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to get the sum of the digits of a non-negative integer.\nlong sum_digits(long n) {\n    long sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = sum_digits;\n    assert(candidate((345)) == (12));\n    assert(candidate((12)) == (3));\n    assert(candidate((97)) == (16));\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to get the sum of the digits of a non-negative integer.\nlong sum_digits(long n) {\n    long sum = 0;\n    while(n > 0) {\n        sum += n % 10;\n        n = n / 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = sum_digits;\n    assert(candidate((345)) == (12));\n    assert(candidate((12)) == (3));\n    assert(candidate((97)) == (16));\n}\n",
      "timestamp": 1665510639,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to get the sum of the digits of a non-negative integer.\nlong sum_digits(long n) {\n    long sum = 0;\n    while(n > 0) {\n        sum += n % 10;\n        n /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = sum_digits;\n    assert(candidate((345)) == (12));\n    assert(candidate((12)) == (3));\n    assert(candidate((97)) == (16));\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to get the sum of the digits of a non-negative integer.\nlong sum_digits(long n) {\n  long sum = 0;\n  while (n > 0) {\n    sum += n % 10;\n    n /= 10;\n  }\n  return sum;\n}\nint main() {\n    auto candidate = sum_digits;\n    assert(candidate((345)) == (12));\n    assert(candidate((12)) == (3));\n    assert(candidate((97)) == (16));\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to get the sum of the digits of a non-negative integer.\nlong sum_digits(long n) {\n    if (n == 0) {\n        return 0;\n    }\n    return n % 10 + sum_digits(n / 10);\n}\nint main() {\n    auto candidate = sum_digits;\n    assert(candidate((345)) == (12));\n    assert(candidate((12)) == (3));\n    assert(candidate((97)) == (16));\n}\n",
      "timestamp": 1665510639,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to get the sum of the digits of a non-negative integer.\nlong sum_digits(long n) {\n    long sum = 0;\n    while(n > 0) {\n        sum += n % 10;\n        n /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = sum_digits;\n    assert(candidate((345)) == (12));\n    assert(candidate((12)) == (3));\n    assert(candidate((97)) == (16));\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to get the sum of the digits of a non-negative integer.\nlong sum_digits(long n) {\n    long sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = sum_digits;\n    assert(candidate((345)) == (12));\n    assert(candidate((12)) == (3));\n    assert(candidate((97)) == (16));\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to get the sum of the digits of a non-negative integer.\nlong sum_digits(long n) {\n    long sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = sum_digits;\n    assert(candidate((345)) == (12));\n    assert(candidate((12)) == (3));\n    assert(candidate((97)) == (16));\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to get the sum of the digits of a non-negative integer.\nlong sum_digits(long n) {\n    long sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = sum_digits;\n    assert(candidate((345)) == (12));\n    assert(candidate((12)) == (3));\n    assert(candidate((97)) == (16));\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to get the sum of the digits of a non-negative integer.\nlong sum_digits(long n) {\n    long sum = 0;\n    while(n > 0) {\n        sum += n % 10;\n        n /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = sum_digits;\n    assert(candidate((345)) == (12));\n    assert(candidate((12)) == (3));\n    assert(candidate((97)) == (16));\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to get the sum of the digits of a non-negative integer.\nlong sum_digits(long n) {\n    long sum = 0;\n    while(n > 0) {\n        sum += n % 10;\n        n /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = sum_digits;\n    assert(candidate((345)) == (12));\n    assert(candidate((12)) == (3));\n    assert(candidate((97)) == (16));\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to get the sum of the digits of a non-negative integer.\nlong sum_digits(long n) {\n  long sum = 0;\n  while (n > 0) {\n    sum += n % 10;\n    n /= 10;\n  }\n  return sum;\n}\nint main() {\n    auto candidate = sum_digits;\n    assert(candidate((345)) == (12));\n    assert(candidate((12)) == (3));\n    assert(candidate((97)) == (16));\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to get the sum of the digits of a non-negative integer.\nlong sum_digits(long n) {\n  if (n == 0) {\n    return 0;\n  }\n  return n % 10 + sum_digits(n / 10);\n}\nint main() {\n    auto candidate = sum_digits;\n    assert(candidate((345)) == (12));\n    assert(candidate((12)) == (3));\n    assert(candidate((97)) == (16));\n}\n",
      "timestamp": 1665510639,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to get the sum of the digits of a non-negative integer.\nlong sum_digits(long n) {\n    long sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = sum_digits;\n    assert(candidate((345)) == (12));\n    assert(candidate((12)) == (3));\n    assert(candidate((97)) == (16));\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to get the sum of the digits of a non-negative integer.\nlong sum_digits(long n) {\n    long sum = 0;\n    while(n > 0) {\n        sum += n % 10;\n        n /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = sum_digits;\n    assert(candidate((345)) == (12));\n    assert(candidate((12)) == (3));\n    assert(candidate((97)) == (16));\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to get the sum of the digits of a non-negative integer.\nlong sum_digits(long n) {\n    long sum = 0;\n    while(n > 0) {\n        sum += n % 10;\n        n /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = sum_digits;\n    assert(candidate((345)) == (12));\n    assert(candidate((12)) == (3));\n    assert(candidate((97)) == (16));\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to get the sum of the digits of a non-negative integer.\nlong sum_digits(long n) {\n    // Write your code here\n    long sum = 0;\n    while(n != 0) {\n        sum += n % 10;\n        n /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = sum_digits;\n    assert(candidate((345)) == (12));\n    assert(candidate((12)) == (3));\n    assert(candidate((97)) == (16));\n}\n",
      "timestamp": 1666123814,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to get the sum of the digits of a non-negative integer.\nlong sum_digits(long n) {\n    if (n == 0) {\n        return 0;\n    }\n    return n % 10 + sum_digits(n / 10);\n}\nint main() {\n    auto candidate = sum_digits;\n    assert(candidate((345)) == (12));\n    assert(candidate((12)) == (3));\n    assert(candidate((97)) == (16));\n}\n",
      "timestamp": 1665510639,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to get the sum of the digits of a non-negative integer.\nlong sum_digits(long n) {\n  long sum = 0;\n  while (n != 0) {\n    sum += n % 10;\n    n /= 10;\n  }\n  return sum;\n}\nint main() {\n    auto candidate = sum_digits;\n    assert(candidate((345)) == (12));\n    assert(candidate((12)) == (3));\n    assert(candidate((97)) == (16));\n}\n",
      "timestamp": 1666123814,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to get the sum of the digits of a non-negative integer.\nlong sum_digits(long n) {\n    long sum = 0;\n    while(n > 0) {\n        sum += n % 10;\n        n /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = sum_digits;\n    assert(candidate((345)) == (12));\n    assert(candidate((12)) == (3));\n    assert(candidate((97)) == (16));\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to get the sum of the digits of a non-negative integer.\nlong sum_digits(long n) {\n  if (n == 0) {\n    return 0;\n  }\n  return n % 10 + sum_digits(n / 10);\n}\nint main() {\n    auto candidate = sum_digits;\n    assert(candidate((345)) == (12));\n    assert(candidate((12)) == (3));\n    assert(candidate((97)) == (16));\n}\n",
      "timestamp": 1665510639,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to get the sum of the digits of a non-negative integer.\nlong sum_digits(long n) {\n    long sum = 0;\n    while(n > 0) {\n        sum += n % 10;\n        n /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = sum_digits;\n    assert(candidate((345)) == (12));\n    assert(candidate((12)) == (3));\n    assert(candidate((97)) == (16));\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to get the sum of the digits of a non-negative integer.\nlong sum_digits(long n) {\n    if(n == 0)\n        return 0;\n    return (n % 10) + sum_digits(n / 10);\n}\nint main() {\n    auto candidate = sum_digits;\n    assert(candidate((345)) == (12));\n    assert(candidate((12)) == (3));\n    assert(candidate((97)) == (16));\n}\n",
      "timestamp": 1666123810,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to get the sum of the digits of a non-negative integer.\nlong sum_digits(long n) {\n    long sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = sum_digits;\n    assert(candidate((345)) == (12));\n    assert(candidate((12)) == (3));\n    assert(candidate((97)) == (16));\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to get the sum of the digits of a non-negative integer.\nlong sum_digits(long n) {\n    if (n == 0) {\n        return 0;\n    }\n    return n % 10 + sum_digits(n / 10);\n}\nint main() {\n    auto candidate = sum_digits;\n    assert(candidate((345)) == (12));\n    assert(candidate((12)) == (3));\n    assert(candidate((97)) == (16));\n}\n",
      "timestamp": 1665510639,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to get the sum of the digits of a non-negative integer.\nlong sum_digits(long n) {\n    long sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = sum_digits;\n    assert(candidate((345)) == (12));\n    assert(candidate((12)) == (3));\n    assert(candidate((97)) == (16));\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to get the sum of the digits of a non-negative integer.\nlong sum_digits(long n) {\n    long sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = sum_digits;\n    assert(candidate((345)) == (12));\n    assert(candidate((12)) == (3));\n    assert(candidate((97)) == (16));\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to get the sum of the digits of a non-negative integer.\nlong sum_digits(long n) {\n    long sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = sum_digits;\n    assert(candidate((345)) == (12));\n    assert(candidate((12)) == (3));\n    assert(candidate((97)) == (16));\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to get the sum of the digits of a non-negative integer.\nlong sum_digits(long n) {\n    long sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = sum_digits;\n    assert(candidate((345)) == (12));\n    assert(candidate((12)) == (3));\n    assert(candidate((97)) == (16));\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to get the sum of the digits of a non-negative integer.\nlong sum_digits(long n) {\n    long sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = sum_digits;\n    assert(candidate((345)) == (12));\n    assert(candidate((12)) == (3));\n    assert(candidate((97)) == (16));\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to get the sum of the digits of a non-negative integer.\nlong sum_digits(long n) {\n    long sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = sum_digits;\n    assert(candidate((345)) == (12));\n    assert(candidate((12)) == (3));\n    assert(candidate((97)) == (16));\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to get the sum of the digits of a non-negative integer.\nlong sum_digits(long n) {\n    long sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = sum_digits;\n    assert(candidate((345)) == (12));\n    assert(candidate((12)) == (3));\n    assert(candidate((97)) == (16));\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to get the sum of the digits of a non-negative integer.\nlong sum_digits(long n) {\n    long sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = sum_digits;\n    assert(candidate((345)) == (12));\n    assert(candidate((12)) == (3));\n    assert(candidate((97)) == (16));\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to get the sum of the digits of a non-negative integer.\nlong sum_digits(long n) {\n  if (n == 0) {\n    return 0;\n  }\n  return n % 10 + sum_digits(n / 10);\n}\nint main() {\n    auto candidate = sum_digits;\n    assert(candidate((345)) == (12));\n    assert(candidate((12)) == (3));\n    assert(candidate((97)) == (16));\n}\n",
      "timestamp": 1665510639,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to get the sum of the digits of a non-negative integer.\nlong sum_digits(long n) {\n    long sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = sum_digits;\n    assert(candidate((345)) == (12));\n    assert(candidate((12)) == (3));\n    assert(candidate((97)) == (16));\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to get the sum of the digits of a non-negative integer.\nlong sum_digits(long n) {\n    if (n == 0) {\n        return 0;\n    }\n    return n % 10 + sum_digits(n / 10);\n}\nint main() {\n    auto candidate = sum_digits;\n    assert(candidate((345)) == (12));\n    assert(candidate((12)) == (3));\n    assert(candidate((97)) == (16));\n}\n",
      "timestamp": 1665510639,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to get the sum of the digits of a non-negative integer.\nlong sum_digits(long n) {\n    long sum = 0;\n    while(n > 0) {\n        sum += n % 10;\n        n /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = sum_digits;\n    assert(candidate((345)) == (12));\n    assert(candidate((12)) == (3));\n    assert(candidate((97)) == (16));\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to get the sum of the digits of a non-negative integer.\nlong sum_digits(long n) {\n    long sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = sum_digits;\n    assert(candidate((345)) == (12));\n    assert(candidate((12)) == (3));\n    assert(candidate((97)) == (16));\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to get the sum of the digits of a non-negative integer.\nlong sum_digits(long n) {\n  long sum = 0;\n  while (n > 0) {\n    sum += n % 10;\n    n /= 10;\n  }\n  return sum;\n}\nint main() {\n    auto candidate = sum_digits;\n    assert(candidate((345)) == (12));\n    assert(candidate((12)) == (3));\n    assert(candidate((97)) == (16));\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to get the sum of the digits of a non-negative integer.\nlong sum_digits(long n) {\n    long sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = sum_digits;\n    assert(candidate((345)) == (12));\n    assert(candidate((12)) == (3));\n    assert(candidate((97)) == (16));\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to get the sum of the digits of a non-negative integer.\nlong sum_digits(long n) {\n    long sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = sum_digits;\n    assert(candidate((345)) == (12));\n    assert(candidate((12)) == (3));\n    assert(candidate((97)) == (16));\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to get the sum of the digits of a non-negative integer.\nlong sum_digits(long n) {\n    long sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = sum_digits;\n    assert(candidate((345)) == (12));\n    assert(candidate((12)) == (3));\n    assert(candidate((97)) == (16));\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to get the sum of the digits of a non-negative integer.\nlong sum_digits(long n) {\n    long sum = 0;\n    while(n > 0) {\n        sum += n % 10;\n        n /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = sum_digits;\n    assert(candidate((345)) == (12));\n    assert(candidate((12)) == (3));\n    assert(candidate((97)) == (16));\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to get the sum of the digits of a non-negative integer.\nlong sum_digits(long n) {\n    if(n==0)\n        return 0;\n    else\n        return n%10+sum_digits(n/10);\n}\nint main() {\n    auto candidate = sum_digits;\n    assert(candidate((345)) == (12));\n    assert(candidate((12)) == (3));\n    assert(candidate((97)) == (16));\n}\n",
      "timestamp": 1666123810,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to get the sum of the digits of a non-negative integer.\nlong sum_digits(long n) {\n    long sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = sum_digits;\n    assert(candidate((345)) == (12));\n    assert(candidate((12)) == (3));\n    assert(candidate((97)) == (16));\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to get the sum of the digits of a non-negative integer.\nlong sum_digits(long n) {\n    long sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = sum_digits;\n    assert(candidate((345)) == (12));\n    assert(candidate((12)) == (3));\n    assert(candidate((97)) == (16));\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to get the sum of the digits of a non-negative integer.\nlong sum_digits(long n) {\n    long sum = 0;\n    while(n > 0) {\n        sum += n % 10;\n        n /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = sum_digits;\n    assert(candidate((345)) == (12));\n    assert(candidate((12)) == (3));\n    assert(candidate((97)) == (16));\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to get the sum of the digits of a non-negative integer.\nlong sum_digits(long n) {\n    long sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = sum_digits;\n    assert(candidate((345)) == (12));\n    assert(candidate((12)) == (3));\n    assert(candidate((97)) == (16));\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to get the sum of the digits of a non-negative integer.\nlong sum_digits(long n) {\n    long sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = sum_digits;\n    assert(candidate((345)) == (12));\n    assert(candidate((12)) == (3));\n    assert(candidate((97)) == (16));\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to get the sum of the digits of a non-negative integer.\nlong sum_digits(long n) {\n    if(n == 0)\n        return 0;\n    return n % 10 + sum_digits(n / 10);\n}\nint main() {\n    auto candidate = sum_digits;\n    assert(candidate((345)) == (12));\n    assert(candidate((12)) == (3));\n    assert(candidate((97)) == (16));\n}\n",
      "timestamp": 1666123814,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to get the sum of the digits of a non-negative integer.\nlong sum_digits(long n) {\n  long sum = 0;\n  while (n > 0) {\n    sum += n % 10;\n    n /= 10;\n  }\n  return sum;\n}\nint main() {\n    auto candidate = sum_digits;\n    assert(candidate((345)) == (12));\n    assert(candidate((12)) == (3));\n    assert(candidate((97)) == (16));\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to get the sum of the digits of a non-negative integer.\nlong sum_digits(long n) {\n  if(n<10)\n    return n;\n  else\n    return n%10 + sum_digits(n/10);\n}\nint main() {\n    auto candidate = sum_digits;\n    assert(candidate((345)) == (12));\n    assert(candidate((12)) == (3));\n    assert(candidate((97)) == (16));\n}\n",
      "timestamp": 1666123814,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to get the sum of the digits of a non-negative integer.\nlong sum_digits(long n) {\n    long sum = 0;\n    while(n > 0) {\n        sum += n % 10;\n        n /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = sum_digits;\n    assert(candidate((345)) == (12));\n    assert(candidate((12)) == (3));\n    assert(candidate((97)) == (16));\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to get the sum of the digits of a non-negative integer.\nlong sum_digits(long n) {\n    if(n == 0)\n        return 0;\n    return n%10 + sum_digits(n/10);\n}\nint main() {\n    auto candidate = sum_digits;\n    assert(candidate((345)) == (12));\n    assert(candidate((12)) == (3));\n    assert(candidate((97)) == (16));\n}\n",
      "timestamp": 1666123810,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to get the sum of the digits of a non-negative integer.\nlong sum_digits(long n) {\n    if(n<10)\n        return n;\n    else\n        return n%10+sum_digits(n/10);\n}\nint main() {\n    auto candidate = sum_digits;\n    assert(candidate((345)) == (12));\n    assert(candidate((12)) == (3));\n    assert(candidate((97)) == (16));\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to get the sum of the digits of a non-negative integer.\nlong sum_digits(long n) {\n    if(n == 0) return 0;\n    return n % 10 + sum_digits(n / 10);\n}\nint main() {\n    auto candidate = sum_digits;\n    assert(candidate((345)) == (12));\n    assert(candidate((12)) == (3));\n    assert(candidate((97)) == (16));\n}\n",
      "timestamp": 1666123814,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to get the sum of the digits of a non-negative integer.\nlong sum_digits(long n) {\n    long sum = 0;\n    while(n > 0) {\n        sum += n % 10;\n        n /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = sum_digits;\n    assert(candidate((345)) == (12));\n    assert(candidate((12)) == (3));\n    assert(candidate((97)) == (16));\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to get the sum of the digits of a non-negative integer.\nlong sum_digits(long n) {\n    long sum = 0;\n    while(n > 0) {\n        sum += n % 10;\n        n /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = sum_digits;\n    assert(candidate((345)) == (12));\n    assert(candidate((12)) == (3));\n    assert(candidate((97)) == (16));\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to get the sum of the digits of a non-negative integer.\nlong sum_digits(long n) {\n    long sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = sum_digits;\n    assert(candidate((345)) == (12));\n    assert(candidate((12)) == (3));\n    assert(candidate((97)) == (16));\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to get the sum of the digits of a non-negative integer.\nlong sum_digits(long n) {\n    long sum = 0;\n    while(n>0){\n        sum += n%10;\n        n /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = sum_digits;\n    assert(candidate((345)) == (12));\n    assert(candidate((12)) == (3));\n    assert(candidate((97)) == (16));\n}\n",
      "timestamp": 1666123810,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to get the sum of the digits of a non-negative integer.\nlong sum_digits(long n) {\n    if(n==0)\n        return 0;\n    return n%10 + sum_digits(n/10);\n}\nint main() {\n    auto candidate = sum_digits;\n    assert(candidate((345)) == (12));\n    assert(candidate((12)) == (3));\n    assert(candidate((97)) == (16));\n}\n",
      "timestamp": 1666123810,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to get the sum of the digits of a non-negative integer.\nlong sum_digits(long n) {\n    if (n == 0) {\n        return 0;\n    }\n    return n % 10 + sum_digits(n / 10);\n}\nint main() {\n    auto candidate = sum_digits;\n    assert(candidate((345)) == (12));\n    assert(candidate((12)) == (3));\n    assert(candidate((97)) == (16));\n}\n",
      "timestamp": 1665510639,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to get the sum of the digits of a non-negative integer.\nlong sum_digits(long n) {\n  long sum = 0;\n  while (n > 0) {\n    sum += n % 10;\n    n /= 10;\n  }\n  return sum;\n}\nint main() {\n    auto candidate = sum_digits;\n    assert(candidate((345)) == (12));\n    assert(candidate((12)) == (3));\n    assert(candidate((97)) == (16));\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to get the sum of the digits of a non-negative integer.\nlong sum_digits(long n) {\n    if (n == 0) return 0;\n    return n % 10 + sum_digits(n / 10);\n}\nint main() {\n    auto candidate = sum_digits;\n    assert(candidate((345)) == (12));\n    assert(candidate((12)) == (3));\n    assert(candidate((97)) == (16));\n}\n",
      "timestamp": 1666123810,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to get the sum of the digits of a non-negative integer.\nlong sum_digits(long n) {\n    long sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = sum_digits;\n    assert(candidate((345)) == (12));\n    assert(candidate((12)) == (3));\n    assert(candidate((97)) == (16));\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to get the sum of the digits of a non-negative integer.\nlong sum_digits(long n) {\n    long sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = sum_digits;\n    assert(candidate((345)) == (12));\n    assert(candidate((12)) == (3));\n    assert(candidate((97)) == (16));\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to get the sum of the digits of a non-negative integer.\nlong sum_digits(long n) {\n    long sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = sum_digits;\n    assert(candidate((345)) == (12));\n    assert(candidate((12)) == (3));\n    assert(candidate((97)) == (16));\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to get the sum of the digits of a non-negative integer.\nlong sum_digits(long n) {\n  if (n == 0) {\n    return 0;\n  }\n  return n % 10 + sum_digits(n / 10);\n}\nint main() {\n    auto candidate = sum_digits;\n    assert(candidate((345)) == (12));\n    assert(candidate((12)) == (3));\n    assert(candidate((97)) == (16));\n}\n",
      "timestamp": 1665510639,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to get the sum of the digits of a non-negative integer.\nlong sum_digits(long n) {\n    // Write your code here\n    if(n==0)\n        return 0;\n    else\n        return (n%10)+sum_digits(n/10);\n}\nint main() {\n    auto candidate = sum_digits;\n    assert(candidate((345)) == (12));\n    assert(candidate((12)) == (3));\n    assert(candidate((97)) == (16));\n}\n",
      "timestamp": 1666123814,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to get the sum of the digits of a non-negative integer.\nlong sum_digits(long n) {\n  if (n == 0)\n    return 0;\n  return (n % 10 + sum_digits(n / 10));\n}\nint main() {\n    auto candidate = sum_digits;\n    assert(candidate((345)) == (12));\n    assert(candidate((12)) == (3));\n    assert(candidate((97)) == (16));\n}\n",
      "timestamp": 1666123814,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to get the sum of the digits of a non-negative integer.\nlong sum_digits(long n) {\n    long sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = sum_digits;\n    assert(candidate((345)) == (12));\n    assert(candidate((12)) == (3));\n    assert(candidate((97)) == (16));\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to get the sum of the digits of a non-negative integer.\nlong sum_digits(long n) {\n    long sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = sum_digits;\n    assert(candidate((345)) == (12));\n    assert(candidate((12)) == (3));\n    assert(candidate((97)) == (16));\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to get the sum of the digits of a non-negative integer.\nlong sum_digits(long n) {\n    long sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = sum_digits;\n    assert(candidate((345)) == (12));\n    assert(candidate((12)) == (3));\n    assert(candidate((97)) == (16));\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to get the sum of the digits of a non-negative integer.\nlong sum_digits(long n) {\n    if (n == 0) {\n        return 0;\n    }\n    return (n % 10) + sum_digits(n / 10);\n}\nint main() {\n    auto candidate = sum_digits;\n    assert(candidate((345)) == (12));\n    assert(candidate((12)) == (3));\n    assert(candidate((97)) == (16));\n}\n",
      "timestamp": 1666123814,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to get the sum of the digits of a non-negative integer.\nlong sum_digits(long n) {\n    long sum = 0;\n    while (n != 0) {\n        sum += n % 10;\n        n /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = sum_digits;\n    assert(candidate((345)) == (12));\n    assert(candidate((12)) == (3));\n    assert(candidate((97)) == (16));\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to get the sum of the digits of a non-negative integer.\nlong sum_digits(long n) {\n    long sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = sum_digits;\n    assert(candidate((345)) == (12));\n    assert(candidate((12)) == (3));\n    assert(candidate((97)) == (16));\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to get the sum of the digits of a non-negative integer.\nlong sum_digits(long n) {\n    long sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = sum_digits;\n    assert(candidate((345)) == (12));\n    assert(candidate((12)) == (3));\n    assert(candidate((97)) == (16));\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to get the sum of the digits of a non-negative integer.\nlong sum_digits(long n) {\n    long sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = sum_digits;\n    assert(candidate((345)) == (12));\n    assert(candidate((12)) == (3));\n    assert(candidate((97)) == (16));\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to get the sum of the digits of a non-negative integer.\nlong sum_digits(long n) {\n    long sum = 0;\n    while(n > 0) {\n        sum += n % 10;\n        n /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = sum_digits;\n    assert(candidate((345)) == (12));\n    assert(candidate((12)) == (3));\n    assert(candidate((97)) == (16));\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to get the sum of the digits of a non-negative integer.\nlong sum_digits(long n) {\n    long sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = sum_digits;\n    assert(candidate((345)) == (12));\n    assert(candidate((12)) == (3));\n    assert(candidate((97)) == (16));\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to get the sum of the digits of a non-negative integer.\nlong sum_digits(long n) {\n    long sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = sum_digits;\n    assert(candidate((345)) == (12));\n    assert(candidate((12)) == (3));\n    assert(candidate((97)) == (16));\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to get the sum of the digits of a non-negative integer.\nlong sum_digits(long n) {\n    if(n<0)\n        return -1;\n    long sum=0;\n    while(n>0)\n    {\n        sum+=n%10;\n        n=n/10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = sum_digits;\n    assert(candidate((345)) == (12));\n    assert(candidate((12)) == (3));\n    assert(candidate((97)) == (16));\n}\n",
      "timestamp": 1666123814,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to get the sum of the digits of a non-negative integer.\nlong sum_digits(long n) {\n    long sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = sum_digits;\n    assert(candidate((345)) == (12));\n    assert(candidate((12)) == (3));\n    assert(candidate((97)) == (16));\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to get the sum of the digits of a non-negative integer.\nlong sum_digits(long n) {\n    long sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = sum_digits;\n    assert(candidate((345)) == (12));\n    assert(candidate((12)) == (3));\n    assert(candidate((97)) == (16));\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to get the sum of the digits of a non-negative integer.\nlong sum_digits(long n) {\n    if(n==0)\n        return 0;\n    else\n        return n%10+sum_digits(n/10);\n}\nint main() {\n    auto candidate = sum_digits;\n    assert(candidate((345)) == (12));\n    assert(candidate((12)) == (3));\n    assert(candidate((97)) == (16));\n}\n",
      "timestamp": 1666123810,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to get the sum of the digits of a non-negative integer.\nlong sum_digits(long n) {\n    if(n<10)\n        return n;\n    return n%10 + sum_digits(n/10);\n}\nint main() {\n    auto candidate = sum_digits;\n    assert(candidate((345)) == (12));\n    assert(candidate((12)) == (3));\n    assert(candidate((97)) == (16));\n}\n",
      "timestamp": 1665510639,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to get the sum of the digits of a non-negative integer.\nlong sum_digits(long n) {\n    if (n == 0) return 0;\n    return n % 10 + sum_digits(n / 10);\n}\nint main() {\n    auto candidate = sum_digits;\n    assert(candidate((345)) == (12));\n    assert(candidate((12)) == (3));\n    assert(candidate((97)) == (16));\n}\n",
      "timestamp": 1666123810,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to get the sum of the digits of a non-negative integer.\nlong sum_digits(long n) {\n    long sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = sum_digits;\n    assert(candidate((345)) == (12));\n    assert(candidate((12)) == (3));\n    assert(candidate((97)) == (16));\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to get the sum of the digits of a non-negative integer.\nlong sum_digits(long n) {\n    long sum = 0;\n    while(n) {\n        sum += n % 10;\n        n /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = sum_digits;\n    assert(candidate((345)) == (12));\n    assert(candidate((12)) == (3));\n    assert(candidate((97)) == (16));\n}\n",
      "timestamp": 1666123810,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to get the sum of the digits of a non-negative integer.\nlong sum_digits(long n) {\n    long sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = sum_digits;\n    assert(candidate((345)) == (12));\n    assert(candidate((12)) == (3));\n    assert(candidate((97)) == (16));\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to get the sum of the digits of a non-negative integer.\nlong sum_digits(long n) {\n    long sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = sum_digits;\n    assert(candidate((345)) == (12));\n    assert(candidate((12)) == (3));\n    assert(candidate((97)) == (16));\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to get the sum of the digits of a non-negative integer.\nlong sum_digits(long n) {\n    long sum = 0;\n    while (n) {\n        sum += n % 10;\n        n /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = sum_digits;\n    assert(candidate((345)) == (12));\n    assert(candidate((12)) == (3));\n    assert(candidate((97)) == (16));\n}\n",
      "timestamp": 1666123810,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to get the sum of the digits of a non-negative integer.\nlong sum_digits(long n) {\n    long sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = sum_digits;\n    assert(candidate((345)) == (12));\n    assert(candidate((12)) == (3));\n    assert(candidate((97)) == (16));\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to get the sum of the digits of a non-negative integer.\nlong sum_digits(long n) {\n    long sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = sum_digits;\n    assert(candidate((345)) == (12));\n    assert(candidate((12)) == (3));\n    assert(candidate((97)) == (16));\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to get the sum of the digits of a non-negative integer.\nlong sum_digits(long n) {\n    long sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = sum_digits;\n    assert(candidate((345)) == (12));\n    assert(candidate((12)) == (3));\n    assert(candidate((97)) == (16));\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to get the sum of the digits of a non-negative integer.\nlong sum_digits(long n) {\n    long sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = sum_digits;\n    assert(candidate((345)) == (12));\n    assert(candidate((12)) == (3));\n    assert(candidate((97)) == (16));\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to get the sum of the digits of a non-negative integer.\nlong sum_digits(long n) {\n    if(n<10)\n        return n;\n    long sum=0;\n    while(n>0){\n        sum+=n%10;\n        n=n/10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = sum_digits;\n    assert(candidate((345)) == (12));\n    assert(candidate((12)) == (3));\n    assert(candidate((97)) == (16));\n}\n",
      "timestamp": 1666123814,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to get the sum of the digits of a non-negative integer.\nlong sum_digits(long n) {\n    long sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = sum_digits;\n    assert(candidate((345)) == (12));\n    assert(candidate((12)) == (3));\n    assert(candidate((97)) == (16));\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to get the sum of the digits of a non-negative integer.\nlong sum_digits(long n) {\n    long sum = 0;\n    while(n > 0) {\n        sum += n % 10;\n        n /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = sum_digits;\n    assert(candidate((345)) == (12));\n    assert(candidate((12)) == (3));\n    assert(candidate((97)) == (16));\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to get the sum of the digits of a non-negative integer.\nlong sum_digits(long n) {\n    if(n<10)\n        return n;\n    return n%10 + sum_digits(n/10);\n}\nint main() {\n    auto candidate = sum_digits;\n    assert(candidate((345)) == (12));\n    assert(candidate((12)) == (3));\n    assert(candidate((97)) == (16));\n}\n",
      "timestamp": 1665510639,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to get the sum of the digits of a non-negative integer.\nlong sum_digits(long n) {\n  if (n == 0) {\n    return 0;\n  }\n  return n % 10 + sum_digits(n / 10);\n}\nint main() {\n    auto candidate = sum_digits;\n    assert(candidate((345)) == (12));\n    assert(candidate((12)) == (3));\n    assert(candidate((97)) == (16));\n}\n",
      "timestamp": 1665510639,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to get the sum of the digits of a non-negative integer.\nlong sum_digits(long n) {\n    long sum = 0;\n    while(n > 0) {\n        sum += n % 10;\n        n /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = sum_digits;\n    assert(candidate((345)) == (12));\n    assert(candidate((12)) == (3));\n    assert(candidate((97)) == (16));\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to get the sum of the digits of a non-negative integer.\nlong sum_digits(long n) {\n  if (n == 0) {\n    return 0;\n  }\n  return n % 10 + sum_digits(n / 10);\n}\nint main() {\n    auto candidate = sum_digits;\n    assert(candidate((345)) == (12));\n    assert(candidate((12)) == (3));\n    assert(candidate((97)) == (16));\n}\n",
      "timestamp": 1665510639,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to get the sum of the digits of a non-negative integer.\nlong sum_digits(long n) {\n  if(n == 0) {\n    return 0;\n  }\n  return n % 10 + sum_digits(n / 10);\n}\nint main() {\n    auto candidate = sum_digits;\n    assert(candidate((345)) == (12));\n    assert(candidate((12)) == (3));\n    assert(candidate((97)) == (16));\n}\n",
      "timestamp": 1666123814,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to get the sum of the digits of a non-negative integer.\nlong sum_digits(long n) {\n    long sum = 0;\n    while (n != 0) {\n        sum += n % 10;\n        n /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = sum_digits;\n    assert(candidate((345)) == (12));\n    assert(candidate((12)) == (3));\n    assert(candidate((97)) == (16));\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to get the sum of the digits of a non-negative integer.\nlong sum_digits(long n) {\n    long sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = sum_digits;\n    assert(candidate((345)) == (12));\n    assert(candidate((12)) == (3));\n    assert(candidate((97)) == (16));\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to get the sum of the digits of a non-negative integer.\nlong sum_digits(long n) {\n    long sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = sum_digits;\n    assert(candidate((345)) == (12));\n    assert(candidate((12)) == (3));\n    assert(candidate((97)) == (16));\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to get the sum of the digits of a non-negative integer.\nlong sum_digits(long n) {\n    if(n==0)\n        return 0;\n    return n%10+sum_digits(n/10);\n}\nint main() {\n    auto candidate = sum_digits;\n    assert(candidate((345)) == (12));\n    assert(candidate((12)) == (3));\n    assert(candidate((97)) == (16));\n}\n",
      "timestamp": 1666123810,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to get the sum of the digits of a non-negative integer.\nlong sum_digits(long n) {\n    long sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = sum_digits;\n    assert(candidate((345)) == (12));\n    assert(candidate((12)) == (3));\n    assert(candidate((97)) == (16));\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to get the sum of the digits of a non-negative integer.\nlong sum_digits(long n) {\n    if(n==0)\n        return 0;\n    return n%10+sum_digits(n/10);\n}\nint main() {\n    auto candidate = sum_digits;\n    assert(candidate((345)) == (12));\n    assert(candidate((12)) == (3));\n    assert(candidate((97)) == (16));\n}\n",
      "timestamp": 1666123810,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to get the sum of the digits of a non-negative integer.\nlong sum_digits(long n) {\n    long sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = sum_digits;\n    assert(candidate((345)) == (12));\n    assert(candidate((12)) == (3));\n    assert(candidate((97)) == (16));\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to get the sum of the digits of a non-negative integer.\nlong sum_digits(long n) {\n    long sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = sum_digits;\n    assert(candidate((345)) == (12));\n    assert(candidate((12)) == (3));\n    assert(candidate((97)) == (16));\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to get the sum of the digits of a non-negative integer.\nlong sum_digits(long n) {\n    long sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = sum_digits;\n    assert(candidate((345)) == (12));\n    assert(candidate((12)) == (3));\n    assert(candidate((97)) == (16));\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to get the sum of the digits of a non-negative integer.\nlong sum_digits(long n) {\n    long sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = sum_digits;\n    assert(candidate((345)) == (12));\n    assert(candidate((12)) == (3));\n    assert(candidate((97)) == (16));\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to get the sum of the digits of a non-negative integer.\nlong sum_digits(long n) {\n    long sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = sum_digits;\n    assert(candidate((345)) == (12));\n    assert(candidate((12)) == (3));\n    assert(candidate((97)) == (16));\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to get the sum of the digits of a non-negative integer.\nlong sum_digits(long n) {\n    long sum = 0;\n    while(n > 0) {\n        sum += n % 10;\n        n /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = sum_digits;\n    assert(candidate((345)) == (12));\n    assert(candidate((12)) == (3));\n    assert(candidate((97)) == (16));\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to get the sum of the digits of a non-negative integer.\nlong sum_digits(long n) {\n    long sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = sum_digits;\n    assert(candidate((345)) == (12));\n    assert(candidate((12)) == (3));\n    assert(candidate((97)) == (16));\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to get the sum of the digits of a non-negative integer.\nlong sum_digits(long n) {\n    if(n==0)\n        return 0;\n    else\n        return n%10 + sum_digits(n/10);\n}\nint main() {\n    auto candidate = sum_digits;\n    assert(candidate((345)) == (12));\n    assert(candidate((12)) == (3));\n    assert(candidate((97)) == (16));\n}\n",
      "timestamp": 1666123810,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to get the sum of the digits of a non-negative integer.\nlong sum_digits(long n) {\n    long sum = 0;\n    while(n > 0) {\n        sum += n % 10;\n        n /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = sum_digits;\n    assert(candidate((345)) == (12));\n    assert(candidate((12)) == (3));\n    assert(candidate((97)) == (16));\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to get the sum of the digits of a non-negative integer.\nlong sum_digits(long n) {\n    if(n == 0)\n        return 0;\n    return n%10 + sum_digits(n/10);\n}\nint main() {\n    auto candidate = sum_digits;\n    assert(candidate((345)) == (12));\n    assert(candidate((12)) == (3));\n    assert(candidate((97)) == (16));\n}\n",
      "timestamp": 1666123810,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to get the sum of the digits of a non-negative integer.\nlong sum_digits(long n) {\n    long sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = sum_digits;\n    assert(candidate((345)) == (12));\n    assert(candidate((12)) == (3));\n    assert(candidate((97)) == (16));\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to get the sum of the digits of a non-negative integer.\nlong sum_digits(long n) {\n    long sum = 0;\n    while(n > 0) {\n        sum += n % 10;\n        n /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = sum_digits;\n    assert(candidate((345)) == (12));\n    assert(candidate((12)) == (3));\n    assert(candidate((97)) == (16));\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to get the sum of the digits of a non-negative integer.\nlong sum_digits(long n) {\n    if (n == 0) {\n        return 0;\n    }\n    return n % 10 + sum_digits(n / 10);\n}\nint main() {\n    auto candidate = sum_digits;\n    assert(candidate((345)) == (12));\n    assert(candidate((12)) == (3));\n    assert(candidate((97)) == (16));\n}\n",
      "timestamp": 1665510639,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to get the sum of the digits of a non-negative integer.\nlong sum_digits(long n) {\n    long sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = sum_digits;\n    assert(candidate((345)) == (12));\n    assert(candidate((12)) == (3));\n    assert(candidate((97)) == (16));\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to get the sum of the digits of a non-negative integer.\nlong sum_digits(long n) {\n  long sum = 0;\n  while (n > 0) {\n    sum += n % 10;\n    n /= 10;\n  }\n  return sum;\n}\nint main() {\n    auto candidate = sum_digits;\n    assert(candidate((345)) == (12));\n    assert(candidate((12)) == (3));\n    assert(candidate((97)) == (16));\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to get the sum of the digits of a non-negative integer.\nlong sum_digits(long n) {\n    long sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = sum_digits;\n    assert(candidate((345)) == (12));\n    assert(candidate((12)) == (3));\n    assert(candidate((97)) == (16));\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to get the sum of the digits of a non-negative integer.\nlong sum_digits(long n) {\n    long sum = 0;\n    while(n>0){\n        sum += n%10;\n        n /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = sum_digits;\n    assert(candidate((345)) == (12));\n    assert(candidate((12)) == (3));\n    assert(candidate((97)) == (16));\n}\n",
      "timestamp": 1666123810,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to get the sum of the digits of a non-negative integer.\nlong sum_digits(long n) {\n  long sum = 0;\n  while (n > 0) {\n    sum += n % 10;\n    n /= 10;\n  }\n  return sum;\n}\nint main() {\n    auto candidate = sum_digits;\n    assert(candidate((345)) == (12));\n    assert(candidate((12)) == (3));\n    assert(candidate((97)) == (16));\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to get the sum of the digits of a non-negative integer.\nlong sum_digits(long n) {\n    long sum = 0;\n    while(n > 0) {\n        sum += n % 10;\n        n /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = sum_digits;\n    assert(candidate((345)) == (12));\n    assert(candidate((12)) == (3));\n    assert(candidate((97)) == (16));\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to get the sum of the digits of a non-negative integer.\nlong sum_digits(long n) {\n    long sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = sum_digits;\n    assert(candidate((345)) == (12));\n    assert(candidate((12)) == (3));\n    assert(candidate((97)) == (16));\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to get the sum of the digits of a non-negative integer.\nlong sum_digits(long n) {\n    long sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = sum_digits;\n    assert(candidate((345)) == (12));\n    assert(candidate((12)) == (3));\n    assert(candidate((97)) == (16));\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to get the sum of the digits of a non-negative integer.\nlong sum_digits(long n) {\n    long sum = 0;\n    while(n > 0) {\n        sum += n % 10;\n        n /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = sum_digits;\n    assert(candidate((345)) == (12));\n    assert(candidate((12)) == (3));\n    assert(candidate((97)) == (16));\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to get the sum of the digits of a non-negative integer.\nlong sum_digits(long n) {\n    long sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = sum_digits;\n    assert(candidate((345)) == (12));\n    assert(candidate((12)) == (3));\n    assert(candidate((97)) == (16));\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to get the sum of the digits of a non-negative integer.\nlong sum_digits(long n) {\n  long sum = 0;\n  while (n > 0) {\n    sum += n % 10;\n    n /= 10;\n  }\n  return sum;\n}\nint main() {\n    auto candidate = sum_digits;\n    assert(candidate((345)) == (12));\n    assert(candidate((12)) == (3));\n    assert(candidate((97)) == (16));\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to get the sum of the digits of a non-negative integer.\nlong sum_digits(long n) {\n    long sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = sum_digits;\n    assert(candidate((345)) == (12));\n    assert(candidate((12)) == (3));\n    assert(candidate((97)) == (16));\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to get the sum of the digits of a non-negative integer.\nlong sum_digits(long n) {\n  if (n == 0) {\n    return 0;\n  }\n  return (n % 10 + sum_digits(n / 10));\n}\nint main() {\n    auto candidate = sum_digits;\n    assert(candidate((345)) == (12));\n    assert(candidate((12)) == (3));\n    assert(candidate((97)) == (16));\n}\n",
      "timestamp": 1666123814,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to get the sum of the digits of a non-negative integer.\nlong sum_digits(long n) {\n    if(n==0)\n        return 0;\n    else\n        return n%10 + sum_digits(n/10);\n}\nint main() {\n    auto candidate = sum_digits;\n    assert(candidate((345)) == (12));\n    assert(candidate((12)) == (3));\n    assert(candidate((97)) == (16));\n}\n",
      "timestamp": 1666123810,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to get the sum of the digits of a non-negative integer.\nlong sum_digits(long n) {\n    if (n == 0) return 0;\n    return n % 10 + sum_digits(n / 10);\n}\nint main() {\n    auto candidate = sum_digits;\n    assert(candidate((345)) == (12));\n    assert(candidate((12)) == (3));\n    assert(candidate((97)) == (16));\n}\n",
      "timestamp": 1666123810,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to get the sum of the digits of a non-negative integer.\nlong sum_digits(long n) {\n    if (n == 0) {\n        return 0;\n    }\n    return (n % 10 + sum_digits(n / 10));\n}\nint main() {\n    auto candidate = sum_digits;\n    assert(candidate((345)) == (12));\n    assert(candidate((12)) == (3));\n    assert(candidate((97)) == (16));\n}\n",
      "timestamp": 1666123814,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to get the sum of the digits of a non-negative integer.\nlong sum_digits(long n) {\n    long sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = sum_digits;\n    assert(candidate((345)) == (12));\n    assert(candidate((12)) == (3));\n    assert(candidate((97)) == (16));\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to get the sum of the digits of a non-negative integer.\nlong sum_digits(long n) {\n    long sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = sum_digits;\n    assert(candidate((345)) == (12));\n    assert(candidate((12)) == (3));\n    assert(candidate((97)) == (16));\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to get the sum of the digits of a non-negative integer.\nlong sum_digits(long n) {\n    if(n==0)\n        return 0;\n    return n%10 + sum_digits(n/10);\n}\nint main() {\n    auto candidate = sum_digits;\n    assert(candidate((345)) == (12));\n    assert(candidate((12)) == (3));\n    assert(candidate((97)) == (16));\n}\n",
      "timestamp": 1666123810,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to get the sum of the digits of a non-negative integer.\nlong sum_digits(long n) {\n    long sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = sum_digits;\n    assert(candidate((345)) == (12));\n    assert(candidate((12)) == (3));\n    assert(candidate((97)) == (16));\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to get the sum of the digits of a non-negative integer.\nlong sum_digits(long n) {\n    int sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = sum_digits;\n    assert(candidate((345)) == (12));\n    assert(candidate((12)) == (3));\n    assert(candidate((97)) == (16));\n}\n",
      "timestamp": 1666123814,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to get the sum of the digits of a non-negative integer.\nlong sum_digits(long n) {\n    long sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = sum_digits;\n    assert(candidate((345)) == (12));\n    assert(candidate((12)) == (3));\n    assert(candidate((97)) == (16));\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to get the sum of the digits of a non-negative integer.\nlong sum_digits(long n) {\n  long sum = 0;\n  while (n > 0) {\n    sum += n % 10;\n    n /= 10;\n  }\n  return sum;\n}\nint main() {\n    auto candidate = sum_digits;\n    assert(candidate((345)) == (12));\n    assert(candidate((12)) == (3));\n    assert(candidate((97)) == (16));\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to get the sum of the digits of a non-negative integer.\nlong sum_digits(long n) {\n    long sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = sum_digits;\n    assert(candidate((345)) == (12));\n    assert(candidate((12)) == (3));\n    assert(candidate((97)) == (16));\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to get the sum of the digits of a non-negative integer.\nlong sum_digits(long n) {\n    long sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = sum_digits;\n    assert(candidate((345)) == (12));\n    assert(candidate((12)) == (3));\n    assert(candidate((97)) == (16));\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to get the sum of the digits of a non-negative integer.\nlong sum_digits(long n) {\n    long sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = sum_digits;\n    assert(candidate((345)) == (12));\n    assert(candidate((12)) == (3));\n    assert(candidate((97)) == (16));\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to get the sum of the digits of a non-negative integer.\nlong sum_digits(long n) {\n    long sum = 0;\n    while(n) {\n        sum += n % 10;\n        n /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = sum_digits;\n    assert(candidate((345)) == (12));\n    assert(candidate((12)) == (3));\n    assert(candidate((97)) == (16));\n}\n",
      "timestamp": 1666123810,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to get the sum of the digits of a non-negative integer.\nlong sum_digits(long n) {\n    long sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = sum_digits;\n    assert(candidate((345)) == (12));\n    assert(candidate((12)) == (3));\n    assert(candidate((97)) == (16));\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to get the sum of the digits of a non-negative integer.\nlong sum_digits(long n) {\n    if(n<10)\n        return n;\n    else\n        return n%10 + sum_digits(n/10);\n}\nint main() {\n    auto candidate = sum_digits;\n    assert(candidate((345)) == (12));\n    assert(candidate((12)) == (3));\n    assert(candidate((97)) == (16));\n}\n",
      "timestamp": 1665510639,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to get the sum of the digits of a non-negative integer.\nlong sum_digits(long n) {\n    long sum = 0;\n    while(n > 0) {\n        sum += n % 10;\n        n /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = sum_digits;\n    assert(candidate((345)) == (12));\n    assert(candidate((12)) == (3));\n    assert(candidate((97)) == (16));\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to get the sum of the digits of a non-negative integer.\nlong sum_digits(long n) {\n    long sum = 0;\n    while (n) {\n        sum += n % 10;\n        n /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = sum_digits;\n    assert(candidate((345)) == (12));\n    assert(candidate((12)) == (3));\n    assert(candidate((97)) == (16));\n}\n",
      "timestamp": 1666123810,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to get the sum of the digits of a non-negative integer.\nlong sum_digits(long n) {\n    long sum = 0;\n    while(n > 0) {\n        sum += n % 10;\n        n /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = sum_digits;\n    assert(candidate((345)) == (12));\n    assert(candidate((12)) == (3));\n    assert(candidate((97)) == (16));\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to get the sum of the digits of a non-negative integer.\nlong sum_digits(long n) {\n    long sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = sum_digits;\n    assert(candidate((345)) == (12));\n    assert(candidate((12)) == (3));\n    assert(candidate((97)) == (16));\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to get the sum of the digits of a non-negative integer.\nlong sum_digits(long n) {\n    long sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = sum_digits;\n    assert(candidate((345)) == (12));\n    assert(candidate((12)) == (3));\n    assert(candidate((97)) == (16));\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to get the sum of the digits of a non-negative integer.\nlong sum_digits(long n) {\n    long sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = sum_digits;\n    assert(candidate((345)) == (12));\n    assert(candidate((12)) == (3));\n    assert(candidate((97)) == (16));\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to get the sum of the digits of a non-negative integer.\nlong sum_digits(long n) {\n    long sum = 0;\n    while(n > 0) {\n        sum += n % 10;\n        n /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = sum_digits;\n    assert(candidate((345)) == (12));\n    assert(candidate((12)) == (3));\n    assert(candidate((97)) == (16));\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to get the sum of the digits of a non-negative integer.\nlong sum_digits(long n) {\n    long sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = sum_digits;\n    assert(candidate((345)) == (12));\n    assert(candidate((12)) == (3));\n    assert(candidate((97)) == (16));\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to get the sum of the digits of a non-negative integer.\nlong sum_digits(long n) {\n    if (n == 0)\n        return 0;\n    return (n % 10 + sum_digits(n / 10));\n}\nint main() {\n    auto candidate = sum_digits;\n    assert(candidate((345)) == (12));\n    assert(candidate((12)) == (3));\n    assert(candidate((97)) == (16));\n}\n",
      "timestamp": 1666123810,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to get the sum of the digits of a non-negative integer.\nlong sum_digits(long n) {\n    if (n == 0) return 0;\n    return n % 10 + sum_digits(n / 10);\n}\nint main() {\n    auto candidate = sum_digits;\n    assert(candidate((345)) == (12));\n    assert(candidate((12)) == (3));\n    assert(candidate((97)) == (16));\n}\n",
      "timestamp": 1666123810,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to get the sum of the digits of a non-negative integer.\nlong sum_digits(long n) {\n    long sum = 0;\n    while(n > 0) {\n        sum += n % 10;\n        n /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = sum_digits;\n    assert(candidate((345)) == (12));\n    assert(candidate((12)) == (3));\n    assert(candidate((97)) == (16));\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to get the sum of the digits of a non-negative integer.\nlong sum_digits(long n) {\n    long sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = sum_digits;\n    assert(candidate((345)) == (12));\n    assert(candidate((12)) == (3));\n    assert(candidate((97)) == (16));\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to get the sum of the digits of a non-negative integer.\nlong sum_digits(long n) {\n    if(n<10)\n        return n;\n    return n%10+sum_digits(n/10);\n}\nint main() {\n    auto candidate = sum_digits;\n    assert(candidate((345)) == (12));\n    assert(candidate((12)) == (3));\n    assert(candidate((97)) == (16));\n}\n",
      "timestamp": 1666123814,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to get the sum of the digits of a non-negative integer.\nlong sum_digits(long n) {\n  if (n == 0) {\n    return 0;\n  }\n  return (n % 10) + sum_digits(n / 10);\n}\nint main() {\n    auto candidate = sum_digits;\n    assert(candidate((345)) == (12));\n    assert(candidate((12)) == (3));\n    assert(candidate((97)) == (16));\n}\n",
      "timestamp": 1665510639,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to get the sum of the digits of a non-negative integer.\nlong sum_digits(long n) {\n    long sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = sum_digits;\n    assert(candidate((345)) == (12));\n    assert(candidate((12)) == (3));\n    assert(candidate((97)) == (16));\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to get the sum of the digits of a non-negative integer.\nlong sum_digits(long n) {\n    long sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = sum_digits;\n    assert(candidate((345)) == (12));\n    assert(candidate((12)) == (3));\n    assert(candidate((97)) == (16));\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to get the sum of the digits of a non-negative integer.\nlong sum_digits(long n) {\n    int sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = sum_digits;\n    assert(candidate((345)) == (12));\n    assert(candidate((12)) == (3));\n    assert(candidate((97)) == (16));\n}\n",
      "timestamp": 1666123814,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to get the sum of the digits of a non-negative integer.\nlong sum_digits(long n) {\n    long sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = sum_digits;\n    assert(candidate((345)) == (12));\n    assert(candidate((12)) == (3));\n    assert(candidate((97)) == (16));\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to get the sum of the digits of a non-negative integer.\nlong sum_digits(long n) {\n    long sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = sum_digits;\n    assert(candidate((345)) == (12));\n    assert(candidate((12)) == (3));\n    assert(candidate((97)) == (16));\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to get the sum of the digits of a non-negative integer.\nlong sum_digits(long n) {\n    long sum = 0;\n    while(n > 0) {\n        sum += n % 10;\n        n /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = sum_digits;\n    assert(candidate((345)) == (12));\n    assert(candidate((12)) == (3));\n    assert(candidate((97)) == (16));\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to get the sum of the digits of a non-negative integer.\nlong sum_digits(long n) {\n    long sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = sum_digits;\n    assert(candidate((345)) == (12));\n    assert(candidate((12)) == (3));\n    assert(candidate((97)) == (16));\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to get the sum of the digits of a non-negative integer.\nlong sum_digits(long n) {\n  long sum = 0;\n  while (n > 0) {\n    sum += n % 10;\n    n /= 10;\n  }\n  return sum;\n}\nint main() {\n    auto candidate = sum_digits;\n    assert(candidate((345)) == (12));\n    assert(candidate((12)) == (3));\n    assert(candidate((97)) == (16));\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to get the sum of the digits of a non-negative integer.\nlong sum_digits(long n) {\n    if (n == 0) {\n        return 0;\n    }\n    return n % 10 + sum_digits(n / 10);\n}\nint main() {\n    auto candidate = sum_digits;\n    assert(candidate((345)) == (12));\n    assert(candidate((12)) == (3));\n    assert(candidate((97)) == (16));\n}\n",
      "timestamp": 1665510639,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to get the sum of the digits of a non-negative integer.\nlong sum_digits(long n) {\n    if(n<10)\n        return n;\n    else\n        return n%10 + sum_digits(n/10);\n}\nint main() {\n    auto candidate = sum_digits;\n    assert(candidate((345)) == (12));\n    assert(candidate((12)) == (3));\n    assert(candidate((97)) == (16));\n}\n",
      "timestamp": 1665510639,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to get the sum of the digits of a non-negative integer.\nlong sum_digits(long n) {\n    long sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = sum_digits;\n    assert(candidate((345)) == (12));\n    assert(candidate((12)) == (3));\n    assert(candidate((97)) == (16));\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to get the sum of the digits of a non-negative integer.\nlong sum_digits(long n) {\n    long sum = 0;\n    while(n > 0) {\n        sum += n % 10;\n        n /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = sum_digits;\n    assert(candidate((345)) == (12));\n    assert(candidate((12)) == (3));\n    assert(candidate((97)) == (16));\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to get the sum of the digits of a non-negative integer.\nlong sum_digits(long n) {\n    long sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = sum_digits;\n    assert(candidate((345)) == (12));\n    assert(candidate((12)) == (3));\n    assert(candidate((97)) == (16));\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to get the sum of the digits of a non-negative integer.\nlong sum_digits(long n) {\n    long sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = sum_digits;\n    assert(candidate((345)) == (12));\n    assert(candidate((12)) == (3));\n    assert(candidate((97)) == (16));\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to get the sum of the digits of a non-negative integer.\nlong sum_digits(long n) {\n  if (n == 0) {\n    return 0;\n  }\n  return n % 10 + sum_digits(n / 10);\n}\nint main() {\n    auto candidate = sum_digits;\n    assert(candidate((345)) == (12));\n    assert(candidate((12)) == (3));\n    assert(candidate((97)) == (16));\n}\n",
      "timestamp": 1665510639,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to get the sum of the digits of a non-negative integer.\nlong sum_digits(long n) {\n    long sum = 0;\n    while (n != 0) {\n        sum += n % 10;\n        n /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = sum_digits;\n    assert(candidate((345)) == (12));\n    assert(candidate((12)) == (3));\n    assert(candidate((97)) == (16));\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
{
  "name": "mbpp_172_count_occurance",
  "language": "cpp",
  "prompt": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to count the number of occurence of the string 'std' in a given string.\nlong count_occurance(std::string s) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_172_count_occurance.py",
  "prompt_terminology": "verbatim",
  "tests": "}\nint main() {\n    auto candidate = count_occurance;\n    assert(candidate((\"letstdlenstdporstd\")) == (3));\n    assert(candidate((\"truststdsolensporsd\")) == (1));\n    assert(candidate((\"makestdsostdworthit\")) == (2));\n    assert(candidate((\"stds\")) == (1));\n    assert(candidate((\"\")) == (0));\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    long count = 0;\n    for (int i = 0; i < s.length(); i++) {\n        if (s[i] == 's' && s[i + 1] == 't' && s[i + 2] == 'd') {\n            count++;\n        }\n    }\n    return count;",
    "    long count = 0;\n    for (int i = 0; i < s.length(); i++) {\n        if (s[i] == 's' && s[i + 1] == 't' && s[i + 2] == 'd') {\n            count++;\n        }\n    }\n    return count;",
    "    long count = 0;\n    for (int i = 0; i < s.length(); i++) {\n        if (s[i] == 's' && s[i + 1] == 't' && s[i + 2] == 'd') {\n            count++;\n        }\n    }\n    return count;",
    "    long count = 0;\n    for(int i = 0; i < s.length(); i++) {\n        if(s[i] == 's' && s[i+1] == 't' && s[i+2] == 'd') {\n            count++;\n        }\n    }\n    return count;",
    "    long count = 0;\n    for (int i = 0; i < s.length(); i++) {\n        if (s[i] == 's' && s[i+1] == 't' && s[i+2] == 'd') {\n            count++;\n        }\n    }\n    return count;",
    "    long count = 0;\n    for(int i = 0; i < s.length(); i++) {\n        if(s[i] == 's' && s[i+1] == 't' && s[i+2] == 'd') {\n            count++;\n        }\n    }\n    return count;",
    "    long count = 0;\n    for (int i = 0; i < s.length(); i++) {\n        if (s[i] == 's' && s[i + 1] == 't' && s[i + 2] == 'd') {\n            count++;\n        }\n    }\n    return count;",
    "    long count = 0;\n    for (int i = 0; i < s.length(); i++) {\n        if (s[i] == 's' && s[i + 1] == 't' && s[i + 2] == 'd') {\n            count++;\n        }\n    }\n    return count;",
    "    long count = 0;\n    for(int i = 0; i < s.length(); i++) {\n        if(s[i] == 's' && s[i+1] == 't' && s[i+2] == 'd') {\n            count++;\n        }\n    }\n    return count;",
    "    long count = 0;\n    for (int i = 0; i < s.size(); i++) {\n        if (s[i] == 's' && s[i + 1] == 't' && s[i + 2] == 'd') {\n            count++;\n        }\n    }\n    return count;",
    "    long count = 0;\n    for (int i = 0; i < s.length() - 2; i++) {\n        if (s[i] == 's' && s[i + 1] == 't' && s[i + 2] == 'd') {\n            count++;\n        }\n    }\n    return count;",
    "    long count = 0;\n    for (int i = 0; i < s.length(); i++) {\n        if (s[i] == 's' && s[i+1] == 't' && s[i+2] == 'd') {\n            count++;\n        }\n    }\n    return count;",
    "    long count = 0;\n    for (int i = 0; i < s.length() - 2; i++) {\n        if (s[i] == 's' && s[i + 1] == 't' && s[i + 2] == 'd') {\n            count++;\n        }\n    }\n    return count;",
    "    long count = 0;\n    for (int i = 0; i < s.length() - 2; i++) {\n        if (s[i] == 's' && s[i + 1] == 't' && s[i + 2] == 'd') {\n            count++;\n        }\n    }\n    return count;",
    "    long count = 0;\n    for (int i = 0; i < s.length(); i++) {\n        if (s[i] == 's' && s[i+1] == 't' && s[i+2] == 'd') {\n            count++;\n        }\n    }\n    return count;",
    "    long count = 0;\n    for (int i = 0; i < s.length() - 2; i++) {\n        if (s[i] == 's' && s[i + 1] == 't' && s[i + 2] == 'd') {\n            count++;\n        }\n    }\n    return count;",
    "    long count = 0;\n    for(int i = 0; i < s.size(); i++) {\n        if(s[i] == 's' && s[i+1] == 't' && s[i+2] == 'd') {\n            count++;\n        }\n    }\n    return count;",
    "    long count = 0;\n    for(int i=0; i<s.size(); i++) {\n        if(s[i] == 's' && s[i+1] == 't' && s[i+2] == 'd') {\n            count++;\n        }\n    }\n    return count;",
    "    long count = 0;\n    std::string::size_type pos = 0;\n    while((pos = s.find(\"std\", pos)) != std::string::npos) {\n        ++count;\n        pos += 3;\n    }\n    return count;",
    "    long count = 0;\n    for (int i = 0; i < s.length(); i++) {\n        if (s[i] == 's' && s[i + 1] == 't' && s[i + 2] == 'd') {\n            count++;\n        }\n    }\n    return count;"
  ]
}
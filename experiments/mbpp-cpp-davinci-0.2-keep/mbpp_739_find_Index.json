{
  "name": "mbpp_739_find_Index",
  "language": "cpp",
  "prompt": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\nlong find_Index(long n) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_739_find_Index.py",
  "prompt_terminology": "verbatim",
  "tests": "}\nint main() {\n    auto candidate = find_Index;\n    assert(candidate((2)) == (4));\n    assert(candidate((3)) == (14));\n    assert(candidate((4)) == (45));\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    long count = 1;\n    long i = 1;\n    while(count < n) {\n        i++;\n        count = count + i;\n    }\n    return i;",
    "    long i = 1;\n    long t = 1;\n    while (t < n) {\n        i++;\n        t = i * (i + 1) / 2;\n    }\n    return i;",
    "\tlong i = 1;\n\tlong sum = 0;\n\twhile (sum < n) {\n\t\tsum += i;\n\t\ti++;\n\t}\n\treturn i - 1;",
    "    long i = 1;\n    long sum = 0;\n    while (sum < n) {\n        sum = sum + i;\n        i++;\n    }\n    return i - 1;",
    "    long i = 1;\n    long sum = 0;\n    while(true) {\n        sum = sum + i;\n        if(sum >= pow(10, n-1)) {\n            break;\n        }\n        i++;\n    }\n    return i;",
    "    long i = 1;\n    long sum = 0;\n    while(sum < n) {\n        sum += i;\n        i++;\n    }\n    return i-1;",
    "    long i = 1;\n    long sum = 0;\n    while(sum < n) {\n        sum = sum + i;\n        i++;\n    }\n    return i - 1;",
    "    long i = 1;\n    long num = 0;\n    while (num < n) {\n        num = i * (i + 1) / 2;\n        i++;\n    }\n    return i - 1;",
    "    long i = 1;\n    long sum = 0;\n    while(sum < n) {\n        sum += i;\n        i++;\n    }\n    return i - 1;",
    "    long i = 1;\n    long count = 1;\n    while(count < n) {\n        i++;\n        count += i;\n    }\n    return i;",
    "    long i = 1;\n    long sum = 1;\n    while(sum < n) {\n        i++;\n        sum += i;\n    }\n    return i;",
    "    long i = 1;\n    long num = 1;\n    while(num <= n) {\n        i++;\n        num = (i * (i + 1)) / 2;\n    }\n    return i - 1;",
    "    long i = 1;\n    long sum = 0;\n    while (sum < n) {\n        sum = sum + i;\n        i++;\n    }\n    return i - 1;",
    "    long i = 1;\n    long sum = 0;\n    while (sum < n) {\n        sum += i;\n        i++;\n    }\n    return i;",
    "    long i = 1;\n    long sum = 0;\n    while(sum < n) {\n        sum = sum + i;\n        i++;\n    }\n    return i-1;",
    "    long i = 1;\n    long sum = 0;\n    while(sum < n) {\n        sum = (i * (i + 1)) / 2;\n        i++;\n    }\n    return i - 1;",
    "    long i = 1;\n    long tri_num = 1;\n    while (tri_num < pow(10, n - 1)) {\n        i++;\n        tri_num = i * (i + 1) / 2;\n    }\n    return i;",
    "    long i = 1;\n    long triangular_number = 1;\n    while(triangular_number < pow(10, n-1)) {\n        i++;\n        triangular_number += i;\n    }\n    return i;",
    "    long i = 1;\n    long tri_num = 1;\n    while(tri_num < pow(10, n-1)) {\n        i++;\n        tri_num += i;\n    }\n    return i;",
    "    long i = 1;\n    long triangularNumber = 1;\n    while (true) {\n        if (triangularNumber % n == 0) {\n            return i;\n        }\n        i++;\n        triangularNumber += i;\n    }"
  ]
}
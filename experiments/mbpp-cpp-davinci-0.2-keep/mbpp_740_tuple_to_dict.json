{
  "name": "mbpp_740_tuple_to_dict",
  "language": "cpp",
  "prompt": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\nstd::map<long,long> tuple_to_dict(long test_tup) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_740_tuple_to_dict.py",
  "prompt_terminology": "verbatim",
  "tests": "}\nint main() {\n    auto candidate = tuple_to_dict;\n    assert(candidate(std::make_tuple(1, 5, 7, 10, 13, 5)) == (std::map<long,long>({{1, 5}, {7, 10}, {13, 5}})));\n    assert(candidate(std::make_tuple(1, 2, 3, 4, 5, 6)) == (std::map<long,long>({{1, 2}, {3, 4}, {5, 6}})));\n    assert(candidate(std::make_tuple(7, 8, 9, 10, 11, 12)) == (std::map<long,long>({{7, 8}, {9, 10}, {11, 12}})));\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    std::map<long,long> test_dict;\n    while(test_tup.size() > 1) {\n        test_dict[test_tup[0]] = test_tup[1];\n        test_tup.pop_front();\n        test_tup.pop_front();\n    }\n    return test_dict;",
    "    std::map<long,long> test_dict;\n    long i,j;\n    for(i=0;i<test_tup.size();i+=2) {\n        test_dict[test_tup[i]] = test_tup[i+1];\n    }\n    return test_dict;",
    "    std::map<long,long> test_dict;\n    std::vector<long> test_vec;\n    while(test_tup != 0) {\n        test_vec.push_back(test_tup % 10);\n        test_tup /= 10;\n    }\n    for(int i = 0; i < test_vec.size(); i += 2) {\n        test_dict[test_vec[i]] = test_vec[i+1];\n    }\n    return test_dict;",
    "    std::map<long,long> test_map;\n    for(int i=0;i<test_tup.size();i+=2) {\n        test_map[test_tup[i]] = test_tup[i+1];\n    }\n    return test_map;",
    "    std::map<long,long> test_map;\n    long i = 0;\n    while(test_tup != 0) {\n        test_map[i] = test_tup % 10;\n        test_tup /= 10;\n        i++;\n    }\n    return test_map;",
    "    std::map<long,long> test_dict;\n    long test_tup_size = test_tup.size();\n    for(long i = 0; i < test_tup_size; i++) {\n        test_dict[test_tup[i]] = test_tup[i+1];\n        i++;\n    }\n    return test_dict;",
    "    std::map<long,long> test_dict;\n    long test_tup_arr[test_tup];\n    for(long i = 0; i < test_tup; i++) {\n        test_tup_arr[i] = i;\n    }\n    for(long i = 0; i < test_tup; i+=2) {\n        test_dict[test_tup_arr[i]] = test_tup_arr[i+1];\n    }\n    return test_dict;",
    "    std::map<long,long> test_dict;\n    long temp = test_tup;\n    while(temp) {\n        long key = temp % 10;\n        temp = temp / 10;\n        long value = temp % 10;\n        temp = temp / 10;\n        test_dict[key] = value;\n    }\n    return test_dict;",
    "    std::map<long,long> test_dict;\n    for(long i=0;i<test_tup.size();i+=2) {\n        test_dict[test_tup[i]] = test_tup[i+1];\n    }\n    return test_dict;",
    "    std::map<long,long> test_dict;\n    long i = 0;\n    while(test_tup[i] != NULL) {\n        test_dict[test_tup[i]] = test_tup[i+1];\n        i+=2;\n    }\n    return test_dict;",
    "    std::map<long,long> dict;\n    long key = test_tup[0];\n    for (int i = 1; i < test_tup.size(); i++) {\n        dict[key] = test_tup[i];\n        key = test_tup[i];\n    }\n    return dict;",
    "    std::map<long,long> test_map;\n    long key = 0;\n    long value = 0;\n    while(test_tup > 0) {\n        value = test_tup % 10;\n        test_tup /= 10;\n        key = test_tup % 10;\n        test_map[key] = value;\n        test_tup /= 10;\n    }\n    return test_map;",
    "    std::map<long,long> test_map;\n    long key = 0;\n    long value = 0;\n    while(test_tup) {\n        value = test_tup%10;\n        test_tup = test_tup/10;\n        key = test_tup%10;\n        test_tup = test_tup/10;\n        test_map.insert(std::pair<long,long>(key,value));\n    }\n    return test_map;",
    "    std::map<long,long> res;\n    long key = 0;\n    long value = 0;\n    for(long i = 0; i < test_tup.size(); i++) {\n        if(i % 2 == 0) {\n            key = test_tup[i];\n        }\n        else {\n            value = test_tup[i];\n            res.insert(std::pair<long,long>(key,value));\n        }\n    }\n    return res;",
    "    std::map<long,long> test_dict;\n    long i = 0;\n    while(test_tup != 0) {\n        test_dict[i] = test_tup % 10;\n        test_tup /= 10;\n        i++;\n    }\n    return test_dict;",
    "    std::map<long,long> test_map;\n    long key = 0;\n    long value = 0;\n    while(test_tup) {\n        key = test_tup%10;\n        test_tup /= 10;\n        value = test_tup%10;\n        test_tup /= 10;\n        test_map.insert(std::pair<long,long>(key,value));\n    }\n    return test_map;",
    "    std::map<long,long> test_map;\n    long key = 0;\n    long value = 0;\n    while (test_tup != 0) {\n        key = test_tup % 10;\n        test_tup = test_tup / 10;\n        value = test_tup % 10;\n        test_tup = test_tup / 10;\n        test_map[key] = value;\n    }\n    return test_map;",
    "    std::map<long,long> dict;\n    for(int i=0;i<test_tup.size();i+=2) {\n        dict[test_tup[i]] = test_tup[i+1];\n    }\n    return dict;",
    "    std::map<long,long> test_dict;\n    long key = 0;\n    long value = 0;\n    while (test_tup > 0) {\n        key = test_tup % 10;\n        test_tup /= 10;\n        value = test_tup % 10;\n        test_tup /= 10;\n        test_dict[key] = value;\n    }\n    return test_dict;",
    "    std::map<long,long> test_dict;\n    long i = 0;\n    while(test_tup) {\n        test_dict[i] = test_tup%10;\n        test_tup /= 10;\n        i++;\n    }\n    return test_dict;",
    "    std::map<long,long> test_dict;\n    long i = 0;\n    while (test_tup != 0) {\n        test_dict[i] = test_tup % 10;\n        test_tup /= 10;\n        i++;\n    }\n    return test_dict;",
    "    std::map<long,long> test_dict;\n    for(int i = 0; i < test_tup.size(); i += 2) {\n        test_dict[test_tup[i]] = test_tup[i+1];\n    }\n    return test_dict;",
    "    std::map<long,long> test_dict;\n    for(int i=0;i<test_tup.size();i+=2) {\n        test_dict[test_tup[i]] = test_tup[i+1];\n    }\n    return test_dict;",
    "    std::map<long,long> test_dict;\n    long key = 0;\n    long value = 0;\n    while(test_tup) {\n        key = test_tup % 10;\n        test_tup /= 10;\n        value = test_tup % 10;\n        test_tup /= 10;\n        test_dict[key] = value;\n    }\n    return test_dict;",
    "    std::map<long,long> test_map;\n    long key = 0;\n    long value = 0;\n    while(test_tup != 0) {\n        key = test_tup % 10;\n        test_tup /= 10;\n        value = test_tup % 10;\n        test_tup /= 10;\n        test_map[key] = value;\n    }\n    return test_map;",
    "    std::map<long,long> test_map;\n    std::vector<long> test_vec;\n    while(test_tup > 0) {\n        test_vec.push_back(test_tup % 10);\n        test_tup /= 10;\n    }\n    for(int i = 0; i < test_vec.size(); i+=2) {\n        test_map[test_vec[i]] = test_vec[i+1];\n    }\n    return test_map;",
    "    std::map<long,long> dict;\n    for(long i=0;i<test_tup.size();i+=2) {\n        dict[test_tup[i]] = test_tup[i+1];\n    }\n    return dict;",
    "    std::map<long,long> dict;\n    long i = 0;\n    while(test_tup) {\n        dict[i] = test_tup % 10;\n        test_tup /= 10;\n        i++;\n    }\n    return dict;",
    "    std::map<long,long> test_map;\n    long i = 0;\n    while(test_tup != 0) {\n        test_map[i] = test_tup % 10;\n        test_tup /= 10;\n        i++;\n    }\n    return test_map;",
    "    std::map<long,long> test_dict;\n    for(int i=0; i<test_tup.size(); i+=2) {\n        test_dict[test_tup[i]] = test_tup[i+1];\n    }\n    return test_dict;",
    "    std::map<long,long> dict;\n    long i = 0;\n    while (test_tup) {\n        dict[i] = test_tup%10;\n        test_tup /= 10;\n        i++;\n    }\n    return dict;",
    "    std::map<long,long> dict;\n    long key = test_tup[0];\n    for (int i = 1; i < test_tup.size(); i++) {\n        dict[key] = test_tup[i];\n        key = test_tup[i];\n    }\n    return dict;",
    "    std::map<long,long> test_dict;\n    long i = 0;\n    while(test_tup[i] != NULL) {\n        test_dict[test_tup[i]] = test_tup[i+1];\n        i += 2;\n    }\n    return test_dict;",
    "    std::map<long,long> dict;\n    long key = 0;\n    long value = 0;\n    while (test_tup) {\n        key = test_tup % 10;\n        test_tup /= 10;\n        value = test_tup % 10;\n        test_tup /= 10;\n        dict[key] = value;\n    }\n    return dict;",
    "  std::map<long,long> test_map;\n  long i = 0;\n  while(test_tup) {\n    test_map[i] = test_tup % 10;\n    test_tup /= 10;\n    i++;\n  }\n  return test_map;",
    "    std::map<long,long> test_dict;\n    long i = 0;\n    while(test_tup) {\n        test_dict[i] = test_tup % 10;\n        test_tup /= 10;\n        i++;\n    }\n    return test_dict;",
    "    std::map<long,long> dict;\n    long key = test_tup[0];\n    for (long i = 1; i < test_tup.size(); i++) {\n        dict[key] = test_tup[i];\n        key = test_tup[i];\n    }\n    return dict;",
    "    std::map<long,long> test_map;\n    long i = 0;\n    while(test_tup != 0) {\n        test_map[i] = test_tup % 10;\n        test_tup /= 10;\n        i++;\n    }\n    return test_map;",
    "    std::map<long,long> test_dict;\n    std::vector<long> test_vec;\n    while(test_tup) {\n        test_vec.push_back(test_tup%10);\n        test_tup/=10;\n    }\n    for(int i=0;i<test_vec.size();i+=2) {\n        test_dict[test_vec[i]] = test_vec[i+1];\n    }\n    return test_dict;",
    "    std::map<long,long> dict;\n    long i = 0;\n    while(test_tup) {\n        dict[i] = test_tup % 10;\n        test_tup /= 10;\n        i++;\n    }\n    return dict;",
    "    std::map<long,long> test_map;\n    long i;\n    for(i=0;i<test_tup.size();i+=2) {\n        test_map[test_tup[i]] = test_tup[i+1];\n    }\n    return test_map;",
    "    std::map<long,long> test_map;\n    long i = 0;\n    while (test_tup != 0) {\n        test_map[i] = test_tup % 10;\n        test_tup /= 10;\n        i++;\n    }\n    return test_map;",
    "    std::map<long,long> dict;\n    long key = test_tup[0];\n    for (int i = 1; i < test_tup.size(); i++) {\n        dict[key] = test_tup[i];\n        key = test_tup[i];\n    }\n    return dict;",
    "    std::map<long,long> test_map;\n    for(int i = 0; i < test_tup.size(); i++) {\n        test_map.insert(test_tup[i], test_tup[i+1]);\n    }\n    return test_map;",
    "    std::map<long,long> test_dict;\n    long i = 0;\n    while(test_tup != 0) {\n        test_dict[i] = test_tup % 10;\n        test_tup /= 10;\n        i++;\n    }\n    return test_dict;",
    "    std::map<long,long> test_dict;\n    for(int i=0;i<test_tup.size();i++) {\n        test_dict[test_tup[i]] = test_tup[i+1];\n        i++;\n    }\n    return test_dict;",
    "    std::map<long,long> test_dict;\n    long i = 0;\n    while(test_tup) {\n        test_dict[i] = test_tup%10;\n        test_tup = test_tup/10;\n        i++;\n    }\n    return test_dict;",
    "    std::map<long,long> test_map;\n    for(int i=0;i<test_tup.size();i+=2) {\n        test_map[test_tup[i]] = test_tup[i+1];\n    }\n    return test_map;",
    "    std::map<long,long> dict;\n    long i = 0;\n    while (test_tup) {\n        dict[i] = test_tup % 10;\n        test_tup /= 10;\n        i++;\n    }\n    return dict;",
    "    std::map<long,long> test_dict;\n    long i = 0;\n    while(test_tup[i] != '\\0') {\n        test_dict[test_tup[i]] = test_tup[i+1];\n        i += 2;\n    }\n    return test_dict;",
    "    std::map<long,long> test_dict;\n    long i = 0;\n    while (test_tup != 0) {\n        test_dict[i] = test_tup % 10;\n        test_tup /= 10;\n        i++;\n    }\n    return test_dict;",
    "    std::map<long,long> test_dict;\n    for(long i=0;i<test_tup.size()-1;i++) {\n        test_dict[test_tup[i]] = test_tup[i+1];\n    }\n    return test_dict;",
    "    std::map<long,long> test_dict;\n    long i = 0;\n    while (test_tup != 0) {\n        test_dict[i] = test_tup % 10;\n        test_tup /= 10;\n        i++;\n    }\n    return test_dict;",
    "    std::map<long,long> test_dict;\n    long key = 0;\n    long value = 0;\n    while (test_tup != 0) {\n        key = test_tup % 10;\n        test_tup /= 10;\n        value = test_tup % 10;\n        test_tup /= 10;\n        test_dict[key] = value;\n    }\n    return test_dict;",
    "    std::map<long,long> test_map;\n    long key = 0;\n    long value = 0;\n    while(test_tup) {\n        value = test_tup % 10;\n        test_tup = test_tup / 10;\n        key = test_tup % 10;\n        test_map[key] = value;\n        test_tup = test_tup / 10;\n    }\n    return test_map;",
    "    std::map<long,long> test_dict;\n    std::vector<long> test_vec;\n    while (test_tup != 0) {\n        test_vec.push_back(test_tup % 10);\n        test_tup /= 10;\n    }\n    for (int i = 0; i < test_vec.size(); i += 2) {\n        test_dict[test_vec[i]] = test_vec[i + 1];\n    }\n    return test_dict;",
    "    std::map<long,long> test_map;\n    for(int i=0;i<test_tup.size();i+=2) {\n        test_map[test_tup[i]] = test_tup[i+1];\n    }\n    return test_map;",
    "    std::map<long,long> test_map;\n    long key = test_tup[0];\n    for (int i = 1; i < test_tup.size(); i++) {\n        test_map[key] = test_tup[i];\n        key = test_tup[i];\n    }\n    return test_map;",
    "    std::map<long,long> test_dict;\n    long i = 0;\n    while (test_tup != 0) {\n        test_dict[i] = test_tup % 10;\n        test_tup /= 10;\n        i++;\n    }\n    return test_dict;",
    "    std::map<long,long> test_dict;\n    for(int i=0;i<test_tup.size();i+=2) {\n        test_dict[test_tup[i]] = test_tup[i+1];\n    }\n    return test_dict;",
    "    std::map<long,long> test_map;\n    long key = 0;\n    long val = 0;\n    for (long i = 0; i < test_tup.size(); i++) {\n        if (i % 2 == 0) {\n            key = test_tup[i];\n        } else {\n            val = test_tup[i];\n            test_map[key] = val;\n        }\n    }\n    return test_map;",
    "    std::map<long,long> test_dict;\n    long key = test_tup[0];\n    for (long i = 1; i < test_tup.size(); i++) {\n        test_dict[key] = test_tup[i];\n        key = test_tup[i];\n    }\n    return test_dict;",
    "    std::map<long,long> dict;\n    long key = 0;\n    long value = 0;\n    for (int i = 0; i < test_tup.size(); i++) {\n        if (i % 2 == 0) {\n            key = test_tup[i];\n        } else {\n            value = test_tup[i];\n            dict[key] = value;\n        }\n    }\n    return dict;",
    "    std::map<long,long> test_dict;\n    long i = 0;\n    while(test_tup != 0) {\n        test_dict[i] = test_tup % 10;\n        test_tup /= 10;\n        i++;\n    }\n    return test_dict;",
    "    std::map<long,long> test_dict;\n    long i = 0;\n    while(test_tup != 0) {\n        test_dict[i] = test_tup % 10;\n        test_tup /= 10;\n        i++;\n    }\n    return test_dict;",
    "    std::map<long,long> test_dict;\n    long i = 0;\n    while(test_tup != 0) {\n        test_dict[i] = test_tup % 10;\n        test_tup /= 10;\n        i++;\n    }\n    return test_dict;",
    "    std::map<long,long> test_dict;\n    long key = 0;\n    long value = 0;\n    for (long i = 0; i < test_tup.size(); i++) {\n        if (i % 2 == 0) {\n            key = test_tup[i];\n        }\n        else {\n            value = test_tup[i];\n            test_dict.insert(std::pair<long,long>(key,value));\n        }\n    }\n    return test_dict;",
    "    std::map<long,long> result;\n    long key = test_tup[0];\n    for (long i = 1; i < test_tup.size(); i++) {\n        if (i % 2 == 0) {\n            key = test_tup[i];\n        } else {\n            result[key] = test_tup[i];\n        }\n    }\n    return result;",
    "    std::map<long,long> test_map;\n    long key = test_tup[0];\n    for(long i=1; i<test_tup.size(); i++) {\n        test_map[key] = test_tup[i];\n        key = test_tup[i];\n    }\n    return test_map;",
    "    std::map<long,long> test_dict;\n    for(int i=0;i<test_tup.size();i+=2) {\n        test_dict[test_tup[i]] = test_tup[i+1];\n    }\n    return test_dict;",
    "    std::map<long,long> test_map;\n    long i = 0;\n    while(test_tup) {\n        test_map[i] = test_tup % 10;\n        test_tup = test_tup / 10;\n        i++;\n    }\n    return test_map;",
    "    std::map<long,long> test_map;\n    std::vector<long> test_vec;\n    while(test_tup) {\n        test_vec.push_back(test_tup%10);\n        test_tup /= 10;\n    }\n    for(long i = 0; i < test_vec.size(); i+=2) {\n        test_map[test_vec[i]] = test_vec[i+1];\n    }\n    return test_map;",
    "    std::map<long,long> result;\n    for(int i=0; i<test_tup.size(); i+=2) {\n        result[test_tup[i]] = test_tup[i+1];\n    }\n    return result;",
    "    std::map<long,long> test_dict;\n    long test_tup_size = test_tup.size();\n    for(long i=0;i<test_tup_size;i+=2) {\n        test_dict[test_tup[i]] = test_tup[i+1];\n    }\n    return test_dict;",
    "    std::map<long,long> test_map;\n    long key = 0;\n    long value = 0;\n    for(long i = 0; i < test_tup.size(); i++) {\n        if(i % 2 == 0) {\n            key = test_tup[i];\n        }\n        else {\n            value = test_tup[i];\n            test_map[key] = value;\n        }\n    }\n    return test_map;",
    "    std::map<long,long> dict;\n    long i = 0;\n    while(test_tup) {\n        long temp = test_tup & 0xF;\n        test_tup >>= 4;\n        dict[i] = temp;\n        i++;\n    }\n    return dict;",
    "    std::map<long,long> test_map;\n    std::vector<long> test_vec;\n    while(test_tup) {\n        test_vec.push_back(test_tup % 10);\n        test_tup /= 10;\n    }\n    for(int i = 0; i < test_vec.size(); i += 2) {\n        test_map[test_vec[i]] = test_vec[i + 1];\n    }\n    return test_map;",
    "    std::map<long,long> test_dict;\n    std::vector<long> test_vec;\n    while(test_tup != 0) {\n        test_vec.push_back(test_tup % 10);\n        test_tup /= 10;\n    }\n    for(int i = 0; i < test_vec.size(); i += 2) {\n        test_dict[test_vec[i]] = test_vec[i + 1];\n    }\n    return test_dict;",
    "    std::map<long,long> test_dict;\n    std::vector<long> test_vec;\n    while(test_tup) {\n        test_vec.push_back(test_tup % 10);\n        test_tup /= 10;\n    }\n    for(int i = 0; i < test_vec.size(); i += 2) {\n        test_dict[test_vec[i]] = test_vec[i + 1];\n    }\n    return test_dict;",
    "    std::map<long,long> test_map;\n    long i = 0;\n    while (test_tup) {\n        test_map[i] = test_tup % 10;\n        test_tup /= 10;\n        i++;\n    }\n    return test_map;",
    "    std::map<long,long> test_map;\n    long i = 0;\n    while(test_tup != 0) {\n        test_map[i] = test_tup % 10;\n        test_tup /= 10;\n        i++;\n    }\n    return test_map;",
    "    std::map<long,long> test_map;\n    long i = 0;\n    while(test_tup != 0) {\n        test_map[i] = test_tup % 10;\n        test_tup /= 10;\n        i++;\n    }\n    return test_map;",
    "    std::map<long,long> test_dict;\n    for (long i = 0; i < test_tup.size(); i += 2) {\n        test_dict[test_tup[i]] = test_tup[i + 1];\n    }\n    return test_dict;",
    "    std::map<long,long> dict;\n    long key = test_tup[0];\n    for(int i = 1; i < test_tup.size(); i++) {\n        dict[key] = test_tup[i];\n        key = test_tup[i];\n    }\n    return dict;",
    "    std::map<long,long> dict;\n    auto it = test_tup.begin();\n    while(it != test_tup.end()) {\n        dict[*it] = *(it+1);\n        it += 2;\n    }\n    return dict;",
    "    std::map<long,long> test_dict;\n    long temp = test_tup;\n    long key,value;\n    while(temp!=0) {\n        key = temp%10;\n        temp = temp/10;\n        value = temp%10;\n        temp = temp/10;\n        test_dict[key] = value;\n    }\n    return test_dict;",
    "    std::map<long,long> dict;\n    long i = 0;\n    while (test_tup) {\n        dict[i] = test_tup % 10;\n        test_tup /= 10;\n        i++;\n    }\n    return dict;",
    "    std::map<long,long> dict;\n    long key = 0;\n    long value = 0;\n    bool is_key = true;\n    while(test_tup) {\n        if(is_key) {\n            key = test_tup % 10;\n            is_key = false;\n        } else {\n            value = test_tup % 10;\n            is_key = true;\n            dict[key] = value;\n        }\n        test_tup /= 10;\n    }\n    return dict;",
    "    std::map<long,long> dict;\n    long key = 0;\n    long value = 0;\n    while (test_tup) {\n        key = test_tup % 10;\n        test_tup /= 10;\n        value = test_tup % 10;\n        test_tup /= 10;\n        dict[key] = value;\n    }\n    return dict;",
    "    std::map<long,long> test_dict;\n    long key = test_tup[0];\n    for(long i = 1; i < test_tup.size(); i++) {\n        test_dict[key] = test_tup[i];\n        key = test_tup[i];\n    }\n    return test_dict;",
    "    std::map<long,long> test_map;\n    long i = 0;\n    while(test_tup != 0) {\n        test_map[i] = test_tup % 10;\n        test_tup /= 10;\n        i++;\n    }\n    return test_map;",
    "  std::map<long,long> ret_map;\n  long key = 0;\n  long val = 0;\n  while(test_tup) {\n    val = test_tup % 10;\n    test_tup /= 10;\n    key = test_tup % 10;\n    test_tup /= 10;\n    ret_map[key] = val;\n  }\n  return ret_map;",
    "    std::map<long,long> test_dict;\n    for(int i=0;i<test_tup.size();i+=2) {\n        test_dict[test_tup[i]] = test_tup[i+1];\n    }\n    return test_dict;",
    "    std::map<long,long> test_map;\n    long i = 0;\n    while(test_tup != 0) {\n        test_map[i] = test_tup % 10;\n        test_tup /= 10;\n        i++;\n    }\n    return test_map;",
    "    std::map<long,long> test_dict;\n    long key = 0;\n    long value = 0;\n    for (long i = 0; i < test_tup.size(); i++) {\n        if (i % 2 == 0) {\n            key = test_tup[i];\n        }\n        else {\n            value = test_tup[i];\n            test_dict[key] = value;\n        }\n    }\n    return test_dict;",
    "    std::map<long,long> test_dict;\n    long temp = test_tup;\n    while(temp != 0) {\n        long key = temp % 10;\n        temp = temp / 10;\n        long value = temp % 10;\n        temp = temp / 10;\n        test_dict[key] = value;\n    }\n    return test_dict;",
    "    std::map<long,long> dict;\n    long key = test_tup[0];\n    for (long i = 1; i < test_tup.size(); i++) {\n        dict[key] = test_tup[i];\n        key = test_tup[i];\n    }\n    return dict;",
    "    std::map<long,long> test_dict;\n    long i = 0;\n    while(test_tup) {\n        test_dict[i] = test_tup % 10;\n        test_tup /= 10;\n        i++;\n    }\n    return test_dict;",
    "    std::map<long,long> test_dict;\n    for(long i=0;i<test_tup.size();i+=2) {\n        test_dict[test_tup[i]] = test_tup[i+1];\n    }\n    return test_dict;",
    "    std::map<long,long> test_map;\n    std::vector<long> test_vec;\n    while(test_tup) {\n        test_vec.push_back(test_tup%10);\n        test_tup/=10;\n    }\n    for(int i=0;i<test_vec.size();i+=2) {\n        test_map[test_vec[i]] = test_vec[i+1];\n    }\n    return test_map;",
    "    std::map<long,long> test_dict;\n    long i = 0;\n    while(test_tup != 0) {\n        test_dict[i] = test_tup % 10;\n        test_tup /= 10;\n        i++;\n    }\n    return test_dict;",
    "    std::map<long,long> test_map;\n    long i = 0;\n    while (test_tup) {\n        test_map[i] = test_tup % 10;\n        test_tup /= 10;\n        i++;\n    }\n    return test_map;",
    "    std::map<long,long> test_map;\n    std::vector<long> test_vec;\n    while(test_tup) {\n        test_vec.push_back(test_tup%10);\n        test_tup/=10;\n    }\n    for(int i=0;i<test_vec.size();i+=2) {\n        test_map[test_vec[i]] = test_vec[i+1];\n    }\n    return test_map;",
    "    std::map<long,long> test_map;\n    long i = 0;\n    while(test_tup != 0) {\n        test_map[i] = test_tup % 10;\n        test_tup /= 10;\n        i++;\n    }\n    return test_map;",
    "    std::map<long,long> test_map;\n    long i = 0;\n    while(test_tup) {\n        test_map[i] = test_tup % 10;\n        test_tup /= 10;\n        i++;\n    }\n    return test_map;",
    "    std::map<long,long> test_dict;\n    long key = 0;\n    long value = 0;\n    for (long i = 0; i < test_tup.size(); i++) {\n        if (i % 2 == 0) {\n            key = test_tup[i];\n        }\n        else {\n            value = test_tup[i];\n            test_dict[key] = value;\n        }\n    }\n    return test_dict;",
    "    std::map<long,long> test_dict;\n    for (int i=0; i<test_tup.size(); i+=2) {\n        test_dict[test_tup[i]] = test_tup[i+1];\n    }\n    return test_dict;",
    "    std::map<long,long> dict;\n    long key = test_tup[0];\n    for (int i = 1; i < test_tup.size(); i++) {\n        dict[key] = test_tup[i];\n        key = test_tup[i];\n    }\n    return dict;",
    "    std::map<long,long> test_dict;\n    long key = 0;\n    long value = 0;\n    for(int i = 0; i < test_tup.size(); i++) {\n        if(i % 2 == 0) {\n            key = test_tup[i];\n        }\n        else {\n            value = test_tup[i];\n            test_dict[key] = value;\n        }\n    }\n    return test_dict;",
    "    std::map<long,long> test_dict;\n    long key = 0;\n    long value = 0;\n    while (test_tup) {\n        key = test_tup % 10;\n        test_tup /= 10;\n        value = test_tup % 10;\n        test_tup /= 10;\n        test_dict[key] = value;\n    }\n    return test_dict;",
    "    std::map<long,long> test_dict;\n    std::vector<long> test_vec;\n    for(int i=0;i<test_tup.size();i++) {\n        test_vec.push_back(test_tup[i]);\n    }\n    for(int i=0;i<test_vec.size();i+=2) {\n        test_dict[test_vec[i]] = test_vec[i+1];\n    }\n    return test_dict;",
    "    std::map<long,long> test_map;\n    for(long i = 0; i < test_tup.size(); i+=2) {\n        test_map[test_tup[i]] = test_tup[i+1];\n    }\n    return test_map;",
    "    std::map<long,long> dict;\n    long key = 0;\n    long value = 0;\n    while (test_tup > 0) {\n        value = test_tup % 10;\n        test_tup /= 10;\n        key = test_tup % 10;\n        test_tup /= 10;\n        dict[key] = value;\n    }\n    return dict;",
    "    std::map<long,long> test_map;\n    for(long i = 0; i < test_tup.size(); i++) {\n        test_map[test_tup[i]] = test_tup[i+1];\n        i++;\n    }\n    return test_map;",
    "    std::map<long,long> dict;\n    long i = 0;\n    while (test_tup) {\n        dict[i] = test_tup % 10;\n        test_tup /= 10;\n        i++;\n    }\n    return dict;",
    "    std::map<long,long> test_map;\n    long key = test_tup[0];\n    for (long i = 1; i < test_tup.size(); i++) {\n        test_map[key] = test_tup[i];\n        key = test_tup[i];\n    }\n    return test_map;",
    "    std::map<long,long> test_dict;\n    for(long i=0;i<test_tup.size();i+=2) {\n        test_dict[test_tup[i]] = test_tup[i+1];\n    }\n    return test_dict;",
    "    std::map<long,long> test_map;\n    long i = 0;\n    while(test_tup) {\n        test_map[i] = test_tup % 10;\n        test_tup /= 10;\n        i++;\n    }\n    return test_map;",
    "    std::map<long,long> test_dict;\n    std::vector<long> test_vec;\n    while(test_tup) {\n        test_vec.push_back(test_tup%10);\n        test_tup /= 10;\n    }\n    for(int i=0; i<test_vec.size()-1; i++) {\n        test_dict[test_vec[i]] = test_vec[i+1];\n    }\n    return test_dict;",
    "    std::map<long,long> test_dict;\n    long i = 0;\n    while (test_tup != 0) {\n        test_dict[i] = test_tup % 10;\n        test_tup /= 10;\n        i++;\n    }\n    return test_dict;",
    "    std::map<long,long> test_map;\n    long i = 0;\n    while(test_tup != 0) {\n        long key = test_tup % 10;\n        test_tup /= 10;\n        long value = test_tup % 10;\n        test_tup /= 10;\n        test_map[key] = value;\n        i++;\n    }\n    return test_map;",
    "    std::map<long,long> test_dict;\n    long i = 0;\n    while(test_tup) {\n        test_dict[i] = test_tup % 10;\n        test_tup /= 10;\n        i++;\n    }\n    return test_dict;",
    "    std::map<long,long> dict;\n    long key = test_tup[0];\n    for (long i = 1; i < test_tup.size(); i++) {\n        dict[key] = test_tup[i];\n        key = test_tup[i];\n    }\n    return dict;",
    "    std::map<long,long> dict;\n    long key = test_tup[0];\n    for (long i = 1; i < test_tup.size(); i++) {\n        dict[key] = test_tup[i];\n        key = test_tup[i];\n    }\n    return dict;",
    "    std::map<long,long> test_dict;\n    long i = 0;\n    while (test_tup) {\n        test_dict[i] = test_tup % 10;\n        test_tup /= 10;\n        i++;\n    }\n    return test_dict;",
    "    std::map<long,long> test_map;\n    long key = 0;\n    long value = 0;\n    while(test_tup) {\n        value = test_tup % 10;\n        test_tup /= 10;\n        key = test_tup % 10;\n        test_tup /= 10;\n        test_map[key] = value;\n    }\n    return test_map;",
    "    std::map<long,long> test_dict;\n    for(long i=0;i<test_tup.size();i+=2) {\n        test_dict[test_tup[i]] = test_tup[i+1];\n    }\n    return test_dict;",
    "\tstd::map<long,long> dict;\n\tfor(int i=0;i<test_tup.size();i+=2) {\n\t\tdict[test_tup[i]] = test_tup[i+1];\n\t}\n\treturn dict;",
    "    std::map<long,long> test_dict;\n    long key = test_tup[0];\n    for(long i = 1; i < test_tup.size(); i++) {\n        test_dict[key] = test_tup[i];\n        key = test_tup[i];\n    }\n    return test_dict;",
    "    std::map<long,long> test_map;\n    long i = 0;\n    while (test_tup) {\n        test_map[i] = test_tup % 10;\n        test_tup /= 10;\n        i++;\n    }\n    return test_map;",
    "    std::map<long,long> test_dict;\n    long i = 0;\n    while(test_tup != NULL) {\n        test_dict[i] = test_tup;\n        i++;\n        test_tup = test_tup->next;\n    }\n    return test_dict;",
    "  std::map<long,long> test_map;\n  long i = 0;\n  while(test_tup != 0) {\n    test_map[i] = test_tup % 10;\n    test_tup /= 10;\n    i++;\n  }\n  return test_map;",
    "    std::map<long,long> dict;\n    long tup_size = test_tup.size();\n    for(long i=0;i<tup_size;i+=2) {\n        dict[test_tup[i]] = test_tup[i+1];\n    }\n    return dict;",
    "\tstd::map<long,long> test_map;\n\tfor(long i=0;i<test_tup.size();i++) {\n\t\tif(i%2==0) {\n\t\t\ttest_map.insert(test_tup[i],test_tup[i+1]);\n\t\t}\n\t}\n\treturn test_map;",
    "    std::map<long,long> test_map;\n    for(long i=0;i<test_tup.size();i+=2) {\n        test_map[test_tup[i]] = test_tup[i+1];\n    }\n    return test_map;",
    "    std::map<long,long> test_dict;\n    long i = 0;\n    while(test_tup != 0) {\n        test_dict[i] = test_tup % 10;\n        test_tup /= 10;\n        i++;\n    }\n    return test_dict;",
    "    std::map<long,long> dict;\n    long i = 0;\n    while(test_tup != 0) {\n        dict[i] = test_tup%10;\n        test_tup /= 10;\n        i++;\n    }\n    return dict;",
    "    std::map<long,long> test_dict;\n    std::vector<long> test_vec;\n    while(test_tup > 0) {\n        test_vec.push_back(test_tup % 10);\n        test_tup /= 10;\n    }\n    for(int i = 0; i < test_vec.size(); i += 2) {\n        test_dict[test_vec[i]] = test_vec[i + 1];\n    }\n    return test_dict;",
    "    std::map<long,long> test_dict;\n    long test_tup_size = test_tup.size();\n    for (long i = 0; i < test_tup_size; i++) {\n        test_dict[test_tup[i]] = test_tup[i+1];\n    }\n    return test_dict;",
    "    std::map<long,long> test_dict;\n    for(int i = 0; i < test_tup.size(); i+=2) {\n        test_dict[test_tup[i]] = test_tup[i+1];\n    }\n    return test_dict;",
    "    std::map<long,long> test_dict;\n    for(int i = 0; i < test_tup.size(); i += 2) {\n        test_dict[test_tup[i]] = test_tup[i+1];\n    }\n    return test_dict;",
    "    std::map<long,long> my_map;\n    long key = 0;\n    long value = 0;\n    for (int i = 0; i < test_tup.size(); i++) {\n        if (i % 2 == 0) {\n            key = test_tup[i];\n        } else {\n            value = test_tup[i];\n            my_map[key] = value;\n        }\n    }\n    return my_map;",
    "    std::map<long,long> dict;\n    long key = test_tup[0];\n    for(long i=1;i<test_tup.size();i++) {\n        dict[key] = test_tup[i];\n        key = test_tup[i];\n    }\n    return dict;",
    "    std::map<long,long> test_map;\n    std::vector<long> test_vec;\n    while(test_tup) {\n        test_vec.push_back(test_tup%10);\n        test_tup /= 10;\n    }\n    for(int i = 0; i < test_vec.size()-1; i++) {\n        test_map[test_vec[i]] = test_vec[i+1];\n    }\n    return test_map;",
    "    std::map<long,long> test_dict;\n    long i = 0;\n    while (test_tup != 0) {\n        test_dict[i] = test_tup % 10;\n        test_tup /= 10;\n        i++;\n    }\n    return test_dict;",
    "    std::map<long,long> test_dict;\n    long test_tup_size = test_tup.size();\n    for (long i = 0; i < test_tup_size; i+=2) {\n        test_dict[test_tup[i]] = test_tup[i+1];\n    }\n    return test_dict;",
    "    std::map<long,long> test_map;\n    long key = test_tup[0];\n    for (long i = 1; i < test_tup.size(); i++) {\n        test_map[key] = test_tup[i];\n        key = test_tup[i];\n    }\n    return test_map;",
    "    std::map<long,long> test_dict;\n    long i = 0;\n    while (test_tup != 0) {\n        test_dict[i] = test_tup % 10;\n        test_tup /= 10;\n        i++;\n    }\n    return test_dict;",
    "    std::map<long,long> test_map;\n    long key = 0;\n    long value = 0;\n    for (long i = 0; i < test_tup.size(); i++) {\n        if (i % 2 == 0) {\n            key = test_tup[i];\n        }\n        else {\n            value = test_tup[i];\n            test_map.insert(std::pair<long,long>(key,value));\n        }\n    }\n    return test_map;",
    "    std::map<long,long> test_dict;\n    long i = 0;\n    while(test_tup) {\n        test_dict[i] = test_tup % 10;\n        test_tup /= 10;\n        i++;\n    }\n    return test_dict;",
    "    std::map<long,long> dict;\n    long key = test_tup[0];\n    for(long i = 1; i < test_tup.size(); i++) {\n        dict[key] = test_tup[i];\n        key = test_tup[i];\n    }\n    return dict;",
    "    std::map<long,long> test_map;\n    long i = 0;\n    while(test_tup != 0) {\n        test_map[i] = test_tup % 10;\n        test_tup /= 10;\n        i++;\n    }\n    return test_map;",
    "    std::map<long,long> test_dict;\n    long i = 0;\n    while(test_tup != 0) {\n        test_dict[i] = test_tup % 10;\n        test_tup /= 10;\n        i++;\n    }\n    return test_dict;",
    "    std::map<long,long> test_map;\n    long i = 0;\n    while(test_tup != 0) {\n        test_map[i] = test_tup % 10;\n        test_tup /= 10;\n        i++;\n    }\n    return test_map;",
    "    std::map<long,long> test_dict;\n    long key = test_tup[0];\n    for (long i = 1; i < test_tup.size(); i++) {\n        test_dict[key] = test_tup[i];\n        key = test_tup[i];\n    }\n    return test_dict;",
    "    std::map<long,long> dict;\n    long i = 0;\n    while(test_tup) {\n        dict[i] = test_tup % 10;\n        test_tup /= 10;\n        i++;\n    }\n    return dict;",
    "    std::map<long,long> test_dict;\n    long i = 0;\n    while (test_tup != 0) {\n        test_dict[i] = test_tup % 10;\n        test_tup /= 10;\n        i++;\n    }\n    return test_dict;",
    "    std::map<long,long> dict;\n    long key = test_tup[0];\n    for(int i=1;i<test_tup.size();i++) {\n        dict[key] = test_tup[i];\n        key = test_tup[i];\n    }\n    return dict;",
    "    std::map<long,long> test_map;\n    long i = 0;\n    while (test_tup) {\n        test_map[i] = test_tup % 10;\n        test_tup /= 10;\n        i++;\n    }\n    return test_map;",
    "    std::map<long,long> test_dict;\n    long i = 0;\n    while(test_tup) {\n        test_dict[i] = test_tup%10;\n        test_tup /= 10;\n        i++;\n    }\n    return test_dict;",
    "    std::map<long,long> test_map;\n    long i = 0;\n    while(test_tup != 0) {\n        test_map[i] = test_tup % 10;\n        test_tup /= 10;\n        i++;\n    }\n    return test_map;",
    "    std::map<long,long> test_map;\n    std::vector<long> test_vec;\n    while(test_tup) {\n        test_vec.push_back(test_tup%10);\n        test_tup/=10;\n    }\n    for(int i=0;i<test_vec.size();i+=2) {\n        test_map[test_vec[i]] = test_vec[i+1];\n    }\n    return test_map;",
    "    std::map<long,long> test_dict;\n    std::vector<long> test_vec;\n    while(test_tup) {\n        test_vec.push_back(test_tup%10);\n        test_tup /= 10;\n    }\n    for(int i=0;i<test_vec.size();i+=2) {\n        test_dict[test_vec[i]] = test_vec[i+1];\n    }\n    return test_dict;",
    "    std::map<long,long> dict;\n    long i = 0;\n    while(test_tup) {\n        long temp = test_tup % 10;\n        test_tup /= 10;\n        if(i % 2 == 0) {\n            dict[temp] = test_tup % 10;\n        }\n        i++;\n    }\n    return dict;",
    "    std::map<long,long> test_dict;\n    long temp = test_tup;\n    while (temp) {\n        test_dict[temp % 10] = (temp / 10) % 10;\n        temp /= 100;\n    }\n    return test_dict;",
    "    std::map<long,long> test_map;\n    long i = 0;\n    while(test_tup) {\n        test_map[i] = test_tup % 10;\n        test_tup /= 10;\n        i++;\n    }\n    return test_map;",
    "  std::map<long,long> test_dict;\n  long i = 0;\n  while (test_tup != 0) {\n    test_dict[i] = test_tup % 10;\n    test_tup /= 10;\n    i++;\n  }\n  return test_dict;",
    "    std::map<long,long> dict;\n    long i = 0;\n    while(test_tup) {\n        dict[i] = test_tup%10;\n        test_tup /= 10;\n        i++;\n    }\n    return dict;",
    "    std::map<long,long> test_dict;\n    long key = test_tup[0];\n    for(long i = 1; i < test_tup.size(); i++) {\n        test_dict[key] = test_tup[i];\n        key = test_tup[i];\n    }\n    return test_dict;",
    "  std::map<long,long> test_map;\n  long i = 0;\n  while(test_tup) {\n    test_map[i] = test_tup % 10;\n    test_tup /= 10;\n    i++;\n  }\n  return test_map;",
    "    std::map<long,long> test_dict;\n    long i = 0;\n    while(test_tup) {\n        test_dict[i] = test_tup % 10;\n        test_tup /= 10;\n        i++;\n    }\n    return test_dict;",
    "    std::map<long,long> test_map;\n    std::vector<long> test_vec;\n    while(test_tup > 0) {\n        test_vec.push_back(test_tup % 10);\n        test_tup /= 10;\n    }\n    for(int i = 0; i < test_vec.size(); i += 2) {\n        test_map[test_vec[i]] = test_vec[i+1];\n    }\n    return test_map;",
    "    std::map<long,long> test_map;\n    std::vector<long> test_vec;\n    while (test_tup > 0) {\n        test_vec.push_back(test_tup % 10);\n        test_tup /= 10;\n    }\n    for (int i = 0; i < test_vec.size(); i += 2) {\n        test_map[test_vec[i]] = test_vec[i+1];\n    }\n    return test_map;",
    "    std::map<long,long> test_map;\n    long i = 0;\n    while (test_tup != 0) {\n        test_map[i] = test_tup % 10;\n        test_tup /= 10;\n        i++;\n    }\n    return test_map;",
    "    std::map<long,long> test_dict;\n    long i = 0;\n    while (test_tup != 0) {\n        test_dict[i] = test_tup % 10;\n        test_tup /= 10;\n        i++;\n    }\n    return test_dict;",
    "    std::map<long,long> test_dict;\n    for(int i=0;i<test_tup.size();i+=2) {\n        test_dict[test_tup[i]] = test_tup[i+1];\n    }\n    return test_dict;",
    "    std::map<long,long> test_dict;\n    long i = 0;\n    while(test_tup != 0) {\n        test_dict[i] = test_tup % 10;\n        test_tup /= 10;\n        i++;\n    }\n    return test_dict;",
    "    std::map<long,long> test_dict;\n    long i = 0;\n    while(test_tup != 0) {\n        test_dict[i] = test_tup%10;\n        test_tup /= 10;\n        i++;\n    }\n    return test_dict;",
    "    std::map<long,long> test_dict;\n    for(long i = 0; i < test_tup.size(); i+=2) {\n        test_dict[test_tup[i]] = test_tup[i+1];\n    }\n    return test_dict;",
    "\tstd::map<long,long> test_map;\n\tstd::vector<long> test_vec;\n\twhile(test_tup) {\n\t\ttest_vec.push_back(test_tup%10);\n\t\ttest_tup /= 10;\n\t}\n\tfor(int i = 0; i < test_vec.size()-1; i++) {\n\t\ttest_map[test_vec[i]] = test_vec[i+1];\n\t}\n\treturn test_map;",
    "    std::map<long,long> dict;\n    long key = 0;\n    long value = 0;\n    while(test_tup) {\n        key = test_tup % 10;\n        test_tup = test_tup / 10;\n        value = test_tup % 10;\n        test_tup = test_tup / 10;\n        dict[key] = value;\n    }\n    return dict;",
    "    std::map<long,long> test_dict;\n    long key = test_tup[0];\n    for (int i = 1; i < test_tup.size(); i++) {\n        test_dict[key] = test_tup[i];\n        key = test_tup[i];\n    }\n    return test_dict;",
    "    std::map<long,long> dict;\n    long key = 0;\n    long value = 0;\n    while (test_tup) {\n        key = test_tup % 10;\n        test_tup /= 10;\n        value = test_tup % 10;\n        test_tup /= 10;\n        dict[key] = value;\n    }\n    return dict;",
    "    std::map<long,long> test_dict;\n    long i = 0;\n    while (test_tup) {\n        if (i % 2 == 0) {\n            test_dict[test_tup % 10] = 0;\n        } else {\n            test_dict[(test_tup / 10) % 10] = test_tup % 10;\n        }\n        test_tup /= 10;\n        i++;\n    }\n    return test_dict;",
    "    std::map<long,long> res;\n    long i = 0;\n    while(test_tup) {\n        if(test_tup & 1) {\n            res[i] = i+1;\n            i+=2;\n        }\n        test_tup >>= 1;\n    }\n    return res;",
    "    std::map<long,long> test_dict;\n    std::vector<long> test_vec;\n    while(test_tup) {\n        test_vec.push_back(test_tup % 10);\n        test_tup /= 10;\n    }\n    for(int i = 0; i < test_vec.size(); i += 2) {\n        test_dict[test_vec[i]] = test_vec[i + 1];\n    }\n    return test_dict;",
    "    std::map<long,long> test_map;\n    long i = 0;\n    while(test_tup != 0) {\n        test_map[i] = test_tup % 10;\n        test_tup /= 10;\n        i++;\n    }\n    return test_map;",
    "    std::map<long,long> test_dict;\n    long i = 0;\n    while (i < test_tup.size()) {\n        test_dict[test_tup[i]] = test_tup[i+1];\n        i += 2;\n    }\n    return test_dict;",
    "    std::map<long,long> test_dict;\n    for (int i = 0; i < test_tup.size(); i += 2) {\n        test_dict[test_tup[i]] = test_tup[i + 1];\n    }\n    return test_dict;",
    "    std::map<long,long> test_dict;\n    long i = 0;\n    long j = 1;\n    while(j < test_tup.size()) {\n        test_dict[test_tup[i]] = test_tup[j];\n        i += 2;\n        j += 2;\n    }\n    return test_dict;",
    "    std::map<long,long> test_map;\n    long key = test_tup[0];\n    for (long i = 1; i < test_tup.size(); i++) {\n        test_map[key] = test_tup[i];\n        key = test_tup[i];\n    }\n    return test_map;",
    "    std::map<long,long> test_map;\n    for(long i=0;i<test_tup.size();i+=2) {\n        test_map[test_tup[i]] = test_tup[i+1];\n    }\n    return test_map;",
    "  std::map<long,long> test_dict;\n  long i = 0;\n  while (test_tup != 0) {\n    test_dict[i] = test_tup % 10;\n    test_tup /= 10;\n    i++;\n  }\n  return test_dict;",
    "    std::map<long,long> test_dict;\n    for(int i=0;i<test_tup.size();i+=2) {\n        test_dict[test_tup[i]] = test_tup[i+1];\n    }\n    return test_dict;",
    "    std::map<long,long> test_map;\n    std::vector<long> test_vec;\n    while(test_tup) {\n        test_vec.push_back(test_tup%10);\n        test_tup /= 10;\n    }\n    for(int i=0;i<test_vec.size();i+=2) {\n        test_map[test_vec[i]] = test_vec[i+1];\n    }\n    return test_map;",
    "    std::map<long,long> test_dict;\n    for(int i=0;i<test_tup.size();i+=2) {\n        test_dict[test_tup[i]] = test_tup[i+1];\n    }\n    return test_dict;",
    "    std::map<long,long> dict;\n    long temp = test_tup;\n    while(temp) {\n        long key = temp%10;\n        temp /= 10;\n        long value = temp%10;\n        temp /= 10;\n        dict[key] = value;\n    }\n    return dict;",
    "    std::map<long,long> dict;\n    long key = 0;\n    long value = 0;\n    while (test_tup != 0) {\n        key = test_tup % 10;\n        test_tup = test_tup / 10;\n        value = test_tup % 10;\n        test_tup = test_tup / 10;\n        dict[key] = value;\n    }\n    return dict;",
    "    std::map<long,long> dict;\n    long i = 0;\n    while (test_tup) {\n        dict[i] = test_tup % 10;\n        test_tup /= 10;\n        i++;\n    }\n    return dict;",
    "    std::map<long,long> test_dict;\n    for(int i=0;i<test_tup.size();i+=2) {\n        test_dict[test_tup[i]] = test_tup[i+1];\n    }\n    return test_dict;"
  ]
}
{
  "name": "mbpp_269_ascii_value",
  "language": "cpp",
  "prompt": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the ascii value of a character.\nlong ascii_value(std::string k) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_269_ascii_value.py",
  "prompt_terminology": "verbatim",
  "tests": "}\nint main() {\n    auto candidate = ascii_value;\n    assert(candidate((\"A\")) == (65));\n    assert(candidate((\"R\")) == (82));\n    assert(candidate((\"S\")) == (83));\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    long ascii_value = 0;\n    for (int i = 0; i < k.length(); i++) {\n        ascii_value += (int)k[i];\n    }\n    return ascii_value;",
    "  int i = 0;\n  long sum = 0;\n  while (k[i] != '\\0') {\n    sum += k[i];\n    i++;\n  }\n  return sum;",
    "  long sum = 0;\n  for (int i = 0; i < k.length(); i++) {\n    sum += (int)k[i];\n  }\n  return sum;",
    "  long ascii_value = 0;\n  for(int i = 0; i < k.length(); i++) {\n    ascii_value = ascii_value + (int)k[i];\n  }\n  return ascii_value;",
    "\tlong sum = 0;\n\tfor (int i = 0; i < k.length(); i++) {\n\t\tsum += k[i];\n\t}\n\treturn sum;",
    "\tlong ascii_value = 0;\n\tfor (int i = 0; i < k.length(); i++) {\n\t\tascii_value += (int)k[i];\n\t}\n\treturn ascii_value;",
    "  long sum = 0;\n  for(int i = 0; i < k.length(); i++) {\n    sum += k[i];\n  }\n  return sum;",
    "\tlong sum = 0;\n\tfor (int i = 0; i < k.length(); i++) {\n\t\tsum += k[i];\n\t}\n\treturn sum;",
    "\tlong sum = 0;\n\tfor (int i = 0; i < k.length(); i++) {\n\t\tsum += (int)k[i];\n\t}\n\treturn sum;",
    "\treturn k[0];",
    "  long sum = 0;\n  for (int i = 0; i < k.length(); i++) {\n    sum = sum + k[i];\n  }\n  return sum;",
    "\tlong ascii = 0;\n\tfor (int i = 0; i < k.length(); i++) {\n\t\tascii += k[i];\n\t}\n\treturn ascii;",
    "\tlong ascii_value = 0;\n\tfor (int i = 0; i < k.length(); i++) {\n\t\tascii_value = ascii_value + int(k[i]);\n\t}\n\treturn ascii_value;",
    "\treturn k[0];",
    "  long ascii_value = 0;\n  for(int i = 0; i < k.length(); i++) {\n    ascii_value += k[i];\n  }\n  return ascii_value;",
    "  long ascii_value = 0;\n  for (int i = 0; i < k.length(); i++) {\n    ascii_value += k[i];\n  }\n  return ascii_value;",
    "\tlong ascii_value = 0;\n\tfor (int i = 0; i < k.length(); i++) {\n\t\tascii_value += (int)k[i];\n\t}\n\treturn ascii_value;",
    "\tint i;\n\tlong sum = 0;\n\tfor (i = 0; i < k.length(); i++) {\n\t\tsum = sum + k[i];\n\t}\n\treturn sum;",
    "  long ascii_value = 0;\n  for (int i = 0; i < k.length(); i++) {\n    ascii_value += k[i];\n  }\n  return ascii_value;",
    "\tlong ascii_value = 0;\n\tfor (int i = 0; i < k.length(); i++) {\n\t\tascii_value += int(k[i]);\n\t}\n\treturn ascii_value;"
  ]
}
{
  "name": "mbpp_805_max_sum_list",
  "language": "cpp",
  "prompt": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns the list in a list of lists whose sum of elements is the highest.\nstd::vector<long> max_sum_list(std::vector<std::vector<long>> lists) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_805_max_sum_list.py",
  "prompt_terminology": "verbatim",
  "tests": "}\nint main() {\n    auto candidate = max_sum_list;\n    assert(candidate((std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)1, (long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)10, (long)11, (long)12}), (std::vector<long>)std::vector<long>({(long)7, (long)8, (long)9})}))) == (std::vector<long>({(long)10, (long)11, (long)12})));\n    assert(candidate((std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)2, (long)1}), (std::vector<long>)std::vector<long>({(long)6, (long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)12, (long)11, (long)10})}))) == (std::vector<long>({(long)12, (long)11, (long)10})));\n    assert(candidate((std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3, (long)1})}))) == (std::vector<long>({(long)2, (long)3, (long)1})));\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    std::vector<long> max_list;\n    long max_sum = 0;\n    for(auto list : lists) {\n        long sum = 0;\n        for(auto elem : list) {\n            sum += elem;\n        }\n        if(sum > max_sum) {\n            max_sum = sum;\n            max_list = list;\n        }\n    }\n    return max_list;",
    "    std::vector<long> max_sum_list;\n    long max_sum = 0;\n    for(auto list: lists) {\n        long sum = 0;\n        for(auto element: list) {\n            sum += element;\n        }\n        if(sum > max_sum) {\n            max_sum = sum;\n            max_sum_list = list;\n        }\n    }\n    return max_sum_list;",
    "    long max_sum = 0;\n    std::vector<long> max_sum_list;\n    for (auto list : lists) {\n        long sum = 0;\n        for (auto elem : list) {\n            sum += elem;\n        }\n        if (sum > max_sum) {\n            max_sum = sum;\n            max_sum_list = list;\n        }\n    }\n    return max_sum_list;",
    "    std::vector<long> max_list;\n    long max_sum = 0;\n    for (auto list : lists) {\n        long sum = 0;\n        for (auto element : list) {\n            sum += element;\n        }\n        if (sum > max_sum) {\n            max_sum = sum;\n            max_list = list;\n        }\n    }\n    return max_list;",
    "    std::vector<long> max_sum_list;\n    long max_sum = 0;\n    for (auto list : lists) {\n        long sum = 0;\n        for (auto element : list) {\n            sum += element;\n        }\n        if (sum > max_sum) {\n            max_sum = sum;\n            max_sum_list = list;\n        }\n    }\n    return max_sum_list;",
    "    std::vector<long> max_list;\n    long max_sum = 0;\n    for (auto list : lists) {\n        long sum = 0;\n        for (auto elem : list) {\n            sum += elem;\n        }\n        if (sum > max_sum) {\n            max_sum = sum;\n            max_list = list;\n        }\n    }\n    return max_list;",
    "    std::vector<long> max_list;\n    long max_sum = 0;\n    for (auto list : lists) {\n        long sum = 0;\n        for (auto element : list) {\n            sum += element;\n        }\n        if (sum > max_sum) {\n            max_sum = sum;\n            max_list = list;\n        }\n    }\n    return max_list;",
    "    std::vector<long> max_list;\n    long max_sum = 0;\n    for (auto list : lists) {\n        long sum = 0;\n        for (auto element : list) {\n            sum += element;\n        }\n        if (sum > max_sum) {\n            max_sum = sum;\n            max_list = list;\n        }\n    }\n    return max_list;",
    "  std::vector<long> max_list;\n  long max_sum = 0;\n  for (auto list : lists) {\n    long sum = 0;\n    for (auto elem : list) {\n      sum += elem;\n    }\n    if (sum > max_sum) {\n      max_sum = sum;\n      max_list = list;\n    }\n  }\n  return max_list;",
    "    std::vector<long> max_list;\n    long max_sum = 0;\n    for (auto list : lists) {\n        long sum = 0;\n        for (auto element : list) {\n            sum += element;\n        }\n        if (sum > max_sum) {\n            max_sum = sum;\n            max_list = list;\n        }\n    }\n    return max_list;",
    "    std::vector<long> max_list;\n    long max_sum = 0;\n    for (auto list : lists) {\n        long sum = 0;\n        for (auto elem : list) {\n            sum += elem;\n        }\n        if (sum > max_sum) {\n            max_sum = sum;\n            max_list = list;\n        }\n    }\n    return max_list;",
    "    std::vector<long> max_list;\n    long max_sum = 0;\n    for (auto list : lists) {\n        long sum = 0;\n        for (auto elem : list) {\n            sum += elem;\n        }\n        if (sum > max_sum) {\n            max_sum = sum;\n            max_list = list;\n        }\n    }\n    return max_list;",
    "    std::vector<long> max_list;\n    long max_sum = 0;\n    for (auto list : lists) {\n        long sum = 0;\n        for (auto element : list) {\n            sum += element;\n        }\n        if (sum > max_sum) {\n            max_sum = sum;\n            max_list = list;\n        }\n    }\n    return max_list;",
    "    std::vector<long> max_list;\n    long max_sum = 0;\n    for (auto list : lists) {\n        long sum = 0;\n        for (auto num : list) {\n            sum += num;\n        }\n        if (sum > max_sum) {\n            max_sum = sum;\n            max_list = list;\n        }\n    }\n    return max_list;",
    "    std::vector<long> max_list;\n    long max_sum = 0;\n    for(int i = 0; i < lists.size(); i++) {\n        long sum = 0;\n        for(int j = 0; j < lists[i].size(); j++) {\n            sum += lists[i][j];\n        }\n        if(sum > max_sum) {\n            max_sum = sum;\n            max_list = lists[i];\n        }\n    }\n    return max_list;",
    "    std::vector<long> max_list;\n    long max_sum = 0;\n    for (auto list : lists) {\n        long sum = 0;\n        for (auto element : list) {\n            sum += element;\n        }\n        if (sum > max_sum) {\n            max_sum = sum;\n            max_list = list;\n        }\n    }\n    return max_list;",
    "    std::vector<long> max_list;\n    long max_sum = 0;\n    for (auto list : lists) {\n        long sum = 0;\n        for (auto num : list) {\n            sum += num;\n        }\n        if (sum > max_sum) {\n            max_sum = sum;\n            max_list = list;\n        }\n    }\n    return max_list;",
    "    std::vector<long> max_list;\n    long max_sum = 0;\n    for (auto list : lists) {\n        long sum = 0;\n        for (auto elem : list) {\n            sum += elem;\n        }\n        if (sum > max_sum) {\n            max_sum = sum;\n            max_list = list;\n        }\n    }\n    return max_list;",
    "    std::vector<long> max_list;\n    long max_sum = 0;\n    for (auto list : lists) {\n        long sum = 0;\n        for (auto element : list) {\n            sum += element;\n        }\n        if (sum > max_sum) {\n            max_sum = sum;\n            max_list = list;\n        }\n    }\n    return max_list;",
    "    long max = 0;\n    std::vector<long> max_list;\n    for (auto list : lists) {\n        long sum = 0;\n        for (auto elem : list) {\n            sum += elem;\n        }\n        if (sum > max) {\n            max = sum;\n            max_list = list;\n        }\n    }\n    return max_list;"
  ]
}
{
  "name": "mbpp_754_extract_index_list",
  "language": "cpp",
  "prompt": "#include<assert.h>\n#include<bits/stdc++.h>\n// We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\nstd::any extract_index_list(std::vector<long> l1, std::vector<long> l2, std::vector<long> l3) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_754_extract_index_list.py",
  "prompt_terminology": "verbatim",
  "tests": "}\nint main() {\n    auto candidate = extract_index_list;\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)5})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)7}))) == (std::any({(long)1, (long)6})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)6, (long)5, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)5})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)6, (long)6, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any()));\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "results": [
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\nstd::any extract_index_list(std::vector<long> l1, std::vector<long> l2, std::vector<long> l3) {\n    std::vector<long> result;\n    for (int i = 0; i < l1.size(); i++) {\n        if (l1[i] == l2[i] && l2[i] == l3[i]) {\n            result.push_back(l1[i]);\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = extract_index_list;\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)5})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)7}))) == (std::any({(long)1, (long)6})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)6, (long)5, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)5})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)6, (long)6, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any()));\n}\n",
      "timestamp": 1665517341,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/tmp/tmpv_xccequ.cpp: In function \u2018int main()\u2019:\n/tmp/tmpv_xccequ.cpp:15:311: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n      |                                                                                                                                                                                                                                                                                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /t",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\nstd::any extract_index_list(std::vector<long> l1, std::vector<long> l2, std::vector<long> l3) {\n    std::vector<long> result;\n    for (int i = 0; i < l1.size(); i++) {\n        if (l1[i] == l2[i] && l2[i] == l3[i]) {\n            result.push_back(l1[i]);\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = extract_index_list;\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)5})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)7}))) == (std::any({(long)1, (long)6})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)6, (long)5, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)5})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)6, (long)6, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any()));\n}\n",
      "timestamp": 1665517341,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/tmp/tmpv_xccequ.cpp: In function \u2018int main()\u2019:\n/tmp/tmpv_xccequ.cpp:15:311: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n      |                                                                                                                                                                                                                                                                                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /t",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\nstd::any extract_index_list(std::vector<long> l1, std::vector<long> l2, std::vector<long> l3) {\n    std::vector<long> result;\n    for (int i = 0; i < l1.size(); i++) {\n        if (l1[i] == l2[i] && l2[i] == l3[i]) {\n            result.push_back(l1[i]);\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = extract_index_list;\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)5})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)7}))) == (std::any({(long)1, (long)6})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)6, (long)5, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)5})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)6, (long)6, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any()));\n}\n",
      "timestamp": 1665517341,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/tmp/tmpv_xccequ.cpp: In function \u2018int main()\u2019:\n/tmp/tmpv_xccequ.cpp:15:311: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n      |                                                                                                                                                                                                                                                                                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /t",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\nstd::any extract_index_list(std::vector<long> l1, std::vector<long> l2, std::vector<long> l3) {\n    std::vector<long> result;\n    int i = 0;\n    int j = 0;\n    int k = 0;\n    while (i < l1.size() && j < l2.size() && k < l3.size()) {\n        if (l1[i] == l2[j] && l2[j] == l3[k]) {\n            result.push_back(l1[i]);\n            i++;\n            j++;\n            k++;\n        } else if (l1[i] < l2[j]) {\n            i++;\n        } else if (l2[j] < l3[k]) {\n            j++;\n        } else {\n            k++;\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = extract_index_list;\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)5})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)7}))) == (std::any({(long)1, (long)6})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)6, (long)5, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)5})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)6, (long)6, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any()));\n}\n",
      "timestamp": 1665517342,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpex2a5qkg.cpp:2:\n/tmp/tmpex2a5qkg.cpp: In function \u2018int main()\u2019:\n/tmp/tmpex2a5qkg.cpp:27:311: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   27 |     assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n      |                                                                                                                                                                                                                                                                                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpex2a5qkg.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /t",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\nstd::any extract_index_list(std::vector<long> l1, std::vector<long> l2, std::vector<long> l3) {\n    std::vector<long> result;\n    for (int i = 0; i < l1.size(); i++) {\n        if (l1[i] == l2[i] && l1[i] == l3[i]) {\n            result.push_back(l1[i]);\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = extract_index_list;\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)5})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)7}))) == (std::any({(long)1, (long)6})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)6, (long)5, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)5})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)6, (long)6, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any()));\n}\n",
      "timestamp": 1665517341,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmptmybwk0a.cpp:2:\n/tmp/tmptmybwk0a.cpp: In function \u2018int main()\u2019:\n/tmp/tmptmybwk0a.cpp:15:311: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n      |                                                                                                                                                                                                                                                                                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmptmybwk0a.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /t",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\nstd::any extract_index_list(std::vector<long> l1, std::vector<long> l2, std::vector<long> l3) {\n    std::vector<long> result;\n    std::vector<long>::iterator it1 = l1.begin();\n    std::vector<long>::iterator it2 = l2.begin();\n    std::vector<long>::iterator it3 = l3.begin();\n    while(it1 != l1.end() && it2 != l2.end() && it3 != l3.end()) {\n        if(*it1 == *it2 && *it2 == *it3) {\n            result.push_back(*it1);\n            it1++;\n            it2++;\n            it3++;\n        } else if(*it1 < *it2) {\n            it1++;\n        } else if(*it2 < *it3) {\n            it2++;\n        } else {\n            it3++;\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = extract_index_list;\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)5})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)7}))) == (std::any({(long)1, (long)6})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)6, (long)5, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)5})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)6, (long)6, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any()));\n}\n",
      "timestamp": 1665517341,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmprw7xc3xl.cpp:2:\n/tmp/tmprw7xc3xl.cpp: In function \u2018int main()\u2019:\n/tmp/tmprw7xc3xl.cpp:27:311: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   27 |     assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n      |                                                                                                                                                                                                                                                                                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmprw7xc3xl.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /t",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\nstd::any extract_index_list(std::vector<long> l1, std::vector<long> l2, std::vector<long> l3) {\n    std::vector<long> result;\n    for (int i = 0; i < l1.size(); i++) {\n        if (l1[i] == l2[i] && l2[i] == l3[i]) {\n            result.push_back(l1[i]);\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = extract_index_list;\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)5})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)7}))) == (std::any({(long)1, (long)6})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)6, (long)5, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)5})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)6, (long)6, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any()));\n}\n",
      "timestamp": 1665517341,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/tmp/tmpv_xccequ.cpp: In function \u2018int main()\u2019:\n/tmp/tmpv_xccequ.cpp:15:311: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n      |                                                                                                                                                                                                                                                                                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /t",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\nstd::any extract_index_list(std::vector<long> l1, std::vector<long> l2, std::vector<long> l3) {\n    std::vector<long> common_elements;\n    for (int i = 0; i < l1.size(); i++) {\n        if (l1[i] == l2[i] && l2[i] == l3[i]) {\n            common_elements.push_back(l1[i]);\n        }\n    }\n    return common_elements;\n}\nint main() {\n    auto candidate = extract_index_list;\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)5})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)7}))) == (std::any({(long)1, (long)6})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)6, (long)5, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)5})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)6, (long)6, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any()));\n}\n",
      "timestamp": 1665517341,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpawj13wad.cpp:2:\n/tmp/tmpawj13wad.cpp: In function \u2018int main()\u2019:\n/tmp/tmpawj13wad.cpp:15:311: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n      |                                                                                                                                                                                                                                                                                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpawj13wad.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /t",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\nstd::any extract_index_list(std::vector<long> l1, std::vector<long> l2, std::vector<long> l3) {\n    std::vector<long> result;\n    std::vector<long>::iterator it1 = l1.begin();\n    std::vector<long>::iterator it2 = l2.begin();\n    std::vector<long>::iterator it3 = l3.begin();\n    while (it1 != l1.end() && it2 != l2.end() && it3 != l3.end()) {\n        if (*it1 == *it2 && *it2 == *it3) {\n            result.push_back(*it1);\n            it1++;\n            it2++;\n            it3++;\n        } else if (*it1 < *it2) {\n            it1++;\n        } else if (*it2 < *it3) {\n            it2++;\n        } else {\n            it3++;\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = extract_index_list;\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)5})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)7}))) == (std::any({(long)1, (long)6})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)6, (long)5, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)5})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)6, (long)6, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any()));\n}\n",
      "timestamp": 1665517341,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpl0vzx56j.cpp:2:\n/tmp/tmpl0vzx56j.cpp: In function \u2018int main()\u2019:\n/tmp/tmpl0vzx56j.cpp:27:311: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   27 |     assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n      |                                                                                                                                                                                                                                                                                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpl0vzx56j.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /t",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\nstd::any extract_index_list(std::vector<long> l1, std::vector<long> l2, std::vector<long> l3) {\n    std::vector<long> result;\n    for (int i = 0; i < l1.size(); i++) {\n        if (l1[i] == l2[i] && l2[i] == l3[i]) {\n            result.push_back(l1[i]);\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = extract_index_list;\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)5})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)7}))) == (std::any({(long)1, (long)6})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)6, (long)5, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)5})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)6, (long)6, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any()));\n}\n",
      "timestamp": 1665517341,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/tmp/tmpv_xccequ.cpp: In function \u2018int main()\u2019:\n/tmp/tmpv_xccequ.cpp:15:311: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n      |                                                                                                                                                                                                                                                                                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /t",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\nstd::any extract_index_list(std::vector<long> l1, std::vector<long> l2, std::vector<long> l3) {\n    std::vector<long> result;\n    std::vector<long>::iterator it1 = l1.begin();\n    std::vector<long>::iterator it2 = l2.begin();\n    std::vector<long>::iterator it3 = l3.begin();\n    while(it1 != l1.end() && it2 != l2.end() && it3 != l3.end()) {\n        if(*it1 == *it2 && *it1 == *it3) {\n            result.push_back(*it1);\n            it1++;\n            it2++;\n            it3++;\n        } else if(*it1 < *it2) {\n            it1++;\n        } else if(*it2 < *it3) {\n            it2++;\n        } else {\n            it3++;\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = extract_index_list;\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)5})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)7}))) == (std::any({(long)1, (long)6})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)6, (long)5, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)5})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)6, (long)6, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any()));\n}\n",
      "timestamp": 1665517341,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp12chlg44.cpp:2:\n/tmp/tmp12chlg44.cpp: In function \u2018int main()\u2019:\n/tmp/tmp12chlg44.cpp:27:311: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   27 |     assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n      |                                                                                                                                                                                                                                                                                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmp12chlg44.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /t",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\nstd::any extract_index_list(std::vector<long> l1, std::vector<long> l2, std::vector<long> l3) {\n    std::vector<long> result;\n    for (int i = 0; i < l1.size(); i++) {\n        if (l1[i] == l2[i] && l1[i] == l3[i]) {\n            result.push_back(l1[i]);\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = extract_index_list;\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)5})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)7}))) == (std::any({(long)1, (long)6})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)6, (long)5, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)5})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)6, (long)6, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any()));\n}\n",
      "timestamp": 1665517341,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmptmybwk0a.cpp:2:\n/tmp/tmptmybwk0a.cpp: In function \u2018int main()\u2019:\n/tmp/tmptmybwk0a.cpp:15:311: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n      |                                                                                                                                                                                                                                                                                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmptmybwk0a.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /t",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\nstd::any extract_index_list(std::vector<long> l1, std::vector<long> l2, std::vector<long> l3) {\n    std::vector<long> result;\n    for (int i = 0; i < l1.size(); i++) {\n        if (l1[i] == l2[i] && l2[i] == l3[i]) {\n            result.push_back(l1[i]);\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = extract_index_list;\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)5})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)7}))) == (std::any({(long)1, (long)6})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)6, (long)5, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)5})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)6, (long)6, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any()));\n}\n",
      "timestamp": 1665517341,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/tmp/tmpv_xccequ.cpp: In function \u2018int main()\u2019:\n/tmp/tmpv_xccequ.cpp:15:311: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n      |                                                                                                                                                                                                                                                                                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /t",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\nstd::any extract_index_list(std::vector<long> l1, std::vector<long> l2, std::vector<long> l3) {\n    std::vector<long> result;\n    for(int i = 0; i < l1.size(); i++) {\n        if(l1[i] == l2[i] && l2[i] == l3[i]) {\n            result.push_back(l1[i]);\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = extract_index_list;\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)5})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)7}))) == (std::any({(long)1, (long)6})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)6, (long)5, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)5})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)6, (long)6, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any()));\n}\n",
      "timestamp": 1665517341,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpcnh5dyna.cpp:2:\n/tmp/tmpcnh5dyna.cpp: In function \u2018int main()\u2019:\n/tmp/tmpcnh5dyna.cpp:15:311: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n      |                                                                                                                                                                                                                                                                                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpcnh5dyna.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /t",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\nstd::any extract_index_list(std::vector<long> l1, std::vector<long> l2, std::vector<long> l3) {\n    std::vector<long> result;\n    for (int i = 0; i < l1.size(); i++) {\n        if (l1[i] == l2[i] && l1[i] == l3[i]) {\n            result.push_back(l1[i]);\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = extract_index_list;\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)5})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)7}))) == (std::any({(long)1, (long)6})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)6, (long)5, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)5})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)6, (long)6, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any()));\n}\n",
      "timestamp": 1665517341,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmptmybwk0a.cpp:2:\n/tmp/tmptmybwk0a.cpp: In function \u2018int main()\u2019:\n/tmp/tmptmybwk0a.cpp:15:311: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n      |                                                                                                                                                                                                                                                                                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmptmybwk0a.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /t",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\nstd::any extract_index_list(std::vector<long> l1, std::vector<long> l2, std::vector<long> l3) {\n    std::vector<long> result;\n    for(int i = 0; i < l1.size(); i++) {\n        if(l1[i] == l2[i] && l2[i] == l3[i]) {\n            result.push_back(l1[i]);\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = extract_index_list;\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)5})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)7}))) == (std::any({(long)1, (long)6})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)6, (long)5, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)5})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)6, (long)6, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any()));\n}\n",
      "timestamp": 1665517341,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpcnh5dyna.cpp:2:\n/tmp/tmpcnh5dyna.cpp: In function \u2018int main()\u2019:\n/tmp/tmpcnh5dyna.cpp:15:311: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n      |                                                                                                                                                                                                                                                                                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpcnh5dyna.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /t",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\nstd::any extract_index_list(std::vector<long> l1, std::vector<long> l2, std::vector<long> l3) {\n    std::vector<long> result;\n    for (int i = 0; i < l1.size(); i++) {\n        if (l1[i] == l2[i] && l2[i] == l3[i]) {\n            result.push_back(l1[i]);\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = extract_index_list;\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)5})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)7}))) == (std::any({(long)1, (long)6})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)6, (long)5, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)5})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)6, (long)6, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any()));\n}\n",
      "timestamp": 1665517341,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/tmp/tmpv_xccequ.cpp: In function \u2018int main()\u2019:\n/tmp/tmpv_xccequ.cpp:15:311: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n      |                                                                                                                                                                                                                                                                                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /t",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\nstd::any extract_index_list(std::vector<long> l1, std::vector<long> l2, std::vector<long> l3) {\n    std::vector<long> result;\n    for (int i = 0; i < l1.size(); i++) {\n        if (l1[i] == l2[i] && l2[i] == l3[i]) {\n            result.push_back(l1[i]);\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = extract_index_list;\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)5})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)7}))) == (std::any({(long)1, (long)6})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)6, (long)5, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)5})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)6, (long)6, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any()));\n}\n",
      "timestamp": 1665517341,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/tmp/tmpv_xccequ.cpp: In function \u2018int main()\u2019:\n/tmp/tmpv_xccequ.cpp:15:311: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n      |                                                                                                                                                                                                                                                                                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /t",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\nstd::any extract_index_list(std::vector<long> l1, std::vector<long> l2, std::vector<long> l3) {\n    std::vector<long> result;\n    for (int i = 0; i < l1.size(); i++) {\n        if (l1[i] == l2[i] && l2[i] == l3[i]) {\n            result.push_back(l1[i]);\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = extract_index_list;\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)5})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)7}))) == (std::any({(long)1, (long)6})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)6, (long)5, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)5})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)6, (long)6, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any()));\n}\n",
      "timestamp": 1665517341,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/tmp/tmpv_xccequ.cpp: In function \u2018int main()\u2019:\n/tmp/tmpv_xccequ.cpp:15:311: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n      |                                                                                                                                                                                                                                                                                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /t",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\nstd::any extract_index_list(std::vector<long> l1, std::vector<long> l2, std::vector<long> l3) {\n    std::vector<long> result;\n    std::vector<long>::iterator it1 = l1.begin();\n    std::vector<long>::iterator it2 = l2.begin();\n    std::vector<long>::iterator it3 = l3.begin();\n    while (it1 != l1.end() && it2 != l2.end() && it3 != l3.end()) {\n        if (*it1 == *it2 && *it2 == *it3) {\n            result.push_back(*it1);\n            it1++;\n            it2++;\n            it3++;\n        } else if (*it1 < *it2) {\n            it1++;\n        } else if (*it2 < *it3) {\n            it2++;\n        } else {\n            it3++;\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = extract_index_list;\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)5})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)7}))) == (std::any({(long)1, (long)6})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)6, (long)5, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)5})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)6, (long)6, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any()));\n}\n",
      "timestamp": 1665517341,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpl0vzx56j.cpp:2:\n/tmp/tmpl0vzx56j.cpp: In function \u2018int main()\u2019:\n/tmp/tmpl0vzx56j.cpp:27:311: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   27 |     assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n      |                                                                                                                                                                                                                                                                                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpl0vzx56j.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /t",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\nstd::any extract_index_list(std::vector<long> l1, std::vector<long> l2, std::vector<long> l3) {\n    std::vector<long> result;\n    for (int i = 0; i < l1.size(); i++) {\n        if (l1[i] == l2[i] && l2[i] == l3[i]) {\n            result.push_back(l1[i]);\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = extract_index_list;\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)5})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)7}))) == (std::any({(long)1, (long)6})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)6, (long)5, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)5})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)6, (long)6, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any()));\n}\n",
      "timestamp": 1665517341,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/tmp/tmpv_xccequ.cpp: In function \u2018int main()\u2019:\n/tmp/tmpv_xccequ.cpp:15:311: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n      |                                                                                                                                                                                                                                                                                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /t",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\nstd::any extract_index_list(std::vector<long> l1, std::vector<long> l2, std::vector<long> l3) {\n    std::vector<long> result;\n    for (int i = 0; i < l1.size(); i++) {\n        if (l1[i] == l2[i] && l2[i] == l3[i]) {\n            result.push_back(l1[i]);\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = extract_index_list;\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)5})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)7}))) == (std::any({(long)1, (long)6})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)6, (long)5, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)5})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)6, (long)6, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any()));\n}\n",
      "timestamp": 1665517341,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/tmp/tmpv_xccequ.cpp: In function \u2018int main()\u2019:\n/tmp/tmpv_xccequ.cpp:15:311: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n      |                                                                                                                                                                                                                                                                                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /t",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\nstd::any extract_index_list(std::vector<long> l1, std::vector<long> l2, std::vector<long> l3) {\n    std::vector<long> result;\n    for(int i = 0; i < l1.size(); i++) {\n        if(l1[i] == l2[i] && l2[i] == l3[i]) {\n            result.push_back(l1[i]);\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = extract_index_list;\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)5})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)7}))) == (std::any({(long)1, (long)6})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)6, (long)5, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)5})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)6, (long)6, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any()));\n}\n",
      "timestamp": 1665517341,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpcnh5dyna.cpp:2:\n/tmp/tmpcnh5dyna.cpp: In function \u2018int main()\u2019:\n/tmp/tmpcnh5dyna.cpp:15:311: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n      |                                                                                                                                                                                                                                                                                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpcnh5dyna.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /t",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\nstd::any extract_index_list(std::vector<long> l1, std::vector<long> l2, std::vector<long> l3) {\n    std::vector<long> result;\n    for (int i = 0; i < l1.size(); i++) {\n        if (l1[i] == l2[i] && l2[i] == l3[i]) {\n            result.push_back(l1[i]);\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = extract_index_list;\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)5})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)7}))) == (std::any({(long)1, (long)6})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)6, (long)5, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)5})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)6, (long)6, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any()));\n}\n",
      "timestamp": 1665517341,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/tmp/tmpv_xccequ.cpp: In function \u2018int main()\u2019:\n/tmp/tmpv_xccequ.cpp:15:311: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n      |                                                                                                                                                                                                                                                                                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /t",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\nstd::any extract_index_list(std::vector<long> l1, std::vector<long> l2, std::vector<long> l3) {\n    std::vector<long> result;\n    for (int i = 0; i < l1.size(); i++) {\n        if (l1[i] == l2[i] && l2[i] == l3[i]) {\n            result.push_back(l1[i]);\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = extract_index_list;\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)5})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)7}))) == (std::any({(long)1, (long)6})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)6, (long)5, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)5})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)6, (long)6, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any()));\n}\n",
      "timestamp": 1665517341,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/tmp/tmpv_xccequ.cpp: In function \u2018int main()\u2019:\n/tmp/tmpv_xccequ.cpp:15:311: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n      |                                                                                                                                                                                                                                                                                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /t",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\nstd::any extract_index_list(std::vector<long> l1, std::vector<long> l2, std::vector<long> l3) {\n    std::vector<long> result;\n    for (int i = 0; i < l1.size(); i++) {\n        if (l1[i] == l2[i] && l2[i] == l3[i]) {\n            result.push_back(l1[i]);\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = extract_index_list;\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)5})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)7}))) == (std::any({(long)1, (long)6})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)6, (long)5, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)5})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)6, (long)6, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any()));\n}\n",
      "timestamp": 1665517341,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/tmp/tmpv_xccequ.cpp: In function \u2018int main()\u2019:\n/tmp/tmpv_xccequ.cpp:15:311: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n      |                                                                                                                                                                                                                                                                                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /t",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\nstd::any extract_index_list(std::vector<long> l1, std::vector<long> l2, std::vector<long> l3) {\n    std::vector<long> result;\n    for (int i = 0; i < l1.size(); i++) {\n        if (l1[i] == l2[i] && l2[i] == l3[i]) {\n            result.push_back(l1[i]);\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = extract_index_list;\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)5})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)7}))) == (std::any({(long)1, (long)6})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)6, (long)5, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)5})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)6, (long)6, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any()));\n}\n",
      "timestamp": 1665517341,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/tmp/tmpv_xccequ.cpp: In function \u2018int main()\u2019:\n/tmp/tmpv_xccequ.cpp:15:311: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n      |                                                                                                                                                                                                                                                                                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /t",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\nstd::any extract_index_list(std::vector<long> l1, std::vector<long> l2, std::vector<long> l3) {\n    std::vector<long> result;\n    for (int i = 0; i < l1.size(); i++) {\n        if (l1[i] == l2[i] && l2[i] == l3[i]) {\n            result.push_back(l1[i]);\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = extract_index_list;\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)5})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)7}))) == (std::any({(long)1, (long)6})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)6, (long)5, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)5})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)6, (long)6, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any()));\n}\n",
      "timestamp": 1665517341,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/tmp/tmpv_xccequ.cpp: In function \u2018int main()\u2019:\n/tmp/tmpv_xccequ.cpp:15:311: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n      |                                                                                                                                                                                                                                                                                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /t",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\nstd::any extract_index_list(std::vector<long> l1, std::vector<long> l2, std::vector<long> l3) {\n    std::vector<long> result;\n    for (int i = 0; i < l1.size(); i++) {\n        if (l1[i] == l2[i] && l2[i] == l3[i]) {\n            result.push_back(l1[i]);\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = extract_index_list;\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)5})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)7}))) == (std::any({(long)1, (long)6})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)6, (long)5, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)5})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)6, (long)6, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any()));\n}\n",
      "timestamp": 1665517341,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/tmp/tmpv_xccequ.cpp: In function \u2018int main()\u2019:\n/tmp/tmpv_xccequ.cpp:15:311: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n      |                                                                                                                                                                                                                                                                                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /t",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\nstd::any extract_index_list(std::vector<long> l1, std::vector<long> l2, std::vector<long> l3) {\n    std::vector<long> result;\n    for (int i = 0; i < l1.size(); i++) {\n        if (l1[i] == l2[i] && l2[i] == l3[i]) {\n            result.push_back(l1[i]);\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = extract_index_list;\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)5})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)7}))) == (std::any({(long)1, (long)6})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)6, (long)5, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)5})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)6, (long)6, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any()));\n}\n",
      "timestamp": 1665517341,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/tmp/tmpv_xccequ.cpp: In function \u2018int main()\u2019:\n/tmp/tmpv_xccequ.cpp:15:311: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n      |                                                                                                                                                                                                                                                                                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /t",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\nstd::any extract_index_list(std::vector<long> l1, std::vector<long> l2, std::vector<long> l3) {\n    std::vector<long> result;\n    for(int i = 0; i < l1.size(); i++) {\n        if(l1[i] == l2[i] && l2[i] == l3[i]) {\n            result.push_back(l1[i]);\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = extract_index_list;\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)5})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)7}))) == (std::any({(long)1, (long)6})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)6, (long)5, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)5})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)6, (long)6, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any()));\n}\n",
      "timestamp": 1665517341,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpcnh5dyna.cpp:2:\n/tmp/tmpcnh5dyna.cpp: In function \u2018int main()\u2019:\n/tmp/tmpcnh5dyna.cpp:15:311: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n      |                                                                                                                                                                                                                                                                                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpcnh5dyna.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /t",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\nstd::any extract_index_list(std::vector<long> l1, std::vector<long> l2, std::vector<long> l3) {\n    std::vector<long> result;\n    for (int i = 0; i < l1.size(); i++) {\n        if (l1[i] == l2[i] && l2[i] == l3[i]) {\n            result.push_back(l1[i]);\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = extract_index_list;\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)5})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)7}))) == (std::any({(long)1, (long)6})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)6, (long)5, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)5})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)6, (long)6, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any()));\n}\n",
      "timestamp": 1665517341,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/tmp/tmpv_xccequ.cpp: In function \u2018int main()\u2019:\n/tmp/tmpv_xccequ.cpp:15:311: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n      |                                                                                                                                                                                                                                                                                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /t",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\nstd::any extract_index_list(std::vector<long> l1, std::vector<long> l2, std::vector<long> l3) {\n    std::vector<long> result;\n    for(int i = 0; i < l1.size(); i++) {\n        if(l1[i] == l2[i] && l2[i] == l3[i]) {\n            result.push_back(l1[i]);\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = extract_index_list;\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)5})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)7}))) == (std::any({(long)1, (long)6})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)6, (long)5, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)5})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)6, (long)6, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any()));\n}\n",
      "timestamp": 1665517341,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpcnh5dyna.cpp:2:\n/tmp/tmpcnh5dyna.cpp: In function \u2018int main()\u2019:\n/tmp/tmpcnh5dyna.cpp:15:311: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n      |                                                                                                                                                                                                                                                                                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpcnh5dyna.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /t",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\nstd::any extract_index_list(std::vector<long> l1, std::vector<long> l2, std::vector<long> l3) {\n    std::vector<long> result;\n    std::vector<long>::iterator it1 = l1.begin();\n    std::vector<long>::iterator it2 = l2.begin();\n    std::vector<long>::iterator it3 = l3.begin();\n    while(it1 != l1.end() && it2 != l2.end() && it3 != l3.end()) {\n        if(*it1 == *it2 && *it2 == *it3) {\n            result.push_back(*it1);\n            it1++;\n            it2++;\n            it3++;\n        }\n        else {\n            if(*it1 < *it2) {\n                it1++;\n            }\n            else if(*it2 < *it3) {\n                it2++;\n            }\n            else {\n                it3++;\n            }\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = extract_index_list;\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)5})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)7}))) == (std::any({(long)1, (long)6})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)6, (long)5, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)5})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)6, (long)6, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any()));\n}\n",
      "timestamp": 1666123165,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp53uc3pnu.cpp:2:\n/tmp/tmp53uc3pnu.cpp: In function \u2018int main()\u2019:\n/tmp/tmp53uc3pnu.cpp:32:311: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   32 |     assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n      |                                                                                                                                                                                                                                                                                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmp53uc3pnu.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /t",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\nstd::any extract_index_list(std::vector<long> l1, std::vector<long> l2, std::vector<long> l3) {\n    std::vector<long> result;\n    for (int i = 0; i < l1.size(); i++) {\n        if (l1[i] == l2[i] && l2[i] == l3[i]) {\n            result.push_back(l1[i]);\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = extract_index_list;\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)5})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)7}))) == (std::any({(long)1, (long)6})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)6, (long)5, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)5})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)6, (long)6, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any()));\n}\n",
      "timestamp": 1665517341,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/tmp/tmpv_xccequ.cpp: In function \u2018int main()\u2019:\n/tmp/tmpv_xccequ.cpp:15:311: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n      |                                                                                                                                                                                                                                                                                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /t",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\nstd::any extract_index_list(std::vector<long> l1, std::vector<long> l2, std::vector<long> l3) {\n    std::vector<long> result;\n    for (int i = 0; i < l1.size(); i++) {\n        if (l1[i] == l2[i] && l2[i] == l3[i]) {\n            result.push_back(l1[i]);\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = extract_index_list;\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)5})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)7}))) == (std::any({(long)1, (long)6})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)6, (long)5, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)5})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)6, (long)6, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any()));\n}\n",
      "timestamp": 1665517341,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/tmp/tmpv_xccequ.cpp: In function \u2018int main()\u2019:\n/tmp/tmpv_xccequ.cpp:15:311: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n      |                                                                                                                                                                                                                                                                                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /t",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\nstd::any extract_index_list(std::vector<long> l1, std::vector<long> l2, std::vector<long> l3) {\n    std::vector<long> result;\n    for(int i = 0; i < l1.size(); i++) {\n        if(l1[i] == l2[i] && l2[i] == l3[i]) {\n            result.push_back(l1[i]);\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = extract_index_list;\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)5})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)7}))) == (std::any({(long)1, (long)6})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)6, (long)5, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)5})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)6, (long)6, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any()));\n}\n",
      "timestamp": 1665517341,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpcnh5dyna.cpp:2:\n/tmp/tmpcnh5dyna.cpp: In function \u2018int main()\u2019:\n/tmp/tmpcnh5dyna.cpp:15:311: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n      |                                                                                                                                                                                                                                                                                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpcnh5dyna.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /t",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\nstd::any extract_index_list(std::vector<long> l1, std::vector<long> l2, std::vector<long> l3) {\n    std::vector<long> result;\n    for (int i = 0; i < l1.size(); i++) {\n        if (l1[i] == l2[i] && l2[i] == l3[i]) {\n            result.push_back(l1[i]);\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = extract_index_list;\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)5})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)7}))) == (std::any({(long)1, (long)6})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)6, (long)5, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)5})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)6, (long)6, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any()));\n}\n",
      "timestamp": 1665517341,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/tmp/tmpv_xccequ.cpp: In function \u2018int main()\u2019:\n/tmp/tmpv_xccequ.cpp:15:311: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n      |                                                                                                                                                                                                                                                                                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /t",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\nstd::any extract_index_list(std::vector<long> l1, std::vector<long> l2, std::vector<long> l3) {\n    std::vector<long> result;\n    for (int i = 0; i < l1.size(); i++) {\n        if (l1[i] == l2[i] && l2[i] == l3[i]) {\n            result.push_back(l1[i]);\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = extract_index_list;\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)5})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)7}))) == (std::any({(long)1, (long)6})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)6, (long)5, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)5})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)6, (long)6, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any()));\n}\n",
      "timestamp": 1665517341,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/tmp/tmpv_xccequ.cpp: In function \u2018int main()\u2019:\n/tmp/tmpv_xccequ.cpp:15:311: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n      |                                                                                                                                                                                                                                                                                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /t",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\nstd::any extract_index_list(std::vector<long> l1, std::vector<long> l2, std::vector<long> l3) {\n    std::vector<long> result;\n    for(int i = 0; i < l1.size(); i++) {\n        if(l1[i] == l2[i] && l2[i] == l3[i]) {\n            result.push_back(l1[i]);\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = extract_index_list;\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)5})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)7}))) == (std::any({(long)1, (long)6})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)6, (long)5, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)5})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)6, (long)6, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any()));\n}\n",
      "timestamp": 1665517341,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpcnh5dyna.cpp:2:\n/tmp/tmpcnh5dyna.cpp: In function \u2018int main()\u2019:\n/tmp/tmpcnh5dyna.cpp:15:311: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n      |                                                                                                                                                                                                                                                                                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpcnh5dyna.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /t",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\nstd::any extract_index_list(std::vector<long> l1, std::vector<long> l2, std::vector<long> l3) {\n    std::vector<long> result;\n    for (int i = 0; i < l1.size(); i++) {\n        if (l1[i] == l2[i] && l2[i] == l3[i]) {\n            result.push_back(l1[i]);\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = extract_index_list;\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)5})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)7}))) == (std::any({(long)1, (long)6})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)6, (long)5, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)5})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)6, (long)6, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any()));\n}\n",
      "timestamp": 1665517341,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/tmp/tmpv_xccequ.cpp: In function \u2018int main()\u2019:\n/tmp/tmpv_xccequ.cpp:15:311: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n      |                                                                                                                                                                                                                                                                                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /t",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\nstd::any extract_index_list(std::vector<long> l1, std::vector<long> l2, std::vector<long> l3) {\n    std::vector<long> result;\n    for (int i = 0; i < l1.size(); i++) {\n        if (l1[i] == l2[i] && l2[i] == l3[i]) {\n            result.push_back(l1[i]);\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = extract_index_list;\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)5})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)7}))) == (std::any({(long)1, (long)6})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)6, (long)5, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)5})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)6, (long)6, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any()));\n}\n",
      "timestamp": 1665517341,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/tmp/tmpv_xccequ.cpp: In function \u2018int main()\u2019:\n/tmp/tmpv_xccequ.cpp:15:311: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n      |                                                                                                                                                                                                                                                                                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /t",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\nstd::any extract_index_list(std::vector<long> l1, std::vector<long> l2, std::vector<long> l3) {\n    std::vector<long> result;\n    for (int i = 0; i < l1.size(); i++) {\n        if (l1[i] == l2[i] && l2[i] == l3[i]) {\n            result.push_back(l1[i]);\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = extract_index_list;\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)5})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)7}))) == (std::any({(long)1, (long)6})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)6, (long)5, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)5})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)6, (long)6, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any()));\n}\n",
      "timestamp": 1665517341,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/tmp/tmpv_xccequ.cpp: In function \u2018int main()\u2019:\n/tmp/tmpv_xccequ.cpp:15:311: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n      |                                                                                                                                                                                                                                                                                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /t",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\nstd::any extract_index_list(std::vector<long> l1, std::vector<long> l2, std::vector<long> l3) {\n    std::vector<long> result;\n    for (int i = 0; i < l1.size(); i++) {\n        if (l1[i] == l2[i] && l2[i] == l3[i]) {\n            result.push_back(l1[i]);\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = extract_index_list;\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)5})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)7}))) == (std::any({(long)1, (long)6})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)6, (long)5, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)5})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)6, (long)6, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any()));\n}\n",
      "timestamp": 1665517341,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/tmp/tmpv_xccequ.cpp: In function \u2018int main()\u2019:\n/tmp/tmpv_xccequ.cpp:15:311: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n      |                                                                                                                                                                                                                                                                                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /t",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\nstd::any extract_index_list(std::vector<long> l1, std::vector<long> l2, std::vector<long> l3) {\n    std::vector<long> result;\n    int i = 0, j = 0, k = 0;\n    while (i < l1.size() && j < l2.size() && k < l3.size()) {\n        if (l1[i] == l2[j] && l2[j] == l3[k]) {\n            result.push_back(l1[i]);\n            i++;\n            j++;\n            k++;\n        } else if (l1[i] < l2[j]) {\n            i++;\n        } else if (l2[j] < l3[k]) {\n            j++;\n        } else {\n            k++;\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = extract_index_list;\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)5})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)7}))) == (std::any({(long)1, (long)6})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)6, (long)5, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)5})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)6, (long)6, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any()));\n}\n",
      "timestamp": 1666123165,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpd4jrk4ga.cpp:2:\n/tmp/tmpd4jrk4ga.cpp: In function \u2018int main()\u2019:\n/tmp/tmpd4jrk4ga.cpp:25:311: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   25 |     assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n      |                                                                                                                                                                                                                                                                                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpd4jrk4ga.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /t",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\nstd::any extract_index_list(std::vector<long> l1, std::vector<long> l2, std::vector<long> l3) {\n    std::vector<long> result;\n    for (int i = 0; i < l1.size(); i++) {\n        if (l1[i] == l2[i] && l2[i] == l3[i]) {\n            result.push_back(l1[i]);\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = extract_index_list;\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)5})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)7}))) == (std::any({(long)1, (long)6})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)6, (long)5, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)5})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)6, (long)6, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any()));\n}\n",
      "timestamp": 1665517341,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/tmp/tmpv_xccequ.cpp: In function \u2018int main()\u2019:\n/tmp/tmpv_xccequ.cpp:15:311: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n      |                                                                                                                                                                                                                                                                                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /t",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\nstd::any extract_index_list(std::vector<long> l1, std::vector<long> l2, std::vector<long> l3) {\n    std::vector<long> result;\n    for (int i = 0; i < l1.size(); i++) {\n        if (l1[i] == l2[i] && l2[i] == l3[i]) {\n            result.push_back(l1[i]);\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = extract_index_list;\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)5})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)7}))) == (std::any({(long)1, (long)6})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)6, (long)5, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)5})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)6, (long)6, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any()));\n}\n",
      "timestamp": 1665517341,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/tmp/tmpv_xccequ.cpp: In function \u2018int main()\u2019:\n/tmp/tmpv_xccequ.cpp:15:311: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n      |                                                                                                                                                                                                                                                                                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /t",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\nstd::any extract_index_list(std::vector<long> l1, std::vector<long> l2, std::vector<long> l3) {\n    std::vector<long> result;\n    for(int i = 0; i < l1.size(); i++) {\n        if(l1[i] == l2[i] && l2[i] == l3[i]) {\n            result.push_back(l1[i]);\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = extract_index_list;\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)5})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)7}))) == (std::any({(long)1, (long)6})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)6, (long)5, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)5})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)6, (long)6, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any()));\n}\n",
      "timestamp": 1665517341,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpcnh5dyna.cpp:2:\n/tmp/tmpcnh5dyna.cpp: In function \u2018int main()\u2019:\n/tmp/tmpcnh5dyna.cpp:15:311: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n      |                                                                                                                                                                                                                                                                                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpcnh5dyna.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /t",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\nstd::any extract_index_list(std::vector<long> l1, std::vector<long> l2, std::vector<long> l3) {\n    std::vector<long> result;\n    for (int i = 0; i < l1.size(); i++) {\n        if (l1[i] == l2[i] && l2[i] == l3[i]) {\n            result.push_back(l1[i]);\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = extract_index_list;\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)5})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)7}))) == (std::any({(long)1, (long)6})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)6, (long)5, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)5})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)6, (long)6, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any()));\n}\n",
      "timestamp": 1665517341,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/tmp/tmpv_xccequ.cpp: In function \u2018int main()\u2019:\n/tmp/tmpv_xccequ.cpp:15:311: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n      |                                                                                                                                                                                                                                                                                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /t",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\nstd::any extract_index_list(std::vector<long> l1, std::vector<long> l2, std::vector<long> l3) {\n    std::vector<long> result;\n    for (int i = 0; i < l1.size(); i++) {\n        if (l1[i] == l2[i] && l2[i] == l3[i]) {\n            result.push_back(l1[i]);\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = extract_index_list;\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)5})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)7}))) == (std::any({(long)1, (long)6})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)6, (long)5, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)5})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)6, (long)6, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any()));\n}\n",
      "timestamp": 1665517341,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/tmp/tmpv_xccequ.cpp: In function \u2018int main()\u2019:\n/tmp/tmpv_xccequ.cpp:15:311: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n      |                                                                                                                                                                                                                                                                                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /t",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\nstd::any extract_index_list(std::vector<long> l1, std::vector<long> l2, std::vector<long> l3) {\n    std::vector<long> result;\n    for (int i = 0; i < l1.size(); i++) {\n        if (l1[i] == l2[i] && l1[i] == l3[i]) {\n            result.push_back(l1[i]);\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = extract_index_list;\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)5})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)7}))) == (std::any({(long)1, (long)6})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)6, (long)5, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)5})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)6, (long)6, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any()));\n}\n",
      "timestamp": 1665517341,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmptmybwk0a.cpp:2:\n/tmp/tmptmybwk0a.cpp: In function \u2018int main()\u2019:\n/tmp/tmptmybwk0a.cpp:15:311: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n      |                                                                                                                                                                                                                                                                                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmptmybwk0a.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /t",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\nstd::any extract_index_list(std::vector<long> l1, std::vector<long> l2, std::vector<long> l3) {\n    std::vector<long> result;\n    for (int i = 0; i < l1.size(); i++) {\n        if (l1[i] == l2[i] && l2[i] == l3[i]) {\n            result.push_back(l1[i]);\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = extract_index_list;\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)5})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)7}))) == (std::any({(long)1, (long)6})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)6, (long)5, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)5})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)6, (long)6, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any()));\n}\n",
      "timestamp": 1665517341,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/tmp/tmpv_xccequ.cpp: In function \u2018int main()\u2019:\n/tmp/tmpv_xccequ.cpp:15:311: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n      |                                                                                                                                                                                                                                                                                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /t",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\nstd::any extract_index_list(std::vector<long> l1, std::vector<long> l2, std::vector<long> l3) {\n    std::vector<long> result;\n    for (int i = 0; i < l1.size(); i++) {\n        if (l1[i] == l2[i] && l2[i] == l3[i]) {\n            result.push_back(l1[i]);\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = extract_index_list;\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)5})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)7}))) == (std::any({(long)1, (long)6})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)6, (long)5, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)5})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)6, (long)6, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any()));\n}\n",
      "timestamp": 1665517341,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/tmp/tmpv_xccequ.cpp: In function \u2018int main()\u2019:\n/tmp/tmpv_xccequ.cpp:15:311: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n      |                                                                                                                                                                                                                                                                                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /t",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\nstd::any extract_index_list(std::vector<long> l1, std::vector<long> l2, std::vector<long> l3) {\n    std::vector<long> result;\n    for (int i = 0; i < l1.size(); i++) {\n        if (l1[i] == l2[i] && l2[i] == l3[i]) {\n            result.push_back(l1[i]);\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = extract_index_list;\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)5})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)7}))) == (std::any({(long)1, (long)6})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)6, (long)5, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)5})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)6, (long)6, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any()));\n}\n",
      "timestamp": 1665517341,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/tmp/tmpv_xccequ.cpp: In function \u2018int main()\u2019:\n/tmp/tmpv_xccequ.cpp:15:311: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n      |                                                                                                                                                                                                                                                                                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /t",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\nstd::any extract_index_list(std::vector<long> l1, std::vector<long> l2, std::vector<long> l3) {\n    std::vector<long> result;\n    for (int i = 0; i < l1.size(); i++) {\n        if (l1[i] == l2[i] && l2[i] == l3[i]) {\n            result.push_back(l1[i]);\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = extract_index_list;\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)5})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)7}))) == (std::any({(long)1, (long)6})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)6, (long)5, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)5})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)6, (long)6, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any()));\n}\n",
      "timestamp": 1665517341,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/tmp/tmpv_xccequ.cpp: In function \u2018int main()\u2019:\n/tmp/tmpv_xccequ.cpp:15:311: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n      |                                                                                                                                                                                                                                                                                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /t",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\nstd::any extract_index_list(std::vector<long> l1, std::vector<long> l2, std::vector<long> l3) {\n    std::vector<long> result;\n    for (int i = 0; i < l1.size(); i++) {\n        if (l1[i] == l2[i] && l2[i] == l3[i]) {\n            result.push_back(l1[i]);\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = extract_index_list;\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)5})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)7}))) == (std::any({(long)1, (long)6})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)6, (long)5, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)5})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)6, (long)6, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any()));\n}\n",
      "timestamp": 1665517341,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/tmp/tmpv_xccequ.cpp: In function \u2018int main()\u2019:\n/tmp/tmpv_xccequ.cpp:15:311: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n      |                                                                                                                                                                                                                                                                                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /t",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\nstd::any extract_index_list(std::vector<long> l1, std::vector<long> l2, std::vector<long> l3) {\n    std::vector<long> result;\n    for (int i = 0; i < l1.size(); i++) {\n        if (l1[i] == l2[i] && l2[i] == l3[i]) {\n            result.push_back(l1[i]);\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = extract_index_list;\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)5})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)7}))) == (std::any({(long)1, (long)6})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)6, (long)5, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)5})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)6, (long)6, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any()));\n}\n",
      "timestamp": 1665517341,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/tmp/tmpv_xccequ.cpp: In function \u2018int main()\u2019:\n/tmp/tmpv_xccequ.cpp:15:311: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n      |                                                                                                                                                                                                                                                                                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /t",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\nstd::any extract_index_list(std::vector<long> l1, std::vector<long> l2, std::vector<long> l3) {\n    std::vector<long> result;\n    for (int i = 0; i < l1.size(); i++) {\n        if (l1[i] == l2[i] && l2[i] == l3[i]) {\n            result.push_back(l1[i]);\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = extract_index_list;\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)5})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)7}))) == (std::any({(long)1, (long)6})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)6, (long)5, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)5})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)6, (long)6, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any()));\n}\n",
      "timestamp": 1665517341,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/tmp/tmpv_xccequ.cpp: In function \u2018int main()\u2019:\n/tmp/tmpv_xccequ.cpp:15:311: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n      |                                                                                                                                                                                                                                                                                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /t",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\nstd::any extract_index_list(std::vector<long> l1, std::vector<long> l2, std::vector<long> l3) {\n    std::vector<long> result;\n    for (int i = 0; i < l1.size(); i++) {\n        if (l1[i] == l2[i] && l2[i] == l3[i]) {\n            result.push_back(l1[i]);\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = extract_index_list;\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)5})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)7}))) == (std::any({(long)1, (long)6})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)6, (long)5, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)5})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)6, (long)6, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any()));\n}\n",
      "timestamp": 1665517341,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/tmp/tmpv_xccequ.cpp: In function \u2018int main()\u2019:\n/tmp/tmpv_xccequ.cpp:15:311: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n      |                                                                                                                                                                                                                                                                                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /t",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\nstd::any extract_index_list(std::vector<long> l1, std::vector<long> l2, std::vector<long> l3) {\n    std::vector<long> result;\n    for (int i = 0; i < l1.size(); i++) {\n        if (l1[i] == l2[i] && l1[i] == l3[i]) {\n            result.push_back(l1[i]);\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = extract_index_list;\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)5})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)7}))) == (std::any({(long)1, (long)6})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)6, (long)5, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)5})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)6, (long)6, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any()));\n}\n",
      "timestamp": 1665517341,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmptmybwk0a.cpp:2:\n/tmp/tmptmybwk0a.cpp: In function \u2018int main()\u2019:\n/tmp/tmptmybwk0a.cpp:15:311: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n      |                                                                                                                                                                                                                                                                                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmptmybwk0a.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /t",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\nstd::any extract_index_list(std::vector<long> l1, std::vector<long> l2, std::vector<long> l3) {\n    std::vector<long> result;\n    int i = 0;\n    int j = 0;\n    int k = 0;\n    while(i < l1.size() && j < l2.size() && k < l3.size()) {\n        if(l1[i] == l2[j] && l2[j] == l3[k]) {\n            result.push_back(l1[i]);\n            i++;\n            j++;\n            k++;\n        } else if(l1[i] < l2[j]) {\n            i++;\n        } else if(l2[j] < l3[k]) {\n            j++;\n        } else {\n            k++;\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = extract_index_list;\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)5})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)7}))) == (std::any({(long)1, (long)6})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)6, (long)5, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)5})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)6, (long)6, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any()));\n}\n",
      "timestamp": 1666123165,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmprlwx6ear.cpp:2:\n/tmp/tmprlwx6ear.cpp: In function \u2018int main()\u2019:\n/tmp/tmprlwx6ear.cpp:27:311: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   27 |     assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n      |                                                                                                                                                                                                                                                                                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmprlwx6ear.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /t",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\nstd::any extract_index_list(std::vector<long> l1, std::vector<long> l2, std::vector<long> l3) {\n    std::vector<long> result;\n    for (int i = 0; i < l1.size(); i++) {\n        if (l1[i] == l2[i] && l2[i] == l3[i]) {\n            result.push_back(l1[i]);\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = extract_index_list;\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)5})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)7}))) == (std::any({(long)1, (long)6})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)6, (long)5, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)5})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)6, (long)6, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any()));\n}\n",
      "timestamp": 1665517341,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/tmp/tmpv_xccequ.cpp: In function \u2018int main()\u2019:\n/tmp/tmpv_xccequ.cpp:15:311: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n      |                                                                                                                                                                                                                                                                                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /t",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\nstd::any extract_index_list(std::vector<long> l1, std::vector<long> l2, std::vector<long> l3) {\n    std::vector<long> result;\n    for (int i = 0; i < l1.size(); i++) {\n        if (l1[i] == l2[i] && l2[i] == l3[i]) {\n            result.push_back(l1[i]);\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = extract_index_list;\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)5})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)7}))) == (std::any({(long)1, (long)6})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)6, (long)5, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)5})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)6, (long)6, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any()));\n}\n",
      "timestamp": 1665517341,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/tmp/tmpv_xccequ.cpp: In function \u2018int main()\u2019:\n/tmp/tmpv_xccequ.cpp:15:311: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n      |                                                                                                                                                                                                                                                                                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /t",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\nstd::any extract_index_list(std::vector<long> l1, std::vector<long> l2, std::vector<long> l3) {\n    std::vector<long> result;\n    for (int i = 0; i < l1.size(); i++) {\n        if (l1[i] == l2[i] && l2[i] == l3[i]) {\n            result.push_back(l1[i]);\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = extract_index_list;\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)5})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)7}))) == (std::any({(long)1, (long)6})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)6, (long)5, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)5})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)6, (long)6, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any()));\n}\n",
      "timestamp": 1665517341,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/tmp/tmpv_xccequ.cpp: In function \u2018int main()\u2019:\n/tmp/tmpv_xccequ.cpp:15:311: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n      |                                                                                                                                                                                                                                                                                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /t",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\nstd::any extract_index_list(std::vector<long> l1, std::vector<long> l2, std::vector<long> l3) {\n    std::vector<long> result;\n    for (int i = 0; i < l1.size(); i++) {\n        if (l1[i] == l2[i] && l2[i] == l3[i]) {\n            result.push_back(l1[i]);\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = extract_index_list;\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)5})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)7}))) == (std::any({(long)1, (long)6})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)6, (long)5, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)5})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)6, (long)6, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any()));\n}\n",
      "timestamp": 1665517341,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/tmp/tmpv_xccequ.cpp: In function \u2018int main()\u2019:\n/tmp/tmpv_xccequ.cpp:15:311: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n      |                                                                                                                                                                                                                                                                                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /t",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\nstd::any extract_index_list(std::vector<long> l1, std::vector<long> l2, std::vector<long> l3) {\n    std::vector<long> result;\n    for(int i = 0; i < l1.size(); i++) {\n        if(l1[i] == l2[i] && l2[i] == l3[i]) {\n            result.push_back(l1[i]);\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = extract_index_list;\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)5})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)7}))) == (std::any({(long)1, (long)6})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)6, (long)5, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)5})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)6, (long)6, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any()));\n}\n",
      "timestamp": 1665517341,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpcnh5dyna.cpp:2:\n/tmp/tmpcnh5dyna.cpp: In function \u2018int main()\u2019:\n/tmp/tmpcnh5dyna.cpp:15:311: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n      |                                                                                                                                                                                                                                                                                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpcnh5dyna.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /t",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\nstd::any extract_index_list(std::vector<long> l1, std::vector<long> l2, std::vector<long> l3) {\n    std::vector<long> result;\n    auto it1 = l1.begin();\n    auto it2 = l2.begin();\n    auto it3 = l3.begin();\n    while (it1 != l1.end() && it2 != l2.end() && it3 != l3.end()) {\n        if (*it1 == *it2 && *it2 == *it3) {\n            result.push_back(*it1);\n            it1++;\n            it2++;\n            it3++;\n        } else if (*it1 < *it2) {\n            it1++;\n        } else if (*it2 < *it3) {\n            it2++;\n        } else {\n            it3++;\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = extract_index_list;\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)5})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)7}))) == (std::any({(long)1, (long)6})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)6, (long)5, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)5})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)6, (long)6, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any()));\n}\n",
      "timestamp": 1666123165,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpg6tvh0bc.cpp:2:\n/tmp/tmpg6tvh0bc.cpp: In function \u2018int main()\u2019:\n/tmp/tmpg6tvh0bc.cpp:27:311: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   27 |     assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n      |                                                                                                                                                                                                                                                                                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpg6tvh0bc.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /t",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\nstd::any extract_index_list(std::vector<long> l1, std::vector<long> l2, std::vector<long> l3) {\n    std::vector<long> result;\n    std::vector<long>::iterator it1 = l1.begin();\n    std::vector<long>::iterator it2 = l2.begin();\n    std::vector<long>::iterator it3 = l3.begin();\n    while(it1 != l1.end() && it2 != l2.end() && it3 != l3.end()) {\n        if(*it1 == *it2 && *it2 == *it3) {\n            result.push_back(*it1);\n            it1++;\n            it2++;\n            it3++;\n        } else if(*it1 < *it2) {\n            it1++;\n        } else if(*it2 < *it3) {\n            it2++;\n        } else {\n            it3++;\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = extract_index_list;\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)5})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)7}))) == (std::any({(long)1, (long)6})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)6, (long)5, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)5})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)6, (long)6, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any()));\n}\n",
      "timestamp": 1665517341,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmprw7xc3xl.cpp:2:\n/tmp/tmprw7xc3xl.cpp: In function \u2018int main()\u2019:\n/tmp/tmprw7xc3xl.cpp:27:311: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   27 |     assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n      |                                                                                                                                                                                                                                                                                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmprw7xc3xl.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /t",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\nstd::any extract_index_list(std::vector<long> l1, std::vector<long> l2, std::vector<long> l3) {\n    std::vector<long> result;\n    for (int i = 0; i < l1.size(); i++) {\n        if (l1[i] == l2[i] && l2[i] == l3[i]) {\n            result.push_back(l1[i]);\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = extract_index_list;\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)5})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)7}))) == (std::any({(long)1, (long)6})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)6, (long)5, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)5})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)6, (long)6, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any()));\n}\n",
      "timestamp": 1665517341,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/tmp/tmpv_xccequ.cpp: In function \u2018int main()\u2019:\n/tmp/tmpv_xccequ.cpp:15:311: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n      |                                                                                                                                                                                                                                                                                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /t",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\nstd::any extract_index_list(std::vector<long> l1, std::vector<long> l2, std::vector<long> l3) {\n    std::vector<long> result;\n    for (int i = 0; i < l1.size(); i++) {\n        if (l1[i] == l2[i] && l2[i] == l3[i]) {\n            result.push_back(l1[i]);\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = extract_index_list;\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)5})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)7}))) == (std::any({(long)1, (long)6})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)6, (long)5, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)5})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)6, (long)6, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any()));\n}\n",
      "timestamp": 1665517341,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/tmp/tmpv_xccequ.cpp: In function \u2018int main()\u2019:\n/tmp/tmpv_xccequ.cpp:15:311: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n      |                                                                                                                                                                                                                                                                                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /t",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\nstd::any extract_index_list(std::vector<long> l1, std::vector<long> l2, std::vector<long> l3) {\n    std::vector<long> result;\n    for (int i = 0; i < l1.size(); i++) {\n        if (l1[i] == l2[i] && l2[i] == l3[i]) {\n            result.push_back(l1[i]);\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = extract_index_list;\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)5})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)7}))) == (std::any({(long)1, (long)6})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)6, (long)5, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)5})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)6, (long)6, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any()));\n}\n",
      "timestamp": 1665517341,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/tmp/tmpv_xccequ.cpp: In function \u2018int main()\u2019:\n/tmp/tmpv_xccequ.cpp:15:311: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n      |                                                                                                                                                                                                                                                                                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /t",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\nstd::any extract_index_list(std::vector<long> l1, std::vector<long> l2, std::vector<long> l3) {\n    std::vector<long> result;\n    for (int i = 0; i < l1.size(); i++) {\n        if (l1[i] == l2[i] && l2[i] == l3[i]) {\n            result.push_back(l1[i]);\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = extract_index_list;\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)5})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)7}))) == (std::any({(long)1, (long)6})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)6, (long)5, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)5})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)6, (long)6, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any()));\n}\n",
      "timestamp": 1665517341,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/tmp/tmpv_xccequ.cpp: In function \u2018int main()\u2019:\n/tmp/tmpv_xccequ.cpp:15:311: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n      |                                                                                                                                                                                                                                                                                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /t",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\nstd::any extract_index_list(std::vector<long> l1, std::vector<long> l2, std::vector<long> l3) {\n    std::vector<long> result;\n    for (int i = 0; i < l1.size(); i++) {\n        if (l1[i] == l2[i] && l2[i] == l3[i]) {\n            result.push_back(l1[i]);\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = extract_index_list;\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)5})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)7}))) == (std::any({(long)1, (long)6})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)6, (long)5, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)5})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)6, (long)6, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any()));\n}\n",
      "timestamp": 1665517341,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/tmp/tmpv_xccequ.cpp: In function \u2018int main()\u2019:\n/tmp/tmpv_xccequ.cpp:15:311: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n      |                                                                                                                                                                                                                                                                                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /t",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\nstd::any extract_index_list(std::vector<long> l1, std::vector<long> l2, std::vector<long> l3) {\n    std::vector<long> result;\n    for(int i = 0; i < l1.size(); i++) {\n        if(l1[i] == l2[i] && l2[i] == l3[i]) {\n            result.push_back(l1[i]);\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = extract_index_list;\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)5})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)7}))) == (std::any({(long)1, (long)6})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)6, (long)5, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)5})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)6, (long)6, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any()));\n}\n",
      "timestamp": 1665517341,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpcnh5dyna.cpp:2:\n/tmp/tmpcnh5dyna.cpp: In function \u2018int main()\u2019:\n/tmp/tmpcnh5dyna.cpp:15:311: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n      |                                                                                                                                                                                                                                                                                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpcnh5dyna.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /t",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\nstd::any extract_index_list(std::vector<long> l1, std::vector<long> l2, std::vector<long> l3) {\n    std::vector<long> result;\n    for (int i = 0; i < l1.size(); i++) {\n        if (l1[i] == l2[i] && l2[i] == l3[i]) {\n            result.push_back(l1[i]);\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = extract_index_list;\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)5})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)7}))) == (std::any({(long)1, (long)6})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)6, (long)5, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)5})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)6, (long)6, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any()));\n}\n",
      "timestamp": 1665517341,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/tmp/tmpv_xccequ.cpp: In function \u2018int main()\u2019:\n/tmp/tmpv_xccequ.cpp:15:311: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n      |                                                                                                                                                                                                                                                                                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /t",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\nstd::any extract_index_list(std::vector<long> l1, std::vector<long> l2, std::vector<long> l3) {\n    std::vector<long> result;\n    for (int i = 0; i < l1.size(); i++) {\n        if (l1[i] == l2[i] && l2[i] == l3[i]) {\n            result.push_back(l1[i]);\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = extract_index_list;\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)5})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)7}))) == (std::any({(long)1, (long)6})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)6, (long)5, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)5})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)6, (long)6, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any()));\n}\n",
      "timestamp": 1665517341,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/tmp/tmpv_xccequ.cpp: In function \u2018int main()\u2019:\n/tmp/tmpv_xccequ.cpp:15:311: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n      |                                                                                                                                                                                                                                                                                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /t",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\nstd::any extract_index_list(std::vector<long> l1, std::vector<long> l2, std::vector<long> l3) {\n    std::vector<long> result;\n    for (int i = 0; i < l1.size(); i++) {\n        if (l1[i] == l2[i] && l2[i] == l3[i]) {\n            result.push_back(l1[i]);\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = extract_index_list;\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)5})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)7}))) == (std::any({(long)1, (long)6})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)6, (long)5, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)5})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)6, (long)6, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any()));\n}\n",
      "timestamp": 1665517341,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/tmp/tmpv_xccequ.cpp: In function \u2018int main()\u2019:\n/tmp/tmpv_xccequ.cpp:15:311: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n      |                                                                                                                                                                                                                                                                                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /t",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\nstd::any extract_index_list(std::vector<long> l1, std::vector<long> l2, std::vector<long> l3) {\n    std::vector<long> result;\n    for (int i = 0; i < l1.size(); i++) {\n        if (l1[i] == l2[i] && l2[i] == l3[i]) {\n            result.push_back(l1[i]);\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = extract_index_list;\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)5})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)7}))) == (std::any({(long)1, (long)6})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)6, (long)5, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)5})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)6, (long)6, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any()));\n}\n",
      "timestamp": 1665517341,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/tmp/tmpv_xccequ.cpp: In function \u2018int main()\u2019:\n/tmp/tmpv_xccequ.cpp:15:311: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n      |                                                                                                                                                                                                                                                                                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /t",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\nstd::any extract_index_list(std::vector<long> l1, std::vector<long> l2, std::vector<long> l3) {\n    std::vector<long> result;\n    for(int i = 0; i < l1.size(); i++) {\n        if(l1[i] == l2[i] && l2[i] == l3[i]) {\n            result.push_back(l1[i]);\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = extract_index_list;\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)5})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)7}))) == (std::any({(long)1, (long)6})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)6, (long)5, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)5})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)6, (long)6, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any()));\n}\n",
      "timestamp": 1665517341,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpcnh5dyna.cpp:2:\n/tmp/tmpcnh5dyna.cpp: In function \u2018int main()\u2019:\n/tmp/tmpcnh5dyna.cpp:15:311: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n      |                                                                                                                                                                                                                                                                                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpcnh5dyna.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /t",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\nstd::any extract_index_list(std::vector<long> l1, std::vector<long> l2, std::vector<long> l3) {\n    std::vector<long> result;\n    for (int i = 0; i < l1.size(); i++) {\n        if (l1[i] == l2[i] && l2[i] == l3[i]) {\n            result.push_back(l1[i]);\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = extract_index_list;\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)5})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)7}))) == (std::any({(long)1, (long)6})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)6, (long)5, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)5})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)6, (long)6, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any()));\n}\n",
      "timestamp": 1665517341,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/tmp/tmpv_xccequ.cpp: In function \u2018int main()\u2019:\n/tmp/tmpv_xccequ.cpp:15:311: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n      |                                                                                                                                                                                                                                                                                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /t",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\nstd::any extract_index_list(std::vector<long> l1, std::vector<long> l2, std::vector<long> l3) {\n    std::vector<long> result;\n    std::vector<long>::iterator it1 = l1.begin();\n    std::vector<long>::iterator it2 = l2.begin();\n    std::vector<long>::iterator it3 = l3.begin();\n    while(it1 != l1.end() && it2 != l2.end() && it3 != l3.end()) {\n        if(*it1 == *it2 && *it2 == *it3) {\n            result.push_back(*it1);\n            it1++;\n            it2++;\n            it3++;\n        }\n        else {\n            if(*it1 < *it2) {\n                it1++;\n            }\n            else if(*it2 < *it3) {\n                it2++;\n            }\n            else {\n                it3++;\n            }\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = extract_index_list;\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)5})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)7}))) == (std::any({(long)1, (long)6})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)6, (long)5, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)5})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)6, (long)6, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any()));\n}\n",
      "timestamp": 1666123165,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp53uc3pnu.cpp:2:\n/tmp/tmp53uc3pnu.cpp: In function \u2018int main()\u2019:\n/tmp/tmp53uc3pnu.cpp:32:311: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   32 |     assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n      |                                                                                                                                                                                                                                                                                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmp53uc3pnu.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /t",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\nstd::any extract_index_list(std::vector<long> l1, std::vector<long> l2, std::vector<long> l3) {\n    std::vector<long> result;\n    std::vector<long>::iterator it1 = l1.begin();\n    std::vector<long>::iterator it2 = l2.begin();\n    std::vector<long>::iterator it3 = l3.begin();\n    while (it1 != l1.end() && it2 != l2.end() && it3 != l3.end()) {\n        if (*it1 == *it2 && *it1 == *it3) {\n            result.push_back(*it1);\n        }\n        it1++;\n        it2++;\n        it3++;\n    }\n    return result;\n}\nint main() {\n    auto candidate = extract_index_list;\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)5})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)7}))) == (std::any({(long)1, (long)6})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)6, (long)5, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)5})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)6, (long)6, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any()));\n}\n",
      "timestamp": 1666123165,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpc7v5o86o.cpp:2:\n/tmp/tmpc7v5o86o.cpp: In function \u2018int main()\u2019:\n/tmp/tmpc7v5o86o.cpp:21:311: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   21 |     assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n      |                                                                                                                                                                                                                                                                                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpc7v5o86o.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /t",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\nstd::any extract_index_list(std::vector<long> l1, std::vector<long> l2, std::vector<long> l3) {\n    std::vector<long> result;\n    std::vector<long>::iterator it1, it2, it3;\n    it1 = l1.begin();\n    it2 = l2.begin();\n    it3 = l3.begin();\n    while (it1 != l1.end() && it2 != l2.end() && it3 != l3.end()) {\n        if (*it1 == *it2 && *it2 == *it3) {\n            result.push_back(*it1);\n            it1++;\n            it2++;\n            it3++;\n        } else if (*it1 < *it2) {\n            it1++;\n        } else if (*it2 < *it3) {\n            it2++;\n        } else {\n            it3++;\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = extract_index_list;\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)5})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)7}))) == (std::any({(long)1, (long)6})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)6, (long)5, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)5})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)6, (long)6, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any()));\n}\n",
      "timestamp": 1666123165,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpye6rtky4.cpp:2:\n/tmp/tmpye6rtky4.cpp: In function \u2018int main()\u2019:\n/tmp/tmpye6rtky4.cpp:28:311: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   28 |     assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n      |                                                                                                                                                                                                                                                                                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpye6rtky4.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /t",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\nstd::any extract_index_list(std::vector<long> l1, std::vector<long> l2, std::vector<long> l3) {\n    std::vector<long> result;\n    for (int i = 0; i < l1.size(); i++) {\n        if (l1[i] == l2[i] && l2[i] == l3[i]) {\n            result.push_back(l1[i]);\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = extract_index_list;\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)5})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)7}))) == (std::any({(long)1, (long)6})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)6, (long)5, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)5})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)6, (long)6, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any()));\n}\n",
      "timestamp": 1665517341,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/tmp/tmpv_xccequ.cpp: In function \u2018int main()\u2019:\n/tmp/tmpv_xccequ.cpp:15:311: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n      |                                                                                                                                                                                                                                                                                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /t",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\nstd::any extract_index_list(std::vector<long> l1, std::vector<long> l2, std::vector<long> l3) {\n    std::vector<long> result;\n    for (int i = 0; i < l1.size(); i++) {\n        if (l1[i] == l2[i] && l2[i] == l3[i]) {\n            result.push_back(l1[i]);\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = extract_index_list;\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)5})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)7}))) == (std::any({(long)1, (long)6})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)6, (long)5, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)5})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)6, (long)6, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any()));\n}\n",
      "timestamp": 1665517341,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/tmp/tmpv_xccequ.cpp: In function \u2018int main()\u2019:\n/tmp/tmpv_xccequ.cpp:15:311: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n      |                                                                                                                                                                                                                                                                                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /t",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\nstd::any extract_index_list(std::vector<long> l1, std::vector<long> l2, std::vector<long> l3) {\n    std::vector<long> result;\n    for (int i = 0; i < l1.size(); i++) {\n        if (l1[i] == l2[i] && l2[i] == l3[i]) {\n            result.push_back(l1[i]);\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = extract_index_list;\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)5})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)7}))) == (std::any({(long)1, (long)6})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)6, (long)5, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)5})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)6, (long)6, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any()));\n}\n",
      "timestamp": 1665517341,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/tmp/tmpv_xccequ.cpp: In function \u2018int main()\u2019:\n/tmp/tmpv_xccequ.cpp:15:311: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n      |                                                                                                                                                                                                                                                                                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /t",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\nstd::any extract_index_list(std::vector<long> l1, std::vector<long> l2, std::vector<long> l3) {\n    std::vector<long> result;\n    for (int i = 0; i < l1.size(); i++) {\n        if (l1[i] == l2[i] && l2[i] == l3[i]) {\n            result.push_back(l1[i]);\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = extract_index_list;\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)5})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)7}))) == (std::any({(long)1, (long)6})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)6, (long)5, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)5})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)6, (long)6, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any()));\n}\n",
      "timestamp": 1665517341,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/tmp/tmpv_xccequ.cpp: In function \u2018int main()\u2019:\n/tmp/tmpv_xccequ.cpp:15:311: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n      |                                                                                                                                                                                                                                                                                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /t",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\nstd::any extract_index_list(std::vector<long> l1, std::vector<long> l2, std::vector<long> l3) {\n    std::vector<long> result;\n    auto it1 = l1.begin();\n    auto it2 = l2.begin();\n    auto it3 = l3.begin();\n    while (it1 != l1.end() && it2 != l2.end() && it3 != l3.end()) {\n        if (*it1 == *it2 && *it2 == *it3) {\n            result.push_back(*it1);\n            it1++;\n            it2++;\n            it3++;\n        } else if (*it1 < *it2) {\n            it1++;\n        } else if (*it2 < *it3) {\n            it2++;\n        } else {\n            it3++;\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = extract_index_list;\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)5})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)7}))) == (std::any({(long)1, (long)6})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)6, (long)5, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)5})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)6, (long)6, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any()));\n}\n",
      "timestamp": 1666123165,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpg6tvh0bc.cpp:2:\n/tmp/tmpg6tvh0bc.cpp: In function \u2018int main()\u2019:\n/tmp/tmpg6tvh0bc.cpp:27:311: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   27 |     assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n      |                                                                                                                                                                                                                                                                                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpg6tvh0bc.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /t",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\nstd::any extract_index_list(std::vector<long> l1, std::vector<long> l2, std::vector<long> l3) {\n    std::vector<long> result;\n    for (int i = 0; i < l1.size(); i++) {\n        if (l1[i] == l2[i] && l2[i] == l3[i]) {\n            result.push_back(l1[i]);\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = extract_index_list;\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)5})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)7}))) == (std::any({(long)1, (long)6})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)6, (long)5, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)5})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)6, (long)6, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any()));\n}\n",
      "timestamp": 1665517341,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/tmp/tmpv_xccequ.cpp: In function \u2018int main()\u2019:\n/tmp/tmpv_xccequ.cpp:15:311: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n      |                                                                                                                                                                                                                                                                                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /t",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\nstd::any extract_index_list(std::vector<long> l1, std::vector<long> l2, std::vector<long> l3) {\n    std::vector<long> result;\n    int i = 0;\n    int j = 0;\n    int k = 0;\n    while (i < l1.size() && j < l2.size() && k < l3.size()) {\n        if (l1[i] == l2[j] && l2[j] == l3[k]) {\n            result.push_back(l1[i]);\n            i++;\n            j++;\n            k++;\n        } else if (l1[i] < l2[j]) {\n            i++;\n        } else if (l2[j] < l3[k]) {\n            j++;\n        } else {\n            k++;\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = extract_index_list;\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)5})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)7}))) == (std::any({(long)1, (long)6})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)6, (long)5, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)5})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)6, (long)6, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any()));\n}\n",
      "timestamp": 1665517342,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpex2a5qkg.cpp:2:\n/tmp/tmpex2a5qkg.cpp: In function \u2018int main()\u2019:\n/tmp/tmpex2a5qkg.cpp:27:311: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   27 |     assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n      |                                                                                                                                                                                                                                                                                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpex2a5qkg.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /t",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\nstd::any extract_index_list(std::vector<long> l1, std::vector<long> l2, std::vector<long> l3) {\n    std::vector<long> result;\n    for(int i=0; i<l1.size(); i++) {\n        if(l1[i] == l2[i] && l2[i] == l3[i]) {\n            result.push_back(l1[i]);\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = extract_index_list;\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)5})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)7}))) == (std::any({(long)1, (long)6})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)6, (long)5, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)5})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)6, (long)6, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any()));\n}\n",
      "timestamp": 1666123165,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmphvren31t.cpp:2:\n/tmp/tmphvren31t.cpp: In function \u2018int main()\u2019:\n/tmp/tmphvren31t.cpp:15:311: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n      |                                                                                                                                                                                                                                                                                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmphvren31t.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /t",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\nstd::any extract_index_list(std::vector<long> l1, std::vector<long> l2, std::vector<long> l3) {\n    std::vector<long> result;\n    for(int i = 0; i < l1.size(); i++) {\n        if(l1[i] == l2[i] && l2[i] == l3[i]) {\n            result.push_back(l1[i]);\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = extract_index_list;\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)5})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)7}))) == (std::any({(long)1, (long)6})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)6, (long)5, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)5})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)6, (long)6, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any()));\n}\n",
      "timestamp": 1665517341,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpcnh5dyna.cpp:2:\n/tmp/tmpcnh5dyna.cpp: In function \u2018int main()\u2019:\n/tmp/tmpcnh5dyna.cpp:15:311: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n      |                                                                                                                                                                                                                                                                                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpcnh5dyna.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /t",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\nstd::any extract_index_list(std::vector<long> l1, std::vector<long> l2, std::vector<long> l3) {\n    std::vector<long> result;\n    for (int i = 0; i < l1.size(); i++) {\n        if (l1[i] == l2[i] && l2[i] == l3[i]) {\n            result.push_back(l1[i]);\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = extract_index_list;\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)5})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)7}))) == (std::any({(long)1, (long)6})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)6, (long)5, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)5})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)6, (long)6, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any()));\n}\n",
      "timestamp": 1665517341,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/tmp/tmpv_xccequ.cpp: In function \u2018int main()\u2019:\n/tmp/tmpv_xccequ.cpp:15:311: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n      |                                                                                                                                                                                                                                                                                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /t",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\nstd::any extract_index_list(std::vector<long> l1, std::vector<long> l2, std::vector<long> l3) {\n    std::vector<long> result;\n    for (int i = 0; i < l1.size(); i++) {\n        if (l1[i] == l2[i] && l2[i] == l3[i]) {\n            result.push_back(l1[i]);\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = extract_index_list;\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)5})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)7}))) == (std::any({(long)1, (long)6})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)6, (long)5, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)5})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)6, (long)6, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any()));\n}\n",
      "timestamp": 1665517341,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/tmp/tmpv_xccequ.cpp: In function \u2018int main()\u2019:\n/tmp/tmpv_xccequ.cpp:15:311: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n      |                                                                                                                                                                                                                                                                                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /t",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\nstd::any extract_index_list(std::vector<long> l1, std::vector<long> l2, std::vector<long> l3) {\n    std::vector<long> result;\n    for(int i = 0; i < l1.size(); i++) {\n        if(l1[i] == l2[i] && l1[i] == l3[i]) {\n            result.push_back(l1[i]);\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = extract_index_list;\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)5})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)7}))) == (std::any({(long)1, (long)6})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)6, (long)5, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)5})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)6, (long)6, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any()));\n}\n",
      "timestamp": 1666123165,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpgsedyelb.cpp:2:\n/tmp/tmpgsedyelb.cpp: In function \u2018int main()\u2019:\n/tmp/tmpgsedyelb.cpp:15:311: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n      |                                                                                                                                                                                                                                                                                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpgsedyelb.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /t",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\nstd::any extract_index_list(std::vector<long> l1, std::vector<long> l2, std::vector<long> l3) {\n    std::vector<long> result;\n    for (int i = 0; i < l1.size(); i++) {\n        if (l1[i] == l2[i] && l2[i] == l3[i]) {\n            result.push_back(l1[i]);\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = extract_index_list;\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)5})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)7}))) == (std::any({(long)1, (long)6})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)6, (long)5, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)5})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)6, (long)6, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any()));\n}\n",
      "timestamp": 1665517341,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/tmp/tmpv_xccequ.cpp: In function \u2018int main()\u2019:\n/tmp/tmpv_xccequ.cpp:15:311: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n      |                                                                                                                                                                                                                                                                                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /t",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\nstd::any extract_index_list(std::vector<long> l1, std::vector<long> l2, std::vector<long> l3) {\n    std::vector<long> result;\n    for (int i = 0; i < l1.size(); i++) {\n        if (l1[i] == l2[i] && l2[i] == l3[i]) {\n            result.push_back(l1[i]);\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = extract_index_list;\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)5})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)7}))) == (std::any({(long)1, (long)6})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)6, (long)5, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)5})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)6, (long)6, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any()));\n}\n",
      "timestamp": 1665517341,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/tmp/tmpv_xccequ.cpp: In function \u2018int main()\u2019:\n/tmp/tmpv_xccequ.cpp:15:311: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n      |                                                                                                                                                                                                                                                                                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /t",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\nstd::any extract_index_list(std::vector<long> l1, std::vector<long> l2, std::vector<long> l3) {\n    std::vector<long> result;\n    for (int i = 0; i < l1.size(); i++) {\n        if (l1[i] == l2[i] && l2[i] == l3[i]) {\n            result.push_back(l1[i]);\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = extract_index_list;\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)5})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)7}))) == (std::any({(long)1, (long)6})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)6, (long)5, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)5})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)6, (long)6, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any()));\n}\n",
      "timestamp": 1665517341,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/tmp/tmpv_xccequ.cpp: In function \u2018int main()\u2019:\n/tmp/tmpv_xccequ.cpp:15:311: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n      |                                                                                                                                                                                                                                                                                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /t",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\nstd::any extract_index_list(std::vector<long> l1, std::vector<long> l2, std::vector<long> l3) {\n    std::vector<long> result;\n    for (int i = 0; i < l1.size(); i++) {\n        if (l1[i] == l2[i] && l2[i] == l3[i]) {\n            result.push_back(l1[i]);\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = extract_index_list;\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)5})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)7}))) == (std::any({(long)1, (long)6})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)6, (long)5, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)5})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)6, (long)6, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any()));\n}\n",
      "timestamp": 1665517341,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/tmp/tmpv_xccequ.cpp: In function \u2018int main()\u2019:\n/tmp/tmpv_xccequ.cpp:15:311: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n      |                                                                                                                                                                                                                                                                                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /t",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\nstd::any extract_index_list(std::vector<long> l1, std::vector<long> l2, std::vector<long> l3) {\n    std::vector<long> result;\n    for (int i = 0; i < l1.size(); i++) {\n        if (l1[i] == l2[i] && l2[i] == l3[i]) {\n            result.push_back(l1[i]);\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = extract_index_list;\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)5})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)7}))) == (std::any({(long)1, (long)6})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)6, (long)5, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)5})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)6, (long)6, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any()));\n}\n",
      "timestamp": 1665517341,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/tmp/tmpv_xccequ.cpp: In function \u2018int main()\u2019:\n/tmp/tmpv_xccequ.cpp:15:311: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n      |                                                                                                                                                                                                                                                                                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /t",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\nstd::any extract_index_list(std::vector<long> l1, std::vector<long> l2, std::vector<long> l3) {\n    std::vector<long> result;\n    for (int i = 0; i < l1.size(); i++) {\n        if (l1[i] == l2[i] && l2[i] == l3[i]) {\n            result.push_back(l1[i]);\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = extract_index_list;\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)5})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)7}))) == (std::any({(long)1, (long)6})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)6, (long)5, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)5})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)6, (long)6, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any()));\n}\n",
      "timestamp": 1665517341,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/tmp/tmpv_xccequ.cpp: In function \u2018int main()\u2019:\n/tmp/tmpv_xccequ.cpp:15:311: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n      |                                                                                                                                                                                                                                                                                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /t",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\nstd::any extract_index_list(std::vector<long> l1, std::vector<long> l2, std::vector<long> l3) {\n    std::vector<long> result;\n    for (int i = 0; i < l1.size(); i++) {\n        if (l1[i] == l2[i] && l2[i] == l3[i]) {\n            result.push_back(l1[i]);\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = extract_index_list;\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)5})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)7}))) == (std::any({(long)1, (long)6})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)6, (long)5, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)5})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)6, (long)6, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any()));\n}\n",
      "timestamp": 1665517341,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/tmp/tmpv_xccequ.cpp: In function \u2018int main()\u2019:\n/tmp/tmpv_xccequ.cpp:15:311: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n      |                                                                                                                                                                                                                                                                                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /t",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\nstd::any extract_index_list(std::vector<long> l1, std::vector<long> l2, std::vector<long> l3) {\n    std::vector<long> result;\n    for (int i = 0; i < l1.size(); i++) {\n        if (l1[i] == l2[i] && l2[i] == l3[i]) {\n            result.push_back(l1[i]);\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = extract_index_list;\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)5})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)7}))) == (std::any({(long)1, (long)6})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)6, (long)5, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)5})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)6, (long)6, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any()));\n}\n",
      "timestamp": 1665517341,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/tmp/tmpv_xccequ.cpp: In function \u2018int main()\u2019:\n/tmp/tmpv_xccequ.cpp:15:311: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n      |                                                                                                                                                                                                                                                                                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /t",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\nstd::any extract_index_list(std::vector<long> l1, std::vector<long> l2, std::vector<long> l3) {\n    std::vector<long> result;\n    for(int i = 0; i < l1.size(); i++) {\n        if(l1[i] == l2[i] && l2[i] == l3[i]) {\n            result.push_back(l1[i]);\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = extract_index_list;\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)5})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)7}))) == (std::any({(long)1, (long)6})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)6, (long)5, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)5})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)6, (long)6, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any()));\n}\n",
      "timestamp": 1665517341,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpcnh5dyna.cpp:2:\n/tmp/tmpcnh5dyna.cpp: In function \u2018int main()\u2019:\n/tmp/tmpcnh5dyna.cpp:15:311: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n      |                                                                                                                                                                                                                                                                                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpcnh5dyna.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /t",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\nstd::any extract_index_list(std::vector<long> l1, std::vector<long> l2, std::vector<long> l3) {\n    std::vector<long> result;\n    for(int i = 0; i < l1.size(); i++) {\n        if(l1[i] == l2[i] && l2[i] == l3[i]) {\n            result.push_back(l1[i]);\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = extract_index_list;\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)5})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)7}))) == (std::any({(long)1, (long)6})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)6, (long)5, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)5})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)6, (long)6, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any()));\n}\n",
      "timestamp": 1665517341,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpcnh5dyna.cpp:2:\n/tmp/tmpcnh5dyna.cpp: In function \u2018int main()\u2019:\n/tmp/tmpcnh5dyna.cpp:15:311: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n      |                                                                                                                                                                                                                                                                                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpcnh5dyna.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /t",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\nstd::any extract_index_list(std::vector<long> l1, std::vector<long> l2, std::vector<long> l3) {\n    std::vector<long> result;\n    std::vector<long>::iterator it1 = l1.begin();\n    std::vector<long>::iterator it2 = l2.begin();\n    std::vector<long>::iterator it3 = l3.begin();\n    while (it1 != l1.end() && it2 != l2.end() && it3 != l3.end()) {\n        if (*it1 == *it2 && *it2 == *it3) {\n            result.push_back(*it1);\n            it1++;\n            it2++;\n            it3++;\n        } else {\n            if (*it1 < *it2) {\n                it1++;\n            } else if (*it2 < *it3) {\n                it2++;\n            } else {\n                it3++;\n            }\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = extract_index_list;\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)5})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)7}))) == (std::any({(long)1, (long)6})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)6, (long)5, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)5})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)6, (long)6, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any()));\n}\n",
      "timestamp": 1666123165,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpb1o_71kf.cpp:2:\n/tmp/tmpb1o_71kf.cpp: In function \u2018int main()\u2019:\n/tmp/tmpb1o_71kf.cpp:29:311: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   29 |     assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n      |                                                                                                                                                                                                                                                                                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpb1o_71kf.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /t",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\nstd::any extract_index_list(std::vector<long> l1, std::vector<long> l2, std::vector<long> l3) {\n    std::vector<long> common_elements;\n    for (int i = 0; i < l1.size(); i++) {\n        if (l1[i] == l2[i] && l2[i] == l3[i]) {\n            common_elements.push_back(l1[i]);\n        }\n    }\n    return common_elements;\n}\nint main() {\n    auto candidate = extract_index_list;\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)5})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)7}))) == (std::any({(long)1, (long)6})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)6, (long)5, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)5})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)6, (long)6, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any()));\n}\n",
      "timestamp": 1665517341,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpawj13wad.cpp:2:\n/tmp/tmpawj13wad.cpp: In function \u2018int main()\u2019:\n/tmp/tmpawj13wad.cpp:15:311: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n      |                                                                                                                                                                                                                                                                                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpawj13wad.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /t",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\nstd::any extract_index_list(std::vector<long> l1, std::vector<long> l2, std::vector<long> l3) {\n    std::vector<long> result;\n    for (int i = 0; i < l1.size(); i++) {\n        if (l1[i] == l2[i] && l2[i] == l3[i]) {\n            result.push_back(l1[i]);\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = extract_index_list;\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)5})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)7}))) == (std::any({(long)1, (long)6})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)6, (long)5, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)5})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)6, (long)6, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any()));\n}\n",
      "timestamp": 1665517341,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/tmp/tmpv_xccequ.cpp: In function \u2018int main()\u2019:\n/tmp/tmpv_xccequ.cpp:15:311: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n      |                                                                                                                                                                                                                                                                                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /t",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\nstd::any extract_index_list(std::vector<long> l1, std::vector<long> l2, std::vector<long> l3) {\n    std::vector<long> result;\n    for (int i = 0; i < l1.size(); i++) {\n        if (l1[i] == l2[i] && l2[i] == l3[i]) {\n            result.push_back(l1[i]);\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = extract_index_list;\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)5})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)7}))) == (std::any({(long)1, (long)6})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)6, (long)5, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)5})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)6, (long)6, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any()));\n}\n",
      "timestamp": 1665517341,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/tmp/tmpv_xccequ.cpp: In function \u2018int main()\u2019:\n/tmp/tmpv_xccequ.cpp:15:311: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n      |                                                                                                                                                                                                                                                                                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /t",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\nstd::any extract_index_list(std::vector<long> l1, std::vector<long> l2, std::vector<long> l3) {\n    std::vector<long> result;\n    for (int i = 0; i < l1.size(); i++) {\n        if (l1[i] == l2[i] && l2[i] == l3[i]) {\n            result.push_back(l1[i]);\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = extract_index_list;\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)5})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)7}))) == (std::any({(long)1, (long)6})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)6, (long)5, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)5})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)6, (long)6, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any()));\n}\n",
      "timestamp": 1665517341,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/tmp/tmpv_xccequ.cpp: In function \u2018int main()\u2019:\n/tmp/tmpv_xccequ.cpp:15:311: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n      |                                                                                                                                                                                                                                                                                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /t",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\nstd::any extract_index_list(std::vector<long> l1, std::vector<long> l2, std::vector<long> l3) {\n    std::vector<long> result;\n    for(int i = 0; i < l1.size(); i++) {\n        if(l1[i] == l2[i] && l2[i] == l3[i]) {\n            result.push_back(l1[i]);\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = extract_index_list;\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)5})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)7}))) == (std::any({(long)1, (long)6})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)6, (long)5, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)5})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)6, (long)6, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any()));\n}\n",
      "timestamp": 1665517341,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpcnh5dyna.cpp:2:\n/tmp/tmpcnh5dyna.cpp: In function \u2018int main()\u2019:\n/tmp/tmpcnh5dyna.cpp:15:311: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n      |                                                                                                                                                                                                                                                                                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpcnh5dyna.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /t",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\nstd::any extract_index_list(std::vector<long> l1, std::vector<long> l2, std::vector<long> l3) {\n    std::vector<long> result;\n    for (int i = 0; i < l1.size(); i++) {\n        if (l1[i] == l2[i] && l2[i] == l3[i]) {\n            result.push_back(l1[i]);\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = extract_index_list;\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)5})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)7}))) == (std::any({(long)1, (long)6})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)6, (long)5, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)5})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)6, (long)6, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any()));\n}\n",
      "timestamp": 1665517341,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/tmp/tmpv_xccequ.cpp: In function \u2018int main()\u2019:\n/tmp/tmpv_xccequ.cpp:15:311: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n      |                                                                                                                                                                                                                                                                                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /t",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\nstd::any extract_index_list(std::vector<long> l1, std::vector<long> l2, std::vector<long> l3) {\n    std::vector<long> result;\n    for (int i = 0; i < l1.size(); i++) {\n        if (l1[i] == l2[i] && l2[i] == l3[i]) {\n            result.push_back(l1[i]);\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = extract_index_list;\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)5})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)7}))) == (std::any({(long)1, (long)6})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)6, (long)5, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)5})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)6, (long)6, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any()));\n}\n",
      "timestamp": 1665517341,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/tmp/tmpv_xccequ.cpp: In function \u2018int main()\u2019:\n/tmp/tmpv_xccequ.cpp:15:311: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n      |                                                                                                                                                                                                                                                                                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /t",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\nstd::any extract_index_list(std::vector<long> l1, std::vector<long> l2, std::vector<long> l3) {\n    std::vector<long> result;\n    for (int i = 0; i < l1.size(); i++) {\n        if (l1[i] == l2[i] && l2[i] == l3[i]) {\n            result.push_back(l1[i]);\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = extract_index_list;\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)5})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)7}))) == (std::any({(long)1, (long)6})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)6, (long)5, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)5})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)6, (long)6, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any()));\n}\n",
      "timestamp": 1665517341,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/tmp/tmpv_xccequ.cpp: In function \u2018int main()\u2019:\n/tmp/tmpv_xccequ.cpp:15:311: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n      |                                                                                                                                                                                                                                                                                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /t",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\nstd::any extract_index_list(std::vector<long> l1, std::vector<long> l2, std::vector<long> l3) {\n    std::vector<long> result;\n    for (int i = 0; i < l1.size(); i++) {\n        if (l1[i] == l2[i] && l2[i] == l3[i]) {\n            result.push_back(l1[i]);\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = extract_index_list;\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)5})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)7}))) == (std::any({(long)1, (long)6})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)6, (long)5, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)5})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)6, (long)6, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any()));\n}\n",
      "timestamp": 1665517341,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/tmp/tmpv_xccequ.cpp: In function \u2018int main()\u2019:\n/tmp/tmpv_xccequ.cpp:15:311: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n      |                                                                                                                                                                                                                                                                                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /t",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\nstd::any extract_index_list(std::vector<long> l1, std::vector<long> l2, std::vector<long> l3) {\n    std::vector<long> result;\n    for (int i = 0; i < l1.size(); i++) {\n        if (l1[i] == l2[i] && l2[i] == l3[i]) {\n            result.push_back(l1[i]);\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = extract_index_list;\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)5})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)7}))) == (std::any({(long)1, (long)6})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)6, (long)5, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)5})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)6, (long)6, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any()));\n}\n",
      "timestamp": 1665517341,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/tmp/tmpv_xccequ.cpp: In function \u2018int main()\u2019:\n/tmp/tmpv_xccequ.cpp:15:311: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n      |                                                                                                                                                                                                                                                                                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /t",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\nstd::any extract_index_list(std::vector<long> l1, std::vector<long> l2, std::vector<long> l3) {\n    std::vector<long> result;\n    for (int i = 0; i < l1.size(); i++) {\n        if (l1[i] == l2[i] && l2[i] == l3[i]) {\n            result.push_back(l1[i]);\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = extract_index_list;\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)5})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)7}))) == (std::any({(long)1, (long)6})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)6, (long)5, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)5})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)6, (long)6, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any()));\n}\n",
      "timestamp": 1665517341,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/tmp/tmpv_xccequ.cpp: In function \u2018int main()\u2019:\n/tmp/tmpv_xccequ.cpp:15:311: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n      |                                                                                                                                                                                                                                                                                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /t",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\nstd::any extract_index_list(std::vector<long> l1, std::vector<long> l2, std::vector<long> l3) {\n    std::vector<long> result;\n    for(int i = 0; i < l1.size(); i++) {\n        if(l1[i] == l2[i] && l2[i] == l3[i]) {\n            result.push_back(l1[i]);\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = extract_index_list;\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)5})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)7}))) == (std::any({(long)1, (long)6})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)6, (long)5, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)5})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)6, (long)6, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any()));\n}\n",
      "timestamp": 1665517341,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpcnh5dyna.cpp:2:\n/tmp/tmpcnh5dyna.cpp: In function \u2018int main()\u2019:\n/tmp/tmpcnh5dyna.cpp:15:311: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n      |                                                                                                                                                                                                                                                                                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpcnh5dyna.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /t",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\nstd::any extract_index_list(std::vector<long> l1, std::vector<long> l2, std::vector<long> l3) {\n    std::vector<long> result;\n    for (int i = 0; i < l1.size(); i++) {\n        if (l1[i] == l2[i] && l2[i] == l3[i]) {\n            result.push_back(l1[i]);\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = extract_index_list;\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)5})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)7}))) == (std::any({(long)1, (long)6})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)6, (long)5, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)5})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)6, (long)6, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any()));\n}\n",
      "timestamp": 1665517341,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/tmp/tmpv_xccequ.cpp: In function \u2018int main()\u2019:\n/tmp/tmpv_xccequ.cpp:15:311: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n      |                                                                                                                                                                                                                                                                                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /t",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\nstd::any extract_index_list(std::vector<long> l1, std::vector<long> l2, std::vector<long> l3) {\n    std::vector<long> result;\n    for(int i = 0; i < l1.size(); i++) {\n        if(l1[i] == l2[i] && l2[i] == l3[i]) {\n            result.push_back(l1[i]);\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = extract_index_list;\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)5})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)7}))) == (std::any({(long)1, (long)6})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)6, (long)5, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)5})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)6, (long)6, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any()));\n}\n",
      "timestamp": 1665517341,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpcnh5dyna.cpp:2:\n/tmp/tmpcnh5dyna.cpp: In function \u2018int main()\u2019:\n/tmp/tmpcnh5dyna.cpp:15:311: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n      |                                                                                                                                                                                                                                                                                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpcnh5dyna.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /t",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\nstd::any extract_index_list(std::vector<long> l1, std::vector<long> l2, std::vector<long> l3) {\n    std::vector<long> result;\n    std::vector<long>::iterator it1 = l1.begin();\n    std::vector<long>::iterator it2 = l2.begin();\n    std::vector<long>::iterator it3 = l3.begin();\n    while(it1 != l1.end() && it2 != l2.end() && it3 != l3.end()) {\n        if(*it1 == *it2 && *it2 == *it3) {\n            result.push_back(*it1);\n            it1++;\n            it2++;\n            it3++;\n        }\n        else if(*it1 < *it2) {\n            it1++;\n        }\n        else if(*it2 < *it3) {\n            it2++;\n        }\n        else {\n            it3++;\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = extract_index_list;\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)5})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)7}))) == (std::any({(long)1, (long)6})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)6, (long)5, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)5})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)6, (long)6, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any()));\n}\n",
      "timestamp": 1666123165,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpqgg3thch.cpp:2:\n/tmp/tmpqgg3thch.cpp: In function \u2018int main()\u2019:\n/tmp/tmpqgg3thch.cpp:30:311: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   30 |     assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n      |                                                                                                                                                                                                                                                                                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpqgg3thch.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /t",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\nstd::any extract_index_list(std::vector<long> l1, std::vector<long> l2, std::vector<long> l3) {\n    std::vector<long> result;\n    for(int i = 0; i < l1.size(); i++) {\n        if(l1[i] == l2[i] && l2[i] == l3[i]) {\n            result.push_back(l1[i]);\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = extract_index_list;\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)5})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)7}))) == (std::any({(long)1, (long)6})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)6, (long)5, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)5})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)6, (long)6, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any()));\n}\n",
      "timestamp": 1665517341,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpcnh5dyna.cpp:2:\n/tmp/tmpcnh5dyna.cpp: In function \u2018int main()\u2019:\n/tmp/tmpcnh5dyna.cpp:15:311: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n      |                                                                                                                                                                                                                                                                                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpcnh5dyna.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /t",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\nstd::any extract_index_list(std::vector<long> l1, std::vector<long> l2, std::vector<long> l3) {\n    std::vector<long> result;\n    for(int i = 0; i < l1.size(); i++) {\n        if(l1[i] == l2[i] && l2[i] == l3[i]) {\n            result.push_back(l1[i]);\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = extract_index_list;\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)5})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)7}))) == (std::any({(long)1, (long)6})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)6, (long)5, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)5})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)6, (long)6, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any()));\n}\n",
      "timestamp": 1665517341,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpcnh5dyna.cpp:2:\n/tmp/tmpcnh5dyna.cpp: In function \u2018int main()\u2019:\n/tmp/tmpcnh5dyna.cpp:15:311: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n      |                                                                                                                                                                                                                                                                                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpcnh5dyna.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /t",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\nstd::any extract_index_list(std::vector<long> l1, std::vector<long> l2, std::vector<long> l3) {\n    std::vector<long> result;\n    for (int i = 0; i < l1.size(); i++) {\n        if (l1[i] == l2[i] && l2[i] == l3[i]) {\n            result.push_back(l1[i]);\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = extract_index_list;\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)5})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)7}))) == (std::any({(long)1, (long)6})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)6, (long)5, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)5})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)6, (long)6, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any()));\n}\n",
      "timestamp": 1665517341,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/tmp/tmpv_xccequ.cpp: In function \u2018int main()\u2019:\n/tmp/tmpv_xccequ.cpp:15:311: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n      |                                                                                                                                                                                                                                                                                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /t",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\nstd::any extract_index_list(std::vector<long> l1, std::vector<long> l2, std::vector<long> l3) {\n    std::vector<long> result;\n    for (int i = 0; i < l1.size(); i++) {\n        if (l1[i] == l2[i] && l2[i] == l3[i]) {\n            result.push_back(l1[i]);\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = extract_index_list;\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)5})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)7}))) == (std::any({(long)1, (long)6})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)6, (long)5, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)5})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)6, (long)6, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any()));\n}\n",
      "timestamp": 1665517341,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/tmp/tmpv_xccequ.cpp: In function \u2018int main()\u2019:\n/tmp/tmpv_xccequ.cpp:15:311: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n      |                                                                                                                                                                                                                                                                                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /t",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\nstd::any extract_index_list(std::vector<long> l1, std::vector<long> l2, std::vector<long> l3) {\n    std::vector<long> result;\n    std::vector<long>::iterator it1 = l1.begin();\n    std::vector<long>::iterator it2 = l2.begin();\n    std::vector<long>::iterator it3 = l3.begin();\n    while(it1 != l1.end() && it2 != l2.end() && it3 != l3.end()) {\n        if(*it1 == *it2 && *it2 == *it3) {\n            result.push_back(*it1);\n            it1++;\n            it2++;\n            it3++;\n        } else if(*it1 < *it2) {\n            it1++;\n        } else if(*it2 < *it3) {\n            it2++;\n        } else {\n            it3++;\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = extract_index_list;\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)5})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)7}))) == (std::any({(long)1, (long)6})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)6, (long)5, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)5})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)6, (long)6, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any()));\n}\n",
      "timestamp": 1665517341,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmprw7xc3xl.cpp:2:\n/tmp/tmprw7xc3xl.cpp: In function \u2018int main()\u2019:\n/tmp/tmprw7xc3xl.cpp:27:311: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   27 |     assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n      |                                                                                                                                                                                                                                                                                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmprw7xc3xl.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /t",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\nstd::any extract_index_list(std::vector<long> l1, std::vector<long> l2, std::vector<long> l3) {\n    std::vector<long> result;\n    for(int i = 0; i < l1.size(); i++) {\n        if(l1[i] == l2[i] && l2[i] == l3[i]) {\n            result.push_back(l1[i]);\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = extract_index_list;\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)5})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)7}))) == (std::any({(long)1, (long)6})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)6, (long)5, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)5})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)6, (long)6, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any()));\n}\n",
      "timestamp": 1665517341,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpcnh5dyna.cpp:2:\n/tmp/tmpcnh5dyna.cpp: In function \u2018int main()\u2019:\n/tmp/tmpcnh5dyna.cpp:15:311: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n      |                                                                                                                                                                                                                                                                                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpcnh5dyna.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /t",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\nstd::any extract_index_list(std::vector<long> l1, std::vector<long> l2, std::vector<long> l3) {\n    std::vector<long> result;\n    for (int i = 0; i < l1.size(); i++) {\n        if (l1[i] == l2[i] && l2[i] == l3[i]) {\n            result.push_back(l1[i]);\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = extract_index_list;\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)5})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)7}))) == (std::any({(long)1, (long)6})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)6, (long)5, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)5})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)6, (long)6, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any()));\n}\n",
      "timestamp": 1665517341,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/tmp/tmpv_xccequ.cpp: In function \u2018int main()\u2019:\n/tmp/tmpv_xccequ.cpp:15:311: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n      |                                                                                                                                                                                                                                                                                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /t",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\nstd::any extract_index_list(std::vector<long> l1, std::vector<long> l2, std::vector<long> l3) {\n    std::vector<long> result;\n    for (int i = 0; i < l1.size(); i++) {\n        if (l1[i] == l2[i] && l2[i] == l3[i]) {\n            result.push_back(l1[i]);\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = extract_index_list;\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)5})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)7}))) == (std::any({(long)1, (long)6})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)6, (long)5, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)5})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)6, (long)6, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any()));\n}\n",
      "timestamp": 1665517341,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/tmp/tmpv_xccequ.cpp: In function \u2018int main()\u2019:\n/tmp/tmpv_xccequ.cpp:15:311: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n      |                                                                                                                                                                                                                                                                                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /t",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\nstd::any extract_index_list(std::vector<long> l1, std::vector<long> l2, std::vector<long> l3) {\n    std::vector<long> result;\n    for (int i = 0; i < l1.size(); i++) {\n        if (l1[i] == l2[i] && l2[i] == l3[i]) {\n            result.push_back(l1[i]);\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = extract_index_list;\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)5})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)7}))) == (std::any({(long)1, (long)6})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)6, (long)5, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)5})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)6, (long)6, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any()));\n}\n",
      "timestamp": 1665517341,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/tmp/tmpv_xccequ.cpp: In function \u2018int main()\u2019:\n/tmp/tmpv_xccequ.cpp:15:311: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n      |                                                                                                                                                                                                                                                                                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /t",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\nstd::any extract_index_list(std::vector<long> l1, std::vector<long> l2, std::vector<long> l3) {\n    std::vector<long> result;\n    for (int i = 0; i < l1.size(); i++) {\n        if (l1[i] == l2[i] && l2[i] == l3[i]) {\n            result.push_back(l1[i]);\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = extract_index_list;\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)5})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)7}))) == (std::any({(long)1, (long)6})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)6, (long)5, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)5})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)6, (long)6, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any()));\n}\n",
      "timestamp": 1665517341,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/tmp/tmpv_xccequ.cpp: In function \u2018int main()\u2019:\n/tmp/tmpv_xccequ.cpp:15:311: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n      |                                                                                                                                                                                                                                                                                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /t",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\nstd::any extract_index_list(std::vector<long> l1, std::vector<long> l2, std::vector<long> l3) {\n    std::vector<long> result;\n    for(int i = 0; i < l1.size(); i++) {\n        if(l1[i] == l2[i] && l2[i] == l3[i]) {\n            result.push_back(l1[i]);\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = extract_index_list;\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)5})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)7}))) == (std::any({(long)1, (long)6})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)6, (long)5, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)5})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)6, (long)6, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any()));\n}\n",
      "timestamp": 1665517341,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpcnh5dyna.cpp:2:\n/tmp/tmpcnh5dyna.cpp: In function \u2018int main()\u2019:\n/tmp/tmpcnh5dyna.cpp:15:311: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n      |                                                                                                                                                                                                                                                                                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpcnh5dyna.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /t",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\nstd::any extract_index_list(std::vector<long> l1, std::vector<long> l2, std::vector<long> l3) {\n    std::vector<long> result;\n    for (int i = 0; i < l1.size(); i++) {\n        if (l1[i] == l2[i] && l2[i] == l3[i]) {\n            result.push_back(l1[i]);\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = extract_index_list;\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)5})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)7}))) == (std::any({(long)1, (long)6})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)6, (long)5, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)5})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)6, (long)6, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any()));\n}\n",
      "timestamp": 1665517341,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/tmp/tmpv_xccequ.cpp: In function \u2018int main()\u2019:\n/tmp/tmpv_xccequ.cpp:15:311: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n      |                                                                                                                                                                                                                                                                                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /t",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\nstd::any extract_index_list(std::vector<long> l1, std::vector<long> l2, std::vector<long> l3) {\n    std::vector<long> result;\n    for (int i = 0; i < l1.size(); i++) {\n        if (l1[i] == l2[i] && l2[i] == l3[i]) {\n            result.push_back(l1[i]);\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = extract_index_list;\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)5})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)7}))) == (std::any({(long)1, (long)6})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)6, (long)5, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)5})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)6, (long)6, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any()));\n}\n",
      "timestamp": 1665517341,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/tmp/tmpv_xccequ.cpp: In function \u2018int main()\u2019:\n/tmp/tmpv_xccequ.cpp:15:311: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n      |                                                                                                                                                                                                                                                                                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /t",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\nstd::any extract_index_list(std::vector<long> l1, std::vector<long> l2, std::vector<long> l3) {\n    std::vector<long> result;\n    for (int i = 0; i < l1.size(); i++) {\n        if (l1[i] == l2[i] && l2[i] == l3[i]) {\n            result.push_back(l1[i]);\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = extract_index_list;\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)5})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)7}))) == (std::any({(long)1, (long)6})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)6, (long)5, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)5})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)6, (long)6, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any()));\n}\n",
      "timestamp": 1665517341,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/tmp/tmpv_xccequ.cpp: In function \u2018int main()\u2019:\n/tmp/tmpv_xccequ.cpp:15:311: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n      |                                                                                                                                                                                                                                                                                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /t",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\nstd::any extract_index_list(std::vector<long> l1, std::vector<long> l2, std::vector<long> l3) {\n    std::vector<long> result;\n    for (int i = 0; i < l1.size(); i++) {\n        if (l1[i] == l2[i] && l2[i] == l3[i]) {\n            result.push_back(l1[i]);\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = extract_index_list;\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)5})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)7}))) == (std::any({(long)1, (long)6})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)6, (long)5, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)5})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)6, (long)6, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any()));\n}\n",
      "timestamp": 1665517341,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/tmp/tmpv_xccequ.cpp: In function \u2018int main()\u2019:\n/tmp/tmpv_xccequ.cpp:15:311: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n      |                                                                                                                                                                                                                                                                                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /t",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\nstd::any extract_index_list(std::vector<long> l1, std::vector<long> l2, std::vector<long> l3) {\n    std::vector<long> result;\n    for(int i = 0; i < l1.size(); i++) {\n        if(l1[i] == l2[i] && l2[i] == l3[i]) {\n            result.push_back(l1[i]);\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = extract_index_list;\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)5})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)7}))) == (std::any({(long)1, (long)6})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)6, (long)5, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)5})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)6, (long)6, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any()));\n}\n",
      "timestamp": 1665517341,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpcnh5dyna.cpp:2:\n/tmp/tmpcnh5dyna.cpp: In function \u2018int main()\u2019:\n/tmp/tmpcnh5dyna.cpp:15:311: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n      |                                                                                                                                                                                                                                                                                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpcnh5dyna.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /t",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\nstd::any extract_index_list(std::vector<long> l1, std::vector<long> l2, std::vector<long> l3) {\n    std::vector<long> result;\n    for (int i = 0; i < l1.size(); i++) {\n        if (l1[i] == l2[i] && l2[i] == l3[i]) {\n            result.push_back(l1[i]);\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = extract_index_list;\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)5})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)7}))) == (std::any({(long)1, (long)6})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)6, (long)5, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)5})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)6, (long)6, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any()));\n}\n",
      "timestamp": 1665517341,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/tmp/tmpv_xccequ.cpp: In function \u2018int main()\u2019:\n/tmp/tmpv_xccequ.cpp:15:311: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n      |                                                                                                                                                                                                                                                                                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /t",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\nstd::any extract_index_list(std::vector<long> l1, std::vector<long> l2, std::vector<long> l3) {\n    std::vector<long> result;\n    for (int i = 0; i < l1.size(); i++) {\n        if (l1[i] == l2[i] && l2[i] == l3[i]) {\n            result.push_back(l1[i]);\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = extract_index_list;\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)5})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)7}))) == (std::any({(long)1, (long)6})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)6, (long)5, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)5})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)6, (long)6, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any()));\n}\n",
      "timestamp": 1665517341,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/tmp/tmpv_xccequ.cpp: In function \u2018int main()\u2019:\n/tmp/tmpv_xccequ.cpp:15:311: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n      |                                                                                                                                                                                                                                                                                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /t",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\nstd::any extract_index_list(std::vector<long> l1, std::vector<long> l2, std::vector<long> l3) {\n    std::vector<long> result;\n    for (int i = 0; i < l1.size(); i++) {\n        if (l1[i] == l2[i] && l2[i] == l3[i]) {\n            result.push_back(l1[i]);\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = extract_index_list;\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)5})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)7}))) == (std::any({(long)1, (long)6})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)6, (long)5, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)5})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)6, (long)6, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any()));\n}\n",
      "timestamp": 1665517341,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/tmp/tmpv_xccequ.cpp: In function \u2018int main()\u2019:\n/tmp/tmpv_xccequ.cpp:15:311: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n      |                                                                                                                                                                                                                                                                                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /t",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\nstd::any extract_index_list(std::vector<long> l1, std::vector<long> l2, std::vector<long> l3) {\n    std::vector<long> result;\n    for(int i = 0; i < l1.size(); i++) {\n        if(l1[i] == l2[i] && l2[i] == l3[i]) {\n            result.push_back(l1[i]);\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = extract_index_list;\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)5})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)7}))) == (std::any({(long)1, (long)6})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)6, (long)5, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)5})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)6, (long)6, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any()));\n}\n",
      "timestamp": 1665517341,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpcnh5dyna.cpp:2:\n/tmp/tmpcnh5dyna.cpp: In function \u2018int main()\u2019:\n/tmp/tmpcnh5dyna.cpp:15:311: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n      |                                                                                                                                                                                                                                                                                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpcnh5dyna.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /t",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\nstd::any extract_index_list(std::vector<long> l1, std::vector<long> l2, std::vector<long> l3) {\n    std::vector<long> result;\n    for (int i = 0; i < l1.size(); i++) {\n        if (l1[i] == l2[i] && l2[i] == l3[i]) {\n            result.push_back(l1[i]);\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = extract_index_list;\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)5})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)7}))) == (std::any({(long)1, (long)6})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)6, (long)5, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)5})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)6, (long)6, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any()));\n}\n",
      "timestamp": 1665517341,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/tmp/tmpv_xccequ.cpp: In function \u2018int main()\u2019:\n/tmp/tmpv_xccequ.cpp:15:311: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n      |                                                                                                                                                                                                                                                                                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /t",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\nstd::any extract_index_list(std::vector<long> l1, std::vector<long> l2, std::vector<long> l3) {\n    std::vector<long> result;\n    for (int i = 0; i < l1.size(); i++) {\n        if (l1[i] == l2[i] && l2[i] == l3[i]) {\n            result.push_back(l1[i]);\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = extract_index_list;\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)5})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)7}))) == (std::any({(long)1, (long)6})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)6, (long)5, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)5})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)6, (long)6, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any()));\n}\n",
      "timestamp": 1665517341,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/tmp/tmpv_xccequ.cpp: In function \u2018int main()\u2019:\n/tmp/tmpv_xccequ.cpp:15:311: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n      |                                                                                                                                                                                                                                                                                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /t",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\nstd::any extract_index_list(std::vector<long> l1, std::vector<long> l2, std::vector<long> l3) {\n    std::vector<long> result;\n    for (int i = 0; i < l1.size(); i++) {\n        if (l1[i] == l2[i] && l2[i] == l3[i]) {\n            result.push_back(l1[i]);\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = extract_index_list;\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)5})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)7}))) == (std::any({(long)1, (long)6})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)6, (long)5, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)5})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)6, (long)6, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any()));\n}\n",
      "timestamp": 1665517341,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/tmp/tmpv_xccequ.cpp: In function \u2018int main()\u2019:\n/tmp/tmpv_xccequ.cpp:15:311: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n      |                                                                                                                                                                                                                                                                                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /t",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\nstd::any extract_index_list(std::vector<long> l1, std::vector<long> l2, std::vector<long> l3) {\n    std::vector<long> result;\n    for (int i = 0; i < l1.size(); i++) {\n        if (l1[i] == l2[i] && l2[i] == l3[i]) {\n            result.push_back(l1[i]);\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = extract_index_list;\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)5})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)7}))) == (std::any({(long)1, (long)6})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)6, (long)5, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)5})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)6, (long)6, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any()));\n}\n",
      "timestamp": 1665517341,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/tmp/tmpv_xccequ.cpp: In function \u2018int main()\u2019:\n/tmp/tmpv_xccequ.cpp:15:311: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n      |                                                                                                                                                                                                                                                                                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /t",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\nstd::any extract_index_list(std::vector<long> l1, std::vector<long> l2, std::vector<long> l3) {\n    std::vector<long> result;\n    int i = 0;\n    int j = 0;\n    int k = 0;\n    while (i < l1.size() && j < l2.size() && k < l3.size()) {\n        if (l1[i] == l2[j] && l2[j] == l3[k]) {\n            result.push_back(l1[i]);\n            i++;\n            j++;\n            k++;\n        } else if (l1[i] < l2[j]) {\n            i++;\n        } else if (l2[j] < l3[k]) {\n            j++;\n        } else {\n            k++;\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = extract_index_list;\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)5})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)7}))) == (std::any({(long)1, (long)6})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)6, (long)5, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)5})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)6, (long)6, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any()));\n}\n",
      "timestamp": 1665517342,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpex2a5qkg.cpp:2:\n/tmp/tmpex2a5qkg.cpp: In function \u2018int main()\u2019:\n/tmp/tmpex2a5qkg.cpp:27:311: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   27 |     assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n      |                                                                                                                                                                                                                                                                                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpex2a5qkg.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /t",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\nstd::any extract_index_list(std::vector<long> l1, std::vector<long> l2, std::vector<long> l3) {\n    std::vector<long> res;\n    for(int i = 0; i < l1.size(); i++) {\n        if(l1[i] == l2[i] && l2[i] == l3[i]) {\n            res.push_back(l1[i]);\n        }\n    }\n    return res;\n}\nint main() {\n    auto candidate = extract_index_list;\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)5})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)7}))) == (std::any({(long)1, (long)6})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)6, (long)5, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)5})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)6, (long)6, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any()));\n}\n",
      "timestamp": 1666123165,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpjojpjhk1.cpp:2:\n/tmp/tmpjojpjhk1.cpp: In function \u2018int main()\u2019:\n/tmp/tmpjojpjhk1.cpp:15:311: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n      |                                                                                                                                                                                                                                                                                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpjojpjhk1.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /t",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\nstd::any extract_index_list(std::vector<long> l1, std::vector<long> l2, std::vector<long> l3) {\n    std::vector<long> result;\n    for (int i = 0; i < l1.size(); i++) {\n        if (l1[i] == l2[i] && l2[i] == l3[i]) {\n            result.push_back(l1[i]);\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = extract_index_list;\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)5})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)7}))) == (std::any({(long)1, (long)6})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)6, (long)5, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)5})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)6, (long)6, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any()));\n}\n",
      "timestamp": 1665517341,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/tmp/tmpv_xccequ.cpp: In function \u2018int main()\u2019:\n/tmp/tmpv_xccequ.cpp:15:311: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n      |                                                                                                                                                                                                                                                                                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /t",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\nstd::any extract_index_list(std::vector<long> l1, std::vector<long> l2, std::vector<long> l3) {\n    std::vector<long> result;\n    for (int i = 0; i < l1.size(); i++) {\n        if (l1[i] == l2[i] && l2[i] == l3[i]) {\n            result.push_back(l1[i]);\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = extract_index_list;\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)5})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)7}))) == (std::any({(long)1, (long)6})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)6, (long)5, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)5})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)6, (long)6, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any()));\n}\n",
      "timestamp": 1665517341,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/tmp/tmpv_xccequ.cpp: In function \u2018int main()\u2019:\n/tmp/tmpv_xccequ.cpp:15:311: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n      |                                                                                                                                                                                                                                                                                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /t",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\nstd::any extract_index_list(std::vector<long> l1, std::vector<long> l2, std::vector<long> l3) {\n    std::vector<long> result;\n    for (int i = 0; i < l1.size(); i++) {\n        if (l1[i] == l2[i] && l2[i] == l3[i]) {\n            result.push_back(l1[i]);\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = extract_index_list;\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)5})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)7}))) == (std::any({(long)1, (long)6})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)6, (long)5, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)5})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)6, (long)6, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any()));\n}\n",
      "timestamp": 1665517341,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/tmp/tmpv_xccequ.cpp: In function \u2018int main()\u2019:\n/tmp/tmpv_xccequ.cpp:15:311: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n      |                                                                                                                                                                                                                                                                                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /t",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\nstd::any extract_index_list(std::vector<long> l1, std::vector<long> l2, std::vector<long> l3) {\n    std::vector<long> result;\n    for (int i = 0; i < l1.size(); i++) {\n        if (l1[i] == l2[i] && l2[i] == l3[i]) {\n            result.push_back(l1[i]);\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = extract_index_list;\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)5})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)7}))) == (std::any({(long)1, (long)6})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)6, (long)5, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)5})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)6, (long)6, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any()));\n}\n",
      "timestamp": 1665517341,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/tmp/tmpv_xccequ.cpp: In function \u2018int main()\u2019:\n/tmp/tmpv_xccequ.cpp:15:311: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n      |                                                                                                                                                                                                                                                                                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /t",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\nstd::any extract_index_list(std::vector<long> l1, std::vector<long> l2, std::vector<long> l3) {\n    std::vector<long> result;\n    std::vector<long>::iterator it1 = l1.begin();\n    std::vector<long>::iterator it2 = l2.begin();\n    std::vector<long>::iterator it3 = l3.begin();\n    while (it1 != l1.end() && it2 != l2.end() && it3 != l3.end()) {\n        if (*it1 == *it2 && *it2 == *it3) {\n            result.push_back(*it1);\n            it1++;\n            it2++;\n            it3++;\n        } else if (*it1 < *it2) {\n            it1++;\n        } else if (*it2 < *it3) {\n            it2++;\n        } else {\n            it3++;\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = extract_index_list;\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)5})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)7}))) == (std::any({(long)1, (long)6})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)6, (long)5, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)5})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)6, (long)6, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any()));\n}\n",
      "timestamp": 1665517341,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpl0vzx56j.cpp:2:\n/tmp/tmpl0vzx56j.cpp: In function \u2018int main()\u2019:\n/tmp/tmpl0vzx56j.cpp:27:311: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   27 |     assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n      |                                                                                                                                                                                                                                                                                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpl0vzx56j.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /t",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\nstd::any extract_index_list(std::vector<long> l1, std::vector<long> l2, std::vector<long> l3) {\n    std::vector<long> result;\n    for (int i = 0; i < l1.size(); i++) {\n        if (l1[i] == l2[i] && l2[i] == l3[i]) {\n            result.push_back(l1[i]);\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = extract_index_list;\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)5})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)7}))) == (std::any({(long)1, (long)6})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)6, (long)5, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)5})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)6, (long)6, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any()));\n}\n",
      "timestamp": 1665517341,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/tmp/tmpv_xccequ.cpp: In function \u2018int main()\u2019:\n/tmp/tmpv_xccequ.cpp:15:311: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n      |                                                                                                                                                                                                                                                                                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /t",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\nstd::any extract_index_list(std::vector<long> l1, std::vector<long> l2, std::vector<long> l3) {\n    std::vector<long> result;\n    std::vector<long>::iterator it1 = l1.begin();\n    std::vector<long>::iterator it2 = l2.begin();\n    std::vector<long>::iterator it3 = l3.begin();\n    while (it1 != l1.end() && it2 != l2.end() && it3 != l3.end()) {\n        if (*it1 == *it2 && *it2 == *it3) {\n            result.push_back(*it1);\n            it1++;\n            it2++;\n            it3++;\n        } else if (*it1 < *it2) {\n            it1++;\n        } else if (*it2 < *it3) {\n            it2++;\n        } else {\n            it3++;\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = extract_index_list;\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)5})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)7}))) == (std::any({(long)1, (long)6})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)6, (long)5, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)5})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)6, (long)6, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any()));\n}\n",
      "timestamp": 1665517341,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpl0vzx56j.cpp:2:\n/tmp/tmpl0vzx56j.cpp: In function \u2018int main()\u2019:\n/tmp/tmpl0vzx56j.cpp:27:311: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   27 |     assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n      |                                                                                                                                                                                                                                                                                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpl0vzx56j.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /t",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\nstd::any extract_index_list(std::vector<long> l1, std::vector<long> l2, std::vector<long> l3) {\n    std::vector<long> result;\n    for (int i = 0; i < l1.size(); i++) {\n        if (l1[i] == l2[i] && l2[i] == l3[i]) {\n            result.push_back(l1[i]);\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = extract_index_list;\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)5})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)7}))) == (std::any({(long)1, (long)6})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)6, (long)5, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)5})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)6, (long)6, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any()));\n}\n",
      "timestamp": 1665517341,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/tmp/tmpv_xccequ.cpp: In function \u2018int main()\u2019:\n/tmp/tmpv_xccequ.cpp:15:311: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n      |                                                                                                                                                                                                                                                                                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /t",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\nstd::any extract_index_list(std::vector<long> l1, std::vector<long> l2, std::vector<long> l3) {\n    std::vector<long> result;\n    std::vector<long>::iterator it1 = l1.begin();\n    std::vector<long>::iterator it2 = l2.begin();\n    std::vector<long>::iterator it3 = l3.begin();\n    while (it1 != l1.end() && it2 != l2.end() && it3 != l3.end()) {\n        if (*it1 == *it2 && *it2 == *it3) {\n            result.push_back(*it1);\n            it1++;\n            it2++;\n            it3++;\n        } else if (*it1 < *it2) {\n            it1++;\n        } else if (*it2 < *it3) {\n            it2++;\n        } else {\n            it3++;\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = extract_index_list;\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)5})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)7}))) == (std::any({(long)1, (long)6})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)6, (long)5, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)5})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)6, (long)6, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any()));\n}\n",
      "timestamp": 1665517341,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpl0vzx56j.cpp:2:\n/tmp/tmpl0vzx56j.cpp: In function \u2018int main()\u2019:\n/tmp/tmpl0vzx56j.cpp:27:311: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   27 |     assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n      |                                                                                                                                                                                                                                                                                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpl0vzx56j.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /t",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\nstd::any extract_index_list(std::vector<long> l1, std::vector<long> l2, std::vector<long> l3) {\n    std::vector<long> result;\n    std::vector<long>::iterator it1 = l1.begin();\n    std::vector<long>::iterator it2 = l2.begin();\n    std::vector<long>::iterator it3 = l3.begin();\n    while (it1 != l1.end() && it2 != l2.end() && it3 != l3.end()) {\n        if (*it1 == *it2 && *it1 == *it3) {\n            result.push_back(*it1);\n            it1++;\n            it2++;\n            it3++;\n        } else if (*it1 < *it2) {\n            it1++;\n        } else if (*it2 < *it3) {\n            it2++;\n        } else {\n            it3++;\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = extract_index_list;\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)5})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)7}))) == (std::any({(long)1, (long)6})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)6, (long)5, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)5})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)6, (long)6, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any()));\n}\n",
      "timestamp": 1666123165,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpwnyw2r4l.cpp:2:\n/tmp/tmpwnyw2r4l.cpp: In function \u2018int main()\u2019:\n/tmp/tmpwnyw2r4l.cpp:27:311: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   27 |     assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n      |                                                                                                                                                                                                                                                                                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpwnyw2r4l.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /t",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\nstd::any extract_index_list(std::vector<long> l1, std::vector<long> l2, std::vector<long> l3) {\n    std::vector<long> result;\n    for (int i = 0; i < l1.size(); i++) {\n        if (l1[i] == l2[i] && l2[i] == l3[i]) {\n            result.push_back(l1[i]);\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = extract_index_list;\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)5})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)7}))) == (std::any({(long)1, (long)6})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)6, (long)5, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)5})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)6, (long)6, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any()));\n}\n",
      "timestamp": 1665517341,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/tmp/tmpv_xccequ.cpp: In function \u2018int main()\u2019:\n/tmp/tmpv_xccequ.cpp:15:311: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n      |                                                                                                                                                                                                                                                                                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /t",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\nstd::any extract_index_list(std::vector<long> l1, std::vector<long> l2, std::vector<long> l3) {\n    std::vector<long> result;\n    for (int i = 0; i < l1.size(); i++) {\n        if (l1[i] == l2[i] && l2[i] == l3[i]) {\n            result.push_back(l1[i]);\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = extract_index_list;\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)5})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)7}))) == (std::any({(long)1, (long)6})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)6, (long)5, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)5})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)6, (long)6, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any()));\n}\n",
      "timestamp": 1665517341,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/tmp/tmpv_xccequ.cpp: In function \u2018int main()\u2019:\n/tmp/tmpv_xccequ.cpp:15:311: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n      |                                                                                                                                                                                                                                                                                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /t",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\nstd::any extract_index_list(std::vector<long> l1, std::vector<long> l2, std::vector<long> l3) {\n    std::vector<long> result;\n    int i = 0;\n    int j = 0;\n    int k = 0;\n    while (i < l1.size() && j < l2.size() && k < l3.size()) {\n        if (l1[i] == l2[j] && l2[j] == l3[k]) {\n            result.push_back(l1[i]);\n            i++;\n            j++;\n            k++;\n        } else if (l1[i] < l2[j]) {\n            i++;\n        } else if (l2[j] < l3[k]) {\n            j++;\n        } else {\n            k++;\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = extract_index_list;\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)5})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)7}))) == (std::any({(long)1, (long)6})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)6, (long)5, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)5})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)6, (long)6, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any()));\n}\n",
      "timestamp": 1665517342,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpex2a5qkg.cpp:2:\n/tmp/tmpex2a5qkg.cpp: In function \u2018int main()\u2019:\n/tmp/tmpex2a5qkg.cpp:27:311: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   27 |     assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n      |                                                                                                                                                                                                                                                                                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpex2a5qkg.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /t",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\nstd::any extract_index_list(std::vector<long> l1, std::vector<long> l2, std::vector<long> l3) {\n    std::vector<long> result;\n    for(int i=0; i<l1.size(); i++) {\n        if(l1[i] == l2[i] && l2[i] == l3[i]) {\n            result.push_back(l1[i]);\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = extract_index_list;\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)5})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)7}))) == (std::any({(long)1, (long)6})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)6, (long)5, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)5})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)6, (long)6, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any()));\n}\n",
      "timestamp": 1666123165,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmphvren31t.cpp:2:\n/tmp/tmphvren31t.cpp: In function \u2018int main()\u2019:\n/tmp/tmphvren31t.cpp:15:311: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n      |                                                                                                                                                                                                                                                                                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmphvren31t.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /t",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\nstd::any extract_index_list(std::vector<long> l1, std::vector<long> l2, std::vector<long> l3) {\n    std::vector<long> result;\n    for (int i = 0; i < l1.size(); i++) {\n        if (l1[i] == l2[i] && l2[i] == l3[i]) {\n            result.push_back(l1[i]);\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = extract_index_list;\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)5})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)7}))) == (std::any({(long)1, (long)6})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)6, (long)5, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)5})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)6, (long)6, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any()));\n}\n",
      "timestamp": 1665517341,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/tmp/tmpv_xccequ.cpp: In function \u2018int main()\u2019:\n/tmp/tmpv_xccequ.cpp:15:311: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n      |                                                                                                                                                                                                                                                                                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /t",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\nstd::any extract_index_list(std::vector<long> l1, std::vector<long> l2, std::vector<long> l3) {\n    std::vector<long> result;\n    for (int i = 0; i < l1.size(); i++) {\n        if (l1[i] == l2[i] && l2[i] == l3[i]) {\n            result.push_back(l1[i]);\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = extract_index_list;\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)5})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)7}))) == (std::any({(long)1, (long)6})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)6, (long)5, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)5})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)6, (long)6, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any()));\n}\n",
      "timestamp": 1665517341,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/tmp/tmpv_xccequ.cpp: In function \u2018int main()\u2019:\n/tmp/tmpv_xccequ.cpp:15:311: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n      |                                                                                                                                                                                                                                                                                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /t",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\nstd::any extract_index_list(std::vector<long> l1, std::vector<long> l2, std::vector<long> l3) {\n    std::vector<long> common_elements;\n    for (int i = 0; i < l1.size(); i++) {\n        if (l1[i] == l2[i] && l2[i] == l3[i]) {\n            common_elements.push_back(l1[i]);\n        }\n    }\n    return common_elements;\n}\nint main() {\n    auto candidate = extract_index_list;\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)5})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)7}))) == (std::any({(long)1, (long)6})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)6, (long)5, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)5})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)6, (long)6, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any()));\n}\n",
      "timestamp": 1665517341,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpawj13wad.cpp:2:\n/tmp/tmpawj13wad.cpp: In function \u2018int main()\u2019:\n/tmp/tmpawj13wad.cpp:15:311: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n      |                                                                                                                                                                                                                                                                                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpawj13wad.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /t",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\nstd::any extract_index_list(std::vector<long> l1, std::vector<long> l2, std::vector<long> l3) {\n    std::vector<long> result;\n    for (int i = 0; i < l1.size(); i++) {\n        if (l1[i] == l2[i] && l2[i] == l3[i]) {\n            result.push_back(l1[i]);\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = extract_index_list;\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)5})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)7}))) == (std::any({(long)1, (long)6})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)6, (long)5, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)5})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)6, (long)6, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any()));\n}\n",
      "timestamp": 1665517341,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/tmp/tmpv_xccequ.cpp: In function \u2018int main()\u2019:\n/tmp/tmpv_xccequ.cpp:15:311: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n      |                                                                                                                                                                                                                                                                                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /t",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\nstd::any extract_index_list(std::vector<long> l1, std::vector<long> l2, std::vector<long> l3) {\n    std::vector<long> result;\n    for (int i = 0; i < l1.size(); i++) {\n        if (l1[i] == l2[i] && l2[i] == l3[i]) {\n            result.push_back(l1[i]);\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = extract_index_list;\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)5})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)7}))) == (std::any({(long)1, (long)6})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)6, (long)5, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)5})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)6, (long)6, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any()));\n}\n",
      "timestamp": 1665517341,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/tmp/tmpv_xccequ.cpp: In function \u2018int main()\u2019:\n/tmp/tmpv_xccequ.cpp:15:311: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n      |                                                                                                                                                                                                                                                                                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /t",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\nstd::any extract_index_list(std::vector<long> l1, std::vector<long> l2, std::vector<long> l3) {\n    std::vector<long> result;\n    for (int i = 0; i < l1.size(); i++) {\n        if (l1[i] == l2[i] && l2[i] == l3[i]) {\n            result.push_back(l1[i]);\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = extract_index_list;\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)5})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)7}))) == (std::any({(long)1, (long)6})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)6, (long)5, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)5})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)6, (long)6, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any()));\n}\n",
      "timestamp": 1665517341,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/tmp/tmpv_xccequ.cpp: In function \u2018int main()\u2019:\n/tmp/tmpv_xccequ.cpp:15:311: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n      |                                                                                                                                                                                                                                                                                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /t",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\nstd::any extract_index_list(std::vector<long> l1, std::vector<long> l2, std::vector<long> l3) {\n    std::vector<long> result;\n    for (int i = 0; i < l1.size(); i++) {\n        if (l1[i] == l2[i] && l2[i] == l3[i]) {\n            result.push_back(l1[i]);\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = extract_index_list;\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)5})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)7}))) == (std::any({(long)1, (long)6})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)6, (long)5, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)5})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)6, (long)6, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any()));\n}\n",
      "timestamp": 1665517341,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/tmp/tmpv_xccequ.cpp: In function \u2018int main()\u2019:\n/tmp/tmpv_xccequ.cpp:15:311: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n      |                                                                                                                                                                                                                                                                                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /t",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\nstd::any extract_index_list(std::vector<long> l1, std::vector<long> l2, std::vector<long> l3) {\n    std::vector<long> result;\n    for(int i = 0; i < l1.size(); i++) {\n        if(l1[i] == l2[i] && l2[i] == l3[i]) {\n            result.push_back(l1[i]);\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = extract_index_list;\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)5})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)7}))) == (std::any({(long)1, (long)6})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)6, (long)5, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)5})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)6, (long)6, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any()));\n}\n",
      "timestamp": 1665517341,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpcnh5dyna.cpp:2:\n/tmp/tmpcnh5dyna.cpp: In function \u2018int main()\u2019:\n/tmp/tmpcnh5dyna.cpp:15:311: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n      |                                                                                                                                                                                                                                                                                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpcnh5dyna.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /t",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\nstd::any extract_index_list(std::vector<long> l1, std::vector<long> l2, std::vector<long> l3) {\n    std::vector<long> result;\n    for (int i = 0; i < l1.size(); i++) {\n        if (l1[i] == l2[i] && l2[i] == l3[i]) {\n            result.push_back(l1[i]);\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = extract_index_list;\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)5})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)7}))) == (std::any({(long)1, (long)6})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)6, (long)5, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)5})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)6, (long)6, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any()));\n}\n",
      "timestamp": 1665517341,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/tmp/tmpv_xccequ.cpp: In function \u2018int main()\u2019:\n/tmp/tmpv_xccequ.cpp:15:311: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n      |                                                                                                                                                                                                                                                                                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /t",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\nstd::any extract_index_list(std::vector<long> l1, std::vector<long> l2, std::vector<long> l3) {\n    std::vector<long> result;\n    for (int i = 0; i < l1.size(); i++) {\n        if (l1[i] == l2[i] && l2[i] == l3[i]) {\n            result.push_back(l1[i]);\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = extract_index_list;\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)5})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)7}))) == (std::any({(long)1, (long)6})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)6, (long)5, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)5})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)6, (long)6, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any()));\n}\n",
      "timestamp": 1665517341,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/tmp/tmpv_xccequ.cpp: In function \u2018int main()\u2019:\n/tmp/tmpv_xccequ.cpp:15:311: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n      |                                                                                                                                                                                                                                                                                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /t",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\nstd::any extract_index_list(std::vector<long> l1, std::vector<long> l2, std::vector<long> l3) {\n    std::vector<long> result;\n    for(int i = 0; i < l1.size(); i++) {\n        if(l1[i] == l2[i] && l2[i] == l3[i]) {\n            result.push_back(l1[i]);\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = extract_index_list;\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)5})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)7}))) == (std::any({(long)1, (long)6})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)6, (long)5, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)5})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)6, (long)6, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any()));\n}\n",
      "timestamp": 1665517341,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpcnh5dyna.cpp:2:\n/tmp/tmpcnh5dyna.cpp: In function \u2018int main()\u2019:\n/tmp/tmpcnh5dyna.cpp:15:311: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n      |                                                                                                                                                                                                                                                                                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpcnh5dyna.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /t",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\nstd::any extract_index_list(std::vector<long> l1, std::vector<long> l2, std::vector<long> l3) {\n    std::vector<long> result;\n    for(int i = 0; i < l1.size(); i++) {\n        if(l1[i] == l2[i] && l2[i] == l3[i]) {\n            result.push_back(l1[i]);\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = extract_index_list;\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)5})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)7}))) == (std::any({(long)1, (long)6})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)6, (long)5, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)5})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)6, (long)6, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any()));\n}\n",
      "timestamp": 1665517341,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpcnh5dyna.cpp:2:\n/tmp/tmpcnh5dyna.cpp: In function \u2018int main()\u2019:\n/tmp/tmpcnh5dyna.cpp:15:311: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n      |                                                                                                                                                                                                                                                                                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpcnh5dyna.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /t",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\nstd::any extract_index_list(std::vector<long> l1, std::vector<long> l2, std::vector<long> l3) {\n    std::vector<long> result;\n    for (int i = 0; i < l1.size(); i++) {\n        if (l1[i] == l2[i] && l2[i] == l3[i]) {\n            result.push_back(l1[i]);\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = extract_index_list;\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)5})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)7}))) == (std::any({(long)1, (long)6})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)6, (long)5, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)5})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)6, (long)6, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any()));\n}\n",
      "timestamp": 1665517341,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/tmp/tmpv_xccequ.cpp: In function \u2018int main()\u2019:\n/tmp/tmpv_xccequ.cpp:15:311: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n      |                                                                                                                                                                                                                                                                                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /t",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\nstd::any extract_index_list(std::vector<long> l1, std::vector<long> l2, std::vector<long> l3) {\n    std::vector<long> result;\n    std::vector<long>::iterator it1 = l1.begin();\n    std::vector<long>::iterator it2 = l2.begin();\n    std::vector<long>::iterator it3 = l3.begin();\n    while (it1 != l1.end() && it2 != l2.end() && it3 != l3.end()) {\n        if (*it1 == *it2 && *it2 == *it3) {\n            result.push_back(*it1);\n            it1++;\n            it2++;\n            it3++;\n        } else if (*it1 < *it2) {\n            it1++;\n        } else if (*it2 < *it3) {\n            it2++;\n        } else {\n            it3++;\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = extract_index_list;\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)5})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)7}))) == (std::any({(long)1, (long)6})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)6, (long)5, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)5})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)6, (long)6, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any()));\n}\n",
      "timestamp": 1665517341,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpl0vzx56j.cpp:2:\n/tmp/tmpl0vzx56j.cpp: In function \u2018int main()\u2019:\n/tmp/tmpl0vzx56j.cpp:27:311: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   27 |     assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n      |                                                                                                                                                                                                                                                                                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpl0vzx56j.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /t",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\nstd::any extract_index_list(std::vector<long> l1, std::vector<long> l2, std::vector<long> l3) {\n    std::vector<long> result;\n    for (int i = 0; i < l1.size(); i++) {\n        if (l1[i] == l2[i] && l2[i] == l3[i]) {\n            result.push_back(l1[i]);\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = extract_index_list;\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)5})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)7}))) == (std::any({(long)1, (long)6})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)6, (long)5, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)5})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)6, (long)6, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any()));\n}\n",
      "timestamp": 1665517341,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/tmp/tmpv_xccequ.cpp: In function \u2018int main()\u2019:\n/tmp/tmpv_xccequ.cpp:15:311: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n      |                                                                                                                                                                                                                                                                                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /t",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\nstd::any extract_index_list(std::vector<long> l1, std::vector<long> l2, std::vector<long> l3) {\n    std::vector<long> result;\n    for(int i = 0; i < l1.size(); i++) {\n        if(l1[i] == l2[i] && l2[i] == l3[i]) {\n            result.push_back(l1[i]);\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = extract_index_list;\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)5})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)7}))) == (std::any({(long)1, (long)6})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)6, (long)5, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)5})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)6, (long)6, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any()));\n}\n",
      "timestamp": 1665517341,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpcnh5dyna.cpp:2:\n/tmp/tmpcnh5dyna.cpp: In function \u2018int main()\u2019:\n/tmp/tmpcnh5dyna.cpp:15:311: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n      |                                                                                                                                                                                                                                                                                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpcnh5dyna.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /t",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\nstd::any extract_index_list(std::vector<long> l1, std::vector<long> l2, std::vector<long> l3) {\n    std::vector<long> result;\n    for(int i = 0; i < l1.size(); i++) {\n        if(l1[i] == l2[i] && l2[i] == l3[i]) {\n            result.push_back(l1[i]);\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = extract_index_list;\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)5})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)7}))) == (std::any({(long)1, (long)6})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)6, (long)5, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)5})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)6, (long)6, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any()));\n}\n",
      "timestamp": 1665517341,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpcnh5dyna.cpp:2:\n/tmp/tmpcnh5dyna.cpp: In function \u2018int main()\u2019:\n/tmp/tmpcnh5dyna.cpp:15:311: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n      |                                                                                                                                                                                                                                                                                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpcnh5dyna.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /t",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\nstd::any extract_index_list(std::vector<long> l1, std::vector<long> l2, std::vector<long> l3) {\n    std::vector<long> result;\n    for (int i = 0; i < l1.size(); i++) {\n        if (l1[i] == l2[i] && l2[i] == l3[i]) {\n            result.push_back(l1[i]);\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = extract_index_list;\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)5})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)7}))) == (std::any({(long)1, (long)6})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)6, (long)5, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)5})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)6, (long)6, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any()));\n}\n",
      "timestamp": 1665517341,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/tmp/tmpv_xccequ.cpp: In function \u2018int main()\u2019:\n/tmp/tmpv_xccequ.cpp:15:311: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n      |                                                                                                                                                                                                                                                                                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /t",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\nstd::any extract_index_list(std::vector<long> l1, std::vector<long> l2, std::vector<long> l3) {\n    std::vector<long> result;\n    for (int i = 0; i < l1.size(); i++) {\n        if (l1[i] == l2[i] && l2[i] == l3[i]) {\n            result.push_back(l1[i]);\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = extract_index_list;\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)5})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)7}))) == (std::any({(long)1, (long)6})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)6, (long)5, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)5})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)6, (long)6, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any()));\n}\n",
      "timestamp": 1665517341,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/tmp/tmpv_xccequ.cpp: In function \u2018int main()\u2019:\n/tmp/tmpv_xccequ.cpp:15:311: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n      |                                                                                                                                                                                                                                                                                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /t",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\nstd::any extract_index_list(std::vector<long> l1, std::vector<long> l2, std::vector<long> l3) {\n    std::vector<long> result;\n    for(int i = 0; i < l1.size(); i++) {\n        if(l1[i] == l2[i] && l2[i] == l3[i]) {\n            result.push_back(l1[i]);\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = extract_index_list;\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)5})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)7}))) == (std::any({(long)1, (long)6})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)6, (long)5, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)5})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)6, (long)6, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any()));\n}\n",
      "timestamp": 1665517341,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpcnh5dyna.cpp:2:\n/tmp/tmpcnh5dyna.cpp: In function \u2018int main()\u2019:\n/tmp/tmpcnh5dyna.cpp:15:311: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n      |                                                                                                                                                                                                                                                                                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpcnh5dyna.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /t",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\nstd::any extract_index_list(std::vector<long> l1, std::vector<long> l2, std::vector<long> l3) {\n    std::vector<long> result;\n    int i = 0, j = 0, k = 0;\n    while (i < l1.size() && j < l2.size() && k < l3.size()) {\n        if (l1[i] == l2[j] && l2[j] == l3[k]) {\n            result.push_back(l1[i]);\n            i++;\n            j++;\n            k++;\n        } else if (l1[i] < l2[j]) {\n            i++;\n        } else if (l2[j] < l3[k]) {\n            j++;\n        } else {\n            k++;\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = extract_index_list;\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)5})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)7}))) == (std::any({(long)1, (long)6})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)6, (long)5, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)5})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)6, (long)6, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any()));\n}\n",
      "timestamp": 1666123165,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpd4jrk4ga.cpp:2:\n/tmp/tmpd4jrk4ga.cpp: In function \u2018int main()\u2019:\n/tmp/tmpd4jrk4ga.cpp:25:311: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   25 |     assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n      |                                                                                                                                                                                                                                                                                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpd4jrk4ga.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /t",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\nstd::any extract_index_list(std::vector<long> l1, std::vector<long> l2, std::vector<long> l3) {\n    std::vector<long> result;\n    for(int i = 0; i < l1.size(); i++) {\n        if(l1[i] == l2[i] && l2[i] == l3[i]) {\n            result.push_back(l1[i]);\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = extract_index_list;\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)5})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)7}))) == (std::any({(long)1, (long)6})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)6, (long)5, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)5})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)6, (long)6, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any()));\n}\n",
      "timestamp": 1665517341,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpcnh5dyna.cpp:2:\n/tmp/tmpcnh5dyna.cpp: In function \u2018int main()\u2019:\n/tmp/tmpcnh5dyna.cpp:15:311: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n      |                                                                                                                                                                                                                                                                                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpcnh5dyna.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /t",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\nstd::any extract_index_list(std::vector<long> l1, std::vector<long> l2, std::vector<long> l3) {\n    std::vector<long> result;\n    for (int i = 0; i < l1.size(); ++i) {\n        if (l1[i] == l2[i] && l2[i] == l3[i]) {\n            result.push_back(l1[i]);\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = extract_index_list;\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)5})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)7}))) == (std::any({(long)1, (long)6})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)6, (long)5, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)5})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)6, (long)6, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any()));\n}\n",
      "timestamp": 1666123165,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp7vcmsaet.cpp:2:\n/tmp/tmp7vcmsaet.cpp: In function \u2018int main()\u2019:\n/tmp/tmp7vcmsaet.cpp:15:311: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n      |                                                                                                                                                                                                                                                                                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmp7vcmsaet.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /t",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\nstd::any extract_index_list(std::vector<long> l1, std::vector<long> l2, std::vector<long> l3) {\n    std::vector<long> result;\n    std::unordered_map<long, int> map;\n    for (int i = 0; i < l1.size(); i++) {\n        map[l1[i]] = 1;\n    }\n    for (int i = 0; i < l2.size(); i++) {\n        if (map.find(l2[i]) != map.end()) {\n            map[l2[i]] = 2;\n        }\n    }\n    for (int i = 0; i < l3.size(); i++) {\n        if (map.find(l3[i]) != map.end()) {\n            map[l3[i]] = 3;\n        }\n    }\n    for (auto it = map.begin(); it != map.end(); it++) {\n        if (it->second == 3) {\n            result.push_back(it->first);\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = extract_index_list;\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)5})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)7}))) == (std::any({(long)1, (long)6})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)6, (long)5, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)5})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)6, (long)6, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any()));\n}\n",
      "timestamp": 1666123165,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpqp1apbcn.cpp:2:\n/tmp/tmpqp1apbcn.cpp: In function \u2018int main()\u2019:\n/tmp/tmpqp1apbcn.cpp:29:311: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   29 |     assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n      |                                                                                                                                                                                                                                                                                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpqp1apbcn.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /t",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\nstd::any extract_index_list(std::vector<long> l1, std::vector<long> l2, std::vector<long> l3) {\n    std::vector<long> result;\n    for(int i = 0; i < l1.size(); i++) {\n        if(l1[i] == l2[i] && l2[i] == l3[i]) {\n            result.push_back(l1[i]);\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = extract_index_list;\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)5})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)7}))) == (std::any({(long)1, (long)6})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)6, (long)5, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)5})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)6, (long)6, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any()));\n}\n",
      "timestamp": 1665517341,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpcnh5dyna.cpp:2:\n/tmp/tmpcnh5dyna.cpp: In function \u2018int main()\u2019:\n/tmp/tmpcnh5dyna.cpp:15:311: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n      |                                                                                                                                                                                                                                                                                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpcnh5dyna.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /t",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\nstd::any extract_index_list(std::vector<long> l1, std::vector<long> l2, std::vector<long> l3) {\n    std::vector<long> result;\n    for (int i = 0; i < l1.size(); i++) {\n        if (l1[i] == l2[i] && l2[i] == l3[i]) {\n            result.push_back(l1[i]);\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = extract_index_list;\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)5})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)7}))) == (std::any({(long)1, (long)6})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)6, (long)5, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)5})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)6, (long)6, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any()));\n}\n",
      "timestamp": 1665517341,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/tmp/tmpv_xccequ.cpp: In function \u2018int main()\u2019:\n/tmp/tmpv_xccequ.cpp:15:311: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n      |                                                                                                                                                                                                                                                                                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /t",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\nstd::any extract_index_list(std::vector<long> l1, std::vector<long> l2, std::vector<long> l3) {\n    std::vector<long> result;\n    for (int i = 0; i < l1.size(); i++) {\n        if (l1[i] == l2[i] && l2[i] == l3[i]) {\n            result.push_back(l1[i]);\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = extract_index_list;\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)5})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)7}))) == (std::any({(long)1, (long)6})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)6, (long)5, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)5})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)6, (long)6, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any()));\n}\n",
      "timestamp": 1665517341,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/tmp/tmpv_xccequ.cpp: In function \u2018int main()\u2019:\n/tmp/tmpv_xccequ.cpp:15:311: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n      |                                                                                                                                                                                                                                                                                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /t",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\nstd::any extract_index_list(std::vector<long> l1, std::vector<long> l2, std::vector<long> l3) {\n    std::vector<long> result;\n    for (int i = 0; i < l1.size(); i++) {\n        if (l1[i] == l2[i] && l2[i] == l3[i]) {\n            result.push_back(l1[i]);\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = extract_index_list;\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)5})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)7}))) == (std::any({(long)1, (long)6})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)6, (long)5, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)5})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)6, (long)6, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any()));\n}\n",
      "timestamp": 1665517341,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/tmp/tmpv_xccequ.cpp: In function \u2018int main()\u2019:\n/tmp/tmpv_xccequ.cpp:15:311: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n      |                                                                                                                                                                                                                                                                                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /t",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\nstd::any extract_index_list(std::vector<long> l1, std::vector<long> l2, std::vector<long> l3) {\n    std::vector<long> result;\n    for(int i = 0; i < l1.size(); i++) {\n        if(l1[i] == l2[i] && l2[i] == l3[i]) {\n            result.push_back(l1[i]);\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = extract_index_list;\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)5})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)7}))) == (std::any({(long)1, (long)6})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)6, (long)5, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)5})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)6, (long)6, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any()));\n}\n",
      "timestamp": 1665517341,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpcnh5dyna.cpp:2:\n/tmp/tmpcnh5dyna.cpp: In function \u2018int main()\u2019:\n/tmp/tmpcnh5dyna.cpp:15:311: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n      |                                                                                                                                                                                                                                                                                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpcnh5dyna.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /t",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\nstd::any extract_index_list(std::vector<long> l1, std::vector<long> l2, std::vector<long> l3) {\n    std::vector<long> result;\n    for (int i = 0; i < l1.size(); i++) {\n        if (l1[i] == l2[i] && l2[i] == l3[i]) {\n            result.push_back(l1[i]);\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = extract_index_list;\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)5})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)7}))) == (std::any({(long)1, (long)6})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)6, (long)5, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)5})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)6, (long)6, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any()));\n}\n",
      "timestamp": 1665517341,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/tmp/tmpv_xccequ.cpp: In function \u2018int main()\u2019:\n/tmp/tmpv_xccequ.cpp:15:311: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n      |                                                                                                                                                                                                                                                                                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /t",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\nstd::any extract_index_list(std::vector<long> l1, std::vector<long> l2, std::vector<long> l3) {\n    std::vector<long> result;\n    for (int i = 0; i < l1.size(); i++) {\n        if (l1[i] == l2[i] && l2[i] == l3[i]) {\n            result.push_back(l1[i]);\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = extract_index_list;\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)5})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)7}))) == (std::any({(long)1, (long)6})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)6, (long)5, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)5})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)6, (long)6, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any()));\n}\n",
      "timestamp": 1665517341,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/tmp/tmpv_xccequ.cpp: In function \u2018int main()\u2019:\n/tmp/tmpv_xccequ.cpp:15:311: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n      |                                                                                                                                                                                                                                                                                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /t",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\nstd::any extract_index_list(std::vector<long> l1, std::vector<long> l2, std::vector<long> l3) {\n    std::vector<long> res;\n    for (int i = 0; i < l1.size(); i++) {\n        if (l1[i] == l2[i] && l2[i] == l3[i]) {\n            res.push_back(l1[i]);\n        }\n    }\n    return res;\n}\nint main() {\n    auto candidate = extract_index_list;\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)5})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)7}))) == (std::any({(long)1, (long)6})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)6, (long)5, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)5})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)6, (long)6, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any()));\n}\n",
      "timestamp": 1666123165,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpsyme8gij.cpp:2:\n/tmp/tmpsyme8gij.cpp: In function \u2018int main()\u2019:\n/tmp/tmpsyme8gij.cpp:15:311: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n      |                                                                                                                                                                                                                                                                                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpsyme8gij.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /t",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\nstd::any extract_index_list(std::vector<long> l1, std::vector<long> l2, std::vector<long> l3) {\n    std::vector<long> result;\n    for (int i = 0; i < l1.size(); i++) {\n        if (l1[i] == l2[i] && l2[i] == l3[i]) {\n            result.push_back(l1[i]);\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = extract_index_list;\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)5})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)7}))) == (std::any({(long)1, (long)6})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)6, (long)5, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)5})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)6, (long)6, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any()));\n}\n",
      "timestamp": 1665517341,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/tmp/tmpv_xccequ.cpp: In function \u2018int main()\u2019:\n/tmp/tmpv_xccequ.cpp:15:311: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n      |                                                                                                                                                                                                                                                                                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /t",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\nstd::any extract_index_list(std::vector<long> l1, std::vector<long> l2, std::vector<long> l3) {\n    std::vector<long> result;\n    for (int i = 0; i < l1.size(); i++) {\n        if (l1[i] == l2[i] && l2[i] == l3[i]) {\n            result.push_back(l1[i]);\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = extract_index_list;\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)5})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)7}))) == (std::any({(long)1, (long)6})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)6, (long)5, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)5})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)6, (long)6, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any()));\n}\n",
      "timestamp": 1665517341,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/tmp/tmpv_xccequ.cpp: In function \u2018int main()\u2019:\n/tmp/tmpv_xccequ.cpp:15:311: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n      |                                                                                                                                                                                                                                                                                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /t",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\nstd::any extract_index_list(std::vector<long> l1, std::vector<long> l2, std::vector<long> l3) {\n    std::vector<long> result;\n    std::vector<long>::iterator it1 = l1.begin();\n    std::vector<long>::iterator it2 = l2.begin();\n    std::vector<long>::iterator it3 = l3.begin();\n    while (it1 != l1.end() && it2 != l2.end() && it3 != l3.end()) {\n        if (*it1 == *it2 && *it2 == *it3) {\n            result.push_back(*it1);\n            it1++;\n            it2++;\n            it3++;\n        } else if (*it1 < *it2) {\n            it1++;\n        } else if (*it2 < *it3) {\n            it2++;\n        } else {\n            it3++;\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = extract_index_list;\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)5})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)7}))) == (std::any({(long)1, (long)6})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)6, (long)5, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)5})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)6, (long)6, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any()));\n}\n",
      "timestamp": 1665517341,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpl0vzx56j.cpp:2:\n/tmp/tmpl0vzx56j.cpp: In function \u2018int main()\u2019:\n/tmp/tmpl0vzx56j.cpp:27:311: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   27 |     assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n      |                                                                                                                                                                                                                                                                                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpl0vzx56j.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /t",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\nstd::any extract_index_list(std::vector<long> l1, std::vector<long> l2, std::vector<long> l3) {\n    std::vector<long> result;\n    for (int i = 0; i < l1.size(); i++) {\n        if (l1[i] == l2[i] && l2[i] == l3[i]) {\n            result.push_back(l1[i]);\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = extract_index_list;\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)5})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)7}))) == (std::any({(long)1, (long)6})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)6, (long)5, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)5})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)6, (long)6, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any()));\n}\n",
      "timestamp": 1665517341,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/tmp/tmpv_xccequ.cpp: In function \u2018int main()\u2019:\n/tmp/tmpv_xccequ.cpp:15:311: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n      |                                                                                                                                                                                                                                                                                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /t",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\nstd::any extract_index_list(std::vector<long> l1, std::vector<long> l2, std::vector<long> l3) {\n    std::vector<long> result;\n    for (int i = 0; i < l1.size(); i++) {\n        if (l1[i] == l2[i] && l2[i] == l3[i]) {\n            result.push_back(l1[i]);\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = extract_index_list;\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)5})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)7}))) == (std::any({(long)1, (long)6})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)6, (long)5, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)5})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)6, (long)6, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any()));\n}\n",
      "timestamp": 1665517341,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/tmp/tmpv_xccequ.cpp: In function \u2018int main()\u2019:\n/tmp/tmpv_xccequ.cpp:15:311: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n      |                                                                                                                                                                                                                                                                                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /t",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\nstd::any extract_index_list(std::vector<long> l1, std::vector<long> l2, std::vector<long> l3) {\n    std::vector<long> result;\n    int i = 0;\n    int j = 0;\n    int k = 0;\n    while (i < l1.size() && j < l2.size() && k < l3.size()) {\n        if (l1[i] == l2[j] && l2[j] == l3[k]) {\n            result.push_back(l1[i]);\n            i++;\n            j++;\n            k++;\n        } else if (l1[i] < l2[j]) {\n            i++;\n        } else if (l2[j] < l3[k]) {\n            j++;\n        } else {\n            k++;\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = extract_index_list;\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)5})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)7}))) == (std::any({(long)1, (long)6})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)6, (long)5, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)5})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)6, (long)6, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any()));\n}\n",
      "timestamp": 1665517342,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpex2a5qkg.cpp:2:\n/tmp/tmpex2a5qkg.cpp: In function \u2018int main()\u2019:\n/tmp/tmpex2a5qkg.cpp:27:311: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   27 |     assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n      |                                                                                                                                                                                                                                                                                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpex2a5qkg.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /t",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\nstd::any extract_index_list(std::vector<long> l1, std::vector<long> l2, std::vector<long> l3) {\n    std::vector<long> result;\n    for (int i = 0; i < l1.size(); i++) {\n        if (l1[i] == l2[i] && l2[i] == l3[i]) {\n            result.push_back(l1[i]);\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = extract_index_list;\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)5})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)6, (long)7}))) == (std::any({(long)1, (long)6})));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)6, (long)5, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)5})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)6, (long)6, (long)6})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any()));\n}\n",
      "timestamp": 1665517341,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/tmp/tmpv_xccequ.cpp: In function \u2018int main()\u2019:\n/tmp/tmpv_xccequ.cpp:15:311: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)5, (long)6, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7})), (std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4, (long)5, (long)7}))) == (std::any({(long)1, (long)7})));\n      |                                                                                                                                                                                                                                                                                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpv_xccequ.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /t",
      "exit_code": 1,
      "status": "SyntaxError"
    }
  ]
}
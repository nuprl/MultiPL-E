{
  "name": "mbpp_577_last_Digit_Factorial",
  "language": "cpp",
  "prompt": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the last digit in factorial of a given number.\nlong last_Digit_Factorial(long n) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_577_last_Digit_Factorial.py",
  "prompt_terminology": "verbatim",
  "tests": "}\nint main() {\n    auto candidate = last_Digit_Factorial;\n    assert(candidate((4)) == (4));\n    assert(candidate((21)) == (0));\n    assert(candidate((30)) == (0));\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "results": [
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the last digit in factorial of a given number.\nlong last_Digit_Factorial(long n) {\n    // Write your code here\n    long fact = 1;\n    for(int i=1;i<=n;i++){\n        fact = fact*i;\n    }\n    return fact%10;\n}\nint main() {\n    auto candidate = last_Digit_Factorial;\n    assert(candidate((4)) == (4));\n    assert(candidate((21)) == (0));\n    assert(candidate((30)) == (0));\n}\n",
      "timestamp": 1665509712,
      "stdout": "",
      "stderr": "tmpn_cr0ikt: /tmp/tmpn_cr0ikt.cpp:15: int main(): Assertion `candidate((21)) == (0)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the last digit in factorial of a given number.\nlong last_Digit_Factorial(long n) {\n    // Write your code here\n    if(n==0)\n        return 1;\n    else if(n==1)\n        return 1;\n    else if(n==2)\n        return 2;\n    else if(n==3)\n        return 6;\n    else if(n==4)\n        return 4;\n    else if(n==5)\n        return 2;\n    else if(n==6)\n        return 2;\n    else if(n==7)\n        return 4;\n    else if(n==8)\n        return 2;\n    else if(n==9)\n        return 8;\n    else if(n==10)\n        return 8;\n    else if(n==11)\n        return 8;\n    else if(n==12)\n        return 6;\n    else if(n==13)\n        return 8;\n    else if(n==14)\n        return 8;\n    else if(n==15)\n        return 4;\n    else if(n==16)\n        return 6;\n    else if(n==17)\n        return 2;\n    else if(n==18)\n        return 6;\n    else if(n==19)\n        return 6;\n    else if(n==20)\n        return 2;\n    else if(n==21)\n        return 6;\n    else if(n==22)\n        return 4;\n    else if(n==23)\n        return 2;\n    else if(n==24)\n        return 8;\n    else if(n==25)\n        return 2;\n    else if(n==26)\n        return 8;\n    else if(n==27)\n        return 8;\n    else if(n==28)\n        return 8;\n    else if(n==29)\n        return 6;\n    else if(n==30)\n        return 8;\n    else if(n==31)\n        return 4;\n    else if(n==32)\n        return 6;\n    else if(n==33)\n        return 2;\n    else if(n==34)\n        return 6;\n    else if(n==35)\n        return 6;\n   \n}\nint main() {\n    auto candidate = last_Digit_Factorial;\n    assert(candidate((4)) == (4));\n    assert(candidate((21)) == (0));\n    assert(candidate((30)) == (0));\n}\n",
      "timestamp": 1665509711,
      "stdout": "",
      "stderr": "tmpkxx5_rni: /tmp/tmpkxx5_rni.cpp:83: int main(): Assertion `candidate((21)) == (0)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the last digit in factorial of a given number.\nlong last_Digit_Factorial(long n) {\n    // Write your code here\n    long fact=1;\n    for(int i=1;i<=n;i++){\n        fact=(fact*i)%10;\n    }\n    return fact;\n}\nint main() {\n    auto candidate = last_Digit_Factorial;\n    assert(candidate((4)) == (4));\n    assert(candidate((21)) == (0));\n    assert(candidate((30)) == (0));\n}\n",
      "timestamp": 1665509712,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the last digit in factorial of a given number.\nlong last_Digit_Factorial(long n) {\n    long fact = 1;\n    for (int i = 1; i <= n; i++) {\n        fact = (fact * i) % 10;\n    }\n    return fact;\n}\nint main() {\n    auto candidate = last_Digit_Factorial;\n    assert(candidate((4)) == (4));\n    assert(candidate((21)) == (0));\n    assert(candidate((30)) == (0));\n}\n",
      "timestamp": 1665509711,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the last digit in factorial of a given number.\nlong last_Digit_Factorial(long n) {\n    if(n==0)\n        return 1;\n    long ans=1;\n    for(long i=1;i<=n;i++)\n        ans=(ans*i)%10;\n    return ans;\n}\nint main() {\n    auto candidate = last_Digit_Factorial;\n    assert(candidate((4)) == (4));\n    assert(candidate((21)) == (0));\n    assert(candidate((30)) == (0));\n}\n",
      "timestamp": 1665509711,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the last digit in factorial of a given number.\nlong last_Digit_Factorial(long n) {\n    long fact = 1;\n    for (int i = 1; i <= n; i++) {\n        fact = (fact * i) % 10;\n    }\n    return fact;\n}\nint main() {\n    auto candidate = last_Digit_Factorial;\n    assert(candidate((4)) == (4));\n    assert(candidate((21)) == (0));\n    assert(candidate((30)) == (0));\n}\n",
      "timestamp": 1665509711,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the last digit in factorial of a given number.\nlong last_Digit_Factorial(long n) {\n    if(n==0)\n        return 1;\n    else if(n==1)\n        return 1;\n    else if(n==2)\n        return 2;\n    else if(n==3)\n        return 6;\n    else if(n==4)\n        return 4;\n    else if(n==5)\n        return 0;\n    else if(n==6)\n        return 0;\n    else if(n==7)\n        return 0;\n    else if(n==8)\n        return 0;\n    else if(n==9)\n        return 0;\n    else if(n==10)\n        return 0;\n    else if(n==11)\n        return 0;\n    else if(n==12)\n        return 0;\n    else if(n==13)\n        return 0;\n    else if(n==14)\n        return 0;\n    else if(n==15)\n        return 0;\n    else if(n==16)\n        return 0;\n    else if(n==17)\n        return 0;\n    else if(n==18)\n        return 0;\n    else if(n==19)\n        return 0;\n    else if(n==20)\n        return 0;\n    else if(n==21)\n        return 0;\n    else if(n==22)\n        return 0;\n    else if(n==23)\n        return 0;\n    else if(n==24)\n        return 0;\n    else if(n==25)\n        return 0;\n    else if(n==26)\n        return 0;\n    else if(n==27)\n        return 0;\n    else if(n==28)\n        return 0;\n    else if(n==29)\n        return 0;\n    else if(n==30)\n        return 0;\n    else if(n==31)\n        return 0;\n    else if(n==32)\n        return 0;\n    else if(n==33)\n        return 0;\n    else if(n==34)\n        return 0;\n    else if(n==35)\n        return 0;\n    else if(n==36)\n}\nint main() {\n    auto candidate = last_Digit_Factorial;\n    assert(candidate((4)) == (4));\n    assert(candidate((21)) == (0));\n    assert(candidate((30)) == (0));\n}\n",
      "timestamp": 1665509711,
      "stdout": "",
      "stderr": "/tmp/tmpdelmxv3z.cpp: In function \u2018long int last_Digit_Factorial(long int)\u2019:\n/tmp/tmpdelmxv3z.cpp:78:1: error: expected primary-expression before \u2018}\u2019 token\n   78 | }\n      | ^\n/tmp/tmpdelmxv3z.cpp:78:1: warning: control reaches end of non-void function [-Wreturn-type]\n   78 | }\n      | ^\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the last digit in factorial of a given number.\nlong last_Digit_Factorial(long n) {\n    // Write your code here\n    long fact=1;\n    for(int i=1;i<=n;i++)\n    {\n        fact=(fact*i)%10;\n    }\n    return fact;\n}\nint main() {\n    auto candidate = last_Digit_Factorial;\n    assert(candidate((4)) == (4));\n    assert(candidate((21)) == (0));\n    assert(candidate((30)) == (0));\n}\n",
      "timestamp": 1665509711,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the last digit in factorial of a given number.\nlong last_Digit_Factorial(long n) {\n    if (n == 0) {\n        return 1;\n    }\n    long last_digit = n % 10;\n    long last_digit_factorial = 1;\n    for (long i = 1; i <= last_digit; i++) {\n        last_digit_factorial = last_digit_factorial * i;\n    }\n    return last_digit_factorial % 10;\n}\nint main() {\n    auto candidate = last_Digit_Factorial;\n    assert(candidate((4)) == (4));\n    assert(candidate((21)) == (0));\n    assert(candidate((30)) == (0));\n}\n",
      "timestamp": 1665509711,
      "stdout": "",
      "stderr": "tmp168c33nm: /tmp/tmp168c33nm.cpp:18: int main(): Assertion `candidate((21)) == (0)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the last digit in factorial of a given number.\nlong last_Digit_Factorial(long n) {\n    if (n < 0)\n        return -1;\n    if (n == 0)\n        return 1;\n    long res = 1;\n    for (long i = 2; i <= n; i++)\n        res = (res * i) % 10;\n    return res;\n}\nint main() {\n    auto candidate = last_Digit_Factorial;\n    assert(candidate((4)) == (4));\n    assert(candidate((21)) == (0));\n    assert(candidate((30)) == (0));\n}\n",
      "timestamp": 1665509711,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the last digit in factorial of a given number.\nlong last_Digit_Factorial(long n) {\n    // Write your code here\n    long fact = 1;\n    for(long i = 1; i <= n; i++)\n    {\n        fact = (fact * i) % 10;\n    }\n    return fact;\n}\nint main() {\n    auto candidate = last_Digit_Factorial;\n    assert(candidate((4)) == (4));\n    assert(candidate((21)) == (0));\n    assert(candidate((30)) == (0));\n}\n",
      "timestamp": 1665509711,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the last digit in factorial of a given number.\nlong last_Digit_Factorial(long n) {\n    // Write your code here\n    long fact=1;\n    for(int i=1;i<=n;i++)\n    {\n        fact=fact*i;\n    }\n    return fact%10;\n}\nint main() {\n    auto candidate = last_Digit_Factorial;\n    assert(candidate((4)) == (4));\n    assert(candidate((21)) == (0));\n    assert(candidate((30)) == (0));\n}\n",
      "timestamp": 1665509712,
      "stdout": "",
      "stderr": "tmpqtkup2f7: /tmp/tmpqtkup2f7.cpp:16: int main(): Assertion `candidate((21)) == (0)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the last digit in factorial of a given number.\nlong last_Digit_Factorial(long n) {\n    // Write your code here\n    long fact = 1;\n    for(long i = 1; i <= n; i++){\n        fact = (fact * i) % 10;\n    }\n    return fact;\n}\nint main() {\n    auto candidate = last_Digit_Factorial;\n    assert(candidate((4)) == (4));\n    assert(candidate((21)) == (0));\n    assert(candidate((30)) == (0));\n}\n",
      "timestamp": 1665509711,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the last digit in factorial of a given number.\nlong last_Digit_Factorial(long n) {\n    if (n < 0)\n        return -1;\n    if (n == 0)\n        return 1;\n    long res = 1;\n    for (long i = 2; i <= n; i++)\n        res = (res * i) % 10;\n    return res;\n}\nint main() {\n    auto candidate = last_Digit_Factorial;\n    assert(candidate((4)) == (4));\n    assert(candidate((21)) == (0));\n    assert(candidate((30)) == (0));\n}\n",
      "timestamp": 1665509711,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the last digit in factorial of a given number.\nlong last_Digit_Factorial(long n) {\n    if (n == 0) {\n        return 1;\n    }\n    long fact = 1;\n    for (int i = 1; i <= n; i++) {\n        fact = fact * i;\n    }\n    return fact % 10;\n}\nint main() {\n    auto candidate = last_Digit_Factorial;\n    assert(candidate((4)) == (4));\n    assert(candidate((21)) == (0));\n    assert(candidate((30)) == (0));\n}\n",
      "timestamp": 1665509711,
      "stdout": "",
      "stderr": "tmptbgvxnyc: /tmp/tmptbgvxnyc.cpp:17: int main(): Assertion `candidate((21)) == (0)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the last digit in factorial of a given number.\nlong last_Digit_Factorial(long n) {\n    // Write your code here\n    if(n==0)\n        return 1;\n    else if(n==1)\n        return 1;\n    else if(n==2)\n        return 2;\n    else if(n==3)\n        return 6;\n    else if(n==4)\n        return 4;\n    else if(n==5)\n        return 2;\n    else if(n==6)\n        return 2;\n    else if(n==7)\n        return 4;\n    else if(n==8)\n        return 2;\n    else if(n==9)\n        return 8;\n    else if(n==10)\n        return 8;\n    else if(n==11)\n        return 2;\n    else if(n==12)\n        return 6;\n    else if(n==13)\n        return 8;\n    else if(n==14)\n        return 8;\n    else if(n==15)\n        return 6;\n    else if(n==16)\n        return 4;\n    else if(n==17)\n        return 2;\n    else if(n==18)\n        return 8;\n    else if(n==19)\n        return 8;\n    else if(n==20)\n        return 6;\n    else if(n==21)\n        return 4;\n    else if(n==22)\n        return 2;\n    else if(n==23)\n        return 6;\n    else if(n==24)\n        return 2;\n    else if(n==25)\n        return 8;\n    else if(n==26)\n        return 4;\n    else if(n==27)\n        return 4;\n    else if(n==28)\n        return 8;\n    else if(n==29)\n        return 2;\n    else if(n==30)\n        return 8;\n    else if(n==31)\n        return 6;\n    else if(n==32)\n        return 8;\n    else if(n==33)\n        return 4;\n    else if(n==34)\n        return 6;\n    else if(n==35)\n        return 2;\n   \n}\nint main() {\n    auto candidate = last_Digit_Factorial;\n    assert(candidate((4)) == (4));\n    assert(candidate((21)) == (0));\n    assert(candidate((30)) == (0));\n}\n",
      "timestamp": 1665509711,
      "stdout": "",
      "stderr": "tmpl646fpiy: /tmp/tmpl646fpiy.cpp:83: int main(): Assertion `candidate((21)) == (0)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the last digit in factorial of a given number.\nlong last_Digit_Factorial(long n) {\n    long fact = 1;\n    for (int i = 1; i <= n; i++) {\n        fact = (fact * i) % 10;\n    }\n    return fact;\n}\nint main() {\n    auto candidate = last_Digit_Factorial;\n    assert(candidate((4)) == (4));\n    assert(candidate((21)) == (0));\n    assert(candidate((30)) == (0));\n}\n",
      "timestamp": 1665509711,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the last digit in factorial of a given number.\nlong last_Digit_Factorial(long n) {\n    // Write your code here\n    if(n==0)\n        return 1;\n    else if(n==1)\n        return 1;\n    else if(n==2)\n        return 2;\n    else if(n==3)\n        return 6;\n    else if(n==4)\n        return 4;\n    else if(n==5)\n        return 2;\n    else if(n==6)\n        return 2;\n    else if(n==7)\n        return 4;\n    else if(n==8)\n        return 2;\n    else if(n==9)\n        return 8;\n    else if(n==10)\n        return 8;\n    else if(n==11)\n        return 8;\n    else if(n==12)\n        return 6;\n    else if(n==13)\n        return 8;\n    else if(n==14)\n        return 8;\n    else if(n==15)\n        return 2;\n    else if(n==16)\n        return 6;\n    else if(n==17)\n        return 2;\n    else if(n==18)\n        return 4;\n    else if(n==19)\n        return 2;\n    else if(n==20)\n        return 2;\n    else if(n==21)\n        return 2;\n    else if(n==22)\n        return 8;\n    else if(n==23)\n        return 6;\n    else if(n==24)\n        return 4;\n    else if(n==25)\n        return 6;\n    else if(n==26)\n        return 2;\n    else if(n==27)\n        return 6;\n    else if(n==28)\n        return 8;\n    else if(n==29)\n        return 8;\n    else if(n==30)\n        return 8;\n    else if(n==31)\n        return 6;\n    else if(n==32)\n        return 8;\n    else if(n==33)\n        return 4;\n    else if(n==34)\n        return 2;\n    else if(n==35)\n        return 2;\n   \n}\nint main() {\n    auto candidate = last_Digit_Factorial;\n    assert(candidate((4)) == (4));\n    assert(candidate((21)) == (0));\n    assert(candidate((30)) == (0));\n}\n",
      "timestamp": 1665509711,
      "stdout": "",
      "stderr": "tmpu2e4jxbz: /tmp/tmpu2e4jxbz.cpp:83: int main(): Assertion `candidate((21)) == (0)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the last digit in factorial of a given number.\nlong last_Digit_Factorial(long n) {\n    long fact = 1;\n    for (long i = 1; i <= n; i++) {\n        fact = fact * i;\n    }\n    return fact % 10;\n}\nint main() {\n    auto candidate = last_Digit_Factorial;\n    assert(candidate((4)) == (4));\n    assert(candidate((21)) == (0));\n    assert(candidate((30)) == (0));\n}\n",
      "timestamp": 1665509711,
      "stdout": "",
      "stderr": "tmpa9mo73v1: /tmp/tmpa9mo73v1.cpp:14: int main(): Assertion `candidate((21)) == (0)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the last digit in factorial of a given number.\nlong last_Digit_Factorial(long n) {\n    if (n < 0)\n        return -1;\n    if (n == 0)\n        return 1;\n    long fact = 1;\n    for (long i = 1; i <= n; i++) {\n        fact = fact * i;\n    }\n    return fact % 10;\n}\nint main() {\n    auto candidate = last_Digit_Factorial;\n    assert(candidate((4)) == (4));\n    assert(candidate((21)) == (0));\n    assert(candidate((30)) == (0));\n}\n",
      "timestamp": 1665509711,
      "stdout": "",
      "stderr": "tmpvk5i1_va: /tmp/tmpvk5i1_va.cpp:18: int main(): Assertion `candidate((21)) == (0)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the last digit in factorial of a given number.\nlong last_Digit_Factorial(long n) {\n    // Write your code here\n    if(n==0)\n        return 1;\n    if(n==1)\n        return 1;\n    long ans=1;\n    for(int i=2;i<=n;i++)\n    {\n        ans*=i;\n        ans%=10;\n    }\n    return ans;\n}\nint main() {\n    auto candidate = last_Digit_Factorial;\n    assert(candidate((4)) == (4));\n    assert(candidate((21)) == (0));\n    assert(candidate((30)) == (0));\n}\n",
      "timestamp": 1666123887,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the last digit in factorial of a given number.\nlong last_Digit_Factorial(long n) {\n    // Write your code here\n    if(n==0)\n        return 1;\n    long fact=1;\n    for(long i=1;i<=n;i++)\n    {\n        fact=fact*i;\n        fact=fact%10;\n    }\n    return fact;\n}\nint main() {\n    auto candidate = last_Digit_Factorial;\n    assert(candidate((4)) == (4));\n    assert(candidate((21)) == (0));\n    assert(candidate((30)) == (0));\n}\n",
      "timestamp": 1666123887,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the last digit in factorial of a given number.\nlong last_Digit_Factorial(long n) {\n    long fact = 1;\n    for (long i = 1; i <= n; i++) {\n        fact = fact * i;\n        fact = fact % 10;\n    }\n    return fact;\n}\nint main() {\n    auto candidate = last_Digit_Factorial;\n    assert(candidate((4)) == (4));\n    assert(candidate((21)) == (0));\n    assert(candidate((30)) == (0));\n}\n",
      "timestamp": 1666123887,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the last digit in factorial of a given number.\nlong last_Digit_Factorial(long n) {\n    // Write your code here\n    if(n==0)\n        return 1;\n    else\n        return (n*last_Digit_Factorial(n-1))%10;\n}\nint main() {\n    auto candidate = last_Digit_Factorial;\n    assert(candidate((4)) == (4));\n    assert(candidate((21)) == (0));\n    assert(candidate((30)) == (0));\n}\n",
      "timestamp": 1666123887,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the last digit in factorial of a given number.\nlong last_Digit_Factorial(long n) {\n    long fact=1;\n    for(long i=1;i<=n;i++){\n        fact=fact*i;\n    }\n    return fact%10;\n}\nint main() {\n    auto candidate = last_Digit_Factorial;\n    assert(candidate((4)) == (4));\n    assert(candidate((21)) == (0));\n    assert(candidate((30)) == (0));\n}\n",
      "timestamp": 1666123887,
      "stdout": "",
      "stderr": "tmpz9jxiv16: /tmp/tmpz9jxiv16.cpp:14: int main(): Assertion `candidate((21)) == (0)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the last digit in factorial of a given number.\nlong last_Digit_Factorial(long n) {\n    // Write your code here\n    if(n==0)\n        return 1;\n    else\n        return (n*last_Digit_Factorial(n-1))%10;\n}\nint main() {\n    auto candidate = last_Digit_Factorial;\n    assert(candidate((4)) == (4));\n    assert(candidate((21)) == (0));\n    assert(candidate((30)) == (0));\n}\n",
      "timestamp": 1666123887,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the last digit in factorial of a given number.\nlong last_Digit_Factorial(long n) {\n    long fact = 1;\n    for (int i = 1; i <= n; i++) {\n        fact = fact * i;\n    }\n    return fact % 10;\n}\nint main() {\n    auto candidate = last_Digit_Factorial;\n    assert(candidate((4)) == (4));\n    assert(candidate((21)) == (0));\n    assert(candidate((30)) == (0));\n}\n",
      "timestamp": 1666123887,
      "stdout": "",
      "stderr": "tmpcv_rj7hd: /tmp/tmpcv_rj7hd.cpp:14: int main(): Assertion `candidate((21)) == (0)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the last digit in factorial of a given number.\nlong last_Digit_Factorial(long n) {\n    if(n==0)\n        return 1;\n    else if(n==1)\n        return 1;\n    else\n        return (n*last_Digit_Factorial(n-1))%10;\n}\nint main() {\n    auto candidate = last_Digit_Factorial;\n    assert(candidate((4)) == (4));\n    assert(candidate((21)) == (0));\n    assert(candidate((30)) == (0));\n}\n",
      "timestamp": 1666123887,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the last digit in factorial of a given number.\nlong last_Digit_Factorial(long n) {\n    long fact = 1;\n    for(long i = 2; i <= n; i++) {\n        fact = (fact * i) % 10;\n    }\n    return fact;\n}\nint main() {\n    auto candidate = last_Digit_Factorial;\n    assert(candidate((4)) == (4));\n    assert(candidate((21)) == (0));\n    assert(candidate((30)) == (0));\n}\n",
      "timestamp": 1666123887,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the last digit in factorial of a given number.\nlong last_Digit_Factorial(long n) {\n    // Write your code here\n    if(n==0)\n        return 1;\n    else if(n==1)\n        return 1;\n    else if(n==2)\n        return 2;\n    else if(n==3)\n        return 6;\n    else if(n==4)\n        return 4;\n    else if(n==5)\n        return 2;\n    else if(n==6)\n        return 2;\n    else if(n==7)\n        return 4;\n    else if(n==8)\n        return 2;\n    else if(n==9)\n        return 8;\n    else if(n==10)\n        return 8;\n    else if(n==11)\n        return 8;\n    else if(n==12)\n        return 6;\n    else if(n==13)\n        return 8;\n    else if(n==14)\n        return 8;\n    else if(n==15)\n        return 2;\n    else if(n==16)\n        return 6;\n    else if(n==17)\n        return 2;\n    else if(n==18)\n        return 4;\n    else if(n==19)\n        return 8;\n    else if(n==20)\n        return 6;\n    else if(n==21)\n        return 4;\n    else if(n==22)\n        return 2;\n    else if(n==23)\n        return 6;\n    else if(n==24)\n        return 2;\n    else if(n==25)\n        return 8;\n    else if(n==26)\n        return 4;\n    else if(n==27)\n        return 4;\n    else if(n==28)\n        return 8;\n    else if(n==29)\n        return 2;\n    else if(n==30)\n        return 8;\n    else if(n==31)\n        return 6;\n    else if(n==32)\n        return 4;\n    else if(n==33)\n        return 6;\n    else if(n==34)\n        return 2;\n    else if(n==35)\n        return 2;\n   \n}\nint main() {\n    auto candidate = last_Digit_Factorial;\n    assert(candidate((4)) == (4));\n    assert(candidate((21)) == (0));\n    assert(candidate((30)) == (0));\n}\n",
      "timestamp": 1666123887,
      "stdout": "",
      "stderr": "tmpuf34e5e8: /tmp/tmpuf34e5e8.cpp:83: int main(): Assertion `candidate((21)) == (0)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the last digit in factorial of a given number.\nlong last_Digit_Factorial(long n) {\n    long fact = 1;\n    for (int i = 1; i <= n; i++) {\n        fact = fact * i;\n    }\n    return fact % 10;\n}\nint main() {\n    auto candidate = last_Digit_Factorial;\n    assert(candidate((4)) == (4));\n    assert(candidate((21)) == (0));\n    assert(candidate((30)) == (0));\n}\n",
      "timestamp": 1666123887,
      "stdout": "",
      "stderr": "tmpcv_rj7hd: /tmp/tmpcv_rj7hd.cpp:14: int main(): Assertion `candidate((21)) == (0)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the last digit in factorial of a given number.\nlong last_Digit_Factorial(long n) {\n    long fact = 1;\n    for(int i = 1; i <= n; i++) {\n        fact = (fact * i) % 10;\n    }\n    return fact;\n}\nint main() {\n    auto candidate = last_Digit_Factorial;\n    assert(candidate((4)) == (4));\n    assert(candidate((21)) == (0));\n    assert(candidate((30)) == (0));\n}\n",
      "timestamp": 1666123887,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the last digit in factorial of a given number.\nlong last_Digit_Factorial(long n) {\n    if(n==0)\n        return 1;\n    else if(n==1)\n        return 1;\n    else if(n==2)\n        return 2;\n    else if(n==3)\n        return 6;\n    else if(n==4)\n        return 4;\n    else if(n==5)\n        return 0;\n    else if(n==6)\n        return 0;\n    else if(n==7)\n        return 0;\n    else if(n==8)\n        return 0;\n    else if(n==9)\n        return 0;\n    else if(n==10)\n        return 0;\n    else if(n==11)\n        return 0;\n    else if(n==12)\n        return 0;\n    else if(n==13)\n        return 0;\n    else if(n==14)\n        return 0;\n    else if(n==15)\n        return 0;\n    else if(n==16)\n        return 0;\n    else if(n==17)\n        return 0;\n    else if(n==18)\n        return 0;\n    else if(n==19)\n        return 0;\n    else if(n==20)\n        return 0;\n    else if(n==21)\n        return 0;\n    else if(n==22)\n        return 0;\n    else if(n==23)\n        return 0;\n    else if(n==24)\n        return 0;\n    else if(n==25)\n        return 0;\n    else if(n==26)\n        return 0;\n    else if(n==27)\n        return 0;\n    else if(n==28)\n        return 0;\n    else if(n==29)\n        return 0;\n    else if(n==30)\n        return 0;\n    else if(n==31)\n        return 0;\n    else if(n==32)\n        return 0;\n    else if(n==33)\n        return 0;\n    else if(n==34)\n        return 0;\n    else if(n==35)\n        return 0;\n    else if(n==36)\n}\nint main() {\n    auto candidate = last_Digit_Factorial;\n    assert(candidate((4)) == (4));\n    assert(candidate((21)) == (0));\n    assert(candidate((30)) == (0));\n}\n",
      "timestamp": 1665509711,
      "stdout": "",
      "stderr": "/tmp/tmpdelmxv3z.cpp: In function \u2018long int last_Digit_Factorial(long int)\u2019:\n/tmp/tmpdelmxv3z.cpp:78:1: error: expected primary-expression before \u2018}\u2019 token\n   78 | }\n      | ^\n/tmp/tmpdelmxv3z.cpp:78:1: warning: control reaches end of non-void function [-Wreturn-type]\n   78 | }\n      | ^\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the last digit in factorial of a given number.\nlong last_Digit_Factorial(long n) {\n    if (n < 0)\n        return -1;\n    if (n == 0)\n        return 1;\n    long res = 1;\n    for (long i = 2; i <= n; i++)\n        res = (res * i) % 10;\n    return res;\n}\nint main() {\n    auto candidate = last_Digit_Factorial;\n    assert(candidate((4)) == (4));\n    assert(candidate((21)) == (0));\n    assert(candidate((30)) == (0));\n}\n",
      "timestamp": 1665509711,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the last digit in factorial of a given number.\nlong last_Digit_Factorial(long n) {\n    long fact = 1;\n    for (int i = 1; i <= n; i++) {\n        fact = fact * i;\n    }\n    return fact % 10;\n}\nint main() {\n    auto candidate = last_Digit_Factorial;\n    assert(candidate((4)) == (4));\n    assert(candidate((21)) == (0));\n    assert(candidate((30)) == (0));\n}\n",
      "timestamp": 1666123887,
      "stdout": "",
      "stderr": "tmpcv_rj7hd: /tmp/tmpcv_rj7hd.cpp:14: int main(): Assertion `candidate((21)) == (0)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the last digit in factorial of a given number.\nlong last_Digit_Factorial(long n) {\n    if(n==0) {\n        return 1;\n    }\n    else {\n        return (n*last_Digit_Factorial(n-1))%10;\n    }\n}\nint main() {\n    auto candidate = last_Digit_Factorial;\n    assert(candidate((4)) == (4));\n    assert(candidate((21)) == (0));\n    assert(candidate((30)) == (0));\n}\n",
      "timestamp": 1666123887,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the last digit in factorial of a given number.\nlong last_Digit_Factorial(long n) {\n    if(n==0)\n        return 1;\n    long fact=1;\n    for(long i=1;i<=n;i++)\n        fact=(fact*i)%10;\n    return fact;\n}\nint main() {\n    auto candidate = last_Digit_Factorial;\n    assert(candidate((4)) == (4));\n    assert(candidate((21)) == (0));\n    assert(candidate((30)) == (0));\n}\n",
      "timestamp": 1666123887,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the last digit in factorial of a given number.\nlong last_Digit_Factorial(long n) {\n    // Write your code here\n    if(n==0)\n        return 1;\n    else if(n==1)\n        return 1;\n    else if(n==2)\n        return 2;\n    else if(n==3)\n        return 6;\n    else if(n==4)\n        return 4;\n    else if(n==5)\n        return 2;\n    else if(n==6)\n        return 2;\n    else if(n==7)\n        return 4;\n    else if(n==8)\n        return 2;\n    else if(n==9)\n        return 8;\n    else if(n==10)\n        return 8;\n    else if(n==11)\n        return 0;\n    else if(n==12)\n        return 0;\n    else if(n==13)\n        return 0;\n    else if(n==14)\n        return 0;\n    else if(n==15)\n        return 0;\n    else if(n==16)\n        return 6;\n    else if(n==17)\n        return 0;\n    else if(n==18)\n        return 0;\n    else if(n==19)\n        return 0;\n    else if(n==20)\n        return 0;\n    else if(n==21)\n        return 0;\n    else if(n==22)\n        return 0;\n    else if(n==23)\n        return 0;\n    else if(n==24)\n        return 0;\n    else if(n==25)\n        return 0;\n    else if(n==26)\n        return 0;\n    else if(n==27)\n        return 0;\n    else if(n==28)\n        return 0;\n    else if(n==29)\n        return 0;\n    else if(n==30)\n        return 0;\n    else if(n==31)\n        return 0;\n    else if(n==32)\n        return 0;\n    else if(n==33)\n        return 0;\n    else if(n==34)\n        return 0;\n    else if(n==35)\n        return 0;\n   \n}\nint main() {\n    auto candidate = last_Digit_Factorial;\n    assert(candidate((4)) == (4));\n    assert(candidate((21)) == (0));\n    assert(candidate((30)) == (0));\n}\n",
      "timestamp": 1666123887,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the last digit in factorial of a given number.\nlong last_Digit_Factorial(long n) {\n    if (n == 0 || n == 1) {\n        return 1;\n    }\n    long last_digit = 1;\n    for (long i = 2; i <= n; i++) {\n        last_digit = (last_digit * i) % 10;\n    }\n    return last_digit;\n}\nint main() {\n    auto candidate = last_Digit_Factorial;\n    assert(candidate((4)) == (4));\n    assert(candidate((21)) == (0));\n    assert(candidate((30)) == (0));\n}\n",
      "timestamp": 1666123887,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the last digit in factorial of a given number.\nlong last_Digit_Factorial(long n) {\n    // Write your code here\n    long fact=1;\n    for(int i=1;i<=n;i++){\n        fact=fact*i;\n    }\n    return fact%10;\n}\nint main() {\n    auto candidate = last_Digit_Factorial;\n    assert(candidate((4)) == (4));\n    assert(candidate((21)) == (0));\n    assert(candidate((30)) == (0));\n}\n",
      "timestamp": 1666123887,
      "stdout": "",
      "stderr": "tmp29a0zq_r: /tmp/tmp29a0zq_r.cpp:15: int main(): Assertion `candidate((21)) == (0)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the last digit in factorial of a given number.\nlong last_Digit_Factorial(long n) {\n    if (n == 0) {\n        return 1;\n    }\n    long last_digit = n % 10;\n    long last_digit_factorial = 1;\n    for (int i = 1; i <= last_digit; i++) {\n        last_digit_factorial = (last_digit_factorial * i) % 10;\n    }\n    return last_digit_factorial;\n}\nint main() {\n    auto candidate = last_Digit_Factorial;\n    assert(candidate((4)) == (4));\n    assert(candidate((21)) == (0));\n    assert(candidate((30)) == (0));\n}\n",
      "timestamp": 1666123887,
      "stdout": "",
      "stderr": "tmp6g3pyfar: /tmp/tmp6g3pyfar.cpp:18: int main(): Assertion `candidate((21)) == (0)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the last digit in factorial of a given number.\nlong last_Digit_Factorial(long n) {\n    // Write your code here\n    if(n==0)\n        return 1;\n    else if(n==1)\n        return 1;\n    else if(n==2)\n        return 2;\n    else if(n==3)\n        return 6;\n    else if(n==4)\n        return 4;\n    else if(n==5)\n        return 2;\n    else if(n==6)\n        return 2;\n    else if(n==7)\n        return 4;\n    else if(n==8)\n        return 2;\n    else if(n==9)\n        return 8;\n    else if(n==10)\n        return 8;\n    else if(n==11)\n        return 8;\n    else if(n==12)\n        return 6;\n    else if(n==13)\n        return 8;\n    else if(n==14)\n        return 8;\n    else if(n==15)\n        return 2;\n    else if(n==16)\n        return 6;\n    else if(n==17)\n        return 2;\n    else if(n==18)\n        return 4;\n    else if(n==19)\n        return 2;\n    else if(n==20)\n        return 2;\n    else if(n==21)\n        return 2;\n    else if(n==22)\n        return 8;\n    else if(n==23)\n        return 6;\n    else if(n==24)\n        return 4;\n    else if(n==25)\n        return 6;\n    else if(n==26)\n        return 2;\n    else if(n==27)\n        return 6;\n    else if(n==28)\n        return 8;\n    else if(n==29)\n        return 8;\n    else if(n==30)\n        return 8;\n    else if(n==31)\n        return 6;\n    else if(n==32)\n        return 8;\n    else if(n==33)\n        return 4;\n    else if(n==34)\n        return 2;\n    else if(n==35)\n        return 2;\n   \n}\nint main() {\n    auto candidate = last_Digit_Factorial;\n    assert(candidate((4)) == (4));\n    assert(candidate((21)) == (0));\n    assert(candidate((30)) == (0));\n}\n",
      "timestamp": 1665509711,
      "stdout": "",
      "stderr": "tmpu2e4jxbz: /tmp/tmpu2e4jxbz.cpp:83: int main(): Assertion `candidate((21)) == (0)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the last digit in factorial of a given number.\nlong last_Digit_Factorial(long n) {\n    // Write your code here\n    long fact=1;\n    for(long i=1;i<=n;i++)\n    {\n        fact=(fact*i)%10;\n    }\n    return fact;\n}\nint main() {\n    auto candidate = last_Digit_Factorial;\n    assert(candidate((4)) == (4));\n    assert(candidate((21)) == (0));\n    assert(candidate((30)) == (0));\n}\n",
      "timestamp": 1666123887,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the last digit in factorial of a given number.\nlong last_Digit_Factorial(long n) {\n    // Write your code here\n    long fact=1;\n    for(long i=1;i<=n;i++)\n    {\n        fact=fact*i;\n    }\n    long last_digit=fact%10;\n    return last_digit;\n}\nint main() {\n    auto candidate = last_Digit_Factorial;\n    assert(candidate((4)) == (4));\n    assert(candidate((21)) == (0));\n    assert(candidate((30)) == (0));\n}\n",
      "timestamp": 1666123887,
      "stdout": "",
      "stderr": "tmps_8vgsog: /tmp/tmps_8vgsog.cpp:17: int main(): Assertion `candidate((21)) == (0)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the last digit in factorial of a given number.\nlong last_Digit_Factorial(long n) {\n    if(n == 0) {\n        return 1;\n    }\n    long last_digit = 1;\n    for(long i = 1; i <= n; i++) {\n        last_digit = (last_digit * i) % 10;\n    }\n    return last_digit;\n}\nint main() {\n    auto candidate = last_Digit_Factorial;\n    assert(candidate((4)) == (4));\n    assert(candidate((21)) == (0));\n    assert(candidate((30)) == (0));\n}\n",
      "timestamp": 1666123887,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the last digit in factorial of a given number.\nlong last_Digit_Factorial(long n) {\n    long fact = 1;\n    for(long i = 1; i <= n; i++) {\n        fact = (fact * i) % 10;\n    }\n    return fact;\n}\nint main() {\n    auto candidate = last_Digit_Factorial;\n    assert(candidate((4)) == (4));\n    assert(candidate((21)) == (0));\n    assert(candidate((30)) == (0));\n}\n",
      "timestamp": 1666123887,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the last digit in factorial of a given number.\nlong last_Digit_Factorial(long n) {\n    // Write your code here\n    long fact=1;\n    for(int i=1;i<=n;i++){\n        fact*=i;\n    }\n    return fact%10;\n}\nint main() {\n    auto candidate = last_Digit_Factorial;\n    assert(candidate((4)) == (4));\n    assert(candidate((21)) == (0));\n    assert(candidate((30)) == (0));\n}\n",
      "timestamp": 1666123887,
      "stdout": "",
      "stderr": "tmpkwzpqaq0: /tmp/tmpkwzpqaq0.cpp:15: int main(): Assertion `candidate((21)) == (0)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the last digit in factorial of a given number.\nlong last_Digit_Factorial(long n) {\n    if(n==0)\n        return 1;\n    else if(n==1)\n        return 1;\n    else if(n==2)\n        return 2;\n    else if(n==3)\n        return 6;\n    else if(n==4)\n        return 4;\n    else if(n==5)\n        return 2;\n    else if(n==6)\n        return 2;\n    else if(n==7)\n        return 4;\n    else if(n==8)\n        return 2;\n    else if(n==9)\n        return 8;\n    else if(n==10)\n        return 8;\n    else if(n==11)\n        return 0;\n    else if(n==12)\n        return 0;\n    else if(n==13)\n        return 0;\n    else if(n==14)\n        return 0;\n    else if(n==15)\n        return 0;\n    else if(n==16)\n        return 6;\n    else if(n==17)\n        return 0;\n    else if(n==18)\n        return 0;\n    else if(n==19)\n        return 0;\n    else if(n==20)\n        return 0;\n    else if(n==21)\n        return 0;\n    else if(n==22)\n        return 0;\n    else if(n==23)\n        return 0;\n    else if(n==24)\n        return 0;\n    else if(n==25)\n        return 0;\n    else if(n==26)\n        return 0;\n    else if(n==27)\n        return 0;\n    else if(n==28)\n        return 0;\n    else if(n==29)\n        return 0;\n    else if(n==30)\n        return 0;\n    else if(n==31)\n        return 0;\n    else if(n==32)\n        return 0;\n    else if(n==33)\n        return 0;\n    else if(n==34)\n        return 0;\n    else if(n==35)\n        return 0;\n    else if(n==36)\n}\nint main() {\n    auto candidate = last_Digit_Factorial;\n    assert(candidate((4)) == (4));\n    assert(candidate((21)) == (0));\n    assert(candidate((30)) == (0));\n}\n",
      "timestamp": 1666123887,
      "stdout": "",
      "stderr": "/tmp/tmp1mt9ovtv.cpp: In function \u2018long int last_Digit_Factorial(long int)\u2019:\n/tmp/tmp1mt9ovtv.cpp:78:1: error: expected primary-expression before \u2018}\u2019 token\n   78 | }\n      | ^\n/tmp/tmp1mt9ovtv.cpp:78:1: warning: control reaches end of non-void function [-Wreturn-type]\n   78 | }\n      | ^\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the last digit in factorial of a given number.\nlong last_Digit_Factorial(long n) {\n    if(n==0)\n        return 1;\n    else if(n==1)\n        return 1;\n    else if(n==2)\n        return 2;\n    else if(n==3)\n        return 6;\n    else if(n==4)\n        return 4;\n    else if(n==5)\n        return 2;\n    else if(n==6)\n        return 2;\n    else if(n==7)\n        return 4;\n    else if(n==8)\n        return 2;\n    else if(n==9)\n        return 8;\n    else if(n==10)\n        return 8;\n    else if(n==11)\n        return 8;\n    else if(n==12)\n        return 6;\n    else if(n==13)\n        return 4;\n    else if(n==14)\n        return 2;\n    else if(n==15)\n        return 6;\n    else if(n==16)\n        return 2;\n    else if(n==17)\n        return 4;\n    else if(n==18)\n        return 8;\n    else if(n==19)\n        return 8;\n    else if(n==20)\n        return 6;\n    else if(n==21)\n        return 4;\n    else if(n==22)\n        return 2;\n    else if(n==23)\n        return 6;\n    else if(n==24)\n        return 2;\n    else if(n==25)\n        return 4;\n    else if(n==26)\n        return 2;\n    else if(n==27)\n        return 8;\n    else if(n==28)\n        return 2;\n    else if(n==29)\n        return 8;\n    else if(n==30)\n        return 8;\n    else if(n==31)\n        return 8;\n    else if(n==32)\n        return 6;\n    else if(n==33)\n        return 4;\n    else if(n==34)\n        return 2;\n    else if(n==35)\n        return 6;\n    else if(n==36)\n}\nint main() {\n    auto candidate = last_Digit_Factorial;\n    assert(candidate((4)) == (4));\n    assert(candidate((21)) == (0));\n    assert(candidate((30)) == (0));\n}\n",
      "timestamp": 1666123887,
      "stdout": "",
      "stderr": "/tmp/tmpks0zq71r.cpp: In function \u2018long int last_Digit_Factorial(long int)\u2019:\n/tmp/tmpks0zq71r.cpp:78:1: error: expected primary-expression before \u2018}\u2019 token\n   78 | }\n      | ^\n/tmp/tmpks0zq71r.cpp:78:1: warning: control reaches end of non-void function [-Wreturn-type]\n   78 | }\n      | ^\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the last digit in factorial of a given number.\nlong last_Digit_Factorial(long n) {\n    if (n < 0) {\n        return -1;\n    }\n    if (n == 0) {\n        return 1;\n    }\n    long fact = 1;\n    for (long i = 1; i <= n; i++) {\n        fact = fact * i;\n        fact = fact % 10;\n    }\n    return fact;\n}\nint main() {\n    auto candidate = last_Digit_Factorial;\n    assert(candidate((4)) == (4));\n    assert(candidate((21)) == (0));\n    assert(candidate((30)) == (0));\n}\n",
      "timestamp": 1666123889,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the last digit in factorial of a given number.\nlong last_Digit_Factorial(long n) {\n    if(n == 0) {\n        return 1;\n    }\n    long ans = 1;\n    for(long i = 1; i <= n; i++) {\n        ans = (ans * i) % 10;\n    }\n    return ans;\n}\nint main() {\n    auto candidate = last_Digit_Factorial;\n    assert(candidate((4)) == (4));\n    assert(candidate((21)) == (0));\n    assert(candidate((30)) == (0));\n}\n",
      "timestamp": 1666123889,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the last digit in factorial of a given number.\nlong last_Digit_Factorial(long n) {\n    // Write your code here\n    if(n==0)\n        return 1;\n    long fact=1;\n    for(long i=1;i<=n;i++)\n    {\n        fact=fact*i;\n        fact=fact%10;\n    }\n    return fact;\n}\nint main() {\n    auto candidate = last_Digit_Factorial;\n    assert(candidate((4)) == (4));\n    assert(candidate((21)) == (0));\n    assert(candidate((30)) == (0));\n}\n",
      "timestamp": 1666123887,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the last digit in factorial of a given number.\nlong last_Digit_Factorial(long n) {\n    long fact = 1;\n    for (long i = 1; i <= n; i++) {\n        fact = (fact * i) % 10;\n    }\n    return fact;\n}\nint main() {\n    auto candidate = last_Digit_Factorial;\n    assert(candidate((4)) == (4));\n    assert(candidate((21)) == (0));\n    assert(candidate((30)) == (0));\n}\n",
      "timestamp": 1666123889,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the last digit in factorial of a given number.\nlong last_Digit_Factorial(long n) {\n    // Write your code here\n    long fact=1;\n    for(int i=1;i<=n;i++)\n    {\n        fact=fact*i;\n    }\n    return fact%10;\n}\nint main() {\n    auto candidate = last_Digit_Factorial;\n    assert(candidate((4)) == (4));\n    assert(candidate((21)) == (0));\n    assert(candidate((30)) == (0));\n}\n",
      "timestamp": 1665509712,
      "stdout": "",
      "stderr": "tmpqtkup2f7: /tmp/tmpqtkup2f7.cpp:16: int main(): Assertion `candidate((21)) == (0)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the last digit in factorial of a given number.\nlong last_Digit_Factorial(long n) {\n    if(n == 0)\n        return 1;\n    long fact = 1;\n    for(long i = 1; i <= n; i++) {\n        fact = (fact * i) % 10;\n    }\n    return fact;\n}\nint main() {\n    auto candidate = last_Digit_Factorial;\n    assert(candidate((4)) == (4));\n    assert(candidate((21)) == (0));\n    assert(candidate((30)) == (0));\n}\n",
      "timestamp": 1666123889,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the last digit in factorial of a given number.\nlong last_Digit_Factorial(long n) {\n    long fact=1;\n    for(long i=1;i<=n;i++){\n        fact=(fact*i)%10;\n    }\n    return fact;\n}\nint main() {\n    auto candidate = last_Digit_Factorial;\n    assert(candidate((4)) == (4));\n    assert(candidate((21)) == (0));\n    assert(candidate((30)) == (0));\n}\n",
      "timestamp": 1666123889,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the last digit in factorial of a given number.\nlong last_Digit_Factorial(long n) {\n    long fact = 1;\n    for (int i = 1; i <= n; i++) {\n        fact = fact * i;\n    }\n    return fact % 10;\n}\nint main() {\n    auto candidate = last_Digit_Factorial;\n    assert(candidate((4)) == (4));\n    assert(candidate((21)) == (0));\n    assert(candidate((30)) == (0));\n}\n",
      "timestamp": 1666123887,
      "stdout": "",
      "stderr": "tmpcv_rj7hd: /tmp/tmpcv_rj7hd.cpp:14: int main(): Assertion `candidate((21)) == (0)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the last digit in factorial of a given number.\nlong last_Digit_Factorial(long n) {\n    // Write your code here\n    long fact=1;\n    for(int i=1;i<=n;i++)\n    {\n        fact=fact*i;\n    }\n    return fact%10;\n}\nint main() {\n    auto candidate = last_Digit_Factorial;\n    assert(candidate((4)) == (4));\n    assert(candidate((21)) == (0));\n    assert(candidate((30)) == (0));\n}\n",
      "timestamp": 1665509712,
      "stdout": "",
      "stderr": "tmpqtkup2f7: /tmp/tmpqtkup2f7.cpp:16: int main(): Assertion `candidate((21)) == (0)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the last digit in factorial of a given number.\nlong last_Digit_Factorial(long n) {\n    long last_digit = 1;\n    for (int i = 1; i <= n; i++) {\n        last_digit = (last_digit * i) % 10;\n    }\n    return last_digit;\n}\nint main() {\n    auto candidate = last_Digit_Factorial;\n    assert(candidate((4)) == (4));\n    assert(candidate((21)) == (0));\n    assert(candidate((30)) == (0));\n}\n",
      "timestamp": 1666123889,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the last digit in factorial of a given number.\nlong last_Digit_Factorial(long n) {\n    long fact=1;\n    for(long i=1;i<=n;i++)\n    {\n        fact=fact*i;\n    }\n    return fact%10;\n}\nint main() {\n    auto candidate = last_Digit_Factorial;\n    assert(candidate((4)) == (4));\n    assert(candidate((21)) == (0));\n    assert(candidate((30)) == (0));\n}\n",
      "timestamp": 1666123889,
      "stdout": "",
      "stderr": "tmplwxa6k73: /tmp/tmplwxa6k73.cpp:15: int main(): Assertion `candidate((21)) == (0)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the last digit in factorial of a given number.\nlong last_Digit_Factorial(long n) {\n    if (n < 0)\n        return -1;\n    if (n == 0)\n        return 1;\n    long res = 1;\n    for (long i = 2; i <= n; i++)\n        res = (res * i) % 10;\n    return res;\n}\nint main() {\n    auto candidate = last_Digit_Factorial;\n    assert(candidate((4)) == (4));\n    assert(candidate((21)) == (0));\n    assert(candidate((30)) == (0));\n}\n",
      "timestamp": 1665509711,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the last digit in factorial of a given number.\nlong last_Digit_Factorial(long n) {\n    // Write your code here\n    if(n==0)\n        return 1;\n    else if(n==1)\n        return 1;\n    else if(n==2)\n        return 2;\n    else if(n==3)\n        return 6;\n    else if(n==4)\n        return 4;\n    else if(n==5)\n        return 2;\n    else if(n==6)\n        return 2;\n    else if(n==7)\n        return 4;\n    else if(n==8)\n        return 2;\n    else if(n==9)\n        return 8;\n    else if(n==10)\n        return 8;\n    else if(n==11)\n        return 2;\n    else if(n==12)\n        return 6;\n    else if(n==13)\n        return 8;\n    else if(n==14)\n        return 8;\n    else if(n==15)\n        return 6;\n    else if(n==16)\n        return 6;\n    else if(n==17)\n        return 4;\n    else if(n==18)\n        return 8;\n    else if(n==19)\n        return 2;\n    else if(n==20)\n        return 6;\n    else if(n==21)\n        return 4;\n    else if(n==22)\n        return 2;\n    else if(n==23)\n        return 2;\n    else if(n==24)\n        return 8;\n    else if(n==25)\n        return 2;\n    else if(n==26)\n        return 8;\n    else if(n==27)\n        return 6;\n    else if(n==28)\n        return 4;\n    else if(n==29)\n        return 6;\n    else if(n==30)\n        return 2;\n    else if(n==31)\n        return 6;\n    else if(n==32)\n        return 2;\n    else if(n==33)\n        return 2;\n    else if(n==34)\n        return 2;\n    else if(n==35)\n        return 2;\n   \n}\nint main() {\n    auto candidate = last_Digit_Factorial;\n    assert(candidate((4)) == (4));\n    assert(candidate((21)) == (0));\n    assert(candidate((30)) == (0));\n}\n",
      "timestamp": 1666123889,
      "stdout": "",
      "stderr": "tmpumur5y4v: /tmp/tmpumur5y4v.cpp:83: int main(): Assertion `candidate((21)) == (0)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the last digit in factorial of a given number.\nlong last_Digit_Factorial(long n) {\n    if(n == 0) {\n        return 1;\n    }\n    long fact = 1;\n    for(long i = 1; i <= n; i++) {\n        fact = (fact * i) % 10;\n    }\n    return fact;\n}\nint main() {\n    auto candidate = last_Digit_Factorial;\n    assert(candidate((4)) == (4));\n    assert(candidate((21)) == (0));\n    assert(candidate((30)) == (0));\n}\n",
      "timestamp": 1666123889,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the last digit in factorial of a given number.\nlong last_Digit_Factorial(long n) {\n    // Write your code here\n    if(n==0)\n        return 1;\n    else if(n==1)\n        return 1;\n    else if(n==2)\n        return 2;\n    else if(n==3)\n        return 6;\n    else if(n==4)\n        return 4;\n    else if(n==5)\n        return 2;\n    else if(n==6)\n        return 2;\n    else if(n==7)\n        return 4;\n    else if(n==8)\n        return 2;\n    else if(n==9)\n        return 8;\n    else if(n==10)\n        return 8;\n    else if(n==11)\n        return 8;\n    else if(n==12)\n        return 6;\n    else if(n==13)\n        return 0;\n    else if(n==14)\n        return 0;\n    else if(n==15)\n        return 0;\n    else if(n==16)\n        return 2;\n    else if(n==17)\n        return 6;\n    else if(n==18)\n        return 8;\n    else if(n==19)\n        return 8;\n    else if(n==20)\n        return 2;\n    else if(n==21)\n        return 0;\n    else if(n==22)\n        return 0;\n    else if(n==23)\n        return 0;\n    else if(n==24)\n        return 4;\n    else if(n==25)\n        return 0;\n    else if(n==26)\n        return 0;\n    else if(n==27)\n        return 0;\n    else if(n==28)\n        return 0;\n    else if(n==29)\n        return 0;\n    else if(n==30)\n        return 0;\n    else if(n==31)\n        return 0;\n    else if(n==32)\n        return 0;\n    else if(n==33)\n        return 0;\n    else if(n==34)\n        return 0;\n    else if(n==35)\n        return 0;\n   \n}\nint main() {\n    auto candidate = last_Digit_Factorial;\n    assert(candidate((4)) == (4));\n    assert(candidate((21)) == (0));\n    assert(candidate((30)) == (0));\n}\n",
      "timestamp": 1666123889,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the last digit in factorial of a given number.\nlong last_Digit_Factorial(long n) {\n    long fact = 1;\n    for (long i = 1; i <= n; i++) {\n        fact = fact * i;\n    }\n    return fact % 10;\n}\nint main() {\n    auto candidate = last_Digit_Factorial;\n    assert(candidate((4)) == (4));\n    assert(candidate((21)) == (0));\n    assert(candidate((30)) == (0));\n}\n",
      "timestamp": 1665509711,
      "stdout": "",
      "stderr": "tmpa9mo73v1: /tmp/tmpa9mo73v1.cpp:14: int main(): Assertion `candidate((21)) == (0)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the last digit in factorial of a given number.\nlong last_Digit_Factorial(long n) {\n    long fact = 1;\n    for(int i = 1; i <= n; i++) {\n        fact = (fact * i) % 10;\n    }\n    return fact;\n}\nint main() {\n    auto candidate = last_Digit_Factorial;\n    assert(candidate((4)) == (4));\n    assert(candidate((21)) == (0));\n    assert(candidate((30)) == (0));\n}\n",
      "timestamp": 1666123887,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the last digit in factorial of a given number.\nlong last_Digit_Factorial(long n) {\n    // Write your code here\n    long fact=1;\n    for(long i=1;i<=n;i++){\n        fact=(fact*i)%10;\n    }\n    return fact;\n}\nint main() {\n    auto candidate = last_Digit_Factorial;\n    assert(candidate((4)) == (4));\n    assert(candidate((21)) == (0));\n    assert(candidate((30)) == (0));\n}\n",
      "timestamp": 1666123889,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the last digit in factorial of a given number.\nlong last_Digit_Factorial(long n) {\n    // Write your code here\n    long fact = 1;\n    for(int i=1;i<=n;i++)\n    {\n        fact = (fact*i)%10;\n    }\n    return fact;\n}\nint main() {\n    auto candidate = last_Digit_Factorial;\n    assert(candidate((4)) == (4));\n    assert(candidate((21)) == (0));\n    assert(candidate((30)) == (0));\n}\n",
      "timestamp": 1666123889,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the last digit in factorial of a given number.\nlong last_Digit_Factorial(long n) {\n    if (n == 0)\n        return 1;\n    else if (n == 1)\n        return 1;\n    else if (n == 2)\n        return 2;\n    else if (n == 3)\n        return 6;\n    else if (n == 4)\n        return 4;\n    else if (n == 5)\n        return 0;\n    else if (n == 6)\n        return 0;\n    else if (n == 7)\n        return 0;\n    else if (n == 8)\n        return 0;\n    else if (n == 9)\n        return 0;\n    else if (n == 10)\n        return 0;\n    else if (n == 11)\n        return 0;\n    else if (n == 12)\n        return 0;\n    else if (n == 13)\n        return 0;\n    else if (n == 14)\n        return 0;\n    else if (n == 15)\n        return 0;\n    else if (n == 16)\n        return 0;\n    else if (n == 17)\n        return 0;\n    else if (n == 18)\n        return 0;\n    else if (n == 19)\n        return 0;\n    else if (n == 20)\n        return 0;\n    else if (n == 21)\n        return 0;\n    else if (n == 22)\n        return 0;\n    else if (n == 23)\n        return 0;\n    else if (n == 24)\n        return 0;\n    else if (n == 25)\n        return 0;\n    else if (n == 26)\n        return 0;\n    else if (n == 27)\n        return 0;\n    else if (n == 28)\n        return 0;\n    else if (n == 29)\n        return 0;\n    else if (n == 30)\n        return 0;\n    else if (n == 31)\n        return 0;\n    else if (n == 32)\n        return 0;\n    else if (n == 33)\n        return 0;\n    else if (n == 34)\n        return 0;\n    else if (n == 35)\n        return 0;\n    else if (n == 36)\n}\nint main() {\n    auto candidate = last_Digit_Factorial;\n    assert(candidate((4)) == (4));\n    assert(candidate((21)) == (0));\n    assert(candidate((30)) == (0));\n}\n",
      "timestamp": 1666123889,
      "stdout": "",
      "stderr": "/tmp/tmpqnppvdyz.cpp: In function \u2018long int last_Digit_Factorial(long int)\u2019:\n/tmp/tmpqnppvdyz.cpp:78:1: error: expected primary-expression before \u2018}\u2019 token\n   78 | }\n      | ^\n/tmp/tmpqnppvdyz.cpp:78:1: warning: control reaches end of non-void function [-Wreturn-type]\n   78 | }\n      | ^\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the last digit in factorial of a given number.\nlong last_Digit_Factorial(long n) {\n    if (n < 0)\n        return -1;\n    if (n <= 1)\n        return 1;\n    long res = 1;\n    for (long i = 2; i <= n; i++)\n        res = (res * i) % 10;\n    return res;\n}\nint main() {\n    auto candidate = last_Digit_Factorial;\n    assert(candidate((4)) == (4));\n    assert(candidate((21)) == (0));\n    assert(candidate((30)) == (0));\n}\n",
      "timestamp": 1666123889,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the last digit in factorial of a given number.\nlong last_Digit_Factorial(long n) {\n    long fact = 1;\n    for(long i = 1; i <= n; i++) {\n        fact = (fact * i) % 10;\n    }\n    return fact;\n}\nint main() {\n    auto candidate = last_Digit_Factorial;\n    assert(candidate((4)) == (4));\n    assert(candidate((21)) == (0));\n    assert(candidate((30)) == (0));\n}\n",
      "timestamp": 1666123887,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the last digit in factorial of a given number.\nlong last_Digit_Factorial(long n) {\n    if(n == 0)\n        return 1;\n    long last_digit = 1;\n    for(long i = 1; i <= n; i++) {\n        last_digit = (last_digit * i) % 10;\n    }\n    return last_digit;\n}\nint main() {\n    auto candidate = last_Digit_Factorial;\n    assert(candidate((4)) == (4));\n    assert(candidate((21)) == (0));\n    assert(candidate((30)) == (0));\n}\n",
      "timestamp": 1666123889,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the last digit in factorial of a given number.\nlong last_Digit_Factorial(long n) {\n    if(n == 0) {\n        return 1;\n    }\n    long fact = 1;\n    for(long i = 1; i <= n; i++) {\n        fact = (fact * i) % 10;\n    }\n    return fact;\n}\nint main() {\n    auto candidate = last_Digit_Factorial;\n    assert(candidate((4)) == (4));\n    assert(candidate((21)) == (0));\n    assert(candidate((30)) == (0));\n}\n",
      "timestamp": 1666123889,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the last digit in factorial of a given number.\nlong last_Digit_Factorial(long n) {\n    if (n < 0)\n        return -1;\n    if (n == 0)\n        return 1;\n    long res = 1;\n    for (long i = 2; i <= n; i++)\n        res = (res * i) % 10;\n    return res;\n}\nint main() {\n    auto candidate = last_Digit_Factorial;\n    assert(candidate((4)) == (4));\n    assert(candidate((21)) == (0));\n    assert(candidate((30)) == (0));\n}\n",
      "timestamp": 1665509711,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the last digit in factorial of a given number.\nlong last_Digit_Factorial(long n) {\n    long fact = 1;\n    for (int i = 1; i <= n; i++) {\n        fact = fact * i;\n    }\n    return fact % 10;\n}\nint main() {\n    auto candidate = last_Digit_Factorial;\n    assert(candidate((4)) == (4));\n    assert(candidate((21)) == (0));\n    assert(candidate((30)) == (0));\n}\n",
      "timestamp": 1666123887,
      "stdout": "",
      "stderr": "tmpcv_rj7hd: /tmp/tmpcv_rj7hd.cpp:14: int main(): Assertion `candidate((21)) == (0)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the last digit in factorial of a given number.\nlong last_Digit_Factorial(long n) {\n    if(n == 0) {\n        return 1;\n    }\n    long fact = 1;\n    for(int i = 1; i <= n; i++) {\n        fact = (fact * i) % 10;\n    }\n    return fact;\n}\nint main() {\n    auto candidate = last_Digit_Factorial;\n    assert(candidate((4)) == (4));\n    assert(candidate((21)) == (0));\n    assert(candidate((30)) == (0));\n}\n",
      "timestamp": 1666123889,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the last digit in factorial of a given number.\nlong last_Digit_Factorial(long n) {\n    if(n==0)\n        return 1;\n    else if(n==1)\n        return 1;\n    else if(n==2)\n        return 2;\n    else if(n==3)\n        return 6;\n    else if(n==4)\n        return 4;\n    else if(n==5)\n        return 2;\n    else if(n==6)\n        return 2;\n    else if(n==7)\n        return 4;\n    else if(n==8)\n        return 2;\n    else if(n==9)\n        return 8;\n    else if(n==10)\n        return 8;\n    else if(n==11)\n        return 8;\n    else if(n==12)\n        return 6;\n    else if(n==13)\n        return 4;\n    else if(n==14)\n        return 2;\n    else if(n==15)\n        return 6;\n    else if(n==16)\n        return 2;\n    else if(n==17)\n        return 4;\n    else if(n==18)\n        return 8;\n    else if(n==19)\n        return 8;\n    else if(n==20)\n        return 6;\n    else if(n==21)\n        return 4;\n    else if(n==22)\n        return 2;\n    else if(n==23)\n        return 6;\n    else if(n==24)\n        return 2;\n    else if(n==25)\n        return 4;\n    else if(n==26)\n        return 2;\n    else if(n==27)\n        return 8;\n    else if(n==28)\n        return 2;\n    else if(n==29)\n        return 8;\n    else if(n==30)\n        return 8;\n    else if(n==31)\n        return 8;\n    else if(n==32)\n        return 6;\n    else if(n==33)\n        return 4;\n    else if(n==34)\n        return 2;\n    else if(n==35)\n        return 6;\n    else if(n==36)\n}\nint main() {\n    auto candidate = last_Digit_Factorial;\n    assert(candidate((4)) == (4));\n    assert(candidate((21)) == (0));\n    assert(candidate((30)) == (0));\n}\n",
      "timestamp": 1666123887,
      "stdout": "",
      "stderr": "/tmp/tmpks0zq71r.cpp: In function \u2018long int last_Digit_Factorial(long int)\u2019:\n/tmp/tmpks0zq71r.cpp:78:1: error: expected primary-expression before \u2018}\u2019 token\n   78 | }\n      | ^\n/tmp/tmpks0zq71r.cpp:78:1: warning: control reaches end of non-void function [-Wreturn-type]\n   78 | }\n      | ^\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the last digit in factorial of a given number.\nlong last_Digit_Factorial(long n) {\n    // Write your code here\n    long fact=1;\n    for(int i=1;i<=n;i++)\n    {\n        fact=fact*i;\n    }\n    return fact%10;\n}\nint main() {\n    auto candidate = last_Digit_Factorial;\n    assert(candidate((4)) == (4));\n    assert(candidate((21)) == (0));\n    assert(candidate((30)) == (0));\n}\n",
      "timestamp": 1665509712,
      "stdout": "",
      "stderr": "tmpqtkup2f7: /tmp/tmpqtkup2f7.cpp:16: int main(): Assertion `candidate((21)) == (0)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the last digit in factorial of a given number.\nlong last_Digit_Factorial(long n) {\n    long fact = 1;\n    for (long i = 1; i <= n; i++) {\n        fact = fact * i;\n    }\n    return fact % 10;\n}\nint main() {\n    auto candidate = last_Digit_Factorial;\n    assert(candidate((4)) == (4));\n    assert(candidate((21)) == (0));\n    assert(candidate((30)) == (0));\n}\n",
      "timestamp": 1665509711,
      "stdout": "",
      "stderr": "tmpa9mo73v1: /tmp/tmpa9mo73v1.cpp:14: int main(): Assertion `candidate((21)) == (0)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the last digit in factorial of a given number.\nlong last_Digit_Factorial(long n) {\n    if (n < 0)\n        return 0;\n    if (n <= 1)\n        return 1;\n    long res = 1;\n    for (long i = 2; i <= n; i++)\n        res = (res * i) % 10;\n    return res;\n}\nint main() {\n    auto candidate = last_Digit_Factorial;\n    assert(candidate((4)) == (4));\n    assert(candidate((21)) == (0));\n    assert(candidate((30)) == (0));\n}\n",
      "timestamp": 1666123889,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the last digit in factorial of a given number.\nlong last_Digit_Factorial(long n) {\n    long fact = 1;\n    for (int i = 1; i <= n; i++) {\n        fact = fact * i;\n    }\n    return fact % 10;\n}\nint main() {\n    auto candidate = last_Digit_Factorial;\n    assert(candidate((4)) == (4));\n    assert(candidate((21)) == (0));\n    assert(candidate((30)) == (0));\n}\n",
      "timestamp": 1666123887,
      "stdout": "",
      "stderr": "tmpcv_rj7hd: /tmp/tmpcv_rj7hd.cpp:14: int main(): Assertion `candidate((21)) == (0)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the last digit in factorial of a given number.\nlong last_Digit_Factorial(long n) {\n    if(n==0)\n        return 1;\n    else if(n==1)\n        return 1;\n    else if(n==2)\n        return 2;\n    else if(n==3)\n        return 6;\n    else if(n==4)\n        return 4;\n    else if(n==5)\n        return 2;\n    else if(n==6)\n        return 2;\n    else if(n==7)\n        return 4;\n    else if(n==8)\n        return 2;\n    else if(n==9)\n        return 8;\n    else if(n==10)\n        return 8;\n    else if(n==11)\n        return 0;\n    else if(n==12)\n        return 0;\n    else if(n==13)\n        return 0;\n    else if(n==14)\n        return 0;\n    else if(n==15)\n        return 0;\n    else if(n==16)\n        return 6;\n    else if(n==17)\n        return 0;\n    else if(n==18)\n        return 0;\n    else if(n==19)\n        return 0;\n    else if(n==20)\n        return 0;\n    else if(n==21)\n        return 0;\n    else if(n==22)\n        return 0;\n    else if(n==23)\n        return 0;\n    else if(n==24)\n        return 0;\n    else if(n==25)\n        return 0;\n    else if(n==26)\n        return 0;\n    else if(n==27)\n        return 0;\n    else if(n==28)\n        return 0;\n    else if(n==29)\n        return 0;\n    else if(n==30)\n        return 0;\n    else if(n==31)\n        return 0;\n    else if(n==32)\n        return 0;\n    else if(n==33)\n        return 0;\n    else if(n==34)\n        return 0;\n    else if(n==35)\n        return 0;\n    else if(n==36)\n}\nint main() {\n    auto candidate = last_Digit_Factorial;\n    assert(candidate((4)) == (4));\n    assert(candidate((21)) == (0));\n    assert(candidate((30)) == (0));\n}\n",
      "timestamp": 1666123887,
      "stdout": "",
      "stderr": "/tmp/tmp1mt9ovtv.cpp: In function \u2018long int last_Digit_Factorial(long int)\u2019:\n/tmp/tmp1mt9ovtv.cpp:78:1: error: expected primary-expression before \u2018}\u2019 token\n   78 | }\n      | ^\n/tmp/tmp1mt9ovtv.cpp:78:1: warning: control reaches end of non-void function [-Wreturn-type]\n   78 | }\n      | ^\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the last digit in factorial of a given number.\nlong last_Digit_Factorial(long n) {\n    if(n==0)\n        return 1;\n    else if(n==1)\n        return 1;\n    else\n        return (n*last_Digit_Factorial(n-1))%10;\n}\nint main() {\n    auto candidate = last_Digit_Factorial;\n    assert(candidate((4)) == (4));\n    assert(candidate((21)) == (0));\n    assert(candidate((30)) == (0));\n}\n",
      "timestamp": 1666123887,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the last digit in factorial of a given number.\nlong last_Digit_Factorial(long n) {\n    if (n == 0) {\n        return 1;\n    }\n    long fact = 1;\n    for (long i = 1; i <= n; i++) {\n        fact = (fact * i) % 10;\n    }\n    return fact;\n}\nint main() {\n    auto candidate = last_Digit_Factorial;\n    assert(candidate((4)) == (4));\n    assert(candidate((21)) == (0));\n    assert(candidate((30)) == (0));\n}\n",
      "timestamp": 1666123889,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the last digit in factorial of a given number.\nlong last_Digit_Factorial(long n) {\n    long fact = 1;\n    for (int i = 1; i <= n; i++) {\n        fact = fact * i;\n    }\n    return fact % 10;\n}\nint main() {\n    auto candidate = last_Digit_Factorial;\n    assert(candidate((4)) == (4));\n    assert(candidate((21)) == (0));\n    assert(candidate((30)) == (0));\n}\n",
      "timestamp": 1666123887,
      "stdout": "",
      "stderr": "tmpcv_rj7hd: /tmp/tmpcv_rj7hd.cpp:14: int main(): Assertion `candidate((21)) == (0)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the last digit in factorial of a given number.\nlong last_Digit_Factorial(long n) {\n    // Write your code here\n    long factorial = 1;\n    for(int i=2;i<=n;i++){\n        factorial = (factorial*i)%10;\n    }\n    return factorial;\n}\nint main() {\n    auto candidate = last_Digit_Factorial;\n    assert(candidate((4)) == (4));\n    assert(candidate((21)) == (0));\n    assert(candidate((30)) == (0));\n}\n",
      "timestamp": 1666123889,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the last digit in factorial of a given number.\nlong last_Digit_Factorial(long n) {\n    // Write your code here\n    int fact=1;\n    for(int i=1;i<=n;i++){\n        fact=fact*i;\n    }\n    return fact%10;\n}\nint main() {\n    auto candidate = last_Digit_Factorial;\n    assert(candidate((4)) == (4));\n    assert(candidate((21)) == (0));\n    assert(candidate((30)) == (0));\n}\n",
      "timestamp": 1666123889,
      "stdout": "",
      "stderr": "tmpx8x8kavx: /tmp/tmpx8x8kavx.cpp:15: int main(): Assertion `candidate((21)) == (0)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the last digit in factorial of a given number.\nlong last_Digit_Factorial(long n) {\n    // Write your code here\n    long fact=1;\n    for(int i=1;i<=n;i++){\n        fact=fact*i;\n    }\n    return fact%10;\n}\nint main() {\n    auto candidate = last_Digit_Factorial;\n    assert(candidate((4)) == (4));\n    assert(candidate((21)) == (0));\n    assert(candidate((30)) == (0));\n}\n",
      "timestamp": 1666123887,
      "stdout": "",
      "stderr": "tmp29a0zq_r: /tmp/tmp29a0zq_r.cpp:15: int main(): Assertion `candidate((21)) == (0)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the last digit in factorial of a given number.\nlong last_Digit_Factorial(long n) {\n    // Write your code here\n    long fact = 1;\n    for(int i = 1; i <= n; i++) {\n        fact = (fact * i) % 10;\n    }\n    return fact;\n}\nint main() {\n    auto candidate = last_Digit_Factorial;\n    assert(candidate((4)) == (4));\n    assert(candidate((21)) == (0));\n    assert(candidate((30)) == (0));\n}\n",
      "timestamp": 1666123889,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the last digit in factorial of a given number.\nlong last_Digit_Factorial(long n) {\n    if(n<0)\n        return -1;\n    if(n==0)\n        return 1;\n    long fact=1;\n    for(long i=1;i<=n;i++)\n        fact=(fact*i)%10;\n    return fact;\n}\nint main() {\n    auto candidate = last_Digit_Factorial;\n    assert(candidate((4)) == (4));\n    assert(candidate((21)) == (0));\n    assert(candidate((30)) == (0));\n}\n",
      "timestamp": 1666123889,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the last digit in factorial of a given number.\nlong last_Digit_Factorial(long n) {\n    long fact=1;\n    for(long i=1;i<=n;i++)\n    {\n        fact=(fact*i)%10;\n    }\n    return fact;\n}\nint main() {\n    auto candidate = last_Digit_Factorial;\n    assert(candidate((4)) == (4));\n    assert(candidate((21)) == (0));\n    assert(candidate((30)) == (0));\n}\n",
      "timestamp": 1666123889,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the last digit in factorial of a given number.\nlong last_Digit_Factorial(long n) {\n    long fact = 1;\n    for (long i = 1; i <= n; i++) {\n        fact = (fact * i) % 10;\n    }\n    return fact;\n}\nint main() {\n    auto candidate = last_Digit_Factorial;\n    assert(candidate((4)) == (4));\n    assert(candidate((21)) == (0));\n    assert(candidate((30)) == (0));\n}\n",
      "timestamp": 1666123889,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the last digit in factorial of a given number.\nlong last_Digit_Factorial(long n) {\n    // Write your code here\n    if(n==0)\n        return 1;\n    else\n        return (n*last_Digit_Factorial(n-1))%10;\n}\nint main() {\n    auto candidate = last_Digit_Factorial;\n    assert(candidate((4)) == (4));\n    assert(candidate((21)) == (0));\n    assert(candidate((30)) == (0));\n}\n",
      "timestamp": 1666123887,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the last digit in factorial of a given number.\nlong last_Digit_Factorial(long n) {\n    if (n < 0)\n        return -1;\n    if (n == 0)\n        return 1;\n    long res = 1;\n    for (long i = 2; i <= n; i++)\n        res = (res * i) % 10;\n    return res;\n}\nint main() {\n    auto candidate = last_Digit_Factorial;\n    assert(candidate((4)) == (4));\n    assert(candidate((21)) == (0));\n    assert(candidate((30)) == (0));\n}\n",
      "timestamp": 1665509711,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the last digit in factorial of a given number.\nlong last_Digit_Factorial(long n) {\n    long fact = 1;\n    for (int i = 1; i <= n; i++) {\n        fact = (fact * i) % 10;\n    }\n    return fact;\n}\nint main() {\n    auto candidate = last_Digit_Factorial;\n    assert(candidate((4)) == (4));\n    assert(candidate((21)) == (0));\n    assert(candidate((30)) == (0));\n}\n",
      "timestamp": 1665509711,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the last digit in factorial of a given number.\nlong last_Digit_Factorial(long n) {\n    // Write your code here\n    long fact=1;\n    for(long i=1;i<=n;i++)\n    {\n        fact=(fact*i)%10;\n    }\n    return fact;\n}\nint main() {\n    auto candidate = last_Digit_Factorial;\n    assert(candidate((4)) == (4));\n    assert(candidate((21)) == (0));\n    assert(candidate((30)) == (0));\n}\n",
      "timestamp": 1666123887,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the last digit in factorial of a given number.\nlong last_Digit_Factorial(long n) {\n    if (n == 0)\n        return 1;\n    else if (n == 1)\n        return 1;\n    else if (n == 2)\n        return 2;\n    else if (n == 3)\n        return 6;\n    else if (n == 4)\n        return 4;\n    else if (n == 5)\n        return 2;\n    else if (n == 6)\n        return 2;\n    else if (n == 7)\n        return 4;\n    else if (n == 8)\n        return 2;\n    else if (n == 9)\n        return 8;\n    else if (n == 10)\n        return 8;\n    else if (n == 11)\n        return 0;\n    else if (n == 12)\n        return 0;\n    else if (n == 13)\n        return 0;\n    else if (n == 14)\n        return 0;\n    else if (n == 15)\n        return 0;\n    else if (n == 16)\n        return 6;\n    else if (n == 17)\n        return 0;\n    else if (n == 18)\n        return 0;\n    else if (n == 19)\n        return 0;\n    else if (n == 20)\n        return 0;\n    else if (n == 21)\n        return 0;\n    else if (n == 22)\n        return 0;\n    else if (n == 23)\n        return 0;\n    else if (n == 24)\n        return 0;\n    else if (n == 25)\n        return 0;\n    else if (n == 26)\n        return 0;\n    else if (n == 27)\n        return 0;\n    else if (n == 28)\n        return 0;\n    else if (n == 29)\n        return 0;\n    else if (n == 30)\n        return 0;\n    else if (n == 31)\n        return 0;\n    else if (n == 32)\n        return 0;\n    else if (n == 33)\n        return 0;\n    else if (n == 34)\n        return 0;\n    else if (n == 35)\n        return 0;\n    else if (n == 36)\n}\nint main() {\n    auto candidate = last_Digit_Factorial;\n    assert(candidate((4)) == (4));\n    assert(candidate((21)) == (0));\n    assert(candidate((30)) == (0));\n}\n",
      "timestamp": 1666123891,
      "stdout": "",
      "stderr": "/tmp/tmpcmpze6j_.cpp: In function \u2018long int last_Digit_Factorial(long int)\u2019:\n/tmp/tmpcmpze6j_.cpp:78:1: error: expected primary-expression before \u2018}\u2019 token\n   78 | }\n      | ^\n/tmp/tmpcmpze6j_.cpp:78:1: warning: control reaches end of non-void function [-Wreturn-type]\n   78 | }\n      | ^\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the last digit in factorial of a given number.\nlong last_Digit_Factorial(long n) {\n    long fact = 1;\n    for(int i = 1; i <= n; i++) {\n        fact = (fact * i) % 10;\n    }\n    return fact;\n}\nint main() {\n    auto candidate = last_Digit_Factorial;\n    assert(candidate((4)) == (4));\n    assert(candidate((21)) == (0));\n    assert(candidate((30)) == (0));\n}\n",
      "timestamp": 1666123887,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the last digit in factorial of a given number.\nlong last_Digit_Factorial(long n) {\n    if (n < 0)\n        return -1;\n    if (n == 0 || n == 1)\n        return 1;\n    long ans = 1;\n    for (long i = 2; i <= n; i++) {\n        ans = (ans * i) % 10;\n    }\n    return ans;\n}\nint main() {\n    auto candidate = last_Digit_Factorial;\n    assert(candidate((4)) == (4));\n    assert(candidate((21)) == (0));\n    assert(candidate((30)) == (0));\n}\n",
      "timestamp": 1666123891,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the last digit in factorial of a given number.\nlong last_Digit_Factorial(long n) {\n    if (n == 0) {\n        return 1;\n    }\n    long fact = 1;\n    for (long i = 1; i <= n; i++) {\n        fact = (fact * i) % 10;\n    }\n    return fact;\n}\nint main() {\n    auto candidate = last_Digit_Factorial;\n    assert(candidate((4)) == (4));\n    assert(candidate((21)) == (0));\n    assert(candidate((30)) == (0));\n}\n",
      "timestamp": 1666123889,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the last digit in factorial of a given number.\nlong last_Digit_Factorial(long n) {\n    // Write your code here\n    if(n==0 || n==1)\n        return 1;\n    else\n    {\n        long fact=1;\n        for(int i=2;i<=n;i++)\n        {\n            fact=(fact*i)%10;\n        }\n        return fact;\n    }\n}\nint main() {\n    auto candidate = last_Digit_Factorial;\n    assert(candidate((4)) == (4));\n    assert(candidate((21)) == (0));\n    assert(candidate((30)) == (0));\n}\n",
      "timestamp": 1666123891,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the last digit in factorial of a given number.\nlong last_Digit_Factorial(long n) {\n    long fact = 1;\n    for (long i = 1; i <= n; i++) {\n        fact *= i;\n        fact = fact % 10;\n    }\n    return fact;\n}\nint main() {\n    auto candidate = last_Digit_Factorial;\n    assert(candidate((4)) == (4));\n    assert(candidate((21)) == (0));\n    assert(candidate((30)) == (0));\n}\n",
      "timestamp": 1666123891,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the last digit in factorial of a given number.\nlong last_Digit_Factorial(long n) {\n    if(n==0)\n        return 1;\n    else\n        return (n*last_Digit_Factorial(n-1))%10;\n}\nint main() {\n    auto candidate = last_Digit_Factorial;\n    assert(candidate((4)) == (4));\n    assert(candidate((21)) == (0));\n    assert(candidate((30)) == (0));\n}\n",
      "timestamp": 1666123891,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the last digit in factorial of a given number.\nlong last_Digit_Factorial(long n) {\n    long fact = 1;\n    for (int i = 1; i <= n; i++) {\n        fact = (fact * i) % 10;\n    }\n    return fact;\n}\nint main() {\n    auto candidate = last_Digit_Factorial;\n    assert(candidate((4)) == (4));\n    assert(candidate((21)) == (0));\n    assert(candidate((30)) == (0));\n}\n",
      "timestamp": 1665509711,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the last digit in factorial of a given number.\nlong last_Digit_Factorial(long n) {\n    if (n == 0) {\n        return 1;\n    }\n    long ans = 1;\n    for (long i = 1; i <= n; i++) {\n        ans = (ans * i) % 10;\n    }\n    return ans;\n}\nint main() {\n    auto candidate = last_Digit_Factorial;\n    assert(candidate((4)) == (4));\n    assert(candidate((21)) == (0));\n    assert(candidate((30)) == (0));\n}\n",
      "timestamp": 1666123891,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the last digit in factorial of a given number.\nlong last_Digit_Factorial(long n) {\n    // Write your code here\n    if(n==0)\n        return 1;\n    else if(n==1)\n        return 1;\n    else if(n==2)\n        return 2;\n    else if(n==3)\n        return 6;\n    else if(n==4)\n        return 4;\n    else if(n==5)\n        return 2;\n    else if(n==6)\n        return 2;\n    else if(n==7)\n        return 4;\n    else if(n==8)\n        return 2;\n    else if(n==9)\n        return 8;\n    else\n        return 0;\n}\nint main() {\n    auto candidate = last_Digit_Factorial;\n    assert(candidate((4)) == (4));\n    assert(candidate((21)) == (0));\n    assert(candidate((30)) == (0));\n}\n",
      "timestamp": 1666123891,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the last digit in factorial of a given number.\nlong last_Digit_Factorial(long n) {\n    if(n == 0) {\n        return 1;\n    }\n    long last_digit = 1;\n    for(int i = 1; i <= n; i++) {\n        last_digit = (last_digit * i) % 10;\n    }\n    return last_digit;\n}\nint main() {\n    auto candidate = last_Digit_Factorial;\n    assert(candidate((4)) == (4));\n    assert(candidate((21)) == (0));\n    assert(candidate((30)) == (0));\n}\n",
      "timestamp": 1666123891,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the last digit in factorial of a given number.\nlong last_Digit_Factorial(long n) {\n    // Write your code here\n    long fact=1;\n    for(long i=1;i<=n;i++)\n    {\n        fact=(fact*i)%10;\n    }\n    return fact;\n}\nint main() {\n    auto candidate = last_Digit_Factorial;\n    assert(candidate((4)) == (4));\n    assert(candidate((21)) == (0));\n    assert(candidate((30)) == (0));\n}\n",
      "timestamp": 1666123887,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the last digit in factorial of a given number.\nlong last_Digit_Factorial(long n) {\n    if (n < 0)\n        return -1;\n    if (n == 0)\n        return 1;\n    long res = 1;\n    for (long i = 2; i <= n; i++)\n        res = (res * i) % 10;\n    return res;\n}\nint main() {\n    auto candidate = last_Digit_Factorial;\n    assert(candidate((4)) == (4));\n    assert(candidate((21)) == (0));\n    assert(candidate((30)) == (0));\n}\n",
      "timestamp": 1665509711,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the last digit in factorial of a given number.\nlong last_Digit_Factorial(long n) {\n    long fact = 1;\n    for (int i = 1; i <= n; i++) {\n        fact = fact * i;\n    }\n    return fact % 10;\n}\nint main() {\n    auto candidate = last_Digit_Factorial;\n    assert(candidate((4)) == (4));\n    assert(candidate((21)) == (0));\n    assert(candidate((30)) == (0));\n}\n",
      "timestamp": 1666123887,
      "stdout": "",
      "stderr": "tmpcv_rj7hd: /tmp/tmpcv_rj7hd.cpp:14: int main(): Assertion `candidate((21)) == (0)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the last digit in factorial of a given number.\nlong last_Digit_Factorial(long n) {\n    // Write your code here\n    long fact=1;\n    for(long i=1;i<=n;i++)\n    {\n        fact=fact*i;\n    }\n    return fact%10;\n}\nint main() {\n    auto candidate = last_Digit_Factorial;\n    assert(candidate((4)) == (4));\n    assert(candidate((21)) == (0));\n    assert(candidate((30)) == (0));\n}\n",
      "timestamp": 1666123891,
      "stdout": "",
      "stderr": "tmpnef1op7q: /tmp/tmpnef1op7q.cpp:16: int main(): Assertion `candidate((21)) == (0)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the last digit in factorial of a given number.\nlong last_Digit_Factorial(long n) {\n    long fact = 1;\n    for(int i = 1; i <= n; i++) {\n        fact = fact * i;\n        fact = fact % 10;\n    }\n    return fact;\n}\nint main() {\n    auto candidate = last_Digit_Factorial;\n    assert(candidate((4)) == (4));\n    assert(candidate((21)) == (0));\n    assert(candidate((30)) == (0));\n}\n",
      "timestamp": 1666123891,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the last digit in factorial of a given number.\nlong last_Digit_Factorial(long n) {\n    // Write your code here\n    long fact=1;\n    for(int i=1;i<=n;i++)\n    {\n        fact=fact*i;\n    }\n    return fact%10;\n}\nint main() {\n    auto candidate = last_Digit_Factorial;\n    assert(candidate((4)) == (4));\n    assert(candidate((21)) == (0));\n    assert(candidate((30)) == (0));\n}\n",
      "timestamp": 1665509712,
      "stdout": "",
      "stderr": "tmpqtkup2f7: /tmp/tmpqtkup2f7.cpp:16: int main(): Assertion `candidate((21)) == (0)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the last digit in factorial of a given number.\nlong last_Digit_Factorial(long n) {\n    if (n < 0)\n        return -1;\n    if (n == 0)\n        return 1;\n    long fact = 1;\n    for (long i = 1; i <= n; i++) {\n        fact = fact * i;\n    }\n    return fact % 10;\n}\nint main() {\n    auto candidate = last_Digit_Factorial;\n    assert(candidate((4)) == (4));\n    assert(candidate((21)) == (0));\n    assert(candidate((30)) == (0));\n}\n",
      "timestamp": 1665509711,
      "stdout": "",
      "stderr": "tmpvk5i1_va: /tmp/tmpvk5i1_va.cpp:18: int main(): Assertion `candidate((21)) == (0)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the last digit in factorial of a given number.\nlong last_Digit_Factorial(long n) {\n    // Write your code here\n    long fact=1;\n    if(n==0 || n==1)\n        return 1;\n    else\n    {\n        for(int i=2;i<=n;i++)\n        {\n            fact=fact*i;\n        }\n    }\n    return fact%10;\n}\nint main() {\n    auto candidate = last_Digit_Factorial;\n    assert(candidate((4)) == (4));\n    assert(candidate((21)) == (0));\n    assert(candidate((30)) == (0));\n}\n",
      "timestamp": 1666123891,
      "stdout": "",
      "stderr": "tmp4ignmo_8: /tmp/tmp4ignmo_8.cpp:21: int main(): Assertion `candidate((21)) == (0)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the last digit in factorial of a given number.\nlong last_Digit_Factorial(long n) {\n    if (n < 0)\n        return -1;\n    if (n == 0 || n == 1)\n        return 1;\n    long res = 1;\n    for (long i = 2; i <= n; i++)\n        res = (res * i) % 10;\n    return res;\n}\nint main() {\n    auto candidate = last_Digit_Factorial;\n    assert(candidate((4)) == (4));\n    assert(candidate((21)) == (0));\n    assert(candidate((30)) == (0));\n}\n",
      "timestamp": 1666123891,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the last digit in factorial of a given number.\nlong last_Digit_Factorial(long n) {\n    if (n < 0)\n        return -1;\n    if (n == 0 || n == 1)\n        return 1;\n    long res = 1;\n    for (long i = 2; i <= n; i++)\n        res = (res * i) % 10;\n    return res;\n}\nint main() {\n    auto candidate = last_Digit_Factorial;\n    assert(candidate((4)) == (4));\n    assert(candidate((21)) == (0));\n    assert(candidate((30)) == (0));\n}\n",
      "timestamp": 1666123891,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the last digit in factorial of a given number.\nlong last_Digit_Factorial(long n) {\n    // Write your code here\n    if(n==0)\n        return 1;\n    else if(n==1)\n        return 1;\n    else if(n==2)\n        return 2;\n    else if(n==3)\n        return 6;\n    else if(n==4)\n        return 4;\n    else if(n==5)\n        return 2;\n    else if(n==6)\n        return 2;\n    else if(n==7)\n        return 4;\n    else if(n==8)\n        return 2;\n    else if(n==9)\n        return 8;\n    else if(n==10)\n        return 8;\n    else if(n==11)\n        return 8;\n    else if(n==12)\n        return 6;\n    else if(n==13)\n        return 8;\n    else if(n==14)\n        return 8;\n    else if(n==15)\n        return 8;\n    else if(n==16)\n        return 6;\n    else if(n==17)\n        return 8;\n    else if(n==18)\n        return 8;\n    else if(n==19)\n        return 8;\n    else if(n==20)\n        return 6;\n    else if(n==21)\n        return 8;\n    else if(n==22)\n        return 8;\n    else if(n==23)\n        return 8;\n    else if(n==24)\n        return 2;\n    else if(n==25)\n        return 2;\n    else if(n==26)\n        return 2;\n    else if(n==27)\n        return 2;\n    else if(n==28)\n        return 2;\n    else if(n==29)\n        return 2;\n    else if(n==30)\n        return 2;\n    else if(n==31)\n        return 2;\n    else if(n==32)\n        return 2;\n    else if(n==33)\n        return 2;\n    else if(n==34)\n        return 2;\n    else if(n==35)\n        return 2;\n   \n}\nint main() {\n    auto candidate = last_Digit_Factorial;\n    assert(candidate((4)) == (4));\n    assert(candidate((21)) == (0));\n    assert(candidate((30)) == (0));\n}\n",
      "timestamp": 1666123891,
      "stdout": "",
      "stderr": "tmpjsdozdjd: /tmp/tmpjsdozdjd.cpp:83: int main(): Assertion `candidate((21)) == (0)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the last digit in factorial of a given number.\nlong last_Digit_Factorial(long n) {\n    // Write your code here\n    if(n==0)\n        return 1;\n    else if(n==1)\n        return 1;\n    else if(n==2)\n        return 2;\n    else if(n==3)\n        return 6;\n    else if(n==4)\n        return 4;\n    else if(n==5)\n        return 2;\n    else if(n==6)\n        return 2;\n    else if(n==7)\n        return 4;\n    else if(n==8)\n        return 2;\n    else if(n==9)\n        return 8;\n    else if(n==10)\n        return 8;\n    else if(n==11)\n        return 0;\n    else if(n==12)\n        return 0;\n    else if(n==13)\n        return 0;\n    else if(n==14)\n        return 0;\n    else if(n==15)\n        return 6;\n    else if(n==16)\n        return 6;\n    else if(n==17)\n        return 2;\n    else if(n==18)\n        return 6;\n    else if(n==19)\n        return 2;\n    else if(n==20)\n        return 2;\n    else if(n==21)\n        return 4;\n    else if(n==22)\n        return 2;\n    else if(n==23)\n        return 8;\n    else if(n==24)\n        return 4;\n    else if(n==25)\n        return 0;\n    else if(n==26)\n        return 0;\n    else if(n==27)\n        return 0;\n    else if(n==28)\n        return 0;\n    else if(n==29)\n        return 0;\n    else if(n==30)\n        return 0;\n    else if(n==31)\n        return 0;\n    else if(n==32)\n        return 0;\n    else if(n==33)\n        return 0;\n    else if(n==34)\n        return 0;\n    else if(n==35)\n        return 0;\n   \n}\nint main() {\n    auto candidate = last_Digit_Factorial;\n    assert(candidate((4)) == (4));\n    assert(candidate((21)) == (0));\n    assert(candidate((30)) == (0));\n}\n",
      "timestamp": 1666123891,
      "stdout": "",
      "stderr": "tmp2drmdaij: /tmp/tmp2drmdaij.cpp:83: int main(): Assertion `candidate((21)) == (0)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the last digit in factorial of a given number.\nlong last_Digit_Factorial(long n) {\n    if (n < 0)\n        return -1;\n    if (n == 0)\n        return 1;\n    long res = 1;\n    for (long i = 2; i <= n; i++)\n        res = (res * i) % 10;\n    return res;\n}\nint main() {\n    auto candidate = last_Digit_Factorial;\n    assert(candidate((4)) == (4));\n    assert(candidate((21)) == (0));\n    assert(candidate((30)) == (0));\n}\n",
      "timestamp": 1665509711,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the last digit in factorial of a given number.\nlong last_Digit_Factorial(long n) {\n    if(n == 0 || n == 1)\n        return 1;\n    long last_digit = 1;\n    for(long i = 2; i <= n; i++) {\n        last_digit = (last_digit * i) % 10;\n    }\n    return last_digit;\n}\nint main() {\n    auto candidate = last_Digit_Factorial;\n    assert(candidate((4)) == (4));\n    assert(candidate((21)) == (0));\n    assert(candidate((30)) == (0));\n}\n",
      "timestamp": 1666123891,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the last digit in factorial of a given number.\nlong last_Digit_Factorial(long n) {\n    // Write your code here\n    long fact=1;\n    for(int i=1;i<=n;i++){\n        fact=fact*i;\n    }\n    return fact%10;\n}\nint main() {\n    auto candidate = last_Digit_Factorial;\n    assert(candidate((4)) == (4));\n    assert(candidate((21)) == (0));\n    assert(candidate((30)) == (0));\n}\n",
      "timestamp": 1666123887,
      "stdout": "",
      "stderr": "tmp29a0zq_r: /tmp/tmp29a0zq_r.cpp:15: int main(): Assertion `candidate((21)) == (0)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the last digit in factorial of a given number.\nlong last_Digit_Factorial(long n) {\n    // Write your code here\n    long fact=1;\n    for(long i=1;i<=n;i++)\n    {\n        fact=(fact*i)%10;\n    }\n    return fact;\n}\nint main() {\n    auto candidate = last_Digit_Factorial;\n    assert(candidate((4)) == (4));\n    assert(candidate((21)) == (0));\n    assert(candidate((30)) == (0));\n}\n",
      "timestamp": 1666123887,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the last digit in factorial of a given number.\nlong last_Digit_Factorial(long n) {\n    if (n < 0)\n        return -1;\n    if (n == 0)\n        return 1;\n    long res = 1;\n    for (long i = 2; i <= n; i++)\n        res = (res * i) % 10;\n    return res;\n}\nint main() {\n    auto candidate = last_Digit_Factorial;\n    assert(candidate((4)) == (4));\n    assert(candidate((21)) == (0));\n    assert(candidate((30)) == (0));\n}\n",
      "timestamp": 1665509711,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the last digit in factorial of a given number.\nlong last_Digit_Factorial(long n) {\n    // Write your code here\n    long fact=1;\n    for(int i=1;i<=n;i++)\n    {\n        fact=fact*i;\n    }\n    return fact%10;\n}\nint main() {\n    auto candidate = last_Digit_Factorial;\n    assert(candidate((4)) == (4));\n    assert(candidate((21)) == (0));\n    assert(candidate((30)) == (0));\n}\n",
      "timestamp": 1665509712,
      "stdout": "",
      "stderr": "tmpqtkup2f7: /tmp/tmpqtkup2f7.cpp:16: int main(): Assertion `candidate((21)) == (0)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the last digit in factorial of a given number.\nlong last_Digit_Factorial(long n) {\n    // Write your code here\n    long fact = 1;\n    for(int i = 1; i <= n; i++) {\n        fact = fact * i;\n    }\n    return fact % 10;\n}\nint main() {\n    auto candidate = last_Digit_Factorial;\n    assert(candidate((4)) == (4));\n    assert(candidate((21)) == (0));\n    assert(candidate((30)) == (0));\n}\n",
      "timestamp": 1666123891,
      "stdout": "",
      "stderr": "tmp34haq6i3: /tmp/tmp34haq6i3.cpp:15: int main(): Assertion `candidate((21)) == (0)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the last digit in factorial of a given number.\nlong last_Digit_Factorial(long n) {\n    if (n < 0)\n        return -1;\n    if (n == 0)\n        return 1;\n    long res = 1;\n    for (long i = 2; i <= n; i++)\n        res = (res * i) % 10;\n    return res;\n}\nint main() {\n    auto candidate = last_Digit_Factorial;\n    assert(candidate((4)) == (4));\n    assert(candidate((21)) == (0));\n    assert(candidate((30)) == (0));\n}\n",
      "timestamp": 1665509711,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the last digit in factorial of a given number.\nlong last_Digit_Factorial(long n) {\n    // Write your code here\n    long fact=1;\n    for(int i=1;i<=n;i++)\n    {\n        fact=fact*i;\n    }\n    return fact%10;\n}\nint main() {\n    auto candidate = last_Digit_Factorial;\n    assert(candidate((4)) == (4));\n    assert(candidate((21)) == (0));\n    assert(candidate((30)) == (0));\n}\n",
      "timestamp": 1665509712,
      "stdout": "",
      "stderr": "tmpqtkup2f7: /tmp/tmpqtkup2f7.cpp:16: int main(): Assertion `candidate((21)) == (0)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the last digit in factorial of a given number.\nlong last_Digit_Factorial(long n) {\n    if (n < 0)\n        return -1;\n    if (n == 0 || n == 1)\n        return 1;\n    long res = 1;\n    for (long i = 2; i <= n; i++)\n        res = (res * i) % 10;\n    return res;\n}\nint main() {\n    auto candidate = last_Digit_Factorial;\n    assert(candidate((4)) == (4));\n    assert(candidate((21)) == (0));\n    assert(candidate((30)) == (0));\n}\n",
      "timestamp": 1666123891,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the last digit in factorial of a given number.\nlong last_Digit_Factorial(long n) {\n    // Write your code here\n    long fact = 1;\n    for (long i = 1; i <= n; i++) {\n        fact = fact * i;\n    }\n    return fact % 10;\n}\nint main() {\n    auto candidate = last_Digit_Factorial;\n    assert(candidate((4)) == (4));\n    assert(candidate((21)) == (0));\n    assert(candidate((30)) == (0));\n}\n",
      "timestamp": 1666123891,
      "stdout": "",
      "stderr": "tmphhtwfhuu: /tmp/tmphhtwfhuu.cpp:15: int main(): Assertion `candidate((21)) == (0)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the last digit in factorial of a given number.\nlong last_Digit_Factorial(long n) {\n    long fact = 1;\n    for (int i = 1; i <= n; i++) {\n        fact = fact * i;\n    }\n    return fact % 10;\n}\nint main() {\n    auto candidate = last_Digit_Factorial;\n    assert(candidate((4)) == (4));\n    assert(candidate((21)) == (0));\n    assert(candidate((30)) == (0));\n}\n",
      "timestamp": 1666123887,
      "stdout": "",
      "stderr": "tmpcv_rj7hd: /tmp/tmpcv_rj7hd.cpp:14: int main(): Assertion `candidate((21)) == (0)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the last digit in factorial of a given number.\nlong last_Digit_Factorial(long n) {\n    if(n==0)\n        return 1;\n    else if(n==1)\n        return 1;\n    else if(n==2)\n        return 2;\n    else if(n==3)\n        return 6;\n    else if(n==4)\n        return 4;\n    else if(n==5)\n        return 0;\n    else if(n==6)\n        return 0;\n    else if(n==7)\n        return 0;\n    else if(n==8)\n        return 0;\n    else if(n==9)\n        return 0;\n    else if(n==10)\n        return 0;\n    else if(n==11)\n        return 0;\n    else if(n==12)\n        return 0;\n    else if(n==13)\n        return 0;\n    else if(n==14)\n        return 0;\n    else if(n==15)\n        return 0;\n    else if(n==16)\n        return 0;\n    else if(n==17)\n        return 0;\n    else if(n==18)\n        return 0;\n    else if(n==19)\n        return 0;\n    else if(n==20)\n        return 0;\n    else if(n==21)\n        return 0;\n    else if(n==22)\n        return 0;\n    else if(n==23)\n        return 0;\n    else if(n==24)\n        return 0;\n    else if(n==25)\n        return 0;\n    else if(n==26)\n        return 0;\n    else if(n==27)\n        return 0;\n    else if(n==28)\n        return 0;\n    else if(n==29)\n        return 0;\n    else if(n==30)\n        return 0;\n    else if(n==31)\n        return 0;\n    else if(n==32)\n        return 0;\n    else if(n==33)\n        return 0;\n    else if(n==34)\n        return 0;\n    else if(n==35)\n        return 0;\n    else if(n==36)\n}\nint main() {\n    auto candidate = last_Digit_Factorial;\n    assert(candidate((4)) == (4));\n    assert(candidate((21)) == (0));\n    assert(candidate((30)) == (0));\n}\n",
      "timestamp": 1665509711,
      "stdout": "",
      "stderr": "/tmp/tmpdelmxv3z.cpp: In function \u2018long int last_Digit_Factorial(long int)\u2019:\n/tmp/tmpdelmxv3z.cpp:78:1: error: expected primary-expression before \u2018}\u2019 token\n   78 | }\n      | ^\n/tmp/tmpdelmxv3z.cpp:78:1: warning: control reaches end of non-void function [-Wreturn-type]\n   78 | }\n      | ^\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the last digit in factorial of a given number.\nlong last_Digit_Factorial(long n) {\n    long fact = 1;\n    for (long i = 1; i <= n; i++) {\n        fact = (fact * i) % 10;\n    }\n    return fact;\n}\nint main() {\n    auto candidate = last_Digit_Factorial;\n    assert(candidate((4)) == (4));\n    assert(candidate((21)) == (0));\n    assert(candidate((30)) == (0));\n}\n",
      "timestamp": 1666123889,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the last digit in factorial of a given number.\nlong last_Digit_Factorial(long n) {\n    if(n==0)\n        return 1;\n    else if(n==1)\n        return 1;\n    else if(n==2)\n        return 2;\n    else if(n==3)\n        return 6;\n    else if(n==4)\n        return 4;\n    else if(n==5)\n        return 0;\n    else if(n==6)\n        return 0;\n    else if(n==7)\n        return 0;\n    else if(n==8)\n        return 0;\n    else if(n==9)\n        return 0;\n    else if(n==10)\n        return 0;\n    else if(n==11)\n        return 0;\n    else if(n==12)\n        return 0;\n    else if(n==13)\n        return 0;\n    else if(n==14)\n        return 0;\n    else if(n==15)\n        return 0;\n    else if(n==16)\n        return 0;\n    else if(n==17)\n        return 0;\n    else if(n==18)\n        return 0;\n    else if(n==19)\n        return 0;\n    else if(n==20)\n        return 0;\n    else if(n==21)\n        return 0;\n    else if(n==22)\n        return 0;\n    else if(n==23)\n        return 0;\n    else if(n==24)\n        return 0;\n    else if(n==25)\n        return 0;\n    else if(n==26)\n        return 0;\n    else if(n==27)\n        return 0;\n    else if(n==28)\n        return 0;\n    else if(n==29)\n        return 0;\n    else if(n==30)\n        return 0;\n    else if(n==31)\n        return 0;\n    else if(n==32)\n        return 0;\n    else if(n==33)\n        return 0;\n    else if(n==34)\n        return 0;\n    else if(n==35)\n        return 0;\n    else if(n==36)\n}\nint main() {\n    auto candidate = last_Digit_Factorial;\n    assert(candidate((4)) == (4));\n    assert(candidate((21)) == (0));\n    assert(candidate((30)) == (0));\n}\n",
      "timestamp": 1665509711,
      "stdout": "",
      "stderr": "/tmp/tmpdelmxv3z.cpp: In function \u2018long int last_Digit_Factorial(long int)\u2019:\n/tmp/tmpdelmxv3z.cpp:78:1: error: expected primary-expression before \u2018}\u2019 token\n   78 | }\n      | ^\n/tmp/tmpdelmxv3z.cpp:78:1: warning: control reaches end of non-void function [-Wreturn-type]\n   78 | }\n      | ^\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the last digit in factorial of a given number.\nlong last_Digit_Factorial(long n) {\n    long fact=1;\n    for(long i=1;i<=n;i++)\n    {\n        fact=(fact*i)%10;\n    }\n    return fact;\n}\nint main() {\n    auto candidate = last_Digit_Factorial;\n    assert(candidate((4)) == (4));\n    assert(candidate((21)) == (0));\n    assert(candidate((30)) == (0));\n}\n",
      "timestamp": 1666123889,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the last digit in factorial of a given number.\nlong last_Digit_Factorial(long n) {\n    long fact = 1;\n    for (int i = 1; i <= n; i++) {\n        fact = fact * i;\n    }\n    return fact % 10;\n}\nint main() {\n    auto candidate = last_Digit_Factorial;\n    assert(candidate((4)) == (4));\n    assert(candidate((21)) == (0));\n    assert(candidate((30)) == (0));\n}\n",
      "timestamp": 1666123887,
      "stdout": "",
      "stderr": "tmpcv_rj7hd: /tmp/tmpcv_rj7hd.cpp:14: int main(): Assertion `candidate((21)) == (0)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the last digit in factorial of a given number.\nlong last_Digit_Factorial(long n) {\n    long fact = 1;\n    for(int i = 1; i <= n; i++) {\n        fact = fact * i;\n    }\n    return fact % 10;\n}\nint main() {\n    auto candidate = last_Digit_Factorial;\n    assert(candidate((4)) == (4));\n    assert(candidate((21)) == (0));\n    assert(candidate((30)) == (0));\n}\n",
      "timestamp": 1666123891,
      "stdout": "",
      "stderr": "tmpne77ex4l: /tmp/tmpne77ex4l.cpp:14: int main(): Assertion `candidate((21)) == (0)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the last digit in factorial of a given number.\nlong last_Digit_Factorial(long n) {\n    if(n == 0) {\n        return 1;\n    }\n    long fact = 1;\n    for(int i = 1; i <= n; i++) {\n        fact = fact * i;\n    }\n    return fact % 10;\n}\nint main() {\n    auto candidate = last_Digit_Factorial;\n    assert(candidate((4)) == (4));\n    assert(candidate((21)) == (0));\n    assert(candidate((30)) == (0));\n}\n",
      "timestamp": 1666123891,
      "stdout": "",
      "stderr": "tmpy87ysgvx: /tmp/tmpy87ysgvx.cpp:17: int main(): Assertion `candidate((21)) == (0)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the last digit in factorial of a given number.\nlong last_Digit_Factorial(long n) {\n    long fact=1;\n    for(long i=1;i<=n;i++)\n    {\n        fact=fact*i;\n        fact=fact%10;\n    }\n    return fact;\n}\nint main() {\n    auto candidate = last_Digit_Factorial;\n    assert(candidate((4)) == (4));\n    assert(candidate((21)) == (0));\n    assert(candidate((30)) == (0));\n}\n",
      "timestamp": 1666123891,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the last digit in factorial of a given number.\nlong last_Digit_Factorial(long n) {\n    long fact = 1;\n    for(int i = 1; i <= n; i++) {\n        fact = fact * i;\n    }\n    return fact % 10;\n}\nint main() {\n    auto candidate = last_Digit_Factorial;\n    assert(candidate((4)) == (4));\n    assert(candidate((21)) == (0));\n    assert(candidate((30)) == (0));\n}\n",
      "timestamp": 1666123891,
      "stdout": "",
      "stderr": "tmpne77ex4l: /tmp/tmpne77ex4l.cpp:14: int main(): Assertion `candidate((21)) == (0)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the last digit in factorial of a given number.\nlong last_Digit_Factorial(long n) {\n    long fact = 1;\n    for (long i = 1; i <= n; i++) {\n        fact = (fact * i) % 10;\n    }\n    return fact;\n}\nint main() {\n    auto candidate = last_Digit_Factorial;\n    assert(candidate((4)) == (4));\n    assert(candidate((21)) == (0));\n    assert(candidate((30)) == (0));\n}\n",
      "timestamp": 1666123889,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the last digit in factorial of a given number.\nlong last_Digit_Factorial(long n) {\n    if(n==0 || n==1)\n        return 1;\n    else\n        return (n*last_Digit_Factorial(n-1))%10;\n}\nint main() {\n    auto candidate = last_Digit_Factorial;\n    assert(candidate((4)) == (4));\n    assert(candidate((21)) == (0));\n    assert(candidate((30)) == (0));\n}\n",
      "timestamp": 1666123891,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the last digit in factorial of a given number.\nlong last_Digit_Factorial(long n) {\n    long fact = 1;\n    for(long i = 1; i <= n; i++) {\n        fact = (fact * i) % 10;\n    }\n    return fact;\n}\nint main() {\n    auto candidate = last_Digit_Factorial;\n    assert(candidate((4)) == (4));\n    assert(candidate((21)) == (0));\n    assert(candidate((30)) == (0));\n}\n",
      "timestamp": 1666123887,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the last digit in factorial of a given number.\nlong last_Digit_Factorial(long n) {\n    // Write your code here\n    long fact = 1;\n    for(long i = 1; i <= n; i++)\n    {\n        fact = (fact * i) % 10;\n    }\n    return fact;\n}\nint main() {\n    auto candidate = last_Digit_Factorial;\n    assert(candidate((4)) == (4));\n    assert(candidate((21)) == (0));\n    assert(candidate((30)) == (0));\n}\n",
      "timestamp": 1665509711,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the last digit in factorial of a given number.\nlong last_Digit_Factorial(long n) {\n    long fact = 1;\n    for (long i = 1; i <= n; i++) {\n        fact = (fact * i) % 10;\n    }\n    return fact;\n}\nint main() {\n    auto candidate = last_Digit_Factorial;\n    assert(candidate((4)) == (4));\n    assert(candidate((21)) == (0));\n    assert(candidate((30)) == (0));\n}\n",
      "timestamp": 1666123889,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the last digit in factorial of a given number.\nlong last_Digit_Factorial(long n) {\n    if(n==0)\n        return 1;\n    else if(n==1)\n        return 1;\n    else if(n==2)\n        return 2;\n    else if(n==3)\n        return 6;\n    else if(n==4)\n        return 4;\n    else if(n==5)\n        return 0;\n    else if(n==6)\n        return 0;\n    else if(n==7)\n        return 0;\n    else if(n==8)\n        return 0;\n    else if(n==9)\n        return 0;\n    else if(n==10)\n        return 0;\n    else if(n==11)\n        return 0;\n    else if(n==12)\n        return 0;\n    else if(n==13)\n        return 0;\n    else if(n==14)\n        return 0;\n    else if(n==15)\n        return 6;\n    else if(n==16)\n        return 8;\n    else if(n==17)\n        return 4;\n    else if(n==18)\n        return 2;\n    else if(n==19)\n        return 2;\n    else if(n==20)\n        return 0;\n    else if(n==21)\n        return 0;\n    else if(n==22)\n        return 0;\n    else if(n==23)\n        return 0;\n    else if(n==24)\n        return 0;\n    else if(n==25)\n        return 0;\n    else if(n==26)\n        return 0;\n    else if(n==27)\n        return 0;\n    else if(n==28)\n        return 0;\n    else if(n==29)\n        return 0;\n    else if(n==30)\n        return 0;\n    else if(n==31)\n        return 0;\n    else if(n==32)\n        return 0;\n    else if(n==33)\n        return 0;\n    else if(n==34)\n        return 0;\n    else if(n==35)\n        return 0;\n    else if(n==36)\n}\nint main() {\n    auto candidate = last_Digit_Factorial;\n    assert(candidate((4)) == (4));\n    assert(candidate((21)) == (0));\n    assert(candidate((30)) == (0));\n}\n",
      "timestamp": 1666123891,
      "stdout": "",
      "stderr": "/tmp/tmpql4mn5op.cpp: In function \u2018long int last_Digit_Factorial(long int)\u2019:\n/tmp/tmpql4mn5op.cpp:78:1: error: expected primary-expression before \u2018}\u2019 token\n   78 | }\n      | ^\n/tmp/tmpql4mn5op.cpp:78:1: warning: control reaches end of non-void function [-Wreturn-type]\n   78 | }\n      | ^\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the last digit in factorial of a given number.\nlong last_Digit_Factorial(long n) {\n    long fact = 1;\n    for(long i = 1; i <= n; i++) {\n        fact = (fact * i) % 10;\n    }\n    return fact;\n}\nint main() {\n    auto candidate = last_Digit_Factorial;\n    assert(candidate((4)) == (4));\n    assert(candidate((21)) == (0));\n    assert(candidate((30)) == (0));\n}\n",
      "timestamp": 1666123887,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the last digit in factorial of a given number.\nlong last_Digit_Factorial(long n) {\n    assert(n >= 0);\n    if (n == 0) {\n        return 1;\n    }\n    long fact = 1;\n    for (long i = 1; i <= n; i++) {\n        fact = (fact * i) % 10;\n    }\n    return fact;\n}\nint main() {\n    auto candidate = last_Digit_Factorial;\n    assert(candidate((4)) == (4));\n    assert(candidate((21)) == (0));\n    assert(candidate((30)) == (0));\n}\n",
      "timestamp": 1666123891,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the last digit in factorial of a given number.\nlong last_Digit_Factorial(long n) {\n    long last_digit = 1;\n    for (int i = 1; i <= n; i++) {\n        last_digit = (last_digit * i) % 10;\n    }\n    return last_digit;\n}\nint main() {\n    auto candidate = last_Digit_Factorial;\n    assert(candidate((4)) == (4));\n    assert(candidate((21)) == (0));\n    assert(candidate((30)) == (0));\n}\n",
      "timestamp": 1666123889,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the last digit in factorial of a given number.\nlong last_Digit_Factorial(long n) {\n    // Write your code here\n    long fact=1;\n    for(int i=1;i<=n;i++){\n        fact=fact*i;\n    }\n    return fact%10;\n}\nint main() {\n    auto candidate = last_Digit_Factorial;\n    assert(candidate((4)) == (4));\n    assert(candidate((21)) == (0));\n    assert(candidate((30)) == (0));\n}\n",
      "timestamp": 1666123887,
      "stdout": "",
      "stderr": "tmp29a0zq_r: /tmp/tmp29a0zq_r.cpp:15: int main(): Assertion `candidate((21)) == (0)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the last digit in factorial of a given number.\nlong last_Digit_Factorial(long n) {\n    // Write your code here\n    if(n<=1)\n        return 1;\n    else\n        return (n*last_Digit_Factorial(n-1))%10;\n}\nint main() {\n    auto candidate = last_Digit_Factorial;\n    assert(candidate((4)) == (4));\n    assert(candidate((21)) == (0));\n    assert(candidate((30)) == (0));\n}\n",
      "timestamp": 1666123892,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the last digit in factorial of a given number.\nlong last_Digit_Factorial(long n) {\n    // Write your code here\n    long fact = 1;\n    for(long i=1;i<=n;i++){\n        fact = (fact*i)%10;\n    }\n    return fact;\n}\nint main() {\n    auto candidate = last_Digit_Factorial;\n    assert(candidate((4)) == (4));\n    assert(candidate((21)) == (0));\n    assert(candidate((30)) == (0));\n}\n",
      "timestamp": 1666123893,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the last digit in factorial of a given number.\nlong last_Digit_Factorial(long n) {\n    long fact = 1;\n    for (long i = 1; i <= n; i++) {\n        fact = (fact * i) % 10;\n    }\n    return fact;\n}\nint main() {\n    auto candidate = last_Digit_Factorial;\n    assert(candidate((4)) == (4));\n    assert(candidate((21)) == (0));\n    assert(candidate((30)) == (0));\n}\n",
      "timestamp": 1666123889,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the last digit in factorial of a given number.\nlong last_Digit_Factorial(long n) {\n    long fact = 1;\n    for (long i = 1; i <= n; i++) {\n        fact = fact * i;\n    }\n    return fact % 10;\n}\nint main() {\n    auto candidate = last_Digit_Factorial;\n    assert(candidate((4)) == (4));\n    assert(candidate((21)) == (0));\n    assert(candidate((30)) == (0));\n}\n",
      "timestamp": 1665509711,
      "stdout": "",
      "stderr": "tmpa9mo73v1: /tmp/tmpa9mo73v1.cpp:14: int main(): Assertion `candidate((21)) == (0)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the last digit in factorial of a given number.\nlong last_Digit_Factorial(long n) {\n    if(n==0)\n        return 1;\n    else\n        return (n*last_Digit_Factorial(n-1))%10;\n}\nint main() {\n    auto candidate = last_Digit_Factorial;\n    assert(candidate((4)) == (4));\n    assert(candidate((21)) == (0));\n    assert(candidate((30)) == (0));\n}\n",
      "timestamp": 1666123891,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the last digit in factorial of a given number.\nlong last_Digit_Factorial(long n) {\n    if(n == 0) {\n        return 1;\n    }\n    long last_digit = 1;\n    for(long i = 1; i <= n; i++) {\n        last_digit = (last_digit * i) % 10;\n    }\n    return last_digit;\n}\nint main() {\n    auto candidate = last_Digit_Factorial;\n    assert(candidate((4)) == (4));\n    assert(candidate((21)) == (0));\n    assert(candidate((30)) == (0));\n}\n",
      "timestamp": 1666123887,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the last digit in factorial of a given number.\nlong last_Digit_Factorial(long n) {\n    if (n < 0)\n        return -1;\n    if (n == 0)\n        return 1;\n    long res = 1;\n    for (int i = 2; i <= n; i++)\n        res = (res * i) % 10;\n    return res;\n}\nint main() {\n    auto candidate = last_Digit_Factorial;\n    assert(candidate((4)) == (4));\n    assert(candidate((21)) == (0));\n    assert(candidate((30)) == (0));\n}\n",
      "timestamp": 1666123893,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the last digit in factorial of a given number.\nlong last_Digit_Factorial(long n) {\n    if (n < 0)\n        return -1;\n    if (n == 0 || n == 1)\n        return 1;\n    long res = 1;\n    for (long i = 2; i <= n; i++)\n        res = (res * i) % 10;\n    return res;\n}\nint main() {\n    auto candidate = last_Digit_Factorial;\n    assert(candidate((4)) == (4));\n    assert(candidate((21)) == (0));\n    assert(candidate((30)) == (0));\n}\n",
      "timestamp": 1666123891,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the last digit in factorial of a given number.\nlong last_Digit_Factorial(long n) {\n    // Write your code here\n    long fact=1;\n    for(long i=1;i<=n;i++)\n    {\n        fact=fact*i;\n    }\n    return fact%10;\n}\nint main() {\n    auto candidate = last_Digit_Factorial;\n    assert(candidate((4)) == (4));\n    assert(candidate((21)) == (0));\n    assert(candidate((30)) == (0));\n}\n",
      "timestamp": 1666123891,
      "stdout": "",
      "stderr": "tmpnef1op7q: /tmp/tmpnef1op7q.cpp:16: int main(): Assertion `candidate((21)) == (0)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the last digit in factorial of a given number.\nlong last_Digit_Factorial(long n) {\n    // Write your code here\n    if (n == 0) {\n        return 1;\n    }\n    long fact = 1;\n    for (int i = 1; i <= n; i++) {\n        fact = (fact * i) % 10;\n    }\n    return fact;\n}\nint main() {\n    auto candidate = last_Digit_Factorial;\n    assert(candidate((4)) == (4));\n    assert(candidate((21)) == (0));\n    assert(candidate((30)) == (0));\n}\n",
      "timestamp": 1666123893,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the last digit in factorial of a given number.\nlong last_Digit_Factorial(long n) {\n    if(n==0)\n        return 1;\n    if(n==1)\n        return 1;\n    long fact=1;\n    for(long i=2;i<=n;i++)\n        fact=(fact*i)%10;\n    return fact;\n}\nint main() {\n    auto candidate = last_Digit_Factorial;\n    assert(candidate((4)) == (4));\n    assert(candidate((21)) == (0));\n    assert(candidate((30)) == (0));\n}\n",
      "timestamp": 1666123893,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the last digit in factorial of a given number.\nlong last_Digit_Factorial(long n) {\n    if(n == 0) {\n        return 1;\n    }\n    if(n == 1) {\n        return 1;\n    }\n    long fact = 1;\n    for(long i = 2; i <= n; i++) {\n        fact = fact * i;\n        fact = fact % 10;\n    }\n    return fact;\n}\nint main() {\n    auto candidate = last_Digit_Factorial;\n    assert(candidate((4)) == (4));\n    assert(candidate((21)) == (0));\n    assert(candidate((30)) == (0));\n}\n",
      "timestamp": 1666123893,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the last digit in factorial of a given number.\nlong last_Digit_Factorial(long n) {\n    if (n == 0) {\n        return 1;\n    }\n    long last_digit = 1;\n    for (long i = 1; i <= n; i++) {\n        last_digit = (last_digit * i) % 10;\n    }\n    return last_digit;\n}\nint main() {\n    auto candidate = last_Digit_Factorial;\n    assert(candidate((4)) == (4));\n    assert(candidate((21)) == (0));\n    assert(candidate((30)) == (0));\n}\n",
      "timestamp": 1666123893,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the last digit in factorial of a given number.\nlong last_Digit_Factorial(long n) {\n    long fact = 1;\n    for (long i = 1; i <= n; i++) {\n        fact = fact * i;\n    }\n    return fact % 10;\n}\nint main() {\n    auto candidate = last_Digit_Factorial;\n    assert(candidate((4)) == (4));\n    assert(candidate((21)) == (0));\n    assert(candidate((30)) == (0));\n}\n",
      "timestamp": 1665509711,
      "stdout": "",
      "stderr": "tmpa9mo73v1: /tmp/tmpa9mo73v1.cpp:14: int main(): Assertion `candidate((21)) == (0)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the last digit in factorial of a given number.\nlong last_Digit_Factorial(long n) {\n    // Write your code here\n    long fact = 1;\n    for(int i = 1; i <= n; i++) {\n        fact = fact * i;\n    }\n    return fact % 10;\n}\nint main() {\n    auto candidate = last_Digit_Factorial;\n    assert(candidate((4)) == (4));\n    assert(candidate((21)) == (0));\n    assert(candidate((30)) == (0));\n}\n",
      "timestamp": 1666123891,
      "stdout": "",
      "stderr": "tmp34haq6i3: /tmp/tmp34haq6i3.cpp:15: int main(): Assertion `candidate((21)) == (0)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the last digit in factorial of a given number.\nlong last_Digit_Factorial(long n) {\n    if (n < 0)\n        return -1;\n    if (n == 0 || n == 1)\n        return 1;\n    long res = 1;\n    for (int i = 2; i <= n; i++) {\n        res = (res * i) % 10;\n    }\n    return res;\n}\nint main() {\n    auto candidate = last_Digit_Factorial;\n    assert(candidate((4)) == (4));\n    assert(candidate((21)) == (0));\n    assert(candidate((30)) == (0));\n}\n",
      "timestamp": 1666123893,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the last digit in factorial of a given number.\nlong last_Digit_Factorial(long n) {\n    if (n < 0)\n        return -1;\n    if (n == 0)\n        return 1;\n    long res = 1;\n    for (int i = 2; i <= n; i++)\n        res = (res * i) % 10;\n    return res;\n}\nint main() {\n    auto candidate = last_Digit_Factorial;\n    assert(candidate((4)) == (4));\n    assert(candidate((21)) == (0));\n    assert(candidate((30)) == (0));\n}\n",
      "timestamp": 1666123893,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the last digit in factorial of a given number.\nlong last_Digit_Factorial(long n) {\n    // Write your code here\n    long fact=1;\n    for(int i=1;i<=n;i++){\n        fact=fact*i;\n    }\n    return fact%10;\n}\nint main() {\n    auto candidate = last_Digit_Factorial;\n    assert(candidate((4)) == (4));\n    assert(candidate((21)) == (0));\n    assert(candidate((30)) == (0));\n}\n",
      "timestamp": 1666123887,
      "stdout": "",
      "stderr": "tmp29a0zq_r: /tmp/tmp29a0zq_r.cpp:15: int main(): Assertion `candidate((21)) == (0)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the last digit in factorial of a given number.\nlong last_Digit_Factorial(long n) {\n    // Write your code here\n    if(n==0)\n        return 1;\n    long fact=1;\n    for(long i=1;i<=n;i++)\n    {\n        fact=(fact*i)%10;\n    }\n    return fact;\n}\nint main() {\n    auto candidate = last_Digit_Factorial;\n    assert(candidate((4)) == (4));\n    assert(candidate((21)) == (0));\n    assert(candidate((30)) == (0));\n}\n",
      "timestamp": 1666123893,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the last digit in factorial of a given number.\nlong last_Digit_Factorial(long n) {\n    // Write your code here\n    long fact=1;\n    for(int i=1;i<=n;i++)\n    {\n        fact=fact*i;\n    }\n    return fact%10;\n}\nint main() {\n    auto candidate = last_Digit_Factorial;\n    assert(candidate((4)) == (4));\n    assert(candidate((21)) == (0));\n    assert(candidate((30)) == (0));\n}\n",
      "timestamp": 1665509712,
      "stdout": "",
      "stderr": "tmpqtkup2f7: /tmp/tmpqtkup2f7.cpp:16: int main(): Assertion `candidate((21)) == (0)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the last digit in factorial of a given number.\nlong last_Digit_Factorial(long n) {\n    // Write your code here\n    long fact=1;\n    for(long i=1;i<=n;i++){\n        fact=(fact*i)%10;\n    }\n    return fact;\n}\nint main() {\n    auto candidate = last_Digit_Factorial;\n    assert(candidate((4)) == (4));\n    assert(candidate((21)) == (0));\n    assert(candidate((30)) == (0));\n}\n",
      "timestamp": 1666123889,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the last digit in factorial of a given number.\nlong last_Digit_Factorial(long n) {\n    if(n==0)\n        return 1;\n    long ans=1;\n    for(long i=2;i<=n;i++){\n        ans=(ans*i)%10;\n    }\n    return ans;\n}\nint main() {\n    auto candidate = last_Digit_Factorial;\n    assert(candidate((4)) == (4));\n    assert(candidate((21)) == (0));\n    assert(candidate((30)) == (0));\n}\n",
      "timestamp": 1666123893,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the last digit in factorial of a given number.\nlong last_Digit_Factorial(long n) {\n    long fact = 1;\n    for(int i = 1; i <= n; i++) {\n        fact = (fact * i) % 10;\n    }\n    return fact;\n}\nint main() {\n    auto candidate = last_Digit_Factorial;\n    assert(candidate((4)) == (4));\n    assert(candidate((21)) == (0));\n    assert(candidate((30)) == (0));\n}\n",
      "timestamp": 1666123887,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the last digit in factorial of a given number.\nlong last_Digit_Factorial(long n) {\n    // Write your code here\n    long fact=1;\n    for(int i=1;i<=n;i++){\n        fact=fact*i;\n    }\n    return fact%10;\n}\nint main() {\n    auto candidate = last_Digit_Factorial;\n    assert(candidate((4)) == (4));\n    assert(candidate((21)) == (0));\n    assert(candidate((30)) == (0));\n}\n",
      "timestamp": 1666123887,
      "stdout": "",
      "stderr": "tmp29a0zq_r: /tmp/tmp29a0zq_r.cpp:15: int main(): Assertion `candidate((21)) == (0)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the last digit in factorial of a given number.\nlong last_Digit_Factorial(long n) {\n    long last_digit = 1;\n    for (int i = 1; i <= n; i++) {\n        last_digit = (last_digit * i) % 10;\n    }\n    return last_digit;\n}\nint main() {\n    auto candidate = last_Digit_Factorial;\n    assert(candidate((4)) == (4));\n    assert(candidate((21)) == (0));\n    assert(candidate((30)) == (0));\n}\n",
      "timestamp": 1666123889,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the last digit in factorial of a given number.\nlong last_Digit_Factorial(long n) {\n    // Write your code here\n    if(n==0)\n        return 1;\n    else if(n==1)\n        return 1;\n    else if(n==2)\n        return 2;\n    else if(n==3)\n        return 6;\n    else if(n==4)\n        return 4;\n    else if(n==5)\n        return 2;\n    else if(n==6)\n        return 2;\n    else if(n==7)\n        return 4;\n    else if(n==8)\n        return 2;\n    else if(n==9)\n        return 8;\n    else if(n==10)\n        return 8;\n    else if(n==11)\n        return 2;\n    else if(n==12)\n        return 6;\n    else if(n==13)\n        return 8;\n    else if(n==14)\n        return 8;\n    else if(n==15)\n        return 6;\n    else if(n==16)\n        return 8;\n    else if(n==17)\n        return 4;\n    else if(n==18)\n        return 6;\n    else if(n==19)\n        return 2;\n    else if(n==20)\n        return 6;\n    else if(n==21)\n        return 6;\n    else if(n==22)\n        return 4;\n    else if(n==23)\n        return 2;\n    else if(n==24)\n        return 8;\n    else if(n==25)\n        return 2;\n    else if(n==26)\n        return 8;\n    else if(n==27)\n        return 8;\n    else if(n==28)\n        return 6;\n    else if(n==29)\n        return 8;\n    else if(n==30)\n        return 8;\n    else if(n==31)\n        return 4;\n    else if(n==32)\n        return 2;\n    else if(n==33)\n        return 6;\n    else if(n==34)\n        return 2;\n    else if(n==35)\n        return 2;\n   \n}\nint main() {\n    auto candidate = last_Digit_Factorial;\n    assert(candidate((4)) == (4));\n    assert(candidate((21)) == (0));\n    assert(candidate((30)) == (0));\n}\n",
      "timestamp": 1666123893,
      "stdout": "",
      "stderr": "tmp5ze438tu: /tmp/tmp5ze438tu.cpp:83: int main(): Assertion `candidate((21)) == (0)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the last digit in factorial of a given number.\nlong last_Digit_Factorial(long n) {\n    if(n == 0) {\n        return 1;\n    }\n    long fact = 1;\n    for(long i = 1; i <= n; i++) {\n        fact = (fact * i) % 10;\n    }\n    return fact;\n}\nint main() {\n    auto candidate = last_Digit_Factorial;\n    assert(candidate((4)) == (4));\n    assert(candidate((21)) == (0));\n    assert(candidate((30)) == (0));\n}\n",
      "timestamp": 1666123889,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the last digit in factorial of a given number.\nlong last_Digit_Factorial(long n) {\n    if(n == 0 || n == 1) {\n        return 1;\n    }\n    long ans = 1;\n    for(long i = 2; i <= n; i++) {\n        ans = (ans * i) % 10;\n    }\n    return ans;\n}\nint main() {\n    auto candidate = last_Digit_Factorial;\n    assert(candidate((4)) == (4));\n    assert(candidate((21)) == (0));\n    assert(candidate((30)) == (0));\n}\n",
      "timestamp": 1666123893,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the last digit in factorial of a given number.\nlong last_Digit_Factorial(long n) {\n    if (n == 0) {\n        return 1;\n    }\n    long last_digit = 1;\n    for (long i = 1; i <= n; i++) {\n        last_digit = (last_digit * i) % 10;\n    }\n    return last_digit;\n}\nint main() {\n    auto candidate = last_Digit_Factorial;\n    assert(candidate((4)) == (4));\n    assert(candidate((21)) == (0));\n    assert(candidate((30)) == (0));\n}\n",
      "timestamp": 1666123893,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the last digit in factorial of a given number.\nlong last_Digit_Factorial(long n) {\n    long fact = 1;\n    for (int i = 1; i <= n; i++) {\n        fact = fact * i;\n    }\n    return fact % 10;\n}\nint main() {\n    auto candidate = last_Digit_Factorial;\n    assert(candidate((4)) == (4));\n    assert(candidate((21)) == (0));\n    assert(candidate((30)) == (0));\n}\n",
      "timestamp": 1666123887,
      "stdout": "",
      "stderr": "tmpcv_rj7hd: /tmp/tmpcv_rj7hd.cpp:14: int main(): Assertion `candidate((21)) == (0)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the last digit in factorial of a given number.\nlong last_Digit_Factorial(long n) {\n    long fact = 1;\n    for(long i = 1; i <= n; i++) {\n        fact = (fact * i) % 10;\n    }\n    return fact;\n}\nint main() {\n    auto candidate = last_Digit_Factorial;\n    assert(candidate((4)) == (4));\n    assert(candidate((21)) == (0));\n    assert(candidate((30)) == (0));\n}\n",
      "timestamp": 1666123887,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the last digit in factorial of a given number.\nlong last_Digit_Factorial(long n) {\n    if (n < 0) {\n        return -1;\n    }\n    if (n == 0 || n == 1) {\n        return 1;\n    }\n    long last_digit = 1;\n    for (int i = 2; i <= n; i++) {\n        last_digit = (last_digit * i) % 10;\n    }\n    return last_digit;\n}\nint main() {\n    auto candidate = last_Digit_Factorial;\n    assert(candidate((4)) == (4));\n    assert(candidate((21)) == (0));\n    assert(candidate((30)) == (0));\n}\n",
      "timestamp": 1666123893,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the last digit in factorial of a given number.\nlong last_Digit_Factorial(long n) {\n    long fact = 1;\n    for (int i = 1; i <= n; i++) {\n        fact = fact * i;\n    }\n    return fact % 10;\n}\nint main() {\n    auto candidate = last_Digit_Factorial;\n    assert(candidate((4)) == (4));\n    assert(candidate((21)) == (0));\n    assert(candidate((30)) == (0));\n}\n",
      "timestamp": 1666123887,
      "stdout": "",
      "stderr": "tmpcv_rj7hd: /tmp/tmpcv_rj7hd.cpp:14: int main(): Assertion `candidate((21)) == (0)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the last digit in factorial of a given number.\nlong last_Digit_Factorial(long n) {\n    if (n < 0) {\n        return -1;\n    }\n    if (n == 0 || n == 1) {\n        return 1;\n    }\n    long fact = 1;\n    for (long i = 2; i <= n; i++) {\n        fact = (fact * i) % 10;\n    }\n    return fact;\n}\nint main() {\n    auto candidate = last_Digit_Factorial;\n    assert(candidate((4)) == (4));\n    assert(candidate((21)) == (0));\n    assert(candidate((30)) == (0));\n}\n",
      "timestamp": 1666123893,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the last digit in factorial of a given number.\nlong last_Digit_Factorial(long n) {\n    if (n < 0) {\n        return -1;\n    }\n    if (n == 0) {\n        return 1;\n    }\n    long fact = 1;\n    for (long i = 1; i <= n; i++) {\n        fact = fact * i;\n    }\n    return fact % 10;\n}\nint main() {\n    auto candidate = last_Digit_Factorial;\n    assert(candidate((4)) == (4));\n    assert(candidate((21)) == (0));\n    assert(candidate((30)) == (0));\n}\n",
      "timestamp": 1666123893,
      "stdout": "",
      "stderr": "tmp5d4fguiu: /tmp/tmp5d4fguiu.cpp:20: int main(): Assertion `candidate((21)) == (0)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the last digit in factorial of a given number.\nlong last_Digit_Factorial(long n) {\n    // Write your code here\n    long fact=1;\n    for(long i=1;i<=n;i++){\n        fact=fact*i;\n    }\n    return fact%10;\n}\nint main() {\n    auto candidate = last_Digit_Factorial;\n    assert(candidate((4)) == (4));\n    assert(candidate((21)) == (0));\n    assert(candidate((30)) == (0));\n}\n",
      "timestamp": 1666123893,
      "stdout": "",
      "stderr": "tmp2i3z5l_w: /tmp/tmp2i3z5l_w.cpp:15: int main(): Assertion `candidate((21)) == (0)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the last digit in factorial of a given number.\nlong last_Digit_Factorial(long n) {\n    // Write your code here\n    long fact=1;\n    for(int i=1;i<=n;i++)\n    {\n        fact=(fact*i)%10;\n    }\n    return fact;\n}\nint main() {\n    auto candidate = last_Digit_Factorial;\n    assert(candidate((4)) == (4));\n    assert(candidate((21)) == (0));\n    assert(candidate((30)) == (0));\n}\n",
      "timestamp": 1665509711,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the last digit in factorial of a given number.\nlong last_Digit_Factorial(long n) {\n    if(n==0)\n        return 1;\n    long ans=1;\n    for(long i=2;i<=n;i++)\n    {\n        ans=(ans*i)%10;\n    }\n    return ans;\n}\nint main() {\n    auto candidate = last_Digit_Factorial;\n    assert(candidate((4)) == (4));\n    assert(candidate((21)) == (0));\n    assert(candidate((30)) == (0));\n}\n",
      "timestamp": 1666123893,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the last digit in factorial of a given number.\nlong last_Digit_Factorial(long n) {\n    // Write your code here\n    int fact = 1;\n    for (int i = 1; i <= n; i++) {\n        fact = fact * i;\n    }\n    return fact % 10;\n}\nint main() {\n    auto candidate = last_Digit_Factorial;\n    assert(candidate((4)) == (4));\n    assert(candidate((21)) == (0));\n    assert(candidate((30)) == (0));\n}\n",
      "timestamp": 1666123893,
      "stdout": "",
      "stderr": "tmpug87mvxn: /tmp/tmpug87mvxn.cpp:15: int main(): Assertion `candidate((21)) == (0)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the last digit in factorial of a given number.\nlong last_Digit_Factorial(long n) {\n    if (n < 0)\n        return -1;\n    if (n == 0)\n        return 1;\n    long res = 1;\n    for (int i = 1; i <= n; i++) {\n        res = (res * i) % 10;\n    }\n    return res;\n}\nint main() {\n    auto candidate = last_Digit_Factorial;\n    assert(candidate((4)) == (4));\n    assert(candidate((21)) == (0));\n    assert(candidate((30)) == (0));\n}\n",
      "timestamp": 1666123893,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the last digit in factorial of a given number.\nlong last_Digit_Factorial(long n) {\n    if (n < 0)\n        return -1;\n    if (n == 0 || n == 1)\n        return 1;\n    long res = 1;\n    for (long i = 2; i <= n; i++)\n        res = (res * i) % 10;\n    return res;\n}\nint main() {\n    auto candidate = last_Digit_Factorial;\n    assert(candidate((4)) == (4));\n    assert(candidate((21)) == (0));\n    assert(candidate((30)) == (0));\n}\n",
      "timestamp": 1666123891,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the last digit in factorial of a given number.\nlong last_Digit_Factorial(long n) {\n    if(n==0)\n        return 1;\n    else if(n==1)\n        return 1;\n    else if(n==2)\n        return 2;\n    else if(n==3)\n        return 6;\n    else if(n==4)\n        return 4;\n    else if(n==5)\n        return 2;\n    else if(n==6)\n        return 2;\n    else if(n==7)\n        return 4;\n    else if(n==8)\n        return 2;\n    else if(n==9)\n        return 8;\n    else if(n==10)\n        return 8;\n    else if(n==11)\n        return 0;\n    else if(n==12)\n        return 0;\n    else if(n==13)\n        return 0;\n    else if(n==14)\n        return 0;\n    else if(n==15)\n        return 0;\n    else if(n==16)\n        return 6;\n    else if(n==17)\n        return 0;\n    else if(n==18)\n        return 0;\n    else if(n==19)\n        return 0;\n    else if(n==20)\n        return 0;\n    else if(n==21)\n        return 0;\n    else if(n==22)\n        return 0;\n    else if(n==23)\n        return 0;\n    else if(n==24)\n        return 0;\n    else if(n==25)\n        return 0;\n    else if(n==26)\n        return 0;\n    else if(n==27)\n        return 0;\n    else if(n==28)\n        return 0;\n    else if(n==29)\n        return 0;\n    else if(n==30)\n        return 0;\n    else if(n==31)\n        return 0;\n    else if(n==32)\n        return 0;\n    else if(n==33)\n        return 0;\n    else if(n==34)\n        return 0;\n    else if(n==35)\n        return 0;\n    else if(n==36)\n}\nint main() {\n    auto candidate = last_Digit_Factorial;\n    assert(candidate((4)) == (4));\n    assert(candidate((21)) == (0));\n    assert(candidate((30)) == (0));\n}\n",
      "timestamp": 1666123887,
      "stdout": "",
      "stderr": "/tmp/tmp1mt9ovtv.cpp: In function \u2018long int last_Digit_Factorial(long int)\u2019:\n/tmp/tmp1mt9ovtv.cpp:78:1: error: expected primary-expression before \u2018}\u2019 token\n   78 | }\n      | ^\n/tmp/tmp1mt9ovtv.cpp:78:1: warning: control reaches end of non-void function [-Wreturn-type]\n   78 | }\n      | ^\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the last digit in factorial of a given number.\nlong last_Digit_Factorial(long n) {\n    // Write your code here\n    long fact = 1;\n    for (int i = 1; i <= n; i++) {\n        fact = (fact * i) % 10;\n    }\n    return fact;\n}\nint main() {\n    auto candidate = last_Digit_Factorial;\n    assert(candidate((4)) == (4));\n    assert(candidate((21)) == (0));\n    assert(candidate((30)) == (0));\n}\n",
      "timestamp": 1666123893,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the last digit in factorial of a given number.\nlong last_Digit_Factorial(long n) {\n    // Write your code here\n    if(n==0)\n        return 1;\n    else if(n==1)\n        return 1;\n    else if(n==2)\n        return 2;\n    else if(n==3)\n        return 6;\n    else if(n==4)\n        return 4;\n    else if(n==5)\n        return 2;\n    else if(n==6)\n        return 2;\n    else if(n==7)\n        return 4;\n    else if(n==8)\n        return 2;\n    else if(n==9)\n        return 8;\n    else if(n==10)\n        return 8;\n    else if(n==11)\n        return 0;\n    else if(n==12)\n        return 0;\n    else if(n==13)\n        return 0;\n    else if(n==14)\n        return 0;\n    else if(n==15)\n        return 6;\n    else if(n==16)\n        return 6;\n    else if(n==17)\n        return 2;\n    else if(n==18)\n        return 6;\n    else if(n==19)\n        return 2;\n    else if(n==20)\n        return 2;\n    else if(n==21)\n        return 4;\n    else if(n==22)\n        return 2;\n    else if(n==23)\n        return 8;\n    else if(n==24)\n        return 4;\n    else if(n==25)\n        return 0;\n    else if(n==26)\n        return 0;\n    else if(n==27)\n        return 0;\n    else if(n==28)\n        return 0;\n    else if(n==29)\n        return 0;\n    else if(n==30)\n        return 0;\n    else if(n==31)\n        return 0;\n    else if(n==32)\n        return 0;\n    else if(n==33)\n        return 0;\n    else if(n==34)\n        return 0;\n    else if(n==35)\n        return 0;\n   \n}\nint main() {\n    auto candidate = last_Digit_Factorial;\n    assert(candidate((4)) == (4));\n    assert(candidate((21)) == (0));\n    assert(candidate((30)) == (0));\n}\n",
      "timestamp": 1666123891,
      "stdout": "",
      "stderr": "tmp2drmdaij: /tmp/tmp2drmdaij.cpp:83: int main(): Assertion `candidate((21)) == (0)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the last digit in factorial of a given number.\nlong last_Digit_Factorial(long n) {\n    long fact=1;\n    for(int i=1;i<=n;i++){\n        fact=fact*i;\n    }\n    return fact%10;\n}\nint main() {\n    auto candidate = last_Digit_Factorial;\n    assert(candidate((4)) == (4));\n    assert(candidate((21)) == (0));\n    assert(candidate((30)) == (0));\n}\n",
      "timestamp": 1666123893,
      "stdout": "",
      "stderr": "tmphd448e9o: /tmp/tmphd448e9o.cpp:14: int main(): Assertion `candidate((21)) == (0)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the last digit in factorial of a given number.\nlong last_Digit_Factorial(long n) {\n    long factorial = 1;\n    for(long i = 1; i <= n; i++) {\n        factorial = factorial * i;\n    }\n    return factorial % 10;\n}\nint main() {\n    auto candidate = last_Digit_Factorial;\n    assert(candidate((4)) == (4));\n    assert(candidate((21)) == (0));\n    assert(candidate((30)) == (0));\n}\n",
      "timestamp": 1666123893,
      "stdout": "",
      "stderr": "tmp36mbkacj: /tmp/tmp36mbkacj.cpp:14: int main(): Assertion `candidate((21)) == (0)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the last digit in factorial of a given number.\nlong last_Digit_Factorial(long n) {\n    if(n == 0)\n        return 1;\n    else if(n == 1)\n        return 1;\n    else if(n == 2)\n        return 2;\n    else if(n == 3)\n        return 6;\n    else if(n == 4)\n        return 4;\n    else if(n == 5)\n        return 2;\n    else if(n == 6)\n        return 2;\n    else if(n == 7)\n        return 4;\n    else if(n == 8)\n        return 2;\n    else if(n == 9)\n        return 8;\n    else if(n == 10)\n        return 8;\n    else if(n == 11)\n        return 2;\n    else if(n == 12)\n        return 6;\n    else if(n == 13)\n        return 8;\n    else if(n == 14)\n        return 8;\n    else if(n == 15)\n        return 2;\n    else if(n == 16)\n        return 6;\n    else if(n == 17)\n        return 2;\n    else if(n == 18)\n        return 4;\n    else if(n == 19)\n        return 2;\n    else if(n == 20)\n        return 2;\n    else if(n == 21)\n        return 2;\n    else if(n == 22)\n        return 8;\n    else if(n == 23)\n        return 8;\n    else if(n == 24)\n        return 6;\n    else if(n == 25)\n        return 6;\n    else if(n == 26)\n        return 2;\n    else if(n == 27)\n        return 8;\n    else if(n == 28)\n        return 4;\n    else if(n == 29)\n        return 6;\n    else if(n == 30)\n        return 8;\n    else if(n == 31)\n        return 8;\n    else if(n == 32)\n        return 8;\n    else if(n == 33)\n        return 6;\n    else if(n == 34)\n        return 2;\n    else if(n == 35)\n        return 8;\n    else if(n == 36)\n}\nint main() {\n    auto candidate = last_Digit_Factorial;\n    assert(candidate((4)) == (4));\n    assert(candidate((21)) == (0));\n    assert(candidate((30)) == (0));\n}\n",
      "timestamp": 1666123893,
      "stdout": "",
      "stderr": "/tmp/tmp7031tuvz.cpp: In function \u2018long int last_Digit_Factorial(long int)\u2019:\n/tmp/tmp7031tuvz.cpp:78:1: error: expected primary-expression before \u2018}\u2019 token\n   78 | }\n      | ^\n/tmp/tmp7031tuvz.cpp:78:1: warning: control reaches end of non-void function [-Wreturn-type]\n   78 | }\n      | ^\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the last digit in factorial of a given number.\nlong last_Digit_Factorial(long n) {\n    // Write your code here\n    long fact = 1;\n    for(long i = 1; i <= n; i++) {\n        fact = (fact * i) % 10;\n    }\n    return fact;\n}\nint main() {\n    auto candidate = last_Digit_Factorial;\n    assert(candidate((4)) == (4));\n    assert(candidate((21)) == (0));\n    assert(candidate((30)) == (0));\n}\n",
      "timestamp": 1666123894,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the last digit in factorial of a given number.\nlong last_Digit_Factorial(long n) {\n    long fact = 1;\n    for (long i = 1; i <= n; i++) {\n        fact = (fact * i) % 10;\n    }\n    return fact;\n}\nint main() {\n    auto candidate = last_Digit_Factorial;\n    assert(candidate((4)) == (4));\n    assert(candidate((21)) == (0));\n    assert(candidate((30)) == (0));\n}\n",
      "timestamp": 1666123889,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the last digit in factorial of a given number.\nlong last_Digit_Factorial(long n) {\n    if (n < 0)\n        return -1;\n    if (n == 0 || n == 1)\n        return 1;\n    long ans = 1;\n    for (long i = 2; i <= n; i++) {\n        ans = (ans * i) % 10;\n    }\n    return ans;\n}\nint main() {\n    auto candidate = last_Digit_Factorial;\n    assert(candidate((4)) == (4));\n    assert(candidate((21)) == (0));\n    assert(candidate((30)) == (0));\n}\n",
      "timestamp": 1666123891,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
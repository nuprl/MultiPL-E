{
  "name": "mbpp_301_dict_depth",
  "language": "cpp",
  "prompt": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the depth of a dictionary.\nlong dict_depth(std::any d) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_301_dict_depth.py",
  "prompt_terminology": "verbatim",
  "tests": "}\nint main() {\n    auto candidate = dict_depth;\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::string>({{\"c\", \"python\"}})}}))) == (2));\n    assert(candidate((std::any({{1, \"Sun\"}, {2, std::map<long,std::map<long,std::string>>({{3, std::any({{4, \"Mon\"}})}})}}))) == (3));\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "results": [
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the depth of a dictionary.\nlong dict_depth(std::any d) {\n    if (d.type() != typeid(std::map<std::string, std::any>)) {\n        return 0;\n    }\n    long max_depth = 0;\n    for (auto &[key, value] : std::any_cast<std::map<std::string, std::any>>(d)) {\n        max_depth = std::max(max_depth, dict_depth(value));\n    }\n    return max_depth + 1;\n}\nint main() {\n    auto candidate = dict_depth;\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::string>({{\"c\", \"python\"}})}}))) == (2));\n    assert(candidate((std::any({{1, \"Sun\"}, {2, std::map<long,std::map<long,std::string>>({{3, std::any({{4, \"Mon\"}})}})}}))) == (3));\n}\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp25n1nsx1.cpp:2:\n/tmp/tmp25n1nsx1.cpp: In function \u2018int main()\u2019:\n/tmp/tmp25n1nsx1.cpp:16:198: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   16 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n      |                                                                                                                                                                                                      ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmp25n1nsx1.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp25n1nsx1.cpp:2:\n/tmp/tmp25n1nsx1.cpp:16:198: note:   candidate expects at least 2 arguments, 1 provided\n   16 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the depth of a dictionary.\nlong dict_depth(std::any d) {\n    long depth = 0;\n    if(d.type() == typeid(std::map<std::string, std::any>)) {\n        std::map<std::string, std::any> m = std::any_cast<std::map<std::string, std::any>>(d);\n        for(auto it = m.begin(); it != m.end(); it++) {\n            depth = std::max(depth, dict_depth(it->second));\n        }\n        return depth + 1;\n    }\n    return 0;\n}\nint main() {\n    auto candidate = dict_depth;\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::string>({{\"c\", \"python\"}})}}))) == (2));\n    assert(candidate((std::any({{1, \"Sun\"}, {2, std::map<long,std::map<long,std::string>>({{3, std::any({{4, \"Mon\"}})}})}}))) == (3));\n}\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpr3yvohvj.cpp:2:\n/tmp/tmpr3yvohvj.cpp: In function \u2018int main()\u2019:\n/tmp/tmpr3yvohvj.cpp:17:198: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   17 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n      |                                                                                                                                                                                                      ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpr3yvohvj.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpr3yvohvj.cpp:2:\n/tmp/tmpr3yvohvj.cpp:17:198: note:   candidate expects at least 2 arguments, 1 provided\n   17 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the depth of a dictionary.\nlong dict_depth(std::any d) {\n    long depth = 0;\n    if (d.type() == typeid(std::map<std::string, std::any>)) {\n        for (auto &it : std::any_cast<std::map<std::string, std::any>>(d)) {\n            depth = std::max(depth, dict_depth(it.second));\n        }\n        return depth + 1;\n    } else {\n        return 0;\n    }\n}\nint main() {\n    auto candidate = dict_depth;\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::string>({{\"c\", \"python\"}})}}))) == (2));\n    assert(candidate((std::any({{1, \"Sun\"}, {2, std::map<long,std::map<long,std::string>>({{3, std::any({{4, \"Mon\"}})}})}}))) == (3));\n}\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpdq1fp_tm.cpp:2:\n/tmp/tmpdq1fp_tm.cpp: In function \u2018int main()\u2019:\n/tmp/tmpdq1fp_tm.cpp:17:198: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   17 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n      |                                                                                                                                                                                                      ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpdq1fp_tm.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpdq1fp_tm.cpp:2:\n/tmp/tmpdq1fp_tm.cpp:17:198: note:   candidate expects at least 2 arguments, 1 provided\n   17 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the depth of a dictionary.\nlong dict_depth(std::any d) {\n    if (d.type() != typeid(std::map<std::string, std::any>)) {\n        return 0;\n    }\n    long max_depth = 0;\n    for (auto& [key, value] : std::any_cast<std::map<std::string, std::any>>(d)) {\n        max_depth = std::max(max_depth, dict_depth(value));\n    }\n    return max_depth + 1;\n}\nint main() {\n    auto candidate = dict_depth;\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::string>({{\"c\", \"python\"}})}}))) == (2));\n    assert(candidate((std::any({{1, \"Sun\"}, {2, std::map<long,std::map<long,std::string>>({{3, std::any({{4, \"Mon\"}})}})}}))) == (3));\n}\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmph4pf0_t3.cpp:2:\n/tmp/tmph4pf0_t3.cpp: In function \u2018int main()\u2019:\n/tmp/tmph4pf0_t3.cpp:16:198: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   16 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n      |                                                                                                                                                                                                      ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmph4pf0_t3.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmph4pf0_t3.cpp:2:\n/tmp/tmph4pf0_t3.cpp:16:198: note:   candidate expects at least 2 arguments, 1 provided\n   16 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the depth of a dictionary.\nlong dict_depth(std::any d) {\n    if(d.type() == typeid(std::map<std::string, std::any>)){\n        std::map<std::string, std::any> m = std::any_cast<std::map<std::string, std::any>>(d);\n        long max = 0;\n        for(auto it = m.begin(); it != m.end(); it++){\n            long depth = dict_depth(it->second);\n            if(depth > max)\n                max = depth;\n        }\n        return max + 1;\n    }\n    else\n        return 0;\n}\nint main() {\n    auto candidate = dict_depth;\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::string>({{\"c\", \"python\"}})}}))) == (2));\n    assert(candidate((std::any({{1, \"Sun\"}, {2, std::map<long,std::map<long,std::string>>({{3, std::any({{4, \"Mon\"}})}})}}))) == (3));\n}\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp0kxe7ozv.cpp:2:\n/tmp/tmp0kxe7ozv.cpp: In function \u2018int main()\u2019:\n/tmp/tmp0kxe7ozv.cpp:20:198: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   20 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n      |                                                                                                                                                                                                      ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmp0kxe7ozv.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp0kxe7ozv.cpp:2:\n/tmp/tmp0kxe7ozv.cpp:20:198: note:   candidate expects at least 2 arguments, 1 provided\n   20 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the depth of a dictionary.\nlong dict_depth(std::any d) {\n    // your code here\n    return 0;\n}\nint main() {\n    auto candidate = dict_depth;\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::string>({{\"c\", \"python\"}})}}))) == (2));\n    assert(candidate((std::any({{1, \"Sun\"}, {2, std::map<long,std::map<long,std::string>>({{3, std::any({{4, \"Mon\"}})}})}}))) == (3));\n}\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpl36vmk5j.cpp:2:\n/tmp/tmpl36vmk5j.cpp: In function \u2018int main()\u2019:\n/tmp/tmpl36vmk5j.cpp:10:198: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   10 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n      |                                                                                                                                                                                                      ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpl36vmk5j.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpl36vmk5j.cpp:2:\n/tmp/tmpl36vmk5j.cpp:10:198: note:   candidate expects at least 2 arguments, 1 provided\n   10 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the depth of a dictionary.\nlong dict_depth(std::any d) {\n    // your code here\n    long depth = 0;\n    if(d.type() == typeid(std::map<std::string, std::any>)){\n        std::map<std::string, std::any> m = std::any_cast<std::map<std::string, std::any>>(d);\n        for(auto it = m.begin(); it != m.end(); ++it){\n            if(it->second.type() == typeid(std::map<std::string, std::any>)){\n                depth = std::max(depth, dict_depth(it->second));\n            }\n        }\n        return depth + 1;\n    }\n    return depth;\n}\nint main() {\n    auto candidate = dict_depth;\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::string>({{\"c\", \"python\"}})}}))) == (2));\n    assert(candidate((std::any({{1, \"Sun\"}, {2, std::map<long,std::map<long,std::string>>({{3, std::any({{4, \"Mon\"}})}})}}))) == (3));\n}\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmps6v6phzv.cpp:2:\n/tmp/tmps6v6phzv.cpp: In function \u2018int main()\u2019:\n/tmp/tmps6v6phzv.cpp:20:198: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   20 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n      |                                                                                                                                                                                                      ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmps6v6phzv.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmps6v6phzv.cpp:2:\n/tmp/tmps6v6phzv.cpp:20:198: note:   candidate expects at least 2 arguments, 1 provided\n   20 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the depth of a dictionary.\nlong dict_depth(std::any d) {\n    // your code here\n    long depth = 0;\n    std::any temp = d;\n    while(temp.type() == typeid(std::map<std::string, std::any>)) {\n        depth++;\n        temp = temp.any_cast<std::map<std::string, std::any>>().begin()->second;\n    }\n    return depth;\n}\nint main() {\n    auto candidate = dict_depth;\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::string>({{\"c\", \"python\"}})}}))) == (2));\n    assert(candidate((std::any({{1, \"Sun\"}, {2, std::map<long,std::map<long,std::string>>({{3, std::any({{4, \"Mon\"}})}})}}))) == (3));\n}\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "/tmp/tmpd0swts0u.cpp: In function \u2018long int dict_depth(std::any)\u2019:\n/tmp/tmpd0swts0u.cpp:10:21: error: \u2018class std::any\u2019 has no member named \u2018any_cast\u2019\n   10 |         temp = temp.any_cast<std::map<std::string, std::any>>().begin()->second;\n      |                     ^~~~~~~~\n/tmp/tmpd0swts0u.cpp:10:60: error: expected primary-expression before \u2018>\u2019 token\n   10 |         temp = temp.any_cast<std::map<std::string, std::any>>().begin()->second;\n      |                                                            ^~\n/tmp/tmpd0swts0u.cpp:10:63: error: expected primary-expression before \u2018)\u2019 token\n   10 |         temp = temp.any_cast<std::map<std::string, std::any>>().begin()->second;\n      |                                                               ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpd0swts0u.cpp:2:\n/tmp/tmpd0swts0u.cpp: In function \u2018int main()\u2019:\n/tmp/tmpd0swts0u.cpp:16:198: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   16 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n      |                                                                                                                                                                                                      ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpd0swts0u.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initia",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the depth of a dictionary.\nlong dict_depth(std::any d) {\n    // your code here\n    long depth = 0;\n    if(d.type() == typeid(std::map<std::string, std::any>)){\n        std::map<std::string, std::any> m = std::any_cast<std::map<std::string, std::any>>(d);\n        for(auto i : m){\n            depth = std::max(depth, dict_depth(i.second));\n        }\n        return depth + 1;\n    }\n    else{\n        return 0;\n    }\n}\nint main() {\n    auto candidate = dict_depth;\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::string>({{\"c\", \"python\"}})}}))) == (2));\n    assert(candidate((std::any({{1, \"Sun\"}, {2, std::map<long,std::map<long,std::string>>({{3, std::any({{4, \"Mon\"}})}})}}))) == (3));\n}\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp62teha81.cpp:2:\n/tmp/tmp62teha81.cpp: In function \u2018int main()\u2019:\n/tmp/tmp62teha81.cpp:20:198: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   20 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n      |                                                                                                                                                                                                      ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmp62teha81.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp62teha81.cpp:2:\n/tmp/tmp62teha81.cpp:20:198: note:   candidate expects at least 2 arguments, 1 provided\n   20 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the depth of a dictionary.\nlong dict_depth(std::any d) {\n    if (d.type() != typeid(std::map<std::string, std::any>)) {\n        return 0;\n    }\n    long max_depth = 0;\n    for (auto& [key, value] : std::any_cast<std::map<std::string, std::any>>(d)) {\n        max_depth = std::max(max_depth, dict_depth(value));\n    }\n    return max_depth + 1;\n}\nint main() {\n    auto candidate = dict_depth;\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::string>({{\"c\", \"python\"}})}}))) == (2));\n    assert(candidate((std::any({{1, \"Sun\"}, {2, std::map<long,std::map<long,std::string>>({{3, std::any({{4, \"Mon\"}})}})}}))) == (3));\n}\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmph4pf0_t3.cpp:2:\n/tmp/tmph4pf0_t3.cpp: In function \u2018int main()\u2019:\n/tmp/tmph4pf0_t3.cpp:16:198: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   16 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n      |                                                                                                                                                                                                      ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmph4pf0_t3.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmph4pf0_t3.cpp:2:\n/tmp/tmph4pf0_t3.cpp:16:198: note:   candidate expects at least 2 arguments, 1 provided\n   16 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the depth of a dictionary.\nlong dict_depth(std::any d) {\n    if (d.type() != typeid(std::map<std::string, std::any>)) {\n        return 0;\n    }\n    long max_depth = 0;\n    for (auto& [key, value] : std::any_cast<std::map<std::string, std::any>>(d)) {\n        max_depth = std::max(max_depth, dict_depth(value));\n    }\n    return max_depth + 1;\n}\nint main() {\n    auto candidate = dict_depth;\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::string>({{\"c\", \"python\"}})}}))) == (2));\n    assert(candidate((std::any({{1, \"Sun\"}, {2, std::map<long,std::map<long,std::string>>({{3, std::any({{4, \"Mon\"}})}})}}))) == (3));\n}\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmph4pf0_t3.cpp:2:\n/tmp/tmph4pf0_t3.cpp: In function \u2018int main()\u2019:\n/tmp/tmph4pf0_t3.cpp:16:198: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   16 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n      |                                                                                                                                                                                                      ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmph4pf0_t3.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmph4pf0_t3.cpp:2:\n/tmp/tmph4pf0_t3.cpp:16:198: note:   candidate expects at least 2 arguments, 1 provided\n   16 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the depth of a dictionary.\nlong dict_depth(std::any d) {\n    if (d.type() != typeid(std::map<std::string, std::any>)) {\n        return 0;\n    }\n    std::map<std::string, std::any> m = std::any_cast<std::map<std::string, std::any>>(d);\n    long max_depth = 0;\n    for (auto it = m.begin(); it != m.end(); ++it) {\n        long depth = dict_depth(it->second);\n        if (depth > max_depth) {\n            max_depth = depth;\n        }\n    }\n    return max_depth + 1;\n}\nint main() {\n    auto candidate = dict_depth;\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::string>({{\"c\", \"python\"}})}}))) == (2));\n    assert(candidate((std::any({{1, \"Sun\"}, {2, std::map<long,std::map<long,std::string>>({{3, std::any({{4, \"Mon\"}})}})}}))) == (3));\n}\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpr6ssgi8k.cpp:2:\n/tmp/tmpr6ssgi8k.cpp: In function \u2018int main()\u2019:\n/tmp/tmpr6ssgi8k.cpp:20:198: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   20 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n      |                                                                                                                                                                                                      ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpr6ssgi8k.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpr6ssgi8k.cpp:2:\n/tmp/tmpr6ssgi8k.cpp:20:198: note:   candidate expects at least 2 arguments, 1 provided\n   20 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the depth of a dictionary.\nlong dict_depth(std::any d) {\n    if (!d.has_value()) {\n        return 0;\n    }\n    if (d.type() == typeid(int)) {\n        return 1;\n    }\n    long max_depth = 0;\n    for (auto& [key, value] : std::any_cast<std::map<std::string, std::any>>(d)) {\n        max_depth = std::max(max_depth, dict_depth(value));\n    }\n    return max_depth + 1;\n}\nint main() {\n    auto candidate = dict_depth;\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::string>({{\"c\", \"python\"}})}}))) == (2));\n    assert(candidate((std::any({{1, \"Sun\"}, {2, std::map<long,std::map<long,std::string>>({{3, std::any({{4, \"Mon\"}})}})}}))) == (3));\n}\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp8s09t02s.cpp:2:\n/tmp/tmp8s09t02s.cpp: In function \u2018int main()\u2019:\n/tmp/tmp8s09t02s.cpp:19:198: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   19 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n      |                                                                                                                                                                                                      ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmp8s09t02s.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp8s09t02s.cpp:2:\n/tmp/tmp8s09t02s.cpp:19:198: note:   candidate expects at least 2 arguments, 1 provided\n   19 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the depth of a dictionary.\nlong dict_depth(std::any d) {\n    if (d.type() != typeid(std::map<std::string, std::any>))\n        return 0;\n    long max_depth = 0;\n    for (auto& [key, value] : std::any_cast<std::map<std::string, std::any>>(d)) {\n        max_depth = std::max(max_depth, dict_depth(value));\n    }\n    return max_depth + 1;\n}\nint main() {\n    auto candidate = dict_depth;\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::string>({{\"c\", \"python\"}})}}))) == (2));\n    assert(candidate((std::any({{1, \"Sun\"}, {2, std::map<long,std::map<long,std::string>>({{3, std::any({{4, \"Mon\"}})}})}}))) == (3));\n}\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpef22rg71.cpp:2:\n/tmp/tmpef22rg71.cpp: In function \u2018int main()\u2019:\n/tmp/tmpef22rg71.cpp:15:198: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n      |                                                                                                                                                                                                      ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpef22rg71.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpef22rg71.cpp:2:\n/tmp/tmpef22rg71.cpp:15:198: note:   candidate expects at least 2 arguments, 1 provided\n   15 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the depth of a dictionary.\nlong dict_depth(std::any d) {\n    long depth = 0;\n    if (d.type() == typeid(std::map<std::string, std::any>)) {\n        for (auto &it : std::any_cast<std::map<std::string, std::any>>(d)) {\n            depth = std::max(depth, dict_depth(it.second));\n        }\n        return depth + 1;\n    }\n    return 0;\n}\nint main() {\n    auto candidate = dict_depth;\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::string>({{\"c\", \"python\"}})}}))) == (2));\n    assert(candidate((std::any({{1, \"Sun\"}, {2, std::map<long,std::map<long,std::string>>({{3, std::any({{4, \"Mon\"}})}})}}))) == (3));\n}\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp9bvm9b7z.cpp:2:\n/tmp/tmp9bvm9b7z.cpp: In function \u2018int main()\u2019:\n/tmp/tmp9bvm9b7z.cpp:16:198: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   16 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n      |                                                                                                                                                                                                      ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmp9bvm9b7z.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp9bvm9b7z.cpp:2:\n/tmp/tmp9bvm9b7z.cpp:16:198: note:   candidate expects at least 2 arguments, 1 provided\n   16 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the depth of a dictionary.\nlong dict_depth(std::any d) {\n    if(d.type() != typeid(std::map<std::string, std::any>))\n        return 0;\n    std::map<std::string, std::any> m = std::any_cast<std::map<std::string, std::any>>(d);\n    long max = 0;\n    for(auto it = m.begin(); it != m.end(); it++) {\n        long depth = dict_depth(it->second);\n        if(depth > max)\n            max = depth;\n    }\n    return max + 1;\n}\nint main() {\n    auto candidate = dict_depth;\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::string>({{\"c\", \"python\"}})}}))) == (2));\n    assert(candidate((std::any({{1, \"Sun\"}, {2, std::map<long,std::map<long,std::string>>({{3, std::any({{4, \"Mon\"}})}})}}))) == (3));\n}\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpmkv0ouiu.cpp:2:\n/tmp/tmpmkv0ouiu.cpp: In function \u2018int main()\u2019:\n/tmp/tmpmkv0ouiu.cpp:18:198: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   18 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n      |                                                                                                                                                                                                      ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpmkv0ouiu.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpmkv0ouiu.cpp:2:\n/tmp/tmpmkv0ouiu.cpp:18:198: note:   candidate expects at least 2 arguments, 1 provided\n   18 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the depth of a dictionary.\nlong dict_depth(std::any d) {\n    if (d.type() != typeid(std::map<std::string, std::any>))\n        return 0;\n    long max_depth = 0;\n    for (auto& [key, value] : std::any_cast<std::map<std::string, std::any>>(d)) {\n        max_depth = std::max(max_depth, dict_depth(value));\n    }\n    return max_depth + 1;\n}\nint main() {\n    auto candidate = dict_depth;\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::string>({{\"c\", \"python\"}})}}))) == (2));\n    assert(candidate((std::any({{1, \"Sun\"}, {2, std::map<long,std::map<long,std::string>>({{3, std::any({{4, \"Mon\"}})}})}}))) == (3));\n}\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpef22rg71.cpp:2:\n/tmp/tmpef22rg71.cpp: In function \u2018int main()\u2019:\n/tmp/tmpef22rg71.cpp:15:198: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n      |                                                                                                                                                                                                      ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpef22rg71.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpef22rg71.cpp:2:\n/tmp/tmpef22rg71.cpp:15:198: note:   candidate expects at least 2 arguments, 1 provided\n   15 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the depth of a dictionary.\nlong dict_depth(std::any d) {\n    // your code here\n    long depth = 0;\n    if(d.type() == typeid(std::map<std::string, std::any>)){\n        std::map<std::string, std::any> m = std::any_cast<std::map<std::string, std::any>>(d);\n        for(auto it = m.begin(); it != m.end(); it++){\n            depth = std::max(depth, dict_depth(it->second));\n        }\n        return depth + 1;\n    }\n    return depth;\n}\nint main() {\n    auto candidate = dict_depth;\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::string>({{\"c\", \"python\"}})}}))) == (2));\n    assert(candidate((std::any({{1, \"Sun\"}, {2, std::map<long,std::map<long,std::string>>({{3, std::any({{4, \"Mon\"}})}})}}))) == (3));\n}\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpjf8e9awm.cpp:2:\n/tmp/tmpjf8e9awm.cpp: In function \u2018int main()\u2019:\n/tmp/tmpjf8e9awm.cpp:18:198: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   18 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n      |                                                                                                                                                                                                      ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpjf8e9awm.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpjf8e9awm.cpp:2:\n/tmp/tmpjf8e9awm.cpp:18:198: note:   candidate expects at least 2 arguments, 1 provided\n   18 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the depth of a dictionary.\nlong dict_depth(std::any d) {\n    if (d.type() != typeid(std::map<std::any, std::any>)) {\n        return 0;\n    }\n    std::map<std::any, std::any> m = std::any_cast<std::map<std::any, std::any>>(d);\n    long max_depth = 0;\n    for (auto it = m.begin(); it != m.end(); it++) {\n        max_depth = std::max(max_depth, dict_depth(it->second));\n    }\n    return max_depth + 1;\n}\nint main() {\n    auto candidate = dict_depth;\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::string>({{\"c\", \"python\"}})}}))) == (2));\n    assert(candidate((std::any({{1, \"Sun\"}, {2, std::map<long,std::map<long,std::string>>({{3, std::any({{4, \"Mon\"}})}})}}))) == (3));\n}\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp9i77to8_.cpp:2:\n/tmp/tmp9i77to8_.cpp: In function \u2018int main()\u2019:\n/tmp/tmp9i77to8_.cpp:17:198: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   17 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n      |                                                                                                                                                                                                      ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmp9i77to8_.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp9i77to8_.cpp:2:\n/tmp/tmp9i77to8_.cpp:17:198: note:   candidate expects at least 2 arguments, 1 provided\n   17 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the depth of a dictionary.\nlong dict_depth(std::any d) {\n    if (d.type() != typeid(std::map<std::string, std::any>)) {\n        return 0;\n    }\n    long max_depth = 0;\n    for (auto& [key, value] : std::any_cast<std::map<std::string, std::any>>(d)) {\n        max_depth = std::max(max_depth, dict_depth(value));\n    }\n    return max_depth + 1;\n}\nint main() {\n    auto candidate = dict_depth;\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::string>({{\"c\", \"python\"}})}}))) == (2));\n    assert(candidate((std::any({{1, \"Sun\"}, {2, std::map<long,std::map<long,std::string>>({{3, std::any({{4, \"Mon\"}})}})}}))) == (3));\n}\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmph4pf0_t3.cpp:2:\n/tmp/tmph4pf0_t3.cpp: In function \u2018int main()\u2019:\n/tmp/tmph4pf0_t3.cpp:16:198: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   16 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n      |                                                                                                                                                                                                      ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmph4pf0_t3.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmph4pf0_t3.cpp:2:\n/tmp/tmph4pf0_t3.cpp:16:198: note:   candidate expects at least 2 arguments, 1 provided\n   16 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the depth of a dictionary.\nlong dict_depth(std::any d) {\n    if (d.type() != typeid(std::map<std::string, std::any>)) {\n        return 0;\n    }\n    long max_depth = 0;\n    for (auto& [key, value] : std::any_cast<std::map<std::string, std::any>>(d)) {\n        max_depth = std::max(max_depth, dict_depth(value));\n    }\n    return max_depth + 1;\n}\nint main() {\n    auto candidate = dict_depth;\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::string>({{\"c\", \"python\"}})}}))) == (2));\n    assert(candidate((std::any({{1, \"Sun\"}, {2, std::map<long,std::map<long,std::string>>({{3, std::any({{4, \"Mon\"}})}})}}))) == (3));\n}\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmph4pf0_t3.cpp:2:\n/tmp/tmph4pf0_t3.cpp: In function \u2018int main()\u2019:\n/tmp/tmph4pf0_t3.cpp:16:198: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   16 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n      |                                                                                                                                                                                                      ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmph4pf0_t3.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmph4pf0_t3.cpp:2:\n/tmp/tmph4pf0_t3.cpp:16:198: note:   candidate expects at least 2 arguments, 1 provided\n   16 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the depth of a dictionary.\nlong dict_depth(std::any d) {\n    if(d.type() != typeid(std::map<std::string, std::any>))\n        return 0;\n    long max_depth = 0;\n    for(auto& [key, value] : std::any_cast<std::map<std::string, std::any>>(d)) {\n        max_depth = std::max(max_depth, dict_depth(value));\n    }\n    return max_depth + 1;\n}\nint main() {\n    auto candidate = dict_depth;\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::string>({{\"c\", \"python\"}})}}))) == (2));\n    assert(candidate((std::any({{1, \"Sun\"}, {2, std::map<long,std::map<long,std::string>>({{3, std::any({{4, \"Mon\"}})}})}}))) == (3));\n}\n",
      "timestamp": 1666122553,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpkndolzs9.cpp:2:\n/tmp/tmpkndolzs9.cpp: In function \u2018int main()\u2019:\n/tmp/tmpkndolzs9.cpp:15:198: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n      |                                                                                                                                                                                                      ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpkndolzs9.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpkndolzs9.cpp:2:\n/tmp/tmpkndolzs9.cpp:15:198: note:   candidate expects at least 2 arguments, 1 provided\n   15 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the depth of a dictionary.\nlong dict_depth(std::any d) {\n    // your code here\n    long depth = 0;\n    if (d.type() == typeid(std::map<std::string, std::any>)) {\n        std::map<std::string, std::any> m = std::any_cast<std::map<std::string, std::any>>(d);\n        for (auto i : m) {\n            depth = std::max(depth, dict_depth(i.second));\n        }\n        return depth + 1;\n    }\n    return depth;\n}\nint main() {\n    auto candidate = dict_depth;\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::string>({{\"c\", \"python\"}})}}))) == (2));\n    assert(candidate((std::any({{1, \"Sun\"}, {2, std::map<long,std::map<long,std::string>>({{3, std::any({{4, \"Mon\"}})}})}}))) == (3));\n}\n",
      "timestamp": 1666122553,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp5kd46s8w.cpp:2:\n/tmp/tmp5kd46s8w.cpp: In function \u2018int main()\u2019:\n/tmp/tmp5kd46s8w.cpp:18:198: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   18 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n      |                                                                                                                                                                                                      ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmp5kd46s8w.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp5kd46s8w.cpp:2:\n/tmp/tmp5kd46s8w.cpp:18:198: note:   candidate expects at least 2 arguments, 1 provided\n   18 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the depth of a dictionary.\nlong dict_depth(std::any d) {\n    if (d.type() != typeid(std::map<std::any, std::any>)) {\n        return 0;\n    }\n    long max_depth = 0;\n    for (auto it = std::any_cast<std::map<std::any, std::any>>(d).begin(); it != std::any_cast<std::map<std::any, std::any>>(d).end(); it++) {\n        max_depth = std::max(max_depth, dict_depth(it->second));\n    }\n    return max_depth + 1;\n}\nint main() {\n    auto candidate = dict_depth;\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::string>({{\"c\", \"python\"}})}}))) == (2));\n    assert(candidate((std::any({{1, \"Sun\"}, {2, std::map<long,std::map<long,std::string>>({{3, std::any({{4, \"Mon\"}})}})}}))) == (3));\n}\n",
      "timestamp": 1666122553,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp_gk1sdpz.cpp:2:\n/tmp/tmp_gk1sdpz.cpp: In function \u2018int main()\u2019:\n/tmp/tmp_gk1sdpz.cpp:16:198: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   16 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n      |                                                                                                                                                                                                      ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmp_gk1sdpz.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp_gk1sdpz.cpp:2:\n/tmp/tmp_gk1sdpz.cpp:16:198: note:   candidate expects at least 2 arguments, 1 provided\n   16 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the depth of a dictionary.\nlong dict_depth(std::any d) {\n    if (d.type() != typeid(std::map<std::string, std::any>)) {\n        return 0;\n    }\n    long max_depth = 0;\n    for (auto& [key, value] : std::any_cast<std::map<std::string, std::any>>(d)) {\n        max_depth = std::max(max_depth, dict_depth(value));\n    }\n    return max_depth + 1;\n}\nint main() {\n    auto candidate = dict_depth;\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::string>({{\"c\", \"python\"}})}}))) == (2));\n    assert(candidate((std::any({{1, \"Sun\"}, {2, std::map<long,std::map<long,std::string>>({{3, std::any({{4, \"Mon\"}})}})}}))) == (3));\n}\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmph4pf0_t3.cpp:2:\n/tmp/tmph4pf0_t3.cpp: In function \u2018int main()\u2019:\n/tmp/tmph4pf0_t3.cpp:16:198: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   16 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n      |                                                                                                                                                                                                      ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmph4pf0_t3.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmph4pf0_t3.cpp:2:\n/tmp/tmph4pf0_t3.cpp:16:198: note:   candidate expects at least 2 arguments, 1 provided\n   16 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the depth of a dictionary.\nlong dict_depth(std::any d) {\n    long depth = 0;\n    if (d.type() == typeid(std::map<std::string, std::any>)) {\n        for (auto &it : std::any_cast<std::map<std::string, std::any>>(d)) {\n            depth = std::max(depth, dict_depth(it.second));\n        }\n        return depth + 1;\n    }\n    return depth;\n}\nint main() {\n    auto candidate = dict_depth;\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::string>({{\"c\", \"python\"}})}}))) == (2));\n    assert(candidate((std::any({{1, \"Sun\"}, {2, std::map<long,std::map<long,std::string>>({{3, std::any({{4, \"Mon\"}})}})}}))) == (3));\n}\n",
      "timestamp": 1666122553,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpea8kyv9j.cpp:2:\n/tmp/tmpea8kyv9j.cpp: In function \u2018int main()\u2019:\n/tmp/tmpea8kyv9j.cpp:16:198: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   16 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n      |                                                                                                                                                                                                      ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpea8kyv9j.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpea8kyv9j.cpp:2:\n/tmp/tmpea8kyv9j.cpp:16:198: note:   candidate expects at least 2 arguments, 1 provided\n   16 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the depth of a dictionary.\nlong dict_depth(std::any d) {\n    long depth = 0;\n    if (d.type() == typeid(std::map<std::string, std::any>)) {\n        for (auto& [key, value] : std::any_cast<std::map<std::string, std::any>>(d)) {\n            depth = std::max(depth, dict_depth(value));\n        }\n        return 1 + depth;\n    }\n    return 1;\n}\nint main() {\n    auto candidate = dict_depth;\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::string>({{\"c\", \"python\"}})}}))) == (2));\n    assert(candidate((std::any({{1, \"Sun\"}, {2, std::map<long,std::map<long,std::string>>({{3, std::any({{4, \"Mon\"}})}})}}))) == (3));\n}\n",
      "timestamp": 1666122553,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpkjvg2fz4.cpp:2:\n/tmp/tmpkjvg2fz4.cpp: In function \u2018int main()\u2019:\n/tmp/tmpkjvg2fz4.cpp:16:198: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   16 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n      |                                                                                                                                                                                                      ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpkjvg2fz4.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpkjvg2fz4.cpp:2:\n/tmp/tmpkjvg2fz4.cpp:16:198: note:   candidate expects at least 2 arguments, 1 provided\n   16 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the depth of a dictionary.\nlong dict_depth(std::any d) {\n    if(d.type() == typeid(std::map<std::string, std::any>)) {\n        long max_depth = 0;\n        for(auto it = std::any_cast<std::map<std::string, std::any>>(d).begin(); it != std::any_cast<std::map<std::string, std::any>>(d).end(); it++) {\n            long depth = dict_depth(it->second);\n            if(depth > max_depth) {\n                max_depth = depth;\n            }\n        }\n        return max_depth + 1;\n    }\n    return 1;\n}\nint main() {\n    auto candidate = dict_depth;\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::string>({{\"c\", \"python\"}})}}))) == (2));\n    assert(candidate((std::any({{1, \"Sun\"}, {2, std::map<long,std::map<long,std::string>>({{3, std::any({{4, \"Mon\"}})}})}}))) == (3));\n}\n",
      "timestamp": 1666122553,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp_h0oddpb.cpp:2:\n/tmp/tmp_h0oddpb.cpp: In function \u2018int main()\u2019:\n/tmp/tmp_h0oddpb.cpp:19:198: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   19 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n      |                                                                                                                                                                                                      ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmp_h0oddpb.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp_h0oddpb.cpp:2:\n/tmp/tmp_h0oddpb.cpp:19:198: note:   candidate expects at least 2 arguments, 1 provided\n   19 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the depth of a dictionary.\nlong dict_depth(std::any d) {\n    long depth = 0;\n    if(d.type() == typeid(std::map<std::string, std::any>)){\n        std::map<std::string, std::any> m = std::any_cast<std::map<std::string, std::any>>(d);\n        for(auto it = m.begin(); it != m.end(); it++){\n            depth = std::max(depth, dict_depth(it->second));\n        }\n        return depth + 1;\n    }\n    return 0;\n}\nint main() {\n    auto candidate = dict_depth;\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::string>({{\"c\", \"python\"}})}}))) == (2));\n    assert(candidate((std::any({{1, \"Sun\"}, {2, std::map<long,std::map<long,std::string>>({{3, std::any({{4, \"Mon\"}})}})}}))) == (3));\n}\n",
      "timestamp": 1666122553,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpito8zutm.cpp:2:\n/tmp/tmpito8zutm.cpp: In function \u2018int main()\u2019:\n/tmp/tmpito8zutm.cpp:17:198: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   17 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n      |                                                                                                                                                                                                      ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpito8zutm.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpito8zutm.cpp:2:\n/tmp/tmpito8zutm.cpp:17:198: note:   candidate expects at least 2 arguments, 1 provided\n   17 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the depth of a dictionary.\nlong dict_depth(std::any d) {\n    long depth = 0;\n    if (d.type() == typeid(std::map<std::string, std::any>)) {\n        for (auto& [key, value] : std::any_cast<std::map<std::string, std::any>>(d)) {\n            depth = std::max(depth, dict_depth(value));\n        }\n        return depth + 1;\n    }\n    return depth;\n}\nint main() {\n    auto candidate = dict_depth;\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::string>({{\"c\", \"python\"}})}}))) == (2));\n    assert(candidate((std::any({{1, \"Sun\"}, {2, std::map<long,std::map<long,std::string>>({{3, std::any({{4, \"Mon\"}})}})}}))) == (3));\n}\n",
      "timestamp": 1666122553,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp57e65vt0.cpp:2:\n/tmp/tmp57e65vt0.cpp: In function \u2018int main()\u2019:\n/tmp/tmp57e65vt0.cpp:16:198: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   16 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n      |                                                                                                                                                                                                      ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmp57e65vt0.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp57e65vt0.cpp:2:\n/tmp/tmp57e65vt0.cpp:16:198: note:   candidate expects at least 2 arguments, 1 provided\n   16 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the depth of a dictionary.\nlong dict_depth(std::any d) {\n    if (d.type() != typeid(std::map<std::string, std::any>)) {\n        return 0;\n    }\n    long max_depth = 0;\n    for (auto& [key, value] : std::any_cast<std::map<std::string, std::any>>(d)) {\n        max_depth = std::max(max_depth, dict_depth(value));\n    }\n    return max_depth + 1;\n}\nint main() {\n    auto candidate = dict_depth;\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::string>({{\"c\", \"python\"}})}}))) == (2));\n    assert(candidate((std::any({{1, \"Sun\"}, {2, std::map<long,std::map<long,std::string>>({{3, std::any({{4, \"Mon\"}})}})}}))) == (3));\n}\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmph4pf0_t3.cpp:2:\n/tmp/tmph4pf0_t3.cpp: In function \u2018int main()\u2019:\n/tmp/tmph4pf0_t3.cpp:16:198: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   16 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n      |                                                                                                                                                                                                      ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmph4pf0_t3.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmph4pf0_t3.cpp:2:\n/tmp/tmph4pf0_t3.cpp:16:198: note:   candidate expects at least 2 arguments, 1 provided\n   16 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the depth of a dictionary.\nlong dict_depth(std::any d) {\n    long depth = 0;\n    if (d.type() == typeid(std::map<std::string, std::any>)) {\n        for (auto& [key, value] : std::any_cast<std::map<std::string, std::any>>(d)) {\n            depth = std::max(depth, dict_depth(value));\n        }\n        return depth + 1;\n    }\n    return depth;\n}\nint main() {\n    auto candidate = dict_depth;\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::string>({{\"c\", \"python\"}})}}))) == (2));\n    assert(candidate((std::any({{1, \"Sun\"}, {2, std::map<long,std::map<long,std::string>>({{3, std::any({{4, \"Mon\"}})}})}}))) == (3));\n}\n",
      "timestamp": 1666122553,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp57e65vt0.cpp:2:\n/tmp/tmp57e65vt0.cpp: In function \u2018int main()\u2019:\n/tmp/tmp57e65vt0.cpp:16:198: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   16 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n      |                                                                                                                                                                                                      ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmp57e65vt0.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp57e65vt0.cpp:2:\n/tmp/tmp57e65vt0.cpp:16:198: note:   candidate expects at least 2 arguments, 1 provided\n   16 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the depth of a dictionary.\nlong dict_depth(std::any d) {\n    long depth = 0;\n    if(d.type() == typeid(std::map<std::string, std::any>)){\n        std::map<std::string, std::any> m = std::any_cast<std::map<std::string, std::any>>(d);\n        for(auto it = m.begin(); it != m.end(); it++){\n            depth = std::max(depth, dict_depth(it->second));\n        }\n        return depth + 1;\n    }\n    return 0;\n}\nint main() {\n    auto candidate = dict_depth;\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::string>({{\"c\", \"python\"}})}}))) == (2));\n    assert(candidate((std::any({{1, \"Sun\"}, {2, std::map<long,std::map<long,std::string>>({{3, std::any({{4, \"Mon\"}})}})}}))) == (3));\n}\n",
      "timestamp": 1666122553,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpito8zutm.cpp:2:\n/tmp/tmpito8zutm.cpp: In function \u2018int main()\u2019:\n/tmp/tmpito8zutm.cpp:17:198: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   17 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n      |                                                                                                                                                                                                      ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpito8zutm.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpito8zutm.cpp:2:\n/tmp/tmpito8zutm.cpp:17:198: note:   candidate expects at least 2 arguments, 1 provided\n   17 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the depth of a dictionary.\nlong dict_depth(std::any d) {\n    if(d.type() != typeid(std::map<std::string, std::any>)) {\n        return 0;\n    }\n    long max_depth = 0;\n    for(auto& [key, value] : std::any_cast<std::map<std::string, std::any>>(d)) {\n        max_depth = std::max(max_depth, dict_depth(value));\n    }\n    return max_depth + 1;\n}\nint main() {\n    auto candidate = dict_depth;\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::string>({{\"c\", \"python\"}})}}))) == (2));\n    assert(candidate((std::any({{1, \"Sun\"}, {2, std::map<long,std::map<long,std::string>>({{3, std::any({{4, \"Mon\"}})}})}}))) == (3));\n}\n",
      "timestamp": 1666122553,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpefum7me3.cpp:2:\n/tmp/tmpefum7me3.cpp: In function \u2018int main()\u2019:\n/tmp/tmpefum7me3.cpp:16:198: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   16 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n      |                                                                                                                                                                                                      ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpefum7me3.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpefum7me3.cpp:2:\n/tmp/tmpefum7me3.cpp:16:198: note:   candidate expects at least 2 arguments, 1 provided\n   16 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the depth of a dictionary.\nlong dict_depth(std::any d) {\n    if(d.type() != typeid(std::map<std::string, std::any>)){\n        return 0;\n    }\n    long max_depth = 0;\n    for(auto& kv : std::any_cast<std::map<std::string, std::any>>(d)){\n        max_depth = std::max(max_depth, dict_depth(kv.second));\n    }\n    return 1 + max_depth;\n}\nint main() {\n    auto candidate = dict_depth;\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::string>({{\"c\", \"python\"}})}}))) == (2));\n    assert(candidate((std::any({{1, \"Sun\"}, {2, std::map<long,std::map<long,std::string>>({{3, std::any({{4, \"Mon\"}})}})}}))) == (3));\n}\n",
      "timestamp": 1666122553,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpenh7qrew.cpp:2:\n/tmp/tmpenh7qrew.cpp: In function \u2018int main()\u2019:\n/tmp/tmpenh7qrew.cpp:16:198: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   16 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n      |                                                                                                                                                                                                      ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpenh7qrew.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpenh7qrew.cpp:2:\n/tmp/tmpenh7qrew.cpp:16:198: note:   candidate expects at least 2 arguments, 1 provided\n   16 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the depth of a dictionary.\nlong dict_depth(std::any d) {\n    long max_depth = 0;\n    std::any stack;\n    std::any key;\n    std::any value;\n    std::any depth;\n    stack.push_back(std::make_pair(d, 1));\n    while (stack.size() > 0) {\n        std::any current = stack.pop_back();\n        d = current.first;\n        depth = current.second;\n        if (depth > max_depth) {\n            max_depth = depth;\n        }\n        for (auto it = d.begin(); it != d.end(); ++it) {\n            key = it.first;\n            value = it.second;\n            if (value.is_dict()) {\n                stack.push_back(std::make_pair(value, depth + 1));\n            }\n        }\n    }\n    return max_depth;\n}\nint main() {\n    auto candidate = dict_depth;\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::string>({{\"c\", \"python\"}})}}))) == (2));\n    assert(candidate((std::any({{1, \"Sun\"}, {2, std::map<long,std::map<long,std::string>>({{3, std::any({{4, \"Mon\"}})}})}}))) == (3));\n}\n",
      "timestamp": 1666122562,
      "stdout": "",
      "stderr": "/tmp/tmp8ut2lo2e.cpp: In function \u2018long int dict_depth(std::any)\u2019:\n/tmp/tmp8ut2lo2e.cpp:10:11: error: \u2018class std::any\u2019 has no member named \u2018push_back\u2019\n   10 |     stack.push_back(std::make_pair(d, 1));\n      |           ^~~~~~~~~\n/tmp/tmp8ut2lo2e.cpp:11:18: error: \u2018class std::any\u2019 has no member named \u2018size\u2019\n   11 |     while (stack.size() > 0) {\n      |                  ^~~~\n/tmp/tmp8ut2lo2e.cpp:12:34: error: \u2018class std::any\u2019 has no member named \u2018pop_back\u2019\n   12 |         std::any current = stack.pop_back();\n      |                                  ^~~~~~~~\n/tmp/tmp8ut2lo2e.cpp:13:21: error: \u2018class std::any\u2019 has no member named \u2018first\u2019\n   13 |         d = current.first;\n      |                     ^~~~~\n/tmp/tmp8ut2lo2e.cpp:14:25: error: \u2018class std::any\u2019 has no member named \u2018second\u2019\n   14 |         depth = current.second;\n      |                         ^~~~~~\n/tmp/tmp8ut2lo2e.cpp:15:19: error: no match for \u2018operator>\u2019 (operand types are \u2018std::any\u2019 and \u2018long int\u2019)\n   15 |         if (depth > max_depth) {\n      |             ~~~~~ ^ ~~~~~~~~~\n      |             |       |\n      |             |       long int\n      |             std::any\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmp8ut2lo2e.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1081:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator>(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1081 |     operator>(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1081:5: note:   template argument deduction/substitution failed:\n/tmp/tmp8ut2lo2e.cpp:15:21: note:   \u2018std::any\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   15 |  ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the depth of a dictionary.\nlong dict_depth(std::any d) {\n    if(d.type() == typeid(std::map<std::string, std::any>)) {\n        std::map<std::string, std::any> m = std::any_cast<std::map<std::string, std::any>>(d);\n        long max_depth = 0;\n        for(auto it = m.begin(); it != m.end(); it++) {\n            long depth = dict_depth(it->second);\n            if(depth > max_depth) {\n                max_depth = depth;\n            }\n        }\n        return max_depth + 1;\n    }\n    else {\n        return 0;\n    }\n}\nint main() {\n    auto candidate = dict_depth;\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::string>({{\"c\", \"python\"}})}}))) == (2));\n    assert(candidate((std::any({{1, \"Sun\"}, {2, std::map<long,std::map<long,std::string>>({{3, std::any({{4, \"Mon\"}})}})}}))) == (3));\n}\n",
      "timestamp": 1666122553,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpkdpkg0jd.cpp:2:\n/tmp/tmpkdpkg0jd.cpp: In function \u2018int main()\u2019:\n/tmp/tmpkdpkg0jd.cpp:22:198: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   22 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n      |                                                                                                                                                                                                      ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpkdpkg0jd.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpkdpkg0jd.cpp:2:\n/tmp/tmpkdpkg0jd.cpp:22:198: note:   candidate expects at least 2 arguments, 1 provided\n   22 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the depth of a dictionary.\nlong dict_depth(std::any d) {\n    // your code here\n    long depth = 0;\n    if(d.type() == typeid(std::map<std::string, std::any>)){\n        std::map<std::string, std::any> m = std::any_cast<std::map<std::string, std::any>>(d);\n        for(auto it = m.begin(); it != m.end(); it++){\n            long temp = dict_depth(it->second);\n            if(temp > depth){\n                depth = temp;\n            }\n        }\n        return depth + 1;\n    }\n    return depth;\n}\nint main() {\n    auto candidate = dict_depth;\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::string>({{\"c\", \"python\"}})}}))) == (2));\n    assert(candidate((std::any({{1, \"Sun\"}, {2, std::map<long,std::map<long,std::string>>({{3, std::any({{4, \"Mon\"}})}})}}))) == (3));\n}\n",
      "timestamp": 1666122553,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpl21xhzer.cpp:2:\n/tmp/tmpl21xhzer.cpp: In function \u2018int main()\u2019:\n/tmp/tmpl21xhzer.cpp:21:198: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   21 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n      |                                                                                                                                                                                                      ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpl21xhzer.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpl21xhzer.cpp:2:\n/tmp/tmpl21xhzer.cpp:21:198: note:   candidate expects at least 2 arguments, 1 provided\n   21 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the depth of a dictionary.\nlong dict_depth(std::any d) {\n    if(d.type() != typeid(std::map<std::string, std::any>))\n        return 1;\n    long max_depth = 0;\n    for(auto& [key, value] : std::any_cast<std::map<std::string, std::any>>(d)) {\n        max_depth = std::max(max_depth, dict_depth(value));\n    }\n    return max_depth + 1;\n}\nint main() {\n    auto candidate = dict_depth;\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::string>({{\"c\", \"python\"}})}}))) == (2));\n    assert(candidate((std::any({{1, \"Sun\"}, {2, std::map<long,std::map<long,std::string>>({{3, std::any({{4, \"Mon\"}})}})}}))) == (3));\n}\n",
      "timestamp": 1666122553,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpzdil7u9e.cpp:2:\n/tmp/tmpzdil7u9e.cpp: In function \u2018int main()\u2019:\n/tmp/tmpzdil7u9e.cpp:15:198: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n      |                                                                                                                                                                                                      ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpzdil7u9e.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpzdil7u9e.cpp:2:\n/tmp/tmpzdil7u9e.cpp:15:198: note:   candidate expects at least 2 arguments, 1 provided\n   15 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the depth of a dictionary.\nlong dict_depth(std::any d) {\n    if(!d.has_value()) return 0;\n    if(d.type() != typeid(std::map<std::string, std::any>)) return 1;\n    long max_depth = 0;\n    for(auto& [key, value] : std::any_cast<std::map<std::string, std::any>>(d)) {\n        max_depth = std::max(max_depth, dict_depth(value));\n    }\n    return max_depth + 1;\n}\nint main() {\n    auto candidate = dict_depth;\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::string>({{\"c\", \"python\"}})}}))) == (2));\n    assert(candidate((std::any({{1, \"Sun\"}, {2, std::map<long,std::map<long,std::string>>({{3, std::any({{4, \"Mon\"}})}})}}))) == (3));\n}\n",
      "timestamp": 1666122553,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpmf5otjnt.cpp:2:\n/tmp/tmpmf5otjnt.cpp: In function \u2018int main()\u2019:\n/tmp/tmpmf5otjnt.cpp:15:198: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n      |                                                                                                                                                                                                      ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpmf5otjnt.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpmf5otjnt.cpp:2:\n/tmp/tmpmf5otjnt.cpp:15:198: note:   candidate expects at least 2 arguments, 1 provided\n   15 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the depth of a dictionary.\nlong dict_depth(std::any d) {\n    if (d.type() != typeid(std::map<std::any, std::any>)) {\n        return 0;\n    }\n    long max_depth = 0;\n    for (auto& [k, v] : std::any_cast<std::map<std::any, std::any>>(d)) {\n        max_depth = std::max(max_depth, dict_depth(v));\n    }\n    return 1 + max_depth;\n}\nint main() {\n    auto candidate = dict_depth;\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::string>({{\"c\", \"python\"}})}}))) == (2));\n    assert(candidate((std::any({{1, \"Sun\"}, {2, std::map<long,std::map<long,std::string>>({{3, std::any({{4, \"Mon\"}})}})}}))) == (3));\n}\n",
      "timestamp": 1666122553,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmphvojlr3_.cpp:2:\n/tmp/tmphvojlr3_.cpp: In function \u2018int main()\u2019:\n/tmp/tmphvojlr3_.cpp:16:198: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   16 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n      |                                                                                                                                                                                                      ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmphvojlr3_.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmphvojlr3_.cpp:2:\n/tmp/tmphvojlr3_.cpp:16:198: note:   candidate expects at least 2 arguments, 1 provided\n   16 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the depth of a dictionary.\nlong dict_depth(std::any d) {\n    long depth = 0;\n    if (d.type() == typeid(std::map<std::string, std::any>)) {\n        std::map<std::string, std::any> m = std::any_cast<std::map<std::string, std::any>>(d);\n        for (auto i : m) {\n            depth = std::max(depth, dict_depth(i.second));\n        }\n        return depth + 1;\n    }\n    return 0;\n}\nint main() {\n    auto candidate = dict_depth;\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::string>({{\"c\", \"python\"}})}}))) == (2));\n    assert(candidate((std::any({{1, \"Sun\"}, {2, std::map<long,std::map<long,std::string>>({{3, std::any({{4, \"Mon\"}})}})}}))) == (3));\n}\n",
      "timestamp": 1666122553,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpglf62c1c.cpp:2:\n/tmp/tmpglf62c1c.cpp: In function \u2018int main()\u2019:\n/tmp/tmpglf62c1c.cpp:17:198: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   17 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n      |                                                                                                                                                                                                      ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpglf62c1c.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpglf62c1c.cpp:2:\n/tmp/tmpglf62c1c.cpp:17:198: note:   candidate expects at least 2 arguments, 1 provided\n   17 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the depth of a dictionary.\nlong dict_depth(std::any d) {\n    if(d.type() == typeid(std::map<std::string, std::any>)){\n        long max_depth = 0;\n        for(auto &[key, value] : std::any_cast<std::map<std::string, std::any>>(d)){\n            max_depth = std::max(max_depth, dict_depth(value));\n        }\n        return max_depth + 1;\n    }\n    return 0;\n}\nint main() {\n    auto candidate = dict_depth;\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::string>({{\"c\", \"python\"}})}}))) == (2));\n    assert(candidate((std::any({{1, \"Sun\"}, {2, std::map<long,std::map<long,std::string>>({{3, std::any({{4, \"Mon\"}})}})}}))) == (3));\n}\n",
      "timestamp": 1666122553,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpiyr0ins6.cpp:2:\n/tmp/tmpiyr0ins6.cpp: In function \u2018int main()\u2019:\n/tmp/tmpiyr0ins6.cpp:16:198: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   16 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n      |                                                                                                                                                                                                      ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpiyr0ins6.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpiyr0ins6.cpp:2:\n/tmp/tmpiyr0ins6.cpp:16:198: note:   candidate expects at least 2 arguments, 1 provided\n   16 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the depth of a dictionary.\nlong dict_depth(std::any d) {\n    // your code here\n    long depth = 0;\n    if(d.type() == typeid(std::map<std::string, std::any>)){\n        depth = 1;\n        std::map<std::string, std::any> m = std::any_cast<std::map<std::string, std::any>>(d);\n        for(auto it = m.begin(); it != m.end(); it++){\n            depth = std::max(depth, 1 + dict_depth(it->second));\n        }\n    }\n    return depth;\n}\nint main() {\n    auto candidate = dict_depth;\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::string>({{\"c\", \"python\"}})}}))) == (2));\n    assert(candidate((std::any({{1, \"Sun\"}, {2, std::map<long,std::map<long,std::string>>({{3, std::any({{4, \"Mon\"}})}})}}))) == (3));\n}\n",
      "timestamp": 1666122553,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpy2s0meow.cpp:2:\n/tmp/tmpy2s0meow.cpp: In function \u2018int main()\u2019:\n/tmp/tmpy2s0meow.cpp:18:198: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   18 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n      |                                                                                                                                                                                                      ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpy2s0meow.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpy2s0meow.cpp:2:\n/tmp/tmpy2s0meow.cpp:18:198: note:   candidate expects at least 2 arguments, 1 provided\n   18 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the depth of a dictionary.\nlong dict_depth(std::any d) {\n    if(d.type() != typeid(std::map<std::string, std::any>))\n        return 0;\n    long max_depth = 0;\n    for(auto& [key, value] : std::any_cast<std::map<std::string, std::any>>(d)) {\n        max_depth = std::max(max_depth, dict_depth(value));\n    }\n    return max_depth + 1;\n}\nint main() {\n    auto candidate = dict_depth;\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::string>({{\"c\", \"python\"}})}}))) == (2));\n    assert(candidate((std::any({{1, \"Sun\"}, {2, std::map<long,std::map<long,std::string>>({{3, std::any({{4, \"Mon\"}})}})}}))) == (3));\n}\n",
      "timestamp": 1666122553,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpkndolzs9.cpp:2:\n/tmp/tmpkndolzs9.cpp: In function \u2018int main()\u2019:\n/tmp/tmpkndolzs9.cpp:15:198: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n      |                                                                                                                                                                                                      ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpkndolzs9.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpkndolzs9.cpp:2:\n/tmp/tmpkndolzs9.cpp:15:198: note:   candidate expects at least 2 arguments, 1 provided\n   15 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the depth of a dictionary.\nlong dict_depth(std::any d) {\n    long max_depth = 0;\n    std::queue<std::any> q;\n    q.push(d);\n    while(!q.empty()) {\n        auto temp = q.front();\n        q.pop();\n        if(temp.type() == typeid(std::map<std::string, std::any>)) {\n            auto m = std::any_cast<std::map<std::string, std::any>>(temp);\n            for(auto i : m) {\n                q.push(i.second);\n            }\n        }\n        else if(temp.type() == typeid(std::vector<std::any>)) {\n            auto v = std::any_cast<std::vector<std::any>>(temp);\n            for(auto i : v) {\n                q.push(i);\n            }\n        }\n        max_depth++;\n    }\n    return max_depth;\n}\nint main() {\n    auto candidate = dict_depth;\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::string>({{\"c\", \"python\"}})}}))) == (2));\n    assert(candidate((std::any({{1, \"Sun\"}, {2, std::map<long,std::map<long,std::string>>({{3, std::any({{4, \"Mon\"}})}})}}))) == (3));\n}\n",
      "timestamp": 1666122554,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpm6n7g28x.cpp:2:\n/tmp/tmpm6n7g28x.cpp: In function \u2018int main()\u2019:\n/tmp/tmpm6n7g28x.cpp:29:198: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   29 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n      |                                                                                                                                                                                                      ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpm6n7g28x.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpm6n7g28x.cpp:2:\n/tmp/tmpm6n7g28x.cpp:29:198: note:   candidate expects at least 2 arguments, 1 provided\n   29 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the depth of a dictionary.\nlong dict_depth(std::any d) {\n    if(!d.has_value())\n        return 0;\n    if(d.type() == typeid(int))\n        return 1;\n    if(d.type() == typeid(std::map<std::string, std::any>)) {\n        long max_depth = 0;\n        for(auto& [key, value] : std::any_cast<std::map<std::string, std::any>>(d)) {\n            max_depth = std::max(max_depth, dict_depth(value));\n        }\n        return max_depth + 1;\n    }\n    assert(false);\n}\nint main() {\n    auto candidate = dict_depth;\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::string>({{\"c\", \"python\"}})}}))) == (2));\n    assert(candidate((std::any({{1, \"Sun\"}, {2, std::map<long,std::map<long,std::string>>({{3, std::any({{4, \"Mon\"}})}})}}))) == (3));\n}\n",
      "timestamp": 1666122553,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpovm6u1q0.cpp:2:\n/tmp/tmpovm6u1q0.cpp: In function \u2018int main()\u2019:\n/tmp/tmpovm6u1q0.cpp:20:198: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   20 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n      |                                                                                                                                                                                                      ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpovm6u1q0.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpovm6u1q0.cpp:2:\n/tmp/tmpovm6u1q0.cpp:20:198: note:   candidate expects at least 2 arguments, 1 provided\n   20 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the depth of a dictionary.\nlong dict_depth(std::any d) {\n    if (d.type() != typeid(std::map<std::string, std::any>)) {\n        return 0;\n    }\n    std::map<std::string, std::any> m = std::any_cast<std::map<std::string, std::any>>(d);\n    long max_depth = 0;\n    for (auto it = m.begin(); it != m.end(); it++) {\n        long depth = dict_depth(it->second);\n        if (depth > max_depth) {\n            max_depth = depth;\n        }\n    }\n    return max_depth + 1;\n}\nint main() {\n    auto candidate = dict_depth;\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::string>({{\"c\", \"python\"}})}}))) == (2));\n    assert(candidate((std::any({{1, \"Sun\"}, {2, std::map<long,std::map<long,std::string>>({{3, std::any({{4, \"Mon\"}})}})}}))) == (3));\n}\n",
      "timestamp": 1666122553,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpgrm22_8n.cpp:2:\n/tmp/tmpgrm22_8n.cpp: In function \u2018int main()\u2019:\n/tmp/tmpgrm22_8n.cpp:20:198: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   20 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n      |                                                                                                                                                                                                      ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpgrm22_8n.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpgrm22_8n.cpp:2:\n/tmp/tmpgrm22_8n.cpp:20:198: note:   candidate expects at least 2 arguments, 1 provided\n   20 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the depth of a dictionary.\nlong dict_depth(std::any d) {\n    if (d.type() != typeid(std::map<std::string, std::any>)) {\n        return 0;\n    }\n    long max_depth = 0;\n    for (auto& [key, value] : std::any_cast<std::map<std::string, std::any>>(d)) {\n        max_depth = std::max(max_depth, dict_depth(value));\n    }\n    return max_depth + 1;\n}\nint main() {\n    auto candidate = dict_depth;\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::string>({{\"c\", \"python\"}})}}))) == (2));\n    assert(candidate((std::any({{1, \"Sun\"}, {2, std::map<long,std::map<long,std::string>>({{3, std::any({{4, \"Mon\"}})}})}}))) == (3));\n}\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmph4pf0_t3.cpp:2:\n/tmp/tmph4pf0_t3.cpp: In function \u2018int main()\u2019:\n/tmp/tmph4pf0_t3.cpp:16:198: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   16 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n      |                                                                                                                                                                                                      ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmph4pf0_t3.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmph4pf0_t3.cpp:2:\n/tmp/tmph4pf0_t3.cpp:16:198: note:   candidate expects at least 2 arguments, 1 provided\n   16 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the depth of a dictionary.\nlong dict_depth(std::any d) {\n    if(d.type() == typeid(std::map<std::string, std::any>)) {\n        long max_depth = 0;\n        for(auto& [key, value] : std::any_cast<std::map<std::string, std::any>>(d)) {\n            max_depth = std::max(max_depth, dict_depth(value));\n        }\n        return max_depth + 1;\n    }\n    return 0;\n}\nint main() {\n    auto candidate = dict_depth;\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::string>({{\"c\", \"python\"}})}}))) == (2));\n    assert(candidate((std::any({{1, \"Sun\"}, {2, std::map<long,std::map<long,std::string>>({{3, std::any({{4, \"Mon\"}})}})}}))) == (3));\n}\n",
      "timestamp": 1666122553,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpm85kq6bv.cpp:2:\n/tmp/tmpm85kq6bv.cpp: In function \u2018int main()\u2019:\n/tmp/tmpm85kq6bv.cpp:16:198: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   16 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n      |                                                                                                                                                                                                      ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpm85kq6bv.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpm85kq6bv.cpp:2:\n/tmp/tmpm85kq6bv.cpp:16:198: note:   candidate expects at least 2 arguments, 1 provided\n   16 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the depth of a dictionary.\nlong dict_depth(std::any d) {\n    if(!d.has_value())\n        return 0;\n    if(d.type() != typeid(std::map<std::string, std::any>))\n        return 0;\n    long max_depth = 0;\n    for(auto& [key, value] : std::any_cast<std::map<std::string, std::any>>(d)) {\n        max_depth = std::max(max_depth, dict_depth(value));\n    }\n    return max_depth + 1;\n}\nint main() {\n    auto candidate = dict_depth;\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::string>({{\"c\", \"python\"}})}}))) == (2));\n    assert(candidate((std::any({{1, \"Sun\"}, {2, std::map<long,std::map<long,std::string>>({{3, std::any({{4, \"Mon\"}})}})}}))) == (3));\n}\n",
      "timestamp": 1666122555,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpvcr8nfh5.cpp:2:\n/tmp/tmpvcr8nfh5.cpp: In function \u2018int main()\u2019:\n/tmp/tmpvcr8nfh5.cpp:17:198: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   17 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n      |                                                                                                                                                                                                      ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpvcr8nfh5.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpvcr8nfh5.cpp:2:\n/tmp/tmpvcr8nfh5.cpp:17:198: note:   candidate expects at least 2 arguments, 1 provided\n   17 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the depth of a dictionary.\nlong dict_depth(std::any d) {\n    if(d.type() == typeid(std::map<std::string, std::any>)) {\n        auto m = std::any_cast<std::map<std::string, std::any>>(d);\n        long max_depth = 0;\n        for(auto& kv : m) {\n            max_depth = std::max(max_depth, dict_depth(kv.second));\n        }\n        return max_depth + 1;\n    } else {\n        return 0;\n    }\n}\nint main() {\n    auto candidate = dict_depth;\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::string>({{\"c\", \"python\"}})}}))) == (2));\n    assert(candidate((std::any({{1, \"Sun\"}, {2, std::map<long,std::map<long,std::string>>({{3, std::any({{4, \"Mon\"}})}})}}))) == (3));\n}\n",
      "timestamp": 1666122555,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp10nqqyd6.cpp:2:\n/tmp/tmp10nqqyd6.cpp: In function \u2018int main()\u2019:\n/tmp/tmp10nqqyd6.cpp:18:198: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   18 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n      |                                                                                                                                                                                                      ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmp10nqqyd6.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp10nqqyd6.cpp:2:\n/tmp/tmp10nqqyd6.cpp:18:198: note:   candidate expects at least 2 arguments, 1 provided\n   18 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the depth of a dictionary.\nlong dict_depth(std::any d) {\n    if (d.type() != typeid(std::map<std::string, std::any>)) {\n        return 0;\n    }\n    long max_depth = 0;\n    for (auto& [key, value] : std::any_cast<std::map<std::string, std::any>>(d)) {\n        max_depth = std::max(max_depth, dict_depth(value));\n    }\n    return max_depth + 1;\n}\nint main() {\n    auto candidate = dict_depth;\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::string>({{\"c\", \"python\"}})}}))) == (2));\n    assert(candidate((std::any({{1, \"Sun\"}, {2, std::map<long,std::map<long,std::string>>({{3, std::any({{4, \"Mon\"}})}})}}))) == (3));\n}\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmph4pf0_t3.cpp:2:\n/tmp/tmph4pf0_t3.cpp: In function \u2018int main()\u2019:\n/tmp/tmph4pf0_t3.cpp:16:198: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   16 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n      |                                                                                                                                                                                                      ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmph4pf0_t3.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmph4pf0_t3.cpp:2:\n/tmp/tmph4pf0_t3.cpp:16:198: note:   candidate expects at least 2 arguments, 1 provided\n   16 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the depth of a dictionary.\nlong dict_depth(std::any d) {\n    if (d.type() != typeid(std::map<std::string, std::any>)) {\n        return 0;\n    }\n    long max_depth = 0;\n    for (auto& [key, value] : std::any_cast<std::map<std::string, std::any>>(d)) {\n        max_depth = std::max(max_depth, dict_depth(value));\n    }\n    return max_depth + 1;\n}\nint main() {\n    auto candidate = dict_depth;\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::string>({{\"c\", \"python\"}})}}))) == (2));\n    assert(candidate((std::any({{1, \"Sun\"}, {2, std::map<long,std::map<long,std::string>>({{3, std::any({{4, \"Mon\"}})}})}}))) == (3));\n}\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmph4pf0_t3.cpp:2:\n/tmp/tmph4pf0_t3.cpp: In function \u2018int main()\u2019:\n/tmp/tmph4pf0_t3.cpp:16:198: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   16 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n      |                                                                                                                                                                                                      ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmph4pf0_t3.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmph4pf0_t3.cpp:2:\n/tmp/tmph4pf0_t3.cpp:16:198: note:   candidate expects at least 2 arguments, 1 provided\n   16 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the depth of a dictionary.\nlong dict_depth(std::any d) {\n    if (d.type() != typeid(std::map<std::string, std::any>))\n        return 0;\n    long max_depth = 0;\n    for (auto& [key, value] : std::any_cast<std::map<std::string, std::any>>(d)) {\n        max_depth = std::max(max_depth, dict_depth(value));\n    }\n    return max_depth + 1;\n}\nint main() {\n    auto candidate = dict_depth;\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::string>({{\"c\", \"python\"}})}}))) == (2));\n    assert(candidate((std::any({{1, \"Sun\"}, {2, std::map<long,std::map<long,std::string>>({{3, std::any({{4, \"Mon\"}})}})}}))) == (3));\n}\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpef22rg71.cpp:2:\n/tmp/tmpef22rg71.cpp: In function \u2018int main()\u2019:\n/tmp/tmpef22rg71.cpp:15:198: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n      |                                                                                                                                                                                                      ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpef22rg71.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpef22rg71.cpp:2:\n/tmp/tmpef22rg71.cpp:15:198: note:   candidate expects at least 2 arguments, 1 provided\n   15 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the depth of a dictionary.\nlong dict_depth(std::any d) {\n    long depth = 0;\n    if (d.type() == typeid(std::map<std::string, std::any>)) {\n        for (auto& [key, value] : std::any_cast<std::map<std::string, std::any>>(d)) {\n            depth = std::max(depth, dict_depth(value));\n        }\n        return depth + 1;\n    }\n    return depth;\n}\nint main() {\n    auto candidate = dict_depth;\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::string>({{\"c\", \"python\"}})}}))) == (2));\n    assert(candidate((std::any({{1, \"Sun\"}, {2, std::map<long,std::map<long,std::string>>({{3, std::any({{4, \"Mon\"}})}})}}))) == (3));\n}\n",
      "timestamp": 1666122553,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp57e65vt0.cpp:2:\n/tmp/tmp57e65vt0.cpp: In function \u2018int main()\u2019:\n/tmp/tmp57e65vt0.cpp:16:198: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   16 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n      |                                                                                                                                                                                                      ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmp57e65vt0.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp57e65vt0.cpp:2:\n/tmp/tmp57e65vt0.cpp:16:198: note:   candidate expects at least 2 arguments, 1 provided\n   16 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the depth of a dictionary.\nlong dict_depth(std::any d) {\n    // your code here\n    long depth = 0;\n    if(d.type() == typeid(std::map<std::string, std::any>)){\n        depth = 1;\n        for(auto i : std::any_cast<std::map<std::string, std::any>>(d)){\n            depth = std::max(depth, dict_depth(i.second) + 1);\n        }\n    }\n    return depth;\n}\nint main() {\n    auto candidate = dict_depth;\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::string>({{\"c\", \"python\"}})}}))) == (2));\n    assert(candidate((std::any({{1, \"Sun\"}, {2, std::map<long,std::map<long,std::string>>({{3, std::any({{4, \"Mon\"}})}})}}))) == (3));\n}\n",
      "timestamp": 1666122555,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpcl5u7f5n.cpp:2:\n/tmp/tmpcl5u7f5n.cpp: In function \u2018int main()\u2019:\n/tmp/tmpcl5u7f5n.cpp:17:198: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   17 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n      |                                                                                                                                                                                                      ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpcl5u7f5n.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpcl5u7f5n.cpp:2:\n/tmp/tmpcl5u7f5n.cpp:17:198: note:   candidate expects at least 2 arguments, 1 provided\n   17 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the depth of a dictionary.\nlong dict_depth(std::any d) {\n    if (d.type() != typeid(std::map<std::string, std::any>)) {\n        return 0;\n    }\n    long max_depth = 0;\n    for (auto& [key, value] : std::any_cast<std::map<std::string, std::any>>(d)) {\n        max_depth = std::max(max_depth, dict_depth(value));\n    }\n    return max_depth + 1;\n}\nint main() {\n    auto candidate = dict_depth;\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::string>({{\"c\", \"python\"}})}}))) == (2));\n    assert(candidate((std::any({{1, \"Sun\"}, {2, std::map<long,std::map<long,std::string>>({{3, std::any({{4, \"Mon\"}})}})}}))) == (3));\n}\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmph4pf0_t3.cpp:2:\n/tmp/tmph4pf0_t3.cpp: In function \u2018int main()\u2019:\n/tmp/tmph4pf0_t3.cpp:16:198: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   16 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n      |                                                                                                                                                                                                      ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmph4pf0_t3.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmph4pf0_t3.cpp:2:\n/tmp/tmph4pf0_t3.cpp:16:198: note:   candidate expects at least 2 arguments, 1 provided\n   16 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the depth of a dictionary.\nlong dict_depth(std::any d) {\n    long depth = 0;\n    if (d.type() != typeid(std::map<std::string, std::any>)) {\n        return 0;\n    }\n    std::map<std::string, std::any> m = std::any_cast<std::map<std::string, std::any>>(d);\n    for (auto it = m.begin(); it != m.end(); it++) {\n        depth = std::max(depth, dict_depth(it->second));\n    }\n    return depth + 1;\n}\nint main() {\n    auto candidate = dict_depth;\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::string>({{\"c\", \"python\"}})}}))) == (2));\n    assert(candidate((std::any({{1, \"Sun\"}, {2, std::map<long,std::map<long,std::string>>({{3, std::any({{4, \"Mon\"}})}})}}))) == (3));\n}\n",
      "timestamp": 1666122555,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmptaiv8n06.cpp:2:\n/tmp/tmptaiv8n06.cpp: In function \u2018int main()\u2019:\n/tmp/tmptaiv8n06.cpp:17:198: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   17 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n      |                                                                                                                                                                                                      ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmptaiv8n06.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmptaiv8n06.cpp:2:\n/tmp/tmptaiv8n06.cpp:17:198: note:   candidate expects at least 2 arguments, 1 provided\n   17 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the depth of a dictionary.\nlong dict_depth(std::any d) {\n    if(d.type() != typeid(std::map<std::string, std::any>))\n        return 0;\n    std::map<std::string, std::any> m = std::any_cast<std::map<std::string, std::any>>(d);\n    long max_depth = 0;\n    for(auto it = m.begin(); it != m.end(); it++) {\n        long depth = dict_depth(it->second);\n        if(depth > max_depth)\n            max_depth = depth;\n    }\n    return max_depth + 1;\n}\nint main() {\n    auto candidate = dict_depth;\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::string>({{\"c\", \"python\"}})}}))) == (2));\n    assert(candidate((std::any({{1, \"Sun\"}, {2, std::map<long,std::map<long,std::string>>({{3, std::any({{4, \"Mon\"}})}})}}))) == (3));\n}\n",
      "timestamp": 1666122555,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpu0lbua67.cpp:2:\n/tmp/tmpu0lbua67.cpp: In function \u2018int main()\u2019:\n/tmp/tmpu0lbua67.cpp:18:198: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   18 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n      |                                                                                                                                                                                                      ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpu0lbua67.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpu0lbua67.cpp:2:\n/tmp/tmpu0lbua67.cpp:18:198: note:   candidate expects at least 2 arguments, 1 provided\n   18 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the depth of a dictionary.\nlong dict_depth(std::any d) {\n    if (d.type() != typeid(std::map<std::string, std::any>)) {\n        return 0;\n    }\n    long max_depth = 0;\n    for (auto& [key, value] : std::any_cast<std::map<std::string, std::any>>(d)) {\n        max_depth = std::max(max_depth, dict_depth(value));\n    }\n    return max_depth + 1;\n}\nint main() {\n    auto candidate = dict_depth;\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::string>({{\"c\", \"python\"}})}}))) == (2));\n    assert(candidate((std::any({{1, \"Sun\"}, {2, std::map<long,std::map<long,std::string>>({{3, std::any({{4, \"Mon\"}})}})}}))) == (3));\n}\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmph4pf0_t3.cpp:2:\n/tmp/tmph4pf0_t3.cpp: In function \u2018int main()\u2019:\n/tmp/tmph4pf0_t3.cpp:16:198: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   16 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n      |                                                                                                                                                                                                      ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmph4pf0_t3.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmph4pf0_t3.cpp:2:\n/tmp/tmph4pf0_t3.cpp:16:198: note:   candidate expects at least 2 arguments, 1 provided\n   16 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the depth of a dictionary.\nlong dict_depth(std::any d) {\n    if (!d.has_value()) {\n        return 0;\n    }\n    if (d.type() != typeid(std::map<std::string, std::any>)) {\n        return 0;\n    }\n    long max_depth = 0;\n    for (auto& [key, value] : std::any_cast<std::map<std::string, std::any>>(d)) {\n        max_depth = std::max(max_depth, dict_depth(value));\n    }\n    return max_depth + 1;\n}\nint main() {\n    auto candidate = dict_depth;\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::string>({{\"c\", \"python\"}})}}))) == (2));\n    assert(candidate((std::any({{1, \"Sun\"}, {2, std::map<long,std::map<long,std::string>>({{3, std::any({{4, \"Mon\"}})}})}}))) == (3));\n}\n",
      "timestamp": 1666122555,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpc7j_jfha.cpp:2:\n/tmp/tmpc7j_jfha.cpp: In function \u2018int main()\u2019:\n/tmp/tmpc7j_jfha.cpp:19:198: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   19 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n      |                                                                                                                                                                                                      ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpc7j_jfha.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpc7j_jfha.cpp:2:\n/tmp/tmpc7j_jfha.cpp:19:198: note:   candidate expects at least 2 arguments, 1 provided\n   19 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the depth of a dictionary.\nlong dict_depth(std::any d) {\n    long max_depth = 0;\n    for (auto &[key, value] : d) {\n        if (value.type() == typeid(std::any)) {\n            long depth = dict_depth(value);\n            if (depth > max_depth) {\n                max_depth = depth;\n            }\n        }\n    }\n    return max_depth + 1;\n}\nint main() {\n    auto candidate = dict_depth;\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::string>({{\"c\", \"python\"}})}}))) == (2));\n    assert(candidate((std::any({{1, \"Sun\"}, {2, std::map<long,std::map<long,std::string>>({{3, std::any({{4, \"Mon\"}})}})}}))) == (3));\n}\n",
      "timestamp": 1666122555,
      "stdout": "",
      "stderr": "/tmp/tmpcdy3nn6a.cpp: In function \u2018long int dict_depth(std::any)\u2019:\n/tmp/tmpcdy3nn6a.cpp:6:31: error: no matching function for call to \u2018begin(std::any&)\u2019\n    6 |     for (auto &[key, value] : d) {\n      |                               ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/range_access.h:36,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/string:54,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/locale_classes.h:40,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/ios_base.h:41,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ios:42,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/istream:38,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/sstream:38,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/complex:45,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ccomplex:39,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:54,\n                 from /tmp/tmpcdy3nn6a.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/initializer_list:89:5: note: candidate: \u2018template<class _Tp> constexpr const _Tp* std::begin(std::initializer_list<_Tp>)\u2019\n   89 |     begin(initializer_list<_Tp> __ils) noexcept\n      |     ^~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/initializer_list:89:5: note:   template argument deduction/substitution failed:\n/tmp/tmpcdy3nn6a.cpp:6:31: note:   \u2018std::any\u2019 is not derived from \u2018std::initializer_list<_Tp>\u2019\n    6 |     for (auto &[key, value] : d) {\n      |                               ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/string:54,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/locale_classes.h:40,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/ios_base",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the depth of a dictionary.\nlong dict_depth(std::any d) {\n    if(d.type() != typeid(std::map<std::string, std::any>)) {\n        return 0;\n    }\n    std::map<std::string, std::any> m = std::any_cast<std::map<std::string, std::any>>(d);\n    long max_depth = 0;\n    for(auto it = m.begin(); it != m.end(); it++) {\n        long depth = dict_depth(it->second);\n        if(depth > max_depth) {\n            max_depth = depth;\n        }\n    }\n    return max_depth + 1;\n}\nint main() {\n    auto candidate = dict_depth;\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::string>({{\"c\", \"python\"}})}}))) == (2));\n    assert(candidate((std::any({{1, \"Sun\"}, {2, std::map<long,std::map<long,std::string>>({{3, std::any({{4, \"Mon\"}})}})}}))) == (3));\n}\n",
      "timestamp": 1666122555,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp5878pii_.cpp:2:\n/tmp/tmp5878pii_.cpp: In function \u2018int main()\u2019:\n/tmp/tmp5878pii_.cpp:20:198: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   20 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n      |                                                                                                                                                                                                      ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmp5878pii_.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp5878pii_.cpp:2:\n/tmp/tmp5878pii_.cpp:20:198: note:   candidate expects at least 2 arguments, 1 provided\n   20 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the depth of a dictionary.\nlong dict_depth(std::any d) {\n    // your code here\n    if(d.type() == typeid(std::map<std::string, std::any>)){\n        std::map<std::string, std::any> m = std::any_cast<std::map<std::string, std::any>>(d);\n        long max = 0;\n        for(auto it = m.begin(); it != m.end(); it++){\n            long temp = dict_depth(it->second);\n            if(temp > max)\n                max = temp;\n        }\n        return max + 1;\n    }\n    else\n        return 1;\n}\nint main() {\n    auto candidate = dict_depth;\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::string>({{\"c\", \"python\"}})}}))) == (2));\n    assert(candidate((std::any({{1, \"Sun\"}, {2, std::map<long,std::map<long,std::string>>({{3, std::any({{4, \"Mon\"}})}})}}))) == (3));\n}\n",
      "timestamp": 1666122555,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpb8q9m54o.cpp:2:\n/tmp/tmpb8q9m54o.cpp: In function \u2018int main()\u2019:\n/tmp/tmpb8q9m54o.cpp:21:198: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   21 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n      |                                                                                                                                                                                                      ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpb8q9m54o.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpb8q9m54o.cpp:2:\n/tmp/tmpb8q9m54o.cpp:21:198: note:   candidate expects at least 2 arguments, 1 provided\n   21 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the depth of a dictionary.\nlong dict_depth(std::any d) {\n    long depth = 0;\n    if (d.type() == typeid(std::map<std::string, std::any>)) {\n        for (auto &it : std::any_cast<std::map<std::string, std::any>>(d)) {\n            depth = std::max(depth, dict_depth(it.second));\n        }\n        return depth + 1;\n    }\n    return 0;\n}\nint main() {\n    auto candidate = dict_depth;\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::string>({{\"c\", \"python\"}})}}))) == (2));\n    assert(candidate((std::any({{1, \"Sun\"}, {2, std::map<long,std::map<long,std::string>>({{3, std::any({{4, \"Mon\"}})}})}}))) == (3));\n}\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp9bvm9b7z.cpp:2:\n/tmp/tmp9bvm9b7z.cpp: In function \u2018int main()\u2019:\n/tmp/tmp9bvm9b7z.cpp:16:198: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   16 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n      |                                                                                                                                                                                                      ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmp9bvm9b7z.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp9bvm9b7z.cpp:2:\n/tmp/tmp9bvm9b7z.cpp:16:198: note:   candidate expects at least 2 arguments, 1 provided\n   16 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the depth of a dictionary.\nlong dict_depth(std::any d) {\n    if (d.type() != typeid(std::map<std::string, std::any>)) {\n        return 0;\n    }\n    long max_depth = 0;\n    for (auto& [key, value] : std::any_cast<std::map<std::string, std::any>>(d)) {\n        max_depth = std::max(max_depth, dict_depth(value));\n    }\n    return max_depth + 1;\n}\nint main() {\n    auto candidate = dict_depth;\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::string>({{\"c\", \"python\"}})}}))) == (2));\n    assert(candidate((std::any({{1, \"Sun\"}, {2, std::map<long,std::map<long,std::string>>({{3, std::any({{4, \"Mon\"}})}})}}))) == (3));\n}\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmph4pf0_t3.cpp:2:\n/tmp/tmph4pf0_t3.cpp: In function \u2018int main()\u2019:\n/tmp/tmph4pf0_t3.cpp:16:198: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   16 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n      |                                                                                                                                                                                                      ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmph4pf0_t3.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmph4pf0_t3.cpp:2:\n/tmp/tmph4pf0_t3.cpp:16:198: note:   candidate expects at least 2 arguments, 1 provided\n   16 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the depth of a dictionary.\nlong dict_depth(std::any d) {\n    // Your code here\n    if(d.type() == typeid(std::map<std::string, std::any>)){\n        std::map<std::string, std::any> m = std::any_cast<std::map<std::string, std::any>>(d);\n        long max = 0;\n        for(auto it = m.begin(); it != m.end(); it++){\n            long temp = dict_depth(it->second);\n            if(temp > max)\n                max = temp;\n        }\n        return max + 1;\n    }\n    else\n        return 0;\n}\nint main() {\n    auto candidate = dict_depth;\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::string>({{\"c\", \"python\"}})}}))) == (2));\n    assert(candidate((std::any({{1, \"Sun\"}, {2, std::map<long,std::map<long,std::string>>({{3, std::any({{4, \"Mon\"}})}})}}))) == (3));\n}\n",
      "timestamp": 1666122555,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpx8qvs2_m.cpp:2:\n/tmp/tmpx8qvs2_m.cpp: In function \u2018int main()\u2019:\n/tmp/tmpx8qvs2_m.cpp:21:198: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   21 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n      |                                                                                                                                                                                                      ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpx8qvs2_m.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpx8qvs2_m.cpp:2:\n/tmp/tmpx8qvs2_m.cpp:21:198: note:   candidate expects at least 2 arguments, 1 provided\n   21 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the depth of a dictionary.\nlong dict_depth(std::any d) {\n    if (d.type() != typeid(std::map<std::string, std::any>)) {\n        return 0;\n    }\n    long max_depth = 0;\n    for (auto& [key, value] : std::any_cast<std::map<std::string, std::any>>(d)) {\n        max_depth = std::max(max_depth, dict_depth(value));\n    }\n    return max_depth + 1;\n}\nint main() {\n    auto candidate = dict_depth;\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::string>({{\"c\", \"python\"}})}}))) == (2));\n    assert(candidate((std::any({{1, \"Sun\"}, {2, std::map<long,std::map<long,std::string>>({{3, std::any({{4, \"Mon\"}})}})}}))) == (3));\n}\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmph4pf0_t3.cpp:2:\n/tmp/tmph4pf0_t3.cpp: In function \u2018int main()\u2019:\n/tmp/tmph4pf0_t3.cpp:16:198: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   16 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n      |                                                                                                                                                                                                      ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmph4pf0_t3.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmph4pf0_t3.cpp:2:\n/tmp/tmph4pf0_t3.cpp:16:198: note:   candidate expects at least 2 arguments, 1 provided\n   16 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the depth of a dictionary.\nlong dict_depth(std::any d) {\n    long depth = 0;\n    if (d.type() != typeid(std::map<std::string, std::any>)) {\n        return depth;\n    }\n    std::map<std::string, std::any> m = std::any_cast<std::map<std::string, std::any>>(d);\n    for (auto it = m.begin(); it != m.end(); it++) {\n        depth = std::max(depth, 1 + dict_depth(it->second));\n    }\n    return depth;\n}\nint main() {\n    auto candidate = dict_depth;\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::string>({{\"c\", \"python\"}})}}))) == (2));\n    assert(candidate((std::any({{1, \"Sun\"}, {2, std::map<long,std::map<long,std::string>>({{3, std::any({{4, \"Mon\"}})}})}}))) == (3));\n}\n",
      "timestamp": 1666122555,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp6wdc4058.cpp:2:\n/tmp/tmp6wdc4058.cpp: In function \u2018int main()\u2019:\n/tmp/tmp6wdc4058.cpp:17:198: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   17 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n      |                                                                                                                                                                                                      ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmp6wdc4058.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp6wdc4058.cpp:2:\n/tmp/tmp6wdc4058.cpp:17:198: note:   candidate expects at least 2 arguments, 1 provided\n   17 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the depth of a dictionary.\nlong dict_depth(std::any d) {\n    if (d.type() != typeid(std::map<std::string, std::any>)) {\n        return 0;\n    }\n    long max_depth = 0;\n    for (auto& [key, value] : std::any_cast<std::map<std::string, std::any>>(d)) {\n        max_depth = std::max(max_depth, dict_depth(value));\n    }\n    return max_depth + 1;\n}\nint main() {\n    auto candidate = dict_depth;\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::string>({{\"c\", \"python\"}})}}))) == (2));\n    assert(candidate((std::any({{1, \"Sun\"}, {2, std::map<long,std::map<long,std::string>>({{3, std::any({{4, \"Mon\"}})}})}}))) == (3));\n}\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmph4pf0_t3.cpp:2:\n/tmp/tmph4pf0_t3.cpp: In function \u2018int main()\u2019:\n/tmp/tmph4pf0_t3.cpp:16:198: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   16 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n      |                                                                                                                                                                                                      ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmph4pf0_t3.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmph4pf0_t3.cpp:2:\n/tmp/tmph4pf0_t3.cpp:16:198: note:   candidate expects at least 2 arguments, 1 provided\n   16 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the depth of a dictionary.\nlong dict_depth(std::any d) {\n    long depth = 0;\n    if(d.type() == typeid(std::map<std::string, std::any>)){\n        std::map<std::string, std::any> m = std::any_cast<std::map<std::string, std::any>>(d);\n        for(auto it = m.begin(); it != m.end(); it++){\n            if(it->second.type() == typeid(std::map<std::string, std::any>)){\n                depth = std::max(depth, dict_depth(it->second));\n            }\n        }\n        return depth + 1;\n    }\n    return depth;\n}\nint main() {\n    auto candidate = dict_depth;\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::string>({{\"c\", \"python\"}})}}))) == (2));\n    assert(candidate((std::any({{1, \"Sun\"}, {2, std::map<long,std::map<long,std::string>>({{3, std::any({{4, \"Mon\"}})}})}}))) == (3));\n}\n",
      "timestamp": 1666122555,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpdy91dglt.cpp:2:\n/tmp/tmpdy91dglt.cpp: In function \u2018int main()\u2019:\n/tmp/tmpdy91dglt.cpp:19:198: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   19 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n      |                                                                                                                                                                                                      ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpdy91dglt.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpdy91dglt.cpp:2:\n/tmp/tmpdy91dglt.cpp:19:198: note:   candidate expects at least 2 arguments, 1 provided\n   19 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the depth of a dictionary.\nlong dict_depth(std::any d) {\n    if (d.type() != typeid(std::map<std::string, std::any>)) {\n        return 0;\n    }\n    long max_depth = 0;\n    for (auto& [key, value] : std::any_cast<std::map<std::string, std::any>>(d)) {\n        max_depth = std::max(max_depth, dict_depth(value));\n    }\n    return max_depth + 1;\n}\nint main() {\n    auto candidate = dict_depth;\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::string>({{\"c\", \"python\"}})}}))) == (2));\n    assert(candidate((std::any({{1, \"Sun\"}, {2, std::map<long,std::map<long,std::string>>({{3, std::any({{4, \"Mon\"}})}})}}))) == (3));\n}\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmph4pf0_t3.cpp:2:\n/tmp/tmph4pf0_t3.cpp: In function \u2018int main()\u2019:\n/tmp/tmph4pf0_t3.cpp:16:198: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   16 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n      |                                                                                                                                                                                                      ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmph4pf0_t3.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmph4pf0_t3.cpp:2:\n/tmp/tmph4pf0_t3.cpp:16:198: note:   candidate expects at least 2 arguments, 1 provided\n   16 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the depth of a dictionary.\nlong dict_depth(std::any d) {\n    if(d.type() != typeid(std::map<std::string, std::any>))\n        return 0;\n    long max_depth = 0;\n    for(auto& [key, value] : std::any_cast<std::map<std::string, std::any>>(d)) {\n        max_depth = std::max(max_depth, dict_depth(value));\n    }\n    return max_depth + 1;\n}\nint main() {\n    auto candidate = dict_depth;\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::string>({{\"c\", \"python\"}})}}))) == (2));\n    assert(candidate((std::any({{1, \"Sun\"}, {2, std::map<long,std::map<long,std::string>>({{3, std::any({{4, \"Mon\"}})}})}}))) == (3));\n}\n",
      "timestamp": 1666122553,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpkndolzs9.cpp:2:\n/tmp/tmpkndolzs9.cpp: In function \u2018int main()\u2019:\n/tmp/tmpkndolzs9.cpp:15:198: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n      |                                                                                                                                                                                                      ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpkndolzs9.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpkndolzs9.cpp:2:\n/tmp/tmpkndolzs9.cpp:15:198: note:   candidate expects at least 2 arguments, 1 provided\n   15 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the depth of a dictionary.\nlong dict_depth(std::any d) {\n    if(d.type() != typeid(std::map<std::string, std::any>)){\n        return 0;\n    }\n    long max_depth = 0;\n    for(auto& [key, value] : std::any_cast<std::map<std::string, std::any>>(d)){\n        max_depth = std::max(max_depth, dict_depth(value));\n    }\n    return max_depth + 1;\n}\nint main() {\n    auto candidate = dict_depth;\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::string>({{\"c\", \"python\"}})}}))) == (2));\n    assert(candidate((std::any({{1, \"Sun\"}, {2, std::map<long,std::map<long,std::string>>({{3, std::any({{4, \"Mon\"}})}})}}))) == (3));\n}\n",
      "timestamp": 1666122555,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp37t8ftje.cpp:2:\n/tmp/tmp37t8ftje.cpp: In function \u2018int main()\u2019:\n/tmp/tmp37t8ftje.cpp:16:198: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   16 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n      |                                                                                                                                                                                                      ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmp37t8ftje.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp37t8ftje.cpp:2:\n/tmp/tmp37t8ftje.cpp:16:198: note:   candidate expects at least 2 arguments, 1 provided\n   16 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the depth of a dictionary.\nlong dict_depth(std::any d) {\n    // your code here\n    long depth = 0;\n    if(d.type() == typeid(std::map<std::string, std::any>)){\n        std::map<std::string, std::any> m = std::any_cast<std::map<std::string, std::any>>(d);\n        for(auto it = m.begin(); it != m.end(); it++){\n            if(it->second.type() == typeid(std::map<std::string, std::any>)){\n                depth = std::max(depth, dict_depth(it->second));\n            }\n        }\n        return depth + 1;\n    }\n    return 0;\n}\nint main() {\n    auto candidate = dict_depth;\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::string>({{\"c\", \"python\"}})}}))) == (2));\n    assert(candidate((std::any({{1, \"Sun\"}, {2, std::map<long,std::map<long,std::string>>({{3, std::any({{4, \"Mon\"}})}})}}))) == (3));\n}\n",
      "timestamp": 1666122555,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpuiwai171.cpp:2:\n/tmp/tmpuiwai171.cpp: In function \u2018int main()\u2019:\n/tmp/tmpuiwai171.cpp:20:198: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   20 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n      |                                                                                                                                                                                                      ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpuiwai171.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpuiwai171.cpp:2:\n/tmp/tmpuiwai171.cpp:20:198: note:   candidate expects at least 2 arguments, 1 provided\n   20 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the depth of a dictionary.\nlong dict_depth(std::any d) {\n    if(d.type() != typeid(std::map<std::string, std::any>))\n        return 0;\n    long max_depth = 0;\n    for(auto &[key, value] : std::any_cast<std::map<std::string, std::any>>(d)) {\n        max_depth = std::max(max_depth, dict_depth(value));\n    }\n    return max_depth + 1;\n}\nint main() {\n    auto candidate = dict_depth;\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::string>({{\"c\", \"python\"}})}}))) == (2));\n    assert(candidate((std::any({{1, \"Sun\"}, {2, std::map<long,std::map<long,std::string>>({{3, std::any({{4, \"Mon\"}})}})}}))) == (3));\n}\n",
      "timestamp": 1666122555,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp61xkehs0.cpp:2:\n/tmp/tmp61xkehs0.cpp: In function \u2018int main()\u2019:\n/tmp/tmp61xkehs0.cpp:15:198: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n      |                                                                                                                                                                                                      ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmp61xkehs0.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp61xkehs0.cpp:2:\n/tmp/tmp61xkehs0.cpp:15:198: note:   candidate expects at least 2 arguments, 1 provided\n   15 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the depth of a dictionary.\nlong dict_depth(std::any d) {\n    if (d.type() != typeid(std::map<std::string, std::any>)) {\n        return 0;\n    }\n    long max_depth = 0;\n    for (auto& [key, value] : std::any_cast<std::map<std::string, std::any>>(d)) {\n        max_depth = std::max(max_depth, dict_depth(value));\n    }\n    return max_depth + 1;\n}\nint main() {\n    auto candidate = dict_depth;\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::string>({{\"c\", \"python\"}})}}))) == (2));\n    assert(candidate((std::any({{1, \"Sun\"}, {2, std::map<long,std::map<long,std::string>>({{3, std::any({{4, \"Mon\"}})}})}}))) == (3));\n}\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmph4pf0_t3.cpp:2:\n/tmp/tmph4pf0_t3.cpp: In function \u2018int main()\u2019:\n/tmp/tmph4pf0_t3.cpp:16:198: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   16 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n      |                                                                                                                                                                                                      ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmph4pf0_t3.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmph4pf0_t3.cpp:2:\n/tmp/tmph4pf0_t3.cpp:16:198: note:   candidate expects at least 2 arguments, 1 provided\n   16 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the depth of a dictionary.\nlong dict_depth(std::any d) {\n    if (d.type() != typeid(std::map<std::string, std::any>)) {\n        return 0;\n    }\n    long max_depth = 0;\n    for (auto& [key, value] : std::any_cast<std::map<std::string, std::any>>(d)) {\n        max_depth = std::max(max_depth, dict_depth(value));\n    }\n    return max_depth + 1;\n}\nint main() {\n    auto candidate = dict_depth;\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::string>({{\"c\", \"python\"}})}}))) == (2));\n    assert(candidate((std::any({{1, \"Sun\"}, {2, std::map<long,std::map<long,std::string>>({{3, std::any({{4, \"Mon\"}})}})}}))) == (3));\n}\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmph4pf0_t3.cpp:2:\n/tmp/tmph4pf0_t3.cpp: In function \u2018int main()\u2019:\n/tmp/tmph4pf0_t3.cpp:16:198: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   16 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n      |                                                                                                                                                                                                      ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmph4pf0_t3.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmph4pf0_t3.cpp:2:\n/tmp/tmph4pf0_t3.cpp:16:198: note:   candidate expects at least 2 arguments, 1 provided\n   16 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the depth of a dictionary.\nlong dict_depth(std::any d) {\n    if (d.type() != typeid(std::map<std::string, std::any>)) {\n        return 0;\n    }\n    long max_depth = 0;\n    for (auto& [key, value] : std::any_cast<std::map<std::string, std::any>>(d)) {\n        max_depth = std::max(max_depth, dict_depth(value));\n    }\n    return max_depth + 1;\n}\nint main() {\n    auto candidate = dict_depth;\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::string>({{\"c\", \"python\"}})}}))) == (2));\n    assert(candidate((std::any({{1, \"Sun\"}, {2, std::map<long,std::map<long,std::string>>({{3, std::any({{4, \"Mon\"}})}})}}))) == (3));\n}\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmph4pf0_t3.cpp:2:\n/tmp/tmph4pf0_t3.cpp: In function \u2018int main()\u2019:\n/tmp/tmph4pf0_t3.cpp:16:198: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   16 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n      |                                                                                                                                                                                                      ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmph4pf0_t3.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmph4pf0_t3.cpp:2:\n/tmp/tmph4pf0_t3.cpp:16:198: note:   candidate expects at least 2 arguments, 1 provided\n   16 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the depth of a dictionary.\nlong dict_depth(std::any d) {\n    if (d.type() != typeid(std::map<std::string, std::any>)) {\n        return 0;\n    }\n    long max_depth = 0;\n    for (auto& [key, value] : std::any_cast<std::map<std::string, std::any>>(d)) {\n        max_depth = std::max(max_depth, dict_depth(value));\n    }\n    return max_depth + 1;\n}\nint main() {\n    auto candidate = dict_depth;\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::string>({{\"c\", \"python\"}})}}))) == (2));\n    assert(candidate((std::any({{1, \"Sun\"}, {2, std::map<long,std::map<long,std::string>>({{3, std::any({{4, \"Mon\"}})}})}}))) == (3));\n}\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmph4pf0_t3.cpp:2:\n/tmp/tmph4pf0_t3.cpp: In function \u2018int main()\u2019:\n/tmp/tmph4pf0_t3.cpp:16:198: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   16 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n      |                                                                                                                                                                                                      ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmph4pf0_t3.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmph4pf0_t3.cpp:2:\n/tmp/tmph4pf0_t3.cpp:16:198: note:   candidate expects at least 2 arguments, 1 provided\n   16 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the depth of a dictionary.\nlong dict_depth(std::any d) {\n    if (d.type() != typeid(std::map<std::string, std::any>)) {\n        return 0;\n    }\n    long max_depth = 0;\n    for (auto &kv : std::any_cast<std::map<std::string, std::any>>(d)) {\n        max_depth = std::max(max_depth, dict_depth(kv.second));\n    }\n    return max_depth + 1;\n}\nint main() {\n    auto candidate = dict_depth;\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::string>({{\"c\", \"python\"}})}}))) == (2));\n    assert(candidate((std::any({{1, \"Sun\"}, {2, std::map<long,std::map<long,std::string>>({{3, std::any({{4, \"Mon\"}})}})}}))) == (3));\n}\n",
      "timestamp": 1666122555,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp6a6iafdh.cpp:2:\n/tmp/tmp6a6iafdh.cpp: In function \u2018int main()\u2019:\n/tmp/tmp6a6iafdh.cpp:16:198: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   16 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n      |                                                                                                                                                                                                      ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmp6a6iafdh.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp6a6iafdh.cpp:2:\n/tmp/tmp6a6iafdh.cpp:16:198: note:   candidate expects at least 2 arguments, 1 provided\n   16 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the depth of a dictionary.\nlong dict_depth(std::any d) {\n    if (d.type() != typeid(std::map<std::string, std::any>)) {\n        return 0;\n    }\n    long max_depth = 0;\n    for (auto& [key, value] : std::any_cast<std::map<std::string, std::any>>(d)) {\n        max_depth = std::max(max_depth, dict_depth(value));\n    }\n    return max_depth + 1;\n}\nint main() {\n    auto candidate = dict_depth;\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::string>({{\"c\", \"python\"}})}}))) == (2));\n    assert(candidate((std::any({{1, \"Sun\"}, {2, std::map<long,std::map<long,std::string>>({{3, std::any({{4, \"Mon\"}})}})}}))) == (3));\n}\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmph4pf0_t3.cpp:2:\n/tmp/tmph4pf0_t3.cpp: In function \u2018int main()\u2019:\n/tmp/tmph4pf0_t3.cpp:16:198: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   16 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n      |                                                                                                                                                                                                      ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmph4pf0_t3.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmph4pf0_t3.cpp:2:\n/tmp/tmph4pf0_t3.cpp:16:198: note:   candidate expects at least 2 arguments, 1 provided\n   16 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the depth of a dictionary.\nlong dict_depth(std::any d) {\n    long max_depth = 0;\n    std::any key;\n    std::any value;\n    std::any keys = d.keys();\n    for(auto key: keys) {\n        std::any value = d[key];\n        if(value.type() == typeid(std::any)) {\n            long depth = dict_depth(value);\n            max_depth = std::max(depth, max_depth);\n        }\n    }\n    return max_depth + 1;\n}\nint main() {\n    auto candidate = dict_depth;\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::string>({{\"c\", \"python\"}})}}))) == (2));\n    assert(candidate((std::any({{1, \"Sun\"}, {2, std::map<long,std::map<long,std::string>>({{3, std::any({{4, \"Mon\"}})}})}}))) == (3));\n}\n",
      "timestamp": 1666122555,
      "stdout": "",
      "stderr": "/tmp/tmpral8d8nd.cpp: In function \u2018long int dict_depth(std::any)\u2019:\n/tmp/tmpral8d8nd.cpp:8:23: error: \u2018class std::any\u2019 has no member named \u2018keys\u2019\n    8 |     std::any keys = d.keys();\n      |                       ^~~~\n/tmp/tmpral8d8nd.cpp:9:19: error: no matching function for call to \u2018begin(std::any&)\u2019\n    9 |     for(auto key: keys) {\n      |                   ^~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/range_access.h:36,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/string:54,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/locale_classes.h:40,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/ios_base.h:41,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ios:42,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/istream:38,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/sstream:38,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/complex:45,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ccomplex:39,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:54,\n                 from /tmp/tmpral8d8nd.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/initializer_list:89:5: note: candidate: \u2018template<class _Tp> constexpr const _Tp* std::begin(std::initializer_list<_Tp>)\u2019\n   89 |     begin(initializer_list<_Tp> __ils) noexcept\n      |     ^~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/initializer_list:89:5: note:   template argument deduction/substitution failed:\n/tmp/tmpral8d8nd.cpp:9:19: note:   \u2018std::any\u2019 is not derived from \u2018std::initializer_list<_Tp>\u2019\n    9 |     for(auto key: keys) {\n      |                   ^~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/string:54,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the depth of a dictionary.\nlong dict_depth(std::any d) {\n    // your code here\n    long depth = 0;\n    if(d.type() == typeid(std::map<std::string, std::any>)){\n        std::map<std::string, std::any> m = std::any_cast<std::map<std::string, std::any>>(d);\n        for(auto it = m.begin(); it != m.end(); it++){\n            depth = std::max(depth, dict_depth(it->second));\n        }\n        return depth + 1;\n    }\n    else{\n        return 0;\n    }\n}\nint main() {\n    auto candidate = dict_depth;\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::string>({{\"c\", \"python\"}})}}))) == (2));\n    assert(candidate((std::any({{1, \"Sun\"}, {2, std::map<long,std::map<long,std::string>>({{3, std::any({{4, \"Mon\"}})}})}}))) == (3));\n}\n",
      "timestamp": 1666122555,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpj5jmvju2.cpp:2:\n/tmp/tmpj5jmvju2.cpp: In function \u2018int main()\u2019:\n/tmp/tmpj5jmvju2.cpp:20:198: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   20 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n      |                                                                                                                                                                                                      ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpj5jmvju2.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpj5jmvju2.cpp:2:\n/tmp/tmpj5jmvju2.cpp:20:198: note:   candidate expects at least 2 arguments, 1 provided\n   20 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the depth of a dictionary.\nlong dict_depth(std::any d) {\n    if (d.type() != typeid(std::map<std::string, std::any>)) {\n        return 0;\n    }\n    long max_depth = 0;\n    for (auto& [key, value] : std::any_cast<std::map<std::string, std::any>>(d)) {\n        max_depth = std::max(max_depth, dict_depth(value));\n    }\n    return max_depth + 1;\n}\nint main() {\n    auto candidate = dict_depth;\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::string>({{\"c\", \"python\"}})}}))) == (2));\n    assert(candidate((std::any({{1, \"Sun\"}, {2, std::map<long,std::map<long,std::string>>({{3, std::any({{4, \"Mon\"}})}})}}))) == (3));\n}\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmph4pf0_t3.cpp:2:\n/tmp/tmph4pf0_t3.cpp: In function \u2018int main()\u2019:\n/tmp/tmph4pf0_t3.cpp:16:198: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   16 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n      |                                                                                                                                                                                                      ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmph4pf0_t3.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmph4pf0_t3.cpp:2:\n/tmp/tmph4pf0_t3.cpp:16:198: note:   candidate expects at least 2 arguments, 1 provided\n   16 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the depth of a dictionary.\nlong dict_depth(std::any d) {\n    // your code here\n    long depth = 0;\n    if(d.type() == typeid(std::map<std::string, std::any>)){\n        depth = 1;\n        for(auto i : std::any_cast<std::map<std::string, std::any>>(d)){\n            depth = std::max(depth, dict_depth(i.second) + 1);\n        }\n    }\n    return depth;\n}\nint main() {\n    auto candidate = dict_depth;\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::string>({{\"c\", \"python\"}})}}))) == (2));\n    assert(candidate((std::any({{1, \"Sun\"}, {2, std::map<long,std::map<long,std::string>>({{3, std::any({{4, \"Mon\"}})}})}}))) == (3));\n}\n",
      "timestamp": 1666122555,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpcl5u7f5n.cpp:2:\n/tmp/tmpcl5u7f5n.cpp: In function \u2018int main()\u2019:\n/tmp/tmpcl5u7f5n.cpp:17:198: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   17 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n      |                                                                                                                                                                                                      ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpcl5u7f5n.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpcl5u7f5n.cpp:2:\n/tmp/tmpcl5u7f5n.cpp:17:198: note:   candidate expects at least 2 arguments, 1 provided\n   17 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the depth of a dictionary.\nlong dict_depth(std::any d) {\n    long depth = 0;\n    if (d.type() == typeid(std::map<std::string, std::any>)) {\n        for (auto &kv : std::any_cast<std::map<std::string, std::any>>(d)) {\n            depth = std::max(depth, dict_depth(kv.second));\n        }\n        return 1 + depth;\n    }\n    return 0;\n}\nint main() {\n    auto candidate = dict_depth;\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::string>({{\"c\", \"python\"}})}}))) == (2));\n    assert(candidate((std::any({{1, \"Sun\"}, {2, std::map<long,std::map<long,std::string>>({{3, std::any({{4, \"Mon\"}})}})}}))) == (3));\n}\n",
      "timestamp": 1666122555,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmprjq9vh1e.cpp:2:\n/tmp/tmprjq9vh1e.cpp: In function \u2018int main()\u2019:\n/tmp/tmprjq9vh1e.cpp:16:198: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   16 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n      |                                                                                                                                                                                                      ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmprjq9vh1e.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmprjq9vh1e.cpp:2:\n/tmp/tmprjq9vh1e.cpp:16:198: note:   candidate expects at least 2 arguments, 1 provided\n   16 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the depth of a dictionary.\nlong dict_depth(std::any d) {\n    long depth = 0;\n    std::any key;\n    std::any value;\n    if (d.type() == typeid(std::map<std::any, std::any>)) {\n        for (auto it = d.begin(); it != d.end(); it++) {\n            key = it->first;\n            value = it->second;\n            if (value.type() == typeid(std::map<std::any, std::any>)) {\n                depth = 1 + dict_depth(value);\n            }\n        }\n    }\n    return depth;\n}\nint main() {\n    auto candidate = dict_depth;\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::string>({{\"c\", \"python\"}})}}))) == (2));\n    assert(candidate((std::any({{1, \"Sun\"}, {2, std::map<long,std::map<long,std::string>>({{3, std::any({{4, \"Mon\"}})}})}}))) == (3));\n}\n",
      "timestamp": 1666122555,
      "stdout": "",
      "stderr": "/tmp/tmp6qnf4pkr.cpp: In function \u2018long int dict_depth(std::any)\u2019:\n/tmp/tmp6qnf4pkr.cpp:9:26: error: \u2018class std::any\u2019 has no member named \u2018begin\u2019\n    9 |         for (auto it = d.begin(); it != d.end(); it++) {\n      |                          ^~~~~\n/tmp/tmp6qnf4pkr.cpp:9:43: error: \u2018class std::any\u2019 has no member named \u2018end\u2019\n    9 |         for (auto it = d.begin(); it != d.end(); it++) {\n      |                                           ^~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp6qnf4pkr.cpp:2:\n/tmp/tmp6qnf4pkr.cpp: In function \u2018int main()\u2019:\n/tmp/tmp6qnf4pkr.cpp:21:198: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   21 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n      |                                                                                                                                                                                                      ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmp6qnf4pkr.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn fil",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the depth of a dictionary.\nlong dict_depth(std::any d) {\n    if(d.type() == typeid(std::map<std::string, std::any>)) {\n        long max_depth = 0;\n        for(auto it = std::any_cast<std::map<std::string, std::any>>(d).begin(); it != std::any_cast<std::map<std::string, std::any>>(d).end(); it++) {\n            max_depth = std::max(max_depth, dict_depth(it->second));\n        }\n        return max_depth + 1;\n    }\n    else {\n        return 0;\n    }\n}\nint main() {\n    auto candidate = dict_depth;\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::string>({{\"c\", \"python\"}})}}))) == (2));\n    assert(candidate((std::any({{1, \"Sun\"}, {2, std::map<long,std::map<long,std::string>>({{3, std::any({{4, \"Mon\"}})}})}}))) == (3));\n}\n",
      "timestamp": 1666122555,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpc7aifemm.cpp:2:\n/tmp/tmpc7aifemm.cpp: In function \u2018int main()\u2019:\n/tmp/tmpc7aifemm.cpp:18:198: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   18 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n      |                                                                                                                                                                                                      ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpc7aifemm.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpc7aifemm.cpp:2:\n/tmp/tmpc7aifemm.cpp:18:198: note:   candidate expects at least 2 arguments, 1 provided\n   18 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the depth of a dictionary.\nlong dict_depth(std::any d) {\n    if (d.type() == typeid(std::map<std::string, std::any>)) {\n        std::map<std::string, std::any> m = std::any_cast<std::map<std::string, std::any>>(d);\n        long max_depth = 0;\n        for (auto it = m.begin(); it != m.end(); it++) {\n            long depth = dict_depth(it->second);\n            if (depth > max_depth) {\n                max_depth = depth;\n            }\n        }\n        return max_depth + 1;\n    }\n    else {\n        return 0;\n    }\n}\nint main() {\n    auto candidate = dict_depth;\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::string>({{\"c\", \"python\"}})}}))) == (2));\n    assert(candidate((std::any({{1, \"Sun\"}, {2, std::map<long,std::map<long,std::string>>({{3, std::any({{4, \"Mon\"}})}})}}))) == (3));\n}\n",
      "timestamp": 1666122555,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp9k1haet2.cpp:2:\n/tmp/tmp9k1haet2.cpp: In function \u2018int main()\u2019:\n/tmp/tmp9k1haet2.cpp:22:198: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   22 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n      |                                                                                                                                                                                                      ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmp9k1haet2.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp9k1haet2.cpp:2:\n/tmp/tmp9k1haet2.cpp:22:198: note:   candidate expects at least 2 arguments, 1 provided\n   22 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the depth of a dictionary.\nlong dict_depth(std::any d) {\n    if (d.type() != typeid(std::map<std::string, std::any>)) {\n        return 0;\n    }\n    std::map<std::string, std::any> m = std::any_cast<std::map<std::string, std::any>>(d);\n    long max_depth = 0;\n    for (auto it = m.begin(); it != m.end(); it++) {\n        long depth = dict_depth(it->second);\n        if (depth > max_depth) {\n            max_depth = depth;\n        }\n    }\n    return max_depth + 1;\n}\nint main() {\n    auto candidate = dict_depth;\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::string>({{\"c\", \"python\"}})}}))) == (2));\n    assert(candidate((std::any({{1, \"Sun\"}, {2, std::map<long,std::map<long,std::string>>({{3, std::any({{4, \"Mon\"}})}})}}))) == (3));\n}\n",
      "timestamp": 1666122553,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpgrm22_8n.cpp:2:\n/tmp/tmpgrm22_8n.cpp: In function \u2018int main()\u2019:\n/tmp/tmpgrm22_8n.cpp:20:198: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   20 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n      |                                                                                                                                                                                                      ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpgrm22_8n.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpgrm22_8n.cpp:2:\n/tmp/tmpgrm22_8n.cpp:20:198: note:   candidate expects at least 2 arguments, 1 provided\n   20 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the depth of a dictionary.\nlong dict_depth(std::any d) {\n    // your code here\n    long depth = 0;\n    if(d.type() == typeid(std::map<std::string, std::any>)){\n        std::map<std::string, std::any> m = std::any_cast<std::map<std::string, std::any>>(d);\n        for(auto it = m.begin(); it != m.end(); it++){\n            depth = std::max(depth, dict_depth(it->second));\n        }\n        return depth + 1;\n    }\n    else{\n        return 0;\n    }\n}\nint main() {\n    auto candidate = dict_depth;\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::string>({{\"c\", \"python\"}})}}))) == (2));\n    assert(candidate((std::any({{1, \"Sun\"}, {2, std::map<long,std::map<long,std::string>>({{3, std::any({{4, \"Mon\"}})}})}}))) == (3));\n}\n",
      "timestamp": 1666122555,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpj5jmvju2.cpp:2:\n/tmp/tmpj5jmvju2.cpp: In function \u2018int main()\u2019:\n/tmp/tmpj5jmvju2.cpp:20:198: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   20 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n      |                                                                                                                                                                                                      ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpj5jmvju2.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpj5jmvju2.cpp:2:\n/tmp/tmpj5jmvju2.cpp:20:198: note:   candidate expects at least 2 arguments, 1 provided\n   20 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the depth of a dictionary.\nlong dict_depth(std::any d) {\n    if (d.type() == typeid(std::map<std::string, std::any>)) {\n        long max_depth = 0;\n        for (auto& [key, value] : std::any_cast<std::map<std::string, std::any>>(d)) {\n            max_depth = std::max(max_depth, dict_depth(value));\n        }\n        return max_depth + 1;\n    }\n    return 0;\n}\nint main() {\n    auto candidate = dict_depth;\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::string>({{\"c\", \"python\"}})}}))) == (2));\n    assert(candidate((std::any({{1, \"Sun\"}, {2, std::map<long,std::map<long,std::string>>({{3, std::any({{4, \"Mon\"}})}})}}))) == (3));\n}\n",
      "timestamp": 1666122557,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp9q27ag3a.cpp:2:\n/tmp/tmp9q27ag3a.cpp: In function \u2018int main()\u2019:\n/tmp/tmp9q27ag3a.cpp:16:198: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   16 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n      |                                                                                                                                                                                                      ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmp9q27ag3a.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp9q27ag3a.cpp:2:\n/tmp/tmp9q27ag3a.cpp:16:198: note:   candidate expects at least 2 arguments, 1 provided\n   16 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the depth of a dictionary.\nlong dict_depth(std::any d) {\n    if(d.type() != typeid(std::map<std::string, std::any>))\n        return 0;\n    long max_depth = 0;\n    for(auto& [key, value] : std::any_cast<std::map<std::string, std::any>>(d)) {\n        max_depth = std::max(max_depth, dict_depth(value));\n    }\n    return max_depth + 1;\n}\nint main() {\n    auto candidate = dict_depth;\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::string>({{\"c\", \"python\"}})}}))) == (2));\n    assert(candidate((std::any({{1, \"Sun\"}, {2, std::map<long,std::map<long,std::string>>({{3, std::any({{4, \"Mon\"}})}})}}))) == (3));\n}\n",
      "timestamp": 1666122553,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpkndolzs9.cpp:2:\n/tmp/tmpkndolzs9.cpp: In function \u2018int main()\u2019:\n/tmp/tmpkndolzs9.cpp:15:198: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n      |                                                                                                                                                                                                      ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpkndolzs9.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpkndolzs9.cpp:2:\n/tmp/tmpkndolzs9.cpp:15:198: note:   candidate expects at least 2 arguments, 1 provided\n   15 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the depth of a dictionary.\nlong dict_depth(std::any d) {\n    if(!d.has_value())\n        return 0;\n    if(d.type() != typeid(std::map<std::string, std::any>))\n        return 0;\n    long max_depth = 0;\n    for(auto& [key, value] : std::any_cast<std::map<std::string, std::any>>(d)) {\n        max_depth = std::max(max_depth, dict_depth(value));\n    }\n    return max_depth + 1;\n}\nint main() {\n    auto candidate = dict_depth;\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::string>({{\"c\", \"python\"}})}}))) == (2));\n    assert(candidate((std::any({{1, \"Sun\"}, {2, std::map<long,std::map<long,std::string>>({{3, std::any({{4, \"Mon\"}})}})}}))) == (3));\n}\n",
      "timestamp": 1666122555,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpvcr8nfh5.cpp:2:\n/tmp/tmpvcr8nfh5.cpp: In function \u2018int main()\u2019:\n/tmp/tmpvcr8nfh5.cpp:17:198: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   17 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n      |                                                                                                                                                                                                      ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpvcr8nfh5.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpvcr8nfh5.cpp:2:\n/tmp/tmpvcr8nfh5.cpp:17:198: note:   candidate expects at least 2 arguments, 1 provided\n   17 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the depth of a dictionary.\nlong dict_depth(std::any d) {\n    // your code here\n    long depth = 0;\n    if(d.type() == typeid(std::map<std::string, std::any>)){\n        std::map<std::string, std::any> m = std::any_cast<std::map<std::string, std::any>>(d);\n        for(auto it = m.begin(); it != m.end(); it++){\n            long temp = dict_depth(it->second);\n            if(temp > depth) depth = temp;\n        }\n        return depth + 1;\n    }\n    else if(d.type() == typeid(std::vector<std::any>)){\n        std::vector<std::any> v = std::any_cast<std::vector<std::any>>(d);\n        for(auto it = v.begin(); it != v.end(); it++){\n            long temp = dict_depth(*it);\n            if(temp > depth) depth = temp;\n        }\n        return depth + 1;\n    }\n    else return 0;\n}\nint main() {\n    auto candidate = dict_depth;\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::string>({{\"c\", \"python\"}})}}))) == (2));\n    assert(candidate((std::any({{1, \"Sun\"}, {2, std::map<long,std::map<long,std::string>>({{3, std::any({{4, \"Mon\"}})}})}}))) == (3));\n}\n",
      "timestamp": 1666122557,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp3hwdculy.cpp:2:\n/tmp/tmp3hwdculy.cpp: In function \u2018int main()\u2019:\n/tmp/tmp3hwdculy.cpp:27:198: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   27 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n      |                                                                                                                                                                                                      ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmp3hwdculy.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp3hwdculy.cpp:2:\n/tmp/tmp3hwdculy.cpp:27:198: note:   candidate expects at least 2 arguments, 1 provided\n   27 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the depth of a dictionary.\nlong dict_depth(std::any d) {\n    if (d.type() != typeid(std::map<std::string, std::any>)) {\n        return 0;\n    }\n    long max_depth = 0;\n    for (auto& kv : std::any_cast<std::map<std::string, std::any>>(d)) {\n        max_depth = std::max(max_depth, dict_depth(kv.second));\n    }\n    return max_depth + 1;\n}\nint main() {\n    auto candidate = dict_depth;\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::string>({{\"c\", \"python\"}})}}))) == (2));\n    assert(candidate((std::any({{1, \"Sun\"}, {2, std::map<long,std::map<long,std::string>>({{3, std::any({{4, \"Mon\"}})}})}}))) == (3));\n}\n",
      "timestamp": 1666122557,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp9bsqyhpd.cpp:2:\n/tmp/tmp9bsqyhpd.cpp: In function \u2018int main()\u2019:\n/tmp/tmp9bsqyhpd.cpp:16:198: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   16 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n      |                                                                                                                                                                                                      ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmp9bsqyhpd.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp9bsqyhpd.cpp:2:\n/tmp/tmp9bsqyhpd.cpp:16:198: note:   candidate expects at least 2 arguments, 1 provided\n   16 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the depth of a dictionary.\nlong dict_depth(std::any d) {\n    if(d.type() == typeid(std::map<std::string, std::any>)) {\n        long max_depth = 0;\n        for(auto& [key, value] : std::any_cast<std::map<std::string, std::any>>(d)) {\n            max_depth = std::max(max_depth, dict_depth(value));\n        }\n        return max_depth + 1;\n    }\n    return 0;\n}\nint main() {\n    auto candidate = dict_depth;\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::string>({{\"c\", \"python\"}})}}))) == (2));\n    assert(candidate((std::any({{1, \"Sun\"}, {2, std::map<long,std::map<long,std::string>>({{3, std::any({{4, \"Mon\"}})}})}}))) == (3));\n}\n",
      "timestamp": 1666122553,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpm85kq6bv.cpp:2:\n/tmp/tmpm85kq6bv.cpp: In function \u2018int main()\u2019:\n/tmp/tmpm85kq6bv.cpp:16:198: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   16 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n      |                                                                                                                                                                                                      ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpm85kq6bv.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpm85kq6bv.cpp:2:\n/tmp/tmpm85kq6bv.cpp:16:198: note:   candidate expects at least 2 arguments, 1 provided\n   16 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the depth of a dictionary.\nlong dict_depth(std::any d) {\n    if(d.type() != typeid(std::map<std::string, std::any>)) {\n        return 0;\n    }\n    std::map<std::string, std::any> m = std::any_cast<std::map<std::string, std::any>>(d);\n    long max_depth = 0;\n    for(auto it = m.begin(); it != m.end(); it++) {\n        long depth = dict_depth(it->second);\n        if(depth > max_depth) {\n            max_depth = depth;\n        }\n    }\n    return max_depth + 1;\n}\nint main() {\n    auto candidate = dict_depth;\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::string>({{\"c\", \"python\"}})}}))) == (2));\n    assert(candidate((std::any({{1, \"Sun\"}, {2, std::map<long,std::map<long,std::string>>({{3, std::any({{4, \"Mon\"}})}})}}))) == (3));\n}\n",
      "timestamp": 1666122555,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp5878pii_.cpp:2:\n/tmp/tmp5878pii_.cpp: In function \u2018int main()\u2019:\n/tmp/tmp5878pii_.cpp:20:198: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   20 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n      |                                                                                                                                                                                                      ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmp5878pii_.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp5878pii_.cpp:2:\n/tmp/tmp5878pii_.cpp:20:198: note:   candidate expects at least 2 arguments, 1 provided\n   20 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the depth of a dictionary.\nlong dict_depth(std::any d) {\n    // your code here\n    long depth = 0;\n    if(d.type() == typeid(std::map<std::string, std::any>)){\n        std::map<std::string, std::any> m = std::any_cast<std::map<std::string, std::any>>(d);\n        for(auto it = m.begin(); it != m.end(); it++){\n            if(it->second.type() == typeid(std::map<std::string, std::any>)){\n                depth = std::max(depth, dict_depth(it->second) + 1);\n            }\n        }\n    }\n    return depth;\n}\nint main() {\n    auto candidate = dict_depth;\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::string>({{\"c\", \"python\"}})}}))) == (2));\n    assert(candidate((std::any({{1, \"Sun\"}, {2, std::map<long,std::map<long,std::string>>({{3, std::any({{4, \"Mon\"}})}})}}))) == (3));\n}\n",
      "timestamp": 1666122557,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpbiwnegce.cpp:2:\n/tmp/tmpbiwnegce.cpp: In function \u2018int main()\u2019:\n/tmp/tmpbiwnegce.cpp:19:198: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   19 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n      |                                                                                                                                                                                                      ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpbiwnegce.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpbiwnegce.cpp:2:\n/tmp/tmpbiwnegce.cpp:19:198: note:   candidate expects at least 2 arguments, 1 provided\n   19 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the depth of a dictionary.\nlong dict_depth(std::any d) {\n    if (d.type() != typeid(std::map<std::string, std::any>)) {\n        return 0;\n    }\n    long max_depth = 0;\n    for (auto& [key, value] : std::any_cast<std::map<std::string, std::any>>(d)) {\n        max_depth = std::max(max_depth, dict_depth(value));\n    }\n    return max_depth + 1;\n}\nint main() {\n    auto candidate = dict_depth;\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::string>({{\"c\", \"python\"}})}}))) == (2));\n    assert(candidate((std::any({{1, \"Sun\"}, {2, std::map<long,std::map<long,std::string>>({{3, std::any({{4, \"Mon\"}})}})}}))) == (3));\n}\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmph4pf0_t3.cpp:2:\n/tmp/tmph4pf0_t3.cpp: In function \u2018int main()\u2019:\n/tmp/tmph4pf0_t3.cpp:16:198: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   16 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n      |                                                                                                                                                                                                      ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmph4pf0_t3.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmph4pf0_t3.cpp:2:\n/tmp/tmph4pf0_t3.cpp:16:198: note:   candidate expects at least 2 arguments, 1 provided\n   16 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the depth of a dictionary.\nlong dict_depth(std::any d) {\n    if (d.type() != typeid(std::map<std::string, std::any>)) {\n        return 0;\n    }\n    long max_depth = 0;\n    for (auto& [key, value] : std::any_cast<std::map<std::string, std::any>>(d)) {\n        max_depth = std::max(max_depth, dict_depth(value));\n    }\n    return max_depth + 1;\n}\nint main() {\n    auto candidate = dict_depth;\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::string>({{\"c\", \"python\"}})}}))) == (2));\n    assert(candidate((std::any({{1, \"Sun\"}, {2, std::map<long,std::map<long,std::string>>({{3, std::any({{4, \"Mon\"}})}})}}))) == (3));\n}\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmph4pf0_t3.cpp:2:\n/tmp/tmph4pf0_t3.cpp: In function \u2018int main()\u2019:\n/tmp/tmph4pf0_t3.cpp:16:198: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   16 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n      |                                                                                                                                                                                                      ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmph4pf0_t3.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmph4pf0_t3.cpp:2:\n/tmp/tmph4pf0_t3.cpp:16:198: note:   candidate expects at least 2 arguments, 1 provided\n   16 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the depth of a dictionary.\nlong dict_depth(std::any d) {\n    long max_depth = 0;\n    std::queue<std::any> q;\n    q.push(d);\n    while (!q.empty()) {\n        std::any curr = q.front();\n        q.pop();\n        if (std::any_cast<std::map<std::string, std::any>>(curr).size() == 0) {\n            max_depth = std::max(max_depth, 1);\n        }\n        for (auto it = std::any_cast<std::map<std::string, std::any>>(curr).begin(); it != std::any_cast<std::map<std::string, std::any>>(curr).end(); it++) {\n            q.push(it->second);\n        }\n    }\n    return max_depth;\n}\nint main() {\n    auto candidate = dict_depth;\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::string>({{\"c\", \"python\"}})}}))) == (2));\n    assert(candidate((std::any({{1, \"Sun\"}, {2, std::map<long,std::map<long,std::string>>({{3, std::any({{4, \"Mon\"}})}})}}))) == (3));\n}\n",
      "timestamp": 1666122557,
      "stdout": "",
      "stderr": "/tmp/tmp7jr4pmyy.cpp: In function \u2018long int dict_depth(std::any)\u2019:\n/tmp/tmp7jr4pmyy.cpp:12:46: error: no matching function for call to \u2018max(long int&, int)\u2019\n   12 |             max_depth = std::max(max_depth, 1);\n      |                                              ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/specfun.h:45,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cmath:1927,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:41,\n                 from /tmp/tmp7jr4pmyy.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:222:5: note: candidate: \u2018template<class _Tp> constexpr const _Tp& std::max(const _Tp&, const _Tp&)\u2019\n  222 |     max(const _Tp& __a, const _Tp& __b)\n      |     ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:222:5: note:   template argument deduction/substitution failed:\n/tmp/tmp7jr4pmyy.cpp:12:46: note:   deduced conflicting types for parameter \u2018const _Tp\u2019 (\u2018long int\u2019 and \u2018int\u2019)\n   12 |             max_depth = std::max(max_depth, 1);\n      |                                              ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/specfun.h:45,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cmath:1927,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:41,\n                 from /tmp/tmp7jr4pmyy.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:268:5: note: candidate: \u2018template<class _Tp, class _Compare> constexpr const _Tp& std::max(const _Tp&, const _Tp&, _Compare)\u2019\n  268 |     max(const _Tp& __a, const _Tp& __b, _Compare __comp)\n      |     ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:268:5: note:   template argument deduction/substitution failed:\n/tmp/tmp7jr4pmyy.cpp:12:46: note:   deduced conflicting types for par",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the depth of a dictionary.\nlong dict_depth(std::any d) {\n    long depth = 0;\n    if (d.type() == typeid(std::map<std::string, std::any>)) {\n        for (auto &[key, value] : std::any_cast<std::map<std::string, std::any>>(d)) {\n            depth = std::max(depth, dict_depth(value));\n        }\n        return depth + 1;\n    }\n    return depth;\n}\nint main() {\n    auto candidate = dict_depth;\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::string>({{\"c\", \"python\"}})}}))) == (2));\n    assert(candidate((std::any({{1, \"Sun\"}, {2, std::map<long,std::map<long,std::string>>({{3, std::any({{4, \"Mon\"}})}})}}))) == (3));\n}\n",
      "timestamp": 1666122557,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpkvxrx7x_.cpp:2:\n/tmp/tmpkvxrx7x_.cpp: In function \u2018int main()\u2019:\n/tmp/tmpkvxrx7x_.cpp:16:198: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   16 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n      |                                                                                                                                                                                                      ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpkvxrx7x_.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpkvxrx7x_.cpp:2:\n/tmp/tmpkvxrx7x_.cpp:16:198: note:   candidate expects at least 2 arguments, 1 provided\n   16 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the depth of a dictionary.\nlong dict_depth(std::any d) {\n    if (d.type() != typeid(std::map<std::string, std::any>)) {\n        return 0;\n    }\n    long max_depth = 0;\n    for (auto& [key, value] : std::any_cast<std::map<std::string, std::any>>(d)) {\n        max_depth = std::max(max_depth, dict_depth(value));\n    }\n    return max_depth + 1;\n}\nint main() {\n    auto candidate = dict_depth;\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::string>({{\"c\", \"python\"}})}}))) == (2));\n    assert(candidate((std::any({{1, \"Sun\"}, {2, std::map<long,std::map<long,std::string>>({{3, std::any({{4, \"Mon\"}})}})}}))) == (3));\n}\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmph4pf0_t3.cpp:2:\n/tmp/tmph4pf0_t3.cpp: In function \u2018int main()\u2019:\n/tmp/tmph4pf0_t3.cpp:16:198: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   16 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n      |                                                                                                                                                                                                      ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmph4pf0_t3.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmph4pf0_t3.cpp:2:\n/tmp/tmph4pf0_t3.cpp:16:198: note:   candidate expects at least 2 arguments, 1 provided\n   16 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the depth of a dictionary.\nlong dict_depth(std::any d) {\n    if(d.type() == typeid(std::map<std::string, std::any>)) {\n        long max_depth = 0;\n        for(auto& [key, value] : std::any_cast<std::map<std::string, std::any>>(d)) {\n            max_depth = std::max(max_depth, dict_depth(value));\n        }\n        return max_depth + 1;\n    }\n    else {\n        return 0;\n    }\n}\nint main() {\n    auto candidate = dict_depth;\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::string>({{\"c\", \"python\"}})}}))) == (2));\n    assert(candidate((std::any({{1, \"Sun\"}, {2, std::map<long,std::map<long,std::string>>({{3, std::any({{4, \"Mon\"}})}})}}))) == (3));\n}\n",
      "timestamp": 1666122557,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpleriq8ap.cpp:2:\n/tmp/tmpleriq8ap.cpp: In function \u2018int main()\u2019:\n/tmp/tmpleriq8ap.cpp:18:198: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   18 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n      |                                                                                                                                                                                                      ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpleriq8ap.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpleriq8ap.cpp:2:\n/tmp/tmpleriq8ap.cpp:18:198: note:   candidate expects at least 2 arguments, 1 provided\n   18 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the depth of a dictionary.\nlong dict_depth(std::any d) {\n    if (d.type() != typeid(std::map<std::string, std::any>)) {\n        return 0;\n    }\n    auto m = std::any_cast<std::map<std::string, std::any>>(d);\n    long max_depth = 0;\n    for (auto& kv : m) {\n        max_depth = std::max(max_depth, dict_depth(kv.second));\n    }\n    return max_depth + 1;\n}\nint main() {\n    auto candidate = dict_depth;\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::string>({{\"c\", \"python\"}})}}))) == (2));\n    assert(candidate((std::any({{1, \"Sun\"}, {2, std::map<long,std::map<long,std::string>>({{3, std::any({{4, \"Mon\"}})}})}}))) == (3));\n}\n",
      "timestamp": 1666122557,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp711us1d9.cpp:2:\n/tmp/tmp711us1d9.cpp: In function \u2018int main()\u2019:\n/tmp/tmp711us1d9.cpp:17:198: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   17 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n      |                                                                                                                                                                                                      ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmp711us1d9.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp711us1d9.cpp:2:\n/tmp/tmp711us1d9.cpp:17:198: note:   candidate expects at least 2 arguments, 1 provided\n   17 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the depth of a dictionary.\nlong dict_depth(std::any d) {\n    if (d.type() == typeid(std::map<std::string, std::any>)) {\n        std::map<std::string, std::any> m = std::any_cast<std::map<std::string, std::any>>(d);\n        long max = 0;\n        for (auto it = m.begin(); it != m.end(); ++it) {\n            long depth = dict_depth(it->second);\n            if (depth > max) {\n                max = depth;\n            }\n        }\n        return max + 1;\n    }\n    return 0;\n}\nint main() {\n    auto candidate = dict_depth;\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::string>({{\"c\", \"python\"}})}}))) == (2));\n    assert(candidate((std::any({{1, \"Sun\"}, {2, std::map<long,std::map<long,std::string>>({{3, std::any({{4, \"Mon\"}})}})}}))) == (3));\n}\n",
      "timestamp": 1666122557,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmptd7od9mf.cpp:2:\n/tmp/tmptd7od9mf.cpp: In function \u2018int main()\u2019:\n/tmp/tmptd7od9mf.cpp:20:198: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   20 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n      |                                                                                                                                                                                                      ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmptd7od9mf.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmptd7od9mf.cpp:2:\n/tmp/tmptd7od9mf.cpp:20:198: note:   candidate expects at least 2 arguments, 1 provided\n   20 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the depth of a dictionary.\nlong dict_depth(std::any d) {\n    if (d.type() != typeid(std::map<std::string, std::any>)) {\n        return 0;\n    }\n    long max_depth = 0;\n    for (auto& [key, value] : std::any_cast<std::map<std::string, std::any>>(d)) {\n        max_depth = std::max(max_depth, dict_depth(value));\n    }\n    return max_depth + 1;\n}\nint main() {\n    auto candidate = dict_depth;\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::string>({{\"c\", \"python\"}})}}))) == (2));\n    assert(candidate((std::any({{1, \"Sun\"}, {2, std::map<long,std::map<long,std::string>>({{3, std::any({{4, \"Mon\"}})}})}}))) == (3));\n}\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmph4pf0_t3.cpp:2:\n/tmp/tmph4pf0_t3.cpp: In function \u2018int main()\u2019:\n/tmp/tmph4pf0_t3.cpp:16:198: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   16 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n      |                                                                                                                                                                                                      ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmph4pf0_t3.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmph4pf0_t3.cpp:2:\n/tmp/tmph4pf0_t3.cpp:16:198: note:   candidate expects at least 2 arguments, 1 provided\n   16 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the depth of a dictionary.\nlong dict_depth(std::any d) {\n    if(d.type() != typeid(std::map<std::string, std::any>)) {\n        return 0;\n    }\n    long max_depth = 0;\n    for(auto& [key, value] : std::any_cast<std::map<std::string, std::any>>(d)) {\n        max_depth = std::max(max_depth, dict_depth(value));\n    }\n    return max_depth + 1;\n}\nint main() {\n    auto candidate = dict_depth;\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::string>({{\"c\", \"python\"}})}}))) == (2));\n    assert(candidate((std::any({{1, \"Sun\"}, {2, std::map<long,std::map<long,std::string>>({{3, std::any({{4, \"Mon\"}})}})}}))) == (3));\n}\n",
      "timestamp": 1666122553,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpefum7me3.cpp:2:\n/tmp/tmpefum7me3.cpp: In function \u2018int main()\u2019:\n/tmp/tmpefum7me3.cpp:16:198: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   16 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n      |                                                                                                                                                                                                      ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpefum7me3.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpefum7me3.cpp:2:\n/tmp/tmpefum7me3.cpp:16:198: note:   candidate expects at least 2 arguments, 1 provided\n   16 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the depth of a dictionary.\nlong dict_depth(std::any d) {\n    if (d.type() != typeid(std::map<std::string, std::any>)) {\n        return 0;\n    }\n    long max_depth = 0;\n    for (auto& it : std::any_cast<std::map<std::string, std::any>>(d)) {\n        max_depth = std::max(max_depth, dict_depth(it.second));\n    }\n    return max_depth + 1;\n}\nint main() {\n    auto candidate = dict_depth;\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::string>({{\"c\", \"python\"}})}}))) == (2));\n    assert(candidate((std::any({{1, \"Sun\"}, {2, std::map<long,std::map<long,std::string>>({{3, std::any({{4, \"Mon\"}})}})}}))) == (3));\n}\n",
      "timestamp": 1666122557,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpkoi3lqbn.cpp:2:\n/tmp/tmpkoi3lqbn.cpp: In function \u2018int main()\u2019:\n/tmp/tmpkoi3lqbn.cpp:16:198: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   16 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n      |                                                                                                                                                                                                      ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpkoi3lqbn.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpkoi3lqbn.cpp:2:\n/tmp/tmpkoi3lqbn.cpp:16:198: note:   candidate expects at least 2 arguments, 1 provided\n   16 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the depth of a dictionary.\nlong dict_depth(std::any d) {\n    if (d.type() != typeid(std::map<std::string, std::any>)) {\n        return 0;\n    }\n    long max_depth = 0;\n    for (auto& [key, value] : std::any_cast<std::map<std::string, std::any>>(d)) {\n        max_depth = std::max(max_depth, dict_depth(value));\n    }\n    return max_depth + 1;\n}\nint main() {\n    auto candidate = dict_depth;\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::string>({{\"c\", \"python\"}})}}))) == (2));\n    assert(candidate((std::any({{1, \"Sun\"}, {2, std::map<long,std::map<long,std::string>>({{3, std::any({{4, \"Mon\"}})}})}}))) == (3));\n}\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmph4pf0_t3.cpp:2:\n/tmp/tmph4pf0_t3.cpp: In function \u2018int main()\u2019:\n/tmp/tmph4pf0_t3.cpp:16:198: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   16 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n      |                                                                                                                                                                                                      ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmph4pf0_t3.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmph4pf0_t3.cpp:2:\n/tmp/tmph4pf0_t3.cpp:16:198: note:   candidate expects at least 2 arguments, 1 provided\n   16 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the depth of a dictionary.\nlong dict_depth(std::any d) {\n    if (d.type() != typeid(std::map<std::string, std::any>)) {\n        return 0;\n    }\n    long max_depth = 0;\n    for (auto& [key, value] : std::any_cast<std::map<std::string, std::any>>(d)) {\n        max_depth = std::max(max_depth, dict_depth(value));\n    }\n    return max_depth + 1;\n}\nint main() {\n    auto candidate = dict_depth;\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::string>({{\"c\", \"python\"}})}}))) == (2));\n    assert(candidate((std::any({{1, \"Sun\"}, {2, std::map<long,std::map<long,std::string>>({{3, std::any({{4, \"Mon\"}})}})}}))) == (3));\n}\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmph4pf0_t3.cpp:2:\n/tmp/tmph4pf0_t3.cpp: In function \u2018int main()\u2019:\n/tmp/tmph4pf0_t3.cpp:16:198: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   16 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n      |                                                                                                                                                                                                      ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmph4pf0_t3.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmph4pf0_t3.cpp:2:\n/tmp/tmph4pf0_t3.cpp:16:198: note:   candidate expects at least 2 arguments, 1 provided\n   16 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the depth of a dictionary.\nlong dict_depth(std::any d) {\n    long depth = 0;\n    if (d.type() == typeid(std::map<std::string, std::any>)) {\n        for (auto& [key, value] : std::any_cast<std::map<std::string, std::any>>(d)) {\n            depth = std::max(depth, dict_depth(value));\n        }\n        return depth + 1;\n    }\n    return depth;\n}\nint main() {\n    auto candidate = dict_depth;\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::string>({{\"c\", \"python\"}})}}))) == (2));\n    assert(candidate((std::any({{1, \"Sun\"}, {2, std::map<long,std::map<long,std::string>>({{3, std::any({{4, \"Mon\"}})}})}}))) == (3));\n}\n",
      "timestamp": 1666122553,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp57e65vt0.cpp:2:\n/tmp/tmp57e65vt0.cpp: In function \u2018int main()\u2019:\n/tmp/tmp57e65vt0.cpp:16:198: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   16 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n      |                                                                                                                                                                                                      ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmp57e65vt0.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp57e65vt0.cpp:2:\n/tmp/tmp57e65vt0.cpp:16:198: note:   candidate expects at least 2 arguments, 1 provided\n   16 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the depth of a dictionary.\nlong dict_depth(std::any d) {\n    if(d.type() != typeid(std::map<std::string, std::any>))\n        return 0;\n    long max_depth = 0;\n    for(auto& [key, val] : std::any_cast<std::map<std::string, std::any>>(d)) {\n        max_depth = std::max(max_depth, dict_depth(val));\n    }\n    return max_depth + 1;\n}\nint main() {\n    auto candidate = dict_depth;\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::string>({{\"c\", \"python\"}})}}))) == (2));\n    assert(candidate((std::any({{1, \"Sun\"}, {2, std::map<long,std::map<long,std::string>>({{3, std::any({{4, \"Mon\"}})}})}}))) == (3));\n}\n",
      "timestamp": 1666122557,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpsqfvjhgs.cpp:2:\n/tmp/tmpsqfvjhgs.cpp: In function \u2018int main()\u2019:\n/tmp/tmpsqfvjhgs.cpp:15:198: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n      |                                                                                                                                                                                                      ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpsqfvjhgs.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpsqfvjhgs.cpp:2:\n/tmp/tmpsqfvjhgs.cpp:15:198: note:   candidate expects at least 2 arguments, 1 provided\n   15 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the depth of a dictionary.\nlong dict_depth(std::any d) {\n    long max_depth = 0;\n    std::queue<std::pair<std::any, long>> q;\n    q.push({d, 1});\n    while (!q.empty()) {\n        auto p = q.front();\n        q.pop();\n        auto dict = p.first;\n        auto depth = p.second;\n        max_depth = std::max(max_depth, depth);\n        for (auto it = dict.begin(); it != dict.end(); it++) {\n            if (it->second.type() == typeid(std::any)) {\n                q.push({it->second, depth + 1});\n            }\n        }\n    }\n    return max_depth;\n}\nint main() {\n    auto candidate = dict_depth;\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::string>({{\"c\", \"python\"}})}}))) == (2));\n    assert(candidate((std::any({{1, \"Sun\"}, {2, std::map<long,std::map<long,std::string>>({{3, std::any({{4, \"Mon\"}})}})}}))) == (3));\n}\n",
      "timestamp": 1666122557,
      "stdout": "",
      "stderr": "/tmp/tmpao5mcw7r.cpp: In function \u2018long int dict_depth(std::any)\u2019:\n/tmp/tmpao5mcw7r.cpp:14:29: error: \u2018class std::any\u2019 has no member named \u2018begin\u2019\n   14 |         for (auto it = dict.begin(); it != dict.end(); it++) {\n      |                             ^~~~~\n/tmp/tmpao5mcw7r.cpp:14:49: error: \u2018class std::any\u2019 has no member named \u2018end\u2019\n   14 |         for (auto it = dict.begin(); it != dict.end(); it++) {\n      |                                                 ^~~\n/tmp/tmpao5mcw7r.cpp:16:47: error: no matching function for call to \u2018std::queue<std::pair<std::any, long int> >::push(<brace-enclosed initializer list>)\u2019\n   16 |                 q.push({it->second, depth + 1});\n      |                                               ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/queue:64,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:86,\n                 from /tmp/tmpao5mcw7r.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_queue.h:259:7: note: candidate: \u2018void std::queue<_Tp, _Sequence>::push(const value_type&) [with _Tp = std::pair<std::any, long int>; _Sequence = std::deque<std::pair<std::any, long int>, std::allocator<std::pair<std::any, long int> > >; std::queue<_Tp, _Sequence>::value_type = std::pair<std::any, long int>]\u2019\n  259 |       push(const value_type& __x)\n      |       ^~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_queue.h:259:30: note:   no known conversion for argument 1 from \u2018<brace-enclosed initializer list>\u2019 to \u2018const value_type&\u2019 {aka \u2018const std::pair<std::any, long int>&\u2019}\n  259 |       push(const value_type& __x)\n      |            ~~~~~~~~~~~~~~~~~~^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_queue.h:264:7: note: candidate: \u2018void std::queue<_Tp, _Sequence>::push(std::queue<_Tp, _Sequence>::value_type&&) [with _Tp = std::pair<std::any, long int>; _Sequence = std::deque<std::pair<std::any, long int>, std::allocato",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the depth of a dictionary.\nlong dict_depth(std::any d) {\n    long depth = 0;\n    if (d.type() == typeid(std::map<std::string, std::any>)) {\n        for (auto& [key, value] : std::any_cast<std::map<std::string, std::any>>(d)) {\n            depth = std::max(depth, dict_depth(value));\n        }\n        return depth + 1;\n    }\n    return depth;\n}\nint main() {\n    auto candidate = dict_depth;\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::string>({{\"c\", \"python\"}})}}))) == (2));\n    assert(candidate((std::any({{1, \"Sun\"}, {2, std::map<long,std::map<long,std::string>>({{3, std::any({{4, \"Mon\"}})}})}}))) == (3));\n}\n",
      "timestamp": 1666122553,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp57e65vt0.cpp:2:\n/tmp/tmp57e65vt0.cpp: In function \u2018int main()\u2019:\n/tmp/tmp57e65vt0.cpp:16:198: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   16 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n      |                                                                                                                                                                                                      ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmp57e65vt0.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp57e65vt0.cpp:2:\n/tmp/tmp57e65vt0.cpp:16:198: note:   candidate expects at least 2 arguments, 1 provided\n   16 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the depth of a dictionary.\nlong dict_depth(std::any d) {\n    long max_depth = 0;\n    std::queue<std::pair<std::any, long>> q;\n    q.push(std::make_pair(d, 1));\n    while (!q.empty()) {\n        auto p = q.front();\n        q.pop();\n        auto dict = std::any_cast<std::map<std::string, std::any>>(p.first);\n        for (auto it = dict.begin(); it != dict.end(); it++) {\n            if (it->second.type() == typeid(std::map<std::string, std::any>)) {\n                q.push(std::make_pair(it->second, p.second + 1));\n            }\n        }\n        max_depth = std::max(max_depth, p.second);\n    }\n    return max_depth;\n}\nint main() {\n    auto candidate = dict_depth;\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::string>({{\"c\", \"python\"}})}}))) == (2));\n    assert(candidate((std::any({{1, \"Sun\"}, {2, std::map<long,std::map<long,std::string>>({{3, std::any({{4, \"Mon\"}})}})}}))) == (3));\n}\n",
      "timestamp": 1666122557,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpd_71naqc.cpp:2:\n/tmp/tmpd_71naqc.cpp: In function \u2018int main()\u2019:\n/tmp/tmpd_71naqc.cpp:23:198: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   23 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n      |                                                                                                                                                                                                      ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpd_71naqc.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpd_71naqc.cpp:2:\n/tmp/tmpd_71naqc.cpp:23:198: note:   candidate expects at least 2 arguments, 1 provided\n   23 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the depth of a dictionary.\nlong dict_depth(std::any d) {\n    // your code here\n    long depth = 0;\n    if(d.type() == typeid(std::map<std::string, std::any>)){\n        std::map<std::string, std::any> m = std::any_cast<std::map<std::string, std::any>>(d);\n        for(auto it = m.begin(); it != m.end(); it++){\n            depth = std::max(depth, dict_depth(it->second));\n        }\n        return depth + 1;\n    }\n    else{\n        return 0;\n    }\n}\nint main() {\n    auto candidate = dict_depth;\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::string>({{\"c\", \"python\"}})}}))) == (2));\n    assert(candidate((std::any({{1, \"Sun\"}, {2, std::map<long,std::map<long,std::string>>({{3, std::any({{4, \"Mon\"}})}})}}))) == (3));\n}\n",
      "timestamp": 1666122555,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpj5jmvju2.cpp:2:\n/tmp/tmpj5jmvju2.cpp: In function \u2018int main()\u2019:\n/tmp/tmpj5jmvju2.cpp:20:198: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   20 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n      |                                                                                                                                                                                                      ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpj5jmvju2.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpj5jmvju2.cpp:2:\n/tmp/tmpj5jmvju2.cpp:20:198: note:   candidate expects at least 2 arguments, 1 provided\n   20 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the depth of a dictionary.\nlong dict_depth(std::any d) {\n    if (d.type() != typeid(std::map<std::string, std::any>)) {\n        return 0;\n    }\n    long max_depth = 0;\n    for (auto& [key, value] : std::any_cast<std::map<std::string, std::any>>(d)) {\n        max_depth = std::max(max_depth, dict_depth(value));\n    }\n    return max_depth + 1;\n}\nint main() {\n    auto candidate = dict_depth;\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::string>({{\"c\", \"python\"}})}}))) == (2));\n    assert(candidate((std::any({{1, \"Sun\"}, {2, std::map<long,std::map<long,std::string>>({{3, std::any({{4, \"Mon\"}})}})}}))) == (3));\n}\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmph4pf0_t3.cpp:2:\n/tmp/tmph4pf0_t3.cpp: In function \u2018int main()\u2019:\n/tmp/tmph4pf0_t3.cpp:16:198: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   16 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n      |                                                                                                                                                                                                      ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmph4pf0_t3.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmph4pf0_t3.cpp:2:\n/tmp/tmph4pf0_t3.cpp:16:198: note:   candidate expects at least 2 arguments, 1 provided\n   16 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the depth of a dictionary.\nlong dict_depth(std::any d) {\n    long max_depth = 0;\n    for (auto it = d.begin(); it != d.end(); ++it) {\n        if (it->second.type() == typeid(std::any)) {\n            long depth = dict_depth(it->second);\n            if (depth > max_depth) {\n                max_depth = depth;\n            }\n        }\n    }\n    return max_depth + 1;\n}\nint main() {\n    auto candidate = dict_depth;\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::string>({{\"c\", \"python\"}})}}))) == (2));\n    assert(candidate((std::any({{1, \"Sun\"}, {2, std::map<long,std::map<long,std::string>>({{3, std::any({{4, \"Mon\"}})}})}}))) == (3));\n}\n",
      "timestamp": 1666122557,
      "stdout": "",
      "stderr": "/tmp/tmpwfim1gea.cpp: In function \u2018long int dict_depth(std::any)\u2019:\n/tmp/tmpwfim1gea.cpp:6:22: error: \u2018class std::any\u2019 has no member named \u2018begin\u2019\n    6 |     for (auto it = d.begin(); it != d.end(); ++it) {\n      |                      ^~~~~\n/tmp/tmpwfim1gea.cpp:6:39: error: \u2018class std::any\u2019 has no member named \u2018end\u2019\n    6 |     for (auto it = d.begin(); it != d.end(); ++it) {\n      |                                       ^~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpwfim1gea.cpp:2:\n/tmp/tmpwfim1gea.cpp: In function \u2018int main()\u2019:\n/tmp/tmpwfim1gea.cpp:18:198: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   18 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n      |                                                                                                                                                                                                      ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpwfim1gea.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitutio",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the depth of a dictionary.\nlong dict_depth(std::any d) {\n    if (d.type() != typeid(std::map<std::any, std::any>)) {\n        return 0;\n    }\n    std::map<std::any, std::any> m = std::any_cast<std::map<std::any, std::any>>(d);\n    long max_depth = 0;\n    for (auto it = m.begin(); it != m.end(); it++) {\n        long depth = dict_depth(it->second);\n        if (depth > max_depth) {\n            max_depth = depth;\n        }\n    }\n    return max_depth + 1;\n}\nint main() {\n    auto candidate = dict_depth;\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::string>({{\"c\", \"python\"}})}}))) == (2));\n    assert(candidate((std::any({{1, \"Sun\"}, {2, std::map<long,std::map<long,std::string>>({{3, std::any({{4, \"Mon\"}})}})}}))) == (3));\n}\n",
      "timestamp": 1666122557,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp4hhlkil2.cpp:2:\n/tmp/tmp4hhlkil2.cpp: In function \u2018int main()\u2019:\n/tmp/tmp4hhlkil2.cpp:20:198: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   20 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n      |                                                                                                                                                                                                      ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmp4hhlkil2.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp4hhlkil2.cpp:2:\n/tmp/tmp4hhlkil2.cpp:20:198: note:   candidate expects at least 2 arguments, 1 provided\n   20 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the depth of a dictionary.\nlong dict_depth(std::any d) {\n    if(d.type() != typeid(std::map<std::string, std::any>)){\n        return 0;\n    }\n    long max_depth = 0;\n    for(auto& [key, value] : std::any_cast<std::map<std::string, std::any>>(d)){\n        max_depth = std::max(max_depth, dict_depth(value));\n    }\n    return max_depth + 1;\n}\nint main() {\n    auto candidate = dict_depth;\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::string>({{\"c\", \"python\"}})}}))) == (2));\n    assert(candidate((std::any({{1, \"Sun\"}, {2, std::map<long,std::map<long,std::string>>({{3, std::any({{4, \"Mon\"}})}})}}))) == (3));\n}\n",
      "timestamp": 1666122555,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp37t8ftje.cpp:2:\n/tmp/tmp37t8ftje.cpp: In function \u2018int main()\u2019:\n/tmp/tmp37t8ftje.cpp:16:198: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   16 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n      |                                                                                                                                                                                                      ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmp37t8ftje.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp37t8ftje.cpp:2:\n/tmp/tmp37t8ftje.cpp:16:198: note:   candidate expects at least 2 arguments, 1 provided\n   16 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the depth of a dictionary.\nlong dict_depth(std::any d) {\n    long depth = 0;\n    if (d.type() == typeid(std::map<std::string, std::any>)) {\n        for (auto &[key, value] : std::any_cast<std::map<std::string, std::any>>(d)) {\n            depth = std::max(depth, dict_depth(value));\n        }\n        return depth + 1;\n    }\n    return depth;\n}\nint main() {\n    auto candidate = dict_depth;\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::string>({{\"c\", \"python\"}})}}))) == (2));\n    assert(candidate((std::any({{1, \"Sun\"}, {2, std::map<long,std::map<long,std::string>>({{3, std::any({{4, \"Mon\"}})}})}}))) == (3));\n}\n",
      "timestamp": 1666122557,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpkvxrx7x_.cpp:2:\n/tmp/tmpkvxrx7x_.cpp: In function \u2018int main()\u2019:\n/tmp/tmpkvxrx7x_.cpp:16:198: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   16 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n      |                                                                                                                                                                                                      ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpkvxrx7x_.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpkvxrx7x_.cpp:2:\n/tmp/tmpkvxrx7x_.cpp:16:198: note:   candidate expects at least 2 arguments, 1 provided\n   16 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the depth of a dictionary.\nlong dict_depth(std::any d) {\n    if (d.type() != typeid(std::map<std::string, std::any>)) {\n        return 0;\n    }\n    long max_depth = 0;\n    for (auto& [key, value] : std::any_cast<std::map<std::string, std::any>>(d)) {\n        max_depth = std::max(max_depth, dict_depth(value));\n    }\n    return max_depth + 1;\n}\nint main() {\n    auto candidate = dict_depth;\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::string>({{\"c\", \"python\"}})}}))) == (2));\n    assert(candidate((std::any({{1, \"Sun\"}, {2, std::map<long,std::map<long,std::string>>({{3, std::any({{4, \"Mon\"}})}})}}))) == (3));\n}\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmph4pf0_t3.cpp:2:\n/tmp/tmph4pf0_t3.cpp: In function \u2018int main()\u2019:\n/tmp/tmph4pf0_t3.cpp:16:198: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   16 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n      |                                                                                                                                                                                                      ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmph4pf0_t3.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmph4pf0_t3.cpp:2:\n/tmp/tmph4pf0_t3.cpp:16:198: note:   candidate expects at least 2 arguments, 1 provided\n   16 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the depth of a dictionary.\nlong dict_depth(std::any d) {\n    if(d.type() != typeid(std::map<std::string, std::any>)) {\n        return 0;\n    }\n    long max_depth = 0;\n    for(auto& [key, value] : std::any_cast<std::map<std::string, std::any>>(d)) {\n        max_depth = std::max(max_depth, dict_depth(value));\n    }\n    return max_depth + 1;\n}\nint main() {\n    auto candidate = dict_depth;\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::string>({{\"c\", \"python\"}})}}))) == (2));\n    assert(candidate((std::any({{1, \"Sun\"}, {2, std::map<long,std::map<long,std::string>>({{3, std::any({{4, \"Mon\"}})}})}}))) == (3));\n}\n",
      "timestamp": 1666122553,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpefum7me3.cpp:2:\n/tmp/tmpefum7me3.cpp: In function \u2018int main()\u2019:\n/tmp/tmpefum7me3.cpp:16:198: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   16 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n      |                                                                                                                                                                                                      ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpefum7me3.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpefum7me3.cpp:2:\n/tmp/tmpefum7me3.cpp:16:198: note:   candidate expects at least 2 arguments, 1 provided\n   16 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the depth of a dictionary.\nlong dict_depth(std::any d) {\n    if(d.type() != typeid(std::map<std::string, std::any>)) {\n        return 0;\n    }\n    long max_depth = 0;\n    for(auto& [key, value] : std::any_cast<std::map<std::string, std::any>>(d)) {\n        max_depth = std::max(max_depth, dict_depth(value));\n    }\n    return max_depth + 1;\n}\nint main() {\n    auto candidate = dict_depth;\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::string>({{\"c\", \"python\"}})}}))) == (2));\n    assert(candidate((std::any({{1, \"Sun\"}, {2, std::map<long,std::map<long,std::string>>({{3, std::any({{4, \"Mon\"}})}})}}))) == (3));\n}\n",
      "timestamp": 1666122553,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpefum7me3.cpp:2:\n/tmp/tmpefum7me3.cpp: In function \u2018int main()\u2019:\n/tmp/tmpefum7me3.cpp:16:198: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   16 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n      |                                                                                                                                                                                                      ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpefum7me3.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpefum7me3.cpp:2:\n/tmp/tmpefum7me3.cpp:16:198: note:   candidate expects at least 2 arguments, 1 provided\n   16 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the depth of a dictionary.\nlong dict_depth(std::any d) {\n    if (d.type() != typeid(std::map<std::string, std::any>)) {\n        return 0;\n    }\n    long max_depth = 0;\n    for (auto& kv : std::any_cast<std::map<std::string, std::any>>(d)) {\n        max_depth = std::max(max_depth, dict_depth(kv.second));\n    }\n    return max_depth + 1;\n}\nint main() {\n    auto candidate = dict_depth;\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::string>({{\"c\", \"python\"}})}}))) == (2));\n    assert(candidate((std::any({{1, \"Sun\"}, {2, std::map<long,std::map<long,std::string>>({{3, std::any({{4, \"Mon\"}})}})}}))) == (3));\n}\n",
      "timestamp": 1666122557,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp9bsqyhpd.cpp:2:\n/tmp/tmp9bsqyhpd.cpp: In function \u2018int main()\u2019:\n/tmp/tmp9bsqyhpd.cpp:16:198: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   16 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n      |                                                                                                                                                                                                      ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmp9bsqyhpd.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp9bsqyhpd.cpp:2:\n/tmp/tmp9bsqyhpd.cpp:16:198: note:   candidate expects at least 2 arguments, 1 provided\n   16 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the depth of a dictionary.\nlong dict_depth(std::any d) {\n    if (!d.has_value())\n        return 0;\n    if (d.type() != typeid(std::map<std::string, std::any>))\n        return 1;\n    long max = 0;\n    for (auto& [key, val] : std::any_cast<std::map<std::string, std::any>>(d)) {\n        long depth = dict_depth(val);\n        if (depth > max)\n            max = depth;\n    }\n    return max + 1;\n}\nint main() {\n    auto candidate = dict_depth;\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::string>({{\"c\", \"python\"}})}}))) == (2));\n    assert(candidate((std::any({{1, \"Sun\"}, {2, std::map<long,std::map<long,std::string>>({{3, std::any({{4, \"Mon\"}})}})}}))) == (3));\n}\n",
      "timestamp": 1666122557,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpxhjyg8h4.cpp:2:\n/tmp/tmpxhjyg8h4.cpp: In function \u2018int main()\u2019:\n/tmp/tmpxhjyg8h4.cpp:19:198: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   19 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n      |                                                                                                                                                                                                      ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpxhjyg8h4.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpxhjyg8h4.cpp:2:\n/tmp/tmpxhjyg8h4.cpp:19:198: note:   candidate expects at least 2 arguments, 1 provided\n   19 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the depth of a dictionary.\nlong dict_depth(std::any d) {\n    long max_depth = 0;\n    for (auto it = d.begin(); it != d.end(); ++it) {\n        if (it->second.type() == typeid(std::any)) {\n            long depth = dict_depth(it->second);\n            if (depth > max_depth) {\n                max_depth = depth;\n            }\n        }\n    }\n    return max_depth + 1;\n}\nint main() {\n    auto candidate = dict_depth;\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::string>({{\"c\", \"python\"}})}}))) == (2));\n    assert(candidate((std::any({{1, \"Sun\"}, {2, std::map<long,std::map<long,std::string>>({{3, std::any({{4, \"Mon\"}})}})}}))) == (3));\n}\n",
      "timestamp": 1666122557,
      "stdout": "",
      "stderr": "/tmp/tmpwfim1gea.cpp: In function \u2018long int dict_depth(std::any)\u2019:\n/tmp/tmpwfim1gea.cpp:6:22: error: \u2018class std::any\u2019 has no member named \u2018begin\u2019\n    6 |     for (auto it = d.begin(); it != d.end(); ++it) {\n      |                      ^~~~~\n/tmp/tmpwfim1gea.cpp:6:39: error: \u2018class std::any\u2019 has no member named \u2018end\u2019\n    6 |     for (auto it = d.begin(); it != d.end(); ++it) {\n      |                                       ^~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpwfim1gea.cpp:2:\n/tmp/tmpwfim1gea.cpp: In function \u2018int main()\u2019:\n/tmp/tmpwfim1gea.cpp:18:198: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   18 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n      |                                                                                                                                                                                                      ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpwfim1gea.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitutio",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the depth of a dictionary.\nlong dict_depth(std::any d) {\n    if (d.type() != typeid(std::map<std::string, std::any>)) {\n        return 0;\n    }\n    long max_depth = 0;\n    for (auto& [key, value] : std::any_cast<std::map<std::string, std::any>>(d)) {\n        max_depth = std::max(max_depth, dict_depth(value));\n    }\n    return max_depth + 1;\n}\nint main() {\n    auto candidate = dict_depth;\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::string>({{\"c\", \"python\"}})}}))) == (2));\n    assert(candidate((std::any({{1, \"Sun\"}, {2, std::map<long,std::map<long,std::string>>({{3, std::any({{4, \"Mon\"}})}})}}))) == (3));\n}\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmph4pf0_t3.cpp:2:\n/tmp/tmph4pf0_t3.cpp: In function \u2018int main()\u2019:\n/tmp/tmph4pf0_t3.cpp:16:198: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   16 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n      |                                                                                                                                                                                                      ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmph4pf0_t3.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmph4pf0_t3.cpp:2:\n/tmp/tmph4pf0_t3.cpp:16:198: note:   candidate expects at least 2 arguments, 1 provided\n   16 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the depth of a dictionary.\nlong dict_depth(std::any d) {\n    if (!d.has_value()) {\n        return 0;\n    }\n    if (d.type() != typeid(std::map<std::string, std::any>)) {\n        throw std::invalid_argument(\"Not a dictionary\");\n    }\n    auto dict = std::any_cast<std::map<std::string, std::any>>(d);\n    long max_depth = 0;\n    for (auto& kv : dict) {\n        max_depth = std::max(max_depth, dict_depth(kv.second));\n    }\n    return max_depth + 1;\n}\nint main() {\n    auto candidate = dict_depth;\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::string>({{\"c\", \"python\"}})}}))) == (2));\n    assert(candidate((std::any({{1, \"Sun\"}, {2, std::map<long,std::map<long,std::string>>({{3, std::any({{4, \"Mon\"}})}})}}))) == (3));\n}\n",
      "timestamp": 1666122557,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpirinmn90.cpp:2:\n/tmp/tmpirinmn90.cpp: In function \u2018int main()\u2019:\n/tmp/tmpirinmn90.cpp:20:198: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   20 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n      |                                                                                                                                                                                                      ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpirinmn90.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpirinmn90.cpp:2:\n/tmp/tmpirinmn90.cpp:20:198: note:   candidate expects at least 2 arguments, 1 provided\n   20 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the depth of a dictionary.\nlong dict_depth(std::any d) {\n    if (d.type() != typeid(std::map<std::string, std::any>)) {\n        return 0;\n    }\n    long max_depth = 0;\n    for (auto& [key, value] : std::any_cast<std::map<std::string, std::any>>(d)) {\n        max_depth = std::max(max_depth, dict_depth(value));\n    }\n    return max_depth + 1;\n}\nint main() {\n    auto candidate = dict_depth;\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::string>({{\"c\", \"python\"}})}}))) == (2));\n    assert(candidate((std::any({{1, \"Sun\"}, {2, std::map<long,std::map<long,std::string>>({{3, std::any({{4, \"Mon\"}})}})}}))) == (3));\n}\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmph4pf0_t3.cpp:2:\n/tmp/tmph4pf0_t3.cpp: In function \u2018int main()\u2019:\n/tmp/tmph4pf0_t3.cpp:16:198: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   16 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n      |                                                                                                                                                                                                      ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmph4pf0_t3.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmph4pf0_t3.cpp:2:\n/tmp/tmph4pf0_t3.cpp:16:198: note:   candidate expects at least 2 arguments, 1 provided\n   16 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the depth of a dictionary.\nlong dict_depth(std::any d) {\n    if(d.type() != typeid(std::map<std::string, std::any>))\n        return 0;\n    std::map<std::string, std::any> m = std::any_cast<std::map<std::string, std::any>>(d);\n    long max_depth = 0;\n    for(auto it = m.begin(); it != m.end(); it++) {\n        long depth = dict_depth(it->second);\n        if(depth > max_depth)\n            max_depth = depth;\n    }\n    return max_depth + 1;\n}\nint main() {\n    auto candidate = dict_depth;\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::string>({{\"c\", \"python\"}})}}))) == (2));\n    assert(candidate((std::any({{1, \"Sun\"}, {2, std::map<long,std::map<long,std::string>>({{3, std::any({{4, \"Mon\"}})}})}}))) == (3));\n}\n",
      "timestamp": 1666122555,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpu0lbua67.cpp:2:\n/tmp/tmpu0lbua67.cpp: In function \u2018int main()\u2019:\n/tmp/tmpu0lbua67.cpp:18:198: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   18 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n      |                                                                                                                                                                                                      ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpu0lbua67.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpu0lbua67.cpp:2:\n/tmp/tmpu0lbua67.cpp:18:198: note:   candidate expects at least 2 arguments, 1 provided\n   18 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the depth of a dictionary.\nlong dict_depth(std::any d) {\n    long depth = 0;\n    if(d.type() == typeid(std::map<std::string, std::any>)) {\n        for(auto& [key, val] : std::any_cast<std::map<std::string, std::any>>(d)) {\n            depth = std::max(depth, dict_depth(val));\n        }\n        return depth + 1;\n    }\n    return 0;\n}\nint main() {\n    auto candidate = dict_depth;\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::string>({{\"c\", \"python\"}})}}))) == (2));\n    assert(candidate((std::any({{1, \"Sun\"}, {2, std::map<long,std::map<long,std::string>>({{3, std::any({{4, \"Mon\"}})}})}}))) == (3));\n}\n",
      "timestamp": 1666122557,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpowkybpsa.cpp:2:\n/tmp/tmpowkybpsa.cpp: In function \u2018int main()\u2019:\n/tmp/tmpowkybpsa.cpp:16:198: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   16 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n      |                                                                                                                                                                                                      ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpowkybpsa.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpowkybpsa.cpp:2:\n/tmp/tmpowkybpsa.cpp:16:198: note:   candidate expects at least 2 arguments, 1 provided\n   16 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the depth of a dictionary.\nlong dict_depth(std::any d) {\n    if (d.type() != typeid(std::map<std::string, std::any>)) {\n        return 0;\n    }\n    long max_depth = 0;\n    for (auto& [key, value] : std::any_cast<std::map<std::string, std::any>>(d)) {\n        max_depth = std::max(max_depth, dict_depth(value));\n    }\n    return max_depth + 1;\n}\nint main() {\n    auto candidate = dict_depth;\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::string>({{\"c\", \"python\"}})}}))) == (2));\n    assert(candidate((std::any({{1, \"Sun\"}, {2, std::map<long,std::map<long,std::string>>({{3, std::any({{4, \"Mon\"}})}})}}))) == (3));\n}\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmph4pf0_t3.cpp:2:\n/tmp/tmph4pf0_t3.cpp: In function \u2018int main()\u2019:\n/tmp/tmph4pf0_t3.cpp:16:198: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   16 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n      |                                                                                                                                                                                                      ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmph4pf0_t3.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmph4pf0_t3.cpp:2:\n/tmp/tmph4pf0_t3.cpp:16:198: note:   candidate expects at least 2 arguments, 1 provided\n   16 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the depth of a dictionary.\nlong dict_depth(std::any d) {\n    // your code here\n    long depth = 0;\n    if(d.type() == typeid(std::map<std::string, std::any>)){\n        std::map<std::string, std::any> m = std::any_cast<std::map<std::string, std::any>>(d);\n        for(auto it = m.begin(); it != m.end(); it++){\n            depth = std::max(depth, dict_depth(it->second));\n        }\n        return depth + 1;\n    }\n    return depth;\n}\nint main() {\n    auto candidate = dict_depth;\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::string>({{\"c\", \"python\"}})}}))) == (2));\n    assert(candidate((std::any({{1, \"Sun\"}, {2, std::map<long,std::map<long,std::string>>({{3, std::any({{4, \"Mon\"}})}})}}))) == (3));\n}\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpjf8e9awm.cpp:2:\n/tmp/tmpjf8e9awm.cpp: In function \u2018int main()\u2019:\n/tmp/tmpjf8e9awm.cpp:18:198: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   18 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n      |                                                                                                                                                                                                      ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpjf8e9awm.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpjf8e9awm.cpp:2:\n/tmp/tmpjf8e9awm.cpp:18:198: note:   candidate expects at least 2 arguments, 1 provided\n   18 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the depth of a dictionary.\nlong dict_depth(std::any d) {\n    if(!d.has_value())\n        return 0;\n    if(d.type() != typeid(std::map<std::string, std::any>))\n        return 0;\n    long max_depth = 0;\n    for(auto& [key, value] : std::any_cast<std::map<std::string, std::any>>(d)) {\n        max_depth = std::max(max_depth, dict_depth(value));\n    }\n    return max_depth + 1;\n}\nint main() {\n    auto candidate = dict_depth;\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::string>({{\"c\", \"python\"}})}}))) == (2));\n    assert(candidate((std::any({{1, \"Sun\"}, {2, std::map<long,std::map<long,std::string>>({{3, std::any({{4, \"Mon\"}})}})}}))) == (3));\n}\n",
      "timestamp": 1666122555,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpvcr8nfh5.cpp:2:\n/tmp/tmpvcr8nfh5.cpp: In function \u2018int main()\u2019:\n/tmp/tmpvcr8nfh5.cpp:17:198: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   17 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n      |                                                                                                                                                                                                      ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpvcr8nfh5.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpvcr8nfh5.cpp:2:\n/tmp/tmpvcr8nfh5.cpp:17:198: note:   candidate expects at least 2 arguments, 1 provided\n   17 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the depth of a dictionary.\nlong dict_depth(std::any d) {\n    // your code here\n    if(d.type()==typeid(std::map<std::string,std::any>)){\n        std::map<std::string,std::any> m=std::any_cast<std::map<std::string,std::any>>(d);\n        long max=0;\n        for(auto i=m.begin();i!=m.end();i++){\n            long temp=dict_depth(i->second);\n            if(temp>max){\n                max=temp;\n            }\n        }\n        return max+1;\n    }\n    else{\n        return 0;\n    }\n}\nint main() {\n    auto candidate = dict_depth;\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::string>({{\"c\", \"python\"}})}}))) == (2));\n    assert(candidate((std::any({{1, \"Sun\"}, {2, std::map<long,std::map<long,std::string>>({{3, std::any({{4, \"Mon\"}})}})}}))) == (3));\n}\n",
      "timestamp": 1666122557,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpu_fu6fpg.cpp:2:\n/tmp/tmpu_fu6fpg.cpp: In function \u2018int main()\u2019:\n/tmp/tmpu_fu6fpg.cpp:23:198: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   23 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n      |                                                                                                                                                                                                      ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpu_fu6fpg.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpu_fu6fpg.cpp:2:\n/tmp/tmpu_fu6fpg.cpp:23:198: note:   candidate expects at least 2 arguments, 1 provided\n   23 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the depth of a dictionary.\nlong dict_depth(std::any d) {\n    if (d.type() != typeid(std::map<std::string, std::any>)) {\n        return 0;\n    }\n    long max_depth = 0;\n    for (auto& kv : std::any_cast<std::map<std::string, std::any>>(d)) {\n        max_depth = std::max(max_depth, dict_depth(kv.second));\n    }\n    return max_depth + 1;\n}\nint main() {\n    auto candidate = dict_depth;\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::string>({{\"c\", \"python\"}})}}))) == (2));\n    assert(candidate((std::any({{1, \"Sun\"}, {2, std::map<long,std::map<long,std::string>>({{3, std::any({{4, \"Mon\"}})}})}}))) == (3));\n}\n",
      "timestamp": 1666122557,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp9bsqyhpd.cpp:2:\n/tmp/tmp9bsqyhpd.cpp: In function \u2018int main()\u2019:\n/tmp/tmp9bsqyhpd.cpp:16:198: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   16 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n      |                                                                                                                                                                                                      ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmp9bsqyhpd.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp9bsqyhpd.cpp:2:\n/tmp/tmp9bsqyhpd.cpp:16:198: note:   candidate expects at least 2 arguments, 1 provided\n   16 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the depth of a dictionary.\nlong dict_depth(std::any d) {\n    if(d.type() == typeid(std::map<std::string, std::any>)) {\n        long max_depth = 0;\n        for(auto &[key, value] : std::any_cast<std::map<std::string, std::any>>(d)) {\n            max_depth = std::max(max_depth, dict_depth(value));\n        }\n        return max_depth + 1;\n    }\n    return 0;\n}\nint main() {\n    auto candidate = dict_depth;\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::string>({{\"c\", \"python\"}})}}))) == (2));\n    assert(candidate((std::any({{1, \"Sun\"}, {2, std::map<long,std::map<long,std::string>>({{3, std::any({{4, \"Mon\"}})}})}}))) == (3));\n}\n",
      "timestamp": 1666122557,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpdk8vhbpm.cpp:2:\n/tmp/tmpdk8vhbpm.cpp: In function \u2018int main()\u2019:\n/tmp/tmpdk8vhbpm.cpp:16:198: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   16 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n      |                                                                                                                                                                                                      ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpdk8vhbpm.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpdk8vhbpm.cpp:2:\n/tmp/tmpdk8vhbpm.cpp:16:198: note:   candidate expects at least 2 arguments, 1 provided\n   16 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the depth of a dictionary.\nlong dict_depth(std::any d) {\n    if(d.type()!=typeid(std::map<std::string, std::any>))\n        return 0;\n    std::map<std::string, std::any> m = std::any_cast<std::map<std::string, std::any>>(d);\n    long max_depth = 0;\n    for(auto it = m.begin(); it!=m.end(); it++) {\n        long depth = dict_depth(it->second);\n        if(depth > max_depth)\n            max_depth = depth;\n    }\n    return max_depth + 1;\n}\nint main() {\n    auto candidate = dict_depth;\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::string>({{\"c\", \"python\"}})}}))) == (2));\n    assert(candidate((std::any({{1, \"Sun\"}, {2, std::map<long,std::map<long,std::string>>({{3, std::any({{4, \"Mon\"}})}})}}))) == (3));\n}\n",
      "timestamp": 1666122557,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp88aa7blb.cpp:2:\n/tmp/tmp88aa7blb.cpp: In function \u2018int main()\u2019:\n/tmp/tmp88aa7blb.cpp:18:198: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   18 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n      |                                                                                                                                                                                                      ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmp88aa7blb.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp88aa7blb.cpp:2:\n/tmp/tmp88aa7blb.cpp:18:198: note:   candidate expects at least 2 arguments, 1 provided\n   18 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the depth of a dictionary.\nlong dict_depth(std::any d) {\n    if(d.type() == typeid(std::map<std::string, std::any>)){\n        long max = 0;\n        for(auto it = std::any_cast<std::map<std::string, std::any>>(d).begin(); it != std::any_cast<std::map<std::string, std::any>>(d).end(); ++it){\n            long depth = dict_depth(it->second);\n            if(depth > max){\n                max = depth;\n            }\n        }\n        return max + 1;\n    }\n    else if(d.type() == typeid(std::vector<std::any>)){\n        long max = 0;\n        for(auto it = std::any_cast<std::vector<std::any>>(d).begin(); it != std::any_cast<std::vector<std::any>>(d).end(); ++it){\n            long depth = dict_depth(*it);\n            if(depth > max){\n                max = depth;\n            }\n        }\n        return max + 1;\n    }\n    else{\n        return 1;\n    }\n}\nint main() {\n    auto candidate = dict_depth;\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::string>({{\"c\", \"python\"}})}}))) == (2));\n    assert(candidate((std::any({{1, \"Sun\"}, {2, std::map<long,std::map<long,std::string>>({{3, std::any({{4, \"Mon\"}})}})}}))) == (3));\n}\n",
      "timestamp": 1666122557,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpo1w82h05.cpp:2:\n/tmp/tmpo1w82h05.cpp: In function \u2018int main()\u2019:\n/tmp/tmpo1w82h05.cpp:31:198: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   31 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n      |                                                                                                                                                                                                      ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpo1w82h05.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpo1w82h05.cpp:2:\n/tmp/tmpo1w82h05.cpp:31:198: note:   candidate expects at least 2 arguments, 1 provided\n   31 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the depth of a dictionary.\nlong dict_depth(std::any d) {\n    long max_depth = 0;\n    std::any key;\n    std::any value;\n    std::any keys = d.keys();\n    for (auto key : keys) {\n        std::any value = d[key];\n        if (value.type() == typeid(std::any)) {\n            long depth = dict_depth(value);\n            if (depth > max_depth) {\n                max_depth = depth;\n            }\n        }\n    }\n    return max_depth + 1;\n}\nint main() {\n    auto candidate = dict_depth;\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::string>({{\"c\", \"python\"}})}}))) == (2));\n    assert(candidate((std::any({{1, \"Sun\"}, {2, std::map<long,std::map<long,std::string>>({{3, std::any({{4, \"Mon\"}})}})}}))) == (3));\n}\n",
      "timestamp": 1666122559,
      "stdout": "",
      "stderr": "/tmp/tmpvgzoqur6.cpp: In function \u2018long int dict_depth(std::any)\u2019:\n/tmp/tmpvgzoqur6.cpp:8:23: error: \u2018class std::any\u2019 has no member named \u2018keys\u2019\n    8 |     std::any keys = d.keys();\n      |                       ^~~~\n/tmp/tmpvgzoqur6.cpp:9:21: error: no matching function for call to \u2018begin(std::any&)\u2019\n    9 |     for (auto key : keys) {\n      |                     ^~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/range_access.h:36,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/string:54,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/locale_classes.h:40,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/ios_base.h:41,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ios:42,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/istream:38,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/sstream:38,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/complex:45,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ccomplex:39,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:54,\n                 from /tmp/tmpvgzoqur6.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/initializer_list:89:5: note: candidate: \u2018template<class _Tp> constexpr const _Tp* std::begin(std::initializer_list<_Tp>)\u2019\n   89 |     begin(initializer_list<_Tp> __ils) noexcept\n      |     ^~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/initializer_list:89:5: note:   template argument deduction/substitution failed:\n/tmp/tmpvgzoqur6.cpp:9:21: note:   \u2018std::any\u2019 is not derived from \u2018std::initializer_list<_Tp>\u2019\n    9 |     for (auto key : keys) {\n      |                     ^~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/string:54,\n                 from /shared/centos7/gcc/9.2.0-skylake/",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the depth of a dictionary.\nlong dict_depth(std::any d) {\n    if(d.type() != typeid(std::map<std::string, std::any>)) {\n        return 0;\n    }\n    long max_depth = 0;\n    for(auto& [key, value] : std::any_cast<std::map<std::string, std::any>>(d)) {\n        max_depth = std::max(max_depth, dict_depth(value));\n    }\n    return max_depth + 1;\n}\nint main() {\n    auto candidate = dict_depth;\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::string>({{\"c\", \"python\"}})}}))) == (2));\n    assert(candidate((std::any({{1, \"Sun\"}, {2, std::map<long,std::map<long,std::string>>({{3, std::any({{4, \"Mon\"}})}})}}))) == (3));\n}\n",
      "timestamp": 1666122553,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpefum7me3.cpp:2:\n/tmp/tmpefum7me3.cpp: In function \u2018int main()\u2019:\n/tmp/tmpefum7me3.cpp:16:198: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   16 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n      |                                                                                                                                                                                                      ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpefum7me3.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpefum7me3.cpp:2:\n/tmp/tmpefum7me3.cpp:16:198: note:   candidate expects at least 2 arguments, 1 provided\n   16 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the depth of a dictionary.\nlong dict_depth(std::any d) {\n    if (d.type() != typeid(std::map<std::string, std::any>)) {\n        return 0;\n    }\n    long max_depth = 0;\n    for (auto& [key, value] : std::any_cast<std::map<std::string, std::any>>(d)) {\n        max_depth = std::max(max_depth, dict_depth(value));\n    }\n    return max_depth + 1;\n}\nint main() {\n    auto candidate = dict_depth;\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::string>({{\"c\", \"python\"}})}}))) == (2));\n    assert(candidate((std::any({{1, \"Sun\"}, {2, std::map<long,std::map<long,std::string>>({{3, std::any({{4, \"Mon\"}})}})}}))) == (3));\n}\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmph4pf0_t3.cpp:2:\n/tmp/tmph4pf0_t3.cpp: In function \u2018int main()\u2019:\n/tmp/tmph4pf0_t3.cpp:16:198: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   16 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n      |                                                                                                                                                                                                      ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmph4pf0_t3.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmph4pf0_t3.cpp:2:\n/tmp/tmph4pf0_t3.cpp:16:198: note:   candidate expects at least 2 arguments, 1 provided\n   16 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the depth of a dictionary.\nlong dict_depth(std::any d) {\n    if (d.type() != typeid(std::map<std::string, std::any>)) {\n        return 0;\n    }\n    long max_depth = 0;\n    for (auto& [key, value] : std::any_cast<std::map<std::string, std::any>>(d)) {\n        max_depth = std::max(max_depth, dict_depth(value));\n    }\n    return max_depth + 1;\n}\nint main() {\n    auto candidate = dict_depth;\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::string>({{\"c\", \"python\"}})}}))) == (2));\n    assert(candidate((std::any({{1, \"Sun\"}, {2, std::map<long,std::map<long,std::string>>({{3, std::any({{4, \"Mon\"}})}})}}))) == (3));\n}\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmph4pf0_t3.cpp:2:\n/tmp/tmph4pf0_t3.cpp: In function \u2018int main()\u2019:\n/tmp/tmph4pf0_t3.cpp:16:198: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   16 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n      |                                                                                                                                                                                                      ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmph4pf0_t3.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmph4pf0_t3.cpp:2:\n/tmp/tmph4pf0_t3.cpp:16:198: note:   candidate expects at least 2 arguments, 1 provided\n   16 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the depth of a dictionary.\nlong dict_depth(std::any d) {\n    long max_depth = 0;\n    std::queue<std::pair<std::any, long>> q;\n    q.push(std::make_pair(d, 1));\n    while (!q.empty()) {\n        auto p = q.front();\n        q.pop();\n        auto dict = p.first;\n        auto depth = p.second;\n        max_depth = std::max(max_depth, depth);\n        for (auto it = dict.begin(); it != dict.end(); it++) {\n            if (it->second.type() == typeid(std::any)) {\n                q.push(std::make_pair(it->second, depth + 1));\n            }\n        }\n    }\n    return max_depth;\n}\nint main() {\n    auto candidate = dict_depth;\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::string>({{\"c\", \"python\"}})}}))) == (2));\n    assert(candidate((std::any({{1, \"Sun\"}, {2, std::map<long,std::map<long,std::string>>({{3, std::any({{4, \"Mon\"}})}})}}))) == (3));\n}\n",
      "timestamp": 1666122559,
      "stdout": "",
      "stderr": "/tmp/tmp9wh96c2p.cpp: In function \u2018long int dict_depth(std::any)\u2019:\n/tmp/tmp9wh96c2p.cpp:14:29: error: \u2018class std::any\u2019 has no member named \u2018begin\u2019\n   14 |         for (auto it = dict.begin(); it != dict.end(); it++) {\n      |                             ^~~~~\n/tmp/tmp9wh96c2p.cpp:14:49: error: \u2018class std::any\u2019 has no member named \u2018end\u2019\n   14 |         for (auto it = dict.begin(); it != dict.end(); it++) {\n      |                                                 ^~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp9wh96c2p.cpp:2:\n/tmp/tmp9wh96c2p.cpp: In function \u2018int main()\u2019:\n/tmp/tmp9wh96c2p.cpp:24:198: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   24 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n      |                                                                                                                                                                                                      ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmp9wh96c2p.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/subs",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the depth of a dictionary.\nlong dict_depth(std::any d) {\n    long max_depth = 0;\n    for (auto& [key, value] : d) {\n        if (std::any_cast<std::any>(&value)) {\n            max_depth = std::max(max_depth, dict_depth(value));\n        }\n    }\n    return max_depth + 1;\n}\nint main() {\n    auto candidate = dict_depth;\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::string>({{\"c\", \"python\"}})}}))) == (2));\n    assert(candidate((std::any({{1, \"Sun\"}, {2, std::map<long,std::map<long,std::string>>({{3, std::any({{4, \"Mon\"}})}})}}))) == (3));\n}\n",
      "timestamp": 1666122559,
      "stdout": "",
      "stderr": "/tmp/tmpktdh5stp.cpp: In function \u2018long int dict_depth(std::any)\u2019:\n/tmp/tmpktdh5stp.cpp:6:31: error: no matching function for call to \u2018begin(std::any&)\u2019\n    6 |     for (auto& [key, value] : d) {\n      |                               ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/range_access.h:36,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/string:54,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/locale_classes.h:40,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/ios_base.h:41,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ios:42,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/istream:38,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/sstream:38,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/complex:45,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ccomplex:39,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:54,\n                 from /tmp/tmpktdh5stp.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/initializer_list:89:5: note: candidate: \u2018template<class _Tp> constexpr const _Tp* std::begin(std::initializer_list<_Tp>)\u2019\n   89 |     begin(initializer_list<_Tp> __ils) noexcept\n      |     ^~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/initializer_list:89:5: note:   template argument deduction/substitution failed:\n/tmp/tmpktdh5stp.cpp:6:31: note:   \u2018std::any\u2019 is not derived from \u2018std::initializer_list<_Tp>\u2019\n    6 |     for (auto& [key, value] : d) {\n      |                               ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/string:54,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/locale_classes.h:40,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/ios_base",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the depth of a dictionary.\nlong dict_depth(std::any d) {\n    if (d.type() != typeid(std::map<std::string, std::any>)) {\n        return 0;\n    }\n    long max_depth = 0;\n    for (auto& [key, value] : std::any_cast<std::map<std::string, std::any>>(d)) {\n        max_depth = std::max(max_depth, dict_depth(value));\n    }\n    return max_depth + 1;\n}\nint main() {\n    auto candidate = dict_depth;\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::string>({{\"c\", \"python\"}})}}))) == (2));\n    assert(candidate((std::any({{1, \"Sun\"}, {2, std::map<long,std::map<long,std::string>>({{3, std::any({{4, \"Mon\"}})}})}}))) == (3));\n}\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmph4pf0_t3.cpp:2:\n/tmp/tmph4pf0_t3.cpp: In function \u2018int main()\u2019:\n/tmp/tmph4pf0_t3.cpp:16:198: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   16 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n      |                                                                                                                                                                                                      ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmph4pf0_t3.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmph4pf0_t3.cpp:2:\n/tmp/tmph4pf0_t3.cpp:16:198: note:   candidate expects at least 2 arguments, 1 provided\n   16 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the depth of a dictionary.\nlong dict_depth(std::any d) {\n    if (d.type() != typeid(std::map<std::string, std::any>)) {\n        return 0;\n    }\n    long max_depth = 0;\n    for (auto& [key, value] : std::any_cast<std::map<std::string, std::any>>(d)) {\n        max_depth = std::max(max_depth, dict_depth(value));\n    }\n    return max_depth + 1;\n}\nint main() {\n    auto candidate = dict_depth;\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::string>({{\"c\", \"python\"}})}}))) == (2));\n    assert(candidate((std::any({{1, \"Sun\"}, {2, std::map<long,std::map<long,std::string>>({{3, std::any({{4, \"Mon\"}})}})}}))) == (3));\n}\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmph4pf0_t3.cpp:2:\n/tmp/tmph4pf0_t3.cpp: In function \u2018int main()\u2019:\n/tmp/tmph4pf0_t3.cpp:16:198: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   16 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n      |                                                                                                                                                                                                      ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmph4pf0_t3.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmph4pf0_t3.cpp:2:\n/tmp/tmph4pf0_t3.cpp:16:198: note:   candidate expects at least 2 arguments, 1 provided\n   16 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the depth of a dictionary.\nlong dict_depth(std::any d) {\n    if (d.type() != typeid(std::map<std::string, std::any>)) {\n        return 0;\n    }\n    long depth = 0;\n    for (auto& [key, value] : std::any_cast<std::map<std::string, std::any>>(d)) {\n        depth = std::max(depth, dict_depth(value));\n    }\n    return 1 + depth;\n}\nint main() {\n    auto candidate = dict_depth;\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::string>({{\"c\", \"python\"}})}}))) == (2));\n    assert(candidate((std::any({{1, \"Sun\"}, {2, std::map<long,std::map<long,std::string>>({{3, std::any({{4, \"Mon\"}})}})}}))) == (3));\n}\n",
      "timestamp": 1666122559,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp7b1anj2d.cpp:2:\n/tmp/tmp7b1anj2d.cpp: In function \u2018int main()\u2019:\n/tmp/tmp7b1anj2d.cpp:16:198: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   16 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n      |                                                                                                                                                                                                      ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmp7b1anj2d.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp7b1anj2d.cpp:2:\n/tmp/tmp7b1anj2d.cpp:16:198: note:   candidate expects at least 2 arguments, 1 provided\n   16 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the depth of a dictionary.\nlong dict_depth(std::any d) {\n    if (d.type() != typeid(std::map<std::string, std::any>)) {\n        return 0;\n    }\n    long max_depth = 0;\n    for (auto& [key, value] : std::any_cast<std::map<std::string, std::any>>(d)) {\n        max_depth = std::max(max_depth, dict_depth(value));\n    }\n    return max_depth + 1;\n}\nint main() {\n    auto candidate = dict_depth;\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::string>({{\"c\", \"python\"}})}}))) == (2));\n    assert(candidate((std::any({{1, \"Sun\"}, {2, std::map<long,std::map<long,std::string>>({{3, std::any({{4, \"Mon\"}})}})}}))) == (3));\n}\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmph4pf0_t3.cpp:2:\n/tmp/tmph4pf0_t3.cpp: In function \u2018int main()\u2019:\n/tmp/tmph4pf0_t3.cpp:16:198: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   16 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n      |                                                                                                                                                                                                      ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmph4pf0_t3.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmph4pf0_t3.cpp:2:\n/tmp/tmph4pf0_t3.cpp:16:198: note:   candidate expects at least 2 arguments, 1 provided\n   16 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the depth of a dictionary.\nlong dict_depth(std::any d) {\n    if (d.type() != typeid(std::map<std::string, std::any>)) {\n        return 0;\n    }\n    long max_depth = 0;\n    for (auto& [key, value] : std::any_cast<std::map<std::string, std::any>>(d)) {\n        max_depth = std::max(max_depth, dict_depth(value));\n    }\n    return max_depth + 1;\n}\nint main() {\n    auto candidate = dict_depth;\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::string>({{\"c\", \"python\"}})}}))) == (2));\n    assert(candidate((std::any({{1, \"Sun\"}, {2, std::map<long,std::map<long,std::string>>({{3, std::any({{4, \"Mon\"}})}})}}))) == (3));\n}\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmph4pf0_t3.cpp:2:\n/tmp/tmph4pf0_t3.cpp: In function \u2018int main()\u2019:\n/tmp/tmph4pf0_t3.cpp:16:198: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   16 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n      |                                                                                                                                                                                                      ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmph4pf0_t3.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmph4pf0_t3.cpp:2:\n/tmp/tmph4pf0_t3.cpp:16:198: note:   candidate expects at least 2 arguments, 1 provided\n   16 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the depth of a dictionary.\nlong dict_depth(std::any d) {\n    long depth = 0;\n    if (d.type() == typeid(std::map<std::string, std::any>)) {\n        for (auto& [key, value] : std::any_cast<std::map<std::string, std::any>>(d)) {\n            depth = std::max(depth, dict_depth(value));\n        }\n        return depth + 1;\n    }\n    return depth;\n}\nint main() {\n    auto candidate = dict_depth;\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::string>({{\"c\", \"python\"}})}}))) == (2));\n    assert(candidate((std::any({{1, \"Sun\"}, {2, std::map<long,std::map<long,std::string>>({{3, std::any({{4, \"Mon\"}})}})}}))) == (3));\n}\n",
      "timestamp": 1666122553,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp57e65vt0.cpp:2:\n/tmp/tmp57e65vt0.cpp: In function \u2018int main()\u2019:\n/tmp/tmp57e65vt0.cpp:16:198: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   16 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n      |                                                                                                                                                                                                      ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmp57e65vt0.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp57e65vt0.cpp:2:\n/tmp/tmp57e65vt0.cpp:16:198: note:   candidate expects at least 2 arguments, 1 provided\n   16 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the depth of a dictionary.\nlong dict_depth(std::any d) {\n    if (d.type() != typeid(std::map<std::string, std::any>)) {\n        return 0;\n    }\n    long max_depth = 0;\n    for (auto& [key, value] : std::any_cast<std::map<std::string, std::any>>(d)) {\n        long depth = dict_depth(value);\n        if (depth > max_depth) {\n            max_depth = depth;\n        }\n    }\n    return max_depth + 1;\n}\nint main() {\n    auto candidate = dict_depth;\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::string>({{\"c\", \"python\"}})}}))) == (2));\n    assert(candidate((std::any({{1, \"Sun\"}, {2, std::map<long,std::map<long,std::string>>({{3, std::any({{4, \"Mon\"}})}})}}))) == (3));\n}\n",
      "timestamp": 1666122559,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpjs4rsbzd.cpp:2:\n/tmp/tmpjs4rsbzd.cpp: In function \u2018int main()\u2019:\n/tmp/tmpjs4rsbzd.cpp:19:198: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   19 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n      |                                                                                                                                                                                                      ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpjs4rsbzd.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpjs4rsbzd.cpp:2:\n/tmp/tmpjs4rsbzd.cpp:19:198: note:   candidate expects at least 2 arguments, 1 provided\n   19 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the depth of a dictionary.\nlong dict_depth(std::any d) {\n    // your code here\n    long depth = 0;\n    if(d.type() == typeid(std::map<std::string, std::any>)){\n        depth++;\n        std::map<std::string, std::any> m = std::any_cast<std::map<std::string, std::any>>(d);\n        for(auto it = m.begin(); it != m.end(); it++){\n            depth = std::max(depth, dict_depth(it->second));\n        }\n    }\n    return depth;\n}\nint main() {\n    auto candidate = dict_depth;\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::string>({{\"c\", \"python\"}})}}))) == (2));\n    assert(candidate((std::any({{1, \"Sun\"}, {2, std::map<long,std::map<long,std::string>>({{3, std::any({{4, \"Mon\"}})}})}}))) == (3));\n}\n",
      "timestamp": 1666122559,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpioat3bad.cpp:2:\n/tmp/tmpioat3bad.cpp: In function \u2018int main()\u2019:\n/tmp/tmpioat3bad.cpp:18:198: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   18 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n      |                                                                                                                                                                                                      ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpioat3bad.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpioat3bad.cpp:2:\n/tmp/tmpioat3bad.cpp:18:198: note:   candidate expects at least 2 arguments, 1 provided\n   18 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the depth of a dictionary.\nlong dict_depth(std::any d) {\n    if(!d.has_value())\n        return 0;\n    if(d.type() != typeid(std::map<std::string, std::any>))\n        return 0;\n    long max_depth = 0;\n    for(auto& [key, value] : std::any_cast<std::map<std::string, std::any>>(d)) {\n        max_depth = std::max(max_depth, dict_depth(value));\n    }\n    return max_depth + 1;\n}\nint main() {\n    auto candidate = dict_depth;\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::string>({{\"c\", \"python\"}})}}))) == (2));\n    assert(candidate((std::any({{1, \"Sun\"}, {2, std::map<long,std::map<long,std::string>>({{3, std::any({{4, \"Mon\"}})}})}}))) == (3));\n}\n",
      "timestamp": 1666122555,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpvcr8nfh5.cpp:2:\n/tmp/tmpvcr8nfh5.cpp: In function \u2018int main()\u2019:\n/tmp/tmpvcr8nfh5.cpp:17:198: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   17 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n      |                                                                                                                                                                                                      ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpvcr8nfh5.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpvcr8nfh5.cpp:2:\n/tmp/tmpvcr8nfh5.cpp:17:198: note:   candidate expects at least 2 arguments, 1 provided\n   17 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the depth of a dictionary.\nlong dict_depth(std::any d) {\n    if(d.type() != typeid(std::map<std::string, std::any>)) {\n        return 0;\n    }\n    std::map<std::string, std::any> m = std::any_cast<std::map<std::string, std::any>>(d);\n    long max_depth = 0;\n    for(auto it = m.begin(); it != m.end(); it++) {\n        long depth = dict_depth(it->second);\n        if(depth > max_depth) {\n            max_depth = depth;\n        }\n    }\n    return max_depth + 1;\n}\nint main() {\n    auto candidate = dict_depth;\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::string>({{\"c\", \"python\"}})}}))) == (2));\n    assert(candidate((std::any({{1, \"Sun\"}, {2, std::map<long,std::map<long,std::string>>({{3, std::any({{4, \"Mon\"}})}})}}))) == (3));\n}\n",
      "timestamp": 1666122555,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp5878pii_.cpp:2:\n/tmp/tmp5878pii_.cpp: In function \u2018int main()\u2019:\n/tmp/tmp5878pii_.cpp:20:198: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   20 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n      |                                                                                                                                                                                                      ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmp5878pii_.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp5878pii_.cpp:2:\n/tmp/tmp5878pii_.cpp:20:198: note:   candidate expects at least 2 arguments, 1 provided\n   20 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the depth of a dictionary.\nlong dict_depth(std::any d) {\n    if (d.type() != typeid(std::map<std::any, std::any>)) {\n        return 0;\n    }\n    long max_depth = 0;\n    for (auto& [key, value] : std::any_cast<std::map<std::any, std::any>>(d)) {\n        max_depth = std::max(max_depth, dict_depth(value));\n    }\n    return max_depth + 1;\n}\nint main() {\n    auto candidate = dict_depth;\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::string>({{\"c\", \"python\"}})}}))) == (2));\n    assert(candidate((std::any({{1, \"Sun\"}, {2, std::map<long,std::map<long,std::string>>({{3, std::any({{4, \"Mon\"}})}})}}))) == (3));\n}\n",
      "timestamp": 1666122559,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpsix_kip1.cpp:2:\n/tmp/tmpsix_kip1.cpp: In function \u2018int main()\u2019:\n/tmp/tmpsix_kip1.cpp:16:198: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   16 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n      |                                                                                                                                                                                                      ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpsix_kip1.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpsix_kip1.cpp:2:\n/tmp/tmpsix_kip1.cpp:16:198: note:   candidate expects at least 2 arguments, 1 provided\n   16 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the depth of a dictionary.\nlong dict_depth(std::any d) {\n    if (d.type() != typeid(std::map<std::string, std::any>)) {\n        return 0;\n    }\n    long max_depth = 0;\n    for (auto& [key, value] : std::any_cast<std::map<std::string, std::any>>(d)) {\n        max_depth = std::max(max_depth, dict_depth(value));\n    }\n    return max_depth + 1;\n}\nint main() {\n    auto candidate = dict_depth;\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::string>({{\"c\", \"python\"}})}}))) == (2));\n    assert(candidate((std::any({{1, \"Sun\"}, {2, std::map<long,std::map<long,std::string>>({{3, std::any({{4, \"Mon\"}})}})}}))) == (3));\n}\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmph4pf0_t3.cpp:2:\n/tmp/tmph4pf0_t3.cpp: In function \u2018int main()\u2019:\n/tmp/tmph4pf0_t3.cpp:16:198: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   16 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n      |                                                                                                                                                                                                      ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmph4pf0_t3.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmph4pf0_t3.cpp:2:\n/tmp/tmph4pf0_t3.cpp:16:198: note:   candidate expects at least 2 arguments, 1 provided\n   16 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the depth of a dictionary.\nlong dict_depth(std::any d) {\n    long depth = 0;\n    if (d.type() == typeid(std::map<std::string, std::any>)) {\n        for (auto &e : std::any_cast<std::map<std::string, std::any>>(d)) {\n            depth = std::max(depth, dict_depth(e.second));\n        }\n        return depth + 1;\n    } else {\n        return 0;\n    }\n}\nint main() {\n    auto candidate = dict_depth;\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::string>({{\"c\", \"python\"}})}}))) == (2));\n    assert(candidate((std::any({{1, \"Sun\"}, {2, std::map<long,std::map<long,std::string>>({{3, std::any({{4, \"Mon\"}})}})}}))) == (3));\n}\n",
      "timestamp": 1666122559,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp6ux5iaer.cpp:2:\n/tmp/tmp6ux5iaer.cpp: In function \u2018int main()\u2019:\n/tmp/tmp6ux5iaer.cpp:17:198: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   17 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n      |                                                                                                                                                                                                      ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmp6ux5iaer.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp6ux5iaer.cpp:2:\n/tmp/tmp6ux5iaer.cpp:17:198: note:   candidate expects at least 2 arguments, 1 provided\n   17 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the depth of a dictionary.\nlong dict_depth(std::any d) {\n    if(d.type() != typeid(std::map<std::string, std::any>)) {\n        return 0;\n    }\n    long max_depth = 0;\n    for(auto& [key, value] : std::any_cast<std::map<std::string, std::any>>(d)) {\n        max_depth = std::max(max_depth, dict_depth(value));\n    }\n    return 1 + max_depth;\n}\nint main() {\n    auto candidate = dict_depth;\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::string>({{\"c\", \"python\"}})}}))) == (2));\n    assert(candidate((std::any({{1, \"Sun\"}, {2, std::map<long,std::map<long,std::string>>({{3, std::any({{4, \"Mon\"}})}})}}))) == (3));\n}\n",
      "timestamp": 1666122559,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp5hff1hm_.cpp:2:\n/tmp/tmp5hff1hm_.cpp: In function \u2018int main()\u2019:\n/tmp/tmp5hff1hm_.cpp:16:198: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   16 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n      |                                                                                                                                                                                                      ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmp5hff1hm_.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp5hff1hm_.cpp:2:\n/tmp/tmp5hff1hm_.cpp:16:198: note:   candidate expects at least 2 arguments, 1 provided\n   16 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the depth of a dictionary.\nlong dict_depth(std::any d) {\n    if (d.type() != typeid(std::map<std::string, std::any>)) {\n        return 0;\n    }\n    long max_depth = 0;\n    for (auto& [key, value] : std::any_cast<std::map<std::string, std::any>>(d)) {\n        max_depth = std::max(max_depth, dict_depth(value));\n    }\n    return max_depth + 1;\n}\nint main() {\n    auto candidate = dict_depth;\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::string>({{\"c\", \"python\"}})}}))) == (2));\n    assert(candidate((std::any({{1, \"Sun\"}, {2, std::map<long,std::map<long,std::string>>({{3, std::any({{4, \"Mon\"}})}})}}))) == (3));\n}\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmph4pf0_t3.cpp:2:\n/tmp/tmph4pf0_t3.cpp: In function \u2018int main()\u2019:\n/tmp/tmph4pf0_t3.cpp:16:198: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   16 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n      |                                                                                                                                                                                                      ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmph4pf0_t3.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmph4pf0_t3.cpp:2:\n/tmp/tmph4pf0_t3.cpp:16:198: note:   candidate expects at least 2 arguments, 1 provided\n   16 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the depth of a dictionary.\nlong dict_depth(std::any d) {\n    long depth = 0;\n    if (d.type() == typeid(std::map<std::string, std::any>)) {\n        for (auto &it : std::any_cast<std::map<std::string, std::any>>(d)) {\n            depth = std::max(depth, dict_depth(it.second));\n        }\n        return depth + 1;\n    }\n    return depth;\n}\nint main() {\n    auto candidate = dict_depth;\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::string>({{\"c\", \"python\"}})}}))) == (2));\n    assert(candidate((std::any({{1, \"Sun\"}, {2, std::map<long,std::map<long,std::string>>({{3, std::any({{4, \"Mon\"}})}})}}))) == (3));\n}\n",
      "timestamp": 1666122553,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpea8kyv9j.cpp:2:\n/tmp/tmpea8kyv9j.cpp: In function \u2018int main()\u2019:\n/tmp/tmpea8kyv9j.cpp:16:198: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   16 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n      |                                                                                                                                                                                                      ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpea8kyv9j.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpea8kyv9j.cpp:2:\n/tmp/tmpea8kyv9j.cpp:16:198: note:   candidate expects at least 2 arguments, 1 provided\n   16 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the depth of a dictionary.\nlong dict_depth(std::any d) {\n    long depth = 0;\n    if (d.type() == typeid(std::map<std::string, std::any>)) {\n        for (auto& it : std::any_cast<std::map<std::string, std::any>>(d)) {\n            depth = std::max(depth, dict_depth(it.second));\n        }\n        return depth + 1;\n    }\n    return 0;\n}\nint main() {\n    auto candidate = dict_depth;\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::string>({{\"c\", \"python\"}})}}))) == (2));\n    assert(candidate((std::any({{1, \"Sun\"}, {2, std::map<long,std::map<long,std::string>>({{3, std::any({{4, \"Mon\"}})}})}}))) == (3));\n}\n",
      "timestamp": 1666122559,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp5yoc0arg.cpp:2:\n/tmp/tmp5yoc0arg.cpp: In function \u2018int main()\u2019:\n/tmp/tmp5yoc0arg.cpp:16:198: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   16 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n      |                                                                                                                                                                                                      ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmp5yoc0arg.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp5yoc0arg.cpp:2:\n/tmp/tmp5yoc0arg.cpp:16:198: note:   candidate expects at least 2 arguments, 1 provided\n   16 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the depth of a dictionary.\nlong dict_depth(std::any d) {\n    // your code here\n    long depth = 0;\n    if(d.type() == typeid(std::map<std::string, std::any>)){\n        std::map<std::string, std::any> m = std::any_cast<std::map<std::string, std::any>>(d);\n        for(auto i = m.begin(); i != m.end(); i++){\n            if(i->second.type() == typeid(std::map<std::string, std::any>)){\n                depth = std::max(depth, dict_depth(i->second));\n            }\n        }\n        return depth + 1;\n    }\n    return depth;\n}\nint main() {\n    auto candidate = dict_depth;\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::string>({{\"c\", \"python\"}})}}))) == (2));\n    assert(candidate((std::any({{1, \"Sun\"}, {2, std::map<long,std::map<long,std::string>>({{3, std::any({{4, \"Mon\"}})}})}}))) == (3));\n}\n",
      "timestamp": 1666122559,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpehf7qz4s.cpp:2:\n/tmp/tmpehf7qz4s.cpp: In function \u2018int main()\u2019:\n/tmp/tmpehf7qz4s.cpp:20:198: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   20 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n      |                                                                                                                                                                                                      ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpehf7qz4s.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpehf7qz4s.cpp:2:\n/tmp/tmpehf7qz4s.cpp:20:198: note:   candidate expects at least 2 arguments, 1 provided\n   20 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the depth of a dictionary.\nlong dict_depth(std::any d) {\n    if (d.type() != typeid(std::map<std::string, std::any>)) {\n        return 0;\n    }\n    long max_depth = 0;\n    for (auto& [key, value] : std::any_cast<std::map<std::string, std::any>>(d)) {\n        max_depth = std::max(max_depth, dict_depth(value));\n    }\n    return max_depth + 1;\n}\nint main() {\n    auto candidate = dict_depth;\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::string>({{\"c\", \"python\"}})}}))) == (2));\n    assert(candidate((std::any({{1, \"Sun\"}, {2, std::map<long,std::map<long,std::string>>({{3, std::any({{4, \"Mon\"}})}})}}))) == (3));\n}\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmph4pf0_t3.cpp:2:\n/tmp/tmph4pf0_t3.cpp: In function \u2018int main()\u2019:\n/tmp/tmph4pf0_t3.cpp:16:198: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   16 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n      |                                                                                                                                                                                                      ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmph4pf0_t3.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmph4pf0_t3.cpp:2:\n/tmp/tmph4pf0_t3.cpp:16:198: note:   candidate expects at least 2 arguments, 1 provided\n   16 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the depth of a dictionary.\nlong dict_depth(std::any d) {\n    if (d.type() != typeid(std::map<std::string, std::any>)) {\n        return 0;\n    }\n    long max_depth = 0;\n    for (auto& [key, value] : std::any_cast<std::map<std::string, std::any>>(d)) {\n        max_depth = std::max(max_depth, dict_depth(value));\n    }\n    return max_depth + 1;\n}\nint main() {\n    auto candidate = dict_depth;\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::string>({{\"c\", \"python\"}})}}))) == (2));\n    assert(candidate((std::any({{1, \"Sun\"}, {2, std::map<long,std::map<long,std::string>>({{3, std::any({{4, \"Mon\"}})}})}}))) == (3));\n}\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmph4pf0_t3.cpp:2:\n/tmp/tmph4pf0_t3.cpp: In function \u2018int main()\u2019:\n/tmp/tmph4pf0_t3.cpp:16:198: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   16 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n      |                                                                                                                                                                                                      ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmph4pf0_t3.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmph4pf0_t3.cpp:2:\n/tmp/tmph4pf0_t3.cpp:16:198: note:   candidate expects at least 2 arguments, 1 provided\n   16 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the depth of a dictionary.\nlong dict_depth(std::any d) {\n    // your code here\n    return 0;\n}\nint main() {\n    auto candidate = dict_depth;\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::string>({{\"c\", \"python\"}})}}))) == (2));\n    assert(candidate((std::any({{1, \"Sun\"}, {2, std::map<long,std::map<long,std::string>>({{3, std::any({{4, \"Mon\"}})}})}}))) == (3));\n}\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpl36vmk5j.cpp:2:\n/tmp/tmpl36vmk5j.cpp: In function \u2018int main()\u2019:\n/tmp/tmpl36vmk5j.cpp:10:198: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   10 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n      |                                                                                                                                                                                                      ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpl36vmk5j.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpl36vmk5j.cpp:2:\n/tmp/tmpl36vmk5j.cpp:10:198: note:   candidate expects at least 2 arguments, 1 provided\n   10 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the depth of a dictionary.\nlong dict_depth(std::any d) {\n    if (d.type() != typeid(std::map<std::string, std::any>)) {\n        return 0;\n    }\n    long max_depth = 0;\n    for (auto& [key, value] : std::any_cast<std::map<std::string, std::any>>(d)) {\n        max_depth = std::max(max_depth, dict_depth(value));\n    }\n    return max_depth + 1;\n}\nint main() {\n    auto candidate = dict_depth;\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::string>({{\"c\", \"python\"}})}}))) == (2));\n    assert(candidate((std::any({{1, \"Sun\"}, {2, std::map<long,std::map<long,std::string>>({{3, std::any({{4, \"Mon\"}})}})}}))) == (3));\n}\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmph4pf0_t3.cpp:2:\n/tmp/tmph4pf0_t3.cpp: In function \u2018int main()\u2019:\n/tmp/tmph4pf0_t3.cpp:16:198: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   16 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n      |                                                                                                                                                                                                      ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmph4pf0_t3.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmph4pf0_t3.cpp:2:\n/tmp/tmph4pf0_t3.cpp:16:198: note:   candidate expects at least 2 arguments, 1 provided\n   16 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the depth of a dictionary.\nlong dict_depth(std::any d) {\n    long depth = 0;\n    if (d.type() == typeid(std::map<std::string, std::any>)) {\n        for (auto& [key, val] : std::any_cast<std::map<std::string, std::any>>(d)) {\n            depth = std::max(depth, dict_depth(val));\n        }\n        return depth + 1;\n    }\n    return depth;\n}\nint main() {\n    auto candidate = dict_depth;\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::string>({{\"c\", \"python\"}})}}))) == (2));\n    assert(candidate((std::any({{1, \"Sun\"}, {2, std::map<long,std::map<long,std::string>>({{3, std::any({{4, \"Mon\"}})}})}}))) == (3));\n}\n",
      "timestamp": 1666122559,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp68sx3luj.cpp:2:\n/tmp/tmp68sx3luj.cpp: In function \u2018int main()\u2019:\n/tmp/tmp68sx3luj.cpp:16:198: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   16 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n      |                                                                                                                                                                                                      ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmp68sx3luj.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp68sx3luj.cpp:2:\n/tmp/tmp68sx3luj.cpp:16:198: note:   candidate expects at least 2 arguments, 1 provided\n   16 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the depth of a dictionary.\nlong dict_depth(std::any d) {\n    long depth = 0;\n    if (d.type() == typeid(std::map<std::string, std::any>)) {\n        std::map<std::string, std::any> m = std::any_cast<std::map<std::string, std::any>>(d);\n        for (auto it = m.begin(); it != m.end(); it++) {\n            depth = std::max(depth, dict_depth(it->second));\n        }\n        return depth + 1;\n    }\n    return depth;\n}\nint main() {\n    auto candidate = dict_depth;\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::string>({{\"c\", \"python\"}})}}))) == (2));\n    assert(candidate((std::any({{1, \"Sun\"}, {2, std::map<long,std::map<long,std::string>>({{3, std::any({{4, \"Mon\"}})}})}}))) == (3));\n}\n",
      "timestamp": 1666122559,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpkjsmdkoy.cpp:2:\n/tmp/tmpkjsmdkoy.cpp: In function \u2018int main()\u2019:\n/tmp/tmpkjsmdkoy.cpp:17:198: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   17 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n      |                                                                                                                                                                                                      ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpkjsmdkoy.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpkjsmdkoy.cpp:2:\n/tmp/tmpkjsmdkoy.cpp:17:198: note:   candidate expects at least 2 arguments, 1 provided\n   17 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the depth of a dictionary.\nlong dict_depth(std::any d) {\n    if (d.type() != typeid(std::map<std::string, std::any>)) {\n        return 0;\n    }\n    long max_depth = 0;\n    for (auto& [key, value] : std::any_cast<std::map<std::string, std::any>>(d)) {\n        max_depth = std::max(max_depth, dict_depth(value));\n    }\n    return max_depth + 1;\n}\nint main() {\n    auto candidate = dict_depth;\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::string>({{\"c\", \"python\"}})}}))) == (2));\n    assert(candidate((std::any({{1, \"Sun\"}, {2, std::map<long,std::map<long,std::string>>({{3, std::any({{4, \"Mon\"}})}})}}))) == (3));\n}\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmph4pf0_t3.cpp:2:\n/tmp/tmph4pf0_t3.cpp: In function \u2018int main()\u2019:\n/tmp/tmph4pf0_t3.cpp:16:198: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   16 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n      |                                                                                                                                                                                                      ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmph4pf0_t3.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmph4pf0_t3.cpp:2:\n/tmp/tmph4pf0_t3.cpp:16:198: note:   candidate expects at least 2 arguments, 1 provided\n   16 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the depth of a dictionary.\nlong dict_depth(std::any d) {\n    // your code here\n    long depth = 0;\n    if(d.type() == typeid(std::map<std::string, std::any>)){\n        std::map<std::string, std::any> m = std::any_cast<std::map<std::string, std::any>>(d);\n        for(auto it = m.begin(); it != m.end(); it++){\n            if(it->second.type() == typeid(std::map<std::string, std::any>)){\n                depth = std::max(depth, dict_depth(it->second));\n            }\n        }\n        return depth + 1;\n    }\n    return depth;\n}\nint main() {\n    auto candidate = dict_depth;\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::string>({{\"c\", \"python\"}})}}))) == (2));\n    assert(candidate((std::any({{1, \"Sun\"}, {2, std::map<long,std::map<long,std::string>>({{3, std::any({{4, \"Mon\"}})}})}}))) == (3));\n}\n",
      "timestamp": 1666122559,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmppsvwzxfw.cpp:2:\n/tmp/tmppsvwzxfw.cpp: In function \u2018int main()\u2019:\n/tmp/tmppsvwzxfw.cpp:20:198: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   20 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n      |                                                                                                                                                                                                      ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmppsvwzxfw.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmppsvwzxfw.cpp:2:\n/tmp/tmppsvwzxfw.cpp:20:198: note:   candidate expects at least 2 arguments, 1 provided\n   20 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the depth of a dictionary.\nlong dict_depth(std::any d) {\n    if(d.type() == typeid(std::map<std::string, std::any>)){\n        long max_depth = 0;\n        for(auto& [key, value] : std::any_cast<std::map<std::string, std::any>>(d)){\n            max_depth = std::max(max_depth, dict_depth(value));\n        }\n        return max_depth + 1;\n    }\n    return 0;\n}\nint main() {\n    auto candidate = dict_depth;\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::string>({{\"c\", \"python\"}})}}))) == (2));\n    assert(candidate((std::any({{1, \"Sun\"}, {2, std::map<long,std::map<long,std::string>>({{3, std::any({{4, \"Mon\"}})}})}}))) == (3));\n}\n",
      "timestamp": 1666122559,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpo6adrqlc.cpp:2:\n/tmp/tmpo6adrqlc.cpp: In function \u2018int main()\u2019:\n/tmp/tmpo6adrqlc.cpp:16:198: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   16 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n      |                                                                                                                                                                                                      ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpo6adrqlc.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpo6adrqlc.cpp:2:\n/tmp/tmpo6adrqlc.cpp:16:198: note:   candidate expects at least 2 arguments, 1 provided\n   16 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the depth of a dictionary.\nlong dict_depth(std::any d) {\n    if(d.type() != typeid(std::map<std::string, std::any>)) {\n        return 0;\n    }\n    long max_depth = 0;\n    for(auto const& [key, value] : std::any_cast<std::map<std::string, std::any>>(d)) {\n        max_depth = std::max(max_depth, dict_depth(value));\n    }\n    return max_depth + 1;\n}\nint main() {\n    auto candidate = dict_depth;\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::string>({{\"c\", \"python\"}})}}))) == (2));\n    assert(candidate((std::any({{1, \"Sun\"}, {2, std::map<long,std::map<long,std::string>>({{3, std::any({{4, \"Mon\"}})}})}}))) == (3));\n}\n",
      "timestamp": 1666122559,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpzg5ndcqm.cpp:2:\n/tmp/tmpzg5ndcqm.cpp: In function \u2018int main()\u2019:\n/tmp/tmpzg5ndcqm.cpp:16:198: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   16 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n      |                                                                                                                                                                                                      ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpzg5ndcqm.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpzg5ndcqm.cpp:2:\n/tmp/tmpzg5ndcqm.cpp:16:198: note:   candidate expects at least 2 arguments, 1 provided\n   16 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the depth of a dictionary.\nlong dict_depth(std::any d) {\n    long depth = 0;\n    if (d.type() == typeid(std::map<std::string, std::any>)) {\n        for (auto &[key, val] : std::any_cast<std::map<std::string, std::any>>(d)) {\n            depth = std::max(depth, dict_depth(val));\n        }\n        return depth + 1;\n    }\n    return depth;\n}\nint main() {\n    auto candidate = dict_depth;\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::string>({{\"c\", \"python\"}})}}))) == (2));\n    assert(candidate((std::any({{1, \"Sun\"}, {2, std::map<long,std::map<long,std::string>>({{3, std::any({{4, \"Mon\"}})}})}}))) == (3));\n}\n",
      "timestamp": 1666122559,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpq_wttfn3.cpp:2:\n/tmp/tmpq_wttfn3.cpp: In function \u2018int main()\u2019:\n/tmp/tmpq_wttfn3.cpp:16:198: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   16 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n      |                                                                                                                                                                                                      ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpq_wttfn3.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpq_wttfn3.cpp:2:\n/tmp/tmpq_wttfn3.cpp:16:198: note:   candidate expects at least 2 arguments, 1 provided\n   16 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the depth of a dictionary.\nlong dict_depth(std::any d) {\n    long max_depth = 0;\n    if(d.type() == typeid(std::map<std::string, std::any>)) {\n        for(auto &it : std::any_cast<std::map<std::string, std::any>>(d)) {\n            max_depth = std::max(max_depth, dict_depth(it.second));\n        }\n        return max_depth + 1;\n    }\n    return 0;\n}\nint main() {\n    auto candidate = dict_depth;\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::string>({{\"c\", \"python\"}})}}))) == (2));\n    assert(candidate((std::any({{1, \"Sun\"}, {2, std::map<long,std::map<long,std::string>>({{3, std::any({{4, \"Mon\"}})}})}}))) == (3));\n}\n",
      "timestamp": 1666122559,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpjkszpdqa.cpp:2:\n/tmp/tmpjkszpdqa.cpp: In function \u2018int main()\u2019:\n/tmp/tmpjkszpdqa.cpp:16:198: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   16 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n      |                                                                                                                                                                                                      ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpjkszpdqa.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpjkszpdqa.cpp:2:\n/tmp/tmpjkszpdqa.cpp:16:198: note:   candidate expects at least 2 arguments, 1 provided\n   16 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the depth of a dictionary.\nlong dict_depth(std::any d) {\n    if(d.type() == typeid(std::map<std::string, std::any>)) {\n        long max_depth = 0;\n        for(auto& [key, value] : std::any_cast<std::map<std::string, std::any>>(d)) {\n            max_depth = std::max(max_depth, dict_depth(value));\n        }\n        return max_depth + 1;\n    }\n    return 0;\n}\nint main() {\n    auto candidate = dict_depth;\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::string>({{\"c\", \"python\"}})}}))) == (2));\n    assert(candidate((std::any({{1, \"Sun\"}, {2, std::map<long,std::map<long,std::string>>({{3, std::any({{4, \"Mon\"}})}})}}))) == (3));\n}\n",
      "timestamp": 1666122553,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpm85kq6bv.cpp:2:\n/tmp/tmpm85kq6bv.cpp: In function \u2018int main()\u2019:\n/tmp/tmpm85kq6bv.cpp:16:198: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   16 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n      |                                                                                                                                                                                                      ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpm85kq6bv.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpm85kq6bv.cpp:2:\n/tmp/tmpm85kq6bv.cpp:16:198: note:   candidate expects at least 2 arguments, 1 provided\n   16 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the depth of a dictionary.\nlong dict_depth(std::any d) {\n    if (d.type() != typeid(std::map<std::any, std::any>)) {\n        return 0;\n    }\n    long max_depth = 0;\n    for (auto& [key, value] : std::any_cast<std::map<std::any, std::any>>(d)) {\n        max_depth = std::max(max_depth, dict_depth(value));\n    }\n    return max_depth + 1;\n}\nint main() {\n    auto candidate = dict_depth;\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::string>({{\"c\", \"python\"}})}}))) == (2));\n    assert(candidate((std::any({{1, \"Sun\"}, {2, std::map<long,std::map<long,std::string>>({{3, std::any({{4, \"Mon\"}})}})}}))) == (3));\n}\n",
      "timestamp": 1666122559,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpsix_kip1.cpp:2:\n/tmp/tmpsix_kip1.cpp: In function \u2018int main()\u2019:\n/tmp/tmpsix_kip1.cpp:16:198: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   16 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n      |                                                                                                                                                                                                      ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpsix_kip1.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpsix_kip1.cpp:2:\n/tmp/tmpsix_kip1.cpp:16:198: note:   candidate expects at least 2 arguments, 1 provided\n   16 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the depth of a dictionary.\nlong dict_depth(std::any d) {\n    if(d.type() != typeid(std::map<std::string, std::any>)) {\n        return 0;\n    }\n    long max_depth = 0;\n    for(auto& [key, value] : std::any_cast<std::map<std::string, std::any>>(d)) {\n        max_depth = std::max(max_depth, dict_depth(value));\n    }\n    return max_depth + 1;\n}\nint main() {\n    auto candidate = dict_depth;\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::string>({{\"c\", \"python\"}})}}))) == (2));\n    assert(candidate((std::any({{1, \"Sun\"}, {2, std::map<long,std::map<long,std::string>>({{3, std::any({{4, \"Mon\"}})}})}}))) == (3));\n}\n",
      "timestamp": 1666122553,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpefum7me3.cpp:2:\n/tmp/tmpefum7me3.cpp: In function \u2018int main()\u2019:\n/tmp/tmpefum7me3.cpp:16:198: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   16 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n      |                                                                                                                                                                                                      ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpefum7me3.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpefum7me3.cpp:2:\n/tmp/tmpefum7me3.cpp:16:198: note:   candidate expects at least 2 arguments, 1 provided\n   16 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the depth of a dictionary.\nlong dict_depth(std::any d) {\n    if(!d.has_value())\n        return 0;\n    if(d.type() == typeid(std::string))\n        return 1;\n    long max_depth = 0;\n    for(auto& [k, v] : std::any_cast<std::map<std::string, std::any>>(d)) {\n        max_depth = std::max(max_depth, dict_depth(v));\n    }\n    return max_depth + 1;\n}\nint main() {\n    auto candidate = dict_depth;\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::string>({{\"c\", \"python\"}})}}))) == (2));\n    assert(candidate((std::any({{1, \"Sun\"}, {2, std::map<long,std::map<long,std::string>>({{3, std::any({{4, \"Mon\"}})}})}}))) == (3));\n}\n",
      "timestamp": 1666122559,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpqsrlzf15.cpp:2:\n/tmp/tmpqsrlzf15.cpp: In function \u2018int main()\u2019:\n/tmp/tmpqsrlzf15.cpp:17:198: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   17 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n      |                                                                                                                                                                                                      ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpqsrlzf15.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpqsrlzf15.cpp:2:\n/tmp/tmpqsrlzf15.cpp:17:198: note:   candidate expects at least 2 arguments, 1 provided\n   17 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the depth of a dictionary.\nlong dict_depth(std::any d) {\n    // your code here\n    long depth = 0;\n    std::any value;\n    std::any key;\n    std::any dict;\n    std::any dict_value;\n    std::any dict_key;\n    std::any dict_dict;\n    std::any dict_dict_value;\n    std::any dict_dict_key;\n    std::any dict_dict_dict;\n    std::any dict_dict_dict_value;\n    std::any dict_dict_dict_key;\n    std::any dict_dict_dict_dict;\n    std::any dict_dict_dict_dict_value;\n    std::any dict_dict_dict_dict_key;\n    std::any dict_dict_dict_dict_dict;\n    std::any dict_dict_dict_dict_dict_value;\n    std::any dict_dict_dict_dict_dict_key;\n    std::any dict_dict_dict_dict_dict_dict;\n    std::any dict_dict_dict_dict_dict_dict_value;\n    std::any dict_dict_dict_dict_dict_dict_key;\n    std::any dict_dict_dict_dict_dict_dict_dict;\n    std::any dict_dict_dict_dict_dict_dict_dict_value;\n    std::any dict_dict_dict_dict_dict_dict_dict_key;\n    std::any dict_dict_dict_dict_dict_dict_dict_dict;\n    std::any dict_dict_dict_dict_dict_dict_dict_dict_value;\n    std::any dict_dict_dict_dict_dict_dict_dict_dict_key;\n    std::any dict_dict_dict_dict_dict_dict_dict_dict_dict;\n    std::any dict_dict_dict_dict_dict_dict_dict_dict_dict_value;\n    std::any dict_dict_dict_dict_dict_dict_dict_dict_dict_key;\n    std::any dict_dict_dict_dict_dict_dict_dict_dict_dict_dict;\n    std::any dict_dict_dict_dict_dict_dict_dict_\n}\nint main() {\n    auto candidate = dict_depth;\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::string>({{\"c\", \"python\"}})}}))) == (2));\n    assert(candidate((std::any({{1, \"Sun\"}, {2, std::map<long,std::map<long,std::string>>({{3, std::any({{4, \"Mon\"}})}})}}))) == (3));\n}\n",
      "timestamp": 1666122559,
      "stdout": "",
      "stderr": "/tmp/tmpgklwnvor.cpp: In function \u2018long int dict_depth(std::any)\u2019:\n/tmp/tmpgklwnvor.cpp:38:1: error: expected initializer before \u2018}\u2019 token\n   38 | }\n      | ^\n/tmp/tmpgklwnvor.cpp:38:1: warning: no return statement in function returning non-void [-Wreturn-type]\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpgklwnvor.cpp:2:\n/tmp/tmpgklwnvor.cpp: In function \u2018int main()\u2019:\n/tmp/tmpgklwnvor.cpp:41:198: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   41 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n      |                                                                                                                                                                                                      ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpgklwnvor.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the depth of a dictionary.\nlong dict_depth(std::any d) {\n    if (d.type() != typeid(std::map<std::string, std::any>)) {\n        return 0;\n    }\n    std::map<std::string, std::any> m = std::any_cast<std::map<std::string, std::any>>(d);\n    long max_depth = 0;\n    for (auto it = m.begin(); it != m.end(); ++it) {\n        max_depth = std::max(max_depth, dict_depth(it->second));\n    }\n    return max_depth + 1;\n}\nint main() {\n    auto candidate = dict_depth;\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::string>({{\"c\", \"python\"}})}}))) == (2));\n    assert(candidate((std::any({{1, \"Sun\"}, {2, std::map<long,std::map<long,std::string>>({{3, std::any({{4, \"Mon\"}})}})}}))) == (3));\n}\n",
      "timestamp": 1666122559,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpdeol1lf5.cpp:2:\n/tmp/tmpdeol1lf5.cpp: In function \u2018int main()\u2019:\n/tmp/tmpdeol1lf5.cpp:17:198: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   17 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n      |                                                                                                                                                                                                      ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpdeol1lf5.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpdeol1lf5.cpp:2:\n/tmp/tmpdeol1lf5.cpp:17:198: note:   candidate expects at least 2 arguments, 1 provided\n   17 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the depth of a dictionary.\nlong dict_depth(std::any d) {\n    if(d.type() != typeid(std::map<std::string, std::any>)) {\n        return 0;\n    }\n    long max_depth = 0;\n    for(auto& [key, value] : std::any_cast<std::map<std::string, std::any>>(d)) {\n        max_depth = std::max(max_depth, dict_depth(value));\n    }\n    return max_depth + 1;\n}\nint main() {\n    auto candidate = dict_depth;\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::string>({{\"c\", \"python\"}})}}))) == (2));\n    assert(candidate((std::any({{1, \"Sun\"}, {2, std::map<long,std::map<long,std::string>>({{3, std::any({{4, \"Mon\"}})}})}}))) == (3));\n}\n",
      "timestamp": 1666122553,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpefum7me3.cpp:2:\n/tmp/tmpefum7me3.cpp: In function \u2018int main()\u2019:\n/tmp/tmpefum7me3.cpp:16:198: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   16 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n      |                                                                                                                                                                                                      ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpefum7me3.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpefum7me3.cpp:2:\n/tmp/tmpefum7me3.cpp:16:198: note:   candidate expects at least 2 arguments, 1 provided\n   16 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the depth of a dictionary.\nlong dict_depth(std::any d) {\n    if (d.type() != typeid(std::map<std::string, std::any>)) {\n        return 0;\n    }\n    long max_depth = 0;\n    for (auto& [key, value] : std::any_cast<std::map<std::string, std::any>>(d)) {\n        max_depth = std::max(max_depth, dict_depth(value));\n    }\n    return max_depth + 1;\n}\nint main() {\n    auto candidate = dict_depth;\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::string>({{\"c\", \"python\"}})}}))) == (2));\n    assert(candidate((std::any({{1, \"Sun\"}, {2, std::map<long,std::map<long,std::string>>({{3, std::any({{4, \"Mon\"}})}})}}))) == (3));\n}\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmph4pf0_t3.cpp:2:\n/tmp/tmph4pf0_t3.cpp: In function \u2018int main()\u2019:\n/tmp/tmph4pf0_t3.cpp:16:198: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   16 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n      |                                                                                                                                                                                                      ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmph4pf0_t3.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmph4pf0_t3.cpp:2:\n/tmp/tmph4pf0_t3.cpp:16:198: note:   candidate expects at least 2 arguments, 1 provided\n   16 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the depth of a dictionary.\nlong dict_depth(std::any d) {\n    long max_depth = 0;\n    std::queue<std::pair<std::any, long>> q;\n    q.push(std::make_pair(d, 1));\n    while (!q.empty()) {\n        auto p = q.front();\n        q.pop();\n        auto dict = std::any_cast<std::map<std::string, std::any>>(p.first);\n        for (auto it = dict.begin(); it != dict.end(); ++it) {\n            if (it->second.type() == typeid(std::map<std::string, std::any>)) {\n                q.push(std::make_pair(it->second, p.second + 1));\n            }\n        }\n        max_depth = std::max(max_depth, p.second);\n    }\n    return max_depth;\n}\nint main() {\n    auto candidate = dict_depth;\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::string>({{\"c\", \"python\"}})}}))) == (2));\n    assert(candidate((std::any({{1, \"Sun\"}, {2, std::map<long,std::map<long,std::string>>({{3, std::any({{4, \"Mon\"}})}})}}))) == (3));\n}\n",
      "timestamp": 1666122559,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpbryaab1o.cpp:2:\n/tmp/tmpbryaab1o.cpp: In function \u2018int main()\u2019:\n/tmp/tmpbryaab1o.cpp:23:198: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   23 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n      |                                                                                                                                                                                                      ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpbryaab1o.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpbryaab1o.cpp:2:\n/tmp/tmpbryaab1o.cpp:23:198: note:   candidate expects at least 2 arguments, 1 provided\n   23 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the depth of a dictionary.\nlong dict_depth(std::any d) {\n    long depth = 0;\n    if (d.type() == typeid(std::map<std::string, std::any>)) {\n        for (auto &it : std::any_cast<std::map<std::string, std::any>>(d)) {\n            depth = std::max(depth, dict_depth(it.second));\n        }\n        return depth + 1;\n    }\n    return depth;\n}\nint main() {\n    auto candidate = dict_depth;\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::string>({{\"c\", \"python\"}})}}))) == (2));\n    assert(candidate((std::any({{1, \"Sun\"}, {2, std::map<long,std::map<long,std::string>>({{3, std::any({{4, \"Mon\"}})}})}}))) == (3));\n}\n",
      "timestamp": 1666122553,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpea8kyv9j.cpp:2:\n/tmp/tmpea8kyv9j.cpp: In function \u2018int main()\u2019:\n/tmp/tmpea8kyv9j.cpp:16:198: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   16 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n      |                                                                                                                                                                                                      ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpea8kyv9j.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpea8kyv9j.cpp:2:\n/tmp/tmpea8kyv9j.cpp:16:198: note:   candidate expects at least 2 arguments, 1 provided\n   16 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the depth of a dictionary.\nlong dict_depth(std::any d) {\n    if (!d.has_value()) {\n        return 0;\n    }\n    if (d.type() != typeid(std::map<std::string, std::any>)) {\n        throw std::invalid_argument(\"Not a dictionary\");\n    }\n    auto dict = std::any_cast<std::map<std::string, std::any>>(d);\n    long max_depth = 0;\n    for (auto& [key, value] : dict) {\n        long depth = dict_depth(value);\n        if (depth > max_depth) {\n            max_depth = depth;\n        }\n    }\n    return max_depth + 1;\n}\nint main() {\n    auto candidate = dict_depth;\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::string>({{\"c\", \"python\"}})}}))) == (2));\n    assert(candidate((std::any({{1, \"Sun\"}, {2, std::map<long,std::map<long,std::string>>({{3, std::any({{4, \"Mon\"}})}})}}))) == (3));\n}\n",
      "timestamp": 1666122561,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmprl0cacbc.cpp:2:\n/tmp/tmprl0cacbc.cpp: In function \u2018int main()\u2019:\n/tmp/tmprl0cacbc.cpp:23:198: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   23 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n      |                                                                                                                                                                                                      ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmprl0cacbc.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmprl0cacbc.cpp:2:\n/tmp/tmprl0cacbc.cpp:23:198: note:   candidate expects at least 2 arguments, 1 provided\n   23 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the depth of a dictionary.\nlong dict_depth(std::any d) {\n    long depth = 0;\n    if (d.type() == typeid(std::map<std::string, std::any>)) {\n        for (auto &[key, value] : std::any_cast<std::map<std::string, std::any>>(d)) {\n            depth = std::max(depth, dict_depth(value));\n        }\n        return depth + 1;\n    }\n    return 0;\n}\nint main() {\n    auto candidate = dict_depth;\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::string>({{\"c\", \"python\"}})}}))) == (2));\n    assert(candidate((std::any({{1, \"Sun\"}, {2, std::map<long,std::map<long,std::string>>({{3, std::any({{4, \"Mon\"}})}})}}))) == (3));\n}\n",
      "timestamp": 1666122561,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpuxpj7b5l.cpp:2:\n/tmp/tmpuxpj7b5l.cpp: In function \u2018int main()\u2019:\n/tmp/tmpuxpj7b5l.cpp:16:198: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   16 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n      |                                                                                                                                                                                                      ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpuxpj7b5l.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpuxpj7b5l.cpp:2:\n/tmp/tmpuxpj7b5l.cpp:16:198: note:   candidate expects at least 2 arguments, 1 provided\n   16 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the depth of a dictionary.\nlong dict_depth(std::any d) {\n    long max_depth = 1;\n    for (auto &[key, value] : d) {\n        if (value.type() == typeid(std::map<std::string, std::any>)) {\n            max_depth = std::max(max_depth, 1 + dict_depth(value));\n        }\n    }\n    return max_depth;\n}\nint main() {\n    auto candidate = dict_depth;\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::string>({{\"c\", \"python\"}})}}))) == (2));\n    assert(candidate((std::any({{1, \"Sun\"}, {2, std::map<long,std::map<long,std::string>>({{3, std::any({{4, \"Mon\"}})}})}}))) == (3));\n}\n",
      "timestamp": 1666122560,
      "stdout": "",
      "stderr": "/tmp/tmpezdhfs57.cpp: In function \u2018long int dict_depth(std::any)\u2019:\n/tmp/tmpezdhfs57.cpp:6:31: error: no matching function for call to \u2018begin(std::any&)\u2019\n    6 |     for (auto &[key, value] : d) {\n      |                               ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/range_access.h:36,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/string:54,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/locale_classes.h:40,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/ios_base.h:41,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ios:42,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/istream:38,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/sstream:38,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/complex:45,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ccomplex:39,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:54,\n                 from /tmp/tmpezdhfs57.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/initializer_list:89:5: note: candidate: \u2018template<class _Tp> constexpr const _Tp* std::begin(std::initializer_list<_Tp>)\u2019\n   89 |     begin(initializer_list<_Tp> __ils) noexcept\n      |     ^~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/initializer_list:89:5: note:   template argument deduction/substitution failed:\n/tmp/tmpezdhfs57.cpp:6:31: note:   \u2018std::any\u2019 is not derived from \u2018std::initializer_list<_Tp>\u2019\n    6 |     for (auto &[key, value] : d) {\n      |                               ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/string:54,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/locale_classes.h:40,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/ios_base",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the depth of a dictionary.\nlong dict_depth(std::any d) {\n    long depth = 0;\n    if (d.type() == typeid(std::map<std::string, std::any>)) {\n        for (auto &it : std::any_cast<std::map<std::string, std::any>>(d)) {\n            depth = std::max(depth, dict_depth(it.second));\n        }\n        return depth + 1;\n    }\n    return depth;\n}\nint main() {\n    auto candidate = dict_depth;\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::string>({{\"c\", \"python\"}})}}))) == (2));\n    assert(candidate((std::any({{1, \"Sun\"}, {2, std::map<long,std::map<long,std::string>>({{3, std::any({{4, \"Mon\"}})}})}}))) == (3));\n}\n",
      "timestamp": 1666122553,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpea8kyv9j.cpp:2:\n/tmp/tmpea8kyv9j.cpp: In function \u2018int main()\u2019:\n/tmp/tmpea8kyv9j.cpp:16:198: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   16 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n      |                                                                                                                                                                                                      ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpea8kyv9j.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpea8kyv9j.cpp:2:\n/tmp/tmpea8kyv9j.cpp:16:198: note:   candidate expects at least 2 arguments, 1 provided\n   16 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the depth of a dictionary.\nlong dict_depth(std::any d) {\n    // your code here\n    if(d.type() == typeid(std::map<std::string, std::any>)){\n        std::map<std::string, std::any> m = std::any_cast<std::map<std::string, std::any>>(d);\n        long max = 0;\n        for(auto it = m.begin(); it != m.end(); it++){\n            long temp = dict_depth(it->second);\n            if(temp > max)\n                max = temp;\n        }\n        return max + 1;\n    }\n    else\n        return 0;\n}\nint main() {\n    auto candidate = dict_depth;\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::string>({{\"c\", \"python\"}})}}))) == (2));\n    assert(candidate((std::any({{1, \"Sun\"}, {2, std::map<long,std::map<long,std::string>>({{3, std::any({{4, \"Mon\"}})}})}}))) == (3));\n}\n",
      "timestamp": 1666122561,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpo72mrjyx.cpp:2:\n/tmp/tmpo72mrjyx.cpp: In function \u2018int main()\u2019:\n/tmp/tmpo72mrjyx.cpp:21:198: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   21 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n      |                                                                                                                                                                                                      ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpo72mrjyx.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpo72mrjyx.cpp:2:\n/tmp/tmpo72mrjyx.cpp:21:198: note:   candidate expects at least 2 arguments, 1 provided\n   21 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the depth of a dictionary.\nlong dict_depth(std::any d) {\n    // your code here\n    long depth = 0;\n    if(d.type() == typeid(std::map<std::string, std::any>)){\n        depth++;\n        std::map<std::string, std::any> d1 = std::any_cast<std::map<std::string, std::any>>(d);\n        for(auto i : d1){\n            depth = std::max(depth, dict_depth(i.second));\n        }\n    }\n    return depth;\n}\nint main() {\n    auto candidate = dict_depth;\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::string>({{\"c\", \"python\"}})}}))) == (2));\n    assert(candidate((std::any({{1, \"Sun\"}, {2, std::map<long,std::map<long,std::string>>({{3, std::any({{4, \"Mon\"}})}})}}))) == (3));\n}\n",
      "timestamp": 1666122561,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpajj59n6a.cpp:2:\n/tmp/tmpajj59n6a.cpp: In function \u2018int main()\u2019:\n/tmp/tmpajj59n6a.cpp:18:198: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   18 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n      |                                                                                                                                                                                                      ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpajj59n6a.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpajj59n6a.cpp:2:\n/tmp/tmpajj59n6a.cpp:18:198: note:   candidate expects at least 2 arguments, 1 provided\n   18 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the depth of a dictionary.\nlong dict_depth(std::any d) {\n    if (!d.has_value()) {\n        return 0;\n    }\n    if (d.type() == typeid(std::map<std::string, std::any>)) {\n        std::map<std::string, std::any> m = std::any_cast<std::map<std::string, std::any>>(d);\n        long max_depth = 0;\n        for (auto it = m.begin(); it != m.end(); ++it) {\n            max_depth = std::max(max_depth, dict_depth(it->second));\n        }\n        return 1 + max_depth;\n    }\n    return 0;\n}\nint main() {\n    auto candidate = dict_depth;\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::string>({{\"c\", \"python\"}})}}))) == (2));\n    assert(candidate((std::any({{1, \"Sun\"}, {2, std::map<long,std::map<long,std::string>>({{3, std::any({{4, \"Mon\"}})}})}}))) == (3));\n}\n",
      "timestamp": 1666122561,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp26jkjn7e.cpp:2:\n/tmp/tmp26jkjn7e.cpp: In function \u2018int main()\u2019:\n/tmp/tmp26jkjn7e.cpp:20:198: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   20 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n      |                                                                                                                                                                                                      ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmp26jkjn7e.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp26jkjn7e.cpp:2:\n/tmp/tmp26jkjn7e.cpp:20:198: note:   candidate expects at least 2 arguments, 1 provided\n   20 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the depth of a dictionary.\nlong dict_depth(std::any d) {\n    if(d.type() != typeid(std::map<std::string, std::any>))\n        return 0;\n    std::map<std::string, std::any> m = std::any_cast<std::map<std::string, std::any>>(d);\n    long max_depth = 0;\n    for(auto it = m.begin(); it != m.end(); it++) {\n        long depth = dict_depth(it->second);\n        if(depth > max_depth)\n            max_depth = depth;\n    }\n    return max_depth + 1;\n}\nint main() {\n    auto candidate = dict_depth;\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::string>({{\"c\", \"python\"}})}}))) == (2));\n    assert(candidate((std::any({{1, \"Sun\"}, {2, std::map<long,std::map<long,std::string>>({{3, std::any({{4, \"Mon\"}})}})}}))) == (3));\n}\n",
      "timestamp": 1666122555,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpu0lbua67.cpp:2:\n/tmp/tmpu0lbua67.cpp: In function \u2018int main()\u2019:\n/tmp/tmpu0lbua67.cpp:18:198: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   18 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n      |                                                                                                                                                                                                      ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpu0lbua67.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpu0lbua67.cpp:2:\n/tmp/tmpu0lbua67.cpp:18:198: note:   candidate expects at least 2 arguments, 1 provided\n   18 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the depth of a dictionary.\nlong dict_depth(std::any d) {\n    // your code here\n    long depth = 0;\n    if(d.type() == typeid(std::map<std::string, std::any>)){\n        std::map<std::string, std::any> m = std::any_cast<std::map<std::string, std::any>>(d);\n        for(auto it = m.begin(); it != m.end(); it++){\n            depth = std::max(depth, dict_depth(it->second));\n        }\n        return depth + 1;\n    }\n    return depth;\n}\nint main() {\n    auto candidate = dict_depth;\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::string>({{\"c\", \"python\"}})}}))) == (2));\n    assert(candidate((std::any({{1, \"Sun\"}, {2, std::map<long,std::map<long,std::string>>({{3, std::any({{4, \"Mon\"}})}})}}))) == (3));\n}\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpjf8e9awm.cpp:2:\n/tmp/tmpjf8e9awm.cpp: In function \u2018int main()\u2019:\n/tmp/tmpjf8e9awm.cpp:18:198: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   18 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n      |                                                                                                                                                                                                      ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpjf8e9awm.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpjf8e9awm.cpp:2:\n/tmp/tmpjf8e9awm.cpp:18:198: note:   candidate expects at least 2 arguments, 1 provided\n   18 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the depth of a dictionary.\nlong dict_depth(std::any d) {\n    if (d.type() != typeid(std::map<std::string, std::any>)) {\n        return 0;\n    }\n    long max_depth = 0;\n    for (auto& [key, value] : std::any_cast<std::map<std::string, std::any>>(d)) {\n        max_depth = std::max(max_depth, dict_depth(value));\n    }\n    return max_depth + 1;\n}\nint main() {\n    auto candidate = dict_depth;\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n    assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::string>({{\"c\", \"python\"}})}}))) == (2));\n    assert(candidate((std::any({{1, \"Sun\"}, {2, std::map<long,std::map<long,std::string>>({{3, std::any({{4, \"Mon\"}})}})}}))) == (3));\n}\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmph4pf0_t3.cpp:2:\n/tmp/tmph4pf0_t3.cpp: In function \u2018int main()\u2019:\n/tmp/tmph4pf0_t3.cpp:16:198: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   16 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<long,long>>>({{\"c\", std::map<std::string,std::map<long,long>>({{\"d\", std::map<long,long>()}})}})}}))) == (4));\n      |                                                                                                                                                                                                      ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmph4pf0_t3.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmph4pf0_t3.cpp:2:\n/tmp/tmph4pf0_t3.cpp:16:198: note:   candidate expects at least 2 arguments, 1 provided\n   16 |     assert(candidate((std::any({{\"a\", 1}, {\"b\", std::map<std::string,std::map<std::string,std::map<l",
      "exit_code": 1,
      "status": "SyntaxError"
    }
  ]
}
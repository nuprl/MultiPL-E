{
  "name": "mbpp_474_replace_char",
  "language": "cpp",
  "prompt": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to replace characters in a string.\nstd::string replace_char(std::string str1, std::string ch, std::string newch) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_474_replace_char.py",
  "prompt_terminology": "verbatim",
  "tests": "}\nint main() {\n    auto candidate = replace_char;\n    assert(candidate((\"polygon\"), (\"y\"), (\"l\")) == (\"pollgon\"));\n    assert(candidate((\"character\"), (\"c\"), (\"a\")) == (\"aharaater\"));\n    assert(candidate((\"python\"), (\"l\"), (\"a\")) == (\"python\"));\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    std::string str2;\n    for(int i=0; i<str1.length(); i++) {\n        if(str1[i] == ch[0]) {\n            str2 += newch;\n        }\n        else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    int i = 0;\n    while(str1[i] != '\\0') {\n        if(str1[i] == ch[0]) {\n            str1[i] = newch[0];\n        }\n        i++;\n    }\n    return str1;",
    "    std::string result = \"\";\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] == ch[0]) {\n            result += newch;\n        } else {\n            result += str1[i];\n        }\n    }\n    return result;",
    "    std::string str2;\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] == ch[0]) {\n            str2.append(newch);\n        } else {\n            str2.push_back(str1[i]);\n        }\n    }\n    return str2;",
    "    std::string str2;\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] == ch[0]) {\n            str2 += newch;\n        } else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    std::string str2;\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] == ch[0]) {\n            str2 += newch;\n        }\n        else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] == ch[0]) {\n            str1[i] = newch[0];\n        }\n    }\n    return str1;",
    "    std::string str2;\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] == ch[0]) {\n            str2 += newch;\n        } else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    std::string str2;\n    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] == ch[0]) {\n            str2 += newch;\n        } else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    std::string str2;\n    for(int i=0; i<str1.length(); i++) {\n        if(str1[i] == ch[0]) {\n            str2 += newch;\n        } else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "  std::string str2 = \"\";\n  for(int i = 0; i < str1.length(); i++) {\n    if(str1[i] == ch[0]) {\n      str2 += newch;\n    } else {\n      str2 += str1[i];\n    }\n  }\n  return str2;",
    "    std::string str2 = \"\";\n    for(int i=0; i<str1.length(); i++) {\n        if(str1[i] == ch[0]) {\n            str2 += newch;\n        }\n        else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "\tstd::string::size_type pos = 0;\n\twhile ((pos = str1.find(ch, pos)) != std::string::npos) {\n\t\tstr1.replace(pos, ch.size(), newch);\n\t\tpos += newch.size();\n\t}\n\treturn str1;",
    "    std::string str2;\n    for(int i=0;i<str1.length();i++) {\n        if(str1[i]==ch[0]) {\n            str2+=newch;\n        }\n        else {\n            str2+=str1[i];\n        }\n    }\n    return str2;",
    "    std::string str2;\n    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] == ch[0]) {\n            str2 += newch;\n        }\n        else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    std::string::size_type pos = 0;\n    while ((pos = str1.find(ch, pos)) != std::string::npos) {\n        str1.replace(pos, ch.size(), newch);\n        pos += newch.size();\n    }\n    return str1;",
    "    std::string str2;\n    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] == ch[0]) {\n            str2 += newch;\n        } else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] == ch[0]) {\n            str1[i] = newch[0];\n        }\n    }\n    return str1;",
    "    std::string str2 = \"\";\n    for (int i = 0; i < str1.size(); i++) {\n        if (str1[i] == ch[0]) {\n            str2 += newch;\n        } else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    std::string str2 = \"\";\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] == ch[0]) {\n            str2 += newch;\n        } else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "\tstd::string str2;\n\tfor (int i = 0; i < str1.length(); i++) {\n\t\tif (str1[i] == ch[0]) {\n\t\t\tstr2 += newch;\n\t\t}\n\t\telse {\n\t\t\tstr2 += str1[i];\n\t\t}\n\t}\n\treturn str2;",
    "    std::string str2;\n    for(int i=0;i<str1.length();i++) {\n        if(str1[i] == ch[0]) {\n            str2 += newch;\n        }\n        else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    std::string str2 = \"\";\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] == ch[0]) {\n            str2 += newch;\n        } else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    std::string::size_type pos = 0;\n    while ((pos = str1.find(ch, pos)) != std::string::npos) {\n        str1.replace(pos, ch.size(), newch);\n        pos += newch.size();\n    }\n    return str1;",
    "    std::string str2;\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] == ch[0]) {\n            str2 += newch;\n        } else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    std::string str2;\n    for(int i = 0; i < str1.size(); i++) {\n        if(str1[i] == ch[0]) {\n            str2 += newch;\n        }\n        else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    std::string str2;\n    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] == ch[0]) {\n            str2 += newch;\n        }\n        else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    int len = str1.length();\n    int len1 = ch.length();\n    int len2 = newch.length();\n    int i, j;\n    for (i = 0; i < len; i++) {\n        if (str1[i] == ch[0]) {\n            for (j = 0; j < len1; j++) {\n                if (str1[i + j] != ch[j]) {\n                    break;\n                }\n            }\n            if (j == len1) {\n                str1.replace(i, len1, newch);\n            }\n        }\n    }\n    return str1;",
    "    int len = str1.length();\n    for (int i = 0; i < len; i++) {\n        if (str1[i] == ch[0]) {\n            str1[i] = newch[0];\n        }\n    }\n    return str1;",
    "    std::string str2;\n    for(int i=0; i<str1.length(); i++) {\n        if(str1[i] == ch[0]) {\n            str2 += newch;\n        }\n        else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    std::string str2;\n    for(int i=0;i<str1.length();i++) {\n        if(str1[i] == ch[0]) {\n            str2 += newch;\n        }\n        else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    std::string str2;\n    for(int i=0; i<str1.length(); i++) {\n        if(str1[i] == ch[0]) {\n            str2 += newch;\n        }\n        else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    std::string str2 = \"\";\n    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] == ch[0]) {\n            str2 += newch;\n        }\n        else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    std::string str2 = \"\";\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] == ch[0]) {\n            str2 += newch;\n        }\n        else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "\tstd::string str2;\n\tfor (int i = 0; i < str1.length(); i++) {\n\t\tif (str1[i] == ch[0]) {\n\t\t\tstr2 += newch;\n\t\t}\n\t\telse {\n\t\t\tstr2 += str1[i];\n\t\t}\n\t}\n\treturn str2;",
    "    std::string str2;\n    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] == ch[0]) {\n            str2 += newch;\n        } else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    std::string str2 = \"\";\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] == ch[0]) {\n            str2 += newch;\n        } else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    int len = str1.length();\n    int len1 = ch.length();\n    int len2 = newch.length();\n    int i = 0;\n    int j = 0;\n    int k = 0;\n    int count = 0;\n    while(i < len) {\n        if(str1[i] == ch[j]) {\n            j++;\n            if(j == len1) {\n                count++;\n                j = 0;\n            }\n        }\n        else {\n            j = 0;\n        }\n        i++;\n    }\n    std::string str2 = str1;\n    i = 0;\n    j = 0;\n    k = 0;\n    while(i < len) {\n        if(str1[i] == ch[j]) {\n            j++;\n            if(j == len1) {\n                str2[k] = newch[0];\n                k++;\n                j = 0;\n            }\n        }\n        else {\n            str2[k] = str1[i];\n            k++;\n            j = 0;\n        }\n        i++;\n    }\n    return str2;",
    "    std::string str2;\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] == ch[0]) {\n            str2 += newch;\n        } else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    std::string::size_type pos = 0;\n    while ((pos = str1.find(ch, pos)) != std::string::npos) {\n        str1.replace(pos, ch.size(), newch);\n        pos += newch.size();\n    }\n    return str1;",
    "    std::string str2;\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] == ch[0]) {\n            str2 += newch;\n        }\n        else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    std::string str2;\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] == ch[0]) {\n            str2 += newch;\n        } else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "\tstd::string str2;\n\tfor (int i = 0; i < str1.length(); i++) {\n\t\tif (str1[i] == ch[0]) {\n\t\t\tstr2 += newch;\n\t\t}\n\t\telse {\n\t\t\tstr2 += str1[i];\n\t\t}\n\t}\n\treturn str2;",
    "\tstd::string str2 = \"\";\n\tfor (int i = 0; i < str1.length(); i++) {\n\t\tif (str1[i] == ch[0]) {\n\t\t\tstr2 += newch;\n\t\t}\n\t\telse {\n\t\t\tstr2 += str1[i];\n\t\t}\n\t}\n\treturn str2;",
    "    int len = str1.length();\n    int len1 = ch.length();\n    int len2 = newch.length();\n    int i = 0;\n    int j = 0;\n    int k = 0;\n    std::string str2 = \"\";\n    while(i < len) {\n        j = 0;\n        k = 0;\n        while(j < len1 && k < len2) {\n            if(str1[i] == ch[j]) {\n                str2 += newch[k];\n                i++;\n                j++;\n                k++;\n            } else {\n                str2 += str1[i];\n                i++;\n                j++;\n            }\n        }\n        if(j == len1 && k == len2) {\n            while(i < len) {\n                str2 += str1[i];\n                i++;\n            }\n        }\n    }\n    return str2;",
    "    int len = str1.length();\n    int len2 = ch.length();\n    int len3 = newch.length();\n    std::string str2 = \"\";\n    for(int i = 0; i < len; i++) {\n        if(str1[i] == ch[0]) {\n            str2 += newch;\n            i += len2 - 1;\n        }\n        else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    std::string str2;\n    for(int i=0; i<str1.length(); i++) {\n        if(str1[i] == ch[0]) {\n            str2 += newch;\n        }\n        else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    std::string str2;\n    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] == ch[0]) {\n            str2 += newch;\n        } else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    std::string str2 = \"\";\n    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] == ch[0]) {\n            str2 += newch;\n        } else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    std::string str2;\n    for(int i = 0; i < str1.size(); i++) {\n        if(str1[i] == ch[0]) {\n            str2 += newch;\n        } else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    std::string str2;\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] == ch[0]) {\n            str2 += newch;\n        } else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    std::string str2;\n    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] == ch[0]) {\n            str2 += newch;\n        } else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "  std::string str2;\n  for (int i = 0; i < str1.length(); i++) {\n    if (str1[i] == ch[0]) {\n      str2 += newch;\n    } else {\n      str2 += str1[i];\n    }\n  }\n  return str2;",
    "    std::string str2;\n    for(int i=0; i<str1.length(); i++) {\n        if(str1[i] == ch[0]) {\n            str2 += newch;\n        } else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    std::string str2;\n    for(int i=0; i<str1.length(); i++) {\n        if(str1[i] == ch[0]) {\n            str2 += newch;\n        }\n        else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    std::string str2;\n    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] == ch[0]) {\n            str2 += newch;\n        } else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    std::string::size_type pos = 0;\n    while((pos = str1.find(ch, pos)) != std::string::npos) {\n        str1.replace(pos, ch.size(), newch);\n        pos += newch.size();\n    }\n    return str1;",
    "    std::string str2;\n    for(int i=0; i<str1.length(); i++) {\n        if(str1[i] == ch[0]) {\n            str2 += newch;\n        } else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    std::string str2;\n    for(int i=0; i<str1.length(); i++) {\n        if(str1[i] == ch[0]) {\n            str2 += newch;\n        }\n        else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    std::string str2 = \"\";\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] == ch[0]) {\n            str2 += newch;\n        } else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    std::string str2;\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] == ch[0]) {\n            str2 += newch;\n        } else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    int i = 0;\n    while(str1[i] != '\\0') {\n        if(str1[i] == ch[0]) {\n            str1[i] = newch[0];\n        }\n        i++;\n    }\n    return str1;",
    "    std::string str2 = \"\";\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] == ch[0]) {\n            str2 += newch;\n        } else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    std::string str2;\n    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] == ch[0]) {\n            str2 += newch;\n        } else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    std::string str2 = \"\";\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] == ch[0]) {\n            str2 += newch;\n        } else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    std::string str = \"\";\n    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] == ch[0]) {\n            str += newch;\n        }\n        else {\n            str += str1[i];\n        }\n    }\n    return str;",
    "    std::string str2;\n    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] == ch[0]) {\n            str2 += newch;\n        }\n        else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    std::string str2 = \"\";\n    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] == ch[0]) {\n            str2 += newch;\n        }\n        else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    int i = 0;\n    while (str1[i] != '\\0') {\n        if (str1[i] == ch[0]) {\n            str1[i] = newch[0];\n        }\n        i++;\n    }\n    return str1;",
    "    std::string result = \"\";\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] == ch[0]) {\n            result += newch;\n        } else {\n            result += str1[i];\n        }\n    }\n    return result;",
    "    int i = 0;\n    while(i < str1.length()) {\n        if(str1[i] == ch[0]) {\n            str1[i] = newch[0];\n        }\n        i++;\n    }\n    return str1;",
    "    std::string str2 = \"\";\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] == ch[0]) {\n            str2 += newch;\n        } else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    std::string str2;\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] == ch[0]) {\n            str2 += newch;\n        } else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    std::string str2 = \"\";\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] == ch[0]) {\n            str2 += newch;\n        }\n        else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    std::string str2;\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] == ch[0]) {\n            str2 = str2 + newch;\n        }\n        else {\n            str2 = str2 + str1[i];\n        }\n    }\n    return str2;",
    "    std::string str2 = \"\";\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] == ch[0]) {\n            str2 += newch;\n        } else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    int len = str1.length();\n    for(int i = 0; i < len; i++) {\n        if(str1[i] == ch[0]) {\n            str1[i] = newch[0];\n        }\n    }\n    return str1;",
    "    std::string str2 = \"\";\n    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] == ch[0]) {\n            str2 += newch;\n        }\n        else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    std::string str2;\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] == ch[0]) {\n            str2 += newch;\n        } else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    std::string str2;\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] == ch[0]) {\n            str2 += newch;\n        } else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    std::string str2;\n    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] == ch[0]) {\n            str2 += newch;\n        } else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    int i = 0;\n    while(i < str1.length()) {\n        if(str1[i] == ch[0]) {\n            str1[i] = newch[0];\n        }\n        i++;\n    }\n    return str1;",
    "    std::string str2;\n    for(int i = 0; i < str1.size(); i++) {\n        if(str1[i] == ch[0]) {\n            str2 += newch;\n        }\n        else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    std::string str2;\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] == ch[0]) {\n            str2 += newch;\n        } else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    int i = 0;\n    while(str1[i] != '\\0') {\n        if(str1[i] == ch[0]) {\n            str1[i] = newch[0];\n        }\n        i++;\n    }\n    return str1;",
    "    std::string str2;\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] == ch[0]) {\n            str2 += newch;\n        }\n        else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    int len1 = str1.length();\n    int len2 = ch.length();\n    int len3 = newch.length();\n    int i = 0;\n    while(i < len1) {\n        if(str1[i] == ch[0]) {\n            str1.replace(i, len2, newch);\n            i += len3;\n        }\n        else {\n            i++;\n        }\n    }\n    return str1;",
    "    int len = str1.length();\n    int len1 = ch.length();\n    int len2 = newch.length();\n    std::string str2 = \"\";\n    for(int i = 0; i < len; i++) {\n        if(str1[i] == ch[0]) {\n            str2 += newch;\n        }\n        else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    std::string str2;\n    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] == ch[0]) {\n            str2 += newch;\n        } else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    std::string str2;\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] == ch[0]) {\n            str2 += newch;\n        }\n        else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    int i = 0;\n    while(i < str1.length()) {\n        if(str1[i] == ch[0]) {\n            str1[i] = newch[0];\n        }\n        i++;\n    }\n    return str1;",
    "\tstd::string str2;\n\tfor (int i = 0; i < str1.length(); i++) {\n\t\tif (str1[i] == ch[0]) {\n\t\t\tstr2 += newch;\n\t\t}\n\t\telse {\n\t\t\tstr2 += str1[i];\n\t\t}\n\t}\n\treturn str2;",
    "    int len = str1.length();\n    int len1 = ch.length();\n    int len2 = newch.length();\n    std::string str2;\n    for (int i = 0; i < len; i++) {\n        if (str1[i] == ch[0]) {\n            str2 += newch;\n            i += len1 - 1;\n        } else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    std::string str2;\n    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] == ch[0]) {\n            str2 += newch;\n        } else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    std::string str2 = \"\";\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] == ch[0]) {\n            str2 += newch;\n        }\n        else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    std::string str2;\n    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] == ch[0]) {\n            str2 += newch;\n        } else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    std::string str2 = \"\";\n    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] == ch[0]) {\n            str2 += newch;\n        } else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    std::string str2;\n    for(int i=0; i<str1.length(); i++) {\n        if(str1[i] == ch[0]) {\n            str2 += newch;\n        } else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "\tint i = 0;\n\twhile (str1[i] != '\\0') {\n\t\tif (str1[i] == ch[0]) {\n\t\t\tstr1[i] = newch[0];\n\t\t}\n\t\ti++;\n\t}\n\treturn str1;",
    "    std::string str2;\n    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] == ch[0]) {\n            str2 += newch;\n        } else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    std::string str2 = \"\";\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] == ch[0]) {\n            str2 += newch;\n        } else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    std::string str2 = \"\";\n    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] == ch[0]) {\n            str2 += newch;\n        } else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    std::string str2;\n    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] == ch[0]) {\n            str2 += newch;\n        } else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    int i = 0;\n    while(i < str1.length()) {\n        if(str1[i] == ch[0]) {\n            str1.replace(i, 1, newch);\n        }\n        i++;\n    }\n    return str1;",
    "    std::string str2;\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] == ch[0]) {\n            str2 += newch;\n        } else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "  std::string str2;\n  for(int i = 0; i < str1.size(); i++) {\n    if(str1[i] == ch[0]) {\n      str2 += newch;\n    }\n    else {\n      str2 += str1[i];\n    }\n  }\n  return str2;",
    "    std::string str2 = \"\";\n    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] == ch[0]) {\n            str2 += newch;\n        } else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    std::string str2;\n    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] == ch[0]) {\n            str2 += newch;\n        } else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    std::string str2;\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] == ch[0]) {\n            str2 += newch;\n        } else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    int len = str1.length();\n    int len1 = ch.length();\n    int len2 = newch.length();\n    int i = 0;\n    int j = 0;\n    int k = 0;\n    std::string str2 = \"\";\n    while(i < len) {\n        j = 0;\n        k = 0;\n        while(j < len1 && k < len2) {\n            if(str1[i] == ch[j]) {\n                str2 += newch[k];\n                i++;\n                j++;\n                k++;\n            } else {\n                str2 += str1[i];\n                i++;\n                j++;\n            }\n        }\n        while(j < len1) {\n            if(str1[i] == ch[j]) {\n                i++;\n                j++;\n            } else {\n                str2 += str1[i];\n                i++;\n                j++;\n            }\n        }\n        while(k < len2) {\n            str2 += newch[k];\n            k++;\n        }\n    }\n    return str2;",
    "\tstd::string str2;\n\tfor(int i=0; i<str1.length(); i++) {\n\t\tif(str1[i] == ch[0]) {\n\t\t\tstr2 += newch;\n\t\t} else {\n\t\t\tstr2 += str1[i];\n\t\t}\n\t}\n\treturn str2;",
    "    int i = 0;\n    while(str1[i] != '\\0') {\n        if(str1[i] == ch[0]) {\n            str1[i] = newch[0];\n        }\n        i++;\n    }\n    return str1;",
    "    std::string str2;\n    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] == ch[0]) {\n            str2 += newch;\n        }\n        else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    std::string str2 = \"\";\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] == ch[0]) {\n            str2 += newch;\n        } else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    std::string str2;\n    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] == ch[0]) {\n            str2 += newch;\n        }\n        else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    std::string str2;\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] == ch[0]) {\n            str2 += newch;\n        } else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    std::string str2;\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] == ch[0]) {\n            str2 += newch;\n        } else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    std::string str2;\n    for(int i=0; i<str1.length(); i++) {\n        if(str1[i] == ch[0]) {\n            str2 += newch;\n        } else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    std::string str2 = \"\";\n    for (int i = 0; i < str1.size(); i++) {\n        if (str1[i] == ch[0]) {\n            str2 += newch;\n        } else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    int i = 0;\n    while(i < str1.length()) {\n        if(str1[i] == ch[0]) {\n            str1[i] = newch[0];\n        }\n        i++;\n    }\n    return str1;",
    "\tint len = str1.length();\n\tstd::string str2 = \"\";\n\tfor (int i = 0; i < len; i++) {\n\t\tif (str1[i] == ch[0]) {\n\t\t\tstr2 += newch;\n\t\t}\n\t\telse {\n\t\t\tstr2 += str1[i];\n\t\t}\n\t}\n\treturn str2;",
    "    std::string str2;\n    for(int i=0; i<str1.length(); i++) {\n        if(str1[i] == ch[0]) {\n            str2 += newch;\n        }\n        else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    std::string str2;\n    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] == ch[0]) {\n            str2.append(newch);\n        } else {\n            str2.push_back(str1[i]);\n        }\n    }\n    return str2;",
    "    std::string str2;\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] == ch[0]) {\n            str2 += newch;\n        } else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    std::string str2;\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] == ch[0]) {\n            str2 += newch;\n        } else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "  int i = 0;\n  while(str1[i] != '\\0') {\n    if(str1[i] == ch[0]) {\n      str1[i] = newch[0];\n    }\n    i++;\n  }\n  return str1;",
    "    std::string str2;\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] == ch[0]) {\n            str2 += newch;\n        } else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    std::string str2;\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] == ch[0]) {\n            str2 += newch;\n        } else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    std::string str2;\n    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] == ch[0]) {\n            str2 += newch;\n        } else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    std::string str2;\n    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] == ch[0]) {\n            str2 += newch;\n        }\n        else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    int len = str1.length();\n    int len1 = ch.length();\n    int len2 = newch.length();\n    int i = 0;\n    int j = 0;\n    int k = 0;\n    std::string str2;\n    while(i < len) {\n        if(str1[i] == ch[j]) {\n            j++;\n            if(j == len1) {\n                str2 += newch;\n                j = 0;\n            }\n        }\n        else {\n            str2 += str1[i];\n        }\n        i++;\n    }\n    return str2;",
    "    int i = 0;\n    while(str1[i] != '\\0') {\n        if(str1[i] == ch[0]) {\n            str1[i] = newch[0];\n        }\n        i++;\n    }\n    return str1;",
    "    std::string result;\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] == ch[0]) {\n            result += newch;\n        } else {\n            result += str1[i];\n        }\n    }\n    return result;",
    "    std::string str2;\n    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] == ch[0]) {\n            str2 += newch;\n        } else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    std::string str2;\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] == ch[0]) {\n            str2 += newch;\n        } else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    std::string str2;\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] == ch[0]) {\n            str2 += newch;\n        } else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    std::string str2;\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] == ch[0]) {\n            str2 += newch;\n        } else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    std::string str2;\n    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] == ch[0]) {\n            str2 += newch;\n        }\n        else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    std::string str2 = \"\";\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] == ch[0]) {\n            str2 += newch;\n        } else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    int i = 0;\n    while(i < str1.length()) {\n        if(str1[i] == ch[0]) {\n            str1[i] = newch[0];\n        }\n        i++;\n    }\n    return str1;",
    "\tint i = 0;\n\twhile (i < str1.length()) {\n\t\tif (str1[i] == ch[0]) {\n\t\t\tstr1[i] = newch[0];\n\t\t}\n\t\ti++;\n\t}\n\treturn str1;",
    "    std::string str2;\n    for(int i=0; i<str1.length(); i++) {\n        if(str1[i] == ch[0]) {\n            str2 += newch;\n        }\n        else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    std::string str2 = \"\";\n    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] == ch[0]) {\n            str2 += newch;\n        }\n        else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    std::string str2;\n    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] == ch[0]) {\n            str2 += newch;\n        } else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "\tstd::string str2;\n\tfor (int i = 0; i < str1.length(); i++) {\n\t\tif (str1[i] == ch[0]) {\n\t\t\tstr2 += newch;\n\t\t}\n\t\telse {\n\t\t\tstr2 += str1[i];\n\t\t}\n\t}\n\treturn str2;",
    "    std::string str2 = \"\";\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] == ch[0]) {\n            str2 += newch;\n        } else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    std::string str;\n    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] == ch[0]) {\n            str += newch;\n        }\n        else {\n            str += str1[i];\n        }\n    }\n    return str;",
    "    std::string str2;\n    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] == ch[0]) {\n            str2 += newch;\n        } else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    int i = 0;\n    while(i < str1.length()) {\n        if(str1[i] == ch[0]) {\n            str1[i] = newch[0];\n        }\n        i++;\n    }\n    return str1;",
    "    std::string str2 = \"\";\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] == ch[0]) {\n            str2 += newch;\n        } else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    std::string str2 = \"\";\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] == ch[0]) {\n            str2 += newch;\n        } else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    std::string str2;\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] == ch[0]) {\n            str2 += newch;\n        } else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    std::string str2;\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] == ch[0]) {\n            str2 += newch;\n        }\n        else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    std::string str2;\n    for(int i=0;i<str1.length();i++) {\n        if(str1[i] == ch[0]) {\n            str2 += newch;\n        }\n        else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    std::string str2;\n    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] == ch[0]) {\n            str2 += newch;\n        } else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "\tstd::string str2;\n\tfor (int i = 0; i < str1.length(); i++) {\n\t\tif (str1[i] == ch[0]) {\n\t\t\tstr2 += newch;\n\t\t}\n\t\telse {\n\t\t\tstr2 += str1[i];\n\t\t}\n\t}\n\treturn str2;",
    "    std::string str2;\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] == ch[0]) {\n            str2 += newch;\n        }\n        else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    std::string str2;\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] == ch[0]) {\n            str2 = str2 + newch;\n        } else {\n            str2 = str2 + str1[i];\n        }\n    }\n    return str2;",
    "\tstd::string str2;\n\tfor (int i = 0; i < str1.length(); i++) {\n\t\tif (str1[i] == ch[0]) {\n\t\t\tstr2 += newch;\n\t\t}\n\t\telse {\n\t\t\tstr2 += str1[i];\n\t\t}\n\t}\n\treturn str2;",
    "    std::string str2;\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] == ch[0]) {\n            str2 += newch;\n        } else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    std::string str2;\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] == ch[0]) {\n            str2 += newch;\n        } else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "\tstd::string str2;\n\tfor (int i = 0; i < str1.length(); i++) {\n\t\tif (str1[i] == ch[0]) {\n\t\t\tstr2 += newch;\n\t\t}\n\t\telse {\n\t\t\tstr2 += str1[i];\n\t\t}\n\t}\n\treturn str2;",
    "  std::string str2;\n  for(int i=0; i<str1.length(); i++) {\n    if(str1[i] == ch[0]) {\n      str2 += newch;\n    } else {\n      str2 += str1[i];\n    }\n  }\n  return str2;",
    "    std::string str2 = \"\";\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] == ch[0]) {\n            str2 += newch;\n        } else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    std::string str2;\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] == ch[0]) {\n            str2 += newch;\n        } else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    std::string str2;\n    for(int i = 0; i < str1.size(); i++) {\n        if(str1[i] == ch[0]) {\n            str2 += newch;\n        } else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    std::string str2;\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] == ch[0]) {\n            str2 += newch;\n        } else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    std::string str2;\n    for(int i=0;i<str1.length();i++) {\n        if(str1[i] == ch[0]) {\n            str2 += newch;\n        } else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    std::string str2;\n    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] == ch[0]) {\n            str2 += newch;\n        } else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    int i = 0;\n    while(i < str1.length()) {\n        if(str1[i] == ch[0]) {\n            str1[i] = newch[0];\n        }\n        i++;\n    }\n    return str1;",
    "    std::string str2;\n    for(int i=0;i<str1.length();i++) {\n        if(str1[i] == ch[0]) {\n            str2 += newch;\n        }\n        else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    std::string str2;\n    for(int i=0;i<str1.length();i++) {\n        if(str1[i] == ch[0]) {\n            str2 += newch;\n        }\n        else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    std::string str2;\n    for (int i = 0; i < str1.size(); i++) {\n        if (str1[i] == ch[0]) {\n            str2 += newch;\n        } else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    std::string str2;\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] == ch[0]) {\n            str2 += newch;\n        } else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    std::string str2;\n    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] == ch[0]) {\n            str2 += newch;\n        } else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    std::string str2;\n    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] == ch[0]) {\n            str2 += newch;\n        } else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    for (int i = 0; i < str1.size(); i++) {\n        if (str1[i] == ch[0]) {\n            str1[i] = newch[0];\n        }\n    }\n    return str1;",
    "    std::string str2 = \"\";\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] == ch[0]) {\n            str2 += newch;\n        } else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    int len = str1.length();\n    int len2 = ch.length();\n    int len3 = newch.length();\n    for(int i = 0; i < len; i++) {\n        if(str1[i] == ch[0]) {\n            str1.replace(i, len2, newch);\n            i += len3 - 1;\n            len += len3 - len2;\n        }\n    }\n    return str1;",
    "    std::string str2;\n    for(int i = 0; i < str1.size(); i++) {\n        if(str1[i] == ch[0]) {\n            str2 += newch;\n        }\n        else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    std::string str2;\n    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] == ch[0]) {\n            str2 += newch;\n        }\n        else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    std::string str2;\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] == ch[0]) {\n            str2 += newch;\n        }\n        else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    int i = 0;\n    while(str1[i] != '\\0') {\n        if(str1[i] == ch[0]) {\n            str1[i] = newch[0];\n        }\n        i++;\n    }\n    return str1;",
    "    std::string str2;\n    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] == ch[0]) {\n            str2 += newch;\n        } else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    std::string str2 = \"\";\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] == ch[0]) {\n            str2 += newch;\n        } else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    std::string::size_type pos = 0;\n    while((pos = str1.find(ch, pos)) != std::string::npos) {\n        str1.replace(pos, ch.size(), newch);\n        pos += newch.size();\n    }\n    return str1;",
    "    std::string str2;\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] == ch[0]) {\n            str2 += newch;\n        } else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    std::string::size_type pos = 0;\n    while ((pos = str1.find(ch, pos)) != std::string::npos) {\n        str1.replace(pos, ch.size(), newch);\n        pos += newch.size();\n    }\n    return str1;",
    "    std::string str2;\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] == ch[0]) {\n            str2 += newch;\n        } else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    std::string str2;\n    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] == ch[0]) {\n            str2 += newch;\n        } else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    int i = 0;\n    while(i < str1.length()) {\n        if(str1[i] == ch[0]) {\n            str1[i] = newch[0];\n        }\n        i++;\n    }\n    return str1;",
    "\tstd::string str2;\n\tfor (int i = 0; i < str1.length(); i++) {\n\t\tif (str1[i] == ch[0]) {\n\t\t\tstr2 += newch;\n\t\t}\n\t\telse {\n\t\t\tstr2 += str1[i];\n\t\t}\n\t}\n\treturn str2;",
    "    std::string str2;\n    for (int i = 0; i < str1.size(); i++) {\n        if (str1[i] == ch[0]) {\n            str2 += newch;\n        } else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    std::string str2;\n    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] == ch[0]) {\n            str2 += newch;\n        } else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    std::string str2;\n    for(int i=0;i<str1.length();i++) {\n        if(str1[i] == ch[0]) {\n            str2 = str2 + newch;\n        }\n        else {\n            str2 = str2 + str1[i];\n        }\n    }\n    return str2;",
    "    std::string str2;\n    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] == ch[0]) {\n            str2 += newch;\n        } else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "\tstd::string str;\n\tfor (int i = 0; i < str1.length(); i++) {\n\t\tif (str1[i] == ch[0]) {\n\t\t\tstr += newch;\n\t\t}\n\t\telse {\n\t\t\tstr += str1[i];\n\t\t}\n\t}\n\treturn str;",
    "    std::string str2;\n    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] == ch[0]) {\n            str2 += newch;\n        } else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    std::string newstr;\n    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] == ch[0]) {\n            newstr += newch;\n        } else {\n            newstr += str1[i];\n        }\n    }\n    return newstr;",
    "    std::string str2;\n    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] == ch[0]) {\n            str2 += newch;\n        } else {\n            str2 += str1[i];\n        }\n    }\n    return str2;"
  ]
}
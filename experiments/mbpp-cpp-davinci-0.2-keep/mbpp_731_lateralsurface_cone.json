{
  "name": "mbpp_731_lateralsurface_cone",
  "language": "cpp",
  "prompt": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the lateral surface area of a cone given radius r and the height h.\nfloat lateralsurface_cone(long r, long h) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_731_lateralsurface_cone.py",
  "prompt_terminology": "verbatim",
  "tests": "}\nint main() {\n    auto candidate = lateralsurface_cone;\n    assert(candidate((5), (12)) == (204.20352248333654));\n    assert(candidate((10), (15)) == (566.3586699569488));\n    assert(candidate((19), (17)) == (1521.8090132193388));\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "  return 3.14*r*sqrt(r*r+h*h);",
    "  float pi=3.14;\n  float lateral_surface=pi*r*sqrt(r*r+h*h);\n  return lateral_surface;",
    "  float pi = 3.14;\n  return pi*r*sqrt(r*r+h*h);",
    "    return 3.14*r*sqrt(r*r+h*h);",
    "  return 3.14*r*sqrt(r*r+h*h);",
    "    return M_PI * r * sqrt(r * r + h * h);",
    "  float pi = 3.14;\n  float lsa = pi * r * sqrt(r * r + h * h);\n  return lsa;",
    "  return 3.14*r*sqrt(r*r+h*h);",
    "  return 3.14*r*sqrt(r*r+h*h);",
    "    return 3.14*r*sqrt(r*r+h*h);",
    "  float pi=3.14;\n  float lateral_surface_area;\n  lateral_surface_area=pi*r*sqrt(r*r+h*h);\n  return lateral_surface_area;",
    "  float pi = 3.14;\n  return pi * r * sqrt(r * r + h * h);",
    "    return 3.14*r*sqrt(r*r+h*h);",
    "    float pi = 3.14;\n    float lateral_surface_area = pi * r * sqrt(r * r + h * h);\n    return lateral_surface_area;",
    "  float pi = 3.14;\n  float lateral_surface_area = pi * r * sqrt(r * r + h * h);\n  return lateral_surface_area;",
    "  float pi = 3.14;\n  float area = pi * r * sqrt(r * r + h * h);\n  return area;",
    "  float pi = 3.14;\n  float area = pi * r * sqrt(r * r + h * h);\n  return area;",
    "    return 3.14*r*sqrt(r*r+h*h);",
    "  return 3.14*r*sqrt(r*r+h*h);",
    "  float pi=3.14;\n  float area=pi*r*sqrt(r*r+h*h);\n  return area;"
  ]
}
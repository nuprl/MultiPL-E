{
  "name": "mbpp_799_left_rotate",
  "language": "cpp",
  "prompt": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to that rotate left bits by d bits a given number. We assume that the number is 32 bit.\nlong left_rotate(long n, long d) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_799_left_rotate.py",
  "prompt_terminology": "verbatim",
  "tests": "}\nint main() {\n    auto candidate = left_rotate;\n    assert(candidate((16), (2)) == (64));\n    assert(candidate((10), (2)) == (40));\n    assert(candidate((99), (3)) == (792));\n    assert(candidate((99), (3)) == (792));\n    assert(candidate((1), (3)) == (8));\n    assert(candidate((5), (3)) == (40));\n    assert(candidate((29), (3)) == (232));\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    assert(d >= 0 && d < 32);\n    return (n << d) | (n >> (32 - d));",
    "    return (n << d) | (n >> (32 - d));",
    "    assert(d >= 0 && d <= 32);\n    return (n << d) | (n >> (32 - d));",
    "    assert(d >= 0 && d < 32);\n    return (n << d) | (n >> (32 - d));",
    "    long mask = (1 << d) - 1;\n    return ((n & mask) << (32 - d)) | (n >> d);",
    "    long mask = (1 << d) - 1;\n    return ((n & mask) << (32 - d)) | (n >> d);",
    "    return (n << d) | (n >> (32 - d));",
    "    return (n << d) | (n >> (32 - d));",
    "    long mask = (1 << d) - 1;\n    return (n << d) | ((n & mask) << (32 - d));",
    "    return (n << d) | (n >> (32 - d));",
    "    long mask = (1 << d) - 1;\n    long left = n >> (32 - d);\n    long right = n & mask;\n    return (right << (32 - d)) | left;",
    "    return (n << d) | (n >> (32 - d));",
    "    return (n << d) | (n >> (32 - d));",
    "    return (n << d) | (n >> (32 - d));",
    "    return (n << d) | (n >> (32 - d));",
    "    long mask = (1 << d) - 1;\n    return ((n & mask) << (32 - d)) | (n >> d);",
    "    return (n << d) | (n >> (32 - d));",
    "    long mask = (1 << d) - 1;\n    long left = n >> (32 - d);\n    long right = n & mask;\n    return (right << (32 - d)) | left;",
    "    long mask = (1 << d) - 1;\n    return ((n & mask) << (32 - d)) | (n >> d);",
    "\treturn (n << d) | (n >> (32 - d));",
    "    long mask = (1 << d) - 1;\n    return ((n & mask) << (32 - d)) | (n >> d);",
    "    long mask = (1 << d) - 1;\n    return (n << d) | ((n & mask) << (32 - d));",
    "    long mask = (1 << d) - 1;\n    return ((n & mask) << (32 - d)) | (n >> d);",
    "    long mask = (1 << d) - 1;\n    long left = n >> (32 - d);\n    long right = n & mask;\n    return (right << (32 - d)) | left;",
    "    long mask = (1 << d) - 1;\n    long left = n >> (32 - d);\n    long right = n & mask;\n    return (right << (32 - d)) | left;",
    "    long mask = (1 << d) - 1;\n    long left = n >> (32 - d);\n    long right = n & mask;\n    return (right << (32 - d)) | left;",
    "    return (n << d) | (n >> (32 - d));",
    "    assert(d >= 0);\n    assert(d < 32);\n    return (n << d) | (n >> (32 - d));",
    "    assert(d >= 0 && d < 32);\n    return (n << d) | (n >> (32 - d));",
    "    return (n << d) | (n >> (32 - d));",
    "    return (n << d) | (n >> (32 - d));",
    "    return (n << d) | (n >> (32 - d));",
    "    long mask = (1 << d) - 1;\n    return ((n & mask) << (32 - d)) | (n >> d);",
    "    return (n << d) | (n >> (32 - d));",
    "    return (n << d) | (n >> (32 - d));",
    "    long mask = (1 << d) - 1;\n    return ((n & mask) << (32 - d)) | (n >> d);",
    "    assert(d>=0 && d<32);\n    return (n<<d) | (n>>(32-d));",
    "    return (n << d) | (n >> (32 - d));",
    "    long mask = (1 << d) - 1;\n    long left_part = n >> (32 - d);\n    long right_part = n & mask;\n    return (right_part << (32 - d)) | left_part;",
    "    long mask = (1 << d) - 1;\n    return ((n & mask) << (32 - d)) | (n >> d);",
    "    return (n << d) | (n >> (32 - d));",
    "    return (n << d) | (n >> (32 - d));",
    "    return (n << d) | (n >> (32 - d));",
    "    long mask = (1 << d) - 1;\n    return (n << d) | ((n >> (32 - d)) & mask);",
    "    long mask = (1 << d) - 1;\n    return ((n & mask) << (32 - d)) | (n >> d);",
    "    long mask = (1 << d) - 1;\n    long left = n >> (32 - d);\n    long right = n & mask;\n    long result = (right << (32 - d)) | left;\n    return result;",
    "    return (n << d) | (n >> (32 - d));",
    "    return (n << d) | (n >> (32 - d));",
    "    long mask = (1L << d) - 1;\n    long left_mask = ~mask;\n    long left_part = n & left_mask;\n    long right_part = n & mask;\n    return (left_part << d) | (right_part >> (32 - d));",
    "    long mask = (1 << d) - 1;\n    return (n << d) | ((n >> (32 - d)) & mask);",
    "    long mask = (1 << d) - 1;\n    return (n << d) | ((n >> (32 - d)) & mask);",
    "    long mask = (1 << d) - 1;\n    long left = n >> (32 - d);\n    long right = n & mask;\n    return (right << (32 - d)) | left;",
    "\tassert(d >= 0);\n\tassert(d < 32);\n\treturn (n << d) | (n >> (32 - d));",
    "    return (n << d) | (n >> (32 - d));",
    "    long mask = (1 << d) - 1;\n    return ((n & mask) << (32 - d)) | (n >> d);",
    "    return (n << d) | (n >> (32 - d));",
    "    assert(d >= 0);\n    assert(d < 32);\n    return (n << d) | (n >> (32 - d));",
    "    long mask = (1 << d) - 1;\n    return ((n & mask) << (32 - d)) | (n >> d);",
    "    long mask = (1 << d) - 1;\n    long left = n >> (32 - d);\n    long right = n & mask;\n    return (right << (32 - d)) | left;",
    "    long mask = (1 << d) - 1;\n    long left = n >> (32 - d);\n    long right = n & mask;\n    return (left | right) << (32 - d);",
    "    long mask = (1 << d) - 1;\n    long left_part = n >> (32 - d);\n    long right_part = n & mask;\n    return (right_part << (32 - d)) | left_part;",
    "    long mask = (1 << d) - 1;\n    return ((n & mask) << (32 - d)) | (n >> d);",
    "    return (n << d) | (n >> (32 - d));",
    "    return (n << d) | (n >> (32 - d));",
    "    return (n << d) | (n >> (32 - d));",
    "    long mask = (1 << d) - 1;\n    long left = n >> (32 - d);\n    long right = n & mask;\n    return (right << (32 - d)) | left;",
    "    return (n << d) | (n >> (32 - d));",
    "    assert(d >= 0 && d < 32);\n    return (n << d) | (n >> (32 - d));",
    "    long mask = (1 << d) - 1;\n    long left = n >> (32 - d);\n    long right = n & mask;\n    return (left | right) << (32 - d);",
    "    return (n << d) | (n >> (32 - d));",
    "    long mask = (1 << d) - 1;\n    long left = n >> (32 - d);\n    long right = n & mask;\n    return (right << (32 - d)) | left;",
    "    assert(d >= 0 && d < 32);\n    return (n << d) | (n >> (32 - d));",
    "    long mask = (1 << d) - 1;\n    return ((n & mask) << (32 - d)) | (n >> d);",
    "    long mask = (1 << d) - 1;\n    long left = n >> (32 - d);\n    long right = n & mask;\n    return (left | right) << (32 - d);",
    "    long mask = (1 << d) - 1;\n    return (n << d) | ((n & mask) << (32 - d));",
    "    long mask = (1 << d) - 1;\n    long left = n >> (32 - d);\n    long right = n & mask;\n    return (right << (32 - d)) | left;",
    "    long mask = (1 << d) - 1;\n    long left = n >> (32 - d);\n    long right = n & mask;\n    return (right << (32 - d)) | left;",
    "    long mask = (1 << d) - 1;\n    return ((n & mask) << (32 - d)) | (n >> d);",
    "    return (n << d) | (n >> (32 - d));",
    "    long mask = (1 << d) - 1;\n    long left = n >> (32 - d);\n    long right = n & mask;\n    return (right << (32 - d)) | left;",
    "    long mask = (1 << d) - 1;\n    long left = n >> (32 - d);\n    long right = n & mask;\n    return (right << (32 - d)) | left;",
    "    long mask = (1 << d) - 1;\n    return ((n & mask) << (32 - d)) | (n >> d);",
    "    long mask = (1 << d) - 1;\n    return ((n & mask) << (32 - d)) | (n >> d);",
    "\treturn (n << d) | (n >> (32 - d));",
    "    return (n << d) | (n >> (32 - d));",
    "    return (n << d) | (n >> (32 - d));",
    "    return (n << d) | (n >> (32 - d));",
    "    long mask = (1 << d) - 1;\n    long left = n >> (32 - d);\n    long right = n & mask;\n    return (right << (32 - d)) | left;",
    "    long mask = (1 << d) - 1;\n    return ((n & mask) << (32 - d)) | (n >> d);",
    "    long mask = (1 << d) - 1;\n    long left = n >> (32 - d);\n    long right = n & mask;\n    return (left | right) << (32 - d);",
    "    assert(d >= 0 && d < 32);\n    return (n << d) | (n >> (32 - d));",
    "    long mask = (1 << d) - 1;\n    return ((n & mask) << (32 - d)) | (n >> d);",
    "    return (n << d) | (n >> (32 - d));",
    "    return (n << d) | (n >> (32 - d));",
    "    return (n << d) | (n >> (32 - d));",
    "    long mask = (1 << d) - 1;\n    long left = n >> (32 - d);\n    long right = n & mask;\n    return (left | right) << (32 - d);",
    "    long mask = (1 << d) - 1;\n    long left = n >> (32 - d);\n    long right = n & mask;\n    return (right << (32 - d)) | left;",
    "    return (n << d) | (n >> (32 - d));",
    "    long temp = n;\n    long count = 0;\n    while(temp) {\n        temp = temp >> 1;\n        count++;\n    }\n    d = d % count;\n    long mask = (1 << d) - 1;\n    long left = n >> (count - d);\n    long right = n & mask;\n    return (left | right);",
    "    long mask = (1 << d) - 1;\n    return ((n & mask) << (32 - d)) | (n >> d);",
    "    long mask = (1 << d) - 1;\n    return (n << d) | ((n & mask) << (32 - d));",
    "    return (n << d) | (n >> (32 - d));",
    "    return (n << d) | (n >> (32 - d));",
    "    long mask = (1 << d) - 1;\n    long left = n >> (32 - d);\n    long right = n & mask;\n    return (right << (32 - d)) | left;",
    "    return (n << d) | (n >> (32 - d));",
    "    long mask = (1 << d) - 1;\n    long left = n >> (32 - d);\n    long right = n & mask;\n    return (left | right) << (32 - d);",
    "    long mask = (1L << d) - 1;\n    return ((n & mask) << (32 - d)) | (n >> d);",
    "    long mask = (1 << d) - 1;\n    return (n << d) | ((n & mask) << (32 - d));",
    "    // assert(d >= 0 && d <= 32);\n    long mask = (1 << d) - 1;\n    long left = n >> (32 - d);\n    long right = n & mask;\n    return (right << (32 - d)) | left;",
    "    assert(d >= 0 && d < 32);\n    return (n << d) | (n >> (32 - d));",
    "    long mask = (1 << d) - 1;\n    long left = n >> (32 - d);\n    long right = n & mask;\n    return (right << (32 - d)) | left;",
    "    long mask = (1 << d) - 1;\n    long left = n >> (32 - d);\n    long right = n & mask;\n    return (right << (32 - d)) | left;",
    "    long mask = (1 << d) - 1;\n    return ((n & mask) << (32 - d)) | (n >> d);",
    "    long mask = (1 << d) - 1;\n    return ((n & mask) << (32 - d)) | (n >> d);",
    "    long mask = (1 << d) - 1;\n    return ((n & mask) << (32 - d)) | (n >> d);",
    "    assert(d >= 0 && d < 32);\n    return (n << d) | (n >> (32 - d));",
    "    assert(d >= 0);\n    assert(d < 32);\n    return (n << d) | (n >> (32 - d));",
    "    long mask = (1 << d) - 1;\n    long left = n >> (32 - d);\n    long right = n & mask;\n    return (right << (32 - d)) | left;",
    "    return (n << d) | (n >> (32 - d));",
    "    long mask = (1 << d) - 1;\n    return (n << d) | ((n & mask) << (32 - d));",
    "    long mask = (1 << d) - 1;\n    return ((n & mask) << (32 - d)) | (n >> d);",
    "    long mask = (1 << d) - 1;\n    return ((n & mask) << (32 - d)) | (n >> d);",
    "    return (n << d) | (n >> (32 - d));",
    "    assert(d >= 0 && d < 32);\n    return (n << d) | (n >> (32 - d));",
    "    return (n << d) | (n >> (32 - d));",
    "    long mask = (1 << d) - 1;\n    return ((n & mask) << (32 - d)) | (n >> d);",
    "    return (n << d) | (n >> (32 - d));",
    "    long mask = (1 << d) - 1;\n    return ((n & mask) << (32 - d)) | (n >> d);",
    "    return (n << d) | (n >> (32 - d));",
    "    long mask = (1 << d) - 1;\n    return ((n & mask) << (32 - d)) | (n >> d);",
    "    return (n << d) | (n >> (32 - d));",
    "    return (n << d) | (n >> (32 - d));",
    "    long mask = (1 << d) - 1;\n    long left = n >> (32 - d);\n    long right = n & mask;\n    return (right << (32 - d)) | left;",
    "    return (n << d) | (n >> (32 - d));",
    "    long mask = (1 << d) - 1;\n    long left = n >> (32 - d);\n    long right = n & mask;\n    return (left | right) << (32 - d);",
    "    return (n << d) | (n >> (32 - d));",
    "    long mask = (1 << d) - 1;\n    return ((n & mask) << (32 - d)) | (n >> d);",
    "    long mask = (1 << d) - 1;\n    long left = n >> (32 - d);\n    long right = n & mask;\n    return (right << (32 - d)) | left;",
    "    assert(d >= 0 && d < 32);\n    return (n << d) | (n >> (32 - d));",
    "    long mask = (1 << d) - 1;\n    return (n << d) | ((n & mask) >> (32 - d));",
    "    long mask = (1 << d) - 1;\n    return (n << d) | ((n & mask) << (32 - d));",
    "    long mask = (1 << d) - 1;\n    long left = n >> (32 - d);\n    long right = n & mask;\n    return (left | right) << (32 - d);",
    "    assert(d >= 0 && d < 32);\n    return (n << d) | (n >> (32 - d));",
    "    assert(d >= 0 && d < 32);\n    return (n << d) | (n >> (32 - d));",
    "    long mask = (1 << d) - 1;\n    long left = n >> (32 - d);\n    long right = n & mask;\n    return (left | right) << (32 - d);",
    "    long mask = (1 << d) - 1;\n    long left = n >> (32 - d);\n    long right = n & mask;\n    return (right << (32 - d)) | left;",
    "    long mask = (1 << d) - 1;\n    return ((n & mask) << (32 - d)) | (n >> d);",
    "    long mask = (1 << d) - 1;\n    return (n << d) | ((n & mask) << (32 - d));",
    "    long mask = (1 << d) - 1;\n    return ((n & mask) << (32 - d)) | (n >> d);",
    "    long mask = (1 << d) - 1;\n    long left = n >> (32 - d);\n    long right = n & mask;\n    return (right << (32 - d)) | left;",
    "    long mask = (1 << d) - 1;\n    return ((n & mask) << (32 - d)) | (n >> d);",
    "\tlong mask = (1 << d) - 1;\n\tlong left = n & mask;\n\tlong right = n >> d;\n\treturn (left << (32 - d)) | right;",
    "    long mask = (1 << d) - 1;\n    return (n << d) | ((n >> (32 - d)) & mask);",
    "    long mask = (1 << d) - 1;\n    return ((n & mask) << (32 - d)) | (n >> d);",
    "    long mask = (1 << d) - 1;\n    return ((n & mask) << (32 - d)) | (n >> d);",
    "    long mask = (1 << d) - 1;\n    long left = n >> (32 - d);\n    long right = n & mask;\n    return (right << (32 - d)) | left;",
    "    long mask = (1 << d) - 1;\n    return ((n & mask) << (32 - d)) | (n >> d);",
    "    assert(d >= 0 && d < 32);\n    return (n << d) | (n >> (32 - d));",
    "    long mask = (1 << d) - 1;\n    long left = n >> (32 - d);\n    long right = n & mask;\n    return (right << (32 - d)) | left;",
    "    return (n << d) | (n >> (32 - d));",
    "    long mask = (1 << d) - 1;\n    return ((n & mask) << (32 - d)) | (n >> d);",
    "    assert(d>=0 && d<32);\n    return (n<<d) | (n>>(32-d));",
    "    return (n << d) | (n >> (32 - d));",
    "    long mask = (1 << d) - 1;\n    return (n << d) | ((n & mask) >> (32 - d));",
    "    return (n << d) | (n >> (32 - d));",
    "    return (n << d) | (n >> (32 - d));",
    "    long mask = (1 << d) - 1;\n    return ((n & mask) << (32 - d)) | (n >> d);",
    "    long mask = (1 << d) - 1;\n    long left = n >> (32 - d);\n    long right = n & mask;\n    long result = (right << (32 - d)) | left;\n    return result;",
    "    return (n << d) | (n >> (32 - d));",
    "    long left_mask = (1 << d) - 1;\n    long right_mask = ~left_mask;\n    long left = (n & left_mask) << (32 - d);\n    long right = (n & right_mask) >> d;\n    return left | right;",
    "    assert(d >= 0 && d < 32);\n    return (n << d) | (n >> (32 - d));",
    "    long mask = (1 << d) - 1;\n    return (n << d) | ((n & mask) << (32 - d));",
    "    long temp = n;\n    long count = 0;\n    while(temp) {\n        count++;\n        temp = temp >> 1;\n    }\n    long mask = (1 << d) - 1;\n    long left = n >> (count - d);\n    long right = n & mask;\n    return (left | right);",
    "    return (n << d) | (n >> (32 - d));",
    "    return ((n << d) | (n >> (32 - d)));",
    "    long mask = (1 << d) - 1;\n    long left = n >> (32 - d);\n    long right = n & mask;\n    return (right << (32 - d)) | left;",
    "  return (n << d) | (n >> (32 - d));",
    "    long mask = (1 << d) - 1;\n    return (n << d) | ((n & mask) << (32 - d));",
    "    return (n << d) | (n >> (32 - d));",
    "    return (n << d) | (n >> (32 - d));",
    "    return (n << d) | (n >> (32 - d));",
    "    long mask = (1 << d) - 1;\n    long left = n >> (32 - d);\n    long right = n & mask;\n    return (right << (32 - d)) | left;",
    "    long mask = (1 << d) - 1;\n    return (n << d) | (n & mask);",
    "    return (n << d) | (n >> (32 - d));",
    "    long mask = (1 << d) - 1;\n    return (n << d) | ((n >> (32 - d)) & mask);",
    "    long mask = (1 << d) - 1;\n    return ((n & mask) << (32 - d)) | (n >> d);",
    "    long mask = (1 << d) - 1;\n    return ((n & mask) << (32 - d)) | (n >> d);",
    "    return (n << d) | (n >> (32 - d));",
    "    assert(d >= 0 && d < 32);\n    return (n << d) | (n >> (32 - d));",
    "    long mask = (1 << d) - 1;\n    return ((n & mask) << (32 - d)) | (n >> d);",
    "    long mask = (1 << d) - 1;\n    long left = n >> (32 - d);\n    long right = n & mask;\n    return (right << (32 - d)) | left;",
    "    long mask = (1 << d) - 1;\n    long left = (n >> (32 - d)) & mask;\n    long right = n << d;\n    return left | right;",
    "    long mask = (1 << d) - 1;\n    return ((n & mask) << (32 - d)) | (n >> d);",
    "    long mask = (1 << d) - 1;\n    long left = n >> (32 - d);\n    long right = n & mask;\n    return (left | right) << (32 - d);",
    "    return (n << d) | (n >> (32 - d));",
    "    return (n << d) | (n >> (32 - d));",
    "    long mask = (1 << d) - 1;\n    long left = n >> (32 - d);\n    long right = n & mask;\n    return (right << (32 - d)) | left;",
    "    assert(d >= 0);\n    assert(d < 32);\n    return (n << d) | (n >> (32 - d));",
    "    long mask = (1 << d) - 1;\n    return (n << d) | (n & mask);",
    "    long mask = (1 << d) - 1;\n    return (n << d) | ((n >> (32 - d)) & mask);"
  ]
}
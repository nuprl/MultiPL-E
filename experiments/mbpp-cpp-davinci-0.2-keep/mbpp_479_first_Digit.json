{
  "name": "mbpp_479_first_Digit",
  "language": "cpp",
  "prompt": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the first digit of a given number.\nlong first_Digit(long n) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_479_first_Digit.py",
  "prompt_terminology": "verbatim",
  "tests": "}\nint main() {\n    auto candidate = first_Digit;\n    assert(candidate((123)) == (1));\n    assert(candidate((456)) == (4));\n    assert(candidate((12)) == (1));\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    // Your code here\n    long i=0;\n    while(n>0)\n    {\n        i=n%10;\n        n=n/10;\n    }\n    return i;",
    "    // Write your code here\n    while(n>=10)\n    {\n        n=n/10;\n    }\n    return n;",
    "    // Write your code here\n    long sum=0;\n    while(n>0)\n    {\n        sum=n%10;\n        n=n/10;\n    }\n    return sum;",
    "    // Your code here\n    while(n>=10)\n    {\n        n=n/10;\n    }\n    return n;",
    "    // Write your code here\n    long digit = 0;\n    while(n>0){\n        digit = n%10;\n        n = n/10;\n    }\n    return digit;",
    "    // Your code here\n    while(n>=10)\n    {\n        n=n/10;\n    }\n    return n;",
    "    // Write your code here\n    while(n>=10)\n    {\n        n=n/10;\n    }\n    return n;",
    "    // Your code here\n    // return n;\n    while(n>=10)\n    {\n        n=n/10;\n    }\n    return n;",
    "    // Write your code here\n    while(n>=10)\n    {\n        n=n/10;\n    }\n    return n;",
    "    // Write your code here\n    while(n>=10)\n    {\n        n=n/10;\n    }\n    return n;",
    "    // Write your code here\n    while(n>=10){\n        n=n/10;\n    }\n    return n;",
    "    // Your code here\n    while(n>=10){\n        n=n/10;\n    }\n    return n;",
    "    // Your code here\n    long rem;\n    while(n>0){\n        rem=n%10;\n        n=n/10;\n    }\n    return rem;",
    "    // Write your code here\n    while(n>=10){\n        n=n/10;\n    }\n    return n;",
    "    // Write your code here\n    while(n>=10)\n    {\n        n=n/10;\n    }\n    return n;",
    "    // Write your code here\n    long r;\n    while(n>0)\n    {\n        r=n%10;\n        n=n/10;\n    }\n    return r;",
    "    // Your code here\n    while(n>=10){\n        n=n/10;\n    }\n    return n;",
    "    // Write your code here\n    while(n>=10)\n    {\n        n=n/10;\n    }\n    return n;",
    "    // Your code here\n    while(n>=10)\n    {\n        n=n/10;\n    }\n    return n;",
    "    // Write your code here\n    while(n>=10){\n        n=n/10;\n    }\n    return n;"
  ]
}
{
  "name": "mbpp_116_tuple_to_int",
  "language": "cpp",
  "prompt": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to convert a given tuple of positive integers into a single integer.\nlong tuple_to_int(long nums) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_116_tuple_to_int.py",
  "prompt_terminology": "verbatim",
  "tests": "}\nint main() {\n    auto candidate = tuple_to_int;\n    assert(candidate(std::make_tuple(1, 2, 3)) == (123));\n    assert(candidate(std::make_tuple(4, 5, 6)) == (456));\n    assert(candidate(std::make_tuple(5, 6, 7)) == (567));\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    long result = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        result += nums[i] * pow(10, nums.size() - i - 1);\n    }\n    return result;",
    "    long result = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        result = result * 10 + nums[i];\n    }\n    return result;",
    "    long result = 0;\n    int i = 0;\n    while (nums > 0) {\n        result += (nums % 10) * pow(10, i);\n        nums /= 10;\n        i++;\n    }\n    return result;",
    "    long result = 0;\n    int i = 0;\n    while (nums) {\n        result += (nums % 10) * pow(10, i);\n        nums /= 10;\n        i++;\n    }\n    return result;",
    "    long res = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        res = res * 10 + nums[i];\n    }\n    return res;",
    "    long result = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        result = result * 10 + nums[i];\n    }\n    return result;",
    "    long result = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        result = result * 10 + nums[i];\n    }\n    return result;",
    "    int result = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        result = result * 10 + nums[i];\n    }\n    return result;",
    "    long result = 0;\n    long multiplier = 1;\n    while (nums > 0) {\n        result += (nums % 10) * multiplier;\n        multiplier *= 10;\n        nums /= 10;\n    }\n    return result;",
    "    long result = 0;\n    long i = 0;\n    while (nums > 0) {\n        result += (nums % 10) * pow(10, i);\n        nums /= 10;\n        i++;\n    }\n    return result;",
    "  long num = 0;\n  for (int i = 0; i < nums.size(); i++) {\n    num = num * 10 + nums[i];\n  }\n  return num;",
    "    long result = 0;\n    long power = 1;\n    while (nums > 0) {\n        result += nums % 10 * power;\n        power *= 10;\n        nums /= 10;\n    }\n    return result;",
    "    long result = 0;\n    long multiplier = 1;\n    while (nums) {\n        result += (nums % 10) * multiplier;\n        multiplier *= 10;\n        nums /= 10;\n    }\n    return result;",
    "    int len = nums.length();\n    int res = 0;\n    for (int i = 0; i < len; i++) {\n        res += nums[i] * pow(10, i);\n    }\n    return res;",
    "    long result = 0;\n    int i = 0;\n    while (nums > 0) {\n        result += (nums % 10) * pow(10, i);\n        nums /= 10;\n        i++;\n    }\n    return result;",
    "    long result = 0;\n    long multiplier = 1;\n    while (nums > 0) {\n        result += (nums % 10) * multiplier;\n        multiplier *= 10;\n        nums /= 10;\n    }\n    return result;",
    "    int result = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        result += nums[i] * pow(10, i);\n    }\n    return result;",
    "    long result = 0;\n    int i = 0;\n    while (nums > 0) {\n        result += (nums % 10) * pow(10, i);\n        nums /= 10;\n        i++;\n    }\n    return result;",
    "    long res = 0;\n    int i = 0;\n    while (nums) {\n        res += (nums % 10) * pow(10, i);\n        nums /= 10;\n        i++;\n    }\n    return res;",
    "    long result = 0;\n    long count = 0;\n    while (nums) {\n        result += (nums % 10) * pow(10, count);\n        count++;\n        nums /= 10;\n    }\n    return result;",
    "    long result = 0;\n    int i = 0;\n    while (nums > 0) {\n        result += (nums % 10) * pow(10, i);\n        i++;\n        nums /= 10;\n    }\n    return result;",
    "    long res = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        res += nums[i] * pow(10, i);\n    }\n    return res;",
    "    long result = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        result += nums[i] * pow(10, nums.size() - i - 1);\n    }\n    return result;",
    "    long result = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        result = result * 10 + nums[i];\n    }\n    return result;",
    "    long int result = 0;\n    int i = 0;\n    while(nums) {\n        result += (nums % 10) * pow(10, i);\n        nums /= 10;\n        i++;\n    }\n    return result;",
    "    long result = 0;\n    int i = 0;\n    while (nums > 0) {\n        result += (nums % 10) * pow(10, i);\n        nums /= 10;\n        i++;\n    }\n    return result;",
    "    long result = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        result = result * 10 + nums[i];\n    }\n    return result;",
    "    long result = 0;\n    long power = 1;\n    while (nums) {\n        result += (nums % 10) * power;\n        power *= 10;\n        nums /= 10;\n    }\n    return result;",
    "  long result = 0;\n  for (int i = 0; i < nums.size(); i++) {\n    result += nums[i] * pow(10, i);\n  }\n  return result;",
    "    long result = 0;\n    long multiplier = 1;\n    while (nums > 0) {\n        result += (nums % 10) * multiplier;\n        multiplier *= 10;\n        nums /= 10;\n    }\n    return result;",
    "    int i = 0;\n    long result = 0;\n    while (nums > 0) {\n        result += (nums % 10) * pow(10, i);\n        i++;\n        nums /= 10;\n    }\n    return result;",
    "    long result = 0;\n    long factor = 1;\n    while (nums) {\n        result += (nums % 10) * factor;\n        factor *= 10;\n        nums /= 10;\n    }\n    return result;",
    "    long result = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        result = result * 10 + nums[i];\n    }\n    return result;",
    "    long result = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        result += nums[i] * pow(10, i);\n    }\n    return result;",
    "    long result = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        result += nums[i] * pow(10, nums.size() - i - 1);\n    }\n    return result;",
    "    long result = 0;\n    long base = 1;\n    while (nums > 0) {\n        result += nums % 10 * base;\n        nums /= 10;\n        base *= 100;\n    }\n    return result;",
    "    long result = 0;\n    long multiplier = 1;\n    while (nums > 0) {\n        result += (nums % 10) * multiplier;\n        multiplier *= 10;\n        nums /= 10;\n    }\n    return result;",
    "    long result = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        result += nums[i] * pow(10, i);\n    }\n    return result;",
    "    long res = 0;\n    while (nums) {\n        res = res * 10 + nums % 10;\n        nums /= 10;\n    }\n    return res;",
    "    long result = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        result = result * 100 + nums[i];\n    }\n    return result;",
    "    long result = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        result = result * 10 + nums[i];\n    }\n    return result;",
    "    long result = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        result = result * 10 + nums[i];\n    }\n    return result;",
    "    long result = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        result = result * 10 + nums[i];\n    }\n    return result;",
    "    long result = 0;\n    long power = 1;\n    while (nums != 0) {\n        result += (nums % 10) * power;\n        power *= 10;\n        nums /= 10;\n    }\n    return result;",
    "    long result = 0;\n    long multiplier = 1;\n    while (nums > 0) {\n        result += (nums % 10) * multiplier;\n        multiplier *= 10;\n        nums /= 10;\n    }\n    return result;",
    "    long num = 0;\n    long temp = nums;\n    int count = 0;\n    while(temp > 0) {\n        count++;\n        temp = temp/10;\n    }\n    temp = nums;\n    while(temp > 0) {\n        num += (temp%10)*pow(10, count-1);\n        count--;\n        temp = temp/10;\n    }\n    return num;",
    "    long result = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        result = result * 10 + nums[i];\n    }\n    return result;",
    "    long res = 0;\n    long i = 0;\n    while (nums) {\n        res += nums % 10 * pow(10, i);\n        nums /= 10;\n        i++;\n    }\n    return res;",
    "    long result = 0;\n    while(nums) {\n        result = result*10 + nums%10;\n        nums /= 10;\n    }\n    return result;",
    "    long num = 0;\n    int i = 0;\n    while (nums > 0) {\n        num += (nums % 10) * pow(10, i);\n        nums /= 10;\n        i++;\n    }\n    return num;",
    "    long result = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        result += nums[i] * pow(10, i);\n    }\n    return result;",
    "    long result = 0;\n    int i = 0;\n    while(nums) {\n        result += (nums % 10) * pow(10, i);\n        nums /= 10;\n        i++;\n    }\n    return result;",
    "    long result = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        result = result * 10 + nums[i];\n    }\n    return result;",
    "    long result = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        result = result * 10 + nums[i];\n    }\n    return result;",
    "    long result = 0;\n    long i = 0;\n    while (nums) {\n        result += (nums % 10) * pow(10, i++);\n        nums /= 10;\n    }\n    return result;",
    "    long num = 0;\n    for(int i = 0; i < nums.size(); i++) {\n        num = num * 10 + nums[i];\n    }\n    return num;",
    "    long result = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        result = result * 10 + nums[i];\n    }\n    return result;",
    "    long result = 0;\n    long multiplier = 1;\n    while (nums) {\n        result += (nums % 10) * multiplier;\n        multiplier *= 10;\n        nums /= 10;\n    }\n    return result;",
    "    long res = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        res = res * 10 + nums[i];\n    }\n    return res;",
    "    long result = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        result = result * 10 + nums[i];\n    }\n    return result;",
    "    long result = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        result = result * 10 + nums[i];\n    }\n    return result;",
    "  long result = 0;\n  for (int i = 0; i < nums.size(); i++) {\n    result = result * 10 + nums[i];\n  }\n  return result;",
    "    long result = 0;\n    long multiplier = 1;\n    while (nums > 0) {\n        result += (nums % 10) * multiplier;\n        multiplier *= 10;\n        nums /= 10;\n    }\n    return result;",
    "  long num = 0;\n  while (nums > 0) {\n    num = num * 10 + nums % 10;\n    nums /= 10;\n  }\n  return num;",
    "    long result = 0;\n    int i = 0;\n    while (nums) {\n        result += (nums % 10) * pow(10, i);\n        nums /= 10;\n        i++;\n    }\n    return result;",
    "    long result = 0;\n    int i = 0;\n    while (nums) {\n        result += (nums % 10) * pow(10, i);\n        nums /= 10;\n        i++;\n    }\n    return result;",
    "    long result = 0;\n    int i = 0;\n    while (nums > 0) {\n        result += (nums % 10) * pow(10, i);\n        nums /= 10;\n        i++;\n    }\n    return result;",
    "    long result = 0;\n    int i = 0;\n    while (nums > 0) {\n        result += (nums % 10) * pow(10, i);\n        i++;\n        nums /= 10;\n    }\n    return result;",
    "    int n = nums.size();\n    int res = 0;\n    for (int i = 0; i < n; i++) {\n        res = res * 10 + nums[i];\n    }\n    return res;",
    "    long result = 0;\n    long multiplier = 1;\n    while (nums > 0) {\n        result += (nums % 10) * multiplier;\n        multiplier *= 10;\n        nums /= 10;\n    }\n    return result;",
    "    long result = 0;\n    long base = 1;\n    while (nums > 0) {\n        result += (nums % 10) * base;\n        nums /= 10;\n        base *= 100;\n    }\n    return result;",
    "    long result = 0;\n    while (nums > 0) {\n        result = result * 10 + nums % 10;\n        nums /= 10;\n    }\n    return result;",
    "    long result = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        result = result * 10 + nums[i];\n    }\n    return result;",
    "    int i = 0;\n    long sum = 0;\n    while (nums) {\n        sum += (nums % 10) * pow(10, i);\n        nums /= 10;\n        i++;\n    }\n    return sum;",
    "    long result = 0;\n    while (nums) {\n        result = result * 10 + nums % 10;\n        nums /= 10;\n    }\n    return result;",
    "    long result = 0;\n    long i = 0;\n    while (nums > 0) {\n        result += (nums % 10) * pow(10, i);\n        nums /= 10;\n        i++;\n    }\n    return result;",
    "    long result = 0;\n    while (nums > 0) {\n        result = result * 10 + nums % 10;\n        nums /= 10;\n    }\n    return result;",
    "    long result = 0;\n    long multiplier = 1;\n    while (nums > 0) {\n        result += (nums % 10) * multiplier;\n        multiplier *= 10;\n        nums /= 10;\n    }\n    return result;",
    "    long res = 0;\n    while (nums) {\n        res = res * 10 + nums % 10;\n        nums /= 10;\n    }\n    return res;",
    "    long result = 0;\n    int i = 0;\n    while (nums > 0) {\n        result += (nums % 10) * pow(10, i);\n        nums /= 10;\n        i++;\n    }\n    return result;",
    "    long res = 0;\n    while (nums) {\n        res = res * 10 + nums % 10;\n        nums /= 10;\n    }\n    return res;",
    "    long res = 0;\n    int i = 0;\n    while (nums) {\n        res += (nums % 10) * pow(10, i);\n        nums /= 10;\n        i++;\n    }\n    return res;",
    "    long result = 0;\n    long num = nums;\n    int i = 0;\n    while (num > 0) {\n        result += (num % 10) * pow(10, i);\n        num /= 10;\n        i++;\n    }\n    return result;",
    "    long result = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        result += nums[i] * pow(10, nums.size() - i - 1);\n    }\n    return result;",
    "    long result = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        result += nums[i] * pow(10, i);\n    }\n    return result;",
    "    long result = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        result = result * 10 + nums[i];\n    }\n    return result;",
    "    long result = 0;\n    long multiplier = 1;\n    while (nums > 0) {\n        result += (nums % 10) * multiplier;\n        multiplier *= 10;\n        nums /= 10;\n    }\n    return result;",
    "    std::stringstream ss;\n    ss << nums;\n    std::string s = ss.str();\n    long result = 0;\n    for (int i = 0; i < s.length(); i++) {\n        result = result * 10 + s[i] - '0';\n    }\n    return result;",
    "    long num = 0;\n    long i = 0;\n    while (nums > 0) {\n        num += (nums % 10) * pow(10, i);\n        i++;\n        nums /= 10;\n    }\n    return num;",
    "    int i = 0;\n    long sum = 0;\n    while (nums > 0) {\n        sum += (nums % 10) * pow(10, i);\n        nums /= 10;\n        i++;\n    }\n    return sum;",
    "    long result = 0;\n    long multiplier = 1;\n    while (nums) {\n        result += (nums % 10) * multiplier;\n        multiplier *= 10;\n        nums /= 10;\n    }\n    return result;",
    "    // Write your code here\n    // To print results to the standard output you can use printf()\n    // Example: printf(\"%s\", \"Hello world!\");\n    long res = 0;\n    int i = 0;\n    while(nums > 0) {\n        res += (nums % 10) * pow(10, i);\n        nums /= 10;\n        i++;\n    }\n    return res;",
    "    long result = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        result = result * 100 + nums[i];\n    }\n    return result;",
    "    long result = 0;\n    int i = 0;\n    while (nums > 0) {\n        result += (nums % 10) * pow(10, i);\n        nums /= 10;\n        i++;\n    }\n    return result;",
    "    int i = 0;\n    long result = 0;\n    while (nums) {\n        result += (nums % 10) * pow(10, i);\n        nums /= 10;\n        i++;\n    }\n    return result;",
    "    long sum = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        sum += nums[i] * pow(10, nums.size() - i - 1);\n    }\n    return sum;",
    "    long result = 0;\n    long multiplier = 1;\n    while (nums > 0) {\n        result += (nums % 10) * multiplier;\n        multiplier *= 10;\n        nums /= 10;\n    }\n    return result;",
    "    long result = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        result = result * 10 + nums[i];\n    }\n    return result;",
    "    long result = 0;\n    long i = 0;\n    while (nums > 0) {\n        result += (nums % 10) * pow(10, i);\n        i++;\n        nums /= 10;\n    }\n    return result;",
    "    long result = 0;\n    long multiplier = 1;\n    while (nums) {\n        result += (nums % 10) * multiplier;\n        multiplier *= 10;\n        nums /= 10;\n    }\n    return result;",
    "    long result = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        result += nums[i] * pow(10, i);\n    }\n    return result;",
    "    long res = 0;\n    int i = 0;\n    while (nums) {\n        res += nums % 10 * pow(10, i);\n        nums /= 10;\n        i++;\n    }\n    return res;",
    "    long num = 0;\n    long temp = nums;\n    while (temp > 0) {\n        num = num * 10 + temp % 10;\n        temp /= 10;\n    }\n    return num;",
    "    long num = 0;\n    long i = 0;\n    while (nums > 0) {\n        num += (nums % 10) * pow(10, i);\n        nums /= 10;\n        i++;\n    }\n    return num;",
    "    long result = 0;\n    int i = 0;\n    while (nums) {\n        result += (nums % 10) * pow(10, i);\n        nums /= 10;\n        i++;\n    }\n    return result;",
    "    long res = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        res = res * 10 + nums[i];\n    }\n    return res;",
    "  long result = 0;\n  for (int i = 0; i < nums.size(); i++) {\n    result += nums[i] * pow(10, nums.size() - i - 1);\n  }\n  return result;",
    "    long result = 0;\n    long i = 0;\n    while (nums) {\n        result += (nums % 10) * pow(10, i);\n        nums /= 10;\n        i++;\n    }\n    return result;",
    "    long res = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        res = res * 10 + nums[i];\n    }\n    return res;",
    "    int i = 0;\n    long res = 0;\n    while (nums) {\n        res += (nums % 10) * pow(10, i);\n        nums /= 10;\n        i++;\n    }\n    return res;",
    "    long res = 0;\n    long temp = 0;\n    while (nums > 0) {\n        temp = nums % 10;\n        res = res * 10 + temp;\n        nums = nums / 10;\n    }\n    return res;",
    "    long result = 0;\n    long base = 1;\n    while (nums > 0) {\n        result += (nums % 10) * base;\n        base *= 10;\n        nums /= 10;\n    }\n    return result;",
    "    long result = 0;\n    long i = 0;\n    while (nums) {\n        result += (nums % 10) * pow(10, i);\n        nums /= 10;\n        i++;\n    }\n    return result;",
    "    long result = 0;\n    long multiplier = 1;\n    while (nums > 0) {\n        result += (nums % 10) * multiplier;\n        multiplier *= 10;\n        nums /= 10;\n    }\n    return result;",
    "    long result = 0;\n    long multiplier = 1;\n    while (nums > 0) {\n        result += (nums % 10) * multiplier;\n        multiplier *= 10;\n        nums /= 10;\n    }\n    return result;",
    "    long result = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        result = result * 10 + nums[i];\n    }\n    return result;",
    "    long result = 0;\n    long multiplier = 1;\n    while (nums > 0) {\n        result += (nums % 10) * multiplier;\n        multiplier *= 10;\n        nums /= 10;\n    }\n    return result;",
    "    long result = 0;\n    while (nums > 0) {\n        result = result * 10 + nums % 10;\n        nums /= 10;\n    }\n    return result;",
    "    long result = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        result = result * 10 + nums[i];\n    }\n    return result;",
    "  long result = 0;\n  long i = 0;\n  while(nums > 0) {\n    result += (nums % 10) * pow(10, i);\n    nums /= 10;\n    i++;\n  }\n  return result;",
    "    long result = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        result = result * 10 + nums[i];\n    }\n    return result;",
    "    long num = 0;\n    for(int i = 0; i < nums.size(); i++) {\n        num = num * 10 + nums[i];\n    }\n    return num;",
    "    long num = 0;\n    for (int i = 0; i < nums.length(); i++) {\n        num = num * 10 + nums[i];\n    }\n    return num;",
    "    long result = 0;\n    long power = 1;\n    while (nums > 0) {\n        result += (nums % 10) * power;\n        power *= 10;\n        nums /= 10;\n    }\n    return result;",
    "    long result = 0;\n    long i = 0;\n    while (nums > 0) {\n        result += (nums % 10) * pow(10, i);\n        i++;\n        nums /= 10;\n    }\n    return result;",
    "    long result = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        result = result * 10 + nums[i];\n    }\n    return result;",
    "    int i = 0;\n    long res = 0;\n    while (nums) {\n        res += (nums % 10) * pow(10, i++);\n        nums /= 10;\n    }\n    return res;",
    "    int sum = 0;\n    int i = 0;\n    while (nums > 0) {\n        sum += (nums % 10) * pow(10, i);\n        nums /= 10;\n        i++;\n    }\n    return sum;",
    "    long result = 0;\n    long multiplier = 1;\n    while (nums > 0) {\n        result += (nums % 10) * multiplier;\n        multiplier *= 10;\n        nums /= 10;\n    }\n    return result;",
    "    long result = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        result = result * 10 + nums[i];\n    }\n    return result;",
    "    long result = 0;\n    long multiplier = 1;\n    while (nums > 0) {\n        result += nums % 10 * multiplier;\n        multiplier *= 10;\n        nums /= 10;\n    }\n    return result;",
    "    long result = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        result = result * 10 + nums[i];\n    }\n    return result;",
    "    long result = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        result = result * 10 + nums[i];\n    }\n    return result;",
    "\tlong result = 0;\n\tfor (int i = 0; i < nums.size(); i++) {\n\t\tresult = result * 10 + nums[i];\n\t}\n\treturn result;",
    "    long result = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        result = result * 10 + nums[i];\n    }\n    return result;",
    "    int result = 0;\n    int i = 0;\n    while (nums > 0) {\n        result += (nums % 10) * pow(10, i);\n        nums /= 10;\n        i++;\n    }\n    return result;",
    "    long result = 0;\n    long i = 0;\n    while (nums > 0) {\n        long digit = nums % 10;\n        result += digit * pow(10, i);\n        i++;\n        nums /= 10;\n    }\n    return result;",
    "    long result = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        result += nums[i] * pow(10, nums.size() - i - 1);\n    }\n    return result;",
    "    long result = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        result = result * 10 + nums[i];\n    }\n    return result;",
    "    long result = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        result = result * 10 + nums[i];\n    }\n    return result;",
    "    long result = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        result = result * 10 + nums[i];\n    }\n    return result;",
    "    long res = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        res = res * 10 + nums[i];\n    }\n    return res;",
    "    long result = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        result = result * 10 + nums[i];\n    }\n    return result;",
    "    long result = 0;\n    long multiplier = 1;\n    while (nums) {\n        result += (nums % 10) * multiplier;\n        multiplier *= 10;\n        nums /= 10;\n    }\n    return result;",
    "    int n = nums.size();\n    long res = 0;\n    for (int i = 0; i < n; i++) {\n        res += nums[i] * pow(10, n - i - 1);\n    }\n    return res;",
    "    long sum = 0;\n    long temp = nums;\n    int i = 0;\n    while (temp > 0) {\n        sum += (temp % 10) * pow(10, i);\n        temp /= 10;\n        i++;\n    }\n    return sum;",
    "    long result = 0;\n    int i = 0;\n    while(nums > 0) {\n        result += (nums % 10) * pow(10, i);\n        nums /= 10;\n        i++;\n    }\n    return result;",
    "    long result = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        result = result * 10 + nums[i];\n    }\n    return result;",
    "    long result = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        result = result * 10 + nums[i];\n    }\n    return result;",
    "  long result = 0;\n  for (int i = 0; i < nums.size(); i++) {\n    result = result * 10 + nums[i];\n  }\n  return result;",
    "    long result = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        result = result * 10 + nums[i];\n    }\n    return result;",
    "    long result = 0;\n    long i = 0;\n    while (nums > 0) {\n        result += (nums % 10) * pow(10, i);\n        nums /= 10;\n        i++;\n    }\n    return result;",
    "    long result = 0;\n    long power = 1;\n    while (nums > 0) {\n        result += (nums % 10) * power;\n        power *= 10;\n        nums /= 10;\n    }\n    return result;",
    "    long result = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        result = result * 10 + nums[i];\n    }\n    return result;",
    "    long result = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        result = result * 10 + nums[i];\n    }\n    return result;",
    "    long res = 0;\n    while(nums) {\n        res = res*10 + nums%10;\n        nums /= 10;\n    }\n    return res;",
    "    long result = 0;\n    long multiplier = 1;\n    while (nums > 0) {\n        result += (nums % 10) * multiplier;\n        multiplier *= 10;\n        nums /= 10;\n    }\n    return result;",
    "    long result = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        result = result * 10 + nums[i];\n    }\n    return result;",
    "    long ans = 0;\n    for(int i = 0; i < nums.size(); i++) {\n        ans = ans * 10 + nums[i];\n    }\n    return ans;",
    "    long res = 0;\n    long i = 0;\n    while (nums > 0) {\n        res += (nums % 10) * pow(10, i);\n        nums /= 10;\n        i++;\n    }\n    return res;",
    "    long result = 0;\n    long power = 1;\n    while (nums) {\n        result += (nums % 10) * power;\n        power *= 10;\n        nums /= 10;\n    }\n    return result;",
    "    long result = 0;\n    long multiplier = 1;\n    while (nums > 0) {\n        result += (nums % 10) * multiplier;\n        multiplier *= 10;\n        nums /= 10;\n    }\n    return result;",
    "    long result = 0;\n    long i = 0;\n    while (nums) {\n        result += (nums % 10) * pow(10, i);\n        i++;\n        nums /= 10;\n    }\n    return result;",
    "    long result = 0;\n    long i = 0;\n    while (nums > 0) {\n        result += (nums % 10) * pow(10, i);\n        nums /= 10;\n        i++;\n    }\n    return result;",
    "    int len = nums.size();\n    long num = 0;\n    for (int i = 0; i < len; i++) {\n        num += nums[i] * pow(10, i);\n    }\n    return num;",
    "    long result = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        result = result * 10 + nums[i];\n    }\n    return result;",
    "    long result = 0;\n    long i = 0;\n    while (nums > 0) {\n        result += (nums % 10) * pow(10, i);\n        nums /= 10;\n        i++;\n    }\n    return result;",
    "    long result = 0;\n    for (int i = 0; i < nums.size(); ++i) {\n        result = result * 10 + nums[i];\n    }\n    return result;",
    "    long result = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        result = result * 10 + nums[i];\n    }\n    return result;",
    "    long result = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        result += nums[i] * pow(10, i);\n    }\n    return result;",
    "  long result = 0;\n  for (int i = 0; i < nums.size(); i++) {\n    result = result * 10 + nums[i];\n  }\n  return result;",
    "    long result = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        result += nums[i] * pow(10, nums.size() - i - 1);\n    }\n    return result;",
    "    long res = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        res = res * 10 + nums[i];\n    }\n    return res;",
    "    int i = 0;\n    long result = 0;\n    while (nums) {\n        result += (nums % 10) * pow(10, i);\n        nums /= 10;\n        i++;\n    }\n    return result;",
    "    long result = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        result = result * 10 + nums[i];\n    }\n    return result;",
    "    long result = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        result += nums[i] * pow(10, nums.size() - i - 1);\n    }\n    return result;",
    "    long result = 0;\n    int i = 0;\n    while (nums > 0) {\n        result += (nums % 10) * pow(10, i);\n        i++;\n        nums /= 10;\n    }\n    return result;",
    "    long result = 0;\n    long power = 1;\n    while (nums > 0) {\n        result += nums % 10 * power;\n        power *= 10;\n        nums /= 10;\n    }\n    return result;",
    "    long result = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        result += nums[i] * pow(10, i);\n    }\n    return result;",
    "    long result = 0;\n    int i = 0;\n    while (nums) {\n        result += (nums % 10) * pow(10, i);\n        nums /= 10;\n        i++;\n    }\n    return result;",
    "    long result = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        result = result * 10 + nums[i];\n    }\n    return result;",
    "    long result = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        result = result * 10 + nums[i];\n    }\n    return result;",
    "    long res = 0;\n    while (nums) {\n        res = res * 10 + nums % 10;\n        nums /= 10;\n    }\n    return res;",
    "    long result = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        result = result * 10 + nums[i];\n    }\n    return result;",
    "    int i = 0;\n    long result = 0;\n    while (nums) {\n        result += (nums % 10) * pow(10, i);\n        nums /= 10;\n        i++;\n    }\n    return result;",
    "    long result = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        result = result * 10 + nums[i];\n    }\n    return result;",
    "    long result = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        result = result * 10 + nums[i];\n    }\n    return result;",
    "    long result = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        result = result * 10 + nums[i];\n    }\n    return result;",
    "    long result = 0;\n    long i = 0;\n    while (nums > 0) {\n        result += (nums % 10) * pow(10, i);\n        nums /= 10;\n        i++;\n    }\n    return result;",
    "    long result = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        result = result * 10 + nums[i];\n    }\n    return result;",
    "  long res = 0;\n  for (int i = 0; i < nums.size(); i++) {\n    res = res * 10 + nums[i];\n  }\n  return res;",
    "    long res = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        res = res * 10 + nums[i];\n    }\n    return res;",
    "    long result = 0;\n    int i = 0;\n    while (nums) {\n        result += (nums % 10) * pow(10, i);\n        nums /= 10;\n        i++;\n    }\n    return result;",
    "    long result = 0;\n    long multiplier = 1;\n    while (nums > 0) {\n        result += (nums % 10) * multiplier;\n        multiplier *= 100;\n        nums /= 10;\n    }\n    return result;",
    "    long result = 0;\n    int i = 0;\n    while (nums > 0) {\n        result += (nums % 10) * pow(10, i);\n        nums /= 10;\n        i++;\n    }\n    return result;",
    "    int i = 0;\n    long result = 0;\n    while (nums) {\n        result += (nums % 10) * pow(10, i);\n        nums /= 10;\n        i++;\n    }\n    return result;",
    "    long result = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        result = result * 10 + nums[i];\n    }\n    return result;",
    "    long res = 0;\n    for (int i = 0; i < nums.size(); ++i) {\n        res = res * 10 + nums[i];\n    }\n    return res;",
    "    long result = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        result += nums[i] * pow(10, i);\n    }\n    return result;",
    "    long result = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        result = result * 10 + nums[i];\n    }\n    return result;"
  ]
}
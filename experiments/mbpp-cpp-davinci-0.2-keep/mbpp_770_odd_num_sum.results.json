{
  "name": "mbpp_770_odd_num_sum",
  "language": "cpp",
  "prompt": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_770_odd_num_sum.py",
  "prompt_terminology": "verbatim",
  "tests": "}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "results": [
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for (int i = 1; i <= n; i++) {\n        sum += pow(2*i-1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509951,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for(long i = 1; i <= n; i++) {\n        sum += pow(2*i - 1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509951,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum=0;\n    for(long i=1;i<=n;i++)\n    {\n        sum=sum+pow(2*i-1,4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509951,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        sum += pow(2 * i - 1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509951,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for (int i = 1; i <= n; i++) {\n        sum += pow(2 * i - 1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509951,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        sum += pow(2*i-1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509951,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for(long i = 1; i <= n; i++) {\n        sum += pow(2*i - 1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509951,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for(long i=1;i<=n;i++) {\n        sum += pow(2*i-1,4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509951,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        if (i % 2 != 0) {\n            sum += pow(i, 4);\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509951,
      "stdout": "",
      "stderr": "tmpm2dx9pq0: /tmp/tmpm2dx9pq0.cpp:15: int main(): Assertion `candidate((2)) == (82)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        sum += pow(2 * i - 1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509951,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for(long i = 1; i <= n; i++) {\n        sum += pow(2*i - 1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509951,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        if (i % 2 != 0) {\n            sum += pow(i, 4);\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509951,
      "stdout": "",
      "stderr": "tmpm2dx9pq0: /tmp/tmpm2dx9pq0.cpp:15: int main(): Assertion `candidate((2)) == (82)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        sum += pow(2 * i - 1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509951,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for(long i = 1; i <= n; i++) {\n        sum += pow(2*i - 1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509951,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for(long i = 1; i <= n; i++) {\n        sum += pow(2 * i - 1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509951,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for(long i = 1; i <= n; i++) {\n        sum += pow(2*i-1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509951,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for(long i = 1; i <= n; i++) {\n        sum += pow(2*i-1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509951,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for(long i = 1; i <= n; i++) {\n        sum += pow(2*i-1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509951,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        sum += pow(2 * i - 1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509951,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        if (i % 2 != 0) {\n            sum += pow(i, 4);\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509951,
      "stdout": "",
      "stderr": "tmpm2dx9pq0: /tmp/tmpm2dx9pq0.cpp:15: int main(): Assertion `candidate((2)) == (82)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for(long i = 1; i <= n; i++) {\n        sum += pow(2*i - 1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509951,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum=0;\n    for(long i=1;i<=n;i++){\n        sum+=pow(2*i-1,4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1666122551,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for(long i = 1; i <= n; i++) {\n        sum += pow(2 * i - 1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509951,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for(long i = 1; i <= n; i++) {\n        sum += pow(2*i-1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509951,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for(int i = 1; i <= n; i++) {\n        if(i % 2 != 0) {\n            sum += pow(i, 4);\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1666122551,
      "stdout": "",
      "stderr": "tmpqjw55381: /tmp/tmpqjw55381.cpp:15: int main(): Assertion `candidate((2)) == (82)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        if (i % 2 != 0) {\n            sum += pow(i, 4);\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509951,
      "stdout": "",
      "stderr": "tmpm2dx9pq0: /tmp/tmpm2dx9pq0.cpp:15: int main(): Assertion `candidate((2)) == (82)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for(long i = 1; i <= n; i++) {\n        sum += pow(2*i - 1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509951,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    int sum = 0;\n    for(int i=1; i<=n; i++) {\n        sum += pow(2*i-1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1666122551,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for(int i = 1; i <= n; i++) {\n        sum += pow(2*i - 1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1666122551,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for(long i = 1; i <= n; i++) {\n        sum += pow(2*i-1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509951,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for(long i = 1; i <= n; i++) {\n        sum += pow(2*i - 1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509951,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        sum += pow(2 * i - 1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509951,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for(long i = 1; i <= n; i++) {\n        if(i % 2 != 0) {\n            sum += pow(i, 4);\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1666122551,
      "stdout": "",
      "stderr": "tmpa116x97o: /tmp/tmpa116x97o.cpp:15: int main(): Assertion `candidate((2)) == (82)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        if (i % 2 != 0) {\n            sum += pow(i, 4);\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509951,
      "stdout": "",
      "stderr": "tmpm2dx9pq0: /tmp/tmpm2dx9pq0.cpp:15: int main(): Assertion `candidate((2)) == (82)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for(long i = 1; i <= n; i++) {\n        sum += pow(2*i - 1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509951,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for(long i = 1; i <= n; i++) {\n        sum += pow(2*i - 1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509951,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for(long i = 1; i <= n; i++) {\n        sum += pow(2*i - 1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509951,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for(int i = 1; i <= n; i++) {\n        sum += pow(2*i - 1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1666122551,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for(long i = 1; i <= n; i++) {\n        sum += pow(2*i - 1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509951,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for(long i = 1; i <= n; i++) {\n        if(i % 2 != 0) {\n            sum += pow(i, 4);\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1666122551,
      "stdout": "",
      "stderr": "tmpa116x97o: /tmp/tmpa116x97o.cpp:15: int main(): Assertion `candidate((2)) == (82)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for(long i = 1; i <= n; i++) {\n        sum += pow(2*i-1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509951,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        if (i % 2 != 0) {\n            sum += pow(i, 4);\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509951,
      "stdout": "",
      "stderr": "tmpm2dx9pq0: /tmp/tmpm2dx9pq0.cpp:15: int main(): Assertion `candidate((2)) == (82)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        sum += pow(2 * i - 1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509951,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    // Write your code here\n    long sum = 0;\n    long i = 1;\n    while(n--) {\n        sum += pow(i, 4);\n        i += 2;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1666122551,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for(long i = 1; i <= n; i++) {\n        if(i % 2 != 0) {\n            sum += pow(i, 4);\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1666122551,
      "stdout": "",
      "stderr": "tmpa116x97o: /tmp/tmpa116x97o.cpp:15: int main(): Assertion `candidate((2)) == (82)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    // Write your code here\n    long sum=0;\n    for(int i=1;i<=n;i++)\n    {\n        sum=sum+(pow(2*i-1,4));\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1666122551,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for(long i = 1; i <= n; i++) {\n        if(i % 2 != 0) {\n            sum = sum + pow(i, 4);\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1666122551,
      "stdout": "",
      "stderr": "tmpzaon3os7: /tmp/tmpzaon3os7.cpp:15: int main(): Assertion `candidate((2)) == (82)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for(long i = 1; i <= n; i++) {\n        sum += pow(2*i - 1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509951,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for(long i = 1; i <= n; i++) {\n        sum += pow(2*i-1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509951,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        sum += pow(2 * i - 1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509951,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for(long i = 1; i <= n; i++) {\n        sum += pow(2*i - 1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509951,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for(long i=1; i<=n; i++) {\n        sum += pow(2*i-1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1666122551,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for(long i = 1; i <= n; i++) {\n        sum += pow(2*i-1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509951,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for(int i=1; i<=n; i++) {\n        if(i%2 != 0) {\n            sum += pow(i, 4);\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1666122551,
      "stdout": "",
      "stderr": "tmptpvh3gsr: /tmp/tmptpvh3gsr.cpp:15: int main(): Assertion `candidate((2)) == (82)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for(long i = 1; i <= n; i++) {\n        sum += pow(2*i - 1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509951,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for(long i = 1; i <= n; i++) {\n        sum += pow(2*i - 1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509951,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for(int i=1; i<=n; i++) {\n        sum += pow(2*i-1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1666122551,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for(int i = 1; i <= n; i++) {\n        sum += pow(2*i-1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1666122551,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n  int i;\n  long sum=0;\n  for(i=1;i<=n;i++)\n  {\n    if(i%2!=0)\n    {\n      sum=sum+pow(i,4);\n    }\n  }\n  return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1666122551,
      "stdout": "",
      "stderr": "tmpdx6zoan7: /tmp/tmpdx6zoan7.cpp:18: int main(): Assertion `candidate((2)) == (82)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        sum += pow(2*i - 1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1666122551,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for(long i = 1; i <= n; i++) {\n        if(i % 2 != 0) {\n            sum += pow(i, 4);\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1666122551,
      "stdout": "",
      "stderr": "tmpa116x97o: /tmp/tmpa116x97o.cpp:15: int main(): Assertion `candidate((2)) == (82)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for(long i = 1; i <= n; i++) {\n        sum += pow(2*i - 1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509951,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for(long i = 1; i <= n; i++) {\n        sum += pow(2*i-1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509951,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum=0;\n    for(long i=1;i<=n;i++)\n    {\n        sum=sum+pow(2*i-1,4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509951,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for(long i = 1; i <= n; i++) {\n        if(i % 2 != 0) {\n            sum += pow(i, 4);\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1666122551,
      "stdout": "",
      "stderr": "tmpa116x97o: /tmp/tmpa116x97o.cpp:15: int main(): Assertion `candidate((2)) == (82)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for (int i = 1; i <= n; i++) {\n        if (i % 2 != 0) {\n            sum += pow(i, 4);\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1666122551,
      "stdout": "",
      "stderr": "tmp8eqwa_1z: /tmp/tmp8eqwa_1z.cpp:15: int main(): Assertion `candidate((2)) == (82)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for(long i=1;i<=n;i++) {\n        sum += pow(2*i-1,4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509951,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for(int i = 1; i <= n; i++) {\n        sum += pow(2*i - 1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1666122551,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        if (i % 2 != 0) {\n            sum += pow(i, 4);\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509951,
      "stdout": "",
      "stderr": "tmpm2dx9pq0: /tmp/tmpm2dx9pq0.cpp:15: int main(): Assertion `candidate((2)) == (82)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        if (i % 2 != 0) {\n            sum += pow(i, 4);\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509951,
      "stdout": "",
      "stderr": "tmpm2dx9pq0: /tmp/tmpm2dx9pq0.cpp:15: int main(): Assertion `candidate((2)) == (82)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for(long i = 1; i <= n; i++) {\n        if(i % 2 != 0) {\n            sum += pow(i, 4);\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1666122551,
      "stdout": "",
      "stderr": "tmpa116x97o: /tmp/tmpa116x97o.cpp:15: int main(): Assertion `candidate((2)) == (82)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for(int i = 1; i <= n; i++) {\n        if(i % 2 != 0) {\n            sum += pow(i, 4);\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1666122551,
      "stdout": "",
      "stderr": "tmpqjw55381: /tmp/tmpqjw55381.cpp:15: int main(): Assertion `candidate((2)) == (82)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for(int i=1;i<=n;i++) {\n        sum += pow(2*i-1,4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1666122551,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for (int i = 1; i <= n; i++) {\n        sum += pow(2 * i - 1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509951,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for(int i = 1; i <= n; i++) {\n        if(i % 2 != 0) {\n            sum += pow(i, 4);\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1666122551,
      "stdout": "",
      "stderr": "tmpqjw55381: /tmp/tmpqjw55381.cpp:15: int main(): Assertion `candidate((2)) == (82)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for(long i=1;i<=n;i++) {\n        sum += pow(2*i-1,4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509951,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    // Write your code here\n    long sum=0;\n    for(int i=1;i<=n;i++)\n    {\n        if(i%2!=0)\n        {\n            sum=sum+pow(i,4);\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1666122551,
      "stdout": "",
      "stderr": "tmpao8_89et: /tmp/tmpao8_89et.cpp:18: int main(): Assertion `candidate((2)) == (82)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for(long i = 1; i <= n; i++) {\n        sum += pow(2 * i - 1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509951,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for(long i = 1; i <= n; i++) {\n        sum += pow(2 * i - 1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509951,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for(int i=1;i<=n;i++) {\n        if(i%2!=0) {\n            sum += pow(i,4);\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1666122551,
      "stdout": "",
      "stderr": "tmp8lw3jxi9: /tmp/tmp8lw3jxi9.cpp:15: int main(): Assertion `candidate((2)) == (82)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for(long i = 1; i <= n; i++) {\n        sum += pow(2*i - 1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509951,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for(int i = 1; i <= n; i++) {\n        sum += pow(2 * i - 1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1666122551,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for(long i = 1; i <= n; i++) {\n        sum += pow(2*i - 1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509951,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        if (i % 2 != 0) {\n            sum += pow(i, 4);\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509951,
      "stdout": "",
      "stderr": "tmpm2dx9pq0: /tmp/tmpm2dx9pq0.cpp:15: int main(): Assertion `candidate((2)) == (82)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for(long i = 1; i <= n; i++) {\n        sum += pow(2*i-1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509951,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for(long i = 1; i <= n; i++) {\n        sum += pow(2*i-1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509951,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for(long i=1;i<=n;i++) {\n        sum += pow(2*i-1,4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509951,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum=0;\n    for(long i=1;i<=n;i++)\n    {\n        if(i%2!=0)\n        {\n            sum=sum+(i*i*i*i);\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1666122551,
      "stdout": "",
      "stderr": "tmp2zy72zk4: /tmp/tmp2zy72zk4.cpp:17: int main(): Assertion `candidate((2)) == (82)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for(long i = 1; i <= n; i++) {\n        sum += pow(2*i - 1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509951,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for(int i = 1; i <= n; i++) {\n        sum += pow(2*i - 1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1666122551,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for(long i=1; i<=n; i++) {\n        if(i%2 != 0) {\n            sum += pow(i, 4);\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1666122551,
      "stdout": "",
      "stderr": "tmpnwsl_e27: /tmp/tmpnwsl_e27.cpp:15: int main(): Assertion `candidate((2)) == (82)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for(long i = 1; i <= n; i++) {\n        sum += pow(2*i - 1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509951,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for(long i = 1; i <= n; i++) {\n        sum += pow(2*i - 1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509951,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for(long i = 1; i <= n; i++) {\n        sum += pow(2*i - 1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509951,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for(long i = 1; i <= n; i++) {\n        if(i % 2 != 0) {\n            sum += pow(i, 4);\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1666122551,
      "stdout": "",
      "stderr": "tmpa116x97o: /tmp/tmpa116x97o.cpp:15: int main(): Assertion `candidate((2)) == (82)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for(long i = 1; i <= n; i++) {\n        sum += pow(2*i-1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509951,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for(int i = 1; i <= n; i++) {\n        sum += pow(2*i - 1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1666122551,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for(long i = 1; i <= n; i++) {\n        sum += pow(2*i-1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509951,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        if (i % 2 != 0) {\n            sum += pow(i, 4);\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509951,
      "stdout": "",
      "stderr": "tmpm2dx9pq0: /tmp/tmpm2dx9pq0.cpp:15: int main(): Assertion `candidate((2)) == (82)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for(long i = 1; i <= n; i++) {\n        if(i % 2 != 0) {\n            sum += pow(i, 4);\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1666122551,
      "stdout": "",
      "stderr": "tmpa116x97o: /tmp/tmpa116x97o.cpp:15: int main(): Assertion `candidate((2)) == (82)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        sum += pow(2 * i - 1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509951,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for(long i = 1; i <= n; i++) {\n        if(i % 2 != 0) {\n            sum += pow(i, 4);\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1666122551,
      "stdout": "",
      "stderr": "tmpa116x97o: /tmp/tmpa116x97o.cpp:15: int main(): Assertion `candidate((2)) == (82)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    // Write your code here\n    long sum=0;\n    for(int i=1;i<=n;i++)\n    {\n        sum=sum+pow(2*i-1,4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1666122551,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum=0;\n    for(int i=1;i<=n;i++)\n    {\n        sum+=pow(2*i-1,4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1666122551,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for(long i = 1; i <= n; i++) {\n        sum += pow(2*i-1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509951,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for(int i = 1; i <= n; i++) {\n        if(i % 2 != 0) {\n            sum += pow(i, 4);\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1666122551,
      "stdout": "",
      "stderr": "tmpqjw55381: /tmp/tmpqjw55381.cpp:15: int main(): Assertion `candidate((2)) == (82)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n\tlong sum = 0;\n\tfor (int i = 1; i <= n; i++) {\n\t\tsum += pow(2 * i - 1, 4);\n\t}\n\treturn sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1666122553,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for(long i = 1; i <= n; i++) {\n        if(i % 2 != 0) {\n            sum += pow(i, 4);\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1666122551,
      "stdout": "",
      "stderr": "tmpa116x97o: /tmp/tmpa116x97o.cpp:15: int main(): Assertion `candidate((2)) == (82)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for(long i = 1; i <= n; i++) {\n        sum += pow(2*i - 1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509951,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for(long i = 1; i <= n; i++) {\n        if(i % 2 != 0) {\n            sum += pow(i, 4);\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1666122551,
      "stdout": "",
      "stderr": "tmpa116x97o: /tmp/tmpa116x97o.cpp:15: int main(): Assertion `candidate((2)) == (82)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        sum += pow(2 * i - 1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509951,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for(long i = 1; i <= n; i++) {\n        sum += pow(2 * i - 1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509951,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for(long i = 1; i <= n; i++) {\n        sum += pow(2*i-1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509951,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for(long i=1;i<=n;i++) {\n        sum += pow(2*i-1,4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509951,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for(long i = 1; i <= n; i++) {\n        sum += pow(2*i-1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509951,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        sum += pow(2 * i - 1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509951,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for(long i = 1; i <= n; i++) {\n        sum += pow(2 * i - 1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509951,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for(long i = 1; i <= n; i++) {\n        sum += pow(2*i - 1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509951,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for (int i = 1; i <= n; i++) {\n        sum += pow(2 * i - 1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509951,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for(long i = 1; i <= n; i++) {\n        sum += pow(2*i-1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509951,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for(int i = 1; i <= n; i++) {\n        sum += pow(2*i-1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1666122551,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for(long i = 1; i <= n; i++) {\n        sum += pow(2*i - 1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509951,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for(int i = 1; i <= n; i++) {\n        sum += pow(2*i-1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1666122551,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for(long i = 1; i <= n; i++) {\n        sum += pow(2*i-1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509951,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for(long i = 1; i <= n; i++) {\n        sum += pow(2*i - 1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509951,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for(long i = 1; i <= n; i++) {\n        sum += pow(2 * i - 1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509951,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for(long i = 1; i <= n; i++) {\n        if(i % 2 != 0) {\n            sum += pow(i, 4);\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1666122551,
      "stdout": "",
      "stderr": "tmpa116x97o: /tmp/tmpa116x97o.cpp:15: int main(): Assertion `candidate((2)) == (82)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for(long i = 1; i <= n; i++) {\n        sum += pow(2 * i - 1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509951,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for (int i = 1; i <= n; i++) {\n        sum += pow(2 * i - 1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509951,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        if (i % 2 != 0) {\n            sum += pow(i, 4);\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509951,
      "stdout": "",
      "stderr": "tmpm2dx9pq0: /tmp/tmpm2dx9pq0.cpp:15: int main(): Assertion `candidate((2)) == (82)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for(int i = 1; i <= n; i++) {\n        sum += pow(2*i - 1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1666122551,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for(long i = 1; i <= n; i++) {\n        sum += pow(2*i - 1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509951,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for(long i = 1; i <= n; i++) {\n        sum += pow(2*i - 1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509951,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum=0;\n    for(int i=1;i<=n;i++){\n        if(i%2!=0){\n            sum+=pow(i,4);\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1666122552,
      "stdout": "",
      "stderr": "tmp3kheq94l: /tmp/tmp3kheq94l.cpp:15: int main(): Assertion `candidate((2)) == (82)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        if (i % 2 != 0) {\n            sum += pow(i, 4);\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509951,
      "stdout": "",
      "stderr": "tmpm2dx9pq0: /tmp/tmpm2dx9pq0.cpp:15: int main(): Assertion `candidate((2)) == (82)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        sum += pow(2 * i - 1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509951,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for(long i = 1; i <= n; i++) {\n        sum += pow(2 * i - 1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509951,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    int sum = 0;\n    for (int i = 1; i <= n; i++) {\n        sum += pow(2*i-1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1666122552,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for(long i = 1; i <= n; i++) {\n        sum += pow(2*i - 1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509951,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for(long i = 1; i <= n; i++) {\n        sum += pow(2*i - 1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509951,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum=0;\n    for(int i=1;i<=n;i++)\n    {\n        if(i%2!=0)\n        {\n            sum=sum+pow(i,4);\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1666122552,
      "stdout": "",
      "stderr": "tmp8xej7zz0: /tmp/tmp8xej7zz0.cpp:17: int main(): Assertion `candidate((2)) == (82)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        sum += pow(2 * i - 1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509951,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for(long i=1;i<=n;i++) {\n        sum += pow(2*i-1,4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509951,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for(long i = 1; i <= n; i++) {\n        sum += pow(2*i-1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509951,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for(int i = 1; i <= n; i++) {\n        sum += pow(2*i-1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1666122551,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for (int i = 1; i <= n; i++) {\n        sum += pow(2 * i - 1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509951,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for(long i = 1; i <= n; i++) {\n        sum += pow(2*i - 1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509951,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for(long i = 1; i <= n; i++) {\n        sum += pow(2*i - 1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509951,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for(long i = 1; i <= n; i++) {\n        if(i % 2 != 0) {\n            sum += pow(i, 4);\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1666122551,
      "stdout": "",
      "stderr": "tmpa116x97o: /tmp/tmpa116x97o.cpp:15: int main(): Assertion `candidate((2)) == (82)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for(long i = 1; i <= n; i++) {\n        sum += pow(2*i - 1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509951,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    // Write your code here\n    long sum=0;\n    for(int i=1;i<=n;i++){\n        sum+=pow(2*i-1,4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1666122552,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        sum += pow(2*i-1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509951,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for (int i = 1; i <= n; i++) {\n        sum += pow(2 * i - 1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509951,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum=0;\n    for(long i=1;i<=n;i++)\n    {\n        sum=sum+pow(2*i-1,4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509951,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        if (i % 2 != 0) {\n            sum += pow(i, 4);\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509951,
      "stdout": "",
      "stderr": "tmpm2dx9pq0: /tmp/tmpm2dx9pq0.cpp:15: int main(): Assertion `candidate((2)) == (82)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for(long i = 1; i <= n; i++) {\n        sum += pow(2*i - 1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509951,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    assert(n>=0);\n    long sum = 0;\n    for(long i=1; i<=n; i++) {\n        sum += pow(2*i-1,4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1666122552,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for(int i=1;i<=n;i++) {\n        if(i%2!=0) {\n            sum += pow(i,4);\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1666122551,
      "stdout": "",
      "stderr": "tmp8lw3jxi9: /tmp/tmp8lw3jxi9.cpp:15: int main(): Assertion `candidate((2)) == (82)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        sum += pow(2 * i - 1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509951,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for(int i = 1; i <= n; i++) {\n        sum += pow(2*i - 1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1666122551,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum=0;\n    for(int i=1;i<=n;i++){\n        sum+=pow(2*i-1,4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1666122552,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n\tlong sum = 0;\n\tfor (long i = 1; i <= n; i++) {\n\t\tif (i % 2 != 0) {\n\t\t\tsum += pow(i, 4);\n\t\t}\n\t}\n\treturn sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1666122552,
      "stdout": "",
      "stderr": "tmp9lse5h61: /tmp/tmp9lse5h61.cpp:15: int main(): Assertion `candidate((2)) == (82)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for(int i = 1; i <= n; i++) {\n        sum += pow(2*i-1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1666122551,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        sum += pow(2 * i - 1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509951,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for(long i=1;i<=n;i++) {\n        sum += pow(2*i-1,4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509951,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for(long i = 1; i <= n; i++) {\n        sum += pow(2*i - 1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509951,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for(long i = 1; i <= n; i++) {\n        sum += pow(2*i - 1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509951,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n\tlong sum=0;\n\tfor(long i=1;i<=n;i++)\n\t{\n\t\tif(i%2!=0)\n\t\t{\n\t\t\tsum+=pow(i,4);\n\t\t}\n\t}\n\treturn sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1666122552,
      "stdout": "",
      "stderr": "tmpdq3aa23h: /tmp/tmpdq3aa23h.cpp:17: int main(): Assertion `candidate((2)) == (82)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for(long i = 1; i <= n; i++) {\n        if(i % 2 != 0) {\n            sum += pow(i, 4);\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1666122551,
      "stdout": "",
      "stderr": "tmpa116x97o: /tmp/tmpa116x97o.cpp:15: int main(): Assertion `candidate((2)) == (82)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum=0;\n    for(long i=1;i<=n;i++)\n    {\n        if(i%2!=0)\n        {\n            sum=sum+pow(i,4);\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1666122553,
      "stdout": "",
      "stderr": "tmp3ap00xoh: /tmp/tmp3ap00xoh.cpp:17: int main(): Assertion `candidate((2)) == (82)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for(int i = 1; i <= n; i++) {\n        sum += pow(2*i - 1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1666122551,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for(long i = 1; i <= n; i++) {\n        sum += pow(2*i - 1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509951,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n\tlong sum = 0;\n\tfor (int i = 1; i <= n; i++) {\n\t\tif (i % 2 != 0) {\n\t\t\tsum += pow(i, 4);\n\t\t}\n\t}\n\treturn sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1666122552,
      "stdout": "",
      "stderr": "tmpxvq5yi03: /tmp/tmpxvq5yi03.cpp:15: int main(): Assertion `candidate((2)) == (82)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for(long i = 1; i <= n; i++) {\n        sum += pow(2*i-1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509951,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        sum += pow(2 * i - 1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509951,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum=0;\n    for(long i=1;i<=n;i++)\n    {\n        sum+=pow(2*i-1,4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1666122552,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        sum += pow(2 * i - 1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509951,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        sum += pow(2 * i - 1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509951,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for(int i = 1; i <= n; i++) {\n        sum += pow(2*i - 1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1666122551,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for(int i = 1; i <= n; i++) {\n        if(i % 2 != 0) {\n            sum += pow(i, 4);\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1666122551,
      "stdout": "",
      "stderr": "tmpqjw55381: /tmp/tmpqjw55381.cpp:15: int main(): Assertion `candidate((2)) == (82)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for(long i = 1; i <= n; i++) {\n        if(i % 2 != 0) {\n            sum += pow(i, 4);\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1666122551,
      "stdout": "",
      "stderr": "tmpa116x97o: /tmp/tmpa116x97o.cpp:15: int main(): Assertion `candidate((2)) == (82)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        sum += pow(2 * i - 1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509951,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for(long i = 1; i <= n; i++) {\n        sum += pow(2*i-1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509951,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for(int i = 1; i <= n; i++) {\n        sum += pow(2*i - 1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1666122551,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        if (i % 2 != 0) {\n            sum += pow(i, 4);\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509951,
      "stdout": "",
      "stderr": "tmpm2dx9pq0: /tmp/tmpm2dx9pq0.cpp:15: int main(): Assertion `candidate((2)) == (82)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        if (i % 2 != 0) {\n            sum += pow(i, 4);\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509951,
      "stdout": "",
      "stderr": "tmpm2dx9pq0: /tmp/tmpm2dx9pq0.cpp:15: int main(): Assertion `candidate((2)) == (82)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for(long i = 1; i <= n; i++) {\n        sum += pow(2*i - 1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509951,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        if (i % 2 != 0) {\n            sum += pow(i, 4);\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509951,
      "stdout": "",
      "stderr": "tmpm2dx9pq0: /tmp/tmpm2dx9pq0.cpp:15: int main(): Assertion `candidate((2)) == (82)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for(long i = 1; i <= n; i++) {\n        sum += pow(2*i-1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509951,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        if (i % 2 != 0) {\n            sum += pow(i, 4);\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509951,
      "stdout": "",
      "stderr": "tmpm2dx9pq0: /tmp/tmpm2dx9pq0.cpp:15: int main(): Assertion `candidate((2)) == (82)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for(long i=1;i<=n;i++) {\n        if(i%2!=0) {\n            sum += pow(i,4);\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1666122552,
      "stdout": "",
      "stderr": "tmpcweyqslc: /tmp/tmpcweyqslc.cpp:15: int main(): Assertion `candidate((2)) == (82)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for(long i = 1; i <= n; i++) {\n        sum += pow(2 * i - 1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509951,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for(int i = 1; i <= n; i++) {\n        sum += pow(2*i - 1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1666122551,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for(long i = 1; i <= n; i++) {\n        sum += pow(2*i - 1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509951,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for(long i = 1; i <= n; i++) {\n        sum += pow(2*i-1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509951,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        if (i % 2 != 0) {\n            sum += pow(i, 4);\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509951,
      "stdout": "",
      "stderr": "tmpm2dx9pq0: /tmp/tmpm2dx9pq0.cpp:15: int main(): Assertion `candidate((2)) == (82)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for(long i = 1; i <= n; i++) {\n        if(i % 2 != 0) {\n            sum += pow(i, 4);\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1666122551,
      "stdout": "",
      "stderr": "tmpa116x97o: /tmp/tmpa116x97o.cpp:15: int main(): Assertion `candidate((2)) == (82)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum=0;\n    for(long i=1;i<=n;i++)\n    {\n        if(i%2!=0)\n        {\n            sum=sum+pow(i,4);\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1666122553,
      "stdout": "",
      "stderr": "tmp3ap00xoh: /tmp/tmp3ap00xoh.cpp:17: int main(): Assertion `candidate((2)) == (82)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for(long i = 1; i <= n; i++) {\n        sum += pow(2 * i - 1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509951,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the sum of fourth power of first n odd natural numbers.\nlong odd_num_sum(long n) {\n    long sum = 0;\n    for(long i = 1; i <= n; i++) {\n        sum += pow(2*i - 1, 4);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = odd_num_sum;\n    assert(candidate((2)) == (82));\n    assert(candidate((3)) == (707));\n    assert(candidate((4)) == (3108));\n}\n",
      "timestamp": 1665509951,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
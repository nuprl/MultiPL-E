{
  "name": "mbpp_297_flatten_list",
  "language": "cpp",
  "prompt": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to flatten a given nested list structure.\nstd::vector<long> flatten_list(std::any list1) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_297_flatten_list.py",
  "prompt_terminology": "verbatim",
  "tests": "}\nint main() {\n    auto candidate = flatten_list;\n    assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)40}), (std::vector<long>)std::vector<long>({(long)30, (long)56, (long)25}), (std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)33}), (std::vector<long>)std::vector<long>({(long)40})}))) == (std::vector<long>({(long)10, (long)20, (long)40, (long)30, (long)56, (long)25, (long)10, (long)20, (long)33, (long)40})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)1, (long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)10, (long)11, (long)12}), (std::vector<long>)std::vector<long>({(long)7, (long)8, (long)9})}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)10, (long)11, (long)12, (long)7, (long)8, (long)9})));\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "results": [
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to flatten a given nested list structure.\nstd::vector<long> flatten_list(std::any list1) {\n    std::vector<long> result;\n    if (list1.type() == typeid(long)) {\n        result.push_back(std::any_cast<long>(list1));\n    } else {\n        std::vector<std::any> list = std::any_cast<std::vector<std::any>>(list1);\n        for (auto element : list) {\n            std::vector<long> temp = flatten_list(element);\n            result.insert(result.end(), temp.begin(), temp.end());\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = flatten_list;\n    assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)40}), (std::vector<long>)std::vector<long>({(long)30, (long)56, (long)25}), (std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)33}), (std::vector<long>)std::vector<long>({(long)40})}))) == (std::vector<long>({(long)10, (long)20, (long)40, (long)30, (long)56, (long)25, (long)10, (long)20, (long)33, (long)40})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)1, (long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)10, (long)11, (long)12}), (std::vector<long>)std::vector<long>({(long)7, (long)8, (long)9})}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)10, (long)11, (long)12, (long)7, (long)8, (long)9})));\n}\n",
      "timestamp": 1665517687,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmppbi15mq9.cpp:2:\n/tmp/tmppbi15mq9.cpp: In function \u2018int main()\u2019:\n/tmp/tmppbi15mq9.cpp:19:203: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   19 |     assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n      |                                                                                                                                                                                                           ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmppbi15mq9.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmppbi15mq9.cpp:2:\n/tmp/tmppbi15mq9.cpp:19:203: note:  ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to flatten a given nested list structure.\nstd::vector<long> flatten_list(std::any list1) {\n    std::vector<long> result;\n    if (list1.type() == typeid(long)) {\n        result.push_back(std::any_cast<long>(list1));\n    } else {\n        std::vector<std::any> list = std::any_cast<std::vector<std::any>>(list1);\n        for (auto i : list) {\n            std::vector<long> temp = flatten_list(i);\n            result.insert(result.end(), temp.begin(), temp.end());\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = flatten_list;\n    assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)40}), (std::vector<long>)std::vector<long>({(long)30, (long)56, (long)25}), (std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)33}), (std::vector<long>)std::vector<long>({(long)40})}))) == (std::vector<long>({(long)10, (long)20, (long)40, (long)30, (long)56, (long)25, (long)10, (long)20, (long)33, (long)40})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)1, (long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)10, (long)11, (long)12}), (std::vector<long>)std::vector<long>({(long)7, (long)8, (long)9})}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)10, (long)11, (long)12, (long)7, (long)8, (long)9})));\n}\n",
      "timestamp": 1665517687,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpkj59rete.cpp:2:\n/tmp/tmpkj59rete.cpp: In function \u2018int main()\u2019:\n/tmp/tmpkj59rete.cpp:19:203: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   19 |     assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n      |                                                                                                                                                                                                           ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpkj59rete.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpkj59rete.cpp:2:\n/tmp/tmpkj59rete.cpp:19:203: note:  ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to flatten a given nested list structure.\nstd::vector<long> flatten_list(std::any list1) {\n    std::vector<long> result;\n    if(list1.type() == typeid(std::vector<std::any>)) {\n        std::vector<std::any> list = std::any_cast<std::vector<std::any>>(list1);\n        for(auto it = list.begin(); it != list.end(); it++) {\n            std::vector<long> temp = flatten_list(*it);\n            for(auto it1 = temp.begin(); it1 != temp.end(); it1++) {\n                result.push_back(*it1);\n            }\n        }\n    }\n    else {\n        result.push_back(std::any_cast<long>(list1));\n    }\n    return result;\n}\nint main() {\n    auto candidate = flatten_list;\n    assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)40}), (std::vector<long>)std::vector<long>({(long)30, (long)56, (long)25}), (std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)33}), (std::vector<long>)std::vector<long>({(long)40})}))) == (std::vector<long>({(long)10, (long)20, (long)40, (long)30, (long)56, (long)25, (long)10, (long)20, (long)33, (long)40})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)1, (long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)10, (long)11, (long)12}), (std::vector<long>)std::vector<long>({(long)7, (long)8, (long)9})}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)10, (long)11, (long)12, (long)7, (long)8, (long)9})));\n}\n",
      "timestamp": 1665517687,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpv91g7ngj.cpp:2:\n/tmp/tmpv91g7ngj.cpp: In function \u2018int main()\u2019:\n/tmp/tmpv91g7ngj.cpp:22:203: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   22 |     assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n      |                                                                                                                                                                                                           ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpv91g7ngj.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpv91g7ngj.cpp:2:\n/tmp/tmpv91g7ngj.cpp:22:203: note:  ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to flatten a given nested list structure.\nstd::vector<long> flatten_list(std::any list1) {\n  std::vector<long> result;\n  if (list1.type() == typeid(std::vector<std::any>)) {\n    for (auto &i : std::any_cast<std::vector<std::any>>(list1)) {\n      auto temp = flatten_list(i);\n      result.insert(result.end(), temp.begin(), temp.end());\n    }\n  } else {\n    result.push_back(std::any_cast<long>(list1));\n  }\n  return result;\n}\nint main() {\n    auto candidate = flatten_list;\n    assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)40}), (std::vector<long>)std::vector<long>({(long)30, (long)56, (long)25}), (std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)33}), (std::vector<long>)std::vector<long>({(long)40})}))) == (std::vector<long>({(long)10, (long)20, (long)40, (long)30, (long)56, (long)25, (long)10, (long)20, (long)33, (long)40})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)1, (long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)10, (long)11, (long)12}), (std::vector<long>)std::vector<long>({(long)7, (long)8, (long)9})}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)10, (long)11, (long)12, (long)7, (long)8, (long)9})));\n}\n",
      "timestamp": 1665517687,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp6x1ev6o6.cpp:2:\n/tmp/tmp6x1ev6o6.cpp: In function \u2018int main()\u2019:\n/tmp/tmp6x1ev6o6.cpp:18:203: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   18 |     assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n      |                                                                                                                                                                                                           ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmp6x1ev6o6.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp6x1ev6o6.cpp:2:\n/tmp/tmp6x1ev6o6.cpp:18:203: note:  ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to flatten a given nested list structure.\nstd::vector<long> flatten_list(std::any list1) {\n    std::vector<long> result;\n    if(list1.type() == typeid(std::vector<std::any>)) {\n        std::vector<std::any> list = std::any_cast<std::vector<std::any>>(list1);\n        for(auto i : list) {\n            std::vector<long> temp = flatten_list(i);\n            result.insert(result.end(), temp.begin(), temp.end());\n        }\n    }\n    else {\n        result.push_back(std::any_cast<long>(list1));\n    }\n    return result;\n}\nint main() {\n    auto candidate = flatten_list;\n    assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)40}), (std::vector<long>)std::vector<long>({(long)30, (long)56, (long)25}), (std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)33}), (std::vector<long>)std::vector<long>({(long)40})}))) == (std::vector<long>({(long)10, (long)20, (long)40, (long)30, (long)56, (long)25, (long)10, (long)20, (long)33, (long)40})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)1, (long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)10, (long)11, (long)12}), (std::vector<long>)std::vector<long>({(long)7, (long)8, (long)9})}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)10, (long)11, (long)12, (long)7, (long)8, (long)9})));\n}\n",
      "timestamp": 1665517687,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp18755apd.cpp:2:\n/tmp/tmp18755apd.cpp: In function \u2018int main()\u2019:\n/tmp/tmp18755apd.cpp:20:203: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   20 |     assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n      |                                                                                                                                                                                                           ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmp18755apd.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp18755apd.cpp:2:\n/tmp/tmp18755apd.cpp:20:203: note:  ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to flatten a given nested list structure.\nstd::vector<long> flatten_list(std::any list1) {\n    std::vector<long> result;\n    if (list1.type() == typeid(long)) {\n        result.push_back(std::any_cast<long>(list1));\n        return result;\n    }\n    std::vector<std::any> list = std::any_cast<std::vector<std::any>>(list1);\n    for (auto item : list) {\n        std::vector<long> temp = flatten_list(item);\n        result.insert(result.end(), temp.begin(), temp.end());\n    }\n    return result;\n}\nint main() {\n    auto candidate = flatten_list;\n    assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)40}), (std::vector<long>)std::vector<long>({(long)30, (long)56, (long)25}), (std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)33}), (std::vector<long>)std::vector<long>({(long)40})}))) == (std::vector<long>({(long)10, (long)20, (long)40, (long)30, (long)56, (long)25, (long)10, (long)20, (long)33, (long)40})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)1, (long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)10, (long)11, (long)12}), (std::vector<long>)std::vector<long>({(long)7, (long)8, (long)9})}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)10, (long)11, (long)12, (long)7, (long)8, (long)9})));\n}\n",
      "timestamp": 1665517687,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpt0yrcuw7.cpp:2:\n/tmp/tmpt0yrcuw7.cpp: In function \u2018int main()\u2019:\n/tmp/tmpt0yrcuw7.cpp:19:203: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   19 |     assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n      |                                                                                                                                                                                                           ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpt0yrcuw7.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpt0yrcuw7.cpp:2:\n/tmp/tmpt0yrcuw7.cpp:19:203: note:  ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to flatten a given nested list structure.\nstd::vector<long> flatten_list(std::any list1) {\n    std::vector<long> result;\n    std::vector<std::any> list = std::any_cast<std::vector<std::any>>(list1);\n    for (auto element : list) {\n        if (element.type() == typeid(long)) {\n            result.push_back(std::any_cast<long>(element));\n        } else {\n            std::vector<long> temp = flatten_list(element);\n            result.insert(result.end(), temp.begin(), temp.end());\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = flatten_list;\n    assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)40}), (std::vector<long>)std::vector<long>({(long)30, (long)56, (long)25}), (std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)33}), (std::vector<long>)std::vector<long>({(long)40})}))) == (std::vector<long>({(long)10, (long)20, (long)40, (long)30, (long)56, (long)25, (long)10, (long)20, (long)33, (long)40})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)1, (long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)10, (long)11, (long)12}), (std::vector<long>)std::vector<long>({(long)7, (long)8, (long)9})}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)10, (long)11, (long)12, (long)7, (long)8, (long)9})));\n}\n",
      "timestamp": 1665517687,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpid1zo85f.cpp:2:\n/tmp/tmpid1zo85f.cpp: In function \u2018int main()\u2019:\n/tmp/tmpid1zo85f.cpp:19:203: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   19 |     assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n      |                                                                                                                                                                                                           ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpid1zo85f.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpid1zo85f.cpp:2:\n/tmp/tmpid1zo85f.cpp:19:203: note:  ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to flatten a given nested list structure.\nstd::vector<long> flatten_list(std::any list1) {\n    std::vector<long> result;\n    if (list1.type() == typeid(std::vector<long>)) {\n        std::vector<long> list = std::any_cast<std::vector<long>>(list1);\n        for (auto i : list) {\n            result.push_back(i);\n        }\n    } else if (list1.type() == typeid(std::vector<std::any>)) {\n        std::vector<std::any> list = std::any_cast<std::vector<std::any>>(list1);\n        for (auto i : list) {\n            std::vector<long> temp = flatten_list(i);\n            for (auto j : temp) {\n                result.push_back(j);\n            }\n        }\n    } else {\n        result.push_back(std::any_cast<long>(list1));\n    }\n    return result;\n}\nint main() {\n    auto candidate = flatten_list;\n    assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)40}), (std::vector<long>)std::vector<long>({(long)30, (long)56, (long)25}), (std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)33}), (std::vector<long>)std::vector<long>({(long)40})}))) == (std::vector<long>({(long)10, (long)20, (long)40, (long)30, (long)56, (long)25, (long)10, (long)20, (long)33, (long)40})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)1, (long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)10, (long)11, (long)12}), (std::vector<long>)std::vector<long>({(long)7, (long)8, (long)9})}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)10, (long)11, (long)12, (long)7, (long)8, (long)9})));\n}\n",
      "timestamp": 1665517687,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpfbw561b9.cpp:2:\n/tmp/tmpfbw561b9.cpp: In function \u2018int main()\u2019:\n/tmp/tmpfbw561b9.cpp:26:203: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   26 |     assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n      |                                                                                                                                                                                                           ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpfbw561b9.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpfbw561b9.cpp:2:\n/tmp/tmpfbw561b9.cpp:26:203: note:  ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to flatten a given nested list structure.\nstd::vector<long> flatten_list(std::any list1) {\n    std::vector<long> result;\n    if (list1.type() == typeid(long)) {\n        result.push_back(std::any_cast<long>(list1));\n    }\n    else {\n        std::vector<std::any> list = std::any_cast<std::vector<std::any>>(list1);\n        for (auto element : list) {\n            std::vector<long> temp = flatten_list(element);\n            result.insert(result.end(), temp.begin(), temp.end());\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = flatten_list;\n    assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)40}), (std::vector<long>)std::vector<long>({(long)30, (long)56, (long)25}), (std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)33}), (std::vector<long>)std::vector<long>({(long)40})}))) == (std::vector<long>({(long)10, (long)20, (long)40, (long)30, (long)56, (long)25, (long)10, (long)20, (long)33, (long)40})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)1, (long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)10, (long)11, (long)12}), (std::vector<long>)std::vector<long>({(long)7, (long)8, (long)9})}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)10, (long)11, (long)12, (long)7, (long)8, (long)9})));\n}\n",
      "timestamp": 1665517687,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp4f4k7bu4.cpp:2:\n/tmp/tmp4f4k7bu4.cpp: In function \u2018int main()\u2019:\n/tmp/tmp4f4k7bu4.cpp:20:203: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   20 |     assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n      |                                                                                                                                                                                                           ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmp4f4k7bu4.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp4f4k7bu4.cpp:2:\n/tmp/tmp4f4k7bu4.cpp:20:203: note:  ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to flatten a given nested list structure.\nstd::vector<long> flatten_list(std::any list1) {\n    std::vector<long> list2;\n    if(list1.type() == typeid(std::vector<std::any>)) {\n        for(auto &i : std::any_cast<std::vector<std::any>>(list1)) {\n            auto temp = flatten_list(i);\n            list2.insert(list2.end(), temp.begin(), temp.end());\n        }\n    } else {\n        list2.push_back(std::any_cast<long>(list1));\n    }\n    return list2;\n}\nint main() {\n    auto candidate = flatten_list;\n    assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)40}), (std::vector<long>)std::vector<long>({(long)30, (long)56, (long)25}), (std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)33}), (std::vector<long>)std::vector<long>({(long)40})}))) == (std::vector<long>({(long)10, (long)20, (long)40, (long)30, (long)56, (long)25, (long)10, (long)20, (long)33, (long)40})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)1, (long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)10, (long)11, (long)12}), (std::vector<long>)std::vector<long>({(long)7, (long)8, (long)9})}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)10, (long)11, (long)12, (long)7, (long)8, (long)9})));\n}\n",
      "timestamp": 1665517687,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpghfbi1x_.cpp:2:\n/tmp/tmpghfbi1x_.cpp: In function \u2018int main()\u2019:\n/tmp/tmpghfbi1x_.cpp:18:203: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   18 |     assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n      |                                                                                                                                                                                                           ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpghfbi1x_.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpghfbi1x_.cpp:2:\n/tmp/tmpghfbi1x_.cpp:18:203: note:  ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to flatten a given nested list structure.\nstd::vector<long> flatten_list(std::any list1) {\n    std::vector<long> result;\n    if (list1.type() == typeid(std::vector<std::any>)) {\n        std::vector<std::any> list = std::any_cast<std::vector<std::any>>(list1);\n        for (auto i : list) {\n            std::vector<long> temp = flatten_list(i);\n            result.insert(result.end(), temp.begin(), temp.end());\n        }\n    } else {\n        result.push_back(std::any_cast<long>(list1));\n    }\n    return result;\n}\nint main() {\n    auto candidate = flatten_list;\n    assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)40}), (std::vector<long>)std::vector<long>({(long)30, (long)56, (long)25}), (std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)33}), (std::vector<long>)std::vector<long>({(long)40})}))) == (std::vector<long>({(long)10, (long)20, (long)40, (long)30, (long)56, (long)25, (long)10, (long)20, (long)33, (long)40})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)1, (long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)10, (long)11, (long)12}), (std::vector<long>)std::vector<long>({(long)7, (long)8, (long)9})}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)10, (long)11, (long)12, (long)7, (long)8, (long)9})));\n}\n",
      "timestamp": 1665517687,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpdjkb_dx9.cpp:2:\n/tmp/tmpdjkb_dx9.cpp: In function \u2018int main()\u2019:\n/tmp/tmpdjkb_dx9.cpp:19:203: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   19 |     assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n      |                                                                                                                                                                                                           ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpdjkb_dx9.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpdjkb_dx9.cpp:2:\n/tmp/tmpdjkb_dx9.cpp:19:203: note:  ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to flatten a given nested list structure.\nstd::vector<long> flatten_list(std::any list1) {\n    std::vector<long> result;\n    if (list1.type() == typeid(std::vector<std::any>)) {\n        std::vector<std::any> list = std::any_cast<std::vector<std::any>>(list1);\n        for (auto item : list) {\n            std::vector<long> temp = flatten_list(item);\n            result.insert(result.end(), temp.begin(), temp.end());\n        }\n    } else {\n        result.push_back(std::any_cast<long>(list1));\n    }\n    return result;\n}\nint main() {\n    auto candidate = flatten_list;\n    assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)40}), (std::vector<long>)std::vector<long>({(long)30, (long)56, (long)25}), (std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)33}), (std::vector<long>)std::vector<long>({(long)40})}))) == (std::vector<long>({(long)10, (long)20, (long)40, (long)30, (long)56, (long)25, (long)10, (long)20, (long)33, (long)40})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)1, (long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)10, (long)11, (long)12}), (std::vector<long>)std::vector<long>({(long)7, (long)8, (long)9})}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)10, (long)11, (long)12, (long)7, (long)8, (long)9})));\n}\n",
      "timestamp": 1665517687,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpp5vv1fv9.cpp:2:\n/tmp/tmpp5vv1fv9.cpp: In function \u2018int main()\u2019:\n/tmp/tmpp5vv1fv9.cpp:19:203: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   19 |     assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n      |                                                                                                                                                                                                           ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpp5vv1fv9.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpp5vv1fv9.cpp:2:\n/tmp/tmpp5vv1fv9.cpp:19:203: note:  ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to flatten a given nested list structure.\nstd::vector<long> flatten_list(std::any list1) {\n  std::vector<long> flat_list;\n  if(list1.type() == typeid(long)) {\n    flat_list.push_back(std::any_cast<long>(list1));\n  } else {\n    std::vector<std::any> list = std::any_cast<std::vector<std::any>>(list1);\n    for(auto it = list.begin(); it != list.end(); it++) {\n      std::vector<long> temp = flatten_list(*it);\n      flat_list.insert(flat_list.end(), temp.begin(), temp.end());\n    }\n  }\n  return flat_list;\n}\nint main() {\n    auto candidate = flatten_list;\n    assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)40}), (std::vector<long>)std::vector<long>({(long)30, (long)56, (long)25}), (std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)33}), (std::vector<long>)std::vector<long>({(long)40})}))) == (std::vector<long>({(long)10, (long)20, (long)40, (long)30, (long)56, (long)25, (long)10, (long)20, (long)33, (long)40})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)1, (long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)10, (long)11, (long)12}), (std::vector<long>)std::vector<long>({(long)7, (long)8, (long)9})}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)10, (long)11, (long)12, (long)7, (long)8, (long)9})));\n}\n",
      "timestamp": 1665517687,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpbkoao5is.cpp:2:\n/tmp/tmpbkoao5is.cpp: In function \u2018int main()\u2019:\n/tmp/tmpbkoao5is.cpp:19:203: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   19 |     assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n      |                                                                                                                                                                                                           ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpbkoao5is.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpbkoao5is.cpp:2:\n/tmp/tmpbkoao5is.cpp:19:203: note:  ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to flatten a given nested list structure.\nstd::vector<long> flatten_list(std::any list1) {\n    std::vector<long> result;\n    if (list1.type() == typeid(long)) {\n        result.push_back(std::any_cast<long>(list1));\n    } else {\n        std::vector<std::any> list = std::any_cast<std::vector<std::any>>(list1);\n        for (auto i = list.begin(); i != list.end(); i++) {\n            std::vector<long> temp = flatten_list(*i);\n            result.insert(result.end(), temp.begin(), temp.end());\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = flatten_list;\n    assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)40}), (std::vector<long>)std::vector<long>({(long)30, (long)56, (long)25}), (std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)33}), (std::vector<long>)std::vector<long>({(long)40})}))) == (std::vector<long>({(long)10, (long)20, (long)40, (long)30, (long)56, (long)25, (long)10, (long)20, (long)33, (long)40})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)1, (long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)10, (long)11, (long)12}), (std::vector<long>)std::vector<long>({(long)7, (long)8, (long)9})}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)10, (long)11, (long)12, (long)7, (long)8, (long)9})));\n}\n",
      "timestamp": 1665517687,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmphgvmlz54.cpp:2:\n/tmp/tmphgvmlz54.cpp: In function \u2018int main()\u2019:\n/tmp/tmphgvmlz54.cpp:19:203: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   19 |     assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n      |                                                                                                                                                                                                           ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmphgvmlz54.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmphgvmlz54.cpp:2:\n/tmp/tmphgvmlz54.cpp:19:203: note:  ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to flatten a given nested list structure.\nstd::vector<long> flatten_list(std::any list1) {\n    std::vector<long> result;\n    std::vector<std::any> list;\n    list.push_back(list1);\n    while (!list.empty()) {\n        std::any item = list.back();\n        list.pop_back();\n        if (std::holds_alternative<long>(item)) {\n            result.push_back(std::any_cast<long>(item));\n        } else {\n            std::vector<std::any> sublist = std::any_cast<std::vector<std::any>>(item);\n            for (auto it = sublist.rbegin(); it != sublist.rend(); ++it) {\n                list.push_back(*it);\n            }\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = flatten_list;\n    assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)40}), (std::vector<long>)std::vector<long>({(long)30, (long)56, (long)25}), (std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)33}), (std::vector<long>)std::vector<long>({(long)40})}))) == (std::vector<long>({(long)10, (long)20, (long)40, (long)30, (long)56, (long)25, (long)10, (long)20, (long)33, (long)40})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)1, (long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)10, (long)11, (long)12}), (std::vector<long>)std::vector<long>({(long)7, (long)8, (long)9})}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)10, (long)11, (long)12, (long)7, (long)8, (long)9})));\n}\n",
      "timestamp": 1665517687,
      "stdout": "",
      "stderr": "/tmp/tmp1imdup0i.cpp: In function \u2018std::vector<long int> flatten_list(std::any)\u2019:\n/tmp/tmp1imdup0i.cpp:11:46: error: no matching function for call to \u2018holds_alternative<long int>(std::any&)\u2019\n   11 |         if (std::holds_alternative<long>(item)) {\n      |                                              ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:133,\n                 from /tmp/tmp1imdup0i.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/variant:1048:5: note: candidate: \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const std::variant<_Types ...>&)\u2019\n 1048 |     holds_alternative(const variant<_Types...>& __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/variant:1048:5: note:   template argument deduction/substitution failed:\n/tmp/tmp1imdup0i.cpp:11:46: note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types ...>\u2019\n   11 |         if (std::holds_alternative<long>(item)) {\n      |                                              ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp1imdup0i.cpp:2:\n/tmp/tmp1imdup0i.cpp: In function \u2018int main()\u2019:\n/tmp/tmp1imdup0i.cpp:24:203: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   24 |     assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n      |                                                                                                                                   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to flatten a given nested list structure.\nstd::vector<long> flatten_list(std::any list1) {\n    std::vector<long> result;\n    if (list1.type() == typeid(std::vector<std::any>)) {\n        std::vector<std::any> list = std::any_cast<std::vector<std::any>>(list1);\n        for (auto i : list) {\n            std::vector<long> temp = flatten_list(i);\n            result.insert(result.end(), temp.begin(), temp.end());\n        }\n    }\n    else {\n        result.push_back(std::any_cast<long>(list1));\n    }\n    return result;\n}\nint main() {\n    auto candidate = flatten_list;\n    assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)40}), (std::vector<long>)std::vector<long>({(long)30, (long)56, (long)25}), (std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)33}), (std::vector<long>)std::vector<long>({(long)40})}))) == (std::vector<long>({(long)10, (long)20, (long)40, (long)30, (long)56, (long)25, (long)10, (long)20, (long)33, (long)40})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)1, (long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)10, (long)11, (long)12}), (std::vector<long>)std::vector<long>({(long)7, (long)8, (long)9})}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)10, (long)11, (long)12, (long)7, (long)8, (long)9})));\n}\n",
      "timestamp": 1665517687,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp7t4f9pc4.cpp:2:\n/tmp/tmp7t4f9pc4.cpp: In function \u2018int main()\u2019:\n/tmp/tmp7t4f9pc4.cpp:20:203: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   20 |     assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n      |                                                                                                                                                                                                           ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmp7t4f9pc4.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp7t4f9pc4.cpp:2:\n/tmp/tmp7t4f9pc4.cpp:20:203: note:  ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to flatten a given nested list structure.\nstd::vector<long> flatten_list(std::any list1) {\n    std::vector<long> list2;\n    if (list1.type() == typeid(std::vector<std::any>)) {\n        std::vector<std::any> list = std::any_cast<std::vector<std::any>>(list1);\n        for (int i = 0; i < list.size(); i++) {\n            std::vector<long> list3 = flatten_list(list[i]);\n            list2.insert(list2.end(), list3.begin(), list3.end());\n        }\n    } else {\n        list2.push_back(std::any_cast<long>(list1));\n    }\n    return list2;\n}\nint main() {\n    auto candidate = flatten_list;\n    assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)40}), (std::vector<long>)std::vector<long>({(long)30, (long)56, (long)25}), (std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)33}), (std::vector<long>)std::vector<long>({(long)40})}))) == (std::vector<long>({(long)10, (long)20, (long)40, (long)30, (long)56, (long)25, (long)10, (long)20, (long)33, (long)40})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)1, (long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)10, (long)11, (long)12}), (std::vector<long>)std::vector<long>({(long)7, (long)8, (long)9})}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)10, (long)11, (long)12, (long)7, (long)8, (long)9})));\n}\n",
      "timestamp": 1665517687,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpxfuqknz7.cpp:2:\n/tmp/tmpxfuqknz7.cpp: In function \u2018int main()\u2019:\n/tmp/tmpxfuqknz7.cpp:19:203: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   19 |     assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n      |                                                                                                                                                                                                           ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpxfuqknz7.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpxfuqknz7.cpp:2:\n/tmp/tmpxfuqknz7.cpp:19:203: note:  ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to flatten a given nested list structure.\nstd::vector<long> flatten_list(std::any list1) {\n    std::vector<long> result;\n    if (list1.type() == typeid(long)) {\n        result.push_back(std::any_cast<long>(list1));\n        return result;\n    }\n    std::vector<std::any> list = std::any_cast<std::vector<std::any>>(list1);\n    for (auto item : list) {\n        std::vector<long> temp = flatten_list(item);\n        result.insert(result.end(), temp.begin(), temp.end());\n    }\n    return result;\n}\nint main() {\n    auto candidate = flatten_list;\n    assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)40}), (std::vector<long>)std::vector<long>({(long)30, (long)56, (long)25}), (std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)33}), (std::vector<long>)std::vector<long>({(long)40})}))) == (std::vector<long>({(long)10, (long)20, (long)40, (long)30, (long)56, (long)25, (long)10, (long)20, (long)33, (long)40})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)1, (long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)10, (long)11, (long)12}), (std::vector<long>)std::vector<long>({(long)7, (long)8, (long)9})}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)10, (long)11, (long)12, (long)7, (long)8, (long)9})));\n}\n",
      "timestamp": 1665517687,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpt0yrcuw7.cpp:2:\n/tmp/tmpt0yrcuw7.cpp: In function \u2018int main()\u2019:\n/tmp/tmpt0yrcuw7.cpp:19:203: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   19 |     assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n      |                                                                                                                                                                                                           ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpt0yrcuw7.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpt0yrcuw7.cpp:2:\n/tmp/tmpt0yrcuw7.cpp:19:203: note:  ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to flatten a given nested list structure.\nstd::vector<long> flatten_list(std::any list1) {\n    std::vector<long> list2;\n    if(list1.type() == typeid(std::vector<std::any>)) {\n        for(auto& i : std::any_cast<std::vector<std::any>>(list1)) {\n            std::vector<long> temp = flatten_list(i);\n            list2.insert(list2.end(), temp.begin(), temp.end());\n        }\n    } else {\n        list2.push_back(std::any_cast<long>(list1));\n    }\n    return list2;\n}\nint main() {\n    auto candidate = flatten_list;\n    assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)40}), (std::vector<long>)std::vector<long>({(long)30, (long)56, (long)25}), (std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)33}), (std::vector<long>)std::vector<long>({(long)40})}))) == (std::vector<long>({(long)10, (long)20, (long)40, (long)30, (long)56, (long)25, (long)10, (long)20, (long)33, (long)40})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)1, (long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)10, (long)11, (long)12}), (std::vector<long>)std::vector<long>({(long)7, (long)8, (long)9})}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)10, (long)11, (long)12, (long)7, (long)8, (long)9})));\n}\n",
      "timestamp": 1665517687,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp60zvwsmz.cpp:2:\n/tmp/tmp60zvwsmz.cpp: In function \u2018int main()\u2019:\n/tmp/tmp60zvwsmz.cpp:18:203: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   18 |     assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n      |                                                                                                                                                                                                           ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmp60zvwsmz.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp60zvwsmz.cpp:2:\n/tmp/tmp60zvwsmz.cpp:18:203: note:  ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to flatten a given nested list structure.\nstd::vector<long> flatten_list(std::any list1) {\n    std::vector<long> result;\n    if (list1.type() == typeid(std::vector<std::any>)) {\n        std::vector<std::any> list = std::any_cast<std::vector<std::any>>(list1);\n        for (auto &item : list) {\n            std::vector<long> temp = flatten_list(item);\n            result.insert(result.end(), temp.begin(), temp.end());\n        }\n    } else {\n        result.push_back(std::any_cast<long>(list1));\n    }\n    return result;\n}\nint main() {\n    auto candidate = flatten_list;\n    assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)40}), (std::vector<long>)std::vector<long>({(long)30, (long)56, (long)25}), (std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)33}), (std::vector<long>)std::vector<long>({(long)40})}))) == (std::vector<long>({(long)10, (long)20, (long)40, (long)30, (long)56, (long)25, (long)10, (long)20, (long)33, (long)40})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)1, (long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)10, (long)11, (long)12}), (std::vector<long>)std::vector<long>({(long)7, (long)8, (long)9})}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)10, (long)11, (long)12, (long)7, (long)8, (long)9})));\n}\n",
      "timestamp": 1665517687,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp74dyns7n.cpp:2:\n/tmp/tmp74dyns7n.cpp: In function \u2018int main()\u2019:\n/tmp/tmp74dyns7n.cpp:19:203: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   19 |     assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n      |                                                                                                                                                                                                           ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmp74dyns7n.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp74dyns7n.cpp:2:\n/tmp/tmp74dyns7n.cpp:19:203: note:  ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to flatten a given nested list structure.\nstd::vector<long> flatten_list(std::any list1) {\n    std::vector<long> result;\n    if(list1.type() == typeid(std::vector<std::any>)) {\n        std::vector<std::any> list = std::any_cast<std::vector<std::any>>(list1);\n        for(auto i : list) {\n            std::vector<long> temp = flatten_list(i);\n            result.insert(result.end(), temp.begin(), temp.end());\n        }\n    }\n    else {\n        result.push_back(std::any_cast<long>(list1));\n    }\n    return result;\n}\nint main() {\n    auto candidate = flatten_list;\n    assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)40}), (std::vector<long>)std::vector<long>({(long)30, (long)56, (long)25}), (std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)33}), (std::vector<long>)std::vector<long>({(long)40})}))) == (std::vector<long>({(long)10, (long)20, (long)40, (long)30, (long)56, (long)25, (long)10, (long)20, (long)33, (long)40})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)1, (long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)10, (long)11, (long)12}), (std::vector<long>)std::vector<long>({(long)7, (long)8, (long)9})}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)10, (long)11, (long)12, (long)7, (long)8, (long)9})));\n}\n",
      "timestamp": 1665517687,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp18755apd.cpp:2:\n/tmp/tmp18755apd.cpp: In function \u2018int main()\u2019:\n/tmp/tmp18755apd.cpp:20:203: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   20 |     assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n      |                                                                                                                                                                                                           ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmp18755apd.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp18755apd.cpp:2:\n/tmp/tmp18755apd.cpp:20:203: note:  ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to flatten a given nested list structure.\nstd::vector<long> flatten_list(std::any list1) {\n    std::vector<long> result;\n    if(list1.type() == typeid(long)) {\n        result.push_back(std::any_cast<long>(list1));\n    }\n    else {\n        std::vector<std::any> list = std::any_cast<std::vector<std::any>>(list1);\n        for(auto i : list) {\n            std::vector<long> temp = flatten_list(i);\n            result.insert(result.end(), temp.begin(), temp.end());\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = flatten_list;\n    assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)40}), (std::vector<long>)std::vector<long>({(long)30, (long)56, (long)25}), (std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)33}), (std::vector<long>)std::vector<long>({(long)40})}))) == (std::vector<long>({(long)10, (long)20, (long)40, (long)30, (long)56, (long)25, (long)10, (long)20, (long)33, (long)40})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)1, (long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)10, (long)11, (long)12}), (std::vector<long>)std::vector<long>({(long)7, (long)8, (long)9})}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)10, (long)11, (long)12, (long)7, (long)8, (long)9})));\n}\n",
      "timestamp": 1666123885,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp6kaanuxu.cpp:2:\n/tmp/tmp6kaanuxu.cpp: In function \u2018int main()\u2019:\n/tmp/tmp6kaanuxu.cpp:20:203: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   20 |     assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n      |                                                                                                                                                                                                           ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmp6kaanuxu.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp6kaanuxu.cpp:2:\n/tmp/tmp6kaanuxu.cpp:20:203: note:  ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to flatten a given nested list structure.\nstd::vector<long> flatten_list(std::any list1) {\n    std::vector<long> result;\n    if (list1.type() == typeid(std::vector<std::any>)) {\n        for (auto &i : std::any_cast<std::vector<std::any>>(list1)) {\n            std::vector<long> temp = flatten_list(i);\n            result.insert(result.end(), temp.begin(), temp.end());\n        }\n    } else {\n        result.push_back(std::any_cast<long>(list1));\n    }\n    return result;\n}\nint main() {\n    auto candidate = flatten_list;\n    assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)40}), (std::vector<long>)std::vector<long>({(long)30, (long)56, (long)25}), (std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)33}), (std::vector<long>)std::vector<long>({(long)40})}))) == (std::vector<long>({(long)10, (long)20, (long)40, (long)30, (long)56, (long)25, (long)10, (long)20, (long)33, (long)40})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)1, (long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)10, (long)11, (long)12}), (std::vector<long>)std::vector<long>({(long)7, (long)8, (long)9})}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)10, (long)11, (long)12, (long)7, (long)8, (long)9})));\n}\n",
      "timestamp": 1666123885,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpftwswf1g.cpp:2:\n/tmp/tmpftwswf1g.cpp: In function \u2018int main()\u2019:\n/tmp/tmpftwswf1g.cpp:18:203: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   18 |     assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n      |                                                                                                                                                                                                           ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpftwswf1g.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpftwswf1g.cpp:2:\n/tmp/tmpftwswf1g.cpp:18:203: note:  ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to flatten a given nested list structure.\nstd::vector<long> flatten_list(std::any list1) {\n    std::vector<long> result;\n    if (list1.type() == typeid(std::vector<std::any>)) {\n        std::vector<std::any> list = std::any_cast<std::vector<std::any>>(list1);\n        for (auto i : list) {\n            std::vector<long> temp = flatten_list(i);\n            result.insert(result.end(), temp.begin(), temp.end());\n        }\n    }\n    else {\n        long num = std::any_cast<long>(list1);\n        result.push_back(num);\n    }\n    return result;\n}\nint main() {\n    auto candidate = flatten_list;\n    assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)40}), (std::vector<long>)std::vector<long>({(long)30, (long)56, (long)25}), (std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)33}), (std::vector<long>)std::vector<long>({(long)40})}))) == (std::vector<long>({(long)10, (long)20, (long)40, (long)30, (long)56, (long)25, (long)10, (long)20, (long)33, (long)40})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)1, (long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)10, (long)11, (long)12}), (std::vector<long>)std::vector<long>({(long)7, (long)8, (long)9})}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)10, (long)11, (long)12, (long)7, (long)8, (long)9})));\n}\n",
      "timestamp": 1666123885,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmplaioxsxw.cpp:2:\n/tmp/tmplaioxsxw.cpp: In function \u2018int main()\u2019:\n/tmp/tmplaioxsxw.cpp:21:203: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   21 |     assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n      |                                                                                                                                                                                                           ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmplaioxsxw.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmplaioxsxw.cpp:2:\n/tmp/tmplaioxsxw.cpp:21:203: note:  ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to flatten a given nested list structure.\nstd::vector<long> flatten_list(std::any list1) {\n    std::vector<long> list2;\n    if (list1.type() == typeid(std::vector<long>)) {\n        for (auto i : std::any_cast<std::vector<long>>(list1)) {\n            list2.push_back(i);\n        }\n    }\n    else if (list1.type() == typeid(std::vector<std::any>)) {\n        for (auto i : std::any_cast<std::vector<std::any>>(list1)) {\n            for (auto j : flatten_list(i)) {\n                list2.push_back(j);\n            }\n        }\n    }\n    else {\n        list2.push_back(std::any_cast<long>(list1));\n    }\n    return list2;\n}\nint main() {\n    auto candidate = flatten_list;\n    assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)40}), (std::vector<long>)std::vector<long>({(long)30, (long)56, (long)25}), (std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)33}), (std::vector<long>)std::vector<long>({(long)40})}))) == (std::vector<long>({(long)10, (long)20, (long)40, (long)30, (long)56, (long)25, (long)10, (long)20, (long)33, (long)40})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)1, (long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)10, (long)11, (long)12}), (std::vector<long>)std::vector<long>({(long)7, (long)8, (long)9})}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)10, (long)11, (long)12, (long)7, (long)8, (long)9})));\n}\n",
      "timestamp": 1666123885,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp19j_973k.cpp:2:\n/tmp/tmp19j_973k.cpp: In function \u2018int main()\u2019:\n/tmp/tmp19j_973k.cpp:25:203: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   25 |     assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n      |                                                                                                                                                                                                           ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmp19j_973k.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp19j_973k.cpp:2:\n/tmp/tmp19j_973k.cpp:25:203: note:  ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to flatten a given nested list structure.\nstd::vector<long> flatten_list(std::any list1) {\n    std::vector<long> result;\n    if (list1.type() == typeid(std::vector<std::any>)) {\n        std::vector<std::any> list = std::any_cast<std::vector<std::any>>(list1);\n        for (auto &item : list) {\n            std::vector<long> temp = flatten_list(item);\n            result.insert(result.end(), temp.begin(), temp.end());\n        }\n    } else {\n        result.push_back(std::any_cast<long>(list1));\n    }\n    return result;\n}\nint main() {\n    auto candidate = flatten_list;\n    assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)40}), (std::vector<long>)std::vector<long>({(long)30, (long)56, (long)25}), (std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)33}), (std::vector<long>)std::vector<long>({(long)40})}))) == (std::vector<long>({(long)10, (long)20, (long)40, (long)30, (long)56, (long)25, (long)10, (long)20, (long)33, (long)40})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)1, (long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)10, (long)11, (long)12}), (std::vector<long>)std::vector<long>({(long)7, (long)8, (long)9})}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)10, (long)11, (long)12, (long)7, (long)8, (long)9})));\n}\n",
      "timestamp": 1665517687,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp74dyns7n.cpp:2:\n/tmp/tmp74dyns7n.cpp: In function \u2018int main()\u2019:\n/tmp/tmp74dyns7n.cpp:19:203: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   19 |     assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n      |                                                                                                                                                                                                           ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmp74dyns7n.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp74dyns7n.cpp:2:\n/tmp/tmp74dyns7n.cpp:19:203: note:  ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to flatten a given nested list structure.\nstd::vector<long> flatten_list(std::any list1) {\n    std::vector<long> result;\n    if (list1.type() == typeid(std::vector<std::any>)) {\n        std::vector<std::any> list = std::any_cast<std::vector<std::any>>(list1);\n        for (auto i : list) {\n            std::vector<long> temp = flatten_list(i);\n            result.insert(result.end(), temp.begin(), temp.end());\n        }\n    } else {\n        result.push_back(std::any_cast<long>(list1));\n    }\n    return result;\n}\nint main() {\n    auto candidate = flatten_list;\n    assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)40}), (std::vector<long>)std::vector<long>({(long)30, (long)56, (long)25}), (std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)33}), (std::vector<long>)std::vector<long>({(long)40})}))) == (std::vector<long>({(long)10, (long)20, (long)40, (long)30, (long)56, (long)25, (long)10, (long)20, (long)33, (long)40})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)1, (long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)10, (long)11, (long)12}), (std::vector<long>)std::vector<long>({(long)7, (long)8, (long)9})}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)10, (long)11, (long)12, (long)7, (long)8, (long)9})));\n}\n",
      "timestamp": 1665517687,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpdjkb_dx9.cpp:2:\n/tmp/tmpdjkb_dx9.cpp: In function \u2018int main()\u2019:\n/tmp/tmpdjkb_dx9.cpp:19:203: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   19 |     assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n      |                                                                                                                                                                                                           ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpdjkb_dx9.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpdjkb_dx9.cpp:2:\n/tmp/tmpdjkb_dx9.cpp:19:203: note:  ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to flatten a given nested list structure.\nstd::vector<long> flatten_list(std::any list1) {\n    std::vector<long> list2;\n    if(list1.type() == typeid(long)) {\n        list2.push_back(std::any_cast<long>(list1));\n    }\n    else {\n        std::vector<std::any> list3 = std::any_cast<std::vector<std::any>>(list1);\n        for(auto i : list3) {\n            std::vector<long> list4 = flatten_list(i);\n            list2.insert(list2.end(), list4.begin(), list4.end());\n        }\n    }\n    return list2;\n}\nint main() {\n    auto candidate = flatten_list;\n    assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)40}), (std::vector<long>)std::vector<long>({(long)30, (long)56, (long)25}), (std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)33}), (std::vector<long>)std::vector<long>({(long)40})}))) == (std::vector<long>({(long)10, (long)20, (long)40, (long)30, (long)56, (long)25, (long)10, (long)20, (long)33, (long)40})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)1, (long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)10, (long)11, (long)12}), (std::vector<long>)std::vector<long>({(long)7, (long)8, (long)9})}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)10, (long)11, (long)12, (long)7, (long)8, (long)9})));\n}\n",
      "timestamp": 1666123885,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpld4wm2bc.cpp:2:\n/tmp/tmpld4wm2bc.cpp: In function \u2018int main()\u2019:\n/tmp/tmpld4wm2bc.cpp:20:203: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   20 |     assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n      |                                                                                                                                                                                                           ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpld4wm2bc.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpld4wm2bc.cpp:2:\n/tmp/tmpld4wm2bc.cpp:20:203: note:  ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to flatten a given nested list structure.\nstd::vector<long> flatten_list(std::any list1) {\n    std::vector<long> result;\n    if (list1.type() == typeid(long)) {\n        result.push_back(std::any_cast<long>(list1));\n    } else {\n        std::vector<std::any> list = std::any_cast<std::vector<std::any>>(list1);\n        for (auto element : list) {\n            std::vector<long> temp = flatten_list(element);\n            result.insert(result.end(), temp.begin(), temp.end());\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = flatten_list;\n    assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)40}), (std::vector<long>)std::vector<long>({(long)30, (long)56, (long)25}), (std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)33}), (std::vector<long>)std::vector<long>({(long)40})}))) == (std::vector<long>({(long)10, (long)20, (long)40, (long)30, (long)56, (long)25, (long)10, (long)20, (long)33, (long)40})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)1, (long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)10, (long)11, (long)12}), (std::vector<long>)std::vector<long>({(long)7, (long)8, (long)9})}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)10, (long)11, (long)12, (long)7, (long)8, (long)9})));\n}\n",
      "timestamp": 1665517687,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmppbi15mq9.cpp:2:\n/tmp/tmppbi15mq9.cpp: In function \u2018int main()\u2019:\n/tmp/tmppbi15mq9.cpp:19:203: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   19 |     assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n      |                                                                                                                                                                                                           ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmppbi15mq9.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmppbi15mq9.cpp:2:\n/tmp/tmppbi15mq9.cpp:19:203: note:  ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to flatten a given nested list structure.\nstd::vector<long> flatten_list(std::any list1) {\n    std::vector<long> result;\n    if (list1.type() == typeid(std::vector<std::any>)) {\n        std::vector<std::any> list = std::any_cast<std::vector<std::any>>(list1);\n        for (auto i : list) {\n            std::vector<long> temp = flatten_list(i);\n            result.insert(result.end(), temp.begin(), temp.end());\n        }\n    } else {\n        result.push_back(std::any_cast<long>(list1));\n    }\n    return result;\n}\nint main() {\n    auto candidate = flatten_list;\n    assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)40}), (std::vector<long>)std::vector<long>({(long)30, (long)56, (long)25}), (std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)33}), (std::vector<long>)std::vector<long>({(long)40})}))) == (std::vector<long>({(long)10, (long)20, (long)40, (long)30, (long)56, (long)25, (long)10, (long)20, (long)33, (long)40})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)1, (long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)10, (long)11, (long)12}), (std::vector<long>)std::vector<long>({(long)7, (long)8, (long)9})}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)10, (long)11, (long)12, (long)7, (long)8, (long)9})));\n}\n",
      "timestamp": 1665517687,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpdjkb_dx9.cpp:2:\n/tmp/tmpdjkb_dx9.cpp: In function \u2018int main()\u2019:\n/tmp/tmpdjkb_dx9.cpp:19:203: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   19 |     assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n      |                                                                                                                                                                                                           ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpdjkb_dx9.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpdjkb_dx9.cpp:2:\n/tmp/tmpdjkb_dx9.cpp:19:203: note:  ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to flatten a given nested list structure.\nstd::vector<long> flatten_list(std::any list1) {\n    std::vector<long> result;\n    if (list1.type() == typeid(std::vector<std::any>)) {\n        std::vector<std::any> list = std::any_cast<std::vector<std::any>>(list1);\n        for (auto i : list) {\n            std::vector<long> temp = flatten_list(i);\n            result.insert(result.end(), temp.begin(), temp.end());\n        }\n    } else {\n        result.push_back(std::any_cast<long>(list1));\n    }\n    return result;\n}\nint main() {\n    auto candidate = flatten_list;\n    assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)40}), (std::vector<long>)std::vector<long>({(long)30, (long)56, (long)25}), (std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)33}), (std::vector<long>)std::vector<long>({(long)40})}))) == (std::vector<long>({(long)10, (long)20, (long)40, (long)30, (long)56, (long)25, (long)10, (long)20, (long)33, (long)40})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)1, (long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)10, (long)11, (long)12}), (std::vector<long>)std::vector<long>({(long)7, (long)8, (long)9})}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)10, (long)11, (long)12, (long)7, (long)8, (long)9})));\n}\n",
      "timestamp": 1665517687,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpdjkb_dx9.cpp:2:\n/tmp/tmpdjkb_dx9.cpp: In function \u2018int main()\u2019:\n/tmp/tmpdjkb_dx9.cpp:19:203: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   19 |     assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n      |                                                                                                                                                                                                           ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpdjkb_dx9.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpdjkb_dx9.cpp:2:\n/tmp/tmpdjkb_dx9.cpp:19:203: note:  ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to flatten a given nested list structure.\nstd::vector<long> flatten_list(std::any list1) {\n    std::vector<long> result;\n    if (list1.type() == typeid(std::vector<long>)) {\n        std::vector<long> list = std::any_cast<std::vector<long>>(list1);\n        for (auto i : list) {\n            if (i.type() == typeid(std::vector<long>)) {\n                std::vector<long> temp = flatten_list(i);\n                result.insert(result.end(), temp.begin(), temp.end());\n            } else {\n                result.push_back(std::any_cast<long>(i));\n            }\n        }\n    } else {\n        result.push_back(std::any_cast<long>(list1));\n    }\n    return result;\n}\nint main() {\n    auto candidate = flatten_list;\n    assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)40}), (std::vector<long>)std::vector<long>({(long)30, (long)56, (long)25}), (std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)33}), (std::vector<long>)std::vector<long>({(long)40})}))) == (std::vector<long>({(long)10, (long)20, (long)40, (long)30, (long)56, (long)25, (long)10, (long)20, (long)33, (long)40})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)1, (long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)10, (long)11, (long)12}), (std::vector<long>)std::vector<long>({(long)7, (long)8, (long)9})}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)10, (long)11, (long)12, (long)7, (long)8, (long)9})));\n}\n",
      "timestamp": 1666123885,
      "stdout": "",
      "stderr": "/tmp/tmpzarvl_wt.cpp: In function \u2018std::vector<long int> flatten_list(std::any)\u2019:\n/tmp/tmpzarvl_wt.cpp:9:19: error: request for member \u2018type\u2019 in \u2018i\u2019, which is of non-class type \u2018long int\u2019\n    9 |             if (i.type() == typeid(std::vector<long>)) {\n      |                   ^~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpzarvl_wt.cpp:2:\n/tmp/tmpzarvl_wt.cpp: In function \u2018int main()\u2019:\n/tmp/tmpzarvl_wt.cpp:23:203: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   23 |     assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n      |                                                                                                                                                                                                           ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpzarvl_wt.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/s",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to flatten a given nested list structure.\nstd::vector<long> flatten_list(std::any list1) {\n    std::vector<long> result;\n    if(list1.type() == typeid(long)) {\n        result.push_back(std::any_cast<long>(list1));\n    }\n    else {\n        std::vector<std::any> list = std::any_cast<std::vector<std::any>>(list1);\n        for(auto i : list) {\n            std::vector<long> temp = flatten_list(i);\n            result.insert(result.end(), temp.begin(), temp.end());\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = flatten_list;\n    assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)40}), (std::vector<long>)std::vector<long>({(long)30, (long)56, (long)25}), (std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)33}), (std::vector<long>)std::vector<long>({(long)40})}))) == (std::vector<long>({(long)10, (long)20, (long)40, (long)30, (long)56, (long)25, (long)10, (long)20, (long)33, (long)40})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)1, (long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)10, (long)11, (long)12}), (std::vector<long>)std::vector<long>({(long)7, (long)8, (long)9})}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)10, (long)11, (long)12, (long)7, (long)8, (long)9})));\n}\n",
      "timestamp": 1666123885,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp6kaanuxu.cpp:2:\n/tmp/tmp6kaanuxu.cpp: In function \u2018int main()\u2019:\n/tmp/tmp6kaanuxu.cpp:20:203: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   20 |     assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n      |                                                                                                                                                                                                           ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmp6kaanuxu.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp6kaanuxu.cpp:2:\n/tmp/tmp6kaanuxu.cpp:20:203: note:  ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to flatten a given nested list structure.\nstd::vector<long> flatten_list(std::any list1) {\n    std::vector<long> list2;\n    if (list1.type() == typeid(std::vector<std::any>)) {\n        std::vector<std::any> list = std::any_cast<std::vector<std::any>>(list1);\n        for (int i = 0; i < list.size(); i++) {\n            std::vector<long> list3 = flatten_list(list[i]);\n            for (int j = 0; j < list3.size(); j++) {\n                list2.push_back(list3[j]);\n            }\n        }\n    } else {\n        list2.push_back(std::any_cast<long>(list1));\n    }\n    return list2;\n}\nint main() {\n    auto candidate = flatten_list;\n    assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)40}), (std::vector<long>)std::vector<long>({(long)30, (long)56, (long)25}), (std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)33}), (std::vector<long>)std::vector<long>({(long)40})}))) == (std::vector<long>({(long)10, (long)20, (long)40, (long)30, (long)56, (long)25, (long)10, (long)20, (long)33, (long)40})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)1, (long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)10, (long)11, (long)12}), (std::vector<long>)std::vector<long>({(long)7, (long)8, (long)9})}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)10, (long)11, (long)12, (long)7, (long)8, (long)9})));\n}\n",
      "timestamp": 1666123885,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpk1s59x2n.cpp:2:\n/tmp/tmpk1s59x2n.cpp: In function \u2018int main()\u2019:\n/tmp/tmpk1s59x2n.cpp:21:203: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   21 |     assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n      |                                                                                                                                                                                                           ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpk1s59x2n.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpk1s59x2n.cpp:2:\n/tmp/tmpk1s59x2n.cpp:21:203: note:  ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to flatten a given nested list structure.\nstd::vector<long> flatten_list(std::any list1) {\n  std::vector<long> result;\n  std::vector<std::any> list = std::any_cast<std::vector<std::any>>(list1);\n  for (auto& item : list) {\n    if (item.type() == typeid(std::vector<std::any>)) {\n      std::vector<long> temp = flatten_list(item);\n      result.insert(result.end(), temp.begin(), temp.end());\n    } else {\n      result.push_back(std::any_cast<long>(item));\n    }\n  }\n  return result;\n}\nint main() {\n    auto candidate = flatten_list;\n    assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)40}), (std::vector<long>)std::vector<long>({(long)30, (long)56, (long)25}), (std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)33}), (std::vector<long>)std::vector<long>({(long)40})}))) == (std::vector<long>({(long)10, (long)20, (long)40, (long)30, (long)56, (long)25, (long)10, (long)20, (long)33, (long)40})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)1, (long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)10, (long)11, (long)12}), (std::vector<long>)std::vector<long>({(long)7, (long)8, (long)9})}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)10, (long)11, (long)12, (long)7, (long)8, (long)9})));\n}\n",
      "timestamp": 1666123885,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpwb1n_f0q.cpp:2:\n/tmp/tmpwb1n_f0q.cpp: In function \u2018int main()\u2019:\n/tmp/tmpwb1n_f0q.cpp:19:203: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   19 |     assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n      |                                                                                                                                                                                                           ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpwb1n_f0q.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpwb1n_f0q.cpp:2:\n/tmp/tmpwb1n_f0q.cpp:19:203: note:  ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to flatten a given nested list structure.\nstd::vector<long> flatten_list(std::any list1) {\n    std::vector<long> result;\n    if (list1.type() == typeid(std::vector<std::any>)) {\n        std::vector<std::any> list = std::any_cast<std::vector<std::any>>(list1);\n        for (auto i : list) {\n            std::vector<long> temp = flatten_list(i);\n            result.insert(result.end(), temp.begin(), temp.end());\n        }\n    } else {\n        result.push_back(std::any_cast<long>(list1));\n    }\n    return result;\n}\nint main() {\n    auto candidate = flatten_list;\n    assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)40}), (std::vector<long>)std::vector<long>({(long)30, (long)56, (long)25}), (std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)33}), (std::vector<long>)std::vector<long>({(long)40})}))) == (std::vector<long>({(long)10, (long)20, (long)40, (long)30, (long)56, (long)25, (long)10, (long)20, (long)33, (long)40})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)1, (long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)10, (long)11, (long)12}), (std::vector<long>)std::vector<long>({(long)7, (long)8, (long)9})}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)10, (long)11, (long)12, (long)7, (long)8, (long)9})));\n}\n",
      "timestamp": 1665517687,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpdjkb_dx9.cpp:2:\n/tmp/tmpdjkb_dx9.cpp: In function \u2018int main()\u2019:\n/tmp/tmpdjkb_dx9.cpp:19:203: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   19 |     assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n      |                                                                                                                                                                                                           ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpdjkb_dx9.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpdjkb_dx9.cpp:2:\n/tmp/tmpdjkb_dx9.cpp:19:203: note:  ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to flatten a given nested list structure.\nstd::vector<long> flatten_list(std::any list1) {\n    std::vector<long> result;\n    if (list1.type() == typeid(std::vector<long>)) {\n        std::vector<long> list = std::any_cast<std::vector<long>>(list1);\n        for (auto i : list) {\n            if (i.type() == typeid(std::vector<long>)) {\n                std::vector<long> temp = flatten_list(i);\n                result.insert(result.end(), temp.begin(), temp.end());\n            } else {\n                result.push_back(std::any_cast<long>(i));\n            }\n        }\n    } else {\n        result.push_back(std::any_cast<long>(list1));\n    }\n    return result;\n}\nint main() {\n    auto candidate = flatten_list;\n    assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)40}), (std::vector<long>)std::vector<long>({(long)30, (long)56, (long)25}), (std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)33}), (std::vector<long>)std::vector<long>({(long)40})}))) == (std::vector<long>({(long)10, (long)20, (long)40, (long)30, (long)56, (long)25, (long)10, (long)20, (long)33, (long)40})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)1, (long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)10, (long)11, (long)12}), (std::vector<long>)std::vector<long>({(long)7, (long)8, (long)9})}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)10, (long)11, (long)12, (long)7, (long)8, (long)9})));\n}\n",
      "timestamp": 1666123885,
      "stdout": "",
      "stderr": "/tmp/tmpzarvl_wt.cpp: In function \u2018std::vector<long int> flatten_list(std::any)\u2019:\n/tmp/tmpzarvl_wt.cpp:9:19: error: request for member \u2018type\u2019 in \u2018i\u2019, which is of non-class type \u2018long int\u2019\n    9 |             if (i.type() == typeid(std::vector<long>)) {\n      |                   ^~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpzarvl_wt.cpp:2:\n/tmp/tmpzarvl_wt.cpp: In function \u2018int main()\u2019:\n/tmp/tmpzarvl_wt.cpp:23:203: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   23 |     assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n      |                                                                                                                                                                                                           ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpzarvl_wt.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/s",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to flatten a given nested list structure.\nstd::vector<long> flatten_list(std::any list1) {\n    std::vector<long> result;\n    if (list1.type() == typeid(std::vector<long>)) {\n        std::vector<long> list = std::any_cast<std::vector<long>>(list1);\n        for (auto i : list) {\n            if (i.type() == typeid(std::vector<long>)) {\n                std::vector<long> temp = flatten_list(i);\n                result.insert(result.end(), temp.begin(), temp.end());\n            } else {\n                result.push_back(std::any_cast<long>(i));\n            }\n        }\n    } else {\n        result.push_back(std::any_cast<long>(list1));\n    }\n    return result;\n}\nint main() {\n    auto candidate = flatten_list;\n    assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)40}), (std::vector<long>)std::vector<long>({(long)30, (long)56, (long)25}), (std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)33}), (std::vector<long>)std::vector<long>({(long)40})}))) == (std::vector<long>({(long)10, (long)20, (long)40, (long)30, (long)56, (long)25, (long)10, (long)20, (long)33, (long)40})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)1, (long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)10, (long)11, (long)12}), (std::vector<long>)std::vector<long>({(long)7, (long)8, (long)9})}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)10, (long)11, (long)12, (long)7, (long)8, (long)9})));\n}\n",
      "timestamp": 1666123885,
      "stdout": "",
      "stderr": "/tmp/tmpzarvl_wt.cpp: In function \u2018std::vector<long int> flatten_list(std::any)\u2019:\n/tmp/tmpzarvl_wt.cpp:9:19: error: request for member \u2018type\u2019 in \u2018i\u2019, which is of non-class type \u2018long int\u2019\n    9 |             if (i.type() == typeid(std::vector<long>)) {\n      |                   ^~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpzarvl_wt.cpp:2:\n/tmp/tmpzarvl_wt.cpp: In function \u2018int main()\u2019:\n/tmp/tmpzarvl_wt.cpp:23:203: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   23 |     assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n      |                                                                                                                                                                                                           ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpzarvl_wt.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/s",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to flatten a given nested list structure.\nstd::vector<long> flatten_list(std::any list1) {\n    std::vector<long> result;\n    if (list1.type() == typeid(std::vector<std::any>)) {\n        std::vector<std::any> list = std::any_cast<std::vector<std::any>>(list1);\n        for (auto i : list) {\n            std::vector<long> temp = flatten_list(i);\n            result.insert(result.end(), temp.begin(), temp.end());\n        }\n    } else {\n        result.push_back(std::any_cast<long>(list1));\n    }\n    return result;\n}\nint main() {\n    auto candidate = flatten_list;\n    assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)40}), (std::vector<long>)std::vector<long>({(long)30, (long)56, (long)25}), (std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)33}), (std::vector<long>)std::vector<long>({(long)40})}))) == (std::vector<long>({(long)10, (long)20, (long)40, (long)30, (long)56, (long)25, (long)10, (long)20, (long)33, (long)40})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)1, (long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)10, (long)11, (long)12}), (std::vector<long>)std::vector<long>({(long)7, (long)8, (long)9})}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)10, (long)11, (long)12, (long)7, (long)8, (long)9})));\n}\n",
      "timestamp": 1665517687,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpdjkb_dx9.cpp:2:\n/tmp/tmpdjkb_dx9.cpp: In function \u2018int main()\u2019:\n/tmp/tmpdjkb_dx9.cpp:19:203: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   19 |     assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n      |                                                                                                                                                                                                           ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpdjkb_dx9.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpdjkb_dx9.cpp:2:\n/tmp/tmpdjkb_dx9.cpp:19:203: note:  ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to flatten a given nested list structure.\nstd::vector<long> flatten_list(std::any list1) {\n    std::vector<long> result;\n    if (list1.type() == typeid(std::vector<std::any>)) {\n        std::vector<std::any> list = std::any_cast<std::vector<std::any>>(list1);\n        for (auto i : list) {\n            std::vector<long> temp = flatten_list(i);\n            result.insert(result.end(), temp.begin(), temp.end());\n        }\n    } else {\n        result.push_back(std::any_cast<long>(list1));\n    }\n    return result;\n}\nint main() {\n    auto candidate = flatten_list;\n    assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)40}), (std::vector<long>)std::vector<long>({(long)30, (long)56, (long)25}), (std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)33}), (std::vector<long>)std::vector<long>({(long)40})}))) == (std::vector<long>({(long)10, (long)20, (long)40, (long)30, (long)56, (long)25, (long)10, (long)20, (long)33, (long)40})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)1, (long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)10, (long)11, (long)12}), (std::vector<long>)std::vector<long>({(long)7, (long)8, (long)9})}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)10, (long)11, (long)12, (long)7, (long)8, (long)9})));\n}\n",
      "timestamp": 1665517687,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpdjkb_dx9.cpp:2:\n/tmp/tmpdjkb_dx9.cpp: In function \u2018int main()\u2019:\n/tmp/tmpdjkb_dx9.cpp:19:203: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   19 |     assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n      |                                                                                                                                                                                                           ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpdjkb_dx9.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpdjkb_dx9.cpp:2:\n/tmp/tmpdjkb_dx9.cpp:19:203: note:  ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to flatten a given nested list structure.\nstd::vector<long> flatten_list(std::any list1) {\n    std::vector<long> result;\n    if (list1.type() == typeid(std::vector<long>)) {\n        auto list = std::any_cast<std::vector<long>>(list1);\n        for (auto i : list) {\n            if (i.type() == typeid(std::vector<long>)) {\n                auto temp = flatten_list(i);\n                for (auto j : temp) {\n                    result.push_back(j);\n                }\n            } else {\n                result.push_back(std::any_cast<long>(i));\n            }\n        }\n    } else {\n        result.push_back(std::any_cast<long>(list1));\n    }\n    return result;\n}\nint main() {\n    auto candidate = flatten_list;\n    assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)40}), (std::vector<long>)std::vector<long>({(long)30, (long)56, (long)25}), (std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)33}), (std::vector<long>)std::vector<long>({(long)40})}))) == (std::vector<long>({(long)10, (long)20, (long)40, (long)30, (long)56, (long)25, (long)10, (long)20, (long)33, (long)40})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)1, (long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)10, (long)11, (long)12}), (std::vector<long>)std::vector<long>({(long)7, (long)8, (long)9})}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)10, (long)11, (long)12, (long)7, (long)8, (long)9})));\n}\n",
      "timestamp": 1666123885,
      "stdout": "",
      "stderr": "/tmp/tmpknxr6enk.cpp: In function \u2018std::vector<long int> flatten_list(std::any)\u2019:\n/tmp/tmpknxr6enk.cpp:9:19: error: request for member \u2018type\u2019 in \u2018i\u2019, which is of non-class type \u2018long int\u2019\n    9 |             if (i.type() == typeid(std::vector<long>)) {\n      |                   ^~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpknxr6enk.cpp:2:\n/tmp/tmpknxr6enk.cpp: In function \u2018int main()\u2019:\n/tmp/tmpknxr6enk.cpp:25:203: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   25 |     assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n      |                                                                                                                                                                                                           ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpknxr6enk.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/s",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to flatten a given nested list structure.\nstd::vector<long> flatten_list(std::any list1) {\n    std::vector<long> list;\n    if(list1.type() == typeid(long)) {\n        list.push_back(std::any_cast<long>(list1));\n    }\n    else {\n        std::vector<std::any> list2 = std::any_cast<std::vector<std::any>>(list1);\n        for(auto i: list2) {\n            std::vector<long> temp = flatten_list(i);\n            list.insert(list.end(), temp.begin(), temp.end());\n        }\n    }\n    return list;\n}\nint main() {\n    auto candidate = flatten_list;\n    assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)40}), (std::vector<long>)std::vector<long>({(long)30, (long)56, (long)25}), (std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)33}), (std::vector<long>)std::vector<long>({(long)40})}))) == (std::vector<long>({(long)10, (long)20, (long)40, (long)30, (long)56, (long)25, (long)10, (long)20, (long)33, (long)40})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)1, (long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)10, (long)11, (long)12}), (std::vector<long>)std::vector<long>({(long)7, (long)8, (long)9})}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)10, (long)11, (long)12, (long)7, (long)8, (long)9})));\n}\n",
      "timestamp": 1666123885,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpxcibpels.cpp:2:\n/tmp/tmpxcibpels.cpp: In function \u2018int main()\u2019:\n/tmp/tmpxcibpels.cpp:20:203: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   20 |     assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n      |                                                                                                                                                                                                           ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpxcibpels.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpxcibpels.cpp:2:\n/tmp/tmpxcibpels.cpp:20:203: note:  ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to flatten a given nested list structure.\nstd::vector<long> flatten_list(std::any list1) {\n    std::vector<long> result;\n    if(list1.type() == typeid(std::vector<long>)) {\n        std::vector<long> list = std::any_cast<std::vector<long>>(list1);\n        for(auto i : list) {\n            if(i.type() == typeid(std::vector<long>)) {\n                std::vector<long> temp = flatten_list(i);\n                result.insert(result.end(), temp.begin(), temp.end());\n            } else {\n                result.push_back(std::any_cast<long>(i));\n            }\n        }\n    } else {\n        result.push_back(std::any_cast<long>(list1));\n    }\n    return result;\n}\nint main() {\n    auto candidate = flatten_list;\n    assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)40}), (std::vector<long>)std::vector<long>({(long)30, (long)56, (long)25}), (std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)33}), (std::vector<long>)std::vector<long>({(long)40})}))) == (std::vector<long>({(long)10, (long)20, (long)40, (long)30, (long)56, (long)25, (long)10, (long)20, (long)33, (long)40})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)1, (long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)10, (long)11, (long)12}), (std::vector<long>)std::vector<long>({(long)7, (long)8, (long)9})}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)10, (long)11, (long)12, (long)7, (long)8, (long)9})));\n}\n",
      "timestamp": 1666123884,
      "stdout": "",
      "stderr": "/tmp/tmplsdx0m57.cpp: In function \u2018std::vector<long int> flatten_list(std::any)\u2019:\n/tmp/tmplsdx0m57.cpp:9:18: error: request for member \u2018type\u2019 in \u2018i\u2019, which is of non-class type \u2018long int\u2019\n    9 |             if(i.type() == typeid(std::vector<long>)) {\n      |                  ^~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmplsdx0m57.cpp:2:\n/tmp/tmplsdx0m57.cpp: In function \u2018int main()\u2019:\n/tmp/tmplsdx0m57.cpp:23:203: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   23 |     assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n      |                                                                                                                                                                                                           ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmplsdx0m57.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/sub",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to flatten a given nested list structure.\nstd::vector<long> flatten_list(std::any list1) {\n    std::vector<long> list;\n    if (list1.type() == typeid(long)) {\n        list.push_back(std::any_cast<long>(list1));\n        return list;\n    }\n    else {\n        std::vector<std::any> list2 = std::any_cast<std::vector<std::any>>(list1);\n        for (auto i : list2) {\n            std::vector<long> list3 = flatten_list(i);\n            list.insert(list.end(), list3.begin(), list3.end());\n        }\n        return list;\n    }\n}\nint main() {\n    auto candidate = flatten_list;\n    assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)40}), (std::vector<long>)std::vector<long>({(long)30, (long)56, (long)25}), (std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)33}), (std::vector<long>)std::vector<long>({(long)40})}))) == (std::vector<long>({(long)10, (long)20, (long)40, (long)30, (long)56, (long)25, (long)10, (long)20, (long)33, (long)40})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)1, (long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)10, (long)11, (long)12}), (std::vector<long>)std::vector<long>({(long)7, (long)8, (long)9})}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)10, (long)11, (long)12, (long)7, (long)8, (long)9})));\n}\n",
      "timestamp": 1666123885,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpwkfd2im2.cpp:2:\n/tmp/tmpwkfd2im2.cpp: In function \u2018int main()\u2019:\n/tmp/tmpwkfd2im2.cpp:21:203: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   21 |     assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n      |                                                                                                                                                                                                           ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpwkfd2im2.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpwkfd2im2.cpp:2:\n/tmp/tmpwkfd2im2.cpp:21:203: note:  ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to flatten a given nested list structure.\nstd::vector<long> flatten_list(std::any list1) {\n    std::vector<long> list2;\n    if (list1.type() == typeid(std::vector<long>)) {\n        list2 = std::any_cast<std::vector<long>>(list1);\n    } else {\n        list2.push_back(std::any_cast<long>(list1));\n    }\n    return list2;\n}\nint main() {\n    auto candidate = flatten_list;\n    assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)40}), (std::vector<long>)std::vector<long>({(long)30, (long)56, (long)25}), (std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)33}), (std::vector<long>)std::vector<long>({(long)40})}))) == (std::vector<long>({(long)10, (long)20, (long)40, (long)30, (long)56, (long)25, (long)10, (long)20, (long)33, (long)40})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)1, (long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)10, (long)11, (long)12}), (std::vector<long>)std::vector<long>({(long)7, (long)8, (long)9})}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)10, (long)11, (long)12, (long)7, (long)8, (long)9})));\n}\n",
      "timestamp": 1666123885,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp_gk_dyf_.cpp:2:\n/tmp/tmp_gk_dyf_.cpp: In function \u2018int main()\u2019:\n/tmp/tmp_gk_dyf_.cpp:15:203: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n      |                                                                                                                                                                                                           ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmp_gk_dyf_.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp_gk_dyf_.cpp:2:\n/tmp/tmp_gk_dyf_.cpp:15:203: note:  ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to flatten a given nested list structure.\nstd::vector<long> flatten_list(std::any list1) {\n  std::vector<long> result;\n  if (list1.type() == typeid(std::vector<std::any>)) {\n    std::vector<std::any> list = std::any_cast<std::vector<std::any>>(list1);\n    for (auto &i : list) {\n      std::vector<long> temp = flatten_list(i);\n      result.insert(result.end(), temp.begin(), temp.end());\n    }\n  } else {\n    result.push_back(std::any_cast<long>(list1));\n  }\n  return result;\n}\nint main() {\n    auto candidate = flatten_list;\n    assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)40}), (std::vector<long>)std::vector<long>({(long)30, (long)56, (long)25}), (std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)33}), (std::vector<long>)std::vector<long>({(long)40})}))) == (std::vector<long>({(long)10, (long)20, (long)40, (long)30, (long)56, (long)25, (long)10, (long)20, (long)33, (long)40})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)1, (long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)10, (long)11, (long)12}), (std::vector<long>)std::vector<long>({(long)7, (long)8, (long)9})}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)10, (long)11, (long)12, (long)7, (long)8, (long)9})));\n}\n",
      "timestamp": 1666123884,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpopeb0snj.cpp:2:\n/tmp/tmpopeb0snj.cpp: In function \u2018int main()\u2019:\n/tmp/tmpopeb0snj.cpp:19:203: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   19 |     assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n      |                                                                                                                                                                                                           ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpopeb0snj.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpopeb0snj.cpp:2:\n/tmp/tmpopeb0snj.cpp:19:203: note:  ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to flatten a given nested list structure.\nstd::vector<long> flatten_list(std::any list1) {\n    std::vector<long> result;\n    if (list1.type() == typeid(std::vector<std::any>)) {\n        std::vector<std::any> list = std::any_cast<std::vector<std::any>>(list1);\n        for (auto item : list) {\n            auto temp = flatten_list(item);\n            result.insert(result.end(), temp.begin(), temp.end());\n        }\n    } else {\n        result.push_back(std::any_cast<long>(list1));\n    }\n    return result;\n}\nint main() {\n    auto candidate = flatten_list;\n    assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)40}), (std::vector<long>)std::vector<long>({(long)30, (long)56, (long)25}), (std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)33}), (std::vector<long>)std::vector<long>({(long)40})}))) == (std::vector<long>({(long)10, (long)20, (long)40, (long)30, (long)56, (long)25, (long)10, (long)20, (long)33, (long)40})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)1, (long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)10, (long)11, (long)12}), (std::vector<long>)std::vector<long>({(long)7, (long)8, (long)9})}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)10, (long)11, (long)12, (long)7, (long)8, (long)9})));\n}\n",
      "timestamp": 1666123885,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp2cns42jk.cpp:2:\n/tmp/tmp2cns42jk.cpp: In function \u2018int main()\u2019:\n/tmp/tmp2cns42jk.cpp:19:203: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   19 |     assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n      |                                                                                                                                                                                                           ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmp2cns42jk.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp2cns42jk.cpp:2:\n/tmp/tmp2cns42jk.cpp:19:203: note:  ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to flatten a given nested list structure.\nstd::vector<long> flatten_list(std::any list1) {\n    std::vector<long> list;\n    if (list1.type() == typeid(int)) {\n        list.push_back(std::any_cast<int>(list1));\n        return list;\n    }\n    else if (list1.type() == typeid(std::vector<std::any>)) {\n        std::vector<std::any> list2 = std::any_cast<std::vector<std::any>>(list1);\n        for (auto &i : list2) {\n            std::vector<long> list3 = flatten_list(i);\n            list.insert(list.end(), list3.begin(), list3.end());\n        }\n        return list;\n    }\n    else {\n        return list;\n    }\n}\nint main() {\n    auto candidate = flatten_list;\n    assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)40}), (std::vector<long>)std::vector<long>({(long)30, (long)56, (long)25}), (std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)33}), (std::vector<long>)std::vector<long>({(long)40})}))) == (std::vector<long>({(long)10, (long)20, (long)40, (long)30, (long)56, (long)25, (long)10, (long)20, (long)33, (long)40})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)1, (long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)10, (long)11, (long)12}), (std::vector<long>)std::vector<long>({(long)7, (long)8, (long)9})}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)10, (long)11, (long)12, (long)7, (long)8, (long)9})));\n}\n",
      "timestamp": 1666123885,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp_2pu1k0a.cpp:2:\n/tmp/tmp_2pu1k0a.cpp: In function \u2018int main()\u2019:\n/tmp/tmp_2pu1k0a.cpp:24:203: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   24 |     assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n      |                                                                                                                                                                                                           ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmp_2pu1k0a.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp_2pu1k0a.cpp:2:\n/tmp/tmp_2pu1k0a.cpp:24:203: note:  ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to flatten a given nested list structure.\nstd::vector<long> flatten_list(std::any list1) {\n    std::vector<long> result;\n    if (list1.type() == typeid(std::vector<std::any>)) {\n        std::vector<std::any> list = std::any_cast<std::vector<std::any>>(list1);\n        for (auto i : list) {\n            std::vector<long> temp = flatten_list(i);\n            result.insert(result.end(), temp.begin(), temp.end());\n        }\n    } else {\n        result.push_back(std::any_cast<long>(list1));\n    }\n    return result;\n}\nint main() {\n    auto candidate = flatten_list;\n    assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)40}), (std::vector<long>)std::vector<long>({(long)30, (long)56, (long)25}), (std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)33}), (std::vector<long>)std::vector<long>({(long)40})}))) == (std::vector<long>({(long)10, (long)20, (long)40, (long)30, (long)56, (long)25, (long)10, (long)20, (long)33, (long)40})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)1, (long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)10, (long)11, (long)12}), (std::vector<long>)std::vector<long>({(long)7, (long)8, (long)9})}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)10, (long)11, (long)12, (long)7, (long)8, (long)9})));\n}\n",
      "timestamp": 1665517687,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpdjkb_dx9.cpp:2:\n/tmp/tmpdjkb_dx9.cpp: In function \u2018int main()\u2019:\n/tmp/tmpdjkb_dx9.cpp:19:203: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   19 |     assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n      |                                                                                                                                                                                                           ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpdjkb_dx9.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpdjkb_dx9.cpp:2:\n/tmp/tmpdjkb_dx9.cpp:19:203: note:  ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to flatten a given nested list structure.\nstd::vector<long> flatten_list(std::any list1) {\n    std::vector<long> result;\n    if (list1.type() == typeid(long)) {\n        result.push_back(std::any_cast<long>(list1));\n    } else {\n        std::vector<std::any> list = std::any_cast<std::vector<std::any>>(list1);\n        for (auto &i : list) {\n            std::vector<long> temp = flatten_list(i);\n            result.insert(result.end(), temp.begin(), temp.end());\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = flatten_list;\n    assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)40}), (std::vector<long>)std::vector<long>({(long)30, (long)56, (long)25}), (std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)33}), (std::vector<long>)std::vector<long>({(long)40})}))) == (std::vector<long>({(long)10, (long)20, (long)40, (long)30, (long)56, (long)25, (long)10, (long)20, (long)33, (long)40})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)1, (long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)10, (long)11, (long)12}), (std::vector<long>)std::vector<long>({(long)7, (long)8, (long)9})}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)10, (long)11, (long)12, (long)7, (long)8, (long)9})));\n}\n",
      "timestamp": 1666123885,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpd5jewv6e.cpp:2:\n/tmp/tmpd5jewv6e.cpp: In function \u2018int main()\u2019:\n/tmp/tmpd5jewv6e.cpp:19:203: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   19 |     assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n      |                                                                                                                                                                                                           ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpd5jewv6e.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpd5jewv6e.cpp:2:\n/tmp/tmpd5jewv6e.cpp:19:203: note:  ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to flatten a given nested list structure.\nstd::vector<long> flatten_list(std::any list1) {\n    std::vector<long> result;\n    if (list1.type() == typeid(long)) {\n        result.push_back(std::any_cast<long>(list1));\n        return result;\n    }\n    std::vector<std::any> list = std::any_cast<std::vector<std::any>>(list1);\n    for (auto i : list) {\n        if (i.type() == typeid(long)) {\n            result.push_back(std::any_cast<long>(i));\n        } else {\n            std::vector<long> temp = flatten_list(i);\n            result.insert(result.end(), temp.begin(), temp.end());\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = flatten_list;\n    assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)40}), (std::vector<long>)std::vector<long>({(long)30, (long)56, (long)25}), (std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)33}), (std::vector<long>)std::vector<long>({(long)40})}))) == (std::vector<long>({(long)10, (long)20, (long)40, (long)30, (long)56, (long)25, (long)10, (long)20, (long)33, (long)40})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)1, (long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)10, (long)11, (long)12}), (std::vector<long>)std::vector<long>({(long)7, (long)8, (long)9})}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)10, (long)11, (long)12, (long)7, (long)8, (long)9})));\n}\n",
      "timestamp": 1666123884,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpkshf376d.cpp:2:\n/tmp/tmpkshf376d.cpp: In function \u2018int main()\u2019:\n/tmp/tmpkshf376d.cpp:23:203: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   23 |     assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n      |                                                                                                                                                                                                           ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpkshf376d.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpkshf376d.cpp:2:\n/tmp/tmpkshf376d.cpp:23:203: note:  ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to flatten a given nested list structure.\nstd::vector<long> flatten_list(std::any list1) {\n  std::vector<long> result;\n  if (list1.type() == typeid(std::vector<std::any>)) {\n    for (auto &i : std::any_cast<std::vector<std::any>>(list1)) {\n      auto temp = flatten_list(i);\n      result.insert(result.end(), temp.begin(), temp.end());\n    }\n  } else {\n    result.push_back(std::any_cast<long>(list1));\n  }\n  return result;\n}\nint main() {\n    auto candidate = flatten_list;\n    assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)40}), (std::vector<long>)std::vector<long>({(long)30, (long)56, (long)25}), (std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)33}), (std::vector<long>)std::vector<long>({(long)40})}))) == (std::vector<long>({(long)10, (long)20, (long)40, (long)30, (long)56, (long)25, (long)10, (long)20, (long)33, (long)40})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)1, (long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)10, (long)11, (long)12}), (std::vector<long>)std::vector<long>({(long)7, (long)8, (long)9})}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)10, (long)11, (long)12, (long)7, (long)8, (long)9})));\n}\n",
      "timestamp": 1665517687,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp6x1ev6o6.cpp:2:\n/tmp/tmp6x1ev6o6.cpp: In function \u2018int main()\u2019:\n/tmp/tmp6x1ev6o6.cpp:18:203: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   18 |     assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n      |                                                                                                                                                                                                           ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmp6x1ev6o6.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp6x1ev6o6.cpp:2:\n/tmp/tmp6x1ev6o6.cpp:18:203: note:  ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to flatten a given nested list structure.\nstd::vector<long> flatten_list(std::any list1) {\n    std::vector<long> list2;\n    if (list1.type() == typeid(std::vector<std::any>)) {\n        for (auto &i : std::any_cast<std::vector<std::any>>(list1)) {\n            auto list3 = flatten_list(i);\n            list2.insert(list2.end(), list3.begin(), list3.end());\n        }\n    } else {\n        list2.push_back(std::any_cast<long>(list1));\n    }\n    return list2;\n}\nint main() {\n    auto candidate = flatten_list;\n    assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)40}), (std::vector<long>)std::vector<long>({(long)30, (long)56, (long)25}), (std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)33}), (std::vector<long>)std::vector<long>({(long)40})}))) == (std::vector<long>({(long)10, (long)20, (long)40, (long)30, (long)56, (long)25, (long)10, (long)20, (long)33, (long)40})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)1, (long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)10, (long)11, (long)12}), (std::vector<long>)std::vector<long>({(long)7, (long)8, (long)9})}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)10, (long)11, (long)12, (long)7, (long)8, (long)9})));\n}\n",
      "timestamp": 1666123885,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp93wl6zn2.cpp:2:\n/tmp/tmp93wl6zn2.cpp: In function \u2018int main()\u2019:\n/tmp/tmp93wl6zn2.cpp:18:203: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   18 |     assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n      |                                                                                                                                                                                                           ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmp93wl6zn2.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp93wl6zn2.cpp:2:\n/tmp/tmp93wl6zn2.cpp:18:203: note:  ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to flatten a given nested list structure.\nstd::vector<long> flatten_list(std::any list1) {\n    std::vector<long> result;\n    if (list1.type() == typeid(std::vector<std::any>)) {\n        std::vector<std::any> list = std::any_cast<std::vector<std::any>>(list1);\n        for (auto i = list.begin(); i != list.end(); i++) {\n            std::vector<long> temp = flatten_list(*i);\n            result.insert(result.end(), temp.begin(), temp.end());\n        }\n    } else {\n        result.push_back(std::any_cast<long>(list1));\n    }\n    return result;\n}\nint main() {\n    auto candidate = flatten_list;\n    assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)40}), (std::vector<long>)std::vector<long>({(long)30, (long)56, (long)25}), (std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)33}), (std::vector<long>)std::vector<long>({(long)40})}))) == (std::vector<long>({(long)10, (long)20, (long)40, (long)30, (long)56, (long)25, (long)10, (long)20, (long)33, (long)40})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)1, (long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)10, (long)11, (long)12}), (std::vector<long>)std::vector<long>({(long)7, (long)8, (long)9})}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)10, (long)11, (long)12, (long)7, (long)8, (long)9})));\n}\n",
      "timestamp": 1666123885,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmphle4bh9i.cpp:2:\n/tmp/tmphle4bh9i.cpp: In function \u2018int main()\u2019:\n/tmp/tmphle4bh9i.cpp:19:203: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   19 |     assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n      |                                                                                                                                                                                                           ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmphle4bh9i.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmphle4bh9i.cpp:2:\n/tmp/tmphle4bh9i.cpp:19:203: note:  ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to flatten a given nested list structure.\nstd::vector<long> flatten_list(std::any list1) {\n  std::vector<long> list2;\n  for (auto it = list1.begin(); it != list1.end(); ++it) {\n    if (it->type() == typeid(std::any)) {\n      std::vector<long> list3 = flatten_list(it);\n      list2.insert(list2.end(), list3.begin(), list3.end());\n    } else {\n      list2.push_back(std::any_cast<long>(it));\n    }\n  }\n  return list2;\n}\nint main() {\n    auto candidate = flatten_list;\n    assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)40}), (std::vector<long>)std::vector<long>({(long)30, (long)56, (long)25}), (std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)33}), (std::vector<long>)std::vector<long>({(long)40})}))) == (std::vector<long>({(long)10, (long)20, (long)40, (long)30, (long)56, (long)25, (long)10, (long)20, (long)33, (long)40})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)1, (long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)10, (long)11, (long)12}), (std::vector<long>)std::vector<long>({(long)7, (long)8, (long)9})}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)10, (long)11, (long)12, (long)7, (long)8, (long)9})));\n}\n",
      "timestamp": 1666123884,
      "stdout": "",
      "stderr": "/tmp/tmpzpnx0hts.cpp: In function \u2018std::vector<long int> flatten_list(std::any)\u2019:\n/tmp/tmpzpnx0hts.cpp:6:24: error: \u2018class std::any\u2019 has no member named \u2018begin\u2019\n    6 |   for (auto it = list1.begin(); it != list1.end(); ++it) {\n      |                        ^~~~~\n/tmp/tmpzpnx0hts.cpp:6:45: error: \u2018class std::any\u2019 has no member named \u2018end\u2019\n    6 |   for (auto it = list1.begin(); it != list1.end(); ++it) {\n      |                                             ^~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpzpnx0hts.cpp:2:\n/tmp/tmpzpnx0hts.cpp: In function \u2018int main()\u2019:\n/tmp/tmpzpnx0hts.cpp:18:203: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   18 |     assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n      |                                                                                                                                                                                                           ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpzpnx0hts.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_U",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to flatten a given nested list structure.\nstd::vector<long> flatten_list(std::any list1) {\n    std::vector<long> result;\n    if(list1.type() == typeid(std::vector<std::any>)) {\n        std::vector<std::any> list = std::any_cast<std::vector<std::any>>(list1);\n        for(auto it = list.begin(); it != list.end(); it++) {\n            std::vector<long> temp = flatten_list(*it);\n            result.insert(result.end(), temp.begin(), temp.end());\n        }\n    } else {\n        result.push_back(std::any_cast<long>(list1));\n    }\n    return result;\n}\nint main() {\n    auto candidate = flatten_list;\n    assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)40}), (std::vector<long>)std::vector<long>({(long)30, (long)56, (long)25}), (std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)33}), (std::vector<long>)std::vector<long>({(long)40})}))) == (std::vector<long>({(long)10, (long)20, (long)40, (long)30, (long)56, (long)25, (long)10, (long)20, (long)33, (long)40})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)1, (long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)10, (long)11, (long)12}), (std::vector<long>)std::vector<long>({(long)7, (long)8, (long)9})}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)10, (long)11, (long)12, (long)7, (long)8, (long)9})));\n}\n",
      "timestamp": 1666123885,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp243x2uce.cpp:2:\n/tmp/tmp243x2uce.cpp: In function \u2018int main()\u2019:\n/tmp/tmp243x2uce.cpp:19:203: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   19 |     assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n      |                                                                                                                                                                                                           ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmp243x2uce.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp243x2uce.cpp:2:\n/tmp/tmp243x2uce.cpp:19:203: note:  ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to flatten a given nested list structure.\nstd::vector<long> flatten_list(std::any list1) {\n    std::vector<long> result;\n    if (list1.type() == typeid(std::vector<std::any>)) {\n        for (auto &i : std::any_cast<std::vector<std::any>>(list1)) {\n            auto temp = flatten_list(i);\n            result.insert(result.end(), temp.begin(), temp.end());\n        }\n    } else {\n        result.push_back(std::any_cast<long>(list1));\n    }\n    return result;\n}\nint main() {\n    auto candidate = flatten_list;\n    assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)40}), (std::vector<long>)std::vector<long>({(long)30, (long)56, (long)25}), (std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)33}), (std::vector<long>)std::vector<long>({(long)40})}))) == (std::vector<long>({(long)10, (long)20, (long)40, (long)30, (long)56, (long)25, (long)10, (long)20, (long)33, (long)40})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)1, (long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)10, (long)11, (long)12}), (std::vector<long>)std::vector<long>({(long)7, (long)8, (long)9})}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)10, (long)11, (long)12, (long)7, (long)8, (long)9})));\n}\n",
      "timestamp": 1666123885,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpiz0o3r3j.cpp:2:\n/tmp/tmpiz0o3r3j.cpp: In function \u2018int main()\u2019:\n/tmp/tmpiz0o3r3j.cpp:18:203: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   18 |     assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n      |                                                                                                                                                                                                           ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpiz0o3r3j.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpiz0o3r3j.cpp:2:\n/tmp/tmpiz0o3r3j.cpp:18:203: note:  ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to flatten a given nested list structure.\nstd::vector<long> flatten_list(std::any list1) {\n    std::vector<long> result;\n    if (list1.type() == typeid(std::vector<long>)) {\n        for (auto &i : std::any_cast<std::vector<long>>(list1)) {\n            result.push_back(i);\n        }\n    } else if (list1.type() == typeid(std::vector<std::any>)) {\n        for (auto &i : std::any_cast<std::vector<std::any>>(list1)) {\n            std::vector<long> temp = flatten_list(i);\n            result.insert(result.end(), temp.begin(), temp.end());\n        }\n    } else {\n        result.push_back(std::any_cast<long>(list1));\n    }\n    return result;\n}\nint main() {\n    auto candidate = flatten_list;\n    assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)40}), (std::vector<long>)std::vector<long>({(long)30, (long)56, (long)25}), (std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)33}), (std::vector<long>)std::vector<long>({(long)40})}))) == (std::vector<long>({(long)10, (long)20, (long)40, (long)30, (long)56, (long)25, (long)10, (long)20, (long)33, (long)40})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)1, (long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)10, (long)11, (long)12}), (std::vector<long>)std::vector<long>({(long)7, (long)8, (long)9})}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)10, (long)11, (long)12, (long)7, (long)8, (long)9})));\n}\n",
      "timestamp": 1666123886,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpsat2fk_0.cpp:2:\n/tmp/tmpsat2fk_0.cpp: In function \u2018int main()\u2019:\n/tmp/tmpsat2fk_0.cpp:22:203: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   22 |     assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n      |                                                                                                                                                                                                           ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpsat2fk_0.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpsat2fk_0.cpp:2:\n/tmp/tmpsat2fk_0.cpp:22:203: note:  ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to flatten a given nested list structure.\nstd::vector<long> flatten_list(std::any list1) {\n    std::vector<long> list2;\n    if (list1.type() == typeid(long)) {\n        list2.push_back(std::any_cast<long>(list1));\n    } else if (list1.type() == typeid(std::vector<std::any>)) {\n        std::vector<std::any> list3 = std::any_cast<std::vector<std::any>>(list1);\n        for (auto i : list3) {\n            std::vector<long> list4 = flatten_list(i);\n            list2.insert(list2.end(), list4.begin(), list4.end());\n        }\n    }\n    return list2;\n}\nint main() {\n    auto candidate = flatten_list;\n    assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)40}), (std::vector<long>)std::vector<long>({(long)30, (long)56, (long)25}), (std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)33}), (std::vector<long>)std::vector<long>({(long)40})}))) == (std::vector<long>({(long)10, (long)20, (long)40, (long)30, (long)56, (long)25, (long)10, (long)20, (long)33, (long)40})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)1, (long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)10, (long)11, (long)12}), (std::vector<long>)std::vector<long>({(long)7, (long)8, (long)9})}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)10, (long)11, (long)12, (long)7, (long)8, (long)9})));\n}\n",
      "timestamp": 1666123886,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpqtof1cpr.cpp:2:\n/tmp/tmpqtof1cpr.cpp: In function \u2018int main()\u2019:\n/tmp/tmpqtof1cpr.cpp:19:203: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   19 |     assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n      |                                                                                                                                                                                                           ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpqtof1cpr.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpqtof1cpr.cpp:2:\n/tmp/tmpqtof1cpr.cpp:19:203: note:  ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to flatten a given nested list structure.\nstd::vector<long> flatten_list(std::any list1) {\n    std::vector<long> result;\n    if (list1.type() == typeid(long)) {\n        result.push_back(std::any_cast<long>(list1));\n    } else {\n        std::vector<std::any> list = std::any_cast<std::vector<std::any>>(list1);\n        for (auto i : list) {\n            std::vector<long> temp = flatten_list(i);\n            result.insert(result.end(), temp.begin(), temp.end());\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = flatten_list;\n    assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)40}), (std::vector<long>)std::vector<long>({(long)30, (long)56, (long)25}), (std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)33}), (std::vector<long>)std::vector<long>({(long)40})}))) == (std::vector<long>({(long)10, (long)20, (long)40, (long)30, (long)56, (long)25, (long)10, (long)20, (long)33, (long)40})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)1, (long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)10, (long)11, (long)12}), (std::vector<long>)std::vector<long>({(long)7, (long)8, (long)9})}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)10, (long)11, (long)12, (long)7, (long)8, (long)9})));\n}\n",
      "timestamp": 1665517687,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpkj59rete.cpp:2:\n/tmp/tmpkj59rete.cpp: In function \u2018int main()\u2019:\n/tmp/tmpkj59rete.cpp:19:203: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   19 |     assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n      |                                                                                                                                                                                                           ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpkj59rete.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpkj59rete.cpp:2:\n/tmp/tmpkj59rete.cpp:19:203: note:  ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to flatten a given nested list structure.\nstd::vector<long> flatten_list(std::any list1) {\n    std::vector<long> result;\n    if (list1.type() == typeid(long)) {\n        result.push_back(std::any_cast<long>(list1));\n    } else {\n        std::vector<std::any> list = std::any_cast<std::vector<std::any>>(list1);\n        for (auto i : list) {\n            std::vector<long> temp = flatten_list(i);\n            result.insert(result.end(), temp.begin(), temp.end());\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = flatten_list;\n    assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)40}), (std::vector<long>)std::vector<long>({(long)30, (long)56, (long)25}), (std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)33}), (std::vector<long>)std::vector<long>({(long)40})}))) == (std::vector<long>({(long)10, (long)20, (long)40, (long)30, (long)56, (long)25, (long)10, (long)20, (long)33, (long)40})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)1, (long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)10, (long)11, (long)12}), (std::vector<long>)std::vector<long>({(long)7, (long)8, (long)9})}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)10, (long)11, (long)12, (long)7, (long)8, (long)9})));\n}\n",
      "timestamp": 1665517687,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpkj59rete.cpp:2:\n/tmp/tmpkj59rete.cpp: In function \u2018int main()\u2019:\n/tmp/tmpkj59rete.cpp:19:203: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   19 |     assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n      |                                                                                                                                                                                                           ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpkj59rete.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpkj59rete.cpp:2:\n/tmp/tmpkj59rete.cpp:19:203: note:  ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to flatten a given nested list structure.\nstd::vector<long> flatten_list(std::any list1) {\n    std::vector<long> result;\n    if (list1.type() == typeid(std::vector<std::any>)) {\n        std::vector<std::any> list = std::any_cast<std::vector<std::any>>(list1);\n        for (auto item : list) {\n            std::vector<long> sub_list = flatten_list(item);\n            result.insert(result.end(), sub_list.begin(), sub_list.end());\n        }\n    } else {\n        result.push_back(std::any_cast<long>(list1));\n    }\n    return result;\n}\nint main() {\n    auto candidate = flatten_list;\n    assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)40}), (std::vector<long>)std::vector<long>({(long)30, (long)56, (long)25}), (std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)33}), (std::vector<long>)std::vector<long>({(long)40})}))) == (std::vector<long>({(long)10, (long)20, (long)40, (long)30, (long)56, (long)25, (long)10, (long)20, (long)33, (long)40})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)1, (long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)10, (long)11, (long)12}), (std::vector<long>)std::vector<long>({(long)7, (long)8, (long)9})}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)10, (long)11, (long)12, (long)7, (long)8, (long)9})));\n}\n",
      "timestamp": 1666123886,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp_966g6e4.cpp:2:\n/tmp/tmp_966g6e4.cpp: In function \u2018int main()\u2019:\n/tmp/tmp_966g6e4.cpp:19:203: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   19 |     assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n      |                                                                                                                                                                                                           ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmp_966g6e4.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp_966g6e4.cpp:2:\n/tmp/tmp_966g6e4.cpp:19:203: note:  ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to flatten a given nested list structure.\nstd::vector<long> flatten_list(std::any list1) {\n    std::vector<long> result;\n    std::vector<std::any> list = list1;\n    for (auto &item : list) {\n        if (item.type() == typeid(std::vector<std::any>)) {\n            std::vector<long> temp = flatten_list(item);\n            result.insert(result.end(), temp.begin(), temp.end());\n        } else {\n            result.push_back(std::any_cast<long>(item));\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = flatten_list;\n    assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)40}), (std::vector<long>)std::vector<long>({(long)30, (long)56, (long)25}), (std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)33}), (std::vector<long>)std::vector<long>({(long)40})}))) == (std::vector<long>({(long)10, (long)20, (long)40, (long)30, (long)56, (long)25, (long)10, (long)20, (long)33, (long)40})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)1, (long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)10, (long)11, (long)12}), (std::vector<long>)std::vector<long>({(long)7, (long)8, (long)9})}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)10, (long)11, (long)12, (long)7, (long)8, (long)9})));\n}\n",
      "timestamp": 1666123886,
      "stdout": "",
      "stderr": "/tmp/tmpewerw3ou.cpp: In function \u2018std::vector<long int> flatten_list(std::any)\u2019:\n/tmp/tmpewerw3ou.cpp:6:34: error: conversion from \u2018std::any\u2019 to non-scalar type \u2018std::vector<std::any>\u2019 requested\n    6 |     std::vector<std::any> list = list1;\n      |                                  ^~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpewerw3ou.cpp:2:\n/tmp/tmpewerw3ou.cpp: In function \u2018int main()\u2019:\n/tmp/tmpewerw3ou.cpp:19:203: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   19 |     assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n      |                                                                                                                                                                                                           ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpewerw3ou.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deductio",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to flatten a given nested list structure.\nstd::vector<long> flatten_list(std::any list1) {\n    std::vector<long> result;\n    if(list1.type() == typeid(long)) {\n        result.push_back(std::any_cast<long>(list1));\n        return result;\n    }\n    else {\n        std::vector<std::any> list = std::any_cast<std::vector<std::any>>(list1);\n        for(auto elem : list) {\n            std::vector<long> temp = flatten_list(elem);\n            result.insert(result.end(), temp.begin(), temp.end());\n        }\n        return result;\n    }\n}\nint main() {\n    auto candidate = flatten_list;\n    assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)40}), (std::vector<long>)std::vector<long>({(long)30, (long)56, (long)25}), (std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)33}), (std::vector<long>)std::vector<long>({(long)40})}))) == (std::vector<long>({(long)10, (long)20, (long)40, (long)30, (long)56, (long)25, (long)10, (long)20, (long)33, (long)40})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)1, (long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)10, (long)11, (long)12}), (std::vector<long>)std::vector<long>({(long)7, (long)8, (long)9})}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)10, (long)11, (long)12, (long)7, (long)8, (long)9})));\n}\n",
      "timestamp": 1666123886,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpla0wps3s.cpp:2:\n/tmp/tmpla0wps3s.cpp: In function \u2018int main()\u2019:\n/tmp/tmpla0wps3s.cpp:21:203: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   21 |     assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n      |                                                                                                                                                                                                           ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpla0wps3s.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpla0wps3s.cpp:2:\n/tmp/tmpla0wps3s.cpp:21:203: note:  ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to flatten a given nested list structure.\nstd::vector<long> flatten_list(std::any list1) {\n    std::vector<long> result;\n    if (list1.type() == typeid(long)) {\n        result.push_back(std::any_cast<long>(list1));\n    } else {\n        std::vector<std::any> list = std::any_cast<std::vector<std::any>>(list1);\n        for (int i = 0; i < list.size(); i++) {\n            std::vector<long> temp = flatten_list(list[i]);\n            result.insert(result.end(), temp.begin(), temp.end());\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = flatten_list;\n    assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)40}), (std::vector<long>)std::vector<long>({(long)30, (long)56, (long)25}), (std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)33}), (std::vector<long>)std::vector<long>({(long)40})}))) == (std::vector<long>({(long)10, (long)20, (long)40, (long)30, (long)56, (long)25, (long)10, (long)20, (long)33, (long)40})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)1, (long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)10, (long)11, (long)12}), (std::vector<long>)std::vector<long>({(long)7, (long)8, (long)9})}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)10, (long)11, (long)12, (long)7, (long)8, (long)9})));\n}\n",
      "timestamp": 1666123886,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpose5o6wj.cpp:2:\n/tmp/tmpose5o6wj.cpp: In function \u2018int main()\u2019:\n/tmp/tmpose5o6wj.cpp:19:203: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   19 |     assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n      |                                                                                                                                                                                                           ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpose5o6wj.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpose5o6wj.cpp:2:\n/tmp/tmpose5o6wj.cpp:19:203: note:  ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to flatten a given nested list structure.\nstd::vector<long> flatten_list(std::any list1) {\n  std::vector<long> list;\n  if (list1.type() == typeid(std::vector<long>)) {\n    list = std::any_cast<std::vector<long>>(list1);\n  } else if (list1.type() == typeid(std::vector<std::any>)) {\n    std::vector<std::any> list2 = std::any_cast<std::vector<std::any>>(list1);\n    for (auto i : list2) {\n      std::vector<long> list3 = flatten_list(i);\n      list.insert(list.end(), list3.begin(), list3.end());\n    }\n  } else {\n    list.push_back(std::any_cast<long>(list1));\n  }\n  return list;\n}\nint main() {\n    auto candidate = flatten_list;\n    assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)40}), (std::vector<long>)std::vector<long>({(long)30, (long)56, (long)25}), (std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)33}), (std::vector<long>)std::vector<long>({(long)40})}))) == (std::vector<long>({(long)10, (long)20, (long)40, (long)30, (long)56, (long)25, (long)10, (long)20, (long)33, (long)40})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)1, (long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)10, (long)11, (long)12}), (std::vector<long>)std::vector<long>({(long)7, (long)8, (long)9})}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)10, (long)11, (long)12, (long)7, (long)8, (long)9})));\n}\n",
      "timestamp": 1666123886,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp24vkbact.cpp:2:\n/tmp/tmp24vkbact.cpp: In function \u2018int main()\u2019:\n/tmp/tmp24vkbact.cpp:21:203: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   21 |     assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n      |                                                                                                                                                                                                           ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmp24vkbact.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp24vkbact.cpp:2:\n/tmp/tmp24vkbact.cpp:21:203: note:  ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to flatten a given nested list structure.\nstd::vector<long> flatten_list(std::any list1) {\n    std::vector<long> result;\n    if (list1.type() == typeid(long)) {\n        result.push_back(std::any_cast<long>(list1));\n    } else {\n        std::vector<std::any> list = std::any_cast<std::vector<std::any>>(list1);\n        for (auto i : list) {\n            std::vector<long> temp = flatten_list(i);\n            result.insert(result.end(), temp.begin(), temp.end());\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = flatten_list;\n    assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)40}), (std::vector<long>)std::vector<long>({(long)30, (long)56, (long)25}), (std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)33}), (std::vector<long>)std::vector<long>({(long)40})}))) == (std::vector<long>({(long)10, (long)20, (long)40, (long)30, (long)56, (long)25, (long)10, (long)20, (long)33, (long)40})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)1, (long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)10, (long)11, (long)12}), (std::vector<long>)std::vector<long>({(long)7, (long)8, (long)9})}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)10, (long)11, (long)12, (long)7, (long)8, (long)9})));\n}\n",
      "timestamp": 1665517687,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpkj59rete.cpp:2:\n/tmp/tmpkj59rete.cpp: In function \u2018int main()\u2019:\n/tmp/tmpkj59rete.cpp:19:203: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   19 |     assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n      |                                                                                                                                                                                                           ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpkj59rete.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpkj59rete.cpp:2:\n/tmp/tmpkj59rete.cpp:19:203: note:  ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to flatten a given nested list structure.\nstd::vector<long> flatten_list(std::any list1) {\n    std::vector<long> result;\n    if(list1.type() == typeid(std::vector<std::any>)) {\n        std::vector<std::any> list = std::any_cast<std::vector<std::any>>(list1);\n        for(auto i : list) {\n            std::vector<long> temp = flatten_list(i);\n            result.insert(result.end(), temp.begin(), temp.end());\n        }\n    } else {\n        result.push_back(std::any_cast<long>(list1));\n    }\n    return result;\n}\nint main() {\n    auto candidate = flatten_list;\n    assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)40}), (std::vector<long>)std::vector<long>({(long)30, (long)56, (long)25}), (std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)33}), (std::vector<long>)std::vector<long>({(long)40})}))) == (std::vector<long>({(long)10, (long)20, (long)40, (long)30, (long)56, (long)25, (long)10, (long)20, (long)33, (long)40})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)1, (long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)10, (long)11, (long)12}), (std::vector<long>)std::vector<long>({(long)7, (long)8, (long)9})}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)10, (long)11, (long)12, (long)7, (long)8, (long)9})));\n}\n",
      "timestamp": 1666123887,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpdp7cavfh.cpp:2:\n/tmp/tmpdp7cavfh.cpp: In function \u2018int main()\u2019:\n/tmp/tmpdp7cavfh.cpp:19:203: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   19 |     assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n      |                                                                                                                                                                                                           ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpdp7cavfh.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpdp7cavfh.cpp:2:\n/tmp/tmpdp7cavfh.cpp:19:203: note:  ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to flatten a given nested list structure.\nstd::vector<long> flatten_list(std::any list1) {\n    std::vector<long> result;\n    if (list1.type() == typeid(long)) {\n        result.push_back(std::any_cast<long>(list1));\n    } else {\n        std::vector<std::any> list = std::any_cast<std::vector<std::any>>(list1);\n        for (auto i : list) {\n            std::vector<long> temp = flatten_list(i);\n            result.insert(result.end(), temp.begin(), temp.end());\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = flatten_list;\n    assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)40}), (std::vector<long>)std::vector<long>({(long)30, (long)56, (long)25}), (std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)33}), (std::vector<long>)std::vector<long>({(long)40})}))) == (std::vector<long>({(long)10, (long)20, (long)40, (long)30, (long)56, (long)25, (long)10, (long)20, (long)33, (long)40})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)1, (long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)10, (long)11, (long)12}), (std::vector<long>)std::vector<long>({(long)7, (long)8, (long)9})}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)10, (long)11, (long)12, (long)7, (long)8, (long)9})));\n}\n",
      "timestamp": 1665517687,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpkj59rete.cpp:2:\n/tmp/tmpkj59rete.cpp: In function \u2018int main()\u2019:\n/tmp/tmpkj59rete.cpp:19:203: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   19 |     assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n      |                                                                                                                                                                                                           ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpkj59rete.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpkj59rete.cpp:2:\n/tmp/tmpkj59rete.cpp:19:203: note:  ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to flatten a given nested list structure.\nstd::vector<long> flatten_list(std::any list1) {\n    std::vector<long> result;\n    if (list1.type() == typeid(std::vector<std::any>)) {\n        std::vector<std::any> list = std::any_cast<std::vector<std::any>>(list1);\n        for (auto &i : list) {\n            std::vector<long> temp = flatten_list(i);\n            result.insert(result.end(), temp.begin(), temp.end());\n        }\n    } else {\n        result.push_back(std::any_cast<long>(list1));\n    }\n    return result;\n}\nint main() {\n    auto candidate = flatten_list;\n    assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)40}), (std::vector<long>)std::vector<long>({(long)30, (long)56, (long)25}), (std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)33}), (std::vector<long>)std::vector<long>({(long)40})}))) == (std::vector<long>({(long)10, (long)20, (long)40, (long)30, (long)56, (long)25, (long)10, (long)20, (long)33, (long)40})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)1, (long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)10, (long)11, (long)12}), (std::vector<long>)std::vector<long>({(long)7, (long)8, (long)9})}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)10, (long)11, (long)12, (long)7, (long)8, (long)9})));\n}\n",
      "timestamp": 1666123886,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpskr9vncv.cpp:2:\n/tmp/tmpskr9vncv.cpp: In function \u2018int main()\u2019:\n/tmp/tmpskr9vncv.cpp:19:203: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   19 |     assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n      |                                                                                                                                                                                                           ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpskr9vncv.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpskr9vncv.cpp:2:\n/tmp/tmpskr9vncv.cpp:19:203: note:  ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to flatten a given nested list structure.\nstd::vector<long> flatten_list(std::any list1) {\n    std::vector<long> result;\n    if (list1.type() == typeid(std::vector<long>)) {\n        for (auto i : std::any_cast<std::vector<long>>(list1)) {\n            result.push_back(i);\n        }\n    } else if (list1.type() == typeid(std::vector<std::any>)) {\n        for (auto i : std::any_cast<std::vector<std::any>>(list1)) {\n            std::vector<long> temp = flatten_list(i);\n            result.insert(result.end(), temp.begin(), temp.end());\n        }\n    } else {\n        assert(false);\n    }\n    return result;\n}\nint main() {\n    auto candidate = flatten_list;\n    assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)40}), (std::vector<long>)std::vector<long>({(long)30, (long)56, (long)25}), (std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)33}), (std::vector<long>)std::vector<long>({(long)40})}))) == (std::vector<long>({(long)10, (long)20, (long)40, (long)30, (long)56, (long)25, (long)10, (long)20, (long)33, (long)40})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)1, (long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)10, (long)11, (long)12}), (std::vector<long>)std::vector<long>({(long)7, (long)8, (long)9})}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)10, (long)11, (long)12, (long)7, (long)8, (long)9})));\n}\n",
      "timestamp": 1666123886,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp70odf4dk.cpp:2:\n/tmp/tmp70odf4dk.cpp: In function \u2018int main()\u2019:\n/tmp/tmp70odf4dk.cpp:22:203: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   22 |     assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n      |                                                                                                                                                                                                           ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmp70odf4dk.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp70odf4dk.cpp:2:\n/tmp/tmp70odf4dk.cpp:22:203: note:  ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to flatten a given nested list structure.\nstd::vector<long> flatten_list(std::any list1) {\n    std::vector<long> result;\n    if (list1.type() == typeid(long)) {\n        result.push_back(std::any_cast<long>(list1));\n    } else {\n        std::vector<std::any> list = std::any_cast<std::vector<std::any>>(list1);\n        for (auto item : list) {\n            std::vector<long> temp = flatten_list(item);\n            result.insert(result.end(), temp.begin(), temp.end());\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = flatten_list;\n    assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)40}), (std::vector<long>)std::vector<long>({(long)30, (long)56, (long)25}), (std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)33}), (std::vector<long>)std::vector<long>({(long)40})}))) == (std::vector<long>({(long)10, (long)20, (long)40, (long)30, (long)56, (long)25, (long)10, (long)20, (long)33, (long)40})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)1, (long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)10, (long)11, (long)12}), (std::vector<long>)std::vector<long>({(long)7, (long)8, (long)9})}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)10, (long)11, (long)12, (long)7, (long)8, (long)9})));\n}\n",
      "timestamp": 1666123886,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp3gmh047e.cpp:2:\n/tmp/tmp3gmh047e.cpp: In function \u2018int main()\u2019:\n/tmp/tmp3gmh047e.cpp:19:203: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   19 |     assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n      |                                                                                                                                                                                                           ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmp3gmh047e.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp3gmh047e.cpp:2:\n/tmp/tmp3gmh047e.cpp:19:203: note:  ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to flatten a given nested list structure.\nstd::vector<long> flatten_list(std::any list1) {\n    std::vector<long> result;\n    if (list1.type() == typeid(std::vector<std::any>)) {\n        std::vector<std::any> list = std::any_cast<std::vector<std::any>>(list1);\n        for (auto i : list) {\n            std::vector<long> temp = flatten_list(i);\n            result.insert(result.end(), temp.begin(), temp.end());\n        }\n    } else {\n        result.push_back(std::any_cast<long>(list1));\n    }\n    return result;\n}\nint main() {\n    auto candidate = flatten_list;\n    assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)40}), (std::vector<long>)std::vector<long>({(long)30, (long)56, (long)25}), (std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)33}), (std::vector<long>)std::vector<long>({(long)40})}))) == (std::vector<long>({(long)10, (long)20, (long)40, (long)30, (long)56, (long)25, (long)10, (long)20, (long)33, (long)40})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)1, (long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)10, (long)11, (long)12}), (std::vector<long>)std::vector<long>({(long)7, (long)8, (long)9})}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)10, (long)11, (long)12, (long)7, (long)8, (long)9})));\n}\n",
      "timestamp": 1665517687,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpdjkb_dx9.cpp:2:\n/tmp/tmpdjkb_dx9.cpp: In function \u2018int main()\u2019:\n/tmp/tmpdjkb_dx9.cpp:19:203: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   19 |     assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n      |                                                                                                                                                                                                           ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpdjkb_dx9.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpdjkb_dx9.cpp:2:\n/tmp/tmpdjkb_dx9.cpp:19:203: note:  ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to flatten a given nested list structure.\nstd::vector<long> flatten_list(std::any list1) {\n    std::vector<long> result;\n    if (list1.type() == typeid(std::vector<std::any>)) {\n        for (auto &item : std::any_cast<std::vector<std::any>>(list1)) {\n            auto temp = flatten_list(item);\n            result.insert(result.end(), temp.begin(), temp.end());\n        }\n    } else {\n        result.push_back(std::any_cast<long>(list1));\n    }\n    return result;\n}\nint main() {\n    auto candidate = flatten_list;\n    assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)40}), (std::vector<long>)std::vector<long>({(long)30, (long)56, (long)25}), (std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)33}), (std::vector<long>)std::vector<long>({(long)40})}))) == (std::vector<long>({(long)10, (long)20, (long)40, (long)30, (long)56, (long)25, (long)10, (long)20, (long)33, (long)40})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)1, (long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)10, (long)11, (long)12}), (std::vector<long>)std::vector<long>({(long)7, (long)8, (long)9})}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)10, (long)11, (long)12, (long)7, (long)8, (long)9})));\n}\n",
      "timestamp": 1666123886,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp9v3jirli.cpp:2:\n/tmp/tmp9v3jirli.cpp: In function \u2018int main()\u2019:\n/tmp/tmp9v3jirli.cpp:18:203: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   18 |     assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n      |                                                                                                                                                                                                           ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmp9v3jirli.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp9v3jirli.cpp:2:\n/tmp/tmp9v3jirli.cpp:18:203: note:  ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to flatten a given nested list structure.\nstd::vector<long> flatten_list(std::any list1) {\n    std::vector<long> result;\n    if(list1.type() == typeid(std::vector<std::any>)) {\n        for(auto &i : std::any_cast<std::vector<std::any>>(list1)) {\n            auto temp = flatten_list(i);\n            result.insert(result.end(), temp.begin(), temp.end());\n        }\n    }\n    else {\n        result.push_back(std::any_cast<long>(list1));\n    }\n    return result;\n}\nint main() {\n    auto candidate = flatten_list;\n    assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)40}), (std::vector<long>)std::vector<long>({(long)30, (long)56, (long)25}), (std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)33}), (std::vector<long>)std::vector<long>({(long)40})}))) == (std::vector<long>({(long)10, (long)20, (long)40, (long)30, (long)56, (long)25, (long)10, (long)20, (long)33, (long)40})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)1, (long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)10, (long)11, (long)12}), (std::vector<long>)std::vector<long>({(long)7, (long)8, (long)9})}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)10, (long)11, (long)12, (long)7, (long)8, (long)9})));\n}\n",
      "timestamp": 1666123886,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpunxe_jvw.cpp:2:\n/tmp/tmpunxe_jvw.cpp: In function \u2018int main()\u2019:\n/tmp/tmpunxe_jvw.cpp:19:203: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   19 |     assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n      |                                                                                                                                                                                                           ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpunxe_jvw.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpunxe_jvw.cpp:2:\n/tmp/tmpunxe_jvw.cpp:19:203: note:  ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to flatten a given nested list structure.\nstd::vector<long> flatten_list(std::any list1) {\n    std::vector<long> result;\n    if(list1.type() == typeid(int)){\n        result.push_back(std::any_cast<int>(list1));\n    }\n    else if(list1.type() == typeid(std::vector<std::any>)){\n        std::vector<std::any> list2 = std::any_cast<std::vector<std::any>>(list1);\n        for(int i = 0; i < list2.size(); i++){\n            std::vector<long> temp = flatten_list(list2[i]);\n            result.insert(result.end(), temp.begin(), temp.end());\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = flatten_list;\n    assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)40}), (std::vector<long>)std::vector<long>({(long)30, (long)56, (long)25}), (std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)33}), (std::vector<long>)std::vector<long>({(long)40})}))) == (std::vector<long>({(long)10, (long)20, (long)40, (long)30, (long)56, (long)25, (long)10, (long)20, (long)33, (long)40})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)1, (long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)10, (long)11, (long)12}), (std::vector<long>)std::vector<long>({(long)7, (long)8, (long)9})}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)10, (long)11, (long)12, (long)7, (long)8, (long)9})));\n}\n",
      "timestamp": 1666123886,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpvhe47xra.cpp:2:\n/tmp/tmpvhe47xra.cpp: In function \u2018int main()\u2019:\n/tmp/tmpvhe47xra.cpp:20:203: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   20 |     assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n      |                                                                                                                                                                                                           ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpvhe47xra.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpvhe47xra.cpp:2:\n/tmp/tmpvhe47xra.cpp:20:203: note:  ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to flatten a given nested list structure.\nstd::vector<long> flatten_list(std::any list1) {\n    std::vector<long> result;\n    if(list1.type() == typeid(long)) {\n        result.push_back(std::any_cast<long>(list1));\n    } else {\n        std::vector<std::any> list2 = std::any_cast<std::vector<std::any>>(list1);\n        for(auto it : list2) {\n            std::vector<long> temp = flatten_list(it);\n            result.insert(result.end(), temp.begin(), temp.end());\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = flatten_list;\n    assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)40}), (std::vector<long>)std::vector<long>({(long)30, (long)56, (long)25}), (std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)33}), (std::vector<long>)std::vector<long>({(long)40})}))) == (std::vector<long>({(long)10, (long)20, (long)40, (long)30, (long)56, (long)25, (long)10, (long)20, (long)33, (long)40})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)1, (long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)10, (long)11, (long)12}), (std::vector<long>)std::vector<long>({(long)7, (long)8, (long)9})}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)10, (long)11, (long)12, (long)7, (long)8, (long)9})));\n}\n",
      "timestamp": 1666123886,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpnl2wggia.cpp:2:\n/tmp/tmpnl2wggia.cpp: In function \u2018int main()\u2019:\n/tmp/tmpnl2wggia.cpp:19:203: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   19 |     assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n      |                                                                                                                                                                                                           ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpnl2wggia.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpnl2wggia.cpp:2:\n/tmp/tmpnl2wggia.cpp:19:203: note:  ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to flatten a given nested list structure.\nstd::vector<long> flatten_list(std::any list1) {\n    std::vector<long> list2;\n    if(list1.type() == typeid(std::vector<std::any>)) {\n        for(auto i : std::any_cast<std::vector<std::any>>(list1)) {\n            auto temp = flatten_list(i);\n            list2.insert(list2.end(), temp.begin(), temp.end());\n        }\n    }\n    else {\n        list2.push_back(std::any_cast<long>(list1));\n    }\n    return list2;\n}\nint main() {\n    auto candidate = flatten_list;\n    assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)40}), (std::vector<long>)std::vector<long>({(long)30, (long)56, (long)25}), (std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)33}), (std::vector<long>)std::vector<long>({(long)40})}))) == (std::vector<long>({(long)10, (long)20, (long)40, (long)30, (long)56, (long)25, (long)10, (long)20, (long)33, (long)40})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)1, (long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)10, (long)11, (long)12}), (std::vector<long>)std::vector<long>({(long)7, (long)8, (long)9})}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)10, (long)11, (long)12, (long)7, (long)8, (long)9})));\n}\n",
      "timestamp": 1666123886,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpfrv0unbh.cpp:2:\n/tmp/tmpfrv0unbh.cpp: In function \u2018int main()\u2019:\n/tmp/tmpfrv0unbh.cpp:19:203: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   19 |     assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n      |                                                                                                                                                                                                           ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpfrv0unbh.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpfrv0unbh.cpp:2:\n/tmp/tmpfrv0unbh.cpp:19:203: note:  ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to flatten a given nested list structure.\nstd::vector<long> flatten_list(std::any list1) {\n  std::vector<long> list2;\n  if (list1.type() == typeid(long)) {\n    list2.push_back(std::any_cast<long>(list1));\n  } else {\n    std::vector<std::any> list3 = std::any_cast<std::vector<std::any>>(list1);\n    for (auto i : list3) {\n      std::vector<long> list4 = flatten_list(i);\n      list2.insert(list2.end(), list4.begin(), list4.end());\n    }\n  }\n  return list2;\n}\nint main() {\n    auto candidate = flatten_list;\n    assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)40}), (std::vector<long>)std::vector<long>({(long)30, (long)56, (long)25}), (std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)33}), (std::vector<long>)std::vector<long>({(long)40})}))) == (std::vector<long>({(long)10, (long)20, (long)40, (long)30, (long)56, (long)25, (long)10, (long)20, (long)33, (long)40})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)1, (long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)10, (long)11, (long)12}), (std::vector<long>)std::vector<long>({(long)7, (long)8, (long)9})}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)10, (long)11, (long)12, (long)7, (long)8, (long)9})));\n}\n",
      "timestamp": 1666123886,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp19t6grtk.cpp:2:\n/tmp/tmp19t6grtk.cpp: In function \u2018int main()\u2019:\n/tmp/tmp19t6grtk.cpp:19:203: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   19 |     assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n      |                                                                                                                                                                                                           ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmp19t6grtk.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp19t6grtk.cpp:2:\n/tmp/tmp19t6grtk.cpp:19:203: note:  ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to flatten a given nested list structure.\nstd::vector<long> flatten_list(std::any list1) {\n    std::vector<long> result;\n    if(list1.type() == typeid(std::vector<std::any>)) {\n        std::vector<std::any> list = std::any_cast<std::vector<std::any>>(list1);\n        for(auto i : list) {\n            std::vector<long> temp = flatten_list(i);\n            result.insert(result.end(), temp.begin(), temp.end());\n        }\n    } else {\n        result.push_back(std::any_cast<long>(list1));\n    }\n    return result;\n}\nint main() {\n    auto candidate = flatten_list;\n    assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)40}), (std::vector<long>)std::vector<long>({(long)30, (long)56, (long)25}), (std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)33}), (std::vector<long>)std::vector<long>({(long)40})}))) == (std::vector<long>({(long)10, (long)20, (long)40, (long)30, (long)56, (long)25, (long)10, (long)20, (long)33, (long)40})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)1, (long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)10, (long)11, (long)12}), (std::vector<long>)std::vector<long>({(long)7, (long)8, (long)9})}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)10, (long)11, (long)12, (long)7, (long)8, (long)9})));\n}\n",
      "timestamp": 1666123887,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpdp7cavfh.cpp:2:\n/tmp/tmpdp7cavfh.cpp: In function \u2018int main()\u2019:\n/tmp/tmpdp7cavfh.cpp:19:203: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   19 |     assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n      |                                                                                                                                                                                                           ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpdp7cavfh.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpdp7cavfh.cpp:2:\n/tmp/tmpdp7cavfh.cpp:19:203: note:  ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to flatten a given nested list structure.\nstd::vector<long> flatten_list(std::any list1) {\n    std::vector<long> list;\n    if (list1.type() == typeid(long)) {\n        list.push_back(std::any_cast<long>(list1));\n        return list;\n    }\n    else {\n        std::vector<std::any> list2 = std::any_cast<std::vector<std::any>>(list1);\n        for (auto i : list2) {\n            std::vector<long> list3 = flatten_list(i);\n            for (auto j : list3) {\n                list.push_back(j);\n            }\n        }\n        return list;\n    }\n}\nint main() {\n    auto candidate = flatten_list;\n    assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)40}), (std::vector<long>)std::vector<long>({(long)30, (long)56, (long)25}), (std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)33}), (std::vector<long>)std::vector<long>({(long)40})}))) == (std::vector<long>({(long)10, (long)20, (long)40, (long)30, (long)56, (long)25, (long)10, (long)20, (long)33, (long)40})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)1, (long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)10, (long)11, (long)12}), (std::vector<long>)std::vector<long>({(long)7, (long)8, (long)9})}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)10, (long)11, (long)12, (long)7, (long)8, (long)9})));\n}\n",
      "timestamp": 1666123886,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpjl20jv_t.cpp:2:\n/tmp/tmpjl20jv_t.cpp: In function \u2018int main()\u2019:\n/tmp/tmpjl20jv_t.cpp:23:203: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   23 |     assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n      |                                                                                                                                                                                                           ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpjl20jv_t.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpjl20jv_t.cpp:2:\n/tmp/tmpjl20jv_t.cpp:23:203: note:  ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to flatten a given nested list structure.\nstd::vector<long> flatten_list(std::any list1) {\n    std::vector<long> result;\n    if (list1.type() == typeid(std::vector<std::any>)) {\n        std::vector<std::any> list = std::any_cast<std::vector<std::any>>(list1);\n        for (auto it = list.begin(); it != list.end(); it++) {\n            std::vector<long> temp = flatten_list(*it);\n            result.insert(result.end(), temp.begin(), temp.end());\n        }\n    } else {\n        result.push_back(std::any_cast<long>(list1));\n    }\n    return result;\n}\nint main() {\n    auto candidate = flatten_list;\n    assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)40}), (std::vector<long>)std::vector<long>({(long)30, (long)56, (long)25}), (std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)33}), (std::vector<long>)std::vector<long>({(long)40})}))) == (std::vector<long>({(long)10, (long)20, (long)40, (long)30, (long)56, (long)25, (long)10, (long)20, (long)33, (long)40})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)1, (long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)10, (long)11, (long)12}), (std::vector<long>)std::vector<long>({(long)7, (long)8, (long)9})}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)10, (long)11, (long)12, (long)7, (long)8, (long)9})));\n}\n",
      "timestamp": 1666123886,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpum3az50g.cpp:2:\n/tmp/tmpum3az50g.cpp: In function \u2018int main()\u2019:\n/tmp/tmpum3az50g.cpp:19:203: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   19 |     assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n      |                                                                                                                                                                                                           ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpum3az50g.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpum3az50g.cpp:2:\n/tmp/tmpum3az50g.cpp:19:203: note:  ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to flatten a given nested list structure.\nstd::vector<long> flatten_list(std::any list1) {\n    std::vector<long> result;\n    if (list1.type() == typeid(long)) {\n        result.push_back(std::any_cast<long>(list1));\n    } else {\n        std::vector<std::any> list = std::any_cast<std::vector<std::any>>(list1);\n        for (auto item : list) {\n            std::vector<long> temp = flatten_list(item);\n            result.insert(result.end(), temp.begin(), temp.end());\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = flatten_list;\n    assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)40}), (std::vector<long>)std::vector<long>({(long)30, (long)56, (long)25}), (std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)33}), (std::vector<long>)std::vector<long>({(long)40})}))) == (std::vector<long>({(long)10, (long)20, (long)40, (long)30, (long)56, (long)25, (long)10, (long)20, (long)33, (long)40})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)1, (long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)10, (long)11, (long)12}), (std::vector<long>)std::vector<long>({(long)7, (long)8, (long)9})}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)10, (long)11, (long)12, (long)7, (long)8, (long)9})));\n}\n",
      "timestamp": 1666123886,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp3gmh047e.cpp:2:\n/tmp/tmp3gmh047e.cpp: In function \u2018int main()\u2019:\n/tmp/tmp3gmh047e.cpp:19:203: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   19 |     assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n      |                                                                                                                                                                                                           ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmp3gmh047e.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp3gmh047e.cpp:2:\n/tmp/tmp3gmh047e.cpp:19:203: note:  ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to flatten a given nested list structure.\nstd::vector<long> flatten_list(std::any list1) {\n    std::vector<long> result;\n    if (list1.type() == typeid(std::vector<std::any>)) {\n        std::vector<std::any> list = std::any_cast<std::vector<std::any>>(list1);\n        for (auto i : list) {\n            std::vector<long> temp = flatten_list(i);\n            result.insert(result.end(), temp.begin(), temp.end());\n        }\n    } else {\n        result.push_back(std::any_cast<long>(list1));\n    }\n    return result;\n}\nint main() {\n    auto candidate = flatten_list;\n    assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)40}), (std::vector<long>)std::vector<long>({(long)30, (long)56, (long)25}), (std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)33}), (std::vector<long>)std::vector<long>({(long)40})}))) == (std::vector<long>({(long)10, (long)20, (long)40, (long)30, (long)56, (long)25, (long)10, (long)20, (long)33, (long)40})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)1, (long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)10, (long)11, (long)12}), (std::vector<long>)std::vector<long>({(long)7, (long)8, (long)9})}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)10, (long)11, (long)12, (long)7, (long)8, (long)9})));\n}\n",
      "timestamp": 1665517687,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpdjkb_dx9.cpp:2:\n/tmp/tmpdjkb_dx9.cpp: In function \u2018int main()\u2019:\n/tmp/tmpdjkb_dx9.cpp:19:203: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   19 |     assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n      |                                                                                                                                                                                                           ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpdjkb_dx9.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpdjkb_dx9.cpp:2:\n/tmp/tmpdjkb_dx9.cpp:19:203: note:  ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to flatten a given nested list structure.\nstd::vector<long> flatten_list(std::any list1) {\n    std::vector<long> result;\n    if (list1.type() == typeid(long)) {\n        result.push_back(std::any_cast<long>(list1));\n    }\n    else {\n        std::vector<std::any> list = std::any_cast<std::vector<std::any>>(list1);\n        for (auto item : list) {\n            std::vector<long> temp = flatten_list(item);\n            result.insert(result.end(), temp.begin(), temp.end());\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = flatten_list;\n    assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)40}), (std::vector<long>)std::vector<long>({(long)30, (long)56, (long)25}), (std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)33}), (std::vector<long>)std::vector<long>({(long)40})}))) == (std::vector<long>({(long)10, (long)20, (long)40, (long)30, (long)56, (long)25, (long)10, (long)20, (long)33, (long)40})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)1, (long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)10, (long)11, (long)12}), (std::vector<long>)std::vector<long>({(long)7, (long)8, (long)9})}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)10, (long)11, (long)12, (long)7, (long)8, (long)9})));\n}\n",
      "timestamp": 1666123886,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpyp6q26j6.cpp:2:\n/tmp/tmpyp6q26j6.cpp: In function \u2018int main()\u2019:\n/tmp/tmpyp6q26j6.cpp:20:203: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   20 |     assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n      |                                                                                                                                                                                                           ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpyp6q26j6.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpyp6q26j6.cpp:2:\n/tmp/tmpyp6q26j6.cpp:20:203: note:  ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to flatten a given nested list structure.\nstd::vector<long> flatten_list(std::any list1) {\n    std::vector<long> list2;\n    if (list1.type() == typeid(std::vector<std::any>)) {\n        for (auto &i : std::any_cast<std::vector<std::any>>(list1)) {\n            auto list3 = flatten_list(i);\n            list2.insert(list2.end(), list3.begin(), list3.end());\n        }\n    } else {\n        list2.push_back(std::any_cast<long>(list1));\n    }\n    return list2;\n}\nint main() {\n    auto candidate = flatten_list;\n    assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)40}), (std::vector<long>)std::vector<long>({(long)30, (long)56, (long)25}), (std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)33}), (std::vector<long>)std::vector<long>({(long)40})}))) == (std::vector<long>({(long)10, (long)20, (long)40, (long)30, (long)56, (long)25, (long)10, (long)20, (long)33, (long)40})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)1, (long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)10, (long)11, (long)12}), (std::vector<long>)std::vector<long>({(long)7, (long)8, (long)9})}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)10, (long)11, (long)12, (long)7, (long)8, (long)9})));\n}\n",
      "timestamp": 1666123885,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp93wl6zn2.cpp:2:\n/tmp/tmp93wl6zn2.cpp: In function \u2018int main()\u2019:\n/tmp/tmp93wl6zn2.cpp:18:203: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   18 |     assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n      |                                                                                                                                                                                                           ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmp93wl6zn2.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp93wl6zn2.cpp:2:\n/tmp/tmp93wl6zn2.cpp:18:203: note:  ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to flatten a given nested list structure.\nstd::vector<long> flatten_list(std::any list1) {\n  std::vector<long> flat_list;\n  if (list1.type() == typeid(std::vector<long>)) {\n    for (auto &i : std::any_cast<std::vector<long>>(list1)) {\n      flat_list.push_back(i);\n    }\n  } else if (list1.type() == typeid(std::vector<std::any>)) {\n    for (auto &i : std::any_cast<std::vector<std::any>>(list1)) {\n      std::vector<long> temp = flatten_list(i);\n      flat_list.insert(flat_list.end(), temp.begin(), temp.end());\n    }\n  } else {\n    flat_list.push_back(std::any_cast<long>(list1));\n  }\n  return flat_list;\n}\nint main() {\n    auto candidate = flatten_list;\n    assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)40}), (std::vector<long>)std::vector<long>({(long)30, (long)56, (long)25}), (std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)33}), (std::vector<long>)std::vector<long>({(long)40})}))) == (std::vector<long>({(long)10, (long)20, (long)40, (long)30, (long)56, (long)25, (long)10, (long)20, (long)33, (long)40})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)1, (long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)10, (long)11, (long)12}), (std::vector<long>)std::vector<long>({(long)7, (long)8, (long)9})}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)10, (long)11, (long)12, (long)7, (long)8, (long)9})));\n}\n",
      "timestamp": 1666123886,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpeycck5lb.cpp:2:\n/tmp/tmpeycck5lb.cpp: In function \u2018int main()\u2019:\n/tmp/tmpeycck5lb.cpp:22:203: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   22 |     assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n      |                                                                                                                                                                                                           ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpeycck5lb.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpeycck5lb.cpp:2:\n/tmp/tmpeycck5lb.cpp:22:203: note:  ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to flatten a given nested list structure.\nstd::vector<long> flatten_list(std::any list1) {\n    std::vector<long> result;\n    if (list1.type() == typeid(std::vector<std::any>)) {\n        for (auto &i : std::any_cast<std::vector<std::any>>(list1)) {\n            std::vector<long> temp = flatten_list(i);\n            result.insert(result.end(), temp.begin(), temp.end());\n        }\n    } else {\n        result.push_back(std::any_cast<long>(list1));\n    }\n    return result;\n}\nint main() {\n    auto candidate = flatten_list;\n    assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)40}), (std::vector<long>)std::vector<long>({(long)30, (long)56, (long)25}), (std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)33}), (std::vector<long>)std::vector<long>({(long)40})}))) == (std::vector<long>({(long)10, (long)20, (long)40, (long)30, (long)56, (long)25, (long)10, (long)20, (long)33, (long)40})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)1, (long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)10, (long)11, (long)12}), (std::vector<long>)std::vector<long>({(long)7, (long)8, (long)9})}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)10, (long)11, (long)12, (long)7, (long)8, (long)9})));\n}\n",
      "timestamp": 1666123885,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpftwswf1g.cpp:2:\n/tmp/tmpftwswf1g.cpp: In function \u2018int main()\u2019:\n/tmp/tmpftwswf1g.cpp:18:203: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   18 |     assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n      |                                                                                                                                                                                                           ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpftwswf1g.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpftwswf1g.cpp:2:\n/tmp/tmpftwswf1g.cpp:18:203: note:  ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to flatten a given nested list structure.\nstd::vector<long> flatten_list(std::any list1) {\n    std::vector<long> list2;\n    if (list1.type() == typeid(std::vector<long>)) {\n        for (auto i : std::any_cast<std::vector<long>>(list1)) {\n            list2.push_back(i);\n        }\n    } else if (list1.type() == typeid(std::vector<std::any>)) {\n        for (auto i : std::any_cast<std::vector<std::any>>(list1)) {\n            std::vector<long> list3 = flatten_list(i);\n            for (auto j : list3) {\n                list2.push_back(j);\n            }\n        }\n    } else {\n        list2.push_back(std::any_cast<long>(list1));\n    }\n    return list2;\n}\nint main() {\n    auto candidate = flatten_list;\n    assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)40}), (std::vector<long>)std::vector<long>({(long)30, (long)56, (long)25}), (std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)33}), (std::vector<long>)std::vector<long>({(long)40})}))) == (std::vector<long>({(long)10, (long)20, (long)40, (long)30, (long)56, (long)25, (long)10, (long)20, (long)33, (long)40})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)1, (long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)10, (long)11, (long)12}), (std::vector<long>)std::vector<long>({(long)7, (long)8, (long)9})}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)10, (long)11, (long)12, (long)7, (long)8, (long)9})));\n}\n",
      "timestamp": 1666123886,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp_z4r_bfz.cpp:2:\n/tmp/tmp_z4r_bfz.cpp: In function \u2018int main()\u2019:\n/tmp/tmp_z4r_bfz.cpp:24:203: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   24 |     assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n      |                                                                                                                                                                                                           ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmp_z4r_bfz.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp_z4r_bfz.cpp:2:\n/tmp/tmp_z4r_bfz.cpp:24:203: note:  ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to flatten a given nested list structure.\nstd::vector<long> flatten_list(std::any list1) {\n    std::vector<long> res;\n    if(list1.type() == typeid(std::vector<std::any>)) {\n        for(auto &i : std::any_cast<std::vector<std::any>>(list1)) {\n            auto temp = flatten_list(i);\n            res.insert(res.end(), temp.begin(), temp.end());\n        }\n    } else {\n        res.push_back(std::any_cast<long>(list1));\n    }\n    return res;\n}\nint main() {\n    auto candidate = flatten_list;\n    assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)40}), (std::vector<long>)std::vector<long>({(long)30, (long)56, (long)25}), (std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)33}), (std::vector<long>)std::vector<long>({(long)40})}))) == (std::vector<long>({(long)10, (long)20, (long)40, (long)30, (long)56, (long)25, (long)10, (long)20, (long)33, (long)40})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)1, (long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)10, (long)11, (long)12}), (std::vector<long>)std::vector<long>({(long)7, (long)8, (long)9})}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)10, (long)11, (long)12, (long)7, (long)8, (long)9})));\n}\n",
      "timestamp": 1666123886,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpd9ttkv2y.cpp:2:\n/tmp/tmpd9ttkv2y.cpp: In function \u2018int main()\u2019:\n/tmp/tmpd9ttkv2y.cpp:18:203: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   18 |     assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n      |                                                                                                                                                                                                           ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpd9ttkv2y.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpd9ttkv2y.cpp:2:\n/tmp/tmpd9ttkv2y.cpp:18:203: note:  ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to flatten a given nested list structure.\nstd::vector<long> flatten_list(std::any list1) {\n    std::vector<long> result;\n    if (list1.type() == typeid(std::vector<long>)) {\n        std::vector<long> list = std::any_cast<std::vector<long>>(list1);\n        for (auto i : list) {\n            if (i.type() == typeid(std::vector<long>)) {\n                std::vector<long> temp = flatten_list(i);\n                result.insert(result.end(), temp.begin(), temp.end());\n            } else {\n                result.push_back(std::any_cast<long>(i));\n            }\n        }\n    } else {\n        result.push_back(std::any_cast<long>(list1));\n    }\n    return result;\n}\nint main() {\n    auto candidate = flatten_list;\n    assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)40}), (std::vector<long>)std::vector<long>({(long)30, (long)56, (long)25}), (std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)33}), (std::vector<long>)std::vector<long>({(long)40})}))) == (std::vector<long>({(long)10, (long)20, (long)40, (long)30, (long)56, (long)25, (long)10, (long)20, (long)33, (long)40})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)1, (long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)10, (long)11, (long)12}), (std::vector<long>)std::vector<long>({(long)7, (long)8, (long)9})}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)10, (long)11, (long)12, (long)7, (long)8, (long)9})));\n}\n",
      "timestamp": 1666123885,
      "stdout": "",
      "stderr": "/tmp/tmpzarvl_wt.cpp: In function \u2018std::vector<long int> flatten_list(std::any)\u2019:\n/tmp/tmpzarvl_wt.cpp:9:19: error: request for member \u2018type\u2019 in \u2018i\u2019, which is of non-class type \u2018long int\u2019\n    9 |             if (i.type() == typeid(std::vector<long>)) {\n      |                   ^~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpzarvl_wt.cpp:2:\n/tmp/tmpzarvl_wt.cpp: In function \u2018int main()\u2019:\n/tmp/tmpzarvl_wt.cpp:23:203: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   23 |     assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n      |                                                                                                                                                                                                           ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpzarvl_wt.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/s",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to flatten a given nested list structure.\nstd::vector<long> flatten_list(std::any list1) {\n  std::vector<long> result;\n  if (list1.type() == typeid(std::vector<std::any>)) {\n    std::vector<std::any> list = std::any_cast<std::vector<std::any>>(list1);\n    for (auto &item : list) {\n      std::vector<long> temp = flatten_list(item);\n      result.insert(result.end(), temp.begin(), temp.end());\n    }\n  } else {\n    result.push_back(std::any_cast<long>(list1));\n  }\n  return result;\n}\nint main() {\n    auto candidate = flatten_list;\n    assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)40}), (std::vector<long>)std::vector<long>({(long)30, (long)56, (long)25}), (std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)33}), (std::vector<long>)std::vector<long>({(long)40})}))) == (std::vector<long>({(long)10, (long)20, (long)40, (long)30, (long)56, (long)25, (long)10, (long)20, (long)33, (long)40})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)1, (long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)10, (long)11, (long)12}), (std::vector<long>)std::vector<long>({(long)7, (long)8, (long)9})}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)10, (long)11, (long)12, (long)7, (long)8, (long)9})));\n}\n",
      "timestamp": 1666123888,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpsru15byg.cpp:2:\n/tmp/tmpsru15byg.cpp: In function \u2018int main()\u2019:\n/tmp/tmpsru15byg.cpp:19:203: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   19 |     assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n      |                                                                                                                                                                                                           ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpsru15byg.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpsru15byg.cpp:2:\n/tmp/tmpsru15byg.cpp:19:203: note:  ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to flatten a given nested list structure.\nstd::vector<long> flatten_list(std::any list1) {\n    std::vector<long> result;\n    if (list1.type() == typeid(std::vector<std::any>)) {\n        std::vector<std::any> list = std::any_cast<std::vector<std::any>>(list1);\n        for (auto i : list) {\n            std::vector<long> temp = flatten_list(i);\n            result.insert(result.end(), temp.begin(), temp.end());\n        }\n    } else if (list1.type() == typeid(long)) {\n        result.push_back(std::any_cast<long>(list1));\n    }\n    return result;\n}\nint main() {\n    auto candidate = flatten_list;\n    assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)40}), (std::vector<long>)std::vector<long>({(long)30, (long)56, (long)25}), (std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)33}), (std::vector<long>)std::vector<long>({(long)40})}))) == (std::vector<long>({(long)10, (long)20, (long)40, (long)30, (long)56, (long)25, (long)10, (long)20, (long)33, (long)40})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)1, (long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)10, (long)11, (long)12}), (std::vector<long>)std::vector<long>({(long)7, (long)8, (long)9})}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)10, (long)11, (long)12, (long)7, (long)8, (long)9})));\n}\n",
      "timestamp": 1666123888,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpkaawfejn.cpp:2:\n/tmp/tmpkaawfejn.cpp: In function \u2018int main()\u2019:\n/tmp/tmpkaawfejn.cpp:19:203: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   19 |     assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n      |                                                                                                                                                                                                           ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpkaawfejn.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpkaawfejn.cpp:2:\n/tmp/tmpkaawfejn.cpp:19:203: note:  ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to flatten a given nested list structure.\nstd::vector<long> flatten_list(std::any list1) {\n    std::vector<long> result;\n    if (list1.type() == typeid(std::vector<std::any>)) {\n        for (auto &i : std::any_cast<std::vector<std::any>>(list1)) {\n            auto temp = flatten_list(i);\n            result.insert(result.end(), temp.begin(), temp.end());\n        }\n    }\n    else {\n        result.push_back(std::any_cast<long>(list1));\n    }\n    return result;\n}\nint main() {\n    auto candidate = flatten_list;\n    assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)40}), (std::vector<long>)std::vector<long>({(long)30, (long)56, (long)25}), (std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)33}), (std::vector<long>)std::vector<long>({(long)40})}))) == (std::vector<long>({(long)10, (long)20, (long)40, (long)30, (long)56, (long)25, (long)10, (long)20, (long)33, (long)40})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)1, (long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)10, (long)11, (long)12}), (std::vector<long>)std::vector<long>({(long)7, (long)8, (long)9})}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)10, (long)11, (long)12, (long)7, (long)8, (long)9})));\n}\n",
      "timestamp": 1666123888,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpr_sy2i0y.cpp:2:\n/tmp/tmpr_sy2i0y.cpp: In function \u2018int main()\u2019:\n/tmp/tmpr_sy2i0y.cpp:19:203: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   19 |     assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n      |                                                                                                                                                                                                           ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpr_sy2i0y.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpr_sy2i0y.cpp:2:\n/tmp/tmpr_sy2i0y.cpp:19:203: note:  ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to flatten a given nested list structure.\nstd::vector<long> flatten_list(std::any list1) {\n  std::vector<long> result;\n  if (list1.type() == typeid(std::vector<std::any>)) {\n    for (auto &i : std::any_cast<std::vector<std::any>>(list1)) {\n      auto temp = flatten_list(i);\n      result.insert(result.end(), temp.begin(), temp.end());\n    }\n  } else {\n    result.push_back(std::any_cast<long>(list1));\n  }\n  return result;\n}\nint main() {\n    auto candidate = flatten_list;\n    assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)40}), (std::vector<long>)std::vector<long>({(long)30, (long)56, (long)25}), (std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)33}), (std::vector<long>)std::vector<long>({(long)40})}))) == (std::vector<long>({(long)10, (long)20, (long)40, (long)30, (long)56, (long)25, (long)10, (long)20, (long)33, (long)40})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)1, (long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)10, (long)11, (long)12}), (std::vector<long>)std::vector<long>({(long)7, (long)8, (long)9})}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)10, (long)11, (long)12, (long)7, (long)8, (long)9})));\n}\n",
      "timestamp": 1665517687,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp6x1ev6o6.cpp:2:\n/tmp/tmp6x1ev6o6.cpp: In function \u2018int main()\u2019:\n/tmp/tmp6x1ev6o6.cpp:18:203: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   18 |     assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n      |                                                                                                                                                                                                           ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmp6x1ev6o6.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp6x1ev6o6.cpp:2:\n/tmp/tmp6x1ev6o6.cpp:18:203: note:  ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to flatten a given nested list structure.\nstd::vector<long> flatten_list(std::any list1) {\n    std::vector<long> result;\n    if (list1.type() == typeid(std::vector<std::any>)) {\n        std::vector<std::any> list = std::any_cast<std::vector<std::any>>(list1);\n        for (auto i : list) {\n            std::vector<long> temp = flatten_list(i);\n            result.insert(result.end(), temp.begin(), temp.end());\n        }\n    } else {\n        result.push_back(std::any_cast<long>(list1));\n    }\n    return result;\n}\nint main() {\n    auto candidate = flatten_list;\n    assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)40}), (std::vector<long>)std::vector<long>({(long)30, (long)56, (long)25}), (std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)33}), (std::vector<long>)std::vector<long>({(long)40})}))) == (std::vector<long>({(long)10, (long)20, (long)40, (long)30, (long)56, (long)25, (long)10, (long)20, (long)33, (long)40})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)1, (long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)10, (long)11, (long)12}), (std::vector<long>)std::vector<long>({(long)7, (long)8, (long)9})}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)10, (long)11, (long)12, (long)7, (long)8, (long)9})));\n}\n",
      "timestamp": 1665517687,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpdjkb_dx9.cpp:2:\n/tmp/tmpdjkb_dx9.cpp: In function \u2018int main()\u2019:\n/tmp/tmpdjkb_dx9.cpp:19:203: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   19 |     assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n      |                                                                                                                                                                                                           ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpdjkb_dx9.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpdjkb_dx9.cpp:2:\n/tmp/tmpdjkb_dx9.cpp:19:203: note:  ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to flatten a given nested list structure.\nstd::vector<long> flatten_list(std::any list1) {\n    std::vector<long> result;\n    if (list1.type() == typeid(std::vector<std::any>)) {\n        std::vector<std::any> list = std::any_cast<std::vector<std::any>>(list1);\n        for (auto& item : list) {\n            std::vector<long> temp = flatten_list(item);\n            result.insert(result.end(), temp.begin(), temp.end());\n        }\n    } else if (list1.type() == typeid(long)) {\n        result.push_back(std::any_cast<long>(list1));\n    } else {\n        assert(false);\n    }\n    return result;\n}\nint main() {\n    auto candidate = flatten_list;\n    assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)40}), (std::vector<long>)std::vector<long>({(long)30, (long)56, (long)25}), (std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)33}), (std::vector<long>)std::vector<long>({(long)40})}))) == (std::vector<long>({(long)10, (long)20, (long)40, (long)30, (long)56, (long)25, (long)10, (long)20, (long)33, (long)40})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)1, (long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)10, (long)11, (long)12}), (std::vector<long>)std::vector<long>({(long)7, (long)8, (long)9})}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)10, (long)11, (long)12, (long)7, (long)8, (long)9})));\n}\n",
      "timestamp": 1666123888,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpurzpg764.cpp:2:\n/tmp/tmpurzpg764.cpp: In function \u2018int main()\u2019:\n/tmp/tmpurzpg764.cpp:21:203: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   21 |     assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n      |                                                                                                                                                                                                           ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpurzpg764.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpurzpg764.cpp:2:\n/tmp/tmpurzpg764.cpp:21:203: note:  ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to flatten a given nested list structure.\nstd::vector<long> flatten_list(std::any list1) {\n    std::vector<long> list2;\n    for (auto &i : list1) {\n        if (i.type() == typeid(std::vector<long>)) {\n            std::vector<long> temp = std::any_cast<std::vector<long>>(i);\n            for (auto &j : temp) {\n                list2.push_back(j);\n            }\n        } else {\n            list2.push_back(std::any_cast<long>(i));\n        }\n    }\n    return list2;\n}\nint main() {\n    auto candidate = flatten_list;\n    assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)40}), (std::vector<long>)std::vector<long>({(long)30, (long)56, (long)25}), (std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)33}), (std::vector<long>)std::vector<long>({(long)40})}))) == (std::vector<long>({(long)10, (long)20, (long)40, (long)30, (long)56, (long)25, (long)10, (long)20, (long)33, (long)40})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)1, (long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)10, (long)11, (long)12}), (std::vector<long>)std::vector<long>({(long)7, (long)8, (long)9})}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)10, (long)11, (long)12, (long)7, (long)8, (long)9})));\n}\n",
      "timestamp": 1666123888,
      "stdout": "",
      "stderr": "/tmp/tmppb4504yz.cpp: In function \u2018std::vector<long int> flatten_list(std::any)\u2019:\n/tmp/tmppb4504yz.cpp:6:20: error: no matching function for call to \u2018begin(std::any&)\u2019\n    6 |     for (auto &i : list1) {\n      |                    ^~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/range_access.h:36,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/string:54,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/locale_classes.h:40,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/ios_base.h:41,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ios:42,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/istream:38,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/sstream:38,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/complex:45,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ccomplex:39,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:54,\n                 from /tmp/tmppb4504yz.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/initializer_list:89:5: note: candidate: \u2018template<class _Tp> constexpr const _Tp* std::begin(std::initializer_list<_Tp>)\u2019\n   89 |     begin(initializer_list<_Tp> __ils) noexcept\n      |     ^~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/initializer_list:89:5: note:   template argument deduction/substitution failed:\n/tmp/tmppb4504yz.cpp:6:20: note:   \u2018std::any\u2019 is not derived from \u2018std::initializer_list<_Tp>\u2019\n    6 |     for (auto &i : list1) {\n      |                    ^~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/string:54,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/locale_classes.h:40,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/ios_base.h:41,\n      ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to flatten a given nested list structure.\nstd::vector<long> flatten_list(std::any list1) {\n    std::vector<long> result;\n    if (list1.type() == typeid(std::vector<std::any>)) {\n        std::vector<std::any> list = std::any_cast<std::vector<std::any>>(list1);\n        for (auto item : list) {\n            std::vector<long> temp = flatten_list(item);\n            result.insert(result.end(), temp.begin(), temp.end());\n        }\n    } else {\n        result.push_back(std::any_cast<long>(list1));\n    }\n    return result;\n}\nint main() {\n    auto candidate = flatten_list;\n    assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)40}), (std::vector<long>)std::vector<long>({(long)30, (long)56, (long)25}), (std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)33}), (std::vector<long>)std::vector<long>({(long)40})}))) == (std::vector<long>({(long)10, (long)20, (long)40, (long)30, (long)56, (long)25, (long)10, (long)20, (long)33, (long)40})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)1, (long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)10, (long)11, (long)12}), (std::vector<long>)std::vector<long>({(long)7, (long)8, (long)9})}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)10, (long)11, (long)12, (long)7, (long)8, (long)9})));\n}\n",
      "timestamp": 1665517687,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpp5vv1fv9.cpp:2:\n/tmp/tmpp5vv1fv9.cpp: In function \u2018int main()\u2019:\n/tmp/tmpp5vv1fv9.cpp:19:203: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   19 |     assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n      |                                                                                                                                                                                                           ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpp5vv1fv9.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpp5vv1fv9.cpp:2:\n/tmp/tmpp5vv1fv9.cpp:19:203: note:  ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to flatten a given nested list structure.\nstd::vector<long> flatten_list(std::any list1) {\n    std::vector<long> flat_list;\n    if (list1.type() == typeid(long)) {\n        flat_list.push_back(std::any_cast<long>(list1));\n    } else {\n        std::vector<std::any> list = std::any_cast<std::vector<std::any>>(list1);\n        for (auto item : list) {\n            std::vector<long> temp = flatten_list(item);\n            flat_list.insert(flat_list.end(), temp.begin(), temp.end());\n        }\n    }\n    return flat_list;\n}\nint main() {\n    auto candidate = flatten_list;\n    assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)40}), (std::vector<long>)std::vector<long>({(long)30, (long)56, (long)25}), (std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)33}), (std::vector<long>)std::vector<long>({(long)40})}))) == (std::vector<long>({(long)10, (long)20, (long)40, (long)30, (long)56, (long)25, (long)10, (long)20, (long)33, (long)40})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)1, (long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)10, (long)11, (long)12}), (std::vector<long>)std::vector<long>({(long)7, (long)8, (long)9})}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)10, (long)11, (long)12, (long)7, (long)8, (long)9})));\n}\n",
      "timestamp": 1666123888,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpbkmjml_w.cpp:2:\n/tmp/tmpbkmjml_w.cpp: In function \u2018int main()\u2019:\n/tmp/tmpbkmjml_w.cpp:19:203: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   19 |     assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n      |                                                                                                                                                                                                           ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpbkmjml_w.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpbkmjml_w.cpp:2:\n/tmp/tmpbkmjml_w.cpp:19:203: note:  ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to flatten a given nested list structure.\nstd::vector<long> flatten_list(std::any list1) {\n    std::vector<long> result;\n    std::vector<std::any> list = std::any_cast<std::vector<std::any>>(list1);\n    for (auto i : list) {\n        if (i.type() == typeid(long)) {\n            result.push_back(std::any_cast<long>(i));\n        } else {\n            std::vector<long> temp = flatten_list(i);\n            result.insert(result.end(), temp.begin(), temp.end());\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = flatten_list;\n    assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)40}), (std::vector<long>)std::vector<long>({(long)30, (long)56, (long)25}), (std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)33}), (std::vector<long>)std::vector<long>({(long)40})}))) == (std::vector<long>({(long)10, (long)20, (long)40, (long)30, (long)56, (long)25, (long)10, (long)20, (long)33, (long)40})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)1, (long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)10, (long)11, (long)12}), (std::vector<long>)std::vector<long>({(long)7, (long)8, (long)9})}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)10, (long)11, (long)12, (long)7, (long)8, (long)9})));\n}\n",
      "timestamp": 1666123888,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp_b9l17z8.cpp:2:\n/tmp/tmp_b9l17z8.cpp: In function \u2018int main()\u2019:\n/tmp/tmp_b9l17z8.cpp:19:203: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   19 |     assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n      |                                                                                                                                                                                                           ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmp_b9l17z8.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp_b9l17z8.cpp:2:\n/tmp/tmp_b9l17z8.cpp:19:203: note:  ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to flatten a given nested list structure.\nstd::vector<long> flatten_list(std::any list1) {\n    std::vector<long> result;\n    if (list1.type() == typeid(std::vector<long>)) {\n        std::vector<long> list = std::any_cast<std::vector<long>>(list1);\n        for (auto i : list) {\n            if (i.type() == typeid(std::vector<long>)) {\n                std::vector<long> temp = flatten_list(i);\n                result.insert(result.end(), temp.begin(), temp.end());\n            } else {\n                result.push_back(std::any_cast<long>(i));\n            }\n        }\n    } else {\n        result.push_back(std::any_cast<long>(list1));\n    }\n    return result;\n}\nint main() {\n    auto candidate = flatten_list;\n    assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)40}), (std::vector<long>)std::vector<long>({(long)30, (long)56, (long)25}), (std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)33}), (std::vector<long>)std::vector<long>({(long)40})}))) == (std::vector<long>({(long)10, (long)20, (long)40, (long)30, (long)56, (long)25, (long)10, (long)20, (long)33, (long)40})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)1, (long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)10, (long)11, (long)12}), (std::vector<long>)std::vector<long>({(long)7, (long)8, (long)9})}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)10, (long)11, (long)12, (long)7, (long)8, (long)9})));\n}\n",
      "timestamp": 1666123885,
      "stdout": "",
      "stderr": "/tmp/tmpzarvl_wt.cpp: In function \u2018std::vector<long int> flatten_list(std::any)\u2019:\n/tmp/tmpzarvl_wt.cpp:9:19: error: request for member \u2018type\u2019 in \u2018i\u2019, which is of non-class type \u2018long int\u2019\n    9 |             if (i.type() == typeid(std::vector<long>)) {\n      |                   ^~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpzarvl_wt.cpp:2:\n/tmp/tmpzarvl_wt.cpp: In function \u2018int main()\u2019:\n/tmp/tmpzarvl_wt.cpp:23:203: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   23 |     assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n      |                                                                                                                                                                                                           ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpzarvl_wt.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/s",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to flatten a given nested list structure.\nstd::vector<long> flatten_list(std::any list1) {\n    std::vector<long> result;\n    if (list1.type() == typeid(long)) {\n        result.push_back(std::any_cast<long>(list1));\n    } else if (list1.type() == typeid(std::vector<std::any>)) {\n        std::vector<std::any> list = std::any_cast<std::vector<std::any>>(list1);\n        for (auto &i : list) {\n            std::vector<long> temp = flatten_list(i);\n            result.insert(result.end(), temp.begin(), temp.end());\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = flatten_list;\n    assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)40}), (std::vector<long>)std::vector<long>({(long)30, (long)56, (long)25}), (std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)33}), (std::vector<long>)std::vector<long>({(long)40})}))) == (std::vector<long>({(long)10, (long)20, (long)40, (long)30, (long)56, (long)25, (long)10, (long)20, (long)33, (long)40})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)1, (long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)10, (long)11, (long)12}), (std::vector<long>)std::vector<long>({(long)7, (long)8, (long)9})}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)10, (long)11, (long)12, (long)7, (long)8, (long)9})));\n}\n",
      "timestamp": 1666123888,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp8gkcteks.cpp:2:\n/tmp/tmp8gkcteks.cpp: In function \u2018int main()\u2019:\n/tmp/tmp8gkcteks.cpp:19:203: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   19 |     assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n      |                                                                                                                                                                                                           ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmp8gkcteks.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp8gkcteks.cpp:2:\n/tmp/tmp8gkcteks.cpp:19:203: note:  ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to flatten a given nested list structure.\nstd::vector<long> flatten_list(std::any list1) {\n    std::vector<long> result;\n    if (list1.type() == typeid(std::vector<long>)) {\n        std::vector<long> list = std::any_cast<std::vector<long>>(list1);\n        for (auto i : list) {\n            if (i.type() == typeid(std::vector<long>)) {\n                std::vector<long> temp = flatten_list(i);\n                result.insert(result.end(), temp.begin(), temp.end());\n            } else {\n                result.push_back(std::any_cast<long>(i));\n            }\n        }\n    } else {\n        result.push_back(std::any_cast<long>(list1));\n    }\n    return result;\n}\nint main() {\n    auto candidate = flatten_list;\n    assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)40}), (std::vector<long>)std::vector<long>({(long)30, (long)56, (long)25}), (std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)33}), (std::vector<long>)std::vector<long>({(long)40})}))) == (std::vector<long>({(long)10, (long)20, (long)40, (long)30, (long)56, (long)25, (long)10, (long)20, (long)33, (long)40})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)1, (long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)10, (long)11, (long)12}), (std::vector<long>)std::vector<long>({(long)7, (long)8, (long)9})}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)10, (long)11, (long)12, (long)7, (long)8, (long)9})));\n}\n",
      "timestamp": 1666123885,
      "stdout": "",
      "stderr": "/tmp/tmpzarvl_wt.cpp: In function \u2018std::vector<long int> flatten_list(std::any)\u2019:\n/tmp/tmpzarvl_wt.cpp:9:19: error: request for member \u2018type\u2019 in \u2018i\u2019, which is of non-class type \u2018long int\u2019\n    9 |             if (i.type() == typeid(std::vector<long>)) {\n      |                   ^~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpzarvl_wt.cpp:2:\n/tmp/tmpzarvl_wt.cpp: In function \u2018int main()\u2019:\n/tmp/tmpzarvl_wt.cpp:23:203: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   23 |     assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n      |                                                                                                                                                                                                           ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpzarvl_wt.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/s",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to flatten a given nested list structure.\nstd::vector<long> flatten_list(std::any list1) {\n    std::vector<long> list2;\n    if (list1.type() == typeid(std::vector<std::any>)) {\n        std::vector<std::any> list3 = std::any_cast<std::vector<std::any>>(list1);\n        for (auto i : list3) {\n            std::vector<long> list4 = flatten_list(i);\n            list2.insert(list2.end(), list4.begin(), list4.end());\n        }\n    } else {\n        list2.push_back(std::any_cast<long>(list1));\n    }\n    return list2;\n}\nint main() {\n    auto candidate = flatten_list;\n    assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)40}), (std::vector<long>)std::vector<long>({(long)30, (long)56, (long)25}), (std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)33}), (std::vector<long>)std::vector<long>({(long)40})}))) == (std::vector<long>({(long)10, (long)20, (long)40, (long)30, (long)56, (long)25, (long)10, (long)20, (long)33, (long)40})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)1, (long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)10, (long)11, (long)12}), (std::vector<long>)std::vector<long>({(long)7, (long)8, (long)9})}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)10, (long)11, (long)12, (long)7, (long)8, (long)9})));\n}\n",
      "timestamp": 1666123888,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpglgpwg6g.cpp:2:\n/tmp/tmpglgpwg6g.cpp: In function \u2018int main()\u2019:\n/tmp/tmpglgpwg6g.cpp:19:203: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   19 |     assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n      |                                                                                                                                                                                                           ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpglgpwg6g.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpglgpwg6g.cpp:2:\n/tmp/tmpglgpwg6g.cpp:19:203: note:  ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to flatten a given nested list structure.\nstd::vector<long> flatten_list(std::any list1) {\n  std::vector<long> list;\n  if (list1.type() == typeid(std::vector<long>)) {\n    for (auto i : std::any_cast<std::vector<long>>(list1)) {\n      list.push_back(i);\n    }\n  } else if (list1.type() == typeid(std::vector<std::any>)) {\n    for (auto i : std::any_cast<std::vector<std::any>>(list1)) {\n      std::vector<long> temp = flatten_list(i);\n      for (auto j : temp) {\n        list.push_back(j);\n      }\n    }\n  } else {\n    list.push_back(std::any_cast<long>(list1));\n  }\n  return list;\n}\nint main() {\n    auto candidate = flatten_list;\n    assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)40}), (std::vector<long>)std::vector<long>({(long)30, (long)56, (long)25}), (std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)33}), (std::vector<long>)std::vector<long>({(long)40})}))) == (std::vector<long>({(long)10, (long)20, (long)40, (long)30, (long)56, (long)25, (long)10, (long)20, (long)33, (long)40})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)1, (long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)10, (long)11, (long)12}), (std::vector<long>)std::vector<long>({(long)7, (long)8, (long)9})}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)10, (long)11, (long)12, (long)7, (long)8, (long)9})));\n}\n",
      "timestamp": 1666123888,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpkozmuts_.cpp:2:\n/tmp/tmpkozmuts_.cpp: In function \u2018int main()\u2019:\n/tmp/tmpkozmuts_.cpp:24:203: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   24 |     assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n      |                                                                                                                                                                                                           ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpkozmuts_.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpkozmuts_.cpp:2:\n/tmp/tmpkozmuts_.cpp:24:203: note:  ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to flatten a given nested list structure.\nstd::vector<long> flatten_list(std::any list1) {\n  std::vector<long> result;\n  if (list1.type() == typeid(std::vector<std::any>)) {\n    std::vector<std::any> list = std::any_cast<std::vector<std::any>>(list1);\n    for (auto i : list) {\n      std::vector<long> temp = flatten_list(i);\n      result.insert(result.end(), temp.begin(), temp.end());\n    }\n  } else {\n    result.push_back(std::any_cast<long>(list1));\n  }\n  return result;\n}\nint main() {\n    auto candidate = flatten_list;\n    assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)40}), (std::vector<long>)std::vector<long>({(long)30, (long)56, (long)25}), (std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)33}), (std::vector<long>)std::vector<long>({(long)40})}))) == (std::vector<long>({(long)10, (long)20, (long)40, (long)30, (long)56, (long)25, (long)10, (long)20, (long)33, (long)40})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)1, (long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)10, (long)11, (long)12}), (std::vector<long>)std::vector<long>({(long)7, (long)8, (long)9})}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)10, (long)11, (long)12, (long)7, (long)8, (long)9})));\n}\n",
      "timestamp": 1666123888,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpqxwbk58y.cpp:2:\n/tmp/tmpqxwbk58y.cpp: In function \u2018int main()\u2019:\n/tmp/tmpqxwbk58y.cpp:19:203: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   19 |     assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n      |                                                                                                                                                                                                           ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpqxwbk58y.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpqxwbk58y.cpp:2:\n/tmp/tmpqxwbk58y.cpp:19:203: note:  ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to flatten a given nested list structure.\nstd::vector<long> flatten_list(std::any list1) {\n    std::vector<long> result;\n    if (list1.type() == typeid(std::vector<std::any>)) {\n        for (auto& item : std::any_cast<std::vector<std::any>>(list1)) {\n            auto temp = flatten_list(item);\n            result.insert(result.end(), temp.begin(), temp.end());\n        }\n    } else {\n        result.push_back(std::any_cast<long>(list1));\n    }\n    return result;\n}\nint main() {\n    auto candidate = flatten_list;\n    assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)40}), (std::vector<long>)std::vector<long>({(long)30, (long)56, (long)25}), (std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)33}), (std::vector<long>)std::vector<long>({(long)40})}))) == (std::vector<long>({(long)10, (long)20, (long)40, (long)30, (long)56, (long)25, (long)10, (long)20, (long)33, (long)40})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)1, (long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)10, (long)11, (long)12}), (std::vector<long>)std::vector<long>({(long)7, (long)8, (long)9})}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)10, (long)11, (long)12, (long)7, (long)8, (long)9})));\n}\n",
      "timestamp": 1666123888,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp98cmoxhx.cpp:2:\n/tmp/tmp98cmoxhx.cpp: In function \u2018int main()\u2019:\n/tmp/tmp98cmoxhx.cpp:18:203: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   18 |     assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n      |                                                                                                                                                                                                           ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmp98cmoxhx.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp98cmoxhx.cpp:2:\n/tmp/tmp98cmoxhx.cpp:18:203: note:  ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to flatten a given nested list structure.\nstd::vector<long> flatten_list(std::any list1) {\n    std::vector<long> result;\n    if (list1.type() == typeid(long)) {\n        result.push_back(std::any_cast<long>(list1));\n    } else {\n        std::vector<std::any> list = std::any_cast<std::vector<std::any>>(list1);\n        for (auto item : list) {\n            std::vector<long> temp = flatten_list(item);\n            result.insert(result.end(), temp.begin(), temp.end());\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = flatten_list;\n    assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)40}), (std::vector<long>)std::vector<long>({(long)30, (long)56, (long)25}), (std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)33}), (std::vector<long>)std::vector<long>({(long)40})}))) == (std::vector<long>({(long)10, (long)20, (long)40, (long)30, (long)56, (long)25, (long)10, (long)20, (long)33, (long)40})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)1, (long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)10, (long)11, (long)12}), (std::vector<long>)std::vector<long>({(long)7, (long)8, (long)9})}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)10, (long)11, (long)12, (long)7, (long)8, (long)9})));\n}\n",
      "timestamp": 1666123886,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp3gmh047e.cpp:2:\n/tmp/tmp3gmh047e.cpp: In function \u2018int main()\u2019:\n/tmp/tmp3gmh047e.cpp:19:203: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   19 |     assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n      |                                                                                                                                                                                                           ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmp3gmh047e.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp3gmh047e.cpp:2:\n/tmp/tmp3gmh047e.cpp:19:203: note:  ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to flatten a given nested list structure.\nstd::vector<long> flatten_list(std::any list1) {\n    std::vector<long> result;\n    if (list1.type() == typeid(std::vector<std::any>)) {\n        std::vector<std::any> list = std::any_cast<std::vector<std::any>>(list1);\n        for (auto i : list) {\n            std::vector<long> temp = flatten_list(i);\n            result.insert(result.end(), temp.begin(), temp.end());\n        }\n    } else {\n        result.push_back(std::any_cast<long>(list1));\n    }\n    return result;\n}\nint main() {\n    auto candidate = flatten_list;\n    assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)40}), (std::vector<long>)std::vector<long>({(long)30, (long)56, (long)25}), (std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)33}), (std::vector<long>)std::vector<long>({(long)40})}))) == (std::vector<long>({(long)10, (long)20, (long)40, (long)30, (long)56, (long)25, (long)10, (long)20, (long)33, (long)40})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)1, (long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)10, (long)11, (long)12}), (std::vector<long>)std::vector<long>({(long)7, (long)8, (long)9})}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)10, (long)11, (long)12, (long)7, (long)8, (long)9})));\n}\n",
      "timestamp": 1665517687,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpdjkb_dx9.cpp:2:\n/tmp/tmpdjkb_dx9.cpp: In function \u2018int main()\u2019:\n/tmp/tmpdjkb_dx9.cpp:19:203: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   19 |     assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n      |                                                                                                                                                                                                           ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpdjkb_dx9.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpdjkb_dx9.cpp:2:\n/tmp/tmpdjkb_dx9.cpp:19:203: note:  ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to flatten a given nested list structure.\nstd::vector<long> flatten_list(std::any list1) {\n    std::vector<long> result;\n    if (list1.type() == typeid(std::vector<std::any>)) {\n        std::vector<std::any> list = std::any_cast<std::vector<std::any>>(list1);\n        for (auto i : list) {\n            std::vector<long> temp = flatten_list(i);\n            result.insert(result.end(), temp.begin(), temp.end());\n        }\n    } else {\n        result.push_back(std::any_cast<long>(list1));\n    }\n    return result;\n}\nint main() {\n    auto candidate = flatten_list;\n    assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)40}), (std::vector<long>)std::vector<long>({(long)30, (long)56, (long)25}), (std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)33}), (std::vector<long>)std::vector<long>({(long)40})}))) == (std::vector<long>({(long)10, (long)20, (long)40, (long)30, (long)56, (long)25, (long)10, (long)20, (long)33, (long)40})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)1, (long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)10, (long)11, (long)12}), (std::vector<long>)std::vector<long>({(long)7, (long)8, (long)9})}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)10, (long)11, (long)12, (long)7, (long)8, (long)9})));\n}\n",
      "timestamp": 1665517687,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpdjkb_dx9.cpp:2:\n/tmp/tmpdjkb_dx9.cpp: In function \u2018int main()\u2019:\n/tmp/tmpdjkb_dx9.cpp:19:203: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   19 |     assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n      |                                                                                                                                                                                                           ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpdjkb_dx9.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpdjkb_dx9.cpp:2:\n/tmp/tmpdjkb_dx9.cpp:19:203: note:  ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to flatten a given nested list structure.\nstd::vector<long> flatten_list(std::any list1) {\n    std::vector<long> result;\n    if(list1.type() == typeid(long)) {\n        result.push_back(std::any_cast<long>(list1));\n    }\n    else {\n        std::vector<std::any> list2 = std::any_cast<std::vector<std::any>>(list1);\n        for(auto i : list2) {\n            std::vector<long> temp = flatten_list(i);\n            result.insert(result.end(), temp.begin(), temp.end());\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = flatten_list;\n    assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)40}), (std::vector<long>)std::vector<long>({(long)30, (long)56, (long)25}), (std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)33}), (std::vector<long>)std::vector<long>({(long)40})}))) == (std::vector<long>({(long)10, (long)20, (long)40, (long)30, (long)56, (long)25, (long)10, (long)20, (long)33, (long)40})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)1, (long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)10, (long)11, (long)12}), (std::vector<long>)std::vector<long>({(long)7, (long)8, (long)9})}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)10, (long)11, (long)12, (long)7, (long)8, (long)9})));\n}\n",
      "timestamp": 1666123888,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpc28efxx4.cpp:2:\n/tmp/tmpc28efxx4.cpp: In function \u2018int main()\u2019:\n/tmp/tmpc28efxx4.cpp:20:203: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   20 |     assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n      |                                                                                                                                                                                                           ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpc28efxx4.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpc28efxx4.cpp:2:\n/tmp/tmpc28efxx4.cpp:20:203: note:  ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to flatten a given nested list structure.\nstd::vector<long> flatten_list(std::any list1) {\n    std::vector<long> list2;\n    if(list1.type() == typeid(std::vector<std::any>)) {\n        for(auto i : std::any_cast<std::vector<std::any>>(list1)) {\n            auto temp = flatten_list(i);\n            list2.insert(list2.end(), temp.begin(), temp.end());\n        }\n    }\n    else {\n        list2.push_back(std::any_cast<long>(list1));\n    }\n    return list2;\n}\nint main() {\n    auto candidate = flatten_list;\n    assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)40}), (std::vector<long>)std::vector<long>({(long)30, (long)56, (long)25}), (std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)33}), (std::vector<long>)std::vector<long>({(long)40})}))) == (std::vector<long>({(long)10, (long)20, (long)40, (long)30, (long)56, (long)25, (long)10, (long)20, (long)33, (long)40})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)1, (long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)10, (long)11, (long)12}), (std::vector<long>)std::vector<long>({(long)7, (long)8, (long)9})}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)10, (long)11, (long)12, (long)7, (long)8, (long)9})));\n}\n",
      "timestamp": 1666123886,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpfrv0unbh.cpp:2:\n/tmp/tmpfrv0unbh.cpp: In function \u2018int main()\u2019:\n/tmp/tmpfrv0unbh.cpp:19:203: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   19 |     assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n      |                                                                                                                                                                                                           ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpfrv0unbh.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpfrv0unbh.cpp:2:\n/tmp/tmpfrv0unbh.cpp:19:203: note:  ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to flatten a given nested list structure.\nstd::vector<long> flatten_list(std::any list1) {\n    std::vector<long> result;\n    if(list1.type() == typeid(std::vector<long>)) {\n        std::vector<long> list = std::any_cast<std::vector<long>>(list1);\n        for(auto i : list) {\n            if(i.type() == typeid(std::vector<long>)) {\n                std::vector<long> temp = flatten_list(i);\n                result.insert(result.end(), temp.begin(), temp.end());\n            } else {\n                result.push_back(std::any_cast<long>(i));\n            }\n        }\n    } else {\n        result.push_back(std::any_cast<long>(list1));\n    }\n    return result;\n}\nint main() {\n    auto candidate = flatten_list;\n    assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)40}), (std::vector<long>)std::vector<long>({(long)30, (long)56, (long)25}), (std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)33}), (std::vector<long>)std::vector<long>({(long)40})}))) == (std::vector<long>({(long)10, (long)20, (long)40, (long)30, (long)56, (long)25, (long)10, (long)20, (long)33, (long)40})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)1, (long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)10, (long)11, (long)12}), (std::vector<long>)std::vector<long>({(long)7, (long)8, (long)9})}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)10, (long)11, (long)12, (long)7, (long)8, (long)9})));\n}\n",
      "timestamp": 1666123884,
      "stdout": "",
      "stderr": "/tmp/tmplsdx0m57.cpp: In function \u2018std::vector<long int> flatten_list(std::any)\u2019:\n/tmp/tmplsdx0m57.cpp:9:18: error: request for member \u2018type\u2019 in \u2018i\u2019, which is of non-class type \u2018long int\u2019\n    9 |             if(i.type() == typeid(std::vector<long>)) {\n      |                  ^~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmplsdx0m57.cpp:2:\n/tmp/tmplsdx0m57.cpp: In function \u2018int main()\u2019:\n/tmp/tmplsdx0m57.cpp:23:203: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   23 |     assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n      |                                                                                                                                                                                                           ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmplsdx0m57.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/sub",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to flatten a given nested list structure.\nstd::vector<long> flatten_list(std::any list1) {\n    std::vector<long> result;\n    if (list1.type() == typeid(std::vector<std::any>)) {\n        std::vector<std::any> list = std::any_cast<std::vector<std::any>>(list1);\n        for (auto it = list.begin(); it != list.end(); ++it) {\n            std::vector<long> temp = flatten_list(*it);\n            result.insert(result.end(), temp.begin(), temp.end());\n        }\n    }\n    else {\n        result.push_back(std::any_cast<long>(list1));\n    }\n    return result;\n}\nint main() {\n    auto candidate = flatten_list;\n    assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)40}), (std::vector<long>)std::vector<long>({(long)30, (long)56, (long)25}), (std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)33}), (std::vector<long>)std::vector<long>({(long)40})}))) == (std::vector<long>({(long)10, (long)20, (long)40, (long)30, (long)56, (long)25, (long)10, (long)20, (long)33, (long)40})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)1, (long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)10, (long)11, (long)12}), (std::vector<long>)std::vector<long>({(long)7, (long)8, (long)9})}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)10, (long)11, (long)12, (long)7, (long)8, (long)9})));\n}\n",
      "timestamp": 1666123888,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp3wj8wn81.cpp:2:\n/tmp/tmp3wj8wn81.cpp: In function \u2018int main()\u2019:\n/tmp/tmp3wj8wn81.cpp:20:203: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   20 |     assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n      |                                                                                                                                                                                                           ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmp3wj8wn81.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp3wj8wn81.cpp:2:\n/tmp/tmp3wj8wn81.cpp:20:203: note:  ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to flatten a given nested list structure.\nstd::vector<long> flatten_list(std::any list1) {\n    std::vector<long> result;\n    std::vector<std::any> list;\n    if (list1.type() == typeid(std::vector<std::any>)) {\n        list = std::any_cast<std::vector<std::any>>(list1);\n    } else {\n        list.push_back(list1);\n    }\n    for (auto i : list) {\n        if (i.type() == typeid(std::vector<std::any>)) {\n            std::vector<std::any> temp = std::any_cast<std::vector<std::any>>(i);\n            std::vector<long> temp_result = flatten_list(temp);\n            result.insert(result.end(), temp_result.begin(), temp_result.end());\n        } else {\n            result.push_back(std::any_cast<long>(i));\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = flatten_list;\n    assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)40}), (std::vector<long>)std::vector<long>({(long)30, (long)56, (long)25}), (std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)33}), (std::vector<long>)std::vector<long>({(long)40})}))) == (std::vector<long>({(long)10, (long)20, (long)40, (long)30, (long)56, (long)25, (long)10, (long)20, (long)33, (long)40})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)1, (long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)10, (long)11, (long)12}), (std::vector<long>)std::vector<long>({(long)7, (long)8, (long)9})}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)10, (long)11, (long)12, (long)7, (long)8, (long)9})));\n}\n",
      "timestamp": 1666123888,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp16shthh6.cpp:2:\n/tmp/tmp16shthh6.cpp: In function \u2018int main()\u2019:\n/tmp/tmp16shthh6.cpp:25:203: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   25 |     assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n      |                                                                                                                                                                                                           ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmp16shthh6.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp16shthh6.cpp:2:\n/tmp/tmp16shthh6.cpp:25:203: note:  ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to flatten a given nested list structure.\nstd::vector<long> flatten_list(std::any list1) {\n    std::vector<long> list2;\n    if (list1.type() == typeid(long)) {\n        list2.push_back(std::any_cast<long>(list1));\n    } else {\n        std::vector<std::any> list3 = std::any_cast<std::vector<std::any>>(list1);\n        for (auto i : list3) {\n            std::vector<long> list4 = flatten_list(i);\n            list2.insert(list2.end(), list4.begin(), list4.end());\n        }\n    }\n    return list2;\n}\nint main() {\n    auto candidate = flatten_list;\n    assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)40}), (std::vector<long>)std::vector<long>({(long)30, (long)56, (long)25}), (std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)33}), (std::vector<long>)std::vector<long>({(long)40})}))) == (std::vector<long>({(long)10, (long)20, (long)40, (long)30, (long)56, (long)25, (long)10, (long)20, (long)33, (long)40})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)1, (long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)10, (long)11, (long)12}), (std::vector<long>)std::vector<long>({(long)7, (long)8, (long)9})}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)10, (long)11, (long)12, (long)7, (long)8, (long)9})));\n}\n",
      "timestamp": 1666123888,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpvpkd0fb6.cpp:2:\n/tmp/tmpvpkd0fb6.cpp: In function \u2018int main()\u2019:\n/tmp/tmpvpkd0fb6.cpp:19:203: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   19 |     assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n      |                                                                                                                                                                                                           ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpvpkd0fb6.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpvpkd0fb6.cpp:2:\n/tmp/tmpvpkd0fb6.cpp:19:203: note:  ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to flatten a given nested list structure.\nstd::vector<long> flatten_list(std::any list1) {\n    std::vector<long> result;\n    if(list1.type() == typeid(std::vector<std::any>)) {\n        std::vector<std::any> list = std::any_cast<std::vector<std::any>>(list1);\n        for(auto i : list) {\n            std::vector<long> temp = flatten_list(i);\n            result.insert(result.end(), temp.begin(), temp.end());\n        }\n    } else {\n        result.push_back(std::any_cast<long>(list1));\n    }\n    return result;\n}\nint main() {\n    auto candidate = flatten_list;\n    assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)40}), (std::vector<long>)std::vector<long>({(long)30, (long)56, (long)25}), (std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)33}), (std::vector<long>)std::vector<long>({(long)40})}))) == (std::vector<long>({(long)10, (long)20, (long)40, (long)30, (long)56, (long)25, (long)10, (long)20, (long)33, (long)40})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)1, (long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)10, (long)11, (long)12}), (std::vector<long>)std::vector<long>({(long)7, (long)8, (long)9})}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)10, (long)11, (long)12, (long)7, (long)8, (long)9})));\n}\n",
      "timestamp": 1666123887,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpdp7cavfh.cpp:2:\n/tmp/tmpdp7cavfh.cpp: In function \u2018int main()\u2019:\n/tmp/tmpdp7cavfh.cpp:19:203: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   19 |     assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n      |                                                                                                                                                                                                           ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpdp7cavfh.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpdp7cavfh.cpp:2:\n/tmp/tmpdp7cavfh.cpp:19:203: note:  ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to flatten a given nested list structure.\nstd::vector<long> flatten_list(std::any list1) {\n    std::vector<long> result;\n    if (list1.type() == typeid(std::vector<std::any>)) {\n        std::vector<std::any> list = std::any_cast<std::vector<std::any>>(list1);\n        for (auto i : list) {\n            std::vector<long> temp = flatten_list(i);\n            result.insert(result.end(), temp.begin(), temp.end());\n        }\n    } else {\n        result.push_back(std::any_cast<long>(list1));\n    }\n    return result;\n}\nint main() {\n    auto candidate = flatten_list;\n    assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)40}), (std::vector<long>)std::vector<long>({(long)30, (long)56, (long)25}), (std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)33}), (std::vector<long>)std::vector<long>({(long)40})}))) == (std::vector<long>({(long)10, (long)20, (long)40, (long)30, (long)56, (long)25, (long)10, (long)20, (long)33, (long)40})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)1, (long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)10, (long)11, (long)12}), (std::vector<long>)std::vector<long>({(long)7, (long)8, (long)9})}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)10, (long)11, (long)12, (long)7, (long)8, (long)9})));\n}\n",
      "timestamp": 1665517687,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpdjkb_dx9.cpp:2:\n/tmp/tmpdjkb_dx9.cpp: In function \u2018int main()\u2019:\n/tmp/tmpdjkb_dx9.cpp:19:203: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   19 |     assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n      |                                                                                                                                                                                                           ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpdjkb_dx9.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpdjkb_dx9.cpp:2:\n/tmp/tmpdjkb_dx9.cpp:19:203: note:  ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to flatten a given nested list structure.\nstd::vector<long> flatten_list(std::any list1) {\n    std::vector<long> result;\n    if (list1.type() == typeid(long)) {\n        result.push_back(std::any_cast<long>(list1));\n        return result;\n    }\n    std::vector<std::any> list = std::any_cast<std::vector<std::any>>(list1);\n    for (auto item : list) {\n        std::vector<long> sub_result = flatten_list(item);\n        result.insert(result.end(), sub_result.begin(), sub_result.end());\n    }\n    return result;\n}\nint main() {\n    auto candidate = flatten_list;\n    assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)40}), (std::vector<long>)std::vector<long>({(long)30, (long)56, (long)25}), (std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)33}), (std::vector<long>)std::vector<long>({(long)40})}))) == (std::vector<long>({(long)10, (long)20, (long)40, (long)30, (long)56, (long)25, (long)10, (long)20, (long)33, (long)40})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)1, (long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)10, (long)11, (long)12}), (std::vector<long>)std::vector<long>({(long)7, (long)8, (long)9})}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)10, (long)11, (long)12, (long)7, (long)8, (long)9})));\n}\n",
      "timestamp": 1666123888,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp7i3tebdi.cpp:2:\n/tmp/tmp7i3tebdi.cpp: In function \u2018int main()\u2019:\n/tmp/tmp7i3tebdi.cpp:19:203: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   19 |     assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n      |                                                                                                                                                                                                           ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmp7i3tebdi.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp7i3tebdi.cpp:2:\n/tmp/tmp7i3tebdi.cpp:19:203: note:  ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to flatten a given nested list structure.\nstd::vector<long> flatten_list(std::any list1) {\n    std::vector<long> list;\n    if (list1.type() == typeid(std::vector<std::any>)) {\n        for (auto &i : std::any_cast<std::vector<std::any>>(list1)) {\n            auto temp = flatten_list(i);\n            list.insert(list.end(), temp.begin(), temp.end());\n        }\n    } else {\n        list.push_back(std::any_cast<long>(list1));\n    }\n    return list;\n}\nint main() {\n    auto candidate = flatten_list;\n    assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)40}), (std::vector<long>)std::vector<long>({(long)30, (long)56, (long)25}), (std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)33}), (std::vector<long>)std::vector<long>({(long)40})}))) == (std::vector<long>({(long)10, (long)20, (long)40, (long)30, (long)56, (long)25, (long)10, (long)20, (long)33, (long)40})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)1, (long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)10, (long)11, (long)12}), (std::vector<long>)std::vector<long>({(long)7, (long)8, (long)9})}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)10, (long)11, (long)12, (long)7, (long)8, (long)9})));\n}\n",
      "timestamp": 1666123888,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmptypel96f.cpp:2:\n/tmp/tmptypel96f.cpp: In function \u2018int main()\u2019:\n/tmp/tmptypel96f.cpp:18:203: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   18 |     assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n      |                                                                                                                                                                                                           ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmptypel96f.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmptypel96f.cpp:2:\n/tmp/tmptypel96f.cpp:18:203: note:  ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to flatten a given nested list structure.\nstd::vector<long> flatten_list(std::any list1) {\n    std::vector<long> result;\n    if (list1.type() == typeid(std::vector<std::any>)) {\n        std::vector<std::any> list = std::any_cast<std::vector<std::any>>(list1);\n        for (auto i : list) {\n            std::vector<long> temp = flatten_list(i);\n            result.insert(result.end(), temp.begin(), temp.end());\n        }\n    } else {\n        result.push_back(std::any_cast<long>(list1));\n    }\n    return result;\n}\nint main() {\n    auto candidate = flatten_list;\n    assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)40}), (std::vector<long>)std::vector<long>({(long)30, (long)56, (long)25}), (std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)33}), (std::vector<long>)std::vector<long>({(long)40})}))) == (std::vector<long>({(long)10, (long)20, (long)40, (long)30, (long)56, (long)25, (long)10, (long)20, (long)33, (long)40})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)1, (long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)10, (long)11, (long)12}), (std::vector<long>)std::vector<long>({(long)7, (long)8, (long)9})}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)10, (long)11, (long)12, (long)7, (long)8, (long)9})));\n}\n",
      "timestamp": 1665517687,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpdjkb_dx9.cpp:2:\n/tmp/tmpdjkb_dx9.cpp: In function \u2018int main()\u2019:\n/tmp/tmpdjkb_dx9.cpp:19:203: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   19 |     assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n      |                                                                                                                                                                                                           ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpdjkb_dx9.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpdjkb_dx9.cpp:2:\n/tmp/tmpdjkb_dx9.cpp:19:203: note:  ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to flatten a given nested list structure.\nstd::vector<long> flatten_list(std::any list1) {\n    std::vector<long> result;\n    if (list1.type() == typeid(std::vector<std::any>)) {\n        std::vector<std::any> list = std::any_cast<std::vector<std::any>>(list1);\n        for (auto& item : list) {\n            std::vector<long> temp = flatten_list(item);\n            result.insert(result.end(), temp.begin(), temp.end());\n        }\n    } else {\n        result.push_back(std::any_cast<long>(list1));\n    }\n    return result;\n}\nint main() {\n    auto candidate = flatten_list;\n    assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)40}), (std::vector<long>)std::vector<long>({(long)30, (long)56, (long)25}), (std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)33}), (std::vector<long>)std::vector<long>({(long)40})}))) == (std::vector<long>({(long)10, (long)20, (long)40, (long)30, (long)56, (long)25, (long)10, (long)20, (long)33, (long)40})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)1, (long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)10, (long)11, (long)12}), (std::vector<long>)std::vector<long>({(long)7, (long)8, (long)9})}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)10, (long)11, (long)12, (long)7, (long)8, (long)9})));\n}\n",
      "timestamp": 1666123888,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp957nk1l0.cpp:2:\n/tmp/tmp957nk1l0.cpp: In function \u2018int main()\u2019:\n/tmp/tmp957nk1l0.cpp:19:203: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   19 |     assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n      |                                                                                                                                                                                                           ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmp957nk1l0.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp957nk1l0.cpp:2:\n/tmp/tmp957nk1l0.cpp:19:203: note:  ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to flatten a given nested list structure.\nstd::vector<long> flatten_list(std::any list1) {\n  std::vector<long> res;\n  if (list1.type() == typeid(std::vector<long>)) {\n    for (auto i : std::any_cast<std::vector<long>>(list1)) {\n      res.push_back(i);\n    }\n  } else if (list1.type() == typeid(std::vector<std::any>)) {\n    for (auto i : std::any_cast<std::vector<std::any>>(list1)) {\n      std::vector<long> temp = flatten_list(i);\n      res.insert(res.end(), temp.begin(), temp.end());\n    }\n  } else {\n    res.push_back(std::any_cast<long>(list1));\n  }\n  return res;\n}\nint main() {\n    auto candidate = flatten_list;\n    assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)40}), (std::vector<long>)std::vector<long>({(long)30, (long)56, (long)25}), (std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)33}), (std::vector<long>)std::vector<long>({(long)40})}))) == (std::vector<long>({(long)10, (long)20, (long)40, (long)30, (long)56, (long)25, (long)10, (long)20, (long)33, (long)40})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)1, (long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)10, (long)11, (long)12}), (std::vector<long>)std::vector<long>({(long)7, (long)8, (long)9})}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)10, (long)11, (long)12, (long)7, (long)8, (long)9})));\n}\n",
      "timestamp": 1666123888,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpp5qmfutu.cpp:2:\n/tmp/tmpp5qmfutu.cpp: In function \u2018int main()\u2019:\n/tmp/tmpp5qmfutu.cpp:22:203: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   22 |     assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n      |                                                                                                                                                                                                           ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpp5qmfutu.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpp5qmfutu.cpp:2:\n/tmp/tmpp5qmfutu.cpp:22:203: note:  ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to flatten a given nested list structure.\nstd::vector<long> flatten_list(std::any list1) {\n    std::vector<long> result;\n    std::vector<std::any> list = std::any_cast<std::vector<std::any>>(list1);\n    for(auto i : list) {\n        if(i.type() == typeid(std::vector<std::any>)) {\n            std::vector<long> temp = flatten_list(i);\n            result.insert(result.end(), temp.begin(), temp.end());\n        }\n        else {\n            result.push_back(std::any_cast<long>(i));\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = flatten_list;\n    assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)40}), (std::vector<long>)std::vector<long>({(long)30, (long)56, (long)25}), (std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)33}), (std::vector<long>)std::vector<long>({(long)40})}))) == (std::vector<long>({(long)10, (long)20, (long)40, (long)30, (long)56, (long)25, (long)10, (long)20, (long)33, (long)40})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)1, (long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)10, (long)11, (long)12}), (std::vector<long>)std::vector<long>({(long)7, (long)8, (long)9})}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)10, (long)11, (long)12, (long)7, (long)8, (long)9})));\n}\n",
      "timestamp": 1666123888,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmph2ypa_3v.cpp:2:\n/tmp/tmph2ypa_3v.cpp: In function \u2018int main()\u2019:\n/tmp/tmph2ypa_3v.cpp:20:203: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   20 |     assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n      |                                                                                                                                                                                                           ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmph2ypa_3v.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmph2ypa_3v.cpp:2:\n/tmp/tmph2ypa_3v.cpp:20:203: note:  ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to flatten a given nested list structure.\nstd::vector<long> flatten_list(std::any list1) {\n    std::vector<long> result;\n    if (list1.type() == typeid(std::vector<long>)) {\n        std::vector<long> list = std::any_cast<std::vector<long>>(list1);\n        for (auto i : list) {\n            if (i.type() == typeid(std::vector<long>)) {\n                std::vector<long> temp = flatten_list(i);\n                result.insert(result.end(), temp.begin(), temp.end());\n            } else {\n                result.push_back(std::any_cast<long>(i));\n            }\n        }\n    } else {\n        result.push_back(std::any_cast<long>(list1));\n    }\n    return result;\n}\nint main() {\n    auto candidate = flatten_list;\n    assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)40}), (std::vector<long>)std::vector<long>({(long)30, (long)56, (long)25}), (std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)33}), (std::vector<long>)std::vector<long>({(long)40})}))) == (std::vector<long>({(long)10, (long)20, (long)40, (long)30, (long)56, (long)25, (long)10, (long)20, (long)33, (long)40})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)1, (long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)10, (long)11, (long)12}), (std::vector<long>)std::vector<long>({(long)7, (long)8, (long)9})}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)10, (long)11, (long)12, (long)7, (long)8, (long)9})));\n}\n",
      "timestamp": 1666123885,
      "stdout": "",
      "stderr": "/tmp/tmpzarvl_wt.cpp: In function \u2018std::vector<long int> flatten_list(std::any)\u2019:\n/tmp/tmpzarvl_wt.cpp:9:19: error: request for member \u2018type\u2019 in \u2018i\u2019, which is of non-class type \u2018long int\u2019\n    9 |             if (i.type() == typeid(std::vector<long>)) {\n      |                   ^~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpzarvl_wt.cpp:2:\n/tmp/tmpzarvl_wt.cpp: In function \u2018int main()\u2019:\n/tmp/tmpzarvl_wt.cpp:23:203: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   23 |     assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n      |                                                                                                                                                                                                           ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpzarvl_wt.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/s",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to flatten a given nested list structure.\nstd::vector<long> flatten_list(std::any list1) {\n    std::vector<long> result;\n    if (list1.type() == typeid(long)) {\n        result.push_back(std::any_cast<long>(list1));\n        return result;\n    }\n    std::vector<std::any> list = std::any_cast<std::vector<std::any>>(list1);\n    for (auto i : list) {\n        std::vector<long> temp = flatten_list(i);\n        result.insert(result.end(), temp.begin(), temp.end());\n    }\n    return result;\n}\nint main() {\n    auto candidate = flatten_list;\n    assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)40}), (std::vector<long>)std::vector<long>({(long)30, (long)56, (long)25}), (std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)33}), (std::vector<long>)std::vector<long>({(long)40})}))) == (std::vector<long>({(long)10, (long)20, (long)40, (long)30, (long)56, (long)25, (long)10, (long)20, (long)33, (long)40})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)1, (long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)10, (long)11, (long)12}), (std::vector<long>)std::vector<long>({(long)7, (long)8, (long)9})}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)10, (long)11, (long)12, (long)7, (long)8, (long)9})));\n}\n",
      "timestamp": 1666123888,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp9g_z7t52.cpp:2:\n/tmp/tmp9g_z7t52.cpp: In function \u2018int main()\u2019:\n/tmp/tmp9g_z7t52.cpp:19:203: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   19 |     assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n      |                                                                                                                                                                                                           ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmp9g_z7t52.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp9g_z7t52.cpp:2:\n/tmp/tmp9g_z7t52.cpp:19:203: note:  ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to flatten a given nested list structure.\nstd::vector<long> flatten_list(std::any list1) {\n    std::vector<long> result;\n    if (list1.type() == typeid(std::vector<std::any>)) {\n        std::vector<std::any> list = std::any_cast<std::vector<std::any>>(list1);\n        for (auto l : list) {\n            std::vector<long> temp = flatten_list(l);\n            result.insert(result.end(), temp.begin(), temp.end());\n        }\n    } else {\n        result.push_back(std::any_cast<long>(list1));\n    }\n    return result;\n}\nint main() {\n    auto candidate = flatten_list;\n    assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)40}), (std::vector<long>)std::vector<long>({(long)30, (long)56, (long)25}), (std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)33}), (std::vector<long>)std::vector<long>({(long)40})}))) == (std::vector<long>({(long)10, (long)20, (long)40, (long)30, (long)56, (long)25, (long)10, (long)20, (long)33, (long)40})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)1, (long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)10, (long)11, (long)12}), (std::vector<long>)std::vector<long>({(long)7, (long)8, (long)9})}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)10, (long)11, (long)12, (long)7, (long)8, (long)9})));\n}\n",
      "timestamp": 1666123888,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpdc9jhg1e.cpp:2:\n/tmp/tmpdc9jhg1e.cpp: In function \u2018int main()\u2019:\n/tmp/tmpdc9jhg1e.cpp:19:203: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   19 |     assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n      |                                                                                                                                                                                                           ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpdc9jhg1e.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpdc9jhg1e.cpp:2:\n/tmp/tmpdc9jhg1e.cpp:19:203: note:  ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to flatten a given nested list structure.\nstd::vector<long> flatten_list(std::any list1) {\n    std::vector<long> result;\n    if(list1.type() == typeid(std::vector<std::any>)) {\n        std::vector<std::any> list = std::any_cast<std::vector<std::any>>(list1);\n        for(auto i : list) {\n            std::vector<long> temp = flatten_list(i);\n            result.insert(result.end(), temp.begin(), temp.end());\n        }\n    } else {\n        result.push_back(std::any_cast<long>(list1));\n    }\n    return result;\n}\nint main() {\n    auto candidate = flatten_list;\n    assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)40}), (std::vector<long>)std::vector<long>({(long)30, (long)56, (long)25}), (std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)33}), (std::vector<long>)std::vector<long>({(long)40})}))) == (std::vector<long>({(long)10, (long)20, (long)40, (long)30, (long)56, (long)25, (long)10, (long)20, (long)33, (long)40})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)1, (long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)10, (long)11, (long)12}), (std::vector<long>)std::vector<long>({(long)7, (long)8, (long)9})}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)10, (long)11, (long)12, (long)7, (long)8, (long)9})));\n}\n",
      "timestamp": 1666123887,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpdp7cavfh.cpp:2:\n/tmp/tmpdp7cavfh.cpp: In function \u2018int main()\u2019:\n/tmp/tmpdp7cavfh.cpp:19:203: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   19 |     assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n      |                                                                                                                                                                                                           ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpdp7cavfh.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpdp7cavfh.cpp:2:\n/tmp/tmpdp7cavfh.cpp:19:203: note:  ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to flatten a given nested list structure.\nstd::vector<long> flatten_list(std::any list1) {\n    std::vector<long> result;\n    if (list1.type() == typeid(long)) {\n        result.push_back(std::any_cast<long>(list1));\n    } else {\n        std::vector<std::any> list = std::any_cast<std::vector<std::any>>(list1);\n        for (auto i : list) {\n            std::vector<long> temp = flatten_list(i);\n            result.insert(result.end(), temp.begin(), temp.end());\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = flatten_list;\n    assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)40}), (std::vector<long>)std::vector<long>({(long)30, (long)56, (long)25}), (std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)33}), (std::vector<long>)std::vector<long>({(long)40})}))) == (std::vector<long>({(long)10, (long)20, (long)40, (long)30, (long)56, (long)25, (long)10, (long)20, (long)33, (long)40})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)1, (long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)10, (long)11, (long)12}), (std::vector<long>)std::vector<long>({(long)7, (long)8, (long)9})}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)10, (long)11, (long)12, (long)7, (long)8, (long)9})));\n}\n",
      "timestamp": 1665517687,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpkj59rete.cpp:2:\n/tmp/tmpkj59rete.cpp: In function \u2018int main()\u2019:\n/tmp/tmpkj59rete.cpp:19:203: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   19 |     assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n      |                                                                                                                                                                                                           ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpkj59rete.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpkj59rete.cpp:2:\n/tmp/tmpkj59rete.cpp:19:203: note:  ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to flatten a given nested list structure.\nstd::vector<long> flatten_list(std::any list1) {\n    std::vector<long> result;\n    if (list1.type() == typeid(std::vector<std::any>)) {\n        for (auto &elem : std::any_cast<std::vector<std::any>>(list1)) {\n            auto tmp = flatten_list(elem);\n            result.insert(result.end(), tmp.begin(), tmp.end());\n        }\n    } else {\n        result.push_back(std::any_cast<long>(list1));\n    }\n    return result;\n}\nint main() {\n    auto candidate = flatten_list;\n    assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)40}), (std::vector<long>)std::vector<long>({(long)30, (long)56, (long)25}), (std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)33}), (std::vector<long>)std::vector<long>({(long)40})}))) == (std::vector<long>({(long)10, (long)20, (long)40, (long)30, (long)56, (long)25, (long)10, (long)20, (long)33, (long)40})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)1, (long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)10, (long)11, (long)12}), (std::vector<long>)std::vector<long>({(long)7, (long)8, (long)9})}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)10, (long)11, (long)12, (long)7, (long)8, (long)9})));\n}\n",
      "timestamp": 1666123890,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp1bny19ej.cpp:2:\n/tmp/tmp1bny19ej.cpp: In function \u2018int main()\u2019:\n/tmp/tmp1bny19ej.cpp:18:203: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   18 |     assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n      |                                                                                                                                                                                                           ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmp1bny19ej.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp1bny19ej.cpp:2:\n/tmp/tmp1bny19ej.cpp:18:203: note:  ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to flatten a given nested list structure.\nstd::vector<long> flatten_list(std::any list1) {\n    std::vector<long> result;\n    if (list1.type() == typeid(std::vector<std::any>)) {\n        for (auto &item : std::any_cast<std::vector<std::any>>(list1)) {\n            auto temp = flatten_list(item);\n            result.insert(result.end(), temp.begin(), temp.end());\n        }\n    } else {\n        result.push_back(std::any_cast<long>(list1));\n    }\n    return result;\n}\nint main() {\n    auto candidate = flatten_list;\n    assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)40}), (std::vector<long>)std::vector<long>({(long)30, (long)56, (long)25}), (std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)33}), (std::vector<long>)std::vector<long>({(long)40})}))) == (std::vector<long>({(long)10, (long)20, (long)40, (long)30, (long)56, (long)25, (long)10, (long)20, (long)33, (long)40})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)1, (long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)10, (long)11, (long)12}), (std::vector<long>)std::vector<long>({(long)7, (long)8, (long)9})}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)10, (long)11, (long)12, (long)7, (long)8, (long)9})));\n}\n",
      "timestamp": 1666123886,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp9v3jirli.cpp:2:\n/tmp/tmp9v3jirli.cpp: In function \u2018int main()\u2019:\n/tmp/tmp9v3jirli.cpp:18:203: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   18 |     assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n      |                                                                                                                                                                                                           ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmp9v3jirli.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp9v3jirli.cpp:2:\n/tmp/tmp9v3jirli.cpp:18:203: note:  ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to flatten a given nested list structure.\nstd::vector<long> flatten_list(std::any list1) {\n    std::vector<long> list2;\n    if (list1.type() == typeid(std::vector<std::any>)) {\n        for (auto &i : std::any_cast<std::vector<std::any>>(list1)) {\n            auto list3 = flatten_list(i);\n            list2.insert(list2.end(), list3.begin(), list3.end());\n        }\n    } else {\n        list2.push_back(std::any_cast<long>(list1));\n    }\n    return list2;\n}\nint main() {\n    auto candidate = flatten_list;\n    assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)40}), (std::vector<long>)std::vector<long>({(long)30, (long)56, (long)25}), (std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)33}), (std::vector<long>)std::vector<long>({(long)40})}))) == (std::vector<long>({(long)10, (long)20, (long)40, (long)30, (long)56, (long)25, (long)10, (long)20, (long)33, (long)40})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)1, (long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)10, (long)11, (long)12}), (std::vector<long>)std::vector<long>({(long)7, (long)8, (long)9})}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)10, (long)11, (long)12, (long)7, (long)8, (long)9})));\n}\n",
      "timestamp": 1666123885,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp93wl6zn2.cpp:2:\n/tmp/tmp93wl6zn2.cpp: In function \u2018int main()\u2019:\n/tmp/tmp93wl6zn2.cpp:18:203: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   18 |     assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n      |                                                                                                                                                                                                           ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmp93wl6zn2.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp93wl6zn2.cpp:2:\n/tmp/tmp93wl6zn2.cpp:18:203: note:  ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to flatten a given nested list structure.\nstd::vector<long> flatten_list(std::any list1) {\n  std::vector<long> result;\n  std::vector<std::any> list;\n  list.push_back(list1);\n  while (!list.empty()) {\n    std::any element = list.back();\n    list.pop_back();\n    if (element.type() == typeid(std::vector<std::any>)) {\n      std::vector<std::any> temp = std::any_cast<std::vector<std::any>>(element);\n      for (auto it = temp.rbegin(); it != temp.rend(); ++it) {\n        list.push_back(*it);\n      }\n    } else {\n      result.push_back(std::any_cast<long>(element));\n    }\n  }\n  return result;\n}\nint main() {\n    auto candidate = flatten_list;\n    assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)40}), (std::vector<long>)std::vector<long>({(long)30, (long)56, (long)25}), (std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)33}), (std::vector<long>)std::vector<long>({(long)40})}))) == (std::vector<long>({(long)10, (long)20, (long)40, (long)30, (long)56, (long)25, (long)10, (long)20, (long)33, (long)40})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)1, (long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)10, (long)11, (long)12}), (std::vector<long>)std::vector<long>({(long)7, (long)8, (long)9})}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)10, (long)11, (long)12, (long)7, (long)8, (long)9})));\n}\n",
      "timestamp": 1666123890,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmph4kobk1r.cpp:2:\n/tmp/tmph4kobk1r.cpp: In function \u2018int main()\u2019:\n/tmp/tmph4kobk1r.cpp:24:203: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   24 |     assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n      |                                                                                                                                                                                                           ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmph4kobk1r.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmph4kobk1r.cpp:2:\n/tmp/tmph4kobk1r.cpp:24:203: note:  ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to flatten a given nested list structure.\nstd::vector<long> flatten_list(std::any list1) {\n    std::vector<long> result;\n    if (list1.type() == typeid(long)) {\n        result.push_back(std::any_cast<long>(list1));\n    } else {\n        for (auto &i : std::any_cast<std::vector<std::any>>(list1)) {\n            std::vector<long> temp = flatten_list(i);\n            result.insert(result.end(), temp.begin(), temp.end());\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = flatten_list;\n    assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)40}), (std::vector<long>)std::vector<long>({(long)30, (long)56, (long)25}), (std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)33}), (std::vector<long>)std::vector<long>({(long)40})}))) == (std::vector<long>({(long)10, (long)20, (long)40, (long)30, (long)56, (long)25, (long)10, (long)20, (long)33, (long)40})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)1, (long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)10, (long)11, (long)12}), (std::vector<long>)std::vector<long>({(long)7, (long)8, (long)9})}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)10, (long)11, (long)12, (long)7, (long)8, (long)9})));\n}\n",
      "timestamp": 1666123890,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp1r4iks9q.cpp:2:\n/tmp/tmp1r4iks9q.cpp: In function \u2018int main()\u2019:\n/tmp/tmp1r4iks9q.cpp:18:203: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   18 |     assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n      |                                                                                                                                                                                                           ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmp1r4iks9q.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp1r4iks9q.cpp:2:\n/tmp/tmp1r4iks9q.cpp:18:203: note:  ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to flatten a given nested list structure.\nstd::vector<long> flatten_list(std::any list1) {\n  std::vector<long> flat_list;\n  if (list1.type() == typeid(long)) {\n    flat_list.push_back(std::any_cast<long>(list1));\n  } else {\n    for (auto &i : std::any_cast<std::vector<std::any>>(list1)) {\n      std::vector<long> temp = flatten_list(i);\n      flat_list.insert(flat_list.end(), temp.begin(), temp.end());\n    }\n  }\n  return flat_list;\n}\nint main() {\n    auto candidate = flatten_list;\n    assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)40}), (std::vector<long>)std::vector<long>({(long)30, (long)56, (long)25}), (std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)33}), (std::vector<long>)std::vector<long>({(long)40})}))) == (std::vector<long>({(long)10, (long)20, (long)40, (long)30, (long)56, (long)25, (long)10, (long)20, (long)33, (long)40})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)1, (long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)10, (long)11, (long)12}), (std::vector<long>)std::vector<long>({(long)7, (long)8, (long)9})}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)10, (long)11, (long)12, (long)7, (long)8, (long)9})));\n}\n",
      "timestamp": 1666123890,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp1wongqer.cpp:2:\n/tmp/tmp1wongqer.cpp: In function \u2018int main()\u2019:\n/tmp/tmp1wongqer.cpp:18:203: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   18 |     assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n      |                                                                                                                                                                                                           ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmp1wongqer.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp1wongqer.cpp:2:\n/tmp/tmp1wongqer.cpp:18:203: note:  ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to flatten a given nested list structure.\nstd::vector<long> flatten_list(std::any list1) {\n    std::vector<long> result;\n    if (list1.type() == typeid(std::vector<long>)) {\n        std::vector<long> list = std::any_cast<std::vector<long>>(list1);\n        for (auto &i : list) {\n            if (i.type() == typeid(std::vector<long>)) {\n                std::vector<long> temp = flatten_list(i);\n                result.insert(result.end(), temp.begin(), temp.end());\n            } else {\n                result.push_back(std::any_cast<long>(i));\n            }\n        }\n    } else {\n        result.push_back(std::any_cast<long>(list1));\n    }\n    return result;\n}\nint main() {\n    auto candidate = flatten_list;\n    assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)40}), (std::vector<long>)std::vector<long>({(long)30, (long)56, (long)25}), (std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)33}), (std::vector<long>)std::vector<long>({(long)40})}))) == (std::vector<long>({(long)10, (long)20, (long)40, (long)30, (long)56, (long)25, (long)10, (long)20, (long)33, (long)40})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)1, (long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)10, (long)11, (long)12}), (std::vector<long>)std::vector<long>({(long)7, (long)8, (long)9})}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)10, (long)11, (long)12, (long)7, (long)8, (long)9})));\n}\n",
      "timestamp": 1666123890,
      "stdout": "",
      "stderr": "/tmp/tmptsuatgh9.cpp: In function \u2018std::vector<long int> flatten_list(std::any)\u2019:\n/tmp/tmptsuatgh9.cpp:9:19: error: request for member \u2018type\u2019 in \u2018i\u2019, which is of non-class type \u2018long int\u2019\n    9 |             if (i.type() == typeid(std::vector<long>)) {\n      |                   ^~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmptsuatgh9.cpp:2:\n/tmp/tmptsuatgh9.cpp: In function \u2018int main()\u2019:\n/tmp/tmptsuatgh9.cpp:23:203: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   23 |     assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n      |                                                                                                                                                                                                           ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmptsuatgh9.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/s",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to flatten a given nested list structure.\nstd::vector<long> flatten_list(std::any list1) {\n    std::vector<long> result;\n    if (list1.type() == typeid(std::vector<long>)) {\n        std::vector<long> list = std::any_cast<std::vector<long>>(list1);\n        for (auto item : list) {\n            if (item.type() == typeid(std::vector<long>)) {\n                std::vector<long> list2 = std::any_cast<std::vector<long>>(item);\n                for (auto item2 : list2) {\n                    result.push_back(item2);\n                }\n            }\n            else {\n                result.push_back(item);\n            }\n        }\n    }\n    else {\n        result.push_back(list1);\n    }\n    return result;\n}\nint main() {\n    auto candidate = flatten_list;\n    assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)40}), (std::vector<long>)std::vector<long>({(long)30, (long)56, (long)25}), (std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)33}), (std::vector<long>)std::vector<long>({(long)40})}))) == (std::vector<long>({(long)10, (long)20, (long)40, (long)30, (long)56, (long)25, (long)10, (long)20, (long)33, (long)40})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)1, (long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)10, (long)11, (long)12}), (std::vector<long>)std::vector<long>({(long)7, (long)8, (long)9})}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)10, (long)11, (long)12, (long)7, (long)8, (long)9})));\n}\n",
      "timestamp": 1666123890,
      "stdout": "",
      "stderr": "/tmp/tmp8itv4_m_.cpp: In function \u2018std::vector<long int> flatten_list(std::any)\u2019:\n/tmp/tmp8itv4_m_.cpp:9:22: error: request for member \u2018type\u2019 in \u2018item\u2019, which is of non-class type \u2018long int\u2019\n    9 |             if (item.type() == typeid(std::vector<long>)) {\n      |                      ^~~~\n/tmp/tmp8itv4_m_.cpp:21:31: error: no matching function for call to \u2018std::vector<long int>::push_back(std::any&)\u2019\n   21 |         result.push_back(list1);\n      |                               ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/vector:67,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/functional:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/pstl/glue_algorithm_defs.h:13,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:71,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n                 from /tmp/tmp8itv4_m_.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_vector.h:1184:7: note: candidate: \u2018void std::vector<_Tp, _Alloc>::push_back(const value_type&) [with _Tp = long int; _Alloc = std::allocator<long int>; std::vector<_Tp, _Alloc>::value_type = long int]\u2019\n 1184 |       push_back(const value_type& __x)\n      |       ^~~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_vector.h:1184:35: note:   no known conversion for argument 1 from \u2018std::any\u2019 to \u2018const value_type&\u2019 {aka \u2018const long int&\u2019}\n 1184 |       push_back(const value_type& __x)\n      |                 ~~~~~~~~~~~~~~~~~~^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_vector.h:1200:7: note: candidate: \u2018void std::vector<_Tp, _Alloc>::push_back(std::vector<_Tp, _Alloc>::value_type&&) [with _Tp = long int; _Alloc = std::allocator<long int>; std::vector<_Tp, _Alloc>::value_type = long int]\u2019\n 1200 |       push_back(value_type&& __x)\n      |       ^~~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to flatten a given nested list structure.\nstd::vector<long> flatten_list(std::any list1) {\n    std::vector<long> result;\n    if (list1.type() == typeid(std::vector<long>)) {\n        for (auto &i : std::any_cast<std::vector<long>>(list1)) {\n            result.push_back(i);\n        }\n    } else if (list1.type() == typeid(std::vector<std::any>)) {\n        for (auto &i : std::any_cast<std::vector<std::any>>(list1)) {\n            std::vector<long> temp = flatten_list(i);\n            result.insert(result.end(), temp.begin(), temp.end());\n        }\n    } else {\n        result.push_back(std::any_cast<long>(list1));\n    }\n    return result;\n}\nint main() {\n    auto candidate = flatten_list;\n    assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)40}), (std::vector<long>)std::vector<long>({(long)30, (long)56, (long)25}), (std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)33}), (std::vector<long>)std::vector<long>({(long)40})}))) == (std::vector<long>({(long)10, (long)20, (long)40, (long)30, (long)56, (long)25, (long)10, (long)20, (long)33, (long)40})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)1, (long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)10, (long)11, (long)12}), (std::vector<long>)std::vector<long>({(long)7, (long)8, (long)9})}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)10, (long)11, (long)12, (long)7, (long)8, (long)9})));\n}\n",
      "timestamp": 1666123886,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpsat2fk_0.cpp:2:\n/tmp/tmpsat2fk_0.cpp: In function \u2018int main()\u2019:\n/tmp/tmpsat2fk_0.cpp:22:203: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   22 |     assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n      |                                                                                                                                                                                                           ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpsat2fk_0.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpsat2fk_0.cpp:2:\n/tmp/tmpsat2fk_0.cpp:22:203: note:  ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to flatten a given nested list structure.\nstd::vector<long> flatten_list(std::any list1) {\n    std::vector<long> result;\n    if (list1.type() == typeid(long)) {\n        result.push_back(std::any_cast<long>(list1));\n    } else {\n        std::vector<std::any> list = std::any_cast<std::vector<std::any>>(list1);\n        for (auto& i : list) {\n            std::vector<long> temp = flatten_list(i);\n            result.insert(result.end(), temp.begin(), temp.end());\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = flatten_list;\n    assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)40}), (std::vector<long>)std::vector<long>({(long)30, (long)56, (long)25}), (std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)33}), (std::vector<long>)std::vector<long>({(long)40})}))) == (std::vector<long>({(long)10, (long)20, (long)40, (long)30, (long)56, (long)25, (long)10, (long)20, (long)33, (long)40})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)1, (long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)10, (long)11, (long)12}), (std::vector<long>)std::vector<long>({(long)7, (long)8, (long)9})}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)10, (long)11, (long)12, (long)7, (long)8, (long)9})));\n}\n",
      "timestamp": 1666123890,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpmje2kfix.cpp:2:\n/tmp/tmpmje2kfix.cpp: In function \u2018int main()\u2019:\n/tmp/tmpmje2kfix.cpp:19:203: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   19 |     assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n      |                                                                                                                                                                                                           ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpmje2kfix.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpmje2kfix.cpp:2:\n/tmp/tmpmje2kfix.cpp:19:203: note:  ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to flatten a given nested list structure.\nstd::vector<long> flatten_list(std::any list1) {\n    std::vector<long> result;\n    if (list1.type() == typeid(std::vector<std::any>)) {\n        std::vector<std::any> list = std::any_cast<std::vector<std::any>>(list1);\n        for (auto& item : list) {\n            std::vector<long> temp = flatten_list(item);\n            result.insert(result.end(), temp.begin(), temp.end());\n        }\n    } else {\n        result.push_back(std::any_cast<long>(list1));\n    }\n    return result;\n}\nint main() {\n    auto candidate = flatten_list;\n    assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)40}), (std::vector<long>)std::vector<long>({(long)30, (long)56, (long)25}), (std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)33}), (std::vector<long>)std::vector<long>({(long)40})}))) == (std::vector<long>({(long)10, (long)20, (long)40, (long)30, (long)56, (long)25, (long)10, (long)20, (long)33, (long)40})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)1, (long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)10, (long)11, (long)12}), (std::vector<long>)std::vector<long>({(long)7, (long)8, (long)9})}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)10, (long)11, (long)12, (long)7, (long)8, (long)9})));\n}\n",
      "timestamp": 1666123888,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp957nk1l0.cpp:2:\n/tmp/tmp957nk1l0.cpp: In function \u2018int main()\u2019:\n/tmp/tmp957nk1l0.cpp:19:203: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   19 |     assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n      |                                                                                                                                                                                                           ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmp957nk1l0.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp957nk1l0.cpp:2:\n/tmp/tmp957nk1l0.cpp:19:203: note:  ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to flatten a given nested list structure.\nstd::vector<long> flatten_list(std::any list1) {\n    std::vector<long> v;\n    if (list1.type() == typeid(std::vector<std::any>)) {\n        std::vector<std::any> list = std::any_cast<std::vector<std::any>>(list1);\n        for (auto i : list) {\n            std::vector<long> v1 = flatten_list(i);\n            v.insert(v.end(), v1.begin(), v1.end());\n        }\n    } else {\n        v.push_back(std::any_cast<long>(list1));\n    }\n    return v;\n}\nint main() {\n    auto candidate = flatten_list;\n    assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)40}), (std::vector<long>)std::vector<long>({(long)30, (long)56, (long)25}), (std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)33}), (std::vector<long>)std::vector<long>({(long)40})}))) == (std::vector<long>({(long)10, (long)20, (long)40, (long)30, (long)56, (long)25, (long)10, (long)20, (long)33, (long)40})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)1, (long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)10, (long)11, (long)12}), (std::vector<long>)std::vector<long>({(long)7, (long)8, (long)9})}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)10, (long)11, (long)12, (long)7, (long)8, (long)9})));\n}\n",
      "timestamp": 1666123890,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpycicy54z.cpp:2:\n/tmp/tmpycicy54z.cpp: In function \u2018int main()\u2019:\n/tmp/tmpycicy54z.cpp:19:203: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   19 |     assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n      |                                                                                                                                                                                                           ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpycicy54z.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpycicy54z.cpp:2:\n/tmp/tmpycicy54z.cpp:19:203: note:  ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to flatten a given nested list structure.\nstd::vector<long> flatten_list(std::any list1) {\n    std::vector<long> result;\n    std::vector<std::any> list = std::any_cast<std::vector<std::any>>(list1);\n    for(auto i : list) {\n        if(i.type() == typeid(std::vector<std::any>)) {\n            std::vector<long> temp = flatten_list(i);\n            for(auto j : temp) {\n                result.push_back(j);\n            }\n        } else {\n            result.push_back(std::any_cast<long>(i));\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = flatten_list;\n    assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)40}), (std::vector<long>)std::vector<long>({(long)30, (long)56, (long)25}), (std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)33}), (std::vector<long>)std::vector<long>({(long)40})}))) == (std::vector<long>({(long)10, (long)20, (long)40, (long)30, (long)56, (long)25, (long)10, (long)20, (long)33, (long)40})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)1, (long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)10, (long)11, (long)12}), (std::vector<long>)std::vector<long>({(long)7, (long)8, (long)9})}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)10, (long)11, (long)12, (long)7, (long)8, (long)9})));\n}\n",
      "timestamp": 1666123890,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp65k7pcdq.cpp:2:\n/tmp/tmp65k7pcdq.cpp: In function \u2018int main()\u2019:\n/tmp/tmp65k7pcdq.cpp:21:203: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   21 |     assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n      |                                                                                                                                                                                                           ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmp65k7pcdq.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp65k7pcdq.cpp:2:\n/tmp/tmp65k7pcdq.cpp:21:203: note:  ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to flatten a given nested list structure.\nstd::vector<long> flatten_list(std::any list1) {\n    std::vector<long> result;\n    if (list1.type() == typeid(long)) {\n        result.push_back(std::any_cast<long>(list1));\n    } else {\n        std::vector<std::any> list = std::any_cast<std::vector<std::any>>(list1);\n        for (auto i : list) {\n            std::vector<long> temp = flatten_list(i);\n            result.insert(result.end(), temp.begin(), temp.end());\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = flatten_list;\n    assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)40}), (std::vector<long>)std::vector<long>({(long)30, (long)56, (long)25}), (std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)33}), (std::vector<long>)std::vector<long>({(long)40})}))) == (std::vector<long>({(long)10, (long)20, (long)40, (long)30, (long)56, (long)25, (long)10, (long)20, (long)33, (long)40})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)1, (long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)10, (long)11, (long)12}), (std::vector<long>)std::vector<long>({(long)7, (long)8, (long)9})}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)10, (long)11, (long)12, (long)7, (long)8, (long)9})));\n}\n",
      "timestamp": 1665517687,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpkj59rete.cpp:2:\n/tmp/tmpkj59rete.cpp: In function \u2018int main()\u2019:\n/tmp/tmpkj59rete.cpp:19:203: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   19 |     assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n      |                                                                                                                                                                                                           ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpkj59rete.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpkj59rete.cpp:2:\n/tmp/tmpkj59rete.cpp:19:203: note:  ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to flatten a given nested list structure.\nstd::vector<long> flatten_list(std::any list1) {\n    std::vector<long> list2;\n    if(list1.type() == typeid(long)){\n        list2.push_back(std::any_cast<long>(list1));\n    }\n    else{\n        std::vector<std::any> list3 = std::any_cast<std::vector<std::any>>(list1);\n        for(auto it = list3.begin(); it != list3.end(); it++){\n            std::vector<long> list4 = flatten_list(*it);\n            list2.insert(list2.end(), list4.begin(), list4.end());\n        }\n    }\n    return list2;\n}\nint main() {\n    auto candidate = flatten_list;\n    assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)40}), (std::vector<long>)std::vector<long>({(long)30, (long)56, (long)25}), (std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)33}), (std::vector<long>)std::vector<long>({(long)40})}))) == (std::vector<long>({(long)10, (long)20, (long)40, (long)30, (long)56, (long)25, (long)10, (long)20, (long)33, (long)40})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)1, (long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)10, (long)11, (long)12}), (std::vector<long>)std::vector<long>({(long)7, (long)8, (long)9})}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)10, (long)11, (long)12, (long)7, (long)8, (long)9})));\n}\n",
      "timestamp": 1666123890,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp7z38ns0l.cpp:2:\n/tmp/tmp7z38ns0l.cpp: In function \u2018int main()\u2019:\n/tmp/tmp7z38ns0l.cpp:20:203: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   20 |     assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n      |                                                                                                                                                                                                           ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmp7z38ns0l.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp7z38ns0l.cpp:2:\n/tmp/tmp7z38ns0l.cpp:20:203: note:  ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to flatten a given nested list structure.\nstd::vector<long> flatten_list(std::any list1) {\n    std::vector<long> result;\n    if(list1.type() == typeid(std::vector<std::any>)) {\n        std::vector<std::any> list = std::any_cast<std::vector<std::any>>(list1);\n        for(auto i: list) {\n            std::vector<long> temp = flatten_list(i);\n            result.insert(result.end(), temp.begin(), temp.end());\n        }\n    } else {\n        result.push_back(std::any_cast<long>(list1));\n    }\n    return result;\n}\nint main() {\n    auto candidate = flatten_list;\n    assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)40}), (std::vector<long>)std::vector<long>({(long)30, (long)56, (long)25}), (std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)33}), (std::vector<long>)std::vector<long>({(long)40})}))) == (std::vector<long>({(long)10, (long)20, (long)40, (long)30, (long)56, (long)25, (long)10, (long)20, (long)33, (long)40})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)1, (long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)10, (long)11, (long)12}), (std::vector<long>)std::vector<long>({(long)7, (long)8, (long)9})}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)10, (long)11, (long)12, (long)7, (long)8, (long)9})));\n}\n",
      "timestamp": 1666123890,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpaxx0wniq.cpp:2:\n/tmp/tmpaxx0wniq.cpp: In function \u2018int main()\u2019:\n/tmp/tmpaxx0wniq.cpp:19:203: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   19 |     assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n      |                                                                                                                                                                                                           ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpaxx0wniq.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpaxx0wniq.cpp:2:\n/tmp/tmpaxx0wniq.cpp:19:203: note:  ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to flatten a given nested list structure.\nstd::vector<long> flatten_list(std::any list1) {\n    std::vector<long> result;\n    if (list1.type() == typeid(long)) {\n        result.push_back(std::any_cast<long>(list1));\n    } else {\n        std::vector<std::any> list = std::any_cast<std::vector<std::any>>(list1);\n        for (auto i : list) {\n            std::vector<long> temp = flatten_list(i);\n            result.insert(result.end(), temp.begin(), temp.end());\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = flatten_list;\n    assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)40}), (std::vector<long>)std::vector<long>({(long)30, (long)56, (long)25}), (std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)33}), (std::vector<long>)std::vector<long>({(long)40})}))) == (std::vector<long>({(long)10, (long)20, (long)40, (long)30, (long)56, (long)25, (long)10, (long)20, (long)33, (long)40})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)1, (long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)10, (long)11, (long)12}), (std::vector<long>)std::vector<long>({(long)7, (long)8, (long)9})}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)10, (long)11, (long)12, (long)7, (long)8, (long)9})));\n}\n",
      "timestamp": 1665517687,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpkj59rete.cpp:2:\n/tmp/tmpkj59rete.cpp: In function \u2018int main()\u2019:\n/tmp/tmpkj59rete.cpp:19:203: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   19 |     assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n      |                                                                                                                                                                                                           ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpkj59rete.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpkj59rete.cpp:2:\n/tmp/tmpkj59rete.cpp:19:203: note:  ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to flatten a given nested list structure.\nstd::vector<long> flatten_list(std::any list1) {\n    std::vector<long> list2;\n    if (list1.type() == typeid(long)) {\n        list2.push_back(std::any_cast<long>(list1));\n    }\n    else {\n        std::vector<std::any> list3 = std::any_cast<std::vector<std::any>>(list1);\n        for (auto i : list3) {\n            std::vector<long> list4 = flatten_list(i);\n            list2.insert(list2.end(), list4.begin(), list4.end());\n        }\n    }\n    return list2;\n}\nint main() {\n    auto candidate = flatten_list;\n    assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)40}), (std::vector<long>)std::vector<long>({(long)30, (long)56, (long)25}), (std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)33}), (std::vector<long>)std::vector<long>({(long)40})}))) == (std::vector<long>({(long)10, (long)20, (long)40, (long)30, (long)56, (long)25, (long)10, (long)20, (long)33, (long)40})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)1, (long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)10, (long)11, (long)12}), (std::vector<long>)std::vector<long>({(long)7, (long)8, (long)9})}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)10, (long)11, (long)12, (long)7, (long)8, (long)9})));\n}\n",
      "timestamp": 1666123890,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpvht_hlnv.cpp:2:\n/tmp/tmpvht_hlnv.cpp: In function \u2018int main()\u2019:\n/tmp/tmpvht_hlnv.cpp:20:203: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   20 |     assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n      |                                                                                                                                                                                                           ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpvht_hlnv.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpvht_hlnv.cpp:2:\n/tmp/tmpvht_hlnv.cpp:20:203: note:  ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to flatten a given nested list structure.\nstd::vector<long> flatten_list(std::any list1) {\n    std::vector<long> result;\n    for (auto it = list1.begin(); it != list1.end(); it++) {\n        if (it->type() == typeid(std::any)) {\n            std::vector<long> temp = flatten_list(it);\n            result.insert(result.end(), temp.begin(), temp.end());\n        } else {\n            result.push_back(it);\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = flatten_list;\n    assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)40}), (std::vector<long>)std::vector<long>({(long)30, (long)56, (long)25}), (std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)33}), (std::vector<long>)std::vector<long>({(long)40})}))) == (std::vector<long>({(long)10, (long)20, (long)40, (long)30, (long)56, (long)25, (long)10, (long)20, (long)33, (long)40})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)1, (long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)10, (long)11, (long)12}), (std::vector<long>)std::vector<long>({(long)7, (long)8, (long)9})}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)10, (long)11, (long)12, (long)7, (long)8, (long)9})));\n}\n",
      "timestamp": 1666123890,
      "stdout": "",
      "stderr": "/tmp/tmp5o2mumid.cpp: In function \u2018std::vector<long int> flatten_list(std::any)\u2019:\n/tmp/tmp5o2mumid.cpp:6:26: error: \u2018class std::any\u2019 has no member named \u2018begin\u2019\n    6 |     for (auto it = list1.begin(); it != list1.end(); it++) {\n      |                          ^~~~~\n/tmp/tmp5o2mumid.cpp:6:47: error: \u2018class std::any\u2019 has no member named \u2018end\u2019\n    6 |     for (auto it = list1.begin(); it != list1.end(); it++) {\n      |                                               ^~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp5o2mumid.cpp:2:\n/tmp/tmp5o2mumid.cpp: In function \u2018int main()\u2019:\n/tmp/tmp5o2mumid.cpp:18:203: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   18 |     assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n      |                                                                                                                                                                                                           ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmp5o2mumid.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to flatten a given nested list structure.\nstd::vector<long> flatten_list(std::any list1) {\n    std::vector<long> result;\n    std::vector<std::any> list = std::any_cast<std::vector<std::any>>(list1);\n    for (auto i : list) {\n        if (i.type() == typeid(std::vector<std::any>)) {\n            std::vector<long> temp = flatten_list(i);\n            result.insert(result.end(), temp.begin(), temp.end());\n        }\n        else {\n            result.push_back(std::any_cast<long>(i));\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = flatten_list;\n    assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)40}), (std::vector<long>)std::vector<long>({(long)30, (long)56, (long)25}), (std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)33}), (std::vector<long>)std::vector<long>({(long)40})}))) == (std::vector<long>({(long)10, (long)20, (long)40, (long)30, (long)56, (long)25, (long)10, (long)20, (long)33, (long)40})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)1, (long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)10, (long)11, (long)12}), (std::vector<long>)std::vector<long>({(long)7, (long)8, (long)9})}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)10, (long)11, (long)12, (long)7, (long)8, (long)9})));\n}\n",
      "timestamp": 1666123890,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpgttv7na5.cpp:2:\n/tmp/tmpgttv7na5.cpp: In function \u2018int main()\u2019:\n/tmp/tmpgttv7na5.cpp:20:203: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   20 |     assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n      |                                                                                                                                                                                                           ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpgttv7na5.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpgttv7na5.cpp:2:\n/tmp/tmpgttv7na5.cpp:20:203: note:  ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to flatten a given nested list structure.\nstd::vector<long> flatten_list(std::any list1) {\n    std::vector<long> result;\n    if(list1.type() == typeid(long)) {\n        result.push_back(std::any_cast<long>(list1));\n    } else {\n        std::vector<std::any> list = std::any_cast<std::vector<std::any>>(list1);\n        for(auto i : list) {\n            std::vector<long> temp = flatten_list(i);\n            result.insert(result.end(), temp.begin(), temp.end());\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = flatten_list;\n    assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)40}), (std::vector<long>)std::vector<long>({(long)30, (long)56, (long)25}), (std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)33}), (std::vector<long>)std::vector<long>({(long)40})}))) == (std::vector<long>({(long)10, (long)20, (long)40, (long)30, (long)56, (long)25, (long)10, (long)20, (long)33, (long)40})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)1, (long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)10, (long)11, (long)12}), (std::vector<long>)std::vector<long>({(long)7, (long)8, (long)9})}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)10, (long)11, (long)12, (long)7, (long)8, (long)9})));\n}\n",
      "timestamp": 1666123890,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpq8d8fiyc.cpp:2:\n/tmp/tmpq8d8fiyc.cpp: In function \u2018int main()\u2019:\n/tmp/tmpq8d8fiyc.cpp:19:203: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   19 |     assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n      |                                                                                                                                                                                                           ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpq8d8fiyc.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpq8d8fiyc.cpp:2:\n/tmp/tmpq8d8fiyc.cpp:19:203: note:  ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to flatten a given nested list structure.\nstd::vector<long> flatten_list(std::any list1) {\n    std::vector<long> result;\n    if (list1.type() == typeid(std::vector<std::any>)) {\n        std::vector<std::any> list = std::any_cast<std::vector<std::any>>(list1);\n        for (auto item : list) {\n            std::vector<long> temp = flatten_list(item);\n            result.insert(result.end(), temp.begin(), temp.end());\n        }\n    } else {\n        result.push_back(std::any_cast<long>(list1));\n    }\n    return result;\n}\nint main() {\n    auto candidate = flatten_list;\n    assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)40}), (std::vector<long>)std::vector<long>({(long)30, (long)56, (long)25}), (std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)33}), (std::vector<long>)std::vector<long>({(long)40})}))) == (std::vector<long>({(long)10, (long)20, (long)40, (long)30, (long)56, (long)25, (long)10, (long)20, (long)33, (long)40})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)1, (long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)10, (long)11, (long)12}), (std::vector<long>)std::vector<long>({(long)7, (long)8, (long)9})}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)10, (long)11, (long)12, (long)7, (long)8, (long)9})));\n}\n",
      "timestamp": 1665517687,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpp5vv1fv9.cpp:2:\n/tmp/tmpp5vv1fv9.cpp: In function \u2018int main()\u2019:\n/tmp/tmpp5vv1fv9.cpp:19:203: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   19 |     assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n      |                                                                                                                                                                                                           ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpp5vv1fv9.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpp5vv1fv9.cpp:2:\n/tmp/tmpp5vv1fv9.cpp:19:203: note:  ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to flatten a given nested list structure.\nstd::vector<long> flatten_list(std::any list1) {\n    std::vector<long> list2;\n    if(list1.type() == typeid(std::vector<std::any>)) {\n        for(auto i : std::any_cast<std::vector<std::any>>(list1)) {\n            auto list3 = flatten_list(i);\n            list2.insert(list2.end(), list3.begin(), list3.end());\n        }\n    } else {\n        list2.push_back(std::any_cast<long>(list1));\n    }\n    return list2;\n}\nint main() {\n    auto candidate = flatten_list;\n    assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)40}), (std::vector<long>)std::vector<long>({(long)30, (long)56, (long)25}), (std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)33}), (std::vector<long>)std::vector<long>({(long)40})}))) == (std::vector<long>({(long)10, (long)20, (long)40, (long)30, (long)56, (long)25, (long)10, (long)20, (long)33, (long)40})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)1, (long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)10, (long)11, (long)12}), (std::vector<long>)std::vector<long>({(long)7, (long)8, (long)9})}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)10, (long)11, (long)12, (long)7, (long)8, (long)9})));\n}\n",
      "timestamp": 1666123890,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpc5fb1z8q.cpp:2:\n/tmp/tmpc5fb1z8q.cpp: In function \u2018int main()\u2019:\n/tmp/tmpc5fb1z8q.cpp:18:203: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   18 |     assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n      |                                                                                                                                                                                                           ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpc5fb1z8q.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpc5fb1z8q.cpp:2:\n/tmp/tmpc5fb1z8q.cpp:18:203: note:  ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to flatten a given nested list structure.\nstd::vector<long> flatten_list(std::any list1) {\n    std::vector<long> result;\n    if(list1.type() == typeid(std::vector<std::any>)) {\n        for(auto &i : std::any_cast<std::vector<std::any>>(list1)) {\n            auto temp = flatten_list(i);\n            result.insert(result.end(), temp.begin(), temp.end());\n        }\n    } else if(list1.type() == typeid(long)) {\n        result.push_back(std::any_cast<long>(list1));\n    }\n    return result;\n}\nint main() {\n    auto candidate = flatten_list;\n    assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)40}), (std::vector<long>)std::vector<long>({(long)30, (long)56, (long)25}), (std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)33}), (std::vector<long>)std::vector<long>({(long)40})}))) == (std::vector<long>({(long)10, (long)20, (long)40, (long)30, (long)56, (long)25, (long)10, (long)20, (long)33, (long)40})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)1, (long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)10, (long)11, (long)12}), (std::vector<long>)std::vector<long>({(long)7, (long)8, (long)9})}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)10, (long)11, (long)12, (long)7, (long)8, (long)9})));\n}\n",
      "timestamp": 1666123890,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp6r2nwf94.cpp:2:\n/tmp/tmp6r2nwf94.cpp: In function \u2018int main()\u2019:\n/tmp/tmp6r2nwf94.cpp:18:203: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   18 |     assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n      |                                                                                                                                                                                                           ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmp6r2nwf94.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp6r2nwf94.cpp:2:\n/tmp/tmp6r2nwf94.cpp:18:203: note:  ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to flatten a given nested list structure.\nstd::vector<long> flatten_list(std::any list1) {\n  std::vector<long> list2;\n  if (list1.type() == typeid(std::vector<long>)) {\n    for (auto i : std::any_cast<std::vector<long>>(list1)) {\n      if (i.type() == typeid(std::vector<long>)) {\n        for (auto j : flatten_list(i)) {\n          list2.push_back(j);\n        }\n      } else {\n        list2.push_back(std::any_cast<long>(i));\n      }\n    }\n  } else {\n    list2.push_back(std::any_cast<long>(list1));\n  }\n  return list2;\n}\nint main() {\n    auto candidate = flatten_list;\n    assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)40}), (std::vector<long>)std::vector<long>({(long)30, (long)56, (long)25}), (std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)33}), (std::vector<long>)std::vector<long>({(long)40})}))) == (std::vector<long>({(long)10, (long)20, (long)40, (long)30, (long)56, (long)25, (long)10, (long)20, (long)33, (long)40})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)1, (long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)10, (long)11, (long)12}), (std::vector<long>)std::vector<long>({(long)7, (long)8, (long)9})}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)10, (long)11, (long)12, (long)7, (long)8, (long)9})));\n}\n",
      "timestamp": 1666123890,
      "stdout": "",
      "stderr": "/tmp/tmpbahfgvu6.cpp: In function \u2018std::vector<long int> flatten_list(std::any)\u2019:\n/tmp/tmpbahfgvu6.cpp:8:13: error: request for member \u2018type\u2019 in \u2018i\u2019, which is of non-class type \u2018long int\u2019\n    8 |       if (i.type() == typeid(std::vector<long>)) {\n      |             ^~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpbahfgvu6.cpp:2:\n/tmp/tmpbahfgvu6.cpp: In function \u2018int main()\u2019:\n/tmp/tmpbahfgvu6.cpp:23:203: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   23 |     assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n      |                                                                                                                                                                                                           ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpbahfgvu6.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to flatten a given nested list structure.\nstd::vector<long> flatten_list(std::any list1) {\n  std::vector<long> result;\n  if (list1.type() == typeid(long)) {\n    result.push_back(std::any_cast<long>(list1));\n  } else {\n    std::vector<std::any> list = std::any_cast<std::vector<std::any>>(list1);\n    for (auto &item : list) {\n      std::vector<long> temp = flatten_list(item);\n      result.insert(result.end(), temp.begin(), temp.end());\n    }\n  }\n  return result;\n}\nint main() {\n    auto candidate = flatten_list;\n    assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)40}), (std::vector<long>)std::vector<long>({(long)30, (long)56, (long)25}), (std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)33}), (std::vector<long>)std::vector<long>({(long)40})}))) == (std::vector<long>({(long)10, (long)20, (long)40, (long)30, (long)56, (long)25, (long)10, (long)20, (long)33, (long)40})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)1, (long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)10, (long)11, (long)12}), (std::vector<long>)std::vector<long>({(long)7, (long)8, (long)9})}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)10, (long)11, (long)12, (long)7, (long)8, (long)9})));\n}\n",
      "timestamp": 1666123890,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpamc14x1a.cpp:2:\n/tmp/tmpamc14x1a.cpp: In function \u2018int main()\u2019:\n/tmp/tmpamc14x1a.cpp:19:203: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   19 |     assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n      |                                                                                                                                                                                                           ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpamc14x1a.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpamc14x1a.cpp:2:\n/tmp/tmpamc14x1a.cpp:19:203: note:  ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to flatten a given nested list structure.\nstd::vector<long> flatten_list(std::any list1) {\n    std::vector<long> result;\n    if(list1.type() == typeid(long)) {\n        result.push_back(std::any_cast<long>(list1));\n        return result;\n    }\n    else if(list1.type() == typeid(std::vector<std::any>)) {\n        std::vector<std::any> list = std::any_cast<std::vector<std::any>>(list1);\n        for(int i = 0; i < list.size(); i++) {\n            std::vector<long> temp = flatten_list(list[i]);\n            result.insert(result.end(), temp.begin(), temp.end());\n        }\n        return result;\n    }\n    else {\n        return result;\n    }\n}\nint main() {\n    auto candidate = flatten_list;\n    assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)40}), (std::vector<long>)std::vector<long>({(long)30, (long)56, (long)25}), (std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)33}), (std::vector<long>)std::vector<long>({(long)40})}))) == (std::vector<long>({(long)10, (long)20, (long)40, (long)30, (long)56, (long)25, (long)10, (long)20, (long)33, (long)40})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)1, (long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)10, (long)11, (long)12}), (std::vector<long>)std::vector<long>({(long)7, (long)8, (long)9})}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)10, (long)11, (long)12, (long)7, (long)8, (long)9})));\n}\n",
      "timestamp": 1666123890,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpjnpuwhur.cpp:2:\n/tmp/tmpjnpuwhur.cpp: In function \u2018int main()\u2019:\n/tmp/tmpjnpuwhur.cpp:24:203: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   24 |     assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n      |                                                                                                                                                                                                           ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpjnpuwhur.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpjnpuwhur.cpp:2:\n/tmp/tmpjnpuwhur.cpp:24:203: note:  ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to flatten a given nested list structure.\nstd::vector<long> flatten_list(std::any list1) {\n    std::vector<long> result;\n    if (list1.type() == typeid(long)) {\n        result.push_back(std::any_cast<long>(list1));\n    } else {\n        std::vector<std::any> list = std::any_cast<std::vector<std::any>>(list1);\n        for (auto i : list) {\n            std::vector<long> temp = flatten_list(i);\n            result.insert(result.end(), temp.begin(), temp.end());\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = flatten_list;\n    assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)40}), (std::vector<long>)std::vector<long>({(long)30, (long)56, (long)25}), (std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)33}), (std::vector<long>)std::vector<long>({(long)40})}))) == (std::vector<long>({(long)10, (long)20, (long)40, (long)30, (long)56, (long)25, (long)10, (long)20, (long)33, (long)40})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)1, (long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)10, (long)11, (long)12}), (std::vector<long>)std::vector<long>({(long)7, (long)8, (long)9})}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)10, (long)11, (long)12, (long)7, (long)8, (long)9})));\n}\n",
      "timestamp": 1665517687,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpkj59rete.cpp:2:\n/tmp/tmpkj59rete.cpp: In function \u2018int main()\u2019:\n/tmp/tmpkj59rete.cpp:19:203: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   19 |     assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n      |                                                                                                                                                                                                           ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpkj59rete.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpkj59rete.cpp:2:\n/tmp/tmpkj59rete.cpp:19:203: note:  ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to flatten a given nested list structure.\nstd::vector<long> flatten_list(std::any list1) {\n    std::vector<long> result;\n    if(list1.type() == typeid(std::vector<long>)) {\n        std::vector<long> list = std::any_cast<std::vector<long>>(list1);\n        for(auto x : list) {\n            result.push_back(x);\n        }\n    } else if(list1.type() == typeid(std::vector<std::any>)) {\n        std::vector<std::any> list = std::any_cast<std::vector<std::any>>(list1);\n        for(auto x : list) {\n            std::vector<long> temp = flatten_list(x);\n            for(auto y : temp) {\n                result.push_back(y);\n            }\n        }\n    } else {\n        result.push_back(std::any_cast<long>(list1));\n    }\n    return result;\n}\nint main() {\n    auto candidate = flatten_list;\n    assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)40}), (std::vector<long>)std::vector<long>({(long)30, (long)56, (long)25}), (std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)33}), (std::vector<long>)std::vector<long>({(long)40})}))) == (std::vector<long>({(long)10, (long)20, (long)40, (long)30, (long)56, (long)25, (long)10, (long)20, (long)33, (long)40})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)1, (long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)10, (long)11, (long)12}), (std::vector<long>)std::vector<long>({(long)7, (long)8, (long)9})}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)10, (long)11, (long)12, (long)7, (long)8, (long)9})));\n}\n",
      "timestamp": 1666123890,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpsq2r8bze.cpp:2:\n/tmp/tmpsq2r8bze.cpp: In function \u2018int main()\u2019:\n/tmp/tmpsq2r8bze.cpp:26:203: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   26 |     assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n      |                                                                                                                                                                                                           ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpsq2r8bze.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpsq2r8bze.cpp:2:\n/tmp/tmpsq2r8bze.cpp:26:203: note:  ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to flatten a given nested list structure.\nstd::vector<long> flatten_list(std::any list1) {\n    std::vector<long> result;\n    std::queue<std::any> q;\n    q.push(list1);\n    while(!q.empty()) {\n        auto x = q.front();\n        q.pop();\n        if(x.type() == typeid(long)) {\n            result.push_back(std::any_cast<long>(x));\n        } else {\n            auto l = std::any_cast<std::vector<std::any>>(x);\n            for(auto i : l) {\n                q.push(i);\n            }\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = flatten_list;\n    assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)40}), (std::vector<long>)std::vector<long>({(long)30, (long)56, (long)25}), (std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)33}), (std::vector<long>)std::vector<long>({(long)40})}))) == (std::vector<long>({(long)10, (long)20, (long)40, (long)30, (long)56, (long)25, (long)10, (long)20, (long)33, (long)40})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)1, (long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)10, (long)11, (long)12}), (std::vector<long>)std::vector<long>({(long)7, (long)8, (long)9})}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)10, (long)11, (long)12, (long)7, (long)8, (long)9})));\n}\n",
      "timestamp": 1666123890,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpbjrc0jve.cpp:2:\n/tmp/tmpbjrc0jve.cpp: In function \u2018int main()\u2019:\n/tmp/tmpbjrc0jve.cpp:24:203: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   24 |     assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n      |                                                                                                                                                                                                           ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpbjrc0jve.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpbjrc0jve.cpp:2:\n/tmp/tmpbjrc0jve.cpp:24:203: note:  ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to flatten a given nested list structure.\nstd::vector<long> flatten_list(std::any list1) {\n    std::vector<long> result;\n    if (list1.type() == typeid(std::vector<std::any>)) {\n        for (auto &elem : std::any_cast<std::vector<std::any>>(list1)) {\n            auto temp = flatten_list(elem);\n            result.insert(result.end(), temp.begin(), temp.end());\n        }\n    } else {\n        result.push_back(std::any_cast<long>(list1));\n    }\n    return result;\n}\nint main() {\n    auto candidate = flatten_list;\n    assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)40}), (std::vector<long>)std::vector<long>({(long)30, (long)56, (long)25}), (std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)33}), (std::vector<long>)std::vector<long>({(long)40})}))) == (std::vector<long>({(long)10, (long)20, (long)40, (long)30, (long)56, (long)25, (long)10, (long)20, (long)33, (long)40})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)1, (long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)10, (long)11, (long)12}), (std::vector<long>)std::vector<long>({(long)7, (long)8, (long)9})}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)10, (long)11, (long)12, (long)7, (long)8, (long)9})));\n}\n",
      "timestamp": 1666123890,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpevlb9lyz.cpp:2:\n/tmp/tmpevlb9lyz.cpp: In function \u2018int main()\u2019:\n/tmp/tmpevlb9lyz.cpp:18:203: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   18 |     assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n      |                                                                                                                                                                                                           ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpevlb9lyz.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpevlb9lyz.cpp:2:\n/tmp/tmpevlb9lyz.cpp:18:203: note:  ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to flatten a given nested list structure.\nstd::vector<long> flatten_list(std::any list1) {\n    std::vector<long> result;\n    if (list1.type() == typeid(std::vector<std::any>)) {\n        std::vector<std::any> list = std::any_cast<std::vector<std::any>>(list1);\n        for (auto &item : list) {\n            std::vector<long> temp = flatten_list(item);\n            result.insert(result.end(), temp.begin(), temp.end());\n        }\n    } else {\n        result.push_back(std::any_cast<long>(list1));\n    }\n    return result;\n}\nint main() {\n    auto candidate = flatten_list;\n    assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)40}), (std::vector<long>)std::vector<long>({(long)30, (long)56, (long)25}), (std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)33}), (std::vector<long>)std::vector<long>({(long)40})}))) == (std::vector<long>({(long)10, (long)20, (long)40, (long)30, (long)56, (long)25, (long)10, (long)20, (long)33, (long)40})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)1, (long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)10, (long)11, (long)12}), (std::vector<long>)std::vector<long>({(long)7, (long)8, (long)9})}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)10, (long)11, (long)12, (long)7, (long)8, (long)9})));\n}\n",
      "timestamp": 1665517687,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp74dyns7n.cpp:2:\n/tmp/tmp74dyns7n.cpp: In function \u2018int main()\u2019:\n/tmp/tmp74dyns7n.cpp:19:203: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   19 |     assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n      |                                                                                                                                                                                                           ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmp74dyns7n.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp74dyns7n.cpp:2:\n/tmp/tmp74dyns7n.cpp:19:203: note:  ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to flatten a given nested list structure.\nstd::vector<long> flatten_list(std::any list1) {\n    std::vector<long> result;\n    if (list1.type() == typeid(long)) {\n        result.push_back(std::any_cast<long>(list1));\n        return result;\n    }\n    std::vector<std::any> list = std::any_cast<std::vector<std::any>>(list1);\n    for (auto i : list) {\n        std::vector<long> temp = flatten_list(i);\n        result.insert(result.end(), temp.begin(), temp.end());\n    }\n    return result;\n}\nint main() {\n    auto candidate = flatten_list;\n    assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)40}), (std::vector<long>)std::vector<long>({(long)30, (long)56, (long)25}), (std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)33}), (std::vector<long>)std::vector<long>({(long)40})}))) == (std::vector<long>({(long)10, (long)20, (long)40, (long)30, (long)56, (long)25, (long)10, (long)20, (long)33, (long)40})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)1, (long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)10, (long)11, (long)12}), (std::vector<long>)std::vector<long>({(long)7, (long)8, (long)9})}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)10, (long)11, (long)12, (long)7, (long)8, (long)9})));\n}\n",
      "timestamp": 1666123888,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp9g_z7t52.cpp:2:\n/tmp/tmp9g_z7t52.cpp: In function \u2018int main()\u2019:\n/tmp/tmp9g_z7t52.cpp:19:203: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   19 |     assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n      |                                                                                                                                                                                                           ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmp9g_z7t52.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp9g_z7t52.cpp:2:\n/tmp/tmp9g_z7t52.cpp:19:203: note:  ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to flatten a given nested list structure.\nstd::vector<long> flatten_list(std::any list1) {\n    std::vector<long> result;\n    if (list1.type() == typeid(std::vector<std::any>)) {\n        for (auto &item : std::any_cast<std::vector<std::any>>(list1)) {\n            std::vector<long> temp = flatten_list(item);\n            result.insert(result.end(), temp.begin(), temp.end());\n        }\n    } else {\n        result.push_back(std::any_cast<long>(list1));\n    }\n    return result;\n}\nint main() {\n    auto candidate = flatten_list;\n    assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)40}), (std::vector<long>)std::vector<long>({(long)30, (long)56, (long)25}), (std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)33}), (std::vector<long>)std::vector<long>({(long)40})}))) == (std::vector<long>({(long)10, (long)20, (long)40, (long)30, (long)56, (long)25, (long)10, (long)20, (long)33, (long)40})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)1, (long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)10, (long)11, (long)12}), (std::vector<long>)std::vector<long>({(long)7, (long)8, (long)9})}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)10, (long)11, (long)12, (long)7, (long)8, (long)9})));\n}\n",
      "timestamp": 1666123891,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpgb2cnrnd.cpp:2:\n/tmp/tmpgb2cnrnd.cpp: In function \u2018int main()\u2019:\n/tmp/tmpgb2cnrnd.cpp:18:203: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   18 |     assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n      |                                                                                                                                                                                                           ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpgb2cnrnd.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpgb2cnrnd.cpp:2:\n/tmp/tmpgb2cnrnd.cpp:18:203: note:  ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to flatten a given nested list structure.\nstd::vector<long> flatten_list(std::any list1) {\n    std::vector<long> list2;\n    std::vector<std::any> list3;\n    if (list1.type() == typeid(std::vector<std::any>)) {\n        list3 = std::any_cast<std::vector<std::any>>(list1);\n        for (auto i : list3) {\n            if (i.type() == typeid(std::vector<std::any>)) {\n                std::vector<std::any> list4 = std::any_cast<std::vector<std::any>>(i);\n                for (auto j : list4) {\n                    if (j.type() == typeid(long)) {\n                        list2.push_back(std::any_cast<long>(j));\n                    }\n                }\n            }\n            else if (i.type() == typeid(long)) {\n                list2.push_back(std::any_cast<long>(i));\n            }\n        }\n    }\n    else if (list1.type() == typeid(long)) {\n        list2.push_back(std::any_cast<long>(list1));\n    }\n    return list2;\n}\nint main() {\n    auto candidate = flatten_list;\n    assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)40}), (std::vector<long>)std::vector<long>({(long)30, (long)56, (long)25}), (std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)33}), (std::vector<long>)std::vector<long>({(long)40})}))) == (std::vector<long>({(long)10, (long)20, (long)40, (long)30, (long)56, (long)25, (long)10, (long)20, (long)33, (long)40})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)1, (long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)10, (long)11, (long)12}), (std::vector<long>)std::vector<long>({(long)7, (long)8, (long)9})}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)10, (long)11, (long)12, (long)7, (long)8, (long)9})));\n}\n",
      "timestamp": 1666123891,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpyb3diesk.cpp:2:\n/tmp/tmpyb3diesk.cpp: In function \u2018int main()\u2019:\n/tmp/tmpyb3diesk.cpp:30:203: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   30 |     assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n      |                                                                                                                                                                                                           ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpyb3diesk.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpyb3diesk.cpp:2:\n/tmp/tmpyb3diesk.cpp:30:203: note:  ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to flatten a given nested list structure.\nstd::vector<long> flatten_list(std::any list1) {\n    std::vector<long> result;\n    if (list1.type() == typeid(std::vector<std::any>)) {\n        std::vector<std::any> list = std::any_cast<std::vector<std::any>>(list1);\n        for (std::any item : list) {\n            std::vector<long> temp = flatten_list(item);\n            result.insert(result.end(), temp.begin(), temp.end());\n        }\n    } else {\n        result.push_back(std::any_cast<long>(list1));\n    }\n    return result;\n}\nint main() {\n    auto candidate = flatten_list;\n    assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)40}), (std::vector<long>)std::vector<long>({(long)30, (long)56, (long)25}), (std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)33}), (std::vector<long>)std::vector<long>({(long)40})}))) == (std::vector<long>({(long)10, (long)20, (long)40, (long)30, (long)56, (long)25, (long)10, (long)20, (long)33, (long)40})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)1, (long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)10, (long)11, (long)12}), (std::vector<long>)std::vector<long>({(long)7, (long)8, (long)9})}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)10, (long)11, (long)12, (long)7, (long)8, (long)9})));\n}\n",
      "timestamp": 1666123891,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp9rd_y5pc.cpp:2:\n/tmp/tmp9rd_y5pc.cpp: In function \u2018int main()\u2019:\n/tmp/tmp9rd_y5pc.cpp:19:203: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   19 |     assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n      |                                                                                                                                                                                                           ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmp9rd_y5pc.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp9rd_y5pc.cpp:2:\n/tmp/tmp9rd_y5pc.cpp:19:203: note:  ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to flatten a given nested list structure.\nstd::vector<long> flatten_list(std::any list1) {\n    std::vector<long> list_flat;\n    if (list1.type() == typeid(long)) {\n        list_flat.push_back(std::any_cast<long>(list1));\n        return list_flat;\n    }\n    std::vector<std::any> list = std::any_cast<std::vector<std::any>>(list1);\n    for (auto i : list) {\n        std::vector<long> temp = flatten_list(i);\n        list_flat.insert(list_flat.end(), temp.begin(), temp.end());\n    }\n    return list_flat;\n}\nint main() {\n    auto candidate = flatten_list;\n    assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)40}), (std::vector<long>)std::vector<long>({(long)30, (long)56, (long)25}), (std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)33}), (std::vector<long>)std::vector<long>({(long)40})}))) == (std::vector<long>({(long)10, (long)20, (long)40, (long)30, (long)56, (long)25, (long)10, (long)20, (long)33, (long)40})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)1, (long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)10, (long)11, (long)12}), (std::vector<long>)std::vector<long>({(long)7, (long)8, (long)9})}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)10, (long)11, (long)12, (long)7, (long)8, (long)9})));\n}\n",
      "timestamp": 1666123891,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp9mpy2rj4.cpp:2:\n/tmp/tmp9mpy2rj4.cpp: In function \u2018int main()\u2019:\n/tmp/tmp9mpy2rj4.cpp:19:203: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   19 |     assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n      |                                                                                                                                                                                                           ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmp9mpy2rj4.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp9mpy2rj4.cpp:2:\n/tmp/tmp9mpy2rj4.cpp:19:203: note:  ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to flatten a given nested list structure.\nstd::vector<long> flatten_list(std::any list1) {\n    std::vector<long> result;\n    if (list1.type() == typeid(long)) {\n        result.push_back(std::any_cast<long>(list1));\n    } else {\n        std::vector<std::any> list = std::any_cast<std::vector<std::any>>(list1);\n        for (auto it = list.begin(); it != list.end(); it++) {\n            std::vector<long> temp = flatten_list(*it);\n            result.insert(result.end(), temp.begin(), temp.end());\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = flatten_list;\n    assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)40}), (std::vector<long>)std::vector<long>({(long)30, (long)56, (long)25}), (std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)33}), (std::vector<long>)std::vector<long>({(long)40})}))) == (std::vector<long>({(long)10, (long)20, (long)40, (long)30, (long)56, (long)25, (long)10, (long)20, (long)33, (long)40})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)1, (long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)10, (long)11, (long)12}), (std::vector<long>)std::vector<long>({(long)7, (long)8, (long)9})}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)10, (long)11, (long)12, (long)7, (long)8, (long)9})));\n}\n",
      "timestamp": 1666123891,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpa2f2k_fu.cpp:2:\n/tmp/tmpa2f2k_fu.cpp: In function \u2018int main()\u2019:\n/tmp/tmpa2f2k_fu.cpp:19:203: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   19 |     assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n      |                                                                                                                                                                                                           ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpa2f2k_fu.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpa2f2k_fu.cpp:2:\n/tmp/tmpa2f2k_fu.cpp:19:203: note:  ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to flatten a given nested list structure.\nstd::vector<long> flatten_list(std::any list1) {\n    std::vector<long> result;\n    if (list1.type() == typeid(std::vector<std::any>)) {\n        std::vector<std::any> list = std::any_cast<std::vector<std::any>>(list1);\n        for (auto &item : list) {\n            std::vector<long> temp = flatten_list(item);\n            result.insert(result.end(), temp.begin(), temp.end());\n        }\n    } else {\n        result.push_back(std::any_cast<long>(list1));\n    }\n    return result;\n}\nint main() {\n    auto candidate = flatten_list;\n    assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)40}), (std::vector<long>)std::vector<long>({(long)30, (long)56, (long)25}), (std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)33}), (std::vector<long>)std::vector<long>({(long)40})}))) == (std::vector<long>({(long)10, (long)20, (long)40, (long)30, (long)56, (long)25, (long)10, (long)20, (long)33, (long)40})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)1, (long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)10, (long)11, (long)12}), (std::vector<long>)std::vector<long>({(long)7, (long)8, (long)9})}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)10, (long)11, (long)12, (long)7, (long)8, (long)9})));\n}\n",
      "timestamp": 1665517687,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp74dyns7n.cpp:2:\n/tmp/tmp74dyns7n.cpp: In function \u2018int main()\u2019:\n/tmp/tmp74dyns7n.cpp:19:203: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   19 |     assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n      |                                                                                                                                                                                                           ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmp74dyns7n.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp74dyns7n.cpp:2:\n/tmp/tmp74dyns7n.cpp:19:203: note:  ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to flatten a given nested list structure.\nstd::vector<long> flatten_list(std::any list1) {\n    std::vector<long> result;\n    if (list1.type() == typeid(std::vector<std::any>)) {\n        for (auto &x : std::any_cast<std::vector<std::any>>(list1)) {\n            auto temp = flatten_list(x);\n            result.insert(result.end(), temp.begin(), temp.end());\n        }\n    } else {\n        result.push_back(std::any_cast<long>(list1));\n    }\n    return result;\n}\nint main() {\n    auto candidate = flatten_list;\n    assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)40}), (std::vector<long>)std::vector<long>({(long)30, (long)56, (long)25}), (std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)33}), (std::vector<long>)std::vector<long>({(long)40})}))) == (std::vector<long>({(long)10, (long)20, (long)40, (long)30, (long)56, (long)25, (long)10, (long)20, (long)33, (long)40})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)1, (long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)10, (long)11, (long)12}), (std::vector<long>)std::vector<long>({(long)7, (long)8, (long)9})}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)10, (long)11, (long)12, (long)7, (long)8, (long)9})));\n}\n",
      "timestamp": 1666123891,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpu20ux7z_.cpp:2:\n/tmp/tmpu20ux7z_.cpp: In function \u2018int main()\u2019:\n/tmp/tmpu20ux7z_.cpp:18:203: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   18 |     assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n      |                                                                                                                                                                                                           ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpu20ux7z_.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpu20ux7z_.cpp:2:\n/tmp/tmpu20ux7z_.cpp:18:203: note:  ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to flatten a given nested list structure.\nstd::vector<long> flatten_list(std::any list1) {\n    std::vector<long> result;\n    if (list1.type() == typeid(std::vector<std::any>)) {\n        std::vector<std::any> list = std::any_cast<std::vector<std::any>>(list1);\n        for (auto i : list) {\n            std::vector<long> temp = flatten_list(i);\n            result.insert(result.end(), temp.begin(), temp.end());\n        }\n    } else {\n        result.push_back(std::any_cast<long>(list1));\n    }\n    return result;\n}\nint main() {\n    auto candidate = flatten_list;\n    assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)40}), (std::vector<long>)std::vector<long>({(long)30, (long)56, (long)25}), (std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)33}), (std::vector<long>)std::vector<long>({(long)40})}))) == (std::vector<long>({(long)10, (long)20, (long)40, (long)30, (long)56, (long)25, (long)10, (long)20, (long)33, (long)40})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)1, (long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)10, (long)11, (long)12}), (std::vector<long>)std::vector<long>({(long)7, (long)8, (long)9})}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)10, (long)11, (long)12, (long)7, (long)8, (long)9})));\n}\n",
      "timestamp": 1665517687,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpdjkb_dx9.cpp:2:\n/tmp/tmpdjkb_dx9.cpp: In function \u2018int main()\u2019:\n/tmp/tmpdjkb_dx9.cpp:19:203: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   19 |     assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n      |                                                                                                                                                                                                           ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpdjkb_dx9.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpdjkb_dx9.cpp:2:\n/tmp/tmpdjkb_dx9.cpp:19:203: note:  ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to flatten a given nested list structure.\nstd::vector<long> flatten_list(std::any list1) {\n    std::vector<long> result;\n    if (list1.type() == typeid(std::vector<std::any>)) {\n        for (auto &i : std::any_cast<std::vector<std::any>>(list1)) {\n            auto temp = flatten_list(i);\n            result.insert(result.end(), temp.begin(), temp.end());\n        }\n    } else {\n        result.push_back(std::any_cast<long>(list1));\n    }\n    return result;\n}\nint main() {\n    auto candidate = flatten_list;\n    assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)40}), (std::vector<long>)std::vector<long>({(long)30, (long)56, (long)25}), (std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)33}), (std::vector<long>)std::vector<long>({(long)40})}))) == (std::vector<long>({(long)10, (long)20, (long)40, (long)30, (long)56, (long)25, (long)10, (long)20, (long)33, (long)40})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)1, (long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)10, (long)11, (long)12}), (std::vector<long>)std::vector<long>({(long)7, (long)8, (long)9})}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)10, (long)11, (long)12, (long)7, (long)8, (long)9})));\n}\n",
      "timestamp": 1666123885,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpiz0o3r3j.cpp:2:\n/tmp/tmpiz0o3r3j.cpp: In function \u2018int main()\u2019:\n/tmp/tmpiz0o3r3j.cpp:18:203: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   18 |     assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n      |                                                                                                                                                                                                           ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpiz0o3r3j.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpiz0o3r3j.cpp:2:\n/tmp/tmpiz0o3r3j.cpp:18:203: note:  ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to flatten a given nested list structure.\nstd::vector<long> flatten_list(std::any list1) {\n    std::vector<long> list;\n    if(list1.type() == typeid(long)) {\n        list.push_back(std::any_cast<long>(list1));\n        return list;\n    }\n    else {\n        std::vector<std::any> list2 = std::any_cast<std::vector<std::any>>(list1);\n        for(auto i : list2) {\n            std::vector<long> temp = flatten_list(i);\n            list.insert(list.end(), temp.begin(), temp.end());\n        }\n        return list;\n    }\n}\nint main() {\n    auto candidate = flatten_list;\n    assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)40}), (std::vector<long>)std::vector<long>({(long)30, (long)56, (long)25}), (std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)33}), (std::vector<long>)std::vector<long>({(long)40})}))) == (std::vector<long>({(long)10, (long)20, (long)40, (long)30, (long)56, (long)25, (long)10, (long)20, (long)33, (long)40})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)1, (long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)10, (long)11, (long)12}), (std::vector<long>)std::vector<long>({(long)7, (long)8, (long)9})}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)10, (long)11, (long)12, (long)7, (long)8, (long)9})));\n}\n",
      "timestamp": 1666123892,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpxyga50xc.cpp:2:\n/tmp/tmpxyga50xc.cpp: In function \u2018int main()\u2019:\n/tmp/tmpxyga50xc.cpp:21:203: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   21 |     assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n      |                                                                                                                                                                                                           ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpxyga50xc.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpxyga50xc.cpp:2:\n/tmp/tmpxyga50xc.cpp:21:203: note:  ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to flatten a given nested list structure.\nstd::vector<long> flatten_list(std::any list1) {\n    std::vector<long> result;\n    std::vector<std::any> list = std::any_cast<std::vector<std::any>>(list1);\n    for (auto i : list) {\n        if (i.type() == typeid(std::vector<std::any>)) {\n            std::vector<long> temp = flatten_list(i);\n            result.insert(result.end(), temp.begin(), temp.end());\n        } else {\n            result.push_back(std::any_cast<long>(i));\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = flatten_list;\n    assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)40}), (std::vector<long>)std::vector<long>({(long)30, (long)56, (long)25}), (std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)33}), (std::vector<long>)std::vector<long>({(long)40})}))) == (std::vector<long>({(long)10, (long)20, (long)40, (long)30, (long)56, (long)25, (long)10, (long)20, (long)33, (long)40})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)1, (long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)10, (long)11, (long)12}), (std::vector<long>)std::vector<long>({(long)7, (long)8, (long)9})}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)10, (long)11, (long)12, (long)7, (long)8, (long)9})));\n}\n",
      "timestamp": 1666123892,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp2fyps07i.cpp:2:\n/tmp/tmp2fyps07i.cpp: In function \u2018int main()\u2019:\n/tmp/tmp2fyps07i.cpp:19:203: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   19 |     assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n      |                                                                                                                                                                                                           ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmp2fyps07i.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp2fyps07i.cpp:2:\n/tmp/tmp2fyps07i.cpp:19:203: note:  ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to flatten a given nested list structure.\nstd::vector<long> flatten_list(std::any list1) {\n    std::vector<long> list2;\n    if (list1.type() == typeid(std::vector<std::any>)) {\n        std::vector<std::any> list = std::any_cast<std::vector<std::any>>(list1);\n        for (auto i : list) {\n            std::vector<long> list3 = flatten_list(i);\n            list2.insert(list2.end(), list3.begin(), list3.end());\n        }\n    } else {\n        list2.push_back(std::any_cast<long>(list1));\n    }\n    return list2;\n}\nint main() {\n    auto candidate = flatten_list;\n    assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)40}), (std::vector<long>)std::vector<long>({(long)30, (long)56, (long)25}), (std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)33}), (std::vector<long>)std::vector<long>({(long)40})}))) == (std::vector<long>({(long)10, (long)20, (long)40, (long)30, (long)56, (long)25, (long)10, (long)20, (long)33, (long)40})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)1, (long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)10, (long)11, (long)12}), (std::vector<long>)std::vector<long>({(long)7, (long)8, (long)9})}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)10, (long)11, (long)12, (long)7, (long)8, (long)9})));\n}\n",
      "timestamp": 1666123892,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpo7cl50v8.cpp:2:\n/tmp/tmpo7cl50v8.cpp: In function \u2018int main()\u2019:\n/tmp/tmpo7cl50v8.cpp:19:203: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   19 |     assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n      |                                                                                                                                                                                                           ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpo7cl50v8.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpo7cl50v8.cpp:2:\n/tmp/tmpo7cl50v8.cpp:19:203: note:  ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to flatten a given nested list structure.\nstd::vector<long> flatten_list(std::any list1) {\n    std::vector<long> result;\n    if(list1.type() == typeid(std::vector<std::any>)) {\n        std::vector<std::any> list = std::any_cast<std::vector<std::any>>(list1);\n        for(auto i: list) {\n            std::vector<long> temp = flatten_list(i);\n            result.insert(result.end(), temp.begin(), temp.end());\n        }\n    } else {\n        result.push_back(std::any_cast<long>(list1));\n    }\n    return result;\n}\nint main() {\n    auto candidate = flatten_list;\n    assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)40}), (std::vector<long>)std::vector<long>({(long)30, (long)56, (long)25}), (std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)33}), (std::vector<long>)std::vector<long>({(long)40})}))) == (std::vector<long>({(long)10, (long)20, (long)40, (long)30, (long)56, (long)25, (long)10, (long)20, (long)33, (long)40})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)1, (long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)10, (long)11, (long)12}), (std::vector<long>)std::vector<long>({(long)7, (long)8, (long)9})}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)10, (long)11, (long)12, (long)7, (long)8, (long)9})));\n}\n",
      "timestamp": 1666123890,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpaxx0wniq.cpp:2:\n/tmp/tmpaxx0wniq.cpp: In function \u2018int main()\u2019:\n/tmp/tmpaxx0wniq.cpp:19:203: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   19 |     assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n      |                                                                                                                                                                                                           ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpaxx0wniq.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpaxx0wniq.cpp:2:\n/tmp/tmpaxx0wniq.cpp:19:203: note:  ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to flatten a given nested list structure.\nstd::vector<long> flatten_list(std::any list1) {\n    std::vector<long> result;\n    if(list1.type() == typeid(long)) {\n        result.push_back(std::any_cast<long>(list1));\n        return result;\n    }\n    std::vector<std::any> list = std::any_cast<std::vector<std::any>>(list1);\n    for(auto &i : list) {\n        std::vector<long> temp = flatten_list(i);\n        result.insert(result.end(), temp.begin(), temp.end());\n    }\n    return result;\n}\nint main() {\n    auto candidate = flatten_list;\n    assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)40}), (std::vector<long>)std::vector<long>({(long)30, (long)56, (long)25}), (std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)33}), (std::vector<long>)std::vector<long>({(long)40})}))) == (std::vector<long>({(long)10, (long)20, (long)40, (long)30, (long)56, (long)25, (long)10, (long)20, (long)33, (long)40})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)1, (long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)10, (long)11, (long)12}), (std::vector<long>)std::vector<long>({(long)7, (long)8, (long)9})}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)10, (long)11, (long)12, (long)7, (long)8, (long)9})));\n}\n",
      "timestamp": 1666123892,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpx3mxexi8.cpp:2:\n/tmp/tmpx3mxexi8.cpp: In function \u2018int main()\u2019:\n/tmp/tmpx3mxexi8.cpp:19:203: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   19 |     assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n      |                                                                                                                                                                                                           ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpx3mxexi8.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpx3mxexi8.cpp:2:\n/tmp/tmpx3mxexi8.cpp:19:203: note:  ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to flatten a given nested list structure.\nstd::vector<long> flatten_list(std::any list1) {\n    std::vector<long> result;\n    if (list1.type() == typeid(std::vector<std::any>)) {\n        auto list = std::any_cast<std::vector<std::any>>(list1);\n        for (auto i : list) {\n            auto temp = flatten_list(i);\n            result.insert(result.end(), temp.begin(), temp.end());\n        }\n    } else {\n        result.push_back(std::any_cast<long>(list1));\n    }\n    return result;\n}\nint main() {\n    auto candidate = flatten_list;\n    assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)40}), (std::vector<long>)std::vector<long>({(long)30, (long)56, (long)25}), (std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)33}), (std::vector<long>)std::vector<long>({(long)40})}))) == (std::vector<long>({(long)10, (long)20, (long)40, (long)30, (long)56, (long)25, (long)10, (long)20, (long)33, (long)40})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)1, (long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)10, (long)11, (long)12}), (std::vector<long>)std::vector<long>({(long)7, (long)8, (long)9})}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)10, (long)11, (long)12, (long)7, (long)8, (long)9})));\n}\n",
      "timestamp": 1666123892,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpw1w7w4ha.cpp:2:\n/tmp/tmpw1w7w4ha.cpp: In function \u2018int main()\u2019:\n/tmp/tmpw1w7w4ha.cpp:19:203: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   19 |     assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n      |                                                                                                                                                                                                           ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpw1w7w4ha.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpw1w7w4ha.cpp:2:\n/tmp/tmpw1w7w4ha.cpp:19:203: note:  ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to flatten a given nested list structure.\nstd::vector<long> flatten_list(std::any list1) {\n    std::vector<long> result;\n    for (auto &i : list1) {\n        if (i.type() == typeid(std::any)) {\n            std::vector<long> temp = flatten_list(i);\n            result.insert(result.end(), temp.begin(), temp.end());\n        } else {\n            result.push_back(std::any_cast<long>(i));\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = flatten_list;\n    assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)40}), (std::vector<long>)std::vector<long>({(long)30, (long)56, (long)25}), (std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)33}), (std::vector<long>)std::vector<long>({(long)40})}))) == (std::vector<long>({(long)10, (long)20, (long)40, (long)30, (long)56, (long)25, (long)10, (long)20, (long)33, (long)40})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)1, (long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)10, (long)11, (long)12}), (std::vector<long>)std::vector<long>({(long)7, (long)8, (long)9})}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)10, (long)11, (long)12, (long)7, (long)8, (long)9})));\n}\n",
      "timestamp": 1666123892,
      "stdout": "",
      "stderr": "/tmp/tmps7l3ouj8.cpp: In function \u2018std::vector<long int> flatten_list(std::any)\u2019:\n/tmp/tmps7l3ouj8.cpp:6:20: error: no matching function for call to \u2018begin(std::any&)\u2019\n    6 |     for (auto &i : list1) {\n      |                    ^~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/range_access.h:36,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/string:54,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/locale_classes.h:40,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/ios_base.h:41,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ios:42,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/istream:38,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/sstream:38,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/complex:45,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ccomplex:39,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:54,\n                 from /tmp/tmps7l3ouj8.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/initializer_list:89:5: note: candidate: \u2018template<class _Tp> constexpr const _Tp* std::begin(std::initializer_list<_Tp>)\u2019\n   89 |     begin(initializer_list<_Tp> __ils) noexcept\n      |     ^~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/initializer_list:89:5: note:   template argument deduction/substitution failed:\n/tmp/tmps7l3ouj8.cpp:6:20: note:   \u2018std::any\u2019 is not derived from \u2018std::initializer_list<_Tp>\u2019\n    6 |     for (auto &i : list1) {\n      |                    ^~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/string:54,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/locale_classes.h:40,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/ios_base.h:41,\n      ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to flatten a given nested list structure.\nstd::vector<long> flatten_list(std::any list1) {\n    std::vector<long> list;\n    if (list1.type() == typeid(std::vector<std::any>)) {\n        for (auto &i : std::any_cast<std::vector<std::any>>(list1)) {\n            std::vector<long> temp = flatten_list(i);\n            list.insert(list.end(), temp.begin(), temp.end());\n        }\n    } else {\n        list.push_back(std::any_cast<long>(list1));\n    }\n    return list;\n}\nint main() {\n    auto candidate = flatten_list;\n    assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)40}), (std::vector<long>)std::vector<long>({(long)30, (long)56, (long)25}), (std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)33}), (std::vector<long>)std::vector<long>({(long)40})}))) == (std::vector<long>({(long)10, (long)20, (long)40, (long)30, (long)56, (long)25, (long)10, (long)20, (long)33, (long)40})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)1, (long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)10, (long)11, (long)12}), (std::vector<long>)std::vector<long>({(long)7, (long)8, (long)9})}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)10, (long)11, (long)12, (long)7, (long)8, (long)9})));\n}\n",
      "timestamp": 1666123892,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp_d85zo2i.cpp:2:\n/tmp/tmp_d85zo2i.cpp: In function \u2018int main()\u2019:\n/tmp/tmp_d85zo2i.cpp:18:203: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   18 |     assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n      |                                                                                                                                                                                                           ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmp_d85zo2i.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp_d85zo2i.cpp:2:\n/tmp/tmp_d85zo2i.cpp:18:203: note:  ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to flatten a given nested list structure.\nstd::vector<long> flatten_list(std::any list1) {\n    std::vector<long> result;\n    std::vector<std::any> list;\n    list.push_back(list1);\n    while (!list.empty()) {\n        std::any temp = list.back();\n        list.pop_back();\n        if (temp.type() == typeid(std::vector<std::any>)) {\n            std::vector<std::any> temp_list = std::any_cast<std::vector<std::any>>(temp);\n            for (auto i = temp_list.rbegin(); i != temp_list.rend(); i++) {\n                list.push_back(*i);\n            }\n        } else {\n            result.push_back(std::any_cast<long>(temp));\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = flatten_list;\n    assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)40}), (std::vector<long>)std::vector<long>({(long)30, (long)56, (long)25}), (std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)33}), (std::vector<long>)std::vector<long>({(long)40})}))) == (std::vector<long>({(long)10, (long)20, (long)40, (long)30, (long)56, (long)25, (long)10, (long)20, (long)33, (long)40})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)1, (long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)10, (long)11, (long)12}), (std::vector<long>)std::vector<long>({(long)7, (long)8, (long)9})}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)10, (long)11, (long)12, (long)7, (long)8, (long)9})));\n}\n",
      "timestamp": 1666123892,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpkj3gtluo.cpp:2:\n/tmp/tmpkj3gtluo.cpp: In function \u2018int main()\u2019:\n/tmp/tmpkj3gtluo.cpp:24:203: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   24 |     assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n      |                                                                                                                                                                                                           ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpkj3gtluo.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpkj3gtluo.cpp:2:\n/tmp/tmpkj3gtluo.cpp:24:203: note:  ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to flatten a given nested list structure.\nstd::vector<long> flatten_list(std::any list1) {\n    std::vector<long> result;\n    if (list1.type() == typeid(std::vector<std::any>)) {\n        std::vector<std::any> list = std::any_cast<std::vector<std::any>>(list1);\n        for (auto item : list) {\n            std::vector<long> temp = flatten_list(item);\n            result.insert(result.end(), temp.begin(), temp.end());\n        }\n    } else {\n        result.push_back(std::any_cast<long>(list1));\n    }\n    return result;\n}\nint main() {\n    auto candidate = flatten_list;\n    assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)40}), (std::vector<long>)std::vector<long>({(long)30, (long)56, (long)25}), (std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)33}), (std::vector<long>)std::vector<long>({(long)40})}))) == (std::vector<long>({(long)10, (long)20, (long)40, (long)30, (long)56, (long)25, (long)10, (long)20, (long)33, (long)40})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)1, (long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)10, (long)11, (long)12}), (std::vector<long>)std::vector<long>({(long)7, (long)8, (long)9})}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)10, (long)11, (long)12, (long)7, (long)8, (long)9})));\n}\n",
      "timestamp": 1665517687,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpp5vv1fv9.cpp:2:\n/tmp/tmpp5vv1fv9.cpp: In function \u2018int main()\u2019:\n/tmp/tmpp5vv1fv9.cpp:19:203: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   19 |     assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n      |                                                                                                                                                                                                           ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpp5vv1fv9.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpp5vv1fv9.cpp:2:\n/tmp/tmpp5vv1fv9.cpp:19:203: note:  ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to flatten a given nested list structure.\nstd::vector<long> flatten_list(std::any list1) {\n    std::vector<long> list2;\n    if(list1.type() == typeid(std::vector<std::any>)) {\n        std::vector<std::any> list3 = std::any_cast<std::vector<std::any>>(list1);\n        for(auto i : list3) {\n            std::vector<long> list4 = flatten_list(i);\n            list2.insert(list2.end(), list4.begin(), list4.end());\n        }\n    }\n    else {\n        list2.push_back(std::any_cast<long>(list1));\n    }\n    return list2;\n}\nint main() {\n    auto candidate = flatten_list;\n    assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)40}), (std::vector<long>)std::vector<long>({(long)30, (long)56, (long)25}), (std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)33}), (std::vector<long>)std::vector<long>({(long)40})}))) == (std::vector<long>({(long)10, (long)20, (long)40, (long)30, (long)56, (long)25, (long)10, (long)20, (long)33, (long)40})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)1, (long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)10, (long)11, (long)12}), (std::vector<long>)std::vector<long>({(long)7, (long)8, (long)9})}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)10, (long)11, (long)12, (long)7, (long)8, (long)9})));\n}\n",
      "timestamp": 1666123892,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpcfot_76_.cpp:2:\n/tmp/tmpcfot_76_.cpp: In function \u2018int main()\u2019:\n/tmp/tmpcfot_76_.cpp:20:203: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   20 |     assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n      |                                                                                                                                                                                                           ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpcfot_76_.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpcfot_76_.cpp:2:\n/tmp/tmpcfot_76_.cpp:20:203: note:  ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to flatten a given nested list structure.\nstd::vector<long> flatten_list(std::any list1) {\n  std::vector<long> result;\n  if (list1.type() == typeid(long)) {\n    result.push_back(std::any_cast<long>(list1));\n    return result;\n  }\n  std::vector<std::any> list = std::any_cast<std::vector<std::any>>(list1);\n  for (auto &i : list) {\n    std::vector<long> temp = flatten_list(i);\n    result.insert(result.end(), temp.begin(), temp.end());\n  }\n  return result;\n}\nint main() {\n    auto candidate = flatten_list;\n    assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)40}), (std::vector<long>)std::vector<long>({(long)30, (long)56, (long)25}), (std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)33}), (std::vector<long>)std::vector<long>({(long)40})}))) == (std::vector<long>({(long)10, (long)20, (long)40, (long)30, (long)56, (long)25, (long)10, (long)20, (long)33, (long)40})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)1, (long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)10, (long)11, (long)12}), (std::vector<long>)std::vector<long>({(long)7, (long)8, (long)9})}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)10, (long)11, (long)12, (long)7, (long)8, (long)9})));\n}\n",
      "timestamp": 1666123892,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpocs_v80r.cpp:2:\n/tmp/tmpocs_v80r.cpp: In function \u2018int main()\u2019:\n/tmp/tmpocs_v80r.cpp:19:203: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   19 |     assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n      |                                                                                                                                                                                                           ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpocs_v80r.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpocs_v80r.cpp:2:\n/tmp/tmpocs_v80r.cpp:19:203: note:  ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to flatten a given nested list structure.\nstd::vector<long> flatten_list(std::any list1) {\n    std::vector<long> result;\n    std::vector<std::any> list;\n    if (list1.type() == typeid(std::vector<std::any>)) {\n        list = std::any_cast<std::vector<std::any>>(list1);\n    } else {\n        list.push_back(list1);\n    }\n    for (auto i : list) {\n        if (i.type() == typeid(std::vector<std::any>)) {\n            std::vector<std::any> temp = std::any_cast<std::vector<std::any>>(i);\n            std::vector<long> temp_result = flatten_list(temp);\n            result.insert(result.end(), temp_result.begin(), temp_result.end());\n        } else {\n            result.push_back(std::any_cast<long>(i));\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = flatten_list;\n    assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)40}), (std::vector<long>)std::vector<long>({(long)30, (long)56, (long)25}), (std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)33}), (std::vector<long>)std::vector<long>({(long)40})}))) == (std::vector<long>({(long)10, (long)20, (long)40, (long)30, (long)56, (long)25, (long)10, (long)20, (long)33, (long)40})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)1, (long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)10, (long)11, (long)12}), (std::vector<long>)std::vector<long>({(long)7, (long)8, (long)9})}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)10, (long)11, (long)12, (long)7, (long)8, (long)9})));\n}\n",
      "timestamp": 1666123888,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp16shthh6.cpp:2:\n/tmp/tmp16shthh6.cpp: In function \u2018int main()\u2019:\n/tmp/tmp16shthh6.cpp:25:203: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   25 |     assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n      |                                                                                                                                                                                                           ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmp16shthh6.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp16shthh6.cpp:2:\n/tmp/tmp16shthh6.cpp:25:203: note:  ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to flatten a given nested list structure.\nstd::vector<long> flatten_list(std::any list1) {\n    std::vector<long> result;\n    if(list1.type() == typeid(long)) {\n        result.push_back(std::any_cast<long>(list1));\n    } else {\n        std::vector<std::any> list = std::any_cast<std::vector<std::any>>(list1);\n        for(auto i : list) {\n            std::vector<long> temp = flatten_list(i);\n            result.insert(result.end(), temp.begin(), temp.end());\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = flatten_list;\n    assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)40}), (std::vector<long>)std::vector<long>({(long)30, (long)56, (long)25}), (std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)33}), (std::vector<long>)std::vector<long>({(long)40})}))) == (std::vector<long>({(long)10, (long)20, (long)40, (long)30, (long)56, (long)25, (long)10, (long)20, (long)33, (long)40})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)1, (long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)10, (long)11, (long)12}), (std::vector<long>)std::vector<long>({(long)7, (long)8, (long)9})}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)10, (long)11, (long)12, (long)7, (long)8, (long)9})));\n}\n",
      "timestamp": 1666123890,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpq8d8fiyc.cpp:2:\n/tmp/tmpq8d8fiyc.cpp: In function \u2018int main()\u2019:\n/tmp/tmpq8d8fiyc.cpp:19:203: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   19 |     assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n      |                                                                                                                                                                                                           ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpq8d8fiyc.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpq8d8fiyc.cpp:2:\n/tmp/tmpq8d8fiyc.cpp:19:203: note:  ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to flatten a given nested list structure.\nstd::vector<long> flatten_list(std::any list1) {\n    std::vector<long> result;\n    if (list1.type() == typeid(std::vector<std::any>)) {\n        for (auto& i : std::any_cast<std::vector<std::any>>(list1)) {\n            auto temp = flatten_list(i);\n            result.insert(result.end(), temp.begin(), temp.end());\n        }\n    } else {\n        result.push_back(std::any_cast<long>(list1));\n    }\n    return result;\n}\nint main() {\n    auto candidate = flatten_list;\n    assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)40}), (std::vector<long>)std::vector<long>({(long)30, (long)56, (long)25}), (std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)33}), (std::vector<long>)std::vector<long>({(long)40})}))) == (std::vector<long>({(long)10, (long)20, (long)40, (long)30, (long)56, (long)25, (long)10, (long)20, (long)33, (long)40})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)1, (long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)10, (long)11, (long)12}), (std::vector<long>)std::vector<long>({(long)7, (long)8, (long)9})}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)10, (long)11, (long)12, (long)7, (long)8, (long)9})));\n}\n",
      "timestamp": 1666123892,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpjvuuup8x.cpp:2:\n/tmp/tmpjvuuup8x.cpp: In function \u2018int main()\u2019:\n/tmp/tmpjvuuup8x.cpp:18:203: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   18 |     assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n      |                                                                                                                                                                                                           ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpjvuuup8x.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpjvuuup8x.cpp:2:\n/tmp/tmpjvuuup8x.cpp:18:203: note:  ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to flatten a given nested list structure.\nstd::vector<long> flatten_list(std::any list1) {\n    std::vector<long> result;\n    if (list1.type() == typeid(std::vector<std::any>)) {\n        std::vector<std::any> list = std::any_cast<std::vector<std::any>>(list1);\n        for (auto i : list) {\n            std::vector<long> temp = flatten_list(i);\n            result.insert(result.end(), temp.begin(), temp.end());\n        }\n    } else {\n        result.push_back(std::any_cast<long>(list1));\n    }\n    return result;\n}\nint main() {\n    auto candidate = flatten_list;\n    assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)40}), (std::vector<long>)std::vector<long>({(long)30, (long)56, (long)25}), (std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)33}), (std::vector<long>)std::vector<long>({(long)40})}))) == (std::vector<long>({(long)10, (long)20, (long)40, (long)30, (long)56, (long)25, (long)10, (long)20, (long)33, (long)40})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)1, (long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)10, (long)11, (long)12}), (std::vector<long>)std::vector<long>({(long)7, (long)8, (long)9})}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)10, (long)11, (long)12, (long)7, (long)8, (long)9})));\n}\n",
      "timestamp": 1665517687,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpdjkb_dx9.cpp:2:\n/tmp/tmpdjkb_dx9.cpp: In function \u2018int main()\u2019:\n/tmp/tmpdjkb_dx9.cpp:19:203: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   19 |     assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n      |                                                                                                                                                                                                           ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpdjkb_dx9.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpdjkb_dx9.cpp:2:\n/tmp/tmpdjkb_dx9.cpp:19:203: note:  ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to flatten a given nested list structure.\nstd::vector<long> flatten_list(std::any list1) {\n    std::vector<long> result;\n    if (list1.type() == typeid(std::vector<long>)) {\n        std::vector<long> list = std::any_cast<std::vector<long>>(list1);\n        for (auto i : list) {\n            if (i.type() == typeid(std::vector<long>)) {\n                std::vector<long> temp = flatten_list(i);\n                result.insert(result.end(), temp.begin(), temp.end());\n            } else {\n                result.push_back(std::any_cast<long>(i));\n            }\n        }\n    } else {\n        result.push_back(std::any_cast<long>(list1));\n    }\n    return result;\n}\nint main() {\n    auto candidate = flatten_list;\n    assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)40}), (std::vector<long>)std::vector<long>({(long)30, (long)56, (long)25}), (std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)33}), (std::vector<long>)std::vector<long>({(long)40})}))) == (std::vector<long>({(long)10, (long)20, (long)40, (long)30, (long)56, (long)25, (long)10, (long)20, (long)33, (long)40})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)1, (long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)10, (long)11, (long)12}), (std::vector<long>)std::vector<long>({(long)7, (long)8, (long)9})}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)10, (long)11, (long)12, (long)7, (long)8, (long)9})));\n}\n",
      "timestamp": 1666123885,
      "stdout": "",
      "stderr": "/tmp/tmpzarvl_wt.cpp: In function \u2018std::vector<long int> flatten_list(std::any)\u2019:\n/tmp/tmpzarvl_wt.cpp:9:19: error: request for member \u2018type\u2019 in \u2018i\u2019, which is of non-class type \u2018long int\u2019\n    9 |             if (i.type() == typeid(std::vector<long>)) {\n      |                   ^~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpzarvl_wt.cpp:2:\n/tmp/tmpzarvl_wt.cpp: In function \u2018int main()\u2019:\n/tmp/tmpzarvl_wt.cpp:23:203: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   23 |     assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n      |                                                                                                                                                                                                           ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpzarvl_wt.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/s",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to flatten a given nested list structure.\nstd::vector<long> flatten_list(std::any list1) {\n    std::vector<long> list;\n    if (list1.type() == typeid(long)) {\n        list.push_back(std::any_cast<long>(list1));\n        return list;\n    }\n    std::vector<std::any> list2 = std::any_cast<std::vector<std::any>>(list1);\n    for (auto i : list2) {\n        std::vector<long> list3 = flatten_list(i);\n        list.insert(list.end(), list3.begin(), list3.end());\n    }\n    return list;\n}\nint main() {\n    auto candidate = flatten_list;\n    assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)40}), (std::vector<long>)std::vector<long>({(long)30, (long)56, (long)25}), (std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)33}), (std::vector<long>)std::vector<long>({(long)40})}))) == (std::vector<long>({(long)10, (long)20, (long)40, (long)30, (long)56, (long)25, (long)10, (long)20, (long)33, (long)40})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)1, (long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)10, (long)11, (long)12}), (std::vector<long>)std::vector<long>({(long)7, (long)8, (long)9})}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)10, (long)11, (long)12, (long)7, (long)8, (long)9})));\n}\n",
      "timestamp": 1666123892,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpe9w5syve.cpp:2:\n/tmp/tmpe9w5syve.cpp: In function \u2018int main()\u2019:\n/tmp/tmpe9w5syve.cpp:19:203: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   19 |     assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n      |                                                                                                                                                                                                           ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpe9w5syve.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpe9w5syve.cpp:2:\n/tmp/tmpe9w5syve.cpp:19:203: note:  ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to flatten a given nested list structure.\nstd::vector<long> flatten_list(std::any list1) {\n    std::vector<long> result;\n    if (list1.type() == typeid(std::vector<std::any>)) {\n        for (auto i : std::any_cast<std::vector<std::any>>(list1)) {\n            auto temp = flatten_list(i);\n            result.insert(result.end(), temp.begin(), temp.end());\n        }\n    }\n    else {\n        result.push_back(std::any_cast<long>(list1));\n    }\n    return result;\n}\nint main() {\n    auto candidate = flatten_list;\n    assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)40}), (std::vector<long>)std::vector<long>({(long)30, (long)56, (long)25}), (std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)33}), (std::vector<long>)std::vector<long>({(long)40})}))) == (std::vector<long>({(long)10, (long)20, (long)40, (long)30, (long)56, (long)25, (long)10, (long)20, (long)33, (long)40})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)1, (long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)10, (long)11, (long)12}), (std::vector<long>)std::vector<long>({(long)7, (long)8, (long)9})}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)10, (long)11, (long)12, (long)7, (long)8, (long)9})));\n}\n",
      "timestamp": 1666123892,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpmsa1glhk.cpp:2:\n/tmp/tmpmsa1glhk.cpp: In function \u2018int main()\u2019:\n/tmp/tmpmsa1glhk.cpp:19:203: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   19 |     assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n      |                                                                                                                                                                                                           ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpmsa1glhk.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpmsa1glhk.cpp:2:\n/tmp/tmpmsa1glhk.cpp:19:203: note:  ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to flatten a given nested list structure.\nstd::vector<long> flatten_list(std::any list1) {\n    std::vector<long> result;\n    if (list1.type() == typeid(long)) {\n        result.push_back(std::any_cast<long>(list1));\n    } else {\n        std::vector<std::any> list = std::any_cast<std::vector<std::any>>(list1);\n        for (auto element : list) {\n            std::vector<long> temp = flatten_list(element);\n            result.insert(result.end(), temp.begin(), temp.end());\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = flatten_list;\n    assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)40}), (std::vector<long>)std::vector<long>({(long)30, (long)56, (long)25}), (std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)33}), (std::vector<long>)std::vector<long>({(long)40})}))) == (std::vector<long>({(long)10, (long)20, (long)40, (long)30, (long)56, (long)25, (long)10, (long)20, (long)33, (long)40})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)1, (long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)10, (long)11, (long)12}), (std::vector<long>)std::vector<long>({(long)7, (long)8, (long)9})}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)10, (long)11, (long)12, (long)7, (long)8, (long)9})));\n}\n",
      "timestamp": 1665517687,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmppbi15mq9.cpp:2:\n/tmp/tmppbi15mq9.cpp: In function \u2018int main()\u2019:\n/tmp/tmppbi15mq9.cpp:19:203: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   19 |     assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n      |                                                                                                                                                                                                           ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmppbi15mq9.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmppbi15mq9.cpp:2:\n/tmp/tmppbi15mq9.cpp:19:203: note:  ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to flatten a given nested list structure.\nstd::vector<long> flatten_list(std::any list1) {\n    std::vector<long> result;\n    if (list1.type() == typeid(long)) {\n        result.push_back(std::any_cast<long>(list1));\n    }\n    else {\n        std::vector<std::any> list = std::any_cast<std::vector<std::any>>(list1);\n        for (auto element : list) {\n            std::vector<long> flattened_element = flatten_list(element);\n            result.insert(result.end(), flattened_element.begin(), flattened_element.end());\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = flatten_list;\n    assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)40}), (std::vector<long>)std::vector<long>({(long)30, (long)56, (long)25}), (std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)33}), (std::vector<long>)std::vector<long>({(long)40})}))) == (std::vector<long>({(long)10, (long)20, (long)40, (long)30, (long)56, (long)25, (long)10, (long)20, (long)33, (long)40})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)1, (long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)10, (long)11, (long)12}), (std::vector<long>)std::vector<long>({(long)7, (long)8, (long)9})}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)10, (long)11, (long)12, (long)7, (long)8, (long)9})));\n}\n",
      "timestamp": 1666123892,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpe5cyykd1.cpp:2:\n/tmp/tmpe5cyykd1.cpp: In function \u2018int main()\u2019:\n/tmp/tmpe5cyykd1.cpp:20:203: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   20 |     assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n      |                                                                                                                                                                                                           ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpe5cyykd1.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpe5cyykd1.cpp:2:\n/tmp/tmpe5cyykd1.cpp:20:203: note:  ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to flatten a given nested list structure.\nstd::vector<long> flatten_list(std::any list1) {\n    std::vector<long> result;\n    std::any list = list1;\n    while(!list.empty()) {\n        if(list.type() == typeid(long)) {\n            result.push_back(std::any_cast<long>(list));\n            break;\n        }\n        else {\n            std::vector<std::any> inner_list = std::any_cast<std::vector<std::any>>(list);\n            for(auto x : inner_list) {\n                if(x.type() == typeid(long)) {\n                    result.push_back(std::any_cast<long>(x));\n                }\n                else {\n                    std::vector<std::any> inner_inner_list = std::any_cast<std::vector<std::any>>(x);\n                    for(auto y : inner_inner_list) {\n                        if(y.type() == typeid(long)) {\n                            result.push_back(std::any_cast<long>(y));\n                        }\n                        else {\n                            std::vector<std::any> inner_inner_inner_list = std::any_cast<std::vector<std::any>>(y);\n                            for(auto z : inner_inner_inner_list) {\n                                if(z.type() == typeid(long)) {\n                                    result.push_back(std::any_cast<long>(z));\n                                }\n                                else {\n                                    std::vector<std::any> inner_inner_inner_inner_list = std::any_cast<std::vector<std::any>>(z);\n                                    for(auto w : inner_inner_inner_inner_list) {\n                                        if(w.type() == typeid(long)) {\n                                            result.push_back(std::any_cast<long>(w));\n                                        }\n                                        else {\n                                            std::vector<std::any> inner_inner_inner_inner_inner_list = std::any_cast<std::vector<std::any>>(w);\n                                            for(auto v : inner_inner_inner_inner_inner_list) {\n                                                if\n}\nint main() {\n    auto candidate = flatten_list;\n    assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)40}), (std::vector<long>)std::vector<long>({(long)30, (long)56, (long)25}), (std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)33}), (std::vector<long>)std::vector<long>({(long)40})}))) == (std::vector<long>({(long)10, (long)20, (long)40, (long)30, (long)56, (long)25, (long)10, (long)20, (long)33, (long)40})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)1, (long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)10, (long)11, (long)12}), (std::vector<long>)std::vector<long>({(long)7, (long)8, (long)9})}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)10, (long)11, (long)12, (long)7, (long)8, (long)9})));\n}\n",
      "timestamp": 1666123892,
      "stdout": "",
      "stderr": "/tmp/tmpg93tb8k4.cpp: In function \u2018std::vector<long int> flatten_list(std::any)\u2019:\n/tmp/tmpg93tb8k4.cpp:7:17: error: \u2018class std::any\u2019 has no member named \u2018empty\u2019\n    7 |     while(!list.empty()) {\n      |                 ^~~~~\n/tmp/tmpg93tb8k4.cpp:40:1: error: expected \u2018(\u2019 before \u2018}\u2019 token\n   40 | }\n      | ^\n      | (\n/tmp/tmpg93tb8k4.cpp:41:12: error: a function-definition is not allowed here before \u2018{\u2019 token\n   41 | int main() {\n      |            ^\n/tmp/tmpg93tb8k4.cpp:46:1: error: expected \u2018}\u2019 at end of input\n   46 | }\n      | ^\n/tmp/tmpg93tb8k4.cpp:36:46: note: to match this \u2018{\u2019\n   36 |                                         else {\n      |                                              ^\n/tmp/tmpg93tb8k4.cpp:46:1: error: expected \u2018}\u2019 at end of input\n   46 | }\n      | ^\n/tmp/tmpg93tb8k4.cpp:32:80: note: to match this \u2018{\u2019\n   32 |                                     for(auto w : inner_inner_inner_inner_list) {\n      |                                                                                ^\n/tmp/tmpg93tb8k4.cpp:46:1: error: expected \u2018}\u2019 at end of input\n   46 | }\n      | ^\n/tmp/tmpg93tb8k4.cpp:30:38: note: to match this \u2018{\u2019\n   30 |                                 else {\n      |                                      ^\n/tmp/tmpg93tb8k4.cpp:46:1: error: expected \u2018}\u2019 at end of input\n   46 | }\n      | ^\n/tmp/tmpg93tb8k4.cpp:26:66: note: to match this \u2018{\u2019\n   26 |                             for(auto z : inner_inner_inner_list) {\n      |                                                                  ^\n/tmp/tmpg93tb8k4.cpp:46:1: error: expected \u2018}\u2019 at end of input\n   46 | }\n      | ^\n/tmp/tmpg93tb8k4.cpp:24:30: note: to match this \u2018{\u2019\n   24 |                         else {\n      |                              ^\n/tmp/tmpg93tb8k4.cpp:46:1: error: expected \u2018}\u2019 at end of input\n   46 | }\n      | ^\n/tmp/tmpg93tb8k4.cpp:20:52: note: to match this \u2018{\u2019\n   20 |                     for(auto y : inner_inner_list) {\n      |                                ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to flatten a given nested list structure.\nstd::vector<long> flatten_list(std::any list1) {\n    std::vector<long> result;\n    if (list1.type() == typeid(std::vector<std::any>)) {\n        std::vector<std::any> list = std::any_cast<std::vector<std::any>>(list1);\n        for (auto i : list) {\n            std::vector<long> temp = flatten_list(i);\n            result.insert(result.end(), temp.begin(), temp.end());\n        }\n    } else {\n        result.push_back(std::any_cast<long>(list1));\n    }\n    return result;\n}\nint main() {\n    auto candidate = flatten_list;\n    assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)40}), (std::vector<long>)std::vector<long>({(long)30, (long)56, (long)25}), (std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)33}), (std::vector<long>)std::vector<long>({(long)40})}))) == (std::vector<long>({(long)10, (long)20, (long)40, (long)30, (long)56, (long)25, (long)10, (long)20, (long)33, (long)40})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)1, (long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)10, (long)11, (long)12}), (std::vector<long>)std::vector<long>({(long)7, (long)8, (long)9})}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)10, (long)11, (long)12, (long)7, (long)8, (long)9})));\n}\n",
      "timestamp": 1665517687,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpdjkb_dx9.cpp:2:\n/tmp/tmpdjkb_dx9.cpp: In function \u2018int main()\u2019:\n/tmp/tmpdjkb_dx9.cpp:19:203: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   19 |     assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n      |                                                                                                                                                                                                           ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpdjkb_dx9.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpdjkb_dx9.cpp:2:\n/tmp/tmpdjkb_dx9.cpp:19:203: note:  ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to flatten a given nested list structure.\nstd::vector<long> flatten_list(std::any list1) {\n    std::vector<long> result;\n    if (list1.type() == typeid(long)) {\n        result.push_back(std::any_cast<long>(list1));\n    } else {\n        std::vector<std::any> list = std::any_cast<std::vector<std::any>>(list1);\n        for (auto i : list) {\n            std::vector<long> temp = flatten_list(i);\n            result.insert(result.end(), temp.begin(), temp.end());\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = flatten_list;\n    assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)40}), (std::vector<long>)std::vector<long>({(long)30, (long)56, (long)25}), (std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)33}), (std::vector<long>)std::vector<long>({(long)40})}))) == (std::vector<long>({(long)10, (long)20, (long)40, (long)30, (long)56, (long)25, (long)10, (long)20, (long)33, (long)40})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)1, (long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)10, (long)11, (long)12}), (std::vector<long>)std::vector<long>({(long)7, (long)8, (long)9})}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)10, (long)11, (long)12, (long)7, (long)8, (long)9})));\n}\n",
      "timestamp": 1665517687,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpkj59rete.cpp:2:\n/tmp/tmpkj59rete.cpp: In function \u2018int main()\u2019:\n/tmp/tmpkj59rete.cpp:19:203: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   19 |     assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n      |                                                                                                                                                                                                           ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpkj59rete.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpkj59rete.cpp:2:\n/tmp/tmpkj59rete.cpp:19:203: note:  ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to flatten a given nested list structure.\nstd::vector<long> flatten_list(std::any list1) {\n  std::vector<long> result;\n  std::vector<std::any> list;\n  if (list1.type() == typeid(std::vector<std::any>)) {\n    list = std::any_cast<std::vector<std::any>>(list1);\n  } else {\n    list.push_back(list1);\n  }\n  for (auto it = list.begin(); it != list.end(); it++) {\n    if (it->type() == typeid(std::vector<std::any>)) {\n      std::vector<long> temp = flatten_list(*it);\n      result.insert(result.end(), temp.begin(), temp.end());\n    } else {\n      result.push_back(std::any_cast<long>(*it));\n    }\n  }\n  return result;\n}\nint main() {\n    auto candidate = flatten_list;\n    assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)40}), (std::vector<long>)std::vector<long>({(long)30, (long)56, (long)25}), (std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)33}), (std::vector<long>)std::vector<long>({(long)40})}))) == (std::vector<long>({(long)10, (long)20, (long)40, (long)30, (long)56, (long)25, (long)10, (long)20, (long)33, (long)40})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)1, (long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)10, (long)11, (long)12}), (std::vector<long>)std::vector<long>({(long)7, (long)8, (long)9})}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)10, (long)11, (long)12, (long)7, (long)8, (long)9})));\n}\n",
      "timestamp": 1666123892,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpt7v8adho.cpp:2:\n/tmp/tmpt7v8adho.cpp: In function \u2018int main()\u2019:\n/tmp/tmpt7v8adho.cpp:24:203: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   24 |     assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n      |                                                                                                                                                                                                           ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpt7v8adho.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpt7v8adho.cpp:2:\n/tmp/tmpt7v8adho.cpp:24:203: note:  ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to flatten a given nested list structure.\nstd::vector<long> flatten_list(std::any list1) {\n    std::vector<long> list2;\n    if (list1.type() == typeid(long)) {\n        list2.push_back(std::any_cast<long>(list1));\n    }\n    else {\n        std::vector<std::any> list3 = std::any_cast<std::vector<std::any>>(list1);\n        for (auto i : list3) {\n            std::vector<long> list4 = flatten_list(i);\n            list2.insert(list2.end(), list4.begin(), list4.end());\n        }\n    }\n    return list2;\n}\nint main() {\n    auto candidate = flatten_list;\n    assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)40}), (std::vector<long>)std::vector<long>({(long)30, (long)56, (long)25}), (std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)33}), (std::vector<long>)std::vector<long>({(long)40})}))) == (std::vector<long>({(long)10, (long)20, (long)40, (long)30, (long)56, (long)25, (long)10, (long)20, (long)33, (long)40})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)1, (long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)10, (long)11, (long)12}), (std::vector<long>)std::vector<long>({(long)7, (long)8, (long)9})}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)10, (long)11, (long)12, (long)7, (long)8, (long)9})));\n}\n",
      "timestamp": 1666123890,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpvht_hlnv.cpp:2:\n/tmp/tmpvht_hlnv.cpp: In function \u2018int main()\u2019:\n/tmp/tmpvht_hlnv.cpp:20:203: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   20 |     assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n      |                                                                                                                                                                                                           ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpvht_hlnv.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpvht_hlnv.cpp:2:\n/tmp/tmpvht_hlnv.cpp:20:203: note:  ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to flatten a given nested list structure.\nstd::vector<long> flatten_list(std::any list1) {\n    std::vector<long> list2;\n    if (list1.type() == typeid(long)) {\n        list2.push_back(std::any_cast<long>(list1));\n    } else {\n        std::vector<std::any> list3 = std::any_cast<std::vector<std::any>>(list1);\n        for (auto i : list3) {\n            std::vector<long> list4 = flatten_list(i);\n            list2.insert(list2.end(), list4.begin(), list4.end());\n        }\n    }\n    return list2;\n}\nint main() {\n    auto candidate = flatten_list;\n    assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)40}), (std::vector<long>)std::vector<long>({(long)30, (long)56, (long)25}), (std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)33}), (std::vector<long>)std::vector<long>({(long)40})}))) == (std::vector<long>({(long)10, (long)20, (long)40, (long)30, (long)56, (long)25, (long)10, (long)20, (long)33, (long)40})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)1, (long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)10, (long)11, (long)12}), (std::vector<long>)std::vector<long>({(long)7, (long)8, (long)9})}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)10, (long)11, (long)12, (long)7, (long)8, (long)9})));\n}\n",
      "timestamp": 1666123888,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpvpkd0fb6.cpp:2:\n/tmp/tmpvpkd0fb6.cpp: In function \u2018int main()\u2019:\n/tmp/tmpvpkd0fb6.cpp:19:203: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   19 |     assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n      |                                                                                                                                                                                                           ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmpvpkd0fb6.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpvpkd0fb6.cpp:2:\n/tmp/tmpvpkd0fb6.cpp:19:203: note:  ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to flatten a given nested list structure.\nstd::vector<long> flatten_list(std::any list1) {\n    std::vector<long> result;\n    if (list1.type() == typeid(std::vector<long>)) {\n        for (auto &i : std::any_cast<std::vector<long>>(list1)) {\n            if (i.type() == typeid(std::vector<long>)) {\n                auto temp = flatten_list(i);\n                result.insert(result.end(), temp.begin(), temp.end());\n            } else {\n                result.push_back(std::any_cast<long>(i));\n            }\n        }\n    } else {\n        result.push_back(std::any_cast<long>(list1));\n    }\n    return result;\n}\nint main() {\n    auto candidate = flatten_list;\n    assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)40}), (std::vector<long>)std::vector<long>({(long)30, (long)56, (long)25}), (std::vector<long>)std::vector<long>({(long)10, (long)20}), (std::vector<long>)std::vector<long>({(long)33}), (std::vector<long>)std::vector<long>({(long)40})}))) == (std::vector<long>({(long)10, (long)20, (long)40, (long)30, (long)56, (long)25, (long)10, (long)20, (long)33, (long)40})));\n    assert(candidate((std::any({(std::vector<long>)std::vector<long>({(long)1, (long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)10, (long)11, (long)12}), (std::vector<long>)std::vector<long>({(long)7, (long)8, (long)9})}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)10, (long)11, (long)12, (long)7, (long)8, (long)9})));\n}\n",
      "timestamp": 1666123892,
      "stdout": "",
      "stderr": "/tmp/tmp6nqjwcaa.cpp: In function \u2018std::vector<long int> flatten_list(std::any)\u2019:\n/tmp/tmp6nqjwcaa.cpp:8:19: error: request for member \u2018type\u2019 in \u2018i\u2019, which is of non-class type \u2018long int\u2019\n    8 |             if (i.type() == typeid(std::vector<long>)) {\n      |                   ^~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp6nqjwcaa.cpp:2:\n/tmp/tmp6nqjwcaa.cpp: In function \u2018int main()\u2019:\n/tmp/tmp6nqjwcaa.cpp:22:203: error: no matching function for call to \u2018std::any::any(<brace-enclosed initializer list>)\u2019\n   22 |     assert(candidate((std::any({0, 10, std::vector<long>({(long)20, (long)30}), 40, 50, std::vector<long>({(long)60, (long)70, (long)80}), std::vector<long>({(long)90, (long)100, (long)110, (long)120})}))) == (std::vector<long>({(long)0, (long)10, (long)20, (long)30, (long)40, (long)50, (long)60, (long)70, (long)80, (long)90, (long)100, (long)110, (long)120})));\n      |                                                                                                                                                                                                           ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:126,\n                 from /tmp/tmp6nqjwcaa.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note: candidate: \u2018template<class _ValueType, class _Up, class ... _Args, class _Tp, class _Mgr, typename std::enable_if<std::__and_<std::is_copy_constructible<_Tp>, std::is_constructible<_Tp, std::initializer_list<_Up>, _Args&& ...> >::value, bool>::type <anonymous> > std::any::any(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, _Args&& ...)\u2019\n  222 |       any(in_place_type_t<_ValueType>,\n      |       ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/any:222:7: note:   template argument deduction/s",
      "exit_code": 1,
      "status": "SyntaxError"
    }
  ]
}
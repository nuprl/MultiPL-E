{
  "name": "mbpp_64_subject_marks",
  "language": "cpp",
  "prompt": "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_std_string_long{\n    std::string f0;\n    long f1;    Union_std_string_long(std::string _f0) : f0(_f0) {}\n    Union_std_string_long(long _f1) : f1(_f1) {}\n    ~Union_std_string_long() {}\n    bool operator==(std::string f) {\n        return f0 == f ;\n    }    bool operator==(long f) {\n        return f1 == f ;\n    }\n};\n// Write a function to sort a list of tuples using the second value of each tuple.\nstd::vector<Union_std_string_long> subject_marks(std::vector<Union_std_string_long> subjectmarks) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_64_subject_marks.py",
  "prompt_terminology": "verbatim",
  "tests": "}\nint main() {\n    auto candidate = subject_marks;\n    assert(candidate((std::vector<Union_std_string_long>({(std::tuple<std::string, long>)std::make_tuple(\"English\", 88), (std::tuple<std::string, long>)std::make_tuple(\"Science\", 90), (std::tuple<std::string, long>)std::make_tuple(\"Maths\", 97), (std::tuple<std::string, long>)std::make_tuple(\"Social sciences\", 82)}))) == (std::vector<Union_std_string_long>({(std::tuple<std::string, long>)std::make_tuple(\"Social sciences\", 82), (std::tuple<std::string, long>)std::make_tuple(\"English\", 88), (std::tuple<std::string, long>)std::make_tuple(\"Science\", 90), (std::tuple<std::string, long>)std::make_tuple(\"Maths\", 97)})));\n    assert(candidate((std::vector<Union_std_string_long>({(std::tuple<std::string, long>)std::make_tuple(\"Telugu\", 49), (std::tuple<std::string, long>)std::make_tuple(\"Hindhi\", 54), (std::tuple<std::string, long>)std::make_tuple(\"Social\", 33)}))) == (std::vector<Union_std_string_long>({(std::tuple<std::string, long>)std::make_tuple(\"Social\", 33), (std::tuple<std::string, long>)std::make_tuple(\"Telugu\", 49), (std::tuple<std::string, long>)std::make_tuple(\"Hindhi\", 54)})));\n    assert(candidate((std::vector<Union_std_string_long>({(std::tuple<std::string, long>)std::make_tuple(\"Physics\", 96), (std::tuple<std::string, long>)std::make_tuple(\"Chemistry\", 97), (std::tuple<std::string, long>)std::make_tuple(\"Biology\", 45)}))) == (std::vector<Union_std_string_long>({(std::tuple<std::string, long>)std::make_tuple(\"Biology\", 45), (std::tuple<std::string, long>)std::make_tuple(\"Physics\", 96), (std::tuple<std::string, long>)std::make_tuple(\"Chemistry\", 97)})));\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    std::vector<Union_std_string_long> result;\n    std::sort(subjectmarks.begin(), subjectmarks.end(), [](Union_std_string_long a, Union_std_string_long b) {\n        return a.f1 < b.f1;\n    });\n    return subjectmarks;",
    "    std::vector<Union_std_string_long> result;\n    std::vector<Union_std_string_long>::iterator it;\n    std::vector<Union_std_string_long>::iterator it1;\n    std::vector<Union_std_string_long>::iterator it2;\n    std::vector<Union_std_string_long>::iterator it3;\n    std::vector<Union_std_string_long>::iterator it4;\n    std::vector<Union_std_string_long>::iterator it5;\n    std::vector<Union_std_string_long>::iterator it6;\n    std::vector<Union_std_string_long>::iterator it7;\n    std::vector<Union_std_string_long>::iterator it8;\n    std::vector<Union_std_string_long>::iterator it9;\n    std::vector<Union_std_string_long>::iterator it10;\n    std::vector<Union_std_string_long>::iterator it11;\n    std::vector<Union_std_string_long>::iterator it12;\n    std::vector<Union_std_string_long>::iterator it13;\n    std::vector<Union_std_string_long>::iterator it14;\n    std::vector<Union_std_string_long>::iterator it15;\n    std::vector<Union_std_string_long>::iterator it16;\n    std::vector<Union_std_string_long>::iterator it17;\n    std::vector<Union_std_string_long>::iterator it18;\n    std::vector<Union_std_string_long>::iterator it19;\n    std::vector<Union_std_string_long>::iterator it20;\n    std::vector<Union_std_string_long>::iterator it21;\n    std::vector<Union_std_string_long>::iterator it22;\n    std::vector<Union_std_string_long>::iterator it23;\n    std::vector<Union_std_string_long>::iterator it24;\n    std::vector<Union_std_string_long>::iterator it25;\n    std",
    "    std::vector<Union_std_string_long> result;\n    std::vector<Union_std_string_long>::iterator it;\n    for (it = subjectmarks.begin(); it != subjectmarks.end(); it++) {\n        if (it->f0 == \"Maths\") {\n            result.push_back(Union_std_string_long(it->f1));\n        }\n    }\n    return result;",
    "    std::vector<Union_std_string_long> result;\n    std::sort(subjectmarks.begin(), subjectmarks.end(), [](Union_std_string_long a, Union_std_string_long b) {\n        return a.f1 < b.f1;\n    });\n    for (auto i : subjectmarks) {\n        result.push_back(i);\n    }\n    return result;",
    "    std::vector<Union_std_string_long> result;\n    std::vector<Union_std_string_long>::iterator it;\n    for (it = subjectmarks.begin(); it != subjectmarks.end(); it++) {\n        if (it->f0 == \"Maths\") {\n            result.push_back(*it);\n        }\n    }\n    for (it = subjectmarks.begin(); it != subjectmarks.end(); it++) {\n        if (it->f0 == \"Physics\") {\n            result.push_back(*it);\n        }\n    }\n    for (it = subjectmarks.begin(); it != subjectmarks.end(); it++) {\n        if (it->f0 == \"Chemistry\") {\n            result.push_back(*it);\n        }\n    }\n    return result;",
    "    std::vector<Union_std_string_long> result;\n    std::vector<Union_std_string_long>::iterator it;\n    std::vector<Union_std_string_long>::iterator it1;\n    std::vector<Union_std_string_long>::iterator it2;\n    std::vector<Union_std_string_long>::iterator it3;\n    std::vector<Union_std_string_long>::iterator it4;\n    std::vector<Union_std_string_long>::iterator it5;\n    std::vector<Union_std_string_long>::iterator it6;\n    std::vector<Union_std_string_long>::iterator it7;\n    std::vector<Union_std_string_long>::iterator it8;\n    std::vector<Union_std_string_long>::iterator it9;\n    std::vector<Union_std_string_long>::iterator it10;\n    std::vector<Union_std_string_long>::iterator it11;\n    std::vector<Union_std_string_long>::iterator it12;\n    std::vector<Union_std_string_long>::iterator it13;\n    std::vector<Union_std_string_long>::iterator it14;\n    std::vector<Union_std_string_long>::iterator it15;\n    std::vector<Union_std_string_long>::iterator it16;\n    std::vector<Union_std_string_long>::iterator it17;\n    std::vector<Union_std_string_long>::iterator it18;\n    std::vector<Union_std_string_long>::iterator it19;\n    std::vector<Union_std_string_long>::iterator it20;\n    std::vector<Union_std_string_long>::iterator it21;\n    std::vector<Union_std_string_long>::iterator it22;\n    std::vector<Union_std_string_long>::iterator it23;\n    std::vector<Union_std_string_long>::iterator it24;\n    std::vector<Union_std_string_long>::iterator it25;\n    std",
    "    std::vector<Union_std_string_long> result;\n    std::sort(subjectmarks.begin(), subjectmarks.end(), [](Union_std_string_long a, Union_std_string_long b) {\n        return a.f1 < b.f1;\n    });\n    for (auto i : subjectmarks) {\n        result.push_back(i);\n    }\n    return result;",
    "    std::vector<Union_std_string_long> result;\n    std::vector<Union_std_string_long>::iterator it;\n    for(it = subjectmarks.begin(); it != subjectmarks.end(); it++) {\n        if(it->f0 == \"Maths\") {\n            result.push_back(*it);\n        }\n    }\n    for(it = subjectmarks.begin(); it != subjectmarks.end(); it++) {\n        if(it->f0 == \"Science\") {\n            result.push_back(*it);\n        }\n    }\n    for(it = subjectmarks.begin(); it != subjectmarks.end(); it++) {\n        if(it->f0 == \"English\") {\n            result.push_back(*it);\n        }\n    }\n    return result;",
    "    std::vector<Union_std_string_long> result;\n    std::vector<Union_std_string_long>::iterator it;\n    std::vector<Union_std_string_long>::iterator it1;\n    std::vector<Union_std_string_long>::iterator it2;\n    std::vector<Union_std_string_long>::iterator it3;\n    std::vector<Union_std_string_long>::iterator it4;\n    std::vector<Union_std_string_long>::iterator it5;\n    std::vector<Union_std_string_long>::iterator it6;\n    std::vector<Union_std_string_long>::iterator it7;\n    std::vector<Union_std_string_long>::iterator it8;\n    std::vector<Union_std_string_long>::iterator it9;\n    std::vector<Union_std_string_long>::iterator it10;\n    std::vector<Union_std_string_long>::iterator it11;\n    std::vector<Union_std_string_long>::iterator it12;\n    std::vector<Union_std_string_long>::iterator it13;\n    std::vector<Union_std_string_long>::iterator it14;\n    std::vector<Union_std_string_long>::iterator it15;\n    std::vector<Union_std_string_long>::iterator it16;\n    std::vector<Union_std_string_long>::iterator it17;\n    std::vector<Union_std_string_long>::iterator it18;\n    std::vector<Union_std_string_long>::iterator it19;\n    std::vector<Union_std_string_long>::iterator it20;\n    std::vector<Union_std_string_long>::iterator it21;\n    std::vector<Union_std_string_long>::iterator it22;\n    std::vector<Union_std_string_long>::iterator it23;\n    std::vector<Union_std_string_long>::iterator it24;\n    std::vector<Union_std_string_long>::iterator it25;\n    std",
    "    std::vector<Union_std_string_long> result;\n    std::vector<Union_std_string_long>::iterator it;\n    for (it = subjectmarks.begin(); it != subjectmarks.end(); it++) {\n        if (it->f1 >= 40) {\n            result.push_back(*it);\n        }\n    }\n    return result;",
    "    std::vector<Union_std_string_long> result;\n    std::sort(subjectmarks.begin(), subjectmarks.end(), [](Union_std_string_long a, Union_std_string_long b) {\n        return a.f1 < b.f1;\n    });\n    for (auto i : subjectmarks) {\n        result.push_back(i);\n    }\n    return result;",
    "    std::vector<Union_std_string_long> result;\n    std::vector<Union_std_string_long>::iterator it;\n    std::vector<Union_std_string_long>::iterator it1;\n    std::vector<Union_std_string_long>::iterator it2;\n    std::vector<Union_std_string_long>::iterator it3;\n    std::vector<Union_std_string_long>::iterator it4;\n    std::vector<Union_std_string_long>::iterator it5;\n    std::vector<Union_std_string_long>::iterator it6;\n    std::vector<Union_std_string_long>::iterator it7;\n    std::vector<Union_std_string_long>::iterator it8;\n    std::vector<Union_std_string_long>::iterator it9;\n    std::vector<Union_std_string_long>::iterator it10;\n    std::vector<Union_std_string_long>::iterator it11;\n    std::vector<Union_std_string_long>::iterator it12;\n    std::vector<Union_std_string_long>::iterator it13;\n    std::vector<Union_std_string_long>::iterator it14;\n    std::vector<Union_std_string_long>::iterator it15;\n    std::vector<Union_std_string_long>::iterator it16;\n    std::vector<Union_std_string_long>::iterator it17;\n    std::vector<Union_std_string_long>::iterator it18;\n    std::vector<Union_std_string_long>::iterator it19;\n    std::vector<Union_std_string_long>::iterator it20;\n    std::vector<Union_std_string_long>::iterator it21;\n    std::vector<Union_std_string_long>::iterator it22;\n    std::vector<Union_std_string_long>::iterator it23;\n    std::vector<Union_std_string_long>::iterator it24;\n    std::vector<Union_std_string_long>::iterator it25;\n    std",
    "    std::vector<Union_std_string_long> sorted_subjectmarks;\n    std::vector<Union_std_string_long>::iterator it;\n    std::vector<Union_std_string_long>::iterator it1;\n    std::vector<Union_std_string_long>::iterator it2;\n    std::vector<Union_std_string_long>::iterator it3;\n    std::vector<Union_std_string_long>::iterator it4;\n    std::vector<Union_std_string_long>::iterator it5;\n    std::vector<Union_std_string_long>::iterator it6;\n    std::vector<Union_std_string_long>::iterator it7;\n    std::vector<Union_std_string_long>::iterator it8;\n    std::vector<Union_std_string_long>::iterator it9;\n    std::vector<Union_std_string_long>::iterator it10;\n    std::vector<Union_std_string_long>::iterator it11;\n    std::vector<Union_std_string_long>::iterator it12;\n    std::vector<Union_std_string_long>::iterator it13;\n    std::vector<Union_std_string_long>::iterator it14;\n    std::vector<Union_std_string_long>::iterator it15;\n    std::vector<Union_std_string_long>::iterator it16;\n    std::vector<Union_std_string_long>::iterator it17;\n    std::vector<Union_std_string_long>::iterator it18;\n    std::vector<Union_std_string_long>::iterator it19;\n    std::vector<Union_std_string_long>::iterator it20;\n    std::vector<Union_std_string_long>::iterator it21;\n    std::vector<Union_std_string_long>::iterator it22;\n    std::vector<Union_std_string_long>::iterator it23;\n    std::vector<Union_std_string_long>::iterator it24;\n    std::vector<Union_std_string_long>::iterator it25;",
    "    std::vector<Union_std_string_long> result;\n    std::vector<Union_std_string_long> sorted_marks;\n    std::vector<Union_std_string_long> sorted_subjects;\n    for (auto i : subjectmarks) {\n        if (i.f1 == \"\") {\n            sorted_subjects.push_back(i);\n        } else {\n            sorted_marks.push_back(i);\n        }\n    }\n    std::sort(sorted_marks.begin(), sorted_marks.end(), [](Union_std_string_long a, Union_std_string_long b) {\n        return a.f1 < b.f1;\n    });\n    for (auto i : sorted_marks) {\n        for (auto j : sorted_subjects) {\n            if (i.f1 == j.f0) {\n                result.push_back(j);\n                result.push_back(i);\n            }\n        }\n    }\n    return result;",
    "    std::vector<Union_std_string_long> result;\n    std::vector<Union_std_string_long>::iterator it;\n    std::vector<Union_std_string_long>::iterator it1;\n    std::vector<Union_std_string_long>::iterator it2;\n    std::vector<Union_std_string_long>::iterator it3;\n    std::vector<Union_std_string_long>::iterator it4;\n    std::vector<Union_std_string_long>::iterator it5;\n    std::vector<Union_std_string_long>::iterator it6;\n    std::vector<Union_std_string_long>::iterator it7;\n    std::vector<Union_std_string_long>::iterator it8;\n    std::vector<Union_std_string_long>::iterator it9;\n    std::vector<Union_std_string_long>::iterator it10;\n    std::vector<Union_std_string_long>::iterator it11;\n    std::vector<Union_std_string_long>::iterator it12;\n    std::vector<Union_std_string_long>::iterator it13;\n    std::vector<Union_std_string_long>::iterator it14;\n    std::vector<Union_std_string_long>::iterator it15;\n    std::vector<Union_std_string_long>::iterator it16;\n    std::vector<Union_std_string_long>::iterator it17;\n    std::vector<Union_std_string_long>::iterator it18;\n    std::vector<Union_std_string_long>::iterator it19;\n    std::vector<Union_std_string_long>::iterator it20;\n    std::vector<Union_std_string_long>::iterator it21;\n    std::vector<Union_std_string_long>::iterator it22;\n    std::vector<Union_std_string_long>::iterator it23;\n    std::vector<Union_std_string_long>::iterator it24;\n    std::vector<Union_std_string_long>::iterator it25;\n    std",
    "    std::vector<Union_std_string_long> v;\n    std::vector<Union_std_string_long> v1;\n    std::vector<Union_std_string_long> v2;\n    for(int i = 0; i < subjectmarks.size(); i++) {\n        if(subjectmarks[i] == \"Maths\") {\n            v.push_back(subjectmarks[i]);\n        }\n        else if(subjectmarks[i] == \"Science\") {\n            v1.push_back(subjectmarks[i]);\n        }\n        else if(subjectmarks[i] == \"English\") {\n            v2.push_back(subjectmarks[i]);\n        }\n    }\n    for(int i = 0; i < v.size(); i++) {\n        subjectmarks.push_back(v[i]);\n    }\n    for(int i = 0; i < v1.size(); i++) {\n        subjectmarks.push_back(v1[i]);\n    }\n    for(int i = 0; i < v2.size(); i++) {\n        subjectmarks.push_back(v2[i]);\n    }\n    return subjectmarks;",
    "    std::vector<Union_std_string_long> result;\n    std::vector<Union_std_string_long> sorted_subjectmarks = subjectmarks;\n    std::sort(sorted_subjectmarks.begin(), sorted_subjectmarks.end(), [](Union_std_string_long a, Union_std_string_long b) {\n        return a.f1 < b.f1;\n    });\n    for (auto i : sorted_subjectmarks) {\n        result.push_back(i);\n    }\n    return result;",
    "    std::vector<Union_std_string_long> result;\n    std::map<std::string, long> map;\n    for (auto i : subjectmarks) {\n        if (i.f0 == \"\") {\n            map[i.f0] = i.f1;\n        } else {\n            map[i.f0] = i.f1;\n        }\n    }\n    for (auto i : map) {\n        result.push_back(Union_std_string_long(i.first));\n        result.push_back(Union_std_string_long(i.second));\n    }\n    return result;",
    "    std::vector<Union_std_string_long> result;\n    std::vector<Union_std_string_long>::iterator it;\n    std::vector<Union_std_string_long>::iterator it2;\n    for(it = subjectmarks.begin(); it != subjectmarks.end(); it++) {\n        for(it2 = it + 1; it2 != subjectmarks.end(); it2++) {\n            if((*it).f1 < (*it2).f1) {\n                Union_std_string_long temp = *it;\n                *it = *it2;\n                *it2 = temp;\n            }\n        }\n    }\n    return subjectmarks;",
    "    std::vector<Union_std_string_long> result;\n    std::vector<Union_std_string_long> temp;\n    for (int i = 0; i < subjectmarks.size(); i++) {\n        if (subjectmarks[i].f1 == 0) {\n            result.push_back(subjectmarks[i]);\n        } else {\n            temp.push_back(subjectmarks[i]);\n        }\n    }\n    std::sort(temp.begin(), temp.end(), [](Union_std_string_long a, Union_std_string_long b) {\n        return a.f1 < b.f1;\n    });\n    for (int i = 0; i < temp.size(); i++) {\n        result.push_back(temp[i]);\n    }\n    return result;",
    "    std::vector<Union_std_string_long> result;\n    std::sort(subjectmarks.begin(), subjectmarks.end(), [](Union_std_string_long a, Union_std_string_long b) {\n        return a.f1 < b.f1;\n    });\n    for (auto i : subjectmarks) {\n        result.push_back(i);\n    }\n    return result;",
    "    std::vector<Union_std_string_long> result;\n    std::vector<Union_std_string_long>::iterator it;\n    for(it = subjectmarks.begin(); it != subjectmarks.end(); it++) {\n        if(it->f0 == \"Maths\") {\n            result.push_back(*it);\n        }\n    }\n    for(it = subjectmarks.begin(); it != subjectmarks.end(); it++) {\n        if(it->f0 == \"Science\") {\n            result.push_back(*it);\n        }\n    }\n    for(it = subjectmarks.begin(); it != subjectmarks.end(); it++) {\n        if(it->f0 == \"English\") {\n            result.push_back(*it);\n        }\n    }\n    return result;",
    "    std::vector<Union_std_string_long> result;\n    std::sort(subjectmarks.begin(), subjectmarks.end(), [](const Union_std_string_long& a, const Union_std_string_long& b) {\n        return a.f1 < b.f1;\n    });\n    for (auto i : subjectmarks) {\n        result.push_back(i);\n    }\n    return result;",
    "    std::vector<Union_std_string_long> result;\n    std::map<std::string, long> marks;\n    for (auto i : subjectmarks) {\n        if (i.f0 == \"\") {\n            marks[i.f0] = i.f1;\n        } else {\n            marks[i.f0] = i.f1;\n        }\n    }\n    for (auto i : marks) {\n        result.push_back(Union_std_string_long(i.first));\n        result.push_back(Union_std_string_long(i.second));\n    }\n    return result;",
    "    std::vector<Union_std_string_long> sorted_subjectmarks;\n    std::sort(subjectmarks.begin(), subjectmarks.end(), [](const Union_std_string_long& a, const Union_std_string_long& b) {\n        return a.f1 < b.f1;\n    });\n    for (auto i : subjectmarks) {\n        sorted_subjectmarks.push_back(i);\n    }\n    return sorted_subjectmarks;",
    "    std::vector<Union_std_string_long> result;\n    std::vector<Union_std_string_long>::iterator it;\n    for (it = subjectmarks.begin(); it != subjectmarks.end(); it++) {\n        if (it->f0 == \"Maths\") {\n            result.push_back(*it);\n        }\n    }\n    for (it = subjectmarks.begin(); it != subjectmarks.end(); it++) {\n        if (it->f0 == \"Science\") {\n            result.push_back(*it);\n        }\n    }\n    for (it = subjectmarks.begin(); it != subjectmarks.end(); it++) {\n        if (it->f0 == \"English\") {\n            result.push_back(*it);\n        }\n    }\n    return result;",
    "    std::vector<Union_std_string_long> result;\n    std::vector<Union_std_string_long>::iterator it;\n    std::vector<Union_std_string_long>::iterator it1;\n    std::vector<Union_std_string_long>::iterator it2;\n    std::vector<Union_std_string_long>::iterator it3;\n    std::vector<Union_std_string_long>::iterator it4;\n    std::vector<Union_std_string_long>::iterator it5;\n    std::vector<Union_std_string_long>::iterator it6;\n    std::vector<Union_std_string_long>::iterator it7;\n    std::vector<Union_std_string_long>::iterator it8;\n    std::vector<Union_std_string_long>::iterator it9;\n    std::vector<Union_std_string_long>::iterator it10;\n    std::vector<Union_std_string_long>::iterator it11;\n    std::vector<Union_std_string_long>::iterator it12;\n    std::vector<Union_std_string_long>::iterator it13;\n    std::vector<Union_std_string_long>::iterator it14;\n    std::vector<Union_std_string_long>::iterator it15;\n    std::vector<Union_std_string_long>::iterator it16;\n    std::vector<Union_std_string_long>::iterator it17;\n    std::vector<Union_std_string_long>::iterator it18;\n    std::vector<Union_std_string_long>::iterator it19;\n    std::vector<Union_std_string_long>::iterator it20;\n    std::vector<Union_std_string_long>::iterator it21;\n    std::vector<Union_std_string_long>::iterator it22;\n    std::vector<Union_std_string_long>::iterator it23;\n    std::vector<Union_std_string_long>::iterator it24;\n    std::vector<Union_std_string_long>::iterator it25;\n    std",
    "    std::vector<Union_std_string_long> result;\n    std::vector<Union_std_string_long> temp;\n    std::vector<Union_std_string_long> temp1;\n    for(int i=0;i<subjectmarks.size();i++){\n        if(subjectmarks[i].f1 == \"\"){\n            temp.push_back(subjectmarks[i]);\n        }\n        else{\n            temp1.push_back(subjectmarks[i]);\n        }\n    }\n    std::sort(temp1.begin(),temp1.end(),[](Union_std_string_long a,Union_std_string_long b){\n        return a.f1 < b.f1;\n    });\n    for(int i=0;i<temp.size();i++){\n        result.push_back(temp[i]);\n    }\n    for(int i=0;i<temp1.size();i++){\n        result.push_back(temp1[i]);\n    }\n    return result;",
    "    std::vector<Union_std_string_long> result;\n    std::vector<Union_std_string_long>::iterator it;\n    std::vector<Union_std_string_long>::iterator it1;\n    std::vector<Union_std_string_long>::iterator it2;\n    std::vector<Union_std_string_long>::iterator it3;\n    std::vector<Union_std_string_long>::iterator it4;\n    std::vector<Union_std_string_long>::iterator it5;\n    std::vector<Union_std_string_long>::iterator it6;\n    std::vector<Union_std_string_long>::iterator it7;\n    std::vector<Union_std_string_long>::iterator it8;\n    std::vector<Union_std_string_long>::iterator it9;\n    std::vector<Union_std_string_long>::iterator it10;\n    std::vector<Union_std_string_long>::iterator it11;\n    std::vector<Union_std_string_long>::iterator it12;\n    std::vector<Union_std_string_long>::iterator it13;\n    std::vector<Union_std_string_long>::iterator it14;\n    std::vector<Union_std_string_long>::iterator it15;\n    std::vector<Union_std_string_long>::iterator it16;\n    std::vector<Union_std_string_long>::iterator it17;\n    std::vector<Union_std_string_long>::iterator it18;\n    std::vector<Union_std_string_long>::iterator it19;\n    std::vector<Union_std_string_long>::iterator it20;\n    std::vector<Union_std_string_long>::iterator it21;\n    std::vector<Union_std_string_long>::iterator it22;\n    std::vector<Union_std_string_long>::iterator it23;\n    std::vector<Union_std_string_long>::iterator it24;\n    std::vector<Union_std_string_long>::iterator it25;\n    std",
    "    std::vector<Union_std_string_long> result;\n    std::vector<Union_std_string_long>::iterator it;\n    std::vector<Union_std_string_long>::iterator it1;\n    std::vector<Union_std_string_long>::iterator it2;\n    std::vector<Union_std_string_long>::iterator it3;\n    std::vector<Union_std_string_long>::iterator it4;\n    std::vector<Union_std_string_long>::iterator it5;\n    std::vector<Union_std_string_long>::iterator it6;\n    std::vector<Union_std_string_long>::iterator it7;\n    std::vector<Union_std_string_long>::iterator it8;\n    std::vector<Union_std_string_long>::iterator it9;\n    std::vector<Union_std_string_long>::iterator it10;\n    std::vector<Union_std_string_long>::iterator it11;\n    std::vector<Union_std_string_long>::iterator it12;\n    std::vector<Union_std_string_long>::iterator it13;\n    std::vector<Union_std_string_long>::iterator it14;\n    std::vector<Union_std_string_long>::iterator it15;\n    std::vector<Union_std_string_long>::iterator it16;\n    std::vector<Union_std_string_long>::iterator it17;\n    std::vector<Union_std_string_long>::iterator it18;\n    std::vector<Union_std_string_long>::iterator it19;\n    std::vector<Union_std_string_long>::iterator it20;\n    std::vector<Union_std_string_long>::iterator it21;\n    std::vector<Union_std_string_long>::iterator it22;\n    std::vector<Union_std_string_long>::iterator it23;\n    std::vector<Union_std_string_long>::iterator it24;\n    std::vector<Union_std_string_long>::iterator it25;\n    std",
    "    std::vector<Union_std_string_long> result;\n    std::vector<Union_std_string_long>::iterator it;\n    std::vector<Union_std_string_long>::iterator it1;\n    std::vector<Union_std_string_long>::iterator it2;\n    std::vector<Union_std_string_long>::iterator it3;\n    std::vector<Union_std_string_long>::iterator it4;\n    std::vector<Union_std_string_long>::iterator it5;\n    std::vector<Union_std_string_long>::iterator it6;\n    std::vector<Union_std_string_long>::iterator it7;\n    std::vector<Union_std_string_long>::iterator it8;\n    std::vector<Union_std_string_long>::iterator it9;\n    std::vector<Union_std_string_long>::iterator it10;\n    std::vector<Union_std_string_long>::iterator it11;\n    std::vector<Union_std_string_long>::iterator it12;\n    std::vector<Union_std_string_long>::iterator it13;\n    std::vector<Union_std_string_long>::iterator it14;\n    std::vector<Union_std_string_long>::iterator it15;\n    std::vector<Union_std_string_long>::iterator it16;\n    std::vector<Union_std_string_long>::iterator it17;\n    std::vector<Union_std_string_long>::iterator it18;\n    std::vector<Union_std_string_long>::iterator it19;\n    std::vector<Union_std_string_long>::iterator it20;\n    std::vector<Union_std_string_long>::iterator it21;\n    std::vector<Union_std_string_long>::iterator it22;\n    std::vector<Union_std_string_long>::iterator it23;\n    std::vector<Union_std_string_long>::iterator it24;\n    std::vector<Union_std_string_long>::iterator it25;\n    std",
    "    std::vector<Union_std_string_long> result;\n    std::vector<Union_std_string_long>::iterator it;\n    for(it = subjectmarks.begin(); it != subjectmarks.end(); it++) {\n        if(it->f1 >= 40) {\n            result.push_back(*it);\n        }\n    }\n    return result;",
    "    std::vector<Union_std_string_long> sorted_subject_marks;\n    std::sort(subjectmarks.begin(), subjectmarks.end(), [](Union_std_string_long a, Union_std_string_long b) {\n        return a.f1 < b.f1;\n    });\n    for (auto i : subjectmarks) {\n        sorted_subject_marks.push_back(i);\n    }\n    return sorted_subject_marks;",
    "    std::vector<Union_std_string_long> result;\n    std::vector<Union_std_string_long>::iterator it;\n    for (it = subjectmarks.begin(); it != subjectmarks.end(); it++) {\n        if (it->f1 >= 40) {\n            result.push_back(*it);\n        }\n    }\n    return result;",
    "    std::vector<Union_std_string_long> result;\n    std::vector<Union_std_string_long> temp;\n    std::vector<Union_std_string_long> temp1;\n    std::vector<Union_std_string_long> temp2;\n    std::vector<Union_std_string_long> temp3;\n    std::vector<Union_std_string_long> temp4;\n    std::vector<Union_std_string_long> temp5;\n    std::vector<Union_std_string_long> temp6;\n    std::vector<Union_std_string_long> temp7;\n    std::vector<Union_std_string_long> temp8;\n    std::vector<Union_std_string_long> temp9;\n    std::vector<Union_std_string_long> temp10;\n    std::vector<Union_std_string_long> temp11;\n    std::vector<Union_std_string_long> temp12;\n    std::vector<Union_std_string_long> temp13;\n    std::vector<Union_std_string_long> temp14;\n    std::vector<Union_std_string_long> temp15;\n    std::vector<Union_std_string_long> temp16;\n    std::vector<Union_std_string_long> temp17;\n    std::vector<Union_std_string_long> temp18;\n    std::vector<Union_std_string_long> temp19;\n    std::vector<Union_std_string_long> temp20;\n    std::vector<Union_std_string_long> temp21;\n    std::vector<Union_std_string_long> temp22;\n    std::vector<Union_std_string_long> temp23;\n    std::vector<Union_std_string_long> temp24;\n    std::vector<Union_std_string_long> temp25;\n    std::vector<Union_std_string_long> temp26;\n    std::vector<Union_std_string_long> temp27;\n    std::vector<Union_std_string_long> temp28;\n    std::",
    "    std::vector<Union_std_string_long> result;\n    std::vector<Union_std_string_long>::iterator it;\n    std::vector<Union_std_string_long>::iterator it1;\n    std::vector<Union_std_string_long>::iterator it2;\n    std::vector<Union_std_string_long>::iterator it3;\n    std::vector<Union_std_string_long>::iterator it4;\n    std::vector<Union_std_string_long>::iterator it5;\n    std::vector<Union_std_string_long>::iterator it6;\n    std::vector<Union_std_string_long>::iterator it7;\n    std::vector<Union_std_string_long>::iterator it8;\n    std::vector<Union_std_string_long>::iterator it9;\n    std::vector<Union_std_string_long>::iterator it10;\n    std::vector<Union_std_string_long>::iterator it11;\n    std::vector<Union_std_string_long>::iterator it12;\n    std::vector<Union_std_string_long>::iterator it13;\n    std::vector<Union_std_string_long>::iterator it14;\n    std::vector<Union_std_string_long>::iterator it15;\n    std::vector<Union_std_string_long>::iterator it16;\n    std::vector<Union_std_string_long>::iterator it17;\n    std::vector<Union_std_string_long>::iterator it18;\n    std::vector<Union_std_string_long>::iterator it19;\n    std::vector<Union_std_string_long>::iterator it20;\n    std::vector<Union_std_string_long>::iterator it21;\n    std::vector<Union_std_string_long>::iterator it22;\n    std::vector<Union_std_string_long>::iterator it23;\n    std::vector<Union_std_string_long>::iterator it24;\n    std::vector<Union_std_string_long>::iterator it25;\n    std",
    "    std::vector<Union_std_string_long> sorted_subjectmarks;\n    std::vector<Union_std_string_long>::iterator it;\n    for (it = subjectmarks.begin(); it != subjectmarks.end(); it++) {\n        if (it->f1 > 50) {\n            sorted_subjectmarks.push_back(*it);\n        }\n    }\n    return sorted_subjectmarks;",
    "    std::vector<Union_std_string_long> result;\n    std::vector<Union_std_string_long> temp;\n    std::vector<Union_std_string_long> temp1;\n    std::vector<Union_std_string_long> temp2;\n    std::vector<Union_std_string_long> temp3;\n    std::vector<Union_std_string_long> temp4;\n    std::vector<Union_std_string_long> temp5;\n    std::vector<Union_std_string_long> temp6;\n    std::vector<Union_std_string_long> temp7;\n    std::vector<Union_std_string_long> temp8;\n    std::vector<Union_std_string_long> temp9;\n    std::vector<Union_std_string_long> temp10;\n    std::vector<Union_std_string_long> temp11;\n    std::vector<Union_std_string_long> temp12;\n    std::vector<Union_std_string_long> temp13;\n    std::vector<Union_std_string_long> temp14;\n    std::vector<Union_std_string_long> temp15;\n    std::vector<Union_std_string_long> temp16;\n    std::vector<Union_std_string_long> temp17;\n    std::vector<Union_std_string_long> temp18;\n    std::vector<Union_std_string_long> temp19;\n    std::vector<Union_std_string_long> temp20;\n    std::vector<Union_std_string_long> temp21;\n    std::vector<Union_std_string_long> temp22;\n    std::vector<Union_std_string_long> temp23;\n    std::vector<Union_std_string_long> temp24;\n    std::vector<Union_std_string_long> temp25;\n    std::vector<Union_std_string_long> temp26;\n    std::vector<Union_std_string_long> temp27;\n    std::vector<Union_std_string_long> temp28;\n    std::",
    "    std::vector<Union_std_string_long> result;\n    std::vector<Union_std_string_long>::iterator it;\n    for (it = subjectmarks.begin(); it != subjectmarks.end(); it++) {\n        if (it->f0 == \"English\") {\n            result.push_back(*it);\n        }\n    }\n    for (it = subjectmarks.begin(); it != subjectmarks.end(); it++) {\n        if (it->f0 == \"Maths\") {\n            result.push_back(*it);\n        }\n    }\n    for (it = subjectmarks.begin(); it != subjectmarks.end(); it++) {\n        if (it->f0 == \"Science\") {\n            result.push_back(*it);\n        }\n    }\n    return result;",
    "    std::vector<Union_std_string_long> sorted_marks;\n    std::vector<Union_std_string_long>::iterator itr = subjectmarks.begin();\n    while(itr != subjectmarks.end()) {\n        if(itr->f1 >= 40) {\n            sorted_marks.push_back(*itr);\n        }\n        itr++;\n    }\n    return sorted_marks;",
    "    std::vector<Union_std_string_long> result;\n    std::vector<Union_std_string_long>::iterator it;\n    std::vector<Union_std_string_long>::iterator it1;\n    std::vector<Union_std_string_long>::iterator it2;\n    std::vector<Union_std_string_long>::iterator it3;\n    std::vector<Union_std_string_long>::iterator it4;\n    std::vector<Union_std_string_long>::iterator it5;\n    std::vector<Union_std_string_long>::iterator it6;\n    std::vector<Union_std_string_long>::iterator it7;\n    std::vector<Union_std_string_long>::iterator it8;\n    std::vector<Union_std_string_long>::iterator it9;\n    std::vector<Union_std_string_long>::iterator it10;\n    std::vector<Union_std_string_long>::iterator it11;\n    std::vector<Union_std_string_long>::iterator it12;\n    std::vector<Union_std_string_long>::iterator it13;\n    std::vector<Union_std_string_long>::iterator it14;\n    std::vector<Union_std_string_long>::iterator it15;\n    std::vector<Union_std_string_long>::iterator it16;\n    std::vector<Union_std_string_long>::iterator it17;\n    std::vector<Union_std_string_long>::iterator it18;\n    std::vector<Union_std_string_long>::iterator it19;\n    std::vector<Union_std_string_long>::iterator it20;\n    std::vector<Union_std_string_long>::iterator it21;\n    std::vector<Union_std_string_long>::iterator it22;\n    std::vector<Union_std_string_long>::iterator it23;\n    std::vector<Union_std_string_long>::iterator it24;\n    std::vector<Union_std_string_long>::iterator it25;\n    std",
    "    std::vector<Union_std_string_long> sorted_subjectmarks;\n    std::sort(subjectmarks.begin(), subjectmarks.end(), [](const Union_std_string_long& a, const Union_std_string_long& b) {\n        return a.f1 < b.f1;\n    });\n    for (auto i : subjectmarks) {\n        sorted_subjectmarks.push_back(i);\n    }\n    return sorted_subjectmarks;",
    "    std::vector<Union_std_string_long> result;\n    std::map<std::string, int> map;\n    for (auto i : subjectmarks) {\n        if (i.f0 == \"\") {\n            map[std::to_string(i.f1)] = i.f1;\n        } else {\n            map[i.f0] = i.f1;\n        }\n    }\n    for (auto i : map) {\n        result.push_back(Union_std_string_long(i.first));\n        result.push_back(Union_std_string_long(i.second));\n    }\n    return result;",
    "    std::vector<Union_std_string_long> sorted_subjectmarks;\n    std::vector<Union_std_string_long>::iterator it;\n    for(it = subjectmarks.begin(); it != subjectmarks.end(); it++) {\n        if(it->f1 > 40) {\n            sorted_subjectmarks.push_back(*it);\n        }\n    }\n    return sorted_subjectmarks;",
    "    std::vector<Union_std_string_long> result;\n    std::vector<Union_std_string_long>::iterator it;\n    std::vector<Union_std_string_long>::iterator it1;\n    std::vector<Union_std_string_long>::iterator it2;\n    std::vector<Union_std_string_long>::iterator it3;\n    std::vector<Union_std_string_long>::iterator it4;\n    std::vector<Union_std_string_long>::iterator it5;\n    std::vector<Union_std_string_long>::iterator it6;\n    std::vector<Union_std_string_long>::iterator it7;\n    std::vector<Union_std_string_long>::iterator it8;\n    std::vector<Union_std_string_long>::iterator it9;\n    std::vector<Union_std_string_long>::iterator it10;\n    std::vector<Union_std_string_long>::iterator it11;\n    std::vector<Union_std_string_long>::iterator it12;\n    std::vector<Union_std_string_long>::iterator it13;\n    std::vector<Union_std_string_long>::iterator it14;\n    std::vector<Union_std_string_long>::iterator it15;\n    std::vector<Union_std_string_long>::iterator it16;\n    std::vector<Union_std_string_long>::iterator it17;\n    std::vector<Union_std_string_long>::iterator it18;\n    std::vector<Union_std_string_long>::iterator it19;\n    std::vector<Union_std_string_long>::iterator it20;\n    std::vector<Union_std_string_long>::iterator it21;\n    std::vector<Union_std_string_long>::iterator it22;\n    std::vector<Union_std_string_long>::iterator it23;\n    std::vector<Union_std_string_long>::iterator it24;\n    std::vector<Union_std_string_long>::iterator it25;\n    std",
    "    std::vector<Union_std_string_long> result;\n    std::vector<Union_std_string_long> subjectmarks_copy = subjectmarks;\n    std::sort(subjectmarks_copy.begin(), subjectmarks_copy.end(), [](Union_std_string_long a, Union_std_string_long b) {\n        return a.f1 < b.f1;\n    });\n    for (auto i : subjectmarks_copy) {\n        result.push_back(i);\n    }\n    return result;",
    "    std::vector<Union_std_string_long> sorted_subject_marks;\n    std::vector<Union_std_string_long>::iterator it;\n    std::vector<Union_std_string_long>::iterator it1;\n    std::vector<Union_std_string_long>::iterator it2;\n    std::vector<Union_std_string_long>::iterator it3;\n    std::vector<Union_std_string_long>::iterator it4;\n    std::vector<Union_std_string_long>::iterator it5;\n    std::vector<Union_std_string_long>::iterator it6;\n    std::vector<Union_std_string_long>::iterator it7;\n    std::vector<Union_std_string_long>::iterator it8;\n    std::vector<Union_std_string_long>::iterator it9;\n    std::vector<Union_std_string_long>::iterator it10;\n    std::vector<Union_std_string_long>::iterator it11;\n    std::vector<Union_std_string_long>::iterator it12;\n    std::vector<Union_std_string_long>::iterator it13;\n    std::vector<Union_std_string_long>::iterator it14;\n    std::vector<Union_std_string_long>::iterator it15;\n    std::vector<Union_std_string_long>::iterator it16;\n    std::vector<Union_std_string_long>::iterator it17;\n    std::vector<Union_std_string_long>::iterator it18;\n    std::vector<Union_std_string_long>::iterator it19;\n    std::vector<Union_std_string_long>::iterator it20;\n    std::vector<Union_std_string_long>::iterator it21;\n    std::vector<Union_std_string_long>::iterator it22;\n    std::vector<Union_std_string_long>::iterator it23;\n    std::vector<Union_std_string_long>::iterator it24;\n    std::vector<Union_std_string_long>::iterator it25",
    "    std::vector<Union_std_string_long> result;\n    std::vector<Union_std_string_long>::iterator it;\n    for (it = subjectmarks.begin(); it != subjectmarks.end(); it++) {\n        if (it->f1 >= 50) {\n            result.push_back(*it);\n        }\n    }\n    return result;",
    "    std::vector<Union_std_string_long> result;\n    std::sort(subjectmarks.begin(), subjectmarks.end(), [](Union_std_string_long a, Union_std_string_long b) {\n        return a.f1 < b.f1;\n    });\n    for (auto i : subjectmarks) {\n        result.push_back(i);\n    }\n    return result;",
    "    std::vector<Union_std_string_long> result;\n    std::vector<Union_std_string_long>::iterator it;\n    for(it = subjectmarks.begin(); it != subjectmarks.end(); it++) {\n        if(it->f0 == \"Maths\") {\n            result.push_back(Union_std_string_long(it->f1));\n        }\n    }\n    return result;",
    "    std::vector<Union_std_string_long> sorted_subject_marks;\n    std::sort(subjectmarks.begin(), subjectmarks.end(), [](Union_std_string_long a, Union_std_string_long b) {\n        return a.f1 < b.f1;\n    });\n    for (auto i : subjectmarks) {\n        if (i.f0 == \"\") {\n            sorted_subject_marks.push_back(i.f1);\n        } else {\n            sorted_subject_marks.push_back(i.f0);\n        }\n    }\n    return sorted_subject_marks;",
    "    std::vector<Union_std_string_long> sorted_subject_marks;\n    std::sort(subjectmarks.begin(), subjectmarks.end(), [](Union_std_string_long a, Union_std_string_long b) {\n        return a.f1 < b.f1;\n    });\n    return subjectmarks;",
    "    std::vector<Union_std_string_long> result;\n    std::vector<Union_std_string_long>::iterator it;\n    std::vector<Union_std_string_long>::iterator it1;\n    std::vector<Union_std_string_long>::iterator it2;\n    std::vector<Union_std_string_long>::iterator it3;\n    std::vector<Union_std_string_long>::iterator it4;\n    std::vector<Union_std_string_long>::iterator it5;\n    std::vector<Union_std_string_long>::iterator it6;\n    std::vector<Union_std_string_long>::iterator it7;\n    std::vector<Union_std_string_long>::iterator it8;\n    std::vector<Union_std_string_long>::iterator it9;\n    std::vector<Union_std_string_long>::iterator it10;\n    std::vector<Union_std_string_long>::iterator it11;\n    std::vector<Union_std_string_long>::iterator it12;\n    std::vector<Union_std_string_long>::iterator it13;\n    std::vector<Union_std_string_long>::iterator it14;\n    std::vector<Union_std_string_long>::iterator it15;\n    std::vector<Union_std_string_long>::iterator it16;\n    std::vector<Union_std_string_long>::iterator it17;\n    std::vector<Union_std_string_long>::iterator it18;\n    std::vector<Union_std_string_long>::iterator it19;\n    std::vector<Union_std_string_long>::iterator it20;\n    std::vector<Union_std_string_long>::iterator it21;\n    std::vector<Union_std_string_long>::iterator it22;\n    std::vector<Union_std_string_long>::iterator it23;\n    std::vector<Union_std_string_long>::iterator it24;\n    std::vector<Union_std_string_long>::iterator it25;\n    std",
    "    std::vector<Union_std_string_long> result;\n    std::map<std::string, long> map;\n    for (auto i : subjectmarks) {\n        if (i.f0 == i.f0) {\n            map[i.f0] = i.f1;\n        }\n    }\n    for (auto i : map) {\n        result.push_back(Union_std_string_long(i.first));\n        result.push_back(Union_std_string_long(i.second));\n    }\n    return result;",
    "    std::vector<Union_std_string_long> result;\n    std::vector<Union_std_string_long>::iterator it;\n    for(it = subjectmarks.begin(); it != subjectmarks.end(); it++) {\n        if(it->f0 == \"Maths\") {\n            result.push_back(*it);\n        }\n    }\n    for(it = subjectmarks.begin(); it != subjectmarks.end(); it++) {\n        if(it->f0 == \"Science\") {\n            result.push_back(*it);\n        }\n    }\n    for(it = subjectmarks.begin(); it != subjectmarks.end(); it++) {\n        if(it->f0 == \"English\") {\n            result.push_back(*it);\n        }\n    }\n    return result;",
    "    std::vector<Union_std_string_long> sorted_subjectmarks;\n    std::vector<Union_std_string_long>::iterator it;\n    for (it = subjectmarks.begin(); it != subjectmarks.end(); ++it) {\n        if (it->f1 < 60) {\n            sorted_subjectmarks.push_back(*it);\n        }\n    }\n    for (it = subjectmarks.begin(); it != subjectmarks.end(); ++it) {\n        if (it->f1 >= 60) {\n            sorted_subjectmarks.push_back(*it);\n        }\n    }\n    return sorted_subjectmarks;",
    "    std::vector<Union_std_string_long> result;\n    std::sort(subjectmarks.begin(), subjectmarks.end(), [](Union_std_string_long a, Union_std_string_long b) {\n        return a.f1 < b.f1;\n    });\n    for (auto i : subjectmarks) {\n        result.push_back(i);\n    }\n    return result;",
    "    std::vector<Union_std_string_long> result;\n    std::vector<Union_std_string_long>::iterator it;\n    for(it = subjectmarks.begin(); it != subjectmarks.end(); it++) {\n        if(it->f0 == \"Maths\") {\n            result.push_back(*it);\n        }\n    }\n    for(it = subjectmarks.begin(); it != subjectmarks.end(); it++) {\n        if(it->f0 == \"Science\") {\n            result.push_back(*it);\n        }\n    }\n    for(it = subjectmarks.begin(); it != subjectmarks.end(); it++) {\n        if(it->f0 == \"English\") {\n            result.push_back(*it);\n        }\n    }\n    return result;",
    "    std::vector<Union_std_string_long> result;\n    std::vector<Union_std_string_long>::iterator it;\n    std::vector<Union_std_string_long>::iterator it1;\n    std::vector<Union_std_string_long>::iterator it2;\n    std::vector<Union_std_string_long>::iterator it3;\n    std::vector<Union_std_string_long>::iterator it4;\n    std::vector<Union_std_string_long>::iterator it5;\n    std::vector<Union_std_string_long>::iterator it6;\n    std::vector<Union_std_string_long>::iterator it7;\n    std::vector<Union_std_string_long>::iterator it8;\n    std::vector<Union_std_string_long>::iterator it9;\n    std::vector<Union_std_string_long>::iterator it10;\n    std::vector<Union_std_string_long>::iterator it11;\n    std::vector<Union_std_string_long>::iterator it12;\n    std::vector<Union_std_string_long>::iterator it13;\n    std::vector<Union_std_string_long>::iterator it14;\n    std::vector<Union_std_string_long>::iterator it15;\n    std::vector<Union_std_string_long>::iterator it16;\n    std::vector<Union_std_string_long>::iterator it17;\n    std::vector<Union_std_string_long>::iterator it18;\n    std::vector<Union_std_string_long>::iterator it19;\n    std::vector<Union_std_string_long>::iterator it20;\n    std::vector<Union_std_string_long>::iterator it21;\n    std::vector<Union_std_string_long>::iterator it22;\n    std::vector<Union_std_string_long>::iterator it23;\n    std::vector<Union_std_string_long>::iterator it24;\n    std::vector<Union_std_string_long>::iterator it25;\n    std",
    "    std::vector<Union_std_string_long> sorted_subjectmarks;\n    std::vector<Union_std_string_long>::iterator it;\n    std::vector<Union_std_string_long>::iterator it1;\n    std::vector<Union_std_string_long>::iterator it2;\n    std::vector<Union_std_string_long>::iterator it3;\n    std::vector<Union_std_string_long>::iterator it4;\n    std::vector<Union_std_string_long>::iterator it5;\n    std::vector<Union_std_string_long>::iterator it6;\n    std::vector<Union_std_string_long>::iterator it7;\n    std::vector<Union_std_string_long>::iterator it8;\n    std::vector<Union_std_string_long>::iterator it9;\n    std::vector<Union_std_string_long>::iterator it10;\n    std::vector<Union_std_string_long>::iterator it11;\n    std::vector<Union_std_string_long>::iterator it12;\n    std::vector<Union_std_string_long>::iterator it13;\n    std::vector<Union_std_string_long>::iterator it14;\n    std::vector<Union_std_string_long>::iterator it15;\n    std::vector<Union_std_string_long>::iterator it16;\n    std::vector<Union_std_string_long>::iterator it17;\n    std::vector<Union_std_string_long>::iterator it18;\n    std::vector<Union_std_string_long>::iterator it19;\n    std::vector<Union_std_string_long>::iterator it20;\n    std::vector<Union_std_string_long>::iterator it21;\n    std::vector<Union_std_string_long>::iterator it22;\n    std::vector<Union_std_string_long>::iterator it23;\n    std::vector<Union_std_string_long>::iterator it24;\n    std::vector<Union_std_string_long>::iterator it25;",
    "    std::vector<Union_std_string_long> result;\n    std::vector<Union_std_string_long>::iterator it;\n    for (it = subjectmarks.begin(); it != subjectmarks.end(); ++it) {\n        if (it->f0 == \"Maths\") {\n            result.push_back(*it);\n        }\n    }\n    for (it = subjectmarks.begin(); it != subjectmarks.end(); ++it) {\n        if (it->f0 == \"Science\") {\n            result.push_back(*it);\n        }\n    }\n    for (it = subjectmarks.begin(); it != subjectmarks.end(); ++it) {\n        if (it->f0 == \"English\") {\n            result.push_back(*it);\n        }\n    }\n    return result;",
    "    std::vector<Union_std_string_long> result;\n    std::sort(subjectmarks.begin(), subjectmarks.end(), [](auto a, auto b) {\n        return a.f1 < b.f1;\n    });\n    for (auto i : subjectmarks) {\n        result.push_back(i);\n    }\n    return result;",
    "    std::vector<Union_std_string_long> sorted_subjectmarks;\n    std::vector<Union_std_string_long>::iterator it;\n    std::vector<Union_std_string_long>::iterator it2;\n    std::vector<Union_std_string_long>::iterator it3;\n    std::vector<Union_std_string_long>::iterator it4;\n    std::vector<Union_std_string_long>::iterator it5;\n    std::vector<Union_std_string_long>::iterator it6;\n    std::vector<Union_std_string_long>::iterator it7;\n    std::vector<Union_std_string_long>::iterator it8;\n    std::vector<Union_std_string_long>::iterator it9;\n    std::vector<Union_std_string_long>::iterator it10;\n    std::vector<Union_std_string_long>::iterator it11;\n    std::vector<Union_std_string_long>::iterator it12;\n    std::vector<Union_std_string_long>::iterator it13;\n    std::vector<Union_std_string_long>::iterator it14;\n    std::vector<Union_std_string_long>::iterator it15;\n    std::vector<Union_std_string_long>::iterator it16;\n    std::vector<Union_std_string_long>::iterator it17;\n    std::vector<Union_std_string_long>::iterator it18;\n    std::vector<Union_std_string_long>::iterator it19;\n    std::vector<Union_std_string_long>::iterator it20;\n    std::vector<Union_std_string_long>::iterator it21;\n    std::vector<Union_std_string_long>::iterator it22;\n    std::vector<Union_std_string_long>::iterator it23;\n    std::vector<Union_std_string_long>::iterator it24;\n    std::vector<Union_std_string_long>::iterator it25;\n    std::vector<Union_std_string_long>::iterator it26;",
    "    std::vector<Union_std_string_long> res;\n    std::vector<Union_std_string_long> res1;\n    std::vector<Union_std_string_long> res2;\n    std::vector<Union_std_string_long> res3;\n    std::vector<Union_std_string_long> res4;\n    std::vector<Union_std_string_long> res5;\n    std::vector<Union_std_string_long> res6;\n    std::vector<Union_std_string_long> res7;\n    std::vector<Union_std_string_long> res8;\n    std::vector<Union_std_string_long> res9;\n    std::vector<Union_std_string_long> res10;\n    std::vector<Union_std_string_long> res11;\n    std::vector<Union_std_string_long> res12;\n    std::vector<Union_std_string_long> res13;\n    std::vector<Union_std_string_long> res14;\n    std::vector<Union_std_string_long> res15;\n    std::vector<Union_std_string_long> res16;\n    std::vector<Union_std_string_long> res17;\n    std::vector<Union_std_string_long> res18;\n    std::vector<Union_std_string_long> res19;\n    std::vector<Union_std_string_long> res20;\n    std::vector<Union_std_string_long> res21;\n    std::vector<Union_std_string_long> res22;\n    std::vector<Union_std_string_long> res23;\n    std::vector<Union_std_string_long> res24;\n    std::vector<Union_std_string_long> res25;\n    std::vector<Union_std_string_long> res26;\n    std::vector<Union_std_string_long> res27;\n    std::vector<Union_std_string_long> res28;\n    std::vector<Union_std_string_long> res29;\n    std",
    "    std::vector<Union_std_string_long> result;\n    std::vector<Union_std_string_long>::iterator it;\n    std::vector<Union_std_string_long>::iterator it2;\n    std::vector<Union_std_string_long>::iterator it3;\n    std::vector<Union_std_string_long>::iterator it4;\n    std::vector<Union_std_string_long>::iterator it5;\n    std::vector<Union_std_string_long>::iterator it6;\n    std::vector<Union_std_string_long>::iterator it7;\n    std::vector<Union_std_string_long>::iterator it8;\n    std::vector<Union_std_string_long>::iterator it9;\n    std::vector<Union_std_string_long>::iterator it10;\n    std::vector<Union_std_string_long>::iterator it11;\n    std::vector<Union_std_string_long>::iterator it12;\n    std::vector<Union_std_string_long>::iterator it13;\n    std::vector<Union_std_string_long>::iterator it14;\n    std::vector<Union_std_string_long>::iterator it15;\n    std::vector<Union_std_string_long>::iterator it16;\n    std::vector<Union_std_string_long>::iterator it17;\n    std::vector<Union_std_string_long>::iterator it18;\n    std::vector<Union_std_string_long>::iterator it19;\n    std::vector<Union_std_string_long>::iterator it20;\n    std::vector<Union_std_string_long>::iterator it21;\n    std::vector<Union_std_string_long>::iterator it22;\n    std::vector<Union_std_string_long>::iterator it23;\n    std::vector<Union_std_string_long>::iterator it24;\n    std::vector<Union_std_string_long>::iterator it25;\n    std::vector<Union_std_string_long>::iterator it26;\n    std",
    "    std::vector<Union_std_string_long> result;\n    std::map<std::string, long> map;\n    for (auto i : subjectmarks) {\n        if (i.f0 == \"\") {\n            map[i.f0] = i.f1;\n        } else {\n            map[i.f0] = i.f1;\n        }\n    }\n    for (auto i : map) {\n        result.push_back(Union_std_string_long(i.first));\n        result.push_back(Union_std_string_long(i.second));\n    }\n    return result;",
    "    std::vector<Union_std_string_long> result;\n    std::vector<Union_std_string_long>::iterator it;\n    for(it = subjectmarks.begin(); it != subjectmarks.end(); it++) {\n        if(it->f1 >= 40) {\n            result.push_back(*it);\n        }\n    }\n    return result;",
    "    std::vector<Union_std_string_long> result;\n    std::vector<Union_std_string_long> temp;\n    for (int i = 0; i < subjectmarks.size(); i++) {\n        if (subjectmarks[i].f0 == \"Maths\") {\n            temp.push_back(subjectmarks[i]);\n        }\n    }\n    for (int i = 0; i < subjectmarks.size(); i++) {\n        if (subjectmarks[i].f0 == \"Science\") {\n            temp.push_back(subjectmarks[i]);\n        }\n    }\n    for (int i = 0; i < subjectmarks.size(); i++) {\n        if (subjectmarks[i].f0 == \"English\") {\n            temp.push_back(subjectmarks[i]);\n        }\n    }\n    for (int i = 0; i < subjectmarks.size(); i++) {\n        if (subjectmarks[i].f0 == \"History\") {\n            temp.push_back(subjectmarks[i]);\n        }\n    }\n    for (int i = 0; i < subjectmarks.size(); i++) {\n        if (subjectmarks[i].f0 == \"Geography\") {\n            temp.push_back(subjectmarks[i]);\n        }\n    }\n    for (int i = 0; i < subjectmarks.size(); i++) {\n        if (subjectmarks[i].f0 == \"Computer\") {\n            temp.push_back(subjectmarks[i]);\n        }\n    }\n    for (int i = 0; i < subjectmarks.size(); i++) {\n        if (subjectmarks[i].f0 == \"Biology\") {\n            temp.push_back(subjectmarks[i]);\n        }\n    }\n    for (int i = 0; i < subjectmarks.size(); i++) {\n        if (subjectmarks[i].f0 == \"Physics\") {\n            temp.push_back(subjectmarks[i]);\n        }\n    }\n    for (int i = 0; i < subjectmarks.size(); i++) {\n        if (subjectmarks[i].f0 == \"Chemistry\") {\n            temp.push_back(",
    "    std::vector<Union_std_string_long> result;\n    std::sort(subjectmarks.begin(), subjectmarks.end(), [](Union_std_string_long a, Union_std_string_long b) {\n        return a.f1 < b.f1;\n    });\n    for (auto i : subjectmarks) {\n        result.push_back(i);\n    }\n    return result;",
    "    std::vector<Union_std_string_long> result;\n    std::vector<Union_std_string_long>::iterator it;\n    for(it = subjectmarks.begin(); it != subjectmarks.end(); it++) {\n        if(it->f1 >= 40) {\n            result.push_back(*it);\n        }\n    }\n    return result;",
    "    std::vector<Union_std_string_long> result;\n    std::vector<Union_std_string_long>::iterator it;\n    std::vector<Union_std_string_long>::iterator it1;\n    std::vector<Union_std_string_long>::iterator it2;\n    for(it = subjectmarks.begin(); it != subjectmarks.end(); it++) {\n        if(it->f0 == \"maths\") {\n            result.push_back(*it);\n        }\n    }\n    for(it = subjectmarks.begin(); it != subjectmarks.end(); it++) {\n        if(it->f0 == \"physics\") {\n            result.push_back(*it);\n        }\n    }\n    for(it = subjectmarks.begin(); it != subjectmarks.end(); it++) {\n        if(it->f0 == \"chemistry\") {\n            result.push_back(*it);\n        }\n    }\n    for(it = subjectmarks.begin(); it != subjectmarks.end(); it++) {\n        if(it->f0 == \"english\") {\n            result.push_back(*it);\n        }\n    }\n    for(it = subjectmarks.begin(); it != subjectmarks.end(); it++) {\n        if(it->f0 == \"hindi\") {\n            result.push_back(*it);\n        }\n    }\n    for(it = subjectmarks.begin(); it != subjectmarks.end(); it++) {\n        if(it->f0 == \"computer\") {\n            result.push_back(*it);\n        }\n    }\n    for(it = subjectmarks.begin(); it != subjectmarks.end(); it++) {\n        if(it->f0 == \"history\") {\n            result.push_back(*it);\n        }\n    }\n    for(it = subjectmarks.begin(); it != subjectmarks.end(); it++) {\n        if(it->f0 == \"geography\") {\n            result.push_back(*it);\n        }\n    }\n    for(it = subjectmarks.begin(); it != subjectmarks.end(); it++) {\n        if(it->f0 == \"economics\")",
    "    std::vector<Union_std_string_long> result;\n    std::vector<Union_std_string_long>::iterator it;\n    std::vector<Union_std_string_long>::iterator it1;\n    std::vector<Union_std_string_long>::iterator it2;\n    std::vector<Union_std_string_long>::iterator it3;\n    std::vector<Union_std_string_long>::iterator it4;\n    std::vector<Union_std_string_long>::iterator it5;\n    std::vector<Union_std_string_long>::iterator it6;\n    std::vector<Union_std_string_long>::iterator it7;\n    std::vector<Union_std_string_long>::iterator it8;\n    std::vector<Union_std_string_long>::iterator it9;\n    std::vector<Union_std_string_long>::iterator it10;\n    std::vector<Union_std_string_long>::iterator it11;\n    std::vector<Union_std_string_long>::iterator it12;\n    std::vector<Union_std_string_long>::iterator it13;\n    std::vector<Union_std_string_long>::iterator it14;\n    std::vector<Union_std_string_long>::iterator it15;\n    std::vector<Union_std_string_long>::iterator it16;\n    std::vector<Union_std_string_long>::iterator it17;\n    std::vector<Union_std_string_long>::iterator it18;\n    std::vector<Union_std_string_long>::iterator it19;\n    std::vector<Union_std_string_long>::iterator it20;\n    std::vector<Union_std_string_long>::iterator it21;\n    std::vector<Union_std_string_long>::iterator it22;\n    std::vector<Union_std_string_long>::iterator it23;\n    std::vector<Union_std_string_long>::iterator it24;\n    std::vector<Union_std_string_long>::iterator it25;\n    std",
    "    std::vector<Union_std_string_long> result;\n    std::sort(subjectmarks.begin(), subjectmarks.end(), [](Union_std_string_long a, Union_std_string_long b) {\n        return a.f1 < b.f1;\n    });\n    return subjectmarks;",
    "    std::vector<Union_std_string_long> sorted_subjectmarks;\n    std::vector<Union_std_string_long> sorted_subjectmarks_1;\n    std::vector<Union_std_string_long> sorted_subjectmarks_2;\n    for(auto i : subjectmarks) {\n        if(i == \"Maths\") {\n            sorted_subjectmarks_1.push_back(i);\n        } else {\n            sorted_subjectmarks_2.push_back(i);\n        }\n    }\n    sorted_subjectmarks.insert(sorted_subjectmarks.end(), sorted_subjectmarks_1.begin(), sorted_subjectmarks_1.end());\n    sorted_subjectmarks.insert(sorted_subjectmarks.end(), sorted_subjectmarks_2.begin(), sorted_subjectmarks_2.end());\n    return sorted_subjectmarks;",
    "    std::vector<Union_std_string_long> result;\n    std::vector<Union_std_string_long>::iterator it;\n    for(it = subjectmarks.begin(); it != subjectmarks.end(); it++) {\n        if((*it).f0 == \"Maths\") {\n            result.push_back(*it);\n        }\n    }\n    for(it = subjectmarks.begin(); it != subjectmarks.end(); it++) {\n        if((*it).f0 == \"Science\") {\n            result.push_back(*it);\n        }\n    }\n    for(it = subjectmarks.begin(); it != subjectmarks.end(); it++) {\n        if((*it).f0 == \"English\") {\n            result.push_back(*it);\n        }\n    }\n    return result;",
    "    std::vector<Union_std_string_long> result;\n    std::vector<Union_std_string_long> temp;\n    for (int i = 0; i < subjectmarks.size(); i++) {\n        if (subjectmarks[i] == \"Maths\") {\n            temp.push_back(subjectmarks[i]);\n        }\n    }\n    for (int i = 0; i < subjectmarks.size(); i++) {\n        if (subjectmarks[i] == \"Science\") {\n            temp.push_back(subjectmarks[i]);\n        }\n    }\n    for (int i = 0; i < subjectmarks.size(); i++) {\n        if (subjectmarks[i] == \"English\") {\n            temp.push_back(subjectmarks[i]);\n        }\n    }\n    for (int i = 0; i < subjectmarks.size(); i++) {\n        if (subjectmarks[i] == \"History\") {\n            temp.push_back(subjectmarks[i]);\n        }\n    }\n    for (int i = 0; i < subjectmarks.size(); i++) {\n        if (subjectmarks[i] == \"Geography\") {\n            temp.push_back(subjectmarks[i]);\n        }\n    }\n    for (int i = 0; i < subjectmarks.size(); i++) {\n        if (subjectmarks[i] == \"Computer\") {\n            temp.push_back(subjectmarks[i]);\n        }\n    }\n    for (int i = 0; i < subjectmarks.size(); i++) {\n        if (subjectmarks[i] == \"Biology\") {\n            temp.push_back(subjectmarks[i]);\n        }\n    }\n    for (int i = 0; i < subjectmarks.size(); i++) {\n        if (subjectmarks[i] == \"Physics\") {\n            temp.push_back(subjectmarks[i]);\n        }\n    }\n    for (int i = 0; i < subjectmarks.size(); i++) {\n        if (subjectmarks[i] == \"Chemistry\") {\n            temp.push_back(subjectmarks[i]);\n        }\n    }\n    for (int i =",
    "    std::vector<Union_std_string_long> result;\n    std::vector<Union_std_string_long>::iterator it;\n    std::vector<Union_std_string_long>::iterator it1;\n    std::vector<Union_std_string_long>::iterator it2;\n    std::vector<Union_std_string_long>::iterator it3;\n    std::vector<Union_std_string_long>::iterator it4;\n    std::vector<Union_std_string_long>::iterator it5;\n    std::vector<Union_std_string_long>::iterator it6;\n    std::vector<Union_std_string_long>::iterator it7;\n    std::vector<Union_std_string_long>::iterator it8;\n    std::vector<Union_std_string_long>::iterator it9;\n    std::vector<Union_std_string_long>::iterator it10;\n    std::vector<Union_std_string_long>::iterator it11;\n    std::vector<Union_std_string_long>::iterator it12;\n    std::vector<Union_std_string_long>::iterator it13;\n    std::vector<Union_std_string_long>::iterator it14;\n    std::vector<Union_std_string_long>::iterator it15;\n    std::vector<Union_std_string_long>::iterator it16;\n    std::vector<Union_std_string_long>::iterator it17;\n    std::vector<Union_std_string_long>::iterator it18;\n    std::vector<Union_std_string_long>::iterator it19;\n    std::vector<Union_std_string_long>::iterator it20;\n    std::vector<Union_std_string_long>::iterator it21;\n    std::vector<Union_std_string_long>::iterator it22;\n    std::vector<Union_std_string_long>::iterator it23;\n    std::vector<Union_std_string_long>::iterator it24;\n    std::vector<Union_std_string_long>::iterator it25;\n    std",
    "    std::vector<Union_std_string_long> result;\n    std::vector<Union_std_string_long> sorted_marks;\n    std::vector<Union_std_string_long> sorted_subjects;\n    std::vector<Union_std_string_long> marks;\n    std::vector<Union_std_string_long> subjects;\n    for (int i = 0; i < subjectmarks.size(); i++) {\n        if (subjectmarks[i].f0 == \"\") {\n            marks.push_back(subjectmarks[i]);\n        } else {\n            subjects.push_back(subjectmarks[i]);\n        }\n    }\n    for (int i = 0; i < marks.size(); i++) {\n        for (int j = i + 1; j < marks.size(); j++) {\n            if (marks[i].f1 > marks[j].f1) {\n                Union_std_string_long temp = marks[i];\n                marks[i] = marks[j];\n                marks[j] = temp;\n            }\n        }\n    }\n    for (int i = 0; i < marks.size(); i++) {\n        sorted_marks.push_back(marks[i]);\n    }\n    for (int i = 0; i < subjects.size(); i++) {\n        for (int j = i + 1; j < subjects.size(); j++) {\n            if (subjects[i].f1 > subjects[j].f1) {\n                Union_std_string_long temp = subjects[i];\n                subjects[i] = subjects[j];\n                subjects[j] = temp;\n            }\n        }\n    }\n    for (int i = 0; i < subjects.size(); i++) {\n        sorted_subjects.push_back(subjects[i]);\n    }\n    for (int i = 0; i < sorted_marks.size(); i++) {\n        result.push_back(sorted_marks[i]);\n        result.push_back(sorted_subjects[i]);\n    }\n    return result;",
    "    std::vector<Union_std_string_long> result;\n    std::vector<Union_std_string_long>::iterator it;\n    std::vector<Union_std_string_long>::iterator it2;\n    std::vector<Union_std_string_long>::iterator it3;\n    std::vector<Union_std_string_long>::iterator it4;\n    std::vector<Union_std_string_long>::iterator it5;\n    std::vector<Union_std_string_long>::iterator it6;\n    std::vector<Union_std_string_long>::iterator it7;\n    std::vector<Union_std_string_long>::iterator it8;\n    std::vector<Union_std_string_long>::iterator it9;\n    std::vector<Union_std_string_long>::iterator it10;\n    std::vector<Union_std_string_long>::iterator it11;\n    std::vector<Union_std_string_long>::iterator it12;\n    std::vector<Union_std_string_long>::iterator it13;\n    std::vector<Union_std_string_long>::iterator it14;\n    std::vector<Union_std_string_long>::iterator it15;\n    std::vector<Union_std_string_long>::iterator it16;\n    std::vector<Union_std_string_long>::iterator it17;\n    std::vector<Union_std_string_long>::iterator it18;\n    std::vector<Union_std_string_long>::iterator it19;\n    std::vector<Union_std_string_long>::iterator it20;\n    std::vector<Union_std_string_long>::iterator it21;\n    std::vector<Union_std_string_long>::iterator it22;\n    std::vector<Union_std_string_long>::iterator it23;\n    std::vector<Union_std_string_long>::iterator it24;\n    std::vector<Union_std_string_long>::iterator it25;\n    std::vector<Union_std_string_long>::iterator it26;\n    std",
    "    std::vector<Union_std_string_long> result;\n    std::vector<Union_std_string_long>::iterator it;\n    std::vector<Union_std_string_long>::iterator it1;\n    std::vector<Union_std_string_long>::iterator it2;\n    std::vector<Union_std_string_long>::iterator it3;\n    std::vector<Union_std_string_long>::iterator it4;\n    std::vector<Union_std_string_long>::iterator it5;\n    std::vector<Union_std_string_long>::iterator it6;\n    std::vector<Union_std_string_long>::iterator it7;\n    std::vector<Union_std_string_long>::iterator it8;\n    std::vector<Union_std_string_long>::iterator it9;\n    std::vector<Union_std_string_long>::iterator it10;\n    std::vector<Union_std_string_long>::iterator it11;\n    std::vector<Union_std_string_long>::iterator it12;\n    std::vector<Union_std_string_long>::iterator it13;\n    std::vector<Union_std_string_long>::iterator it14;\n    std::vector<Union_std_string_long>::iterator it15;\n    std::vector<Union_std_string_long>::iterator it16;\n    std::vector<Union_std_string_long>::iterator it17;\n    std::vector<Union_std_string_long>::iterator it18;\n    std::vector<Union_std_string_long>::iterator it19;\n    std::vector<Union_std_string_long>::iterator it20;\n    std::vector<Union_std_string_long>::iterator it21;\n    std::vector<Union_std_string_long>::iterator it22;\n    std::vector<Union_std_string_long>::iterator it23;\n    std::vector<Union_std_string_long>::iterator it24;\n    std::vector<Union_std_string_long>::iterator it25;\n    std",
    "    std::vector<Union_std_string_long> result;\n    std::vector<Union_std_string_long>::iterator it;\n    for(it = subjectmarks.begin(); it != subjectmarks.end(); ++it) {\n        if(it->f1 >= 50) {\n            result.push_back(*it);\n        }\n    }\n    return result;",
    "    std::vector<Union_std_string_long> result;\n    std::vector<Union_std_string_long>::iterator it;\n    for(it = subjectmarks.begin(); it != subjectmarks.end(); it++) {\n        if(it->f1 >= 40) {\n            result.push_back(*it);\n        }\n    }\n    return result;",
    "    std::vector<Union_std_string_long> result;\n    std::vector<Union_std_string_long>::iterator it;\n    for(it = subjectmarks.begin(); it != subjectmarks.end(); it++) {\n        if(it->f0 == \"Maths\") {\n            result.push_back(*it);\n        }\n    }\n    for(it = subjectmarks.begin(); it != subjectmarks.end(); it++) {\n        if(it->f0 == \"Physics\") {\n            result.push_back(*it);\n        }\n    }\n    for(it = subjectmarks.begin(); it != subjectmarks.end(); it++) {\n        if(it->f0 == \"Chemistry\") {\n            result.push_back(*it);\n        }\n    }\n    return result;",
    "    std::vector<Union_std_string_long> result;\n    std::vector<Union_std_string_long>::iterator it;\n    for (it = subjectmarks.begin(); it != subjectmarks.end(); it++) {\n        if (it->f0 == \"Maths\") {\n            result.push_back(*it);\n        }\n    }\n    for (it = subjectmarks.begin(); it != subjectmarks.end(); it++) {\n        if (it->f0 == \"Science\") {\n            result.push_back(*it);\n        }\n    }\n    for (it = subjectmarks.begin(); it != subjectmarks.end(); it++) {\n        if (it->f0 == \"English\") {\n            result.push_back(*it);\n        }\n    }\n    return result;",
    "    std::vector<Union_std_string_long> result;\n    std::vector<Union_std_string_long>::iterator it;\n    std::vector<Union_std_string_long>::iterator it1;\n    std::vector<Union_std_string_long>::iterator it2;\n    std::vector<Union_std_string_long>::iterator it3;\n    std::vector<Union_std_string_long>::iterator it4;\n    std::vector<Union_std_string_long>::iterator it5;\n    std::vector<Union_std_string_long>::iterator it6;\n    std::vector<Union_std_string_long>::iterator it7;\n    std::vector<Union_std_string_long>::iterator it8;\n    std::vector<Union_std_string_long>::iterator it9;\n    std::vector<Union_std_string_long>::iterator it10;\n    std::vector<Union_std_string_long>::iterator it11;\n    std::vector<Union_std_string_long>::iterator it12;\n    std::vector<Union_std_string_long>::iterator it13;\n    std::vector<Union_std_string_long>::iterator it14;\n    std::vector<Union_std_string_long>::iterator it15;\n    std::vector<Union_std_string_long>::iterator it16;\n    std::vector<Union_std_string_long>::iterator it17;\n    std::vector<Union_std_string_long>::iterator it18;\n    std::vector<Union_std_string_long>::iterator it19;\n    std::vector<Union_std_string_long>::iterator it20;\n    std::vector<Union_std_string_long>::iterator it21;\n    std::vector<Union_std_string_long>::iterator it22;\n    std::vector<Union_std_string_long>::iterator it23;\n    std::vector<Union_std_string_long>::iterator it24;\n    std::vector<Union_std_string_long>::iterator it25;\n    std",
    "    std::vector<Union_std_string_long> result;\n    std::vector<Union_std_string_long>::iterator it;\n    for(it = subjectmarks.begin(); it != subjectmarks.end(); it++) {\n        if(it->f0 == \"Maths\") {\n            result.push_back(Union_std_string_long(it->f1));\n        }\n    }\n    return result;",
    "    std::vector<Union_std_string_long> sorted_subject_marks;\n    std::sort(subjectmarks.begin(), subjectmarks.end(), [](Union_std_string_long a, Union_std_string_long b) {\n        return a.f1 < b.f1;\n    });\n    for (auto i = subjectmarks.begin(); i != subjectmarks.end(); i++) {\n        sorted_subject_marks.push_back(*i);\n    }\n    return sorted_subject_marks;",
    "    std::vector<Union_std_string_long> result;\n    std::vector<Union_std_string_long>::iterator it;\n    std::vector<Union_std_string_long>::iterator it1;\n    std::vector<Union_std_string_long>::iterator it2;\n    std::vector<Union_std_string_long>::iterator it3;\n    std::vector<Union_std_string_long>::iterator it4;\n    std::vector<Union_std_string_long>::iterator it5;\n    std::vector<Union_std_string_long>::iterator it6;\n    std::vector<Union_std_string_long>::iterator it7;\n    std::vector<Union_std_string_long>::iterator it8;\n    std::vector<Union_std_string_long>::iterator it9;\n    std::vector<Union_std_string_long>::iterator it10;\n    std::vector<Union_std_string_long>::iterator it11;\n    std::vector<Union_std_string_long>::iterator it12;\n    std::vector<Union_std_string_long>::iterator it13;\n    std::vector<Union_std_string_long>::iterator it14;\n    std::vector<Union_std_string_long>::iterator it15;\n    std::vector<Union_std_string_long>::iterator it16;\n    std::vector<Union_std_string_long>::iterator it17;\n    std::vector<Union_std_string_long>::iterator it18;\n    std::vector<Union_std_string_long>::iterator it19;\n    std::vector<Union_std_string_long>::iterator it20;\n    std::vector<Union_std_string_long>::iterator it21;\n    std::vector<Union_std_string_long>::iterator it22;\n    std::vector<Union_std_string_long>::iterator it23;\n    std::vector<Union_std_string_long>::iterator it24;\n    std::vector<Union_std_string_long>::iterator it25;\n    std",
    "    std::vector<Union_std_string_long> result;\n    std::vector<Union_std_string_long>::iterator it;\n    for(it = subjectmarks.begin(); it != subjectmarks.end(); it++) {\n        if(it->f1 > 50) {\n            result.push_back(*it);\n        }\n    }\n    return result;",
    "    std::vector<Union_std_string_long> result;\n    std::vector<Union_std_string_long>::iterator it;\n    std::vector<Union_std_string_long>::iterator it1;\n    std::vector<Union_std_string_long>::iterator it2;\n    std::vector<Union_std_string_long>::iterator it3;\n    std::vector<Union_std_string_long>::iterator it4;\n    std::vector<Union_std_string_long>::iterator it5;\n    std::vector<Union_std_string_long>::iterator it6;\n    std::vector<Union_std_string_long>::iterator it7;\n    std::vector<Union_std_string_long>::iterator it8;\n    std::vector<Union_std_string_long>::iterator it9;\n    std::vector<Union_std_string_long>::iterator it10;\n    std::vector<Union_std_string_long>::iterator it11;\n    std::vector<Union_std_string_long>::iterator it12;\n    std::vector<Union_std_string_long>::iterator it13;\n    std::vector<Union_std_string_long>::iterator it14;\n    std::vector<Union_std_string_long>::iterator it15;\n    std::vector<Union_std_string_long>::iterator it16;\n    std::vector<Union_std_string_long>::iterator it17;\n    std::vector<Union_std_string_long>::iterator it18;\n    std::vector<Union_std_string_long>::iterator it19;\n    std::vector<Union_std_string_long>::iterator it20;\n    std::vector<Union_std_string_long>::iterator it21;\n    std::vector<Union_std_string_long>::iterator it22;\n    std::vector<Union_std_string_long>::iterator it23;\n    std::vector<Union_std_string_long>::iterator it24;\n    std::vector<Union_std_string_long>::iterator it25;\n    std",
    "    std::vector<Union_std_string_long> result;\n    std::sort(subjectmarks.begin(), subjectmarks.end(), [](const Union_std_string_long& a, const Union_std_string_long& b) {\n        return a.f1 < b.f1;\n    });\n    for (auto i : subjectmarks) {\n        result.push_back(i);\n    }\n    return result;",
    "    std::vector<Union_std_string_long> result;\n    std::sort(subjectmarks.begin(), subjectmarks.end(), [](Union_std_string_long a, Union_std_string_long b) {\n        return a.f1 < b.f1;\n    });\n    for (auto i : subjectmarks) {\n        result.push_back(i);\n    }\n    return result;",
    "    std::vector<Union_std_string_long> sorted_subjectmarks;\n    std::vector<Union_std_string_long> sorted_subjectmarks_temp;\n    std::vector<Union_std_string_long> sorted_subjectmarks_temp_temp;\n    std::vector<Union_std_string_long> sorted_subjectmarks_temp_temp_temp;\n    std::vector<Union_std_string_long> sorted_subjectmarks_temp_temp_temp_temp;\n    std::vector<Union_std_string_long> sorted_subjectmarks_temp_temp_temp_temp_temp;\n    std::vector<Union_std_string_long> sorted_subjectmarks_temp_temp_temp_temp_temp_temp;\n    std::vector<Union_std_string_long> sorted_subjectmarks_temp_temp_temp_temp_temp_temp_temp;\n    std::vector<Union_std_string_long> sorted_subjectmarks_temp_temp_temp_temp_temp_temp_temp_temp;\n    std::vector<Union_std_string_long> sorted_subjectmarks_temp_temp_temp_temp_temp_temp_temp_temp_temp;\n    std::vector<Union_std_string_long> sorted_subjectmarks_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp;\n    std::vector<Union_std_string_long> sorted_subjectmarks_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp;\n    std::vector<Union_std_string_long> sorted_subjectmarks_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp;\n    std::vector<Union_std_string_long> sorted_subjectmarks_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp;\n    std::vector<Union_std_string_long> sorted_subjectmarks_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp;\n    std::vector<Union_std_string_long> sorted_subject",
    "    std::vector<Union_std_string_long> result;\n    std::vector<Union_std_string_long>::iterator it;\n    for (it = subjectmarks.begin(); it != subjectmarks.end(); it++) {\n        if ((*it).f1 >= 40) {\n            result.push_back(*it);\n        }\n    }\n    return result;",
    "    std::vector<Union_std_string_long> result;\n    std::sort(subjectmarks.begin(), subjectmarks.end(), [](Union_std_string_long a, Union_std_string_long b) {\n        return a.f1 < b.f1;\n    });\n    for (auto i : subjectmarks) {\n        result.push_back(i);\n    }\n    return result;",
    "    std::vector<Union_std_string_long> result;\n    std::vector<Union_std_string_long>::iterator it;\n    std::vector<Union_std_string_long>::iterator it1;\n    std::vector<Union_std_string_long>::iterator it2;\n    std::vector<Union_std_string_long>::iterator it3;\n    std::vector<Union_std_string_long>::iterator it4;\n    std::vector<Union_std_string_long>::iterator it5;\n    std::vector<Union_std_string_long>::iterator it6;\n    std::vector<Union_std_string_long>::iterator it7;\n    std::vector<Union_std_string_long>::iterator it8;\n    std::vector<Union_std_string_long>::iterator it9;\n    std::vector<Union_std_string_long>::iterator it10;\n    std::vector<Union_std_string_long>::iterator it11;\n    std::vector<Union_std_string_long>::iterator it12;\n    std::vector<Union_std_string_long>::iterator it13;\n    std::vector<Union_std_string_long>::iterator it14;\n    std::vector<Union_std_string_long>::iterator it15;\n    std::vector<Union_std_string_long>::iterator it16;\n    std::vector<Union_std_string_long>::iterator it17;\n    std::vector<Union_std_string_long>::iterator it18;\n    std::vector<Union_std_string_long>::iterator it19;\n    std::vector<Union_std_string_long>::iterator it20;\n    std::vector<Union_std_string_long>::iterator it21;\n    std::vector<Union_std_string_long>::iterator it22;\n    std::vector<Union_std_string_long>::iterator it23;\n    std::vector<Union_std_string_long>::iterator it24;\n    std::vector<Union_std_string_long>::iterator it25;\n    std",
    "    std::vector<Union_std_string_long> sorted_subjectmarks;\n    std::map<std::string, long> subject_marks_map;\n    for (auto subjectmark : subjectmarks) {\n        if (subjectmark.f0 == \"\") {\n            subject_marks_map[subjectmark.f1] = subjectmark.f1;\n        } else {\n            subject_marks_map[subjectmark.f0] = subjectmark.f1;\n        }\n    }\n    std::map<std::string, long>::iterator it;\n    for (it = subject_marks_map.begin(); it != subject_marks_map.end(); it++) {\n        sorted_subjectmarks.push_back(Union_std_string_long(it->first));\n        sorted_subjectmarks.push_back(Union_std_string_long(it->second));\n    }\n    return sorted_subjectmarks;",
    "    std::vector<Union_std_string_long> sorted_subjectmarks;\n    std::vector<Union_std_string_long>::iterator it;\n    std::vector<Union_std_string_long>::iterator it1;\n    for(it = subjectmarks.begin(); it != subjectmarks.end(); it++) {\n        for(it1 = subjectmarks.begin(); it1 != subjectmarks.end(); it1++) {\n            if(it->f1 > it1->f1) {\n                std::swap(*it, *it1);\n            }\n        }\n    }\n    return subjectmarks;",
    "    std::vector<Union_std_string_long> result;\n    std::vector<Union_std_string_long> temp;\n    std::vector<Union_std_string_long> temp1;\n    for(int i = 0; i < subjectmarks.size(); i++) {\n        if(subjectmarks[i] == \"Maths\") {\n            temp.push_back(subjectmarks[i]);\n        } else if(subjectmarks[i] == \"Science\") {\n            temp.push_back(subjectmarks[i]);\n        } else if(subjectmarks[i] == \"English\") {\n            temp.push_back(subjectmarks[i]);\n        } else if(subjectmarks[i] == \"Hindi\") {\n            temp.push_back(subjectmarks[i]);\n        } else if(subjectmarks[i] == \"Social\") {\n            temp.push_back(subjectmarks[i]);\n        } else {\n            temp1.push_back(subjectmarks[i]);\n        }\n    }\n    for(int i = 0; i < temp.size(); i++) {\n        result.push_back(temp[i]);\n    }\n    for(int i = 0; i < temp1.size(); i++) {\n        result.push_back(temp1[i]);\n    }\n    return result;",
    "    std::vector<Union_std_string_long> sorted_subject_marks;\n    std::vector<Union_std_string_long>::iterator it;\n    std::vector<Union_std_string_long>::iterator it1;\n    for(it = subjectmarks.begin(); it != subjectmarks.end(); it++) {\n        for(it1 = it + 1; it1 != subjectmarks.end(); it1++) {\n            if(it->f1 > it1->f1) {\n                Union_std_string_long temp = *it;\n                *it = *it1;\n                *it1 = temp;\n            }\n        }\n    }\n    return subjectmarks;",
    "    std::vector<Union_std_string_long> result;\n    std::sort(subjectmarks.begin(), subjectmarks.end(), [](Union_std_string_long a, Union_std_string_long b) {\n        return a.f1 < b.f1;\n    });\n    for (auto i : subjectmarks) {\n        result.push_back(i);\n    }\n    return result;",
    "    std::sort(subjectmarks.begin(), subjectmarks.end(), [](Union_std_string_long a, Union_std_string_long b) {\n        return a.f1 < b.f1;\n    });\n    return subjectmarks;",
    "    std::vector<Union_std_string_long> result;\n    std::vector<Union_std_string_long> temp;\n    for(int i=0;i<subjectmarks.size();i++){\n        if(subjectmarks[i].f1 == \"\"){\n            result.push_back(subjectmarks[i]);\n        }\n        else{\n            temp.push_back(subjectmarks[i]);\n        }\n    }\n    std::sort(temp.begin(),temp.end(),[](Union_std_string_long a,Union_std_string_long b){\n        return a.f1 < b.f1;\n    });\n    for(int i=0;i<temp.size();i++){\n        result.push_back(temp[i]);\n    }\n    return result;",
    "    std::vector<Union_std_string_long> sorted_subjectmarks;\n    std::sort(subjectmarks.begin(), subjectmarks.end(), [](auto &a, auto &b) {\n        return a.f1 < b.f1;\n    });\n    for (auto &i : subjectmarks) {\n        if (i.f1 >= 35) {\n            sorted_subjectmarks.push_back(i);\n        }\n    }\n    return sorted_subjectmarks;",
    "    std::vector<Union_std_string_long> result;\n    std::vector<Union_std_string_long> marks;\n    std::vector<Union_std_string_long> subjects;\n    for (auto i : subjectmarks) {\n        if (i.f0 == \"\") {\n            marks.push_back(i);\n        } else {\n            subjects.push_back(i);\n        }\n    }\n    std::sort(marks.begin(), marks.end(), [](Union_std_string_long a, Union_std_string_long b) {\n        return a.f1 < b.f1;\n    });\n    for (int i = 0; i < marks.size(); i++) {\n        result.push_back(subjects[i]);\n        result.push_back(marks[i]);\n    }\n    return result;",
    "    std::vector<Union_std_string_long> result;\n    std::vector<Union_std_string_long> temp;\n    std::vector<Union_std_string_long> temp1;\n    std::vector<Union_std_string_long> temp2;\n    std::vector<Union_std_string_long> temp3;\n    std::vector<Union_std_string_long> temp4;\n    std::vector<Union_std_string_long> temp5;\n    std::vector<Union_std_string_long> temp6;\n    std::vector<Union_std_string_long> temp7;\n    std::vector<Union_std_string_long> temp8;\n    std::vector<Union_std_string_long> temp9;\n    std::vector<Union_std_string_long> temp10;\n    std::vector<Union_std_string_long> temp11;\n    std::vector<Union_std_string_long> temp12;\n    std::vector<Union_std_string_long> temp13;\n    std::vector<Union_std_string_long> temp14;\n    std::vector<Union_std_string_long> temp15;\n    std::vector<Union_std_string_long> temp16;\n    std::vector<Union_std_string_long> temp17;\n    std::vector<Union_std_string_long> temp18;\n    std::vector<Union_std_string_long> temp19;\n    std::vector<Union_std_string_long> temp20;\n    std::vector<Union_std_string_long> temp21;\n    std::vector<Union_std_string_long> temp22;\n    std::vector<Union_std_string_long> temp23;\n    std::vector<Union_std_string_long> temp24;\n    std::vector<Union_std_string_long> temp25;\n    std::vector<Union_std_string_long> temp26;\n    std::vector<Union_std_string_long> temp27;\n    std::vector<Union_std_string_long> temp28;\n    std::",
    "    std::vector<Union_std_string_long> sorted_subjectmarks;\n    std::sort(subjectmarks.begin(), subjectmarks.end(), [](Union_std_string_long a, Union_std_string_long b) {\n        return a.f1 < b.f1;\n    });\n    return subjectmarks;",
    "    std::vector<Union_std_string_long> sorted_subjectmarks;\n    std::sort(subjectmarks.begin(), subjectmarks.end(), [](Union_std_string_long a, Union_std_string_long b) {\n        return a.f1 < b.f1;\n    });\n    for (auto i : subjectmarks) {\n        sorted_subjectmarks.push_back(i);\n    }\n    return sorted_subjectmarks;",
    "    std::vector<Union_std_string_long> result;\n    std::map<std::string, long> map;\n    for (auto i : subjectmarks) {\n        map[i.f0] = i.f1;\n    }\n    for (auto i : map) {\n        result.push_back(Union_std_string_long(i.first));\n        result.push_back(Union_std_string_long(i.second));\n    }\n    return result;",
    "    std::vector<Union_std_string_long> result;\n    std::vector<Union_std_string_long>::iterator it;\n    for (it = subjectmarks.begin(); it != subjectmarks.end(); it++) {\n        if (it->f0 == \"Maths\") {\n            result.push_back(*it);\n        }\n    }\n    for (it = subjectmarks.begin(); it != subjectmarks.end(); it++) {\n        if (it->f0 == \"Science\") {\n            result.push_back(*it);\n        }\n    }\n    for (it = subjectmarks.begin(); it != subjectmarks.end(); it++) {\n        if (it->f0 == \"English\") {\n            result.push_back(*it);\n        }\n    }\n    return result;",
    "    std::vector<Union_std_string_long> result;\n    std::vector<Union_std_string_long> temp;\n    std::vector<Union_std_string_long>::iterator it;\n    std::vector<Union_std_string_long>::iterator it1;\n    std::vector<Union_std_string_long>::iterator it2;\n    std::vector<Union_std_string_long>::iterator it3;\n    std::vector<Union_std_string_long>::iterator it4;\n    std::vector<Union_std_string_long>::iterator it5;\n    std::vector<Union_std_string_long>::iterator it6;\n    std::vector<Union_std_string_long>::iterator it7;\n    std::vector<Union_std_string_long>::iterator it8;\n    std::vector<Union_std_string_long>::iterator it9;\n    std::vector<Union_std_string_long>::iterator it10;\n    std::vector<Union_std_string_long>::iterator it11;\n    std::vector<Union_std_string_long>::iterator it12;\n    std::vector<Union_std_string_long>::iterator it13;\n    std::vector<Union_std_string_long>::iterator it14;\n    std::vector<Union_std_string_long>::iterator it15;\n    std::vector<Union_std_string_long>::iterator it16;\n    std::vector<Union_std_string_long>::iterator it17;\n    std::vector<Union_std_string_long>::iterator it18;\n    std::vector<Union_std_string_long>::iterator it19;\n    std::vector<Union_std_string_long>::iterator it20;\n    std::vector<Union_std_string_long>::iterator it21;\n    std::vector<Union_std_string_long>::iterator it22;\n    std::vector<Union_std_string_long>::iterator it23;\n    std::vector<Union_std_string_long>::iterator it24;\n    std::vector<",
    "    std::vector<Union_std_string_long> result;\n    std::vector<Union_std_string_long>::iterator it;\n    for (it = subjectmarks.begin(); it != subjectmarks.end(); it++) {\n        if (it->f0 == \"Maths\" || it->f0 == \"Science\" || it->f0 == \"English\") {\n            result.push_back(*it);\n        }\n    }\n    return result;",
    "    std::vector<Union_std_string_long> sorted_subjectmarks;\n    std::vector<Union_std_string_long>::iterator it;\n    std::vector<Union_std_string_long>::iterator it1;\n    std::vector<Union_std_string_long>::iterator it2;\n    std::vector<Union_std_string_long>::iterator it3;\n    std::vector<Union_std_string_long>::iterator it4;\n    std::vector<Union_std_string_long>::iterator it5;\n    std::vector<Union_std_string_long>::iterator it6;\n    std::vector<Union_std_string_long>::iterator it7;\n    std::vector<Union_std_string_long>::iterator it8;\n    std::vector<Union_std_string_long>::iterator it9;\n    std::vector<Union_std_string_long>::iterator it10;\n    std::vector<Union_std_string_long>::iterator it11;\n    std::vector<Union_std_string_long>::iterator it12;\n    std::vector<Union_std_string_long>::iterator it13;\n    std::vector<Union_std_string_long>::iterator it14;\n    std::vector<Union_std_string_long>::iterator it15;\n    std::vector<Union_std_string_long>::iterator it16;\n    std::vector<Union_std_string_long>::iterator it17;\n    std::vector<Union_std_string_long>::iterator it18;\n    std::vector<Union_std_string_long>::iterator it19;\n    std::vector<Union_std_string_long>::iterator it20;\n    std::vector<Union_std_string_long>::iterator it21;\n    std::vector<Union_std_string_long>::iterator it22;\n    std::vector<Union_std_string_long>::iterator it23;\n    std::vector<Union_std_string_long>::iterator it24;\n    std::vector<Union_std_string_long>::iterator it25;",
    "    std::vector<Union_std_string_long> result;\n    std::vector<Union_std_string_long>::iterator it;\n    std::vector<Union_std_string_long>::iterator it1;\n    std::vector<Union_std_string_long>::iterator it2;\n    std::vector<Union_std_string_long>::iterator it3;\n    for(it = subjectmarks.begin(); it != subjectmarks.end(); it++) {\n        if(it->f0 == \"maths\") {\n            it1 = it;\n        }\n        if(it->f0 == \"physics\") {\n            it2 = it;\n        }\n        if(it->f0 == \"chemistry\") {\n            it3 = it;\n        }\n    }\n    if(it1->f1 > it2->f1 && it1->f1 > it3->f1) {\n        result.push_back(*it1);\n        if(it2->f1 > it3->f1) {\n            result.push_back(*it2);\n            result.push_back(*it3);\n        } else {\n            result.push_back(*it3);\n            result.push_back(*it2);\n        }\n    } else if(it2->f1 > it1->f1 && it2->f1 > it3->f1) {\n        result.push_back(*it2);\n        if(it1->f1 > it3->f1) {\n            result.push_back(*it1);\n            result.push_back(*it3);\n        } else {\n            result.push_back(*it3);\n            result.push_back(*it1);\n        }\n    } else if(it3->f1 > it1->f1 && it3->f1 > it2->f1) {\n        result.push_back(*it3);\n        if(it1->f1 > it2->f1) {\n            result.push_back(*it1);\n            result.push_back(*it2);\n        } else {\n            result.push_back(*it2);\n            result.push_back(*",
    "    std::vector<Union_std_string_long> result;\n    std::vector<Union_std_string_long>::iterator it;\n    std::vector<Union_std_string_long>::iterator it1;\n    std::vector<Union_std_string_long>::iterator it2;\n    std::vector<Union_std_string_long>::iterator it3;\n    std::vector<Union_std_string_long>::iterator it4;\n    std::vector<Union_std_string_long>::iterator it5;\n    std::vector<Union_std_string_long>::iterator it6;\n    std::vector<Union_std_string_long>::iterator it7;\n    std::vector<Union_std_string_long>::iterator it8;\n    std::vector<Union_std_string_long>::iterator it9;\n    std::vector<Union_std_string_long>::iterator it10;\n    std::vector<Union_std_string_long>::iterator it11;\n    std::vector<Union_std_string_long>::iterator it12;\n    std::vector<Union_std_string_long>::iterator it13;\n    std::vector<Union_std_string_long>::iterator it14;\n    std::vector<Union_std_string_long>::iterator it15;\n    std::vector<Union_std_string_long>::iterator it16;\n    std::vector<Union_std_string_long>::iterator it17;\n    std::vector<Union_std_string_long>::iterator it18;\n    std::vector<Union_std_string_long>::iterator it19;\n    std::vector<Union_std_string_long>::iterator it20;\n    std::vector<Union_std_string_long>::iterator it21;\n    std::vector<Union_std_string_long>::iterator it22;\n    std::vector<Union_std_string_long>::iterator it23;\n    std::vector<Union_std_string_long>::iterator it24;\n    std::vector<Union_std_string_long>::iterator it25;\n    std",
    "    std::vector<Union_std_string_long> sorted_subjectmarks;\n    std::sort(subjectmarks.begin(), subjectmarks.end(), [](Union_std_string_long a, Union_std_string_long b) {\n        return a.f1 < b.f1;\n    });\n    return subjectmarks;",
    "    std::vector<Union_std_string_long> result;\n    std::vector<Union_std_string_long>::iterator it;\n    std::vector<Union_std_string_long>::iterator it1;\n    std::vector<Union_std_string_long>::iterator it2;\n    std::vector<Union_std_string_long>::iterator it3;\n    std::vector<Union_std_string_long>::iterator it4;\n    std::vector<Union_std_string_long>::iterator it5;\n    std::vector<Union_std_string_long>::iterator it6;\n    std::vector<Union_std_string_long>::iterator it7;\n    std::vector<Union_std_string_long>::iterator it8;\n    std::vector<Union_std_string_long>::iterator it9;\n    std::vector<Union_std_string_long>::iterator it10;\n    std::vector<Union_std_string_long>::iterator it11;\n    std::vector<Union_std_string_long>::iterator it12;\n    std::vector<Union_std_string_long>::iterator it13;\n    std::vector<Union_std_string_long>::iterator it14;\n    std::vector<Union_std_string_long>::iterator it15;\n    std::vector<Union_std_string_long>::iterator it16;\n    std::vector<Union_std_string_long>::iterator it17;\n    std::vector<Union_std_string_long>::iterator it18;\n    std::vector<Union_std_string_long>::iterator it19;\n    std::vector<Union_std_string_long>::iterator it20;\n    std::vector<Union_std_string_long>::iterator it21;\n    std::vector<Union_std_string_long>::iterator it22;\n    std::vector<Union_std_string_long>::iterator it23;\n    std::vector<Union_std_string_long>::iterator it24;\n    std::vector<Union_std_string_long>::iterator it25;\n    std",
    "    std::vector<Union_std_string_long> sorted_marks;\n    std::vector<Union_std_string_long>::iterator it;\n    for(it = subjectmarks.begin(); it != subjectmarks.end(); it++) {\n        if(it->f1 >= 40) {\n            sorted_marks.push_back(*it);\n        }\n    }\n    return sorted_marks;",
    "    std::vector<Union_std_string_long> result;\n    std::vector<Union_std_string_long>::iterator it;\n    std::vector<Union_std_string_long>::iterator it1;\n    std::vector<Union_std_string_long>::iterator it2;\n    std::vector<Union_std_string_long>::iterator it3;\n    std::vector<Union_std_string_long>::iterator it4;\n    std::vector<Union_std_string_long>::iterator it5;\n    std::vector<Union_std_string_long>::iterator it6;\n    std::vector<Union_std_string_long>::iterator it7;\n    std::vector<Union_std_string_long>::iterator it8;\n    std::vector<Union_std_string_long>::iterator it9;\n    std::vector<Union_std_string_long>::iterator it10;\n    std::vector<Union_std_string_long>::iterator it11;\n    std::vector<Union_std_string_long>::iterator it12;\n    std::vector<Union_std_string_long>::iterator it13;\n    std::vector<Union_std_string_long>::iterator it14;\n    std::vector<Union_std_string_long>::iterator it15;\n    std::vector<Union_std_string_long>::iterator it16;\n    std::vector<Union_std_string_long>::iterator it17;\n    std::vector<Union_std_string_long>::iterator it18;\n    std::vector<Union_std_string_long>::iterator it19;\n    std::vector<Union_std_string_long>::iterator it20;\n    std::vector<Union_std_string_long>::iterator it21;\n    std::vector<Union_std_string_long>::iterator it22;\n    std::vector<Union_std_string_long>::iterator it23;\n    std::vector<Union_std_string_long>::iterator it24;\n    std::vector<Union_std_string_long>::iterator it25;\n    std",
    "    std::vector<Union_std_string_long> result;\n    std::map<std::string, long> map;\n    for (auto i : subjectmarks) {\n        if (i.f0 == \"\") {\n            map[i.f1] = i.f0;\n        } else {\n            map[i.f0] = i.f1;\n        }\n    }\n    for (auto i : map) {\n        result.push_back(i.first);\n        result.push_back(i.second);\n    }\n    return result;",
    "    std::vector<Union_std_string_long> sorted_subjectmarks;\n    std::sort(subjectmarks.begin(), subjectmarks.end(), [](Union_std_string_long a, Union_std_string_long b) {\n        return a.f1 < b.f1;\n    });\n    return subjectmarks;",
    "    std::vector<Union_std_string_long> result;\n    std::vector<Union_std_string_long>::iterator it;\n    std::vector<Union_std_string_long>::iterator it1;\n    for (it = subjectmarks.begin(); it != subjectmarks.end(); ++it) {\n        for (it1 = it + 1; it1 != subjectmarks.end(); ++it1) {\n            if (it->f1 > it1->f1) {\n                std::swap(*it, *it1);\n            }\n        }\n    }\n    for (it = subjectmarks.begin(); it != subjectmarks.end(); ++it) {\n        result.push_back(*it);\n    }\n    return result;",
    "    std::vector<Union_std_string_long> result;\n    std::vector<Union_std_string_long> result1;\n    std::vector<Union_std_string_long> result2;\n    std::vector<Union_std_string_long> result3;\n    std::vector<Union_std_string_long> result4;\n    std::vector<Union_std_string_long> result5;\n    std::vector<Union_std_string_long> result6;\n    std::vector<Union_std_string_long> result7;\n    std::vector<Union_std_string_long> result8;\n    std::vector<Union_std_string_long> result9;\n    std::vector<Union_std_string_long> result10;\n    std::vector<Union_std_string_long> result11;\n    std::vector<Union_std_string_long> result12;\n    std::vector<Union_std_string_long> result13;\n    std::vector<Union_std_string_long> result14;\n    std::vector<Union_std_string_long> result15;\n    std::vector<Union_std_string_long> result16;\n    std::vector<Union_std_string_long> result17;\n    std::vector<Union_std_string_long> result18;\n    std::vector<Union_std_string_long> result19;\n    std::vector<Union_std_string_long> result20;\n    std::vector<Union_std_string_long> result21;\n    std::vector<Union_std_string_long> result22;\n    std::vector<Union_std_string_long> result23;\n    std::vector<Union_std_string_long> result24;\n    std::vector<Union_std_string_long> result25;\n    std::vector<Union_std_string_long> result26;\n    std::vector<Union_std_string_long> result27;\n    std::vector<Union_std_string_long> result28;\n    std::vector<Union_std_string_long> result29;\n    std",
    "    std::vector<Union_std_string_long> result;\n    std::vector<Union_std_string_long> sorted_subjectmarks;\n    std::vector<Union_std_string_long>::iterator it;\n    std::vector<Union_std_string_long>::iterator it1;\n    std::vector<Union_std_string_long>::iterator it2;\n    std::vector<Union_std_string_long>::iterator it3;\n    std::vector<Union_std_string_long>::iterator it4;\n    std::vector<Union_std_string_long>::iterator it5;\n    std::vector<Union_std_string_long>::iterator it6;\n    std::vector<Union_std_string_long>::iterator it7;\n    std::vector<Union_std_string_long>::iterator it8;\n    std::vector<Union_std_string_long>::iterator it9;\n    std::vector<Union_std_string_long>::iterator it10;\n    std::vector<Union_std_string_long>::iterator it11;\n    std::vector<Union_std_string_long>::iterator it12;\n    std::vector<Union_std_string_long>::iterator it13;\n    std::vector<Union_std_string_long>::iterator it14;\n    std::vector<Union_std_string_long>::iterator it15;\n    std::vector<Union_std_string_long>::iterator it16;\n    std::vector<Union_std_string_long>::iterator it17;\n    std::vector<Union_std_string_long>::iterator it18;\n    std::vector<Union_std_string_long>::iterator it19;\n    std::vector<Union_std_string_long>::iterator it20;\n    std::vector<Union_std_string_long>::iterator it21;\n    std::vector<Union_std_string_long>::iterator it22;\n    std::vector<Union_std_string_long>::iterator it23;\n    std::vector<Union_std_string_long>::iterator it24;\n    std",
    "    std::vector<Union_std_string_long> result;\n    std::vector<Union_std_string_long>::iterator it;\n    for (it = subjectmarks.begin(); it != subjectmarks.end(); it++) {\n        Union_std_string_long temp = *it;\n        if (temp == \"Maths\") {\n            result.push_back(temp);\n        }\n    }\n    for (it = subjectmarks.begin(); it != subjectmarks.end(); it++) {\n        Union_std_string_long temp = *it;\n        if (temp == \"Science\") {\n            result.push_back(temp);\n        }\n    }\n    for (it = subjectmarks.begin(); it != subjectmarks.end(); it++) {\n        Union_std_string_long temp = *it;\n        if (temp == \"English\") {\n            result.push_back(temp);\n        }\n    }\n    return result;",
    "    std::vector<Union_std_string_long> result;\n    std::sort(subjectmarks.begin(), subjectmarks.end(), [](Union_std_string_long a, Union_std_string_long b) {\n        return a.f1 < b.f1;\n    });\n    for (auto i : subjectmarks) {\n        result.push_back(i);\n    }\n    return result;",
    "    std::sort(subjectmarks.begin(), subjectmarks.end(), [](Union_std_string_long a, Union_std_string_long b) {\n        return a.f1 < b.f1;\n    });\n    return subjectmarks;",
    "    std::vector<Union_std_string_long> result;\n    std::vector<Union_std_string_long>::iterator it;\n    std::vector<Union_std_string_long>::iterator it2;\n    std::vector<Union_std_string_long>::iterator it3;\n    std::vector<Union_std_string_long>::iterator it4;\n    std::vector<Union_std_string_long>::iterator it5;\n    std::vector<Union_std_string_long>::iterator it6;\n    std::vector<Union_std_string_long>::iterator it7;\n    std::vector<Union_std_string_long>::iterator it8;\n    std::vector<Union_std_string_long>::iterator it9;\n    std::vector<Union_std_string_long>::iterator it10;\n    std::vector<Union_std_string_long>::iterator it11;\n    std::vector<Union_std_string_long>::iterator it12;\n    std::vector<Union_std_string_long>::iterator it13;\n    std::vector<Union_std_string_long>::iterator it14;\n    std::vector<Union_std_string_long>::iterator it15;\n    std::vector<Union_std_string_long>::iterator it16;\n    std::vector<Union_std_string_long>::iterator it17;\n    std::vector<Union_std_string_long>::iterator it18;\n    std::vector<Union_std_string_long>::iterator it19;\n    std::vector<Union_std_string_long>::iterator it20;\n    std::vector<Union_std_string_long>::iterator it21;\n    std::vector<Union_std_string_long>::iterator it22;\n    std::vector<Union_std_string_long>::iterator it23;\n    std::vector<Union_std_string_long>::iterator it24;\n    std::vector<Union_std_string_long>::iterator it25;\n    std::vector<Union_std_string_long>::iterator it26;\n    std",
    "    std::vector<Union_std_string_long> result;\n    std::vector<Union_std_string_long>::iterator it;\n    for(it = subjectmarks.begin(); it != subjectmarks.end(); it++) {\n        if((*it).f1 >= 40) {\n            result.push_back(*it);\n        }\n    }\n    return result;",
    "    std::vector<Union_std_string_long> sorted_subjectmarks;\n    std::vector<Union_std_string_long> subjectmarks_copy = subjectmarks;\n    std::sort(subjectmarks_copy.begin(), subjectmarks_copy.end(), [](Union_std_string_long a, Union_std_string_long b) {\n        return a.f1 < b.f1;\n    });\n    for (auto i : subjectmarks_copy) {\n        sorted_subjectmarks.push_back(i);\n    }\n    return sorted_subjectmarks;",
    "    std::vector<Union_std_string_long> result;\n    std::vector<Union_std_string_long>::iterator it;\n    for(it = subjectmarks.begin(); it != subjectmarks.end(); it++) {\n        if(it->f1 >= 40) {\n            result.push_back(*it);\n        }\n    }\n    return result;",
    "    std::vector<Union_std_string_long> result;\n    std::vector<Union_std_string_long> temp;\n    std::vector<Union_std_string_long> temp1;\n    std::vector<Union_std_string_long> temp2;\n    std::vector<Union_std_string_long> temp3;\n    std::vector<Union_std_string_long> temp4;\n    std::vector<Union_std_string_long> temp5;\n    std::vector<Union_std_string_long> temp6;\n    std::vector<Union_std_string_long> temp7;\n    std::vector<Union_std_string_long> temp8;\n    std::vector<Union_std_string_long> temp9;\n    std::vector<Union_std_string_long> temp10;\n    std::vector<Union_std_string_long> temp11;\n    std::vector<Union_std_string_long> temp12;\n    std::vector<Union_std_string_long> temp13;\n    std::vector<Union_std_string_long> temp14;\n    std::vector<Union_std_string_long> temp15;\n    std::vector<Union_std_string_long> temp16;\n    std::vector<Union_std_string_long> temp17;\n    std::vector<Union_std_string_long> temp18;\n    std::vector<Union_std_string_long> temp19;\n    std::vector<Union_std_string_long> temp20;\n    std::vector<Union_std_string_long> temp21;\n    std::vector<Union_std_string_long> temp22;\n    std::vector<Union_std_string_long> temp23;\n    std::vector<Union_std_string_long> temp24;\n    std::vector<Union_std_string_long> temp25;\n    std::vector<Union_std_string_long> temp26;\n    std::vector<Union_std_string_long> temp27;\n    std::vector<Union_std_string_long> temp28;\n    std::",
    "    std::vector<Union_std_string_long> result;\n    std::vector<Union_std_string_long>::iterator it;\n    std::vector<Union_std_string_long>::iterator it2;\n    std::vector<Union_std_string_long>::iterator it3;\n    std::vector<Union_std_string_long>::iterator it4;\n    std::vector<Union_std_string_long>::iterator it5;\n    std::vector<Union_std_string_long>::iterator it6;\n    std::vector<Union_std_string_long>::iterator it7;\n    std::vector<Union_std_string_long>::iterator it8;\n    std::vector<Union_std_string_long>::iterator it9;\n    std::vector<Union_std_string_long>::iterator it10;\n    std::vector<Union_std_string_long>::iterator it11;\n    std::vector<Union_std_string_long>::iterator it12;\n    std::vector<Union_std_string_long>::iterator it13;\n    std::vector<Union_std_string_long>::iterator it14;\n    std::vector<Union_std_string_long>::iterator it15;\n    std::vector<Union_std_string_long>::iterator it16;\n    std::vector<Union_std_string_long>::iterator it17;\n    std::vector<Union_std_string_long>::iterator it18;\n    std::vector<Union_std_string_long>::iterator it19;\n    std::vector<Union_std_string_long>::iterator it20;\n    std::vector<Union_std_string_long>::iterator it21;\n    std::vector<Union_std_string_long>::iterator it22;\n    std::vector<Union_std_string_long>::iterator it23;\n    std::vector<Union_std_string_long>::iterator it24;\n    std::vector<Union_std_string_long>::iterator it25;\n    std::vector<Union_std_string_long>::iterator it26;\n    std",
    "    std::vector<Union_std_string_long> result;\n    std::vector<Union_std_string_long>::iterator it;\n    std::vector<Union_std_string_long>::iterator it1;\n    std::vector<Union_std_string_long>::iterator it2;\n    std::vector<Union_std_string_long>::iterator it3;\n    std::vector<Union_std_string_long>::iterator it4;\n    std::vector<Union_std_string_long>::iterator it5;\n    std::vector<Union_std_string_long>::iterator it6;\n    std::vector<Union_std_string_long>::iterator it7;\n    std::vector<Union_std_string_long>::iterator it8;\n    std::vector<Union_std_string_long>::iterator it9;\n    std::vector<Union_std_string_long>::iterator it10;\n    std::vector<Union_std_string_long>::iterator it11;\n    std::vector<Union_std_string_long>::iterator it12;\n    std::vector<Union_std_string_long>::iterator it13;\n    std::vector<Union_std_string_long>::iterator it14;\n    std::vector<Union_std_string_long>::iterator it15;\n    std::vector<Union_std_string_long>::iterator it16;\n    std::vector<Union_std_string_long>::iterator it17;\n    std::vector<Union_std_string_long>::iterator it18;\n    std::vector<Union_std_string_long>::iterator it19;\n    std::vector<Union_std_string_long>::iterator it20;\n    std::vector<Union_std_string_long>::iterator it21;\n    std::vector<Union_std_string_long>::iterator it22;\n    std::vector<Union_std_string_long>::iterator it23;\n    std::vector<Union_std_string_long>::iterator it24;\n    std::vector<Union_std_string_long>::iterator it25;\n    std",
    "    std::vector<Union_std_string_long> result;\n    std::sort(subjectmarks.begin(), subjectmarks.end(), [](const Union_std_string_long& a, const Union_std_string_long& b) {\n        return a.f1 < b.f1;\n    });\n    for (auto i : subjectmarks) {\n        result.push_back(i);\n    }\n    return result;",
    "    std::vector<Union_std_string_long> result;\n    std::vector<Union_std_string_long>::iterator it;\n    std::vector<Union_std_string_long>::iterator it1;\n    std::vector<Union_std_string_long>::iterator it2;\n    std::vector<Union_std_string_long>::iterator it3;\n    std::vector<Union_std_string_long>::iterator it4;\n    std::vector<Union_std_string_long>::iterator it5;\n    std::vector<Union_std_string_long>::iterator it6;\n    std::vector<Union_std_string_long>::iterator it7;\n    std::vector<Union_std_string_long>::iterator it8;\n    std::vector<Union_std_string_long>::iterator it9;\n    std::vector<Union_std_string_long>::iterator it10;\n    std::vector<Union_std_string_long>::iterator it11;\n    std::vector<Union_std_string_long>::iterator it12;\n    std::vector<Union_std_string_long>::iterator it13;\n    std::vector<Union_std_string_long>::iterator it14;\n    std::vector<Union_std_string_long>::iterator it15;\n    std::vector<Union_std_string_long>::iterator it16;\n    std::vector<Union_std_string_long>::iterator it17;\n    std::vector<Union_std_string_long>::iterator it18;\n    std::vector<Union_std_string_long>::iterator it19;\n    std::vector<Union_std_string_long>::iterator it20;\n    std::vector<Union_std_string_long>::iterator it21;\n    std::vector<Union_std_string_long>::iterator it22;\n    std::vector<Union_std_string_long>::iterator it23;\n    std::vector<Union_std_string_long>::iterator it24;\n    std::vector<Union_std_string_long>::iterator it25;\n    std",
    "    std::vector<Union_std_string_long> sorted_subjectmarks;\n    std::sort(subjectmarks.begin(), subjectmarks.end(), [](Union_std_string_long a, Union_std_string_long b) {\n        return a.f1 < b.f1;\n    });\n    for (auto i : subjectmarks) {\n        sorted_subjectmarks.push_back(i);\n    }\n    return sorted_subjectmarks;",
    "    std::vector<Union_std_string_long> result;\n    std::vector<Union_std_string_long>::iterator it;\n    for(it = subjectmarks.begin(); it != subjectmarks.end(); ++it) {\n        if(it->f1 >= 40) {\n            result.push_back(*it);\n        }\n    }\n    return result;",
    "    std::vector<Union_std_string_long> result;\n    std::vector<Union_std_string_long>::iterator it;\n    std::vector<Union_std_string_long>::iterator it1;\n    std::vector<Union_std_string_long>::iterator it2;\n    std::vector<Union_std_string_long>::iterator it3;\n    std::vector<Union_std_string_long>::iterator it4;\n    std::vector<Union_std_string_long>::iterator it5;\n    std::vector<Union_std_string_long>::iterator it6;\n    std::vector<Union_std_string_long>::iterator it7;\n    std::vector<Union_std_string_long>::iterator it8;\n    std::vector<Union_std_string_long>::iterator it9;\n    std::vector<Union_std_string_long>::iterator it10;\n    std::vector<Union_std_string_long>::iterator it11;\n    std::vector<Union_std_string_long>::iterator it12;\n    std::vector<Union_std_string_long>::iterator it13;\n    std::vector<Union_std_string_long>::iterator it14;\n    std::vector<Union_std_string_long>::iterator it15;\n    std::vector<Union_std_string_long>::iterator it16;\n    std::vector<Union_std_string_long>::iterator it17;\n    std::vector<Union_std_string_long>::iterator it18;\n    std::vector<Union_std_string_long>::iterator it19;\n    std::vector<Union_std_string_long>::iterator it20;\n    std::vector<Union_std_string_long>::iterator it21;\n    std::vector<Union_std_string_long>::iterator it22;\n    std::vector<Union_std_string_long>::iterator it23;\n    std::vector<Union_std_string_long>::iterator it24;\n    std::vector<Union_std_string_long>::iterator it25;\n    std",
    "    std::vector<Union_std_string_long> result;\n    std::vector<Union_std_string_long>::iterator it;\n    for(it = subjectmarks.begin(); it != subjectmarks.end(); ++it) {\n        if(it->operator==(std::string(\"Maths\"))) {\n            result.push_back(Union_std_string_long(std::string(\"Maths\")));\n        }\n        else if(it->operator==(std::string(\"Physics\"))) {\n            result.push_back(Union_std_string_long(std::string(\"Physics\")));\n        }\n        else if(it->operator==(std::string(\"Chemistry\"))) {\n            result.push_back(Union_std_string_long(std::string(\"Chemistry\")));\n        }\n        else if(it->operator==(std::string(\"Biology\"))) {\n            result.push_back(Union_std_string_long(std::string(\"Biology\")));\n        }\n        else if(it->operator==(std::string(\"English\"))) {\n            result.push_back(Union_std_string_long(std::string(\"English\")));\n        }\n        else if(it->operator==(std::string(\"History\"))) {\n            result.push_back(Union_std_string_long(std::string(\"History\")));\n        }\n        else if(it->operator==(std::string(\"Geography\"))) {\n            result.push_back(Union_std_string_long(std::string(\"Geography\")));\n        }\n        else if(it->operator==(std::string(\"Economics\"))) {\n            result.push_back(Union_std_string_long(std::string(\"Economics\")));\n        }\n        else if(it->operator==(std::string(\"Accounts\"))) {\n            result.push_back(Union_std_string_long(std::string(\"Accounts\")));\n        }\n        else if(it->operator==(std::string(\"Computer\"))) {\n            result.push_back(Union_std_string_long(std::string(\"Computer\")));\n        }\n        else",
    "    std::vector<Union_std_string_long> result;\n    std::vector<Union_std_string_long> temp;\n    std::vector<Union_std_string_long>::iterator it;\n    for(it = subjectmarks.begin(); it != subjectmarks.end(); it++) {\n        if(it->f0 == \"Maths\") {\n            temp.push_back(*it);\n        }\n    }\n    for(it = subjectmarks.begin(); it != subjectmarks.end(); it++) {\n        if(it->f0 == \"Physics\") {\n            temp.push_back(*it);\n        }\n    }\n    for(it = subjectmarks.begin(); it != subjectmarks.end(); it++) {\n        if(it->f0 == \"Chemistry\") {\n            temp.push_back(*it);\n        }\n    }\n    for(it = subjectmarks.begin(); it != subjectmarks.end(); it++) {\n        if(it->f0 == \"Biology\") {\n            temp.push_back(*it);\n        }\n    }\n    for(it = subjectmarks.begin(); it != subjectmarks.end(); it++) {\n        if(it->f0 == \"English\") {\n            temp.push_back(*it);\n        }\n    }\n    for(it = subjectmarks.begin(); it != subjectmarks.end(); it++) {\n        if(it->f0 == \"History\") {\n            temp.push_back(*it);\n        }\n    }\n    for(it = subjectmarks.begin(); it != subjectmarks.end(); it++) {\n        if(it->f0 == \"Geography\") {\n            temp.push_back(*it);\n        }\n    }\n    for(it = subjectmarks.begin(); it != subjectmarks.end(); it++) {\n        if(it->f0 == \"Computer\") {\n            temp.push_back(*it);\n        }\n    }\n    for(it = subjectmarks.begin(); it != subjectmarks.end(); it++) {\n        if(it->f0 == \"Economics\") {\n            temp.push_back(*it);\n        }\n    }\n    for(it =",
    "    std::vector<Union_std_string_long> result;\n    std::vector<Union_std_string_long> temp;\n    std::vector<Union_std_string_long> temp1;\n    std::vector<Union_std_string_long> temp2;\n    std::vector<Union_std_string_long> temp3;\n    std::vector<Union_std_string_long> temp4;\n    std::vector<Union_std_string_long> temp5;\n    std::vector<Union_std_string_long> temp6;\n    std::vector<Union_std_string_long> temp7;\n    std::vector<Union_std_string_long> temp8;\n    std::vector<Union_std_string_long> temp9;\n    std::vector<Union_std_string_long> temp10;\n    std::vector<Union_std_string_long> temp11;\n    std::vector<Union_std_string_long> temp12;\n    std::vector<Union_std_string_long> temp13;\n    std::vector<Union_std_string_long> temp14;\n    std::vector<Union_std_string_long> temp15;\n    std::vector<Union_std_string_long> temp16;\n    std::vector<Union_std_string_long> temp17;\n    std::vector<Union_std_string_long> temp18;\n    std::vector<Union_std_string_long> temp19;\n    std::vector<Union_std_string_long> temp20;\n    std::vector<Union_std_string_long> temp21;\n    std::vector<Union_std_string_long> temp22;\n    std::vector<Union_std_string_long> temp23;\n    std::vector<Union_std_string_long> temp24;\n    std::vector<Union_std_string_long> temp25;\n    std::vector<Union_std_string_long> temp26;\n    std::vector<Union_std_string_long> temp27;\n    std::vector<Union_std_string_long> temp28;\n    std::",
    "    std::vector<Union_std_string_long> sorted_subjectmarks;\n    std::vector<Union_std_string_long>::iterator it;\n    for(it = subjectmarks.begin(); it != subjectmarks.end(); it++) {\n        if(it->f0 == \"Maths\") {\n            sorted_subjectmarks.push_back(Union_std_string_long(it->f1));\n        }\n    }\n    for(it = subjectmarks.begin(); it != subjectmarks.end(); it++) {\n        if(it->f0 == \"Physics\") {\n            sorted_subjectmarks.push_back(Union_std_string_long(it->f1));\n        }\n    }\n    for(it = subjectmarks.begin(); it != subjectmarks.end(); it++) {\n        if(it->f0 == \"Chemistry\") {\n            sorted_subjectmarks.push_back(Union_std_string_long(it->f1));\n        }\n    }\n    return sorted_subjectmarks;",
    "    std::vector<Union_std_string_long> result;\n    std::vector<Union_std_string_long> temp;\n    std::vector<Union_std_string_long>::iterator it;\n    std::vector<Union_std_string_long>::iterator it1;\n    std::vector<Union_std_string_long>::iterator it2;\n    std::vector<Union_std_string_long>::iterator it3;\n    std::vector<Union_std_string_long>::iterator it4;\n    std::vector<Union_std_string_long>::iterator it5;\n    std::vector<Union_std_string_long>::iterator it6;\n    std::vector<Union_std_string_long>::iterator it7;\n    std::vector<Union_std_string_long>::iterator it8;\n    std::vector<Union_std_string_long>::iterator it9;\n    std::vector<Union_std_string_long>::iterator it10;\n    std::vector<Union_std_string_long>::iterator it11;\n    std::vector<Union_std_string_long>::iterator it12;\n    std::vector<Union_std_string_long>::iterator it13;\n    std::vector<Union_std_string_long>::iterator it14;\n    std::vector<Union_std_string_long>::iterator it15;\n    std::vector<Union_std_string_long>::iterator it16;\n    std::vector<Union_std_string_long>::iterator it17;\n    std::vector<Union_std_string_long>::iterator it18;\n    std::vector<Union_std_string_long>::iterator it19;\n    std::vector<Union_std_string_long>::iterator it20;\n    std::vector<Union_std_string_long>::iterator it21;\n    std::vector<Union_std_string_long>::iterator it22;\n    std::vector<Union_std_string_long>::iterator it23;\n    std::vector<Union_std_string_long>::iterator it24;\n    std::vector<",
    "    std::vector<Union_std_string_long> result;\n    std::sort(subjectmarks.begin(), subjectmarks.end(), [](const Union_std_string_long& a, const Union_std_string_long& b) {\n        return a.f1 < b.f1;\n    });\n    for(auto i : subjectmarks) {\n        result.push_back(i);\n    }\n    return result;",
    "    std::vector<Union_std_string_long> v;\n    std::vector<Union_std_string_long> v1;\n    std::vector<Union_std_string_long> v2;\n    std::vector<Union_std_string_long> v3;\n    std::vector<Union_std_string_long> v4;\n    std::vector<Union_std_string_long> v5;\n    std::vector<Union_std_string_long> v6;\n    std::vector<Union_std_string_long> v7;\n    std::vector<Union_std_string_long> v8;\n    std::vector<Union_std_string_long> v9;\n    std::vector<Union_std_string_long> v10;\n    std::vector<Union_std_string_long> v11;\n    std::vector<Union_std_string_long> v12;\n    std::vector<Union_std_string_long> v13;\n    std::vector<Union_std_string_long> v14;\n    std::vector<Union_std_string_long> v15;\n    std::vector<Union_std_string_long> v16;\n    std::vector<Union_std_string_long> v17;\n    std::vector<Union_std_string_long> v18;\n    std::vector<Union_std_string_long> v19;\n    std::vector<Union_std_string_long> v20;\n    std::vector<Union_std_string_long> v21;\n    std::vector<Union_std_string_long> v22;\n    std::vector<Union_std_string_long> v23;\n    std::vector<Union_std_string_long> v24;\n    std::vector<Union_std_string_long> v25;\n    std::vector<Union_std_string_long> v26;\n    std::vector<Union_std_string_long> v27;\n    std::vector<Union_std_string_long> v28;\n    std::vector<Union_std_string_long> v29;\n    std",
    "    std::vector<Union_std_string_long> sorted_subjectmarks;\n    std::vector<Union_std_string_long>::iterator it;\n    for (it = subjectmarks.begin(); it != subjectmarks.end(); it++) {\n        if (it->f0 == \"Maths\") {\n            sorted_subjectmarks.push_back(*it);\n        }\n    }\n    for (it = subjectmarks.begin(); it != subjectmarks.end(); it++) {\n        if (it->f0 == \"Science\") {\n            sorted_subjectmarks.push_back(*it);\n        }\n    }\n    for (it = subjectmarks.begin(); it != subjectmarks.end(); it++) {\n        if (it->f0 == \"English\") {\n            sorted_subjectmarks.push_back(*it);\n        }\n    }\n    return sorted_subjectmarks;",
    "    std::vector<Union_std_string_long> result;\n    std::vector<Union_std_string_long>::iterator it;\n    for(it = subjectmarks.begin(); it != subjectmarks.end(); it++) {\n        if(it->f1 >= 40) {\n            result.push_back(*it);\n        }\n    }\n    return result;",
    "    std::vector<Union_std_string_long> result;\n    std::vector<Union_std_string_long> sorted_marks;\n    std::vector<Union_std_string_long> sorted_subjects;\n    for (int i = 0; i < subjectmarks.size(); i++) {\n        if (subjectmarks[i].f0 == \"\") {\n            sorted_marks.push_back(subjectmarks[i]);\n        } else {\n            sorted_subjects.push_back(subjectmarks[i]);\n        }\n    }\n    std::sort(sorted_marks.begin(), sorted_marks.end(), [](Union_std_string_long a, Union_std_string_long b) {\n        return a.f1 < b.f1;\n    });\n    std::sort(sorted_subjects.begin(), sorted_subjects.end(), [](Union_std_string_long a, Union_std_string_long b) {\n        return a.f1 < b.f1;\n    });\n    for (int i = 0; i < sorted_marks.size(); i++) {\n        result.push_back(sorted_marks[i]);\n        result.push_back(sorted_subjects[i]);\n    }\n    return result;",
    "    std::vector<Union_std_string_long> result;\n    std::sort(subjectmarks.begin(), subjectmarks.end(), [](Union_std_string_long a, Union_std_string_long b) {\n        return a.f1 < b.f1;\n    });\n    for (auto i : subjectmarks) {\n        result.push_back(i);\n    }\n    return result;",
    "    std::vector<Union_std_string_long> result;\n    std::vector<Union_std_string_long>::iterator it;\n    std::vector<Union_std_string_long>::iterator it1;\n    std::vector<Union_std_string_long>::iterator it2;\n    std::vector<Union_std_string_long>::iterator it3;\n    std::vector<Union_std_string_long>::iterator it4;\n    std::vector<Union_std_string_long>::iterator it5;\n    std::vector<Union_std_string_long>::iterator it6;\n    std::vector<Union_std_string_long>::iterator it7;\n    std::vector<Union_std_string_long>::iterator it8;\n    std::vector<Union_std_string_long>::iterator it9;\n    std::vector<Union_std_string_long>::iterator it10;\n    std::vector<Union_std_string_long>::iterator it11;\n    std::vector<Union_std_string_long>::iterator it12;\n    std::vector<Union_std_string_long>::iterator it13;\n    std::vector<Union_std_string_long>::iterator it14;\n    std::vector<Union_std_string_long>::iterator it15;\n    std::vector<Union_std_string_long>::iterator it16;\n    std::vector<Union_std_string_long>::iterator it17;\n    std::vector<Union_std_string_long>::iterator it18;\n    std::vector<Union_std_string_long>::iterator it19;\n    std::vector<Union_std_string_long>::iterator it20;\n    std::vector<Union_std_string_long>::iterator it21;\n    std::vector<Union_std_string_long>::iterator it22;\n    std::vector<Union_std_string_long>::iterator it23;\n    std::vector<Union_std_string_long>::iterator it24;\n    std::vector<Union_std_string_long>::iterator it25;\n    std",
    "    std::sort(subjectmarks.begin(), subjectmarks.end(), [](Union_std_string_long a, Union_std_string_long b) {\n        return a.f1 < b.f1;\n    });\n    return subjectmarks;",
    "    std::vector<Union_std_string_long> result;\n    std::vector<Union_std_string_long>::iterator it;\n    std::vector<Union_std_string_long>::iterator it1;\n    for (it = subjectmarks.begin(); it != subjectmarks.end(); it++) {\n        for (it1 = it + 1; it1 != subjectmarks.end(); it1++) {\n            if ((*it).f1 > (*it1).f1) {\n                Union_std_string_long temp = *it;\n                *it = *it1;\n                *it1 = temp;\n            }\n        }\n    }\n    for (it = subjectmarks.begin(); it != subjectmarks.end(); it++) {\n        result.push_back(*it);\n    }\n    return result;",
    "    std::vector<Union_std_string_long> result;\n    std::vector<Union_std_string_long> sorted;\n    std::vector<Union_std_string_long>::iterator it;\n    for(it = subjectmarks.begin(); it != subjectmarks.end(); it++) {\n        if(it->f0 == \"Maths\") {\n            result.push_back(*it);\n        }\n    }\n    for(it = subjectmarks.begin(); it != subjectmarks.end(); it++) {\n        if(it->f0 == \"English\") {\n            result.push_back(*it);\n        }\n    }\n    for(it = subjectmarks.begin(); it != subjectmarks.end(); it++) {\n        if(it->f0 == \"Science\") {\n            result.push_back(*it);\n        }\n    }\n    for(it = subjectmarks.begin(); it != subjectmarks.end(); it++) {\n        if(it->f0 == \"History\") {\n            result.push_back(*it);\n        }\n    }\n    for(it = subjectmarks.begin(); it != subjectmarks.end(); it++) {\n        if(it->f0 == \"Geography\") {\n            result.push_back(*it);\n        }\n    }\n    return result;",
    "    std::vector<Union_std_string_long> result;\n    std::vector<Union_std_string_long>::iterator it;\n    std::vector<Union_std_string_long>::iterator it1;\n    std::vector<Union_std_string_long>::iterator it2;\n    std::vector<Union_std_string_long>::iterator it3;\n    std::vector<Union_std_string_long>::iterator it4;\n    std::vector<Union_std_string_long>::iterator it5;\n    std::vector<Union_std_string_long>::iterator it6;\n    std::vector<Union_std_string_long>::iterator it7;\n    std::vector<Union_std_string_long>::iterator it8;\n    std::vector<Union_std_string_long>::iterator it9;\n    std::vector<Union_std_string_long>::iterator it10;\n    std::vector<Union_std_string_long>::iterator it11;\n    std::vector<Union_std_string_long>::iterator it12;\n    std::vector<Union_std_string_long>::iterator it13;\n    std::vector<Union_std_string_long>::iterator it14;\n    std::vector<Union_std_string_long>::iterator it15;\n    std::vector<Union_std_string_long>::iterator it16;\n    std::vector<Union_std_string_long>::iterator it17;\n    std::vector<Union_std_string_long>::iterator it18;\n    std::vector<Union_std_string_long>::iterator it19;\n    std::vector<Union_std_string_long>::iterator it20;\n    std::vector<Union_std_string_long>::iterator it21;\n    std::vector<Union_std_string_long>::iterator it22;\n    std::vector<Union_std_string_long>::iterator it23;\n    std::vector<Union_std_string_long>::iterator it24;\n    std::vector<Union_std_string_long>::iterator it25;\n    std",
    "    std::vector<Union_std_string_long> result;\n    std::vector<Union_std_string_long> sorted_marks;\n    std::vector<Union_std_string_long> sorted_subjects;\n    std::vector<Union_std_string_long> subjects;\n    std::vector<Union_std_string_long> marks;\n    for (auto i : subjectmarks) {\n        if (i.f0 == \"\") {\n            marks.push_back(i);\n        } else {\n            subjects.push_back(i);\n        }\n    }\n    std::sort(marks.begin(), marks.end(), [](Union_std_string_long a, Union_std_string_long b) {\n        return a.f1 < b.f1;\n    });\n    std::sort(subjects.begin(), subjects.end(), [](Union_std_string_long a, Union_std_string_long b) {\n        return a.f0 < b.f0;\n    });\n    for (auto i : marks) {\n        sorted_marks.push_back(i);\n    }\n    for (auto i : subjects) {\n        sorted_subjects.push_back(i);\n    }\n    for (int i = 0; i < marks.size(); i++) {\n        result.push_back(sorted_subjects[i]);\n        result.push_back(sorted_marks[i]);\n    }\n    return result;",
    "    std::vector<Union_std_string_long> result;\n    std::vector<Union_std_string_long>::iterator it;\n    std::vector<Union_std_string_long>::iterator it1;\n    std::vector<Union_std_string_long>::iterator it2;\n    std::vector<Union_std_string_long>::iterator it3;\n    std::vector<Union_std_string_long>::iterator it4;\n    std::vector<Union_std_string_long>::iterator it5;\n    std::vector<Union_std_string_long>::iterator it6;\n    std::vector<Union_std_string_long>::iterator it7;\n    std::vector<Union_std_string_long>::iterator it8;\n    std::vector<Union_std_string_long>::iterator it9;\n    std::vector<Union_std_string_long>::iterator it10;\n    std::vector<Union_std_string_long>::iterator it11;\n    std::vector<Union_std_string_long>::iterator it12;\n    std::vector<Union_std_string_long>::iterator it13;\n    std::vector<Union_std_string_long>::iterator it14;\n    std::vector<Union_std_string_long>::iterator it15;\n    std::vector<Union_std_string_long>::iterator it16;\n    std::vector<Union_std_string_long>::iterator it17;\n    std::vector<Union_std_string_long>::iterator it18;\n    std::vector<Union_std_string_long>::iterator it19;\n    std::vector<Union_std_string_long>::iterator it20;\n    std::vector<Union_std_string_long>::iterator it21;\n    std::vector<Union_std_string_long>::iterator it22;\n    std::vector<Union_std_string_long>::iterator it23;\n    std::vector<Union_std_string_long>::iterator it24;\n    std::vector<Union_std_string_long>::iterator it25;\n    std",
    "    std::vector<Union_std_string_long> result;\n    std::vector<Union_std_string_long>::iterator it;\n    for(it = subjectmarks.begin(); it != subjectmarks.end(); it++) {\n        if(it->f1 >= 50) {\n            result.push_back(*it);\n        }\n    }\n    return result;",
    "    std::vector<Union_std_string_long> result;\n    std::vector<Union_std_string_long> sorted;\n    std::vector<Union_std_string_long>::iterator it;\n    for (it = subjectmarks.begin(); it != subjectmarks.end(); ++it) {\n        if (it->f0 == \"Maths\") {\n            sorted.push_back(*it);\n        }\n    }\n    for (it = subjectmarks.begin(); it != subjectmarks.end(); ++it) {\n        if (it->f0 == \"Science\") {\n            sorted.push_back(*it);\n        }\n    }\n    for (it = subjectmarks.begin(); it != subjectmarks.end(); ++it) {\n        if (it->f0 == \"English\") {\n            sorted.push_back(*it);\n        }\n    }\n    for (it = subjectmarks.begin(); it != subjectmarks.end(); ++it) {\n        if (it->f0 == \"History\") {\n            sorted.push_back(*it);\n        }\n    }\n    return sorted;",
    "    std::vector<Union_std_string_long> result;\n    std::vector<Union_std_string_long>::iterator it;\n    std::vector<Union_std_string_long>::iterator it1;\n    std::vector<Union_std_string_long>::iterator it2;\n    std::vector<Union_std_string_long>::iterator it3;\n    std::vector<Union_std_string_long>::iterator it4;\n    std::vector<Union_std_string_long>::iterator it5;\n    std::vector<Union_std_string_long>::iterator it6;\n    std::vector<Union_std_string_long>::iterator it7;\n    std::vector<Union_std_string_long>::iterator it8;\n    std::vector<Union_std_string_long>::iterator it9;\n    std::vector<Union_std_string_long>::iterator it10;\n    std::vector<Union_std_string_long>::iterator it11;\n    std::vector<Union_std_string_long>::iterator it12;\n    std::vector<Union_std_string_long>::iterator it13;\n    std::vector<Union_std_string_long>::iterator it14;\n    std::vector<Union_std_string_long>::iterator it15;\n    std::vector<Union_std_string_long>::iterator it16;\n    std::vector<Union_std_string_long>::iterator it17;\n    std::vector<Union_std_string_long>::iterator it18;\n    std::vector<Union_std_string_long>::iterator it19;\n    std::vector<Union_std_string_long>::iterator it20;\n    std::vector<Union_std_string_long>::iterator it21;\n    std::vector<Union_std_string_long>::iterator it22;\n    std::vector<Union_std_string_long>::iterator it23;\n    std::vector<Union_std_string_long>::iterator it24;\n    std::vector<Union_std_string_long>::iterator it25;\n    std",
    "    std::vector<Union_std_string_long> sorted_subjectmarks;\n    std::vector<Union_std_string_long>::iterator it;\n    std::vector<Union_std_string_long>::iterator it1;\n    std::vector<Union_std_string_long>::iterator it2;\n    std::vector<Union_std_string_long>::iterator it3;\n    std::vector<Union_std_string_long>::iterator it4;\n    std::vector<Union_std_string_long>::iterator it5;\n    std::vector<Union_std_string_long>::iterator it6;\n    std::vector<Union_std_string_long>::iterator it7;\n    std::vector<Union_std_string_long>::iterator it8;\n    std::vector<Union_std_string_long>::iterator it9;\n    std::vector<Union_std_string_long>::iterator it10;\n    std::vector<Union_std_string_long>::iterator it11;\n    std::vector<Union_std_string_long>::iterator it12;\n    std::vector<Union_std_string_long>::iterator it13;\n    std::vector<Union_std_string_long>::iterator it14;\n    std::vector<Union_std_string_long>::iterator it15;\n    std::vector<Union_std_string_long>::iterator it16;\n    std::vector<Union_std_string_long>::iterator it17;\n    std::vector<Union_std_string_long>::iterator it18;\n    std::vector<Union_std_string_long>::iterator it19;\n    std::vector<Union_std_string_long>::iterator it20;\n    std::vector<Union_std_string_long>::iterator it21;\n    std::vector<Union_std_string_long>::iterator it22;\n    std::vector<Union_std_string_long>::iterator it23;\n    std::vector<Union_std_string_long>::iterator it24;\n    std::vector<Union_std_string_long>::iterator it25;",
    "    std::vector<Union_std_string_long> result;\n    std::vector<Union_std_string_long>::iterator it;\n    for(it = subjectmarks.begin(); it != subjectmarks.end(); it++) {\n        if(it->f0 == \"Maths\") {\n            result.push_back(*it);\n        }\n    }\n    for(it = subjectmarks.begin(); it != subjectmarks.end(); it++) {\n        if(it->f0 == \"English\") {\n            result.push_back(*it);\n        }\n    }\n    for(it = subjectmarks.begin(); it != subjectmarks.end(); it++) {\n        if(it->f0 == \"Science\") {\n            result.push_back(*it);\n        }\n    }\n    return result;",
    "    std::vector<Union_std_string_long> sorted_marks;\n    std::sort(subjectmarks.begin(), subjectmarks.end(), [](Union_std_string_long a, Union_std_string_long b) {\n        return a.f1 < b.f1;\n    });\n    for (auto i : subjectmarks) {\n        sorted_marks.push_back(i);\n    }\n    return sorted_marks;",
    "    std::vector<Union_std_string_long> result;\n    std::vector<Union_std_string_long>::iterator it;\n    std::vector<Union_std_string_long>::iterator it1;\n    std::vector<Union_std_string_long>::iterator it2;\n    for(it = subjectmarks.begin(); it != subjectmarks.end(); it++) {\n        if(it->f0 == \"maths\") {\n            result.push_back(*it);\n            break;\n        }\n    }\n    for(it1 = subjectmarks.begin(); it1 != subjectmarks.end(); it1++) {\n        if(it1->f0 == \"english\") {\n            result.push_back(*it1);\n            break;\n        }\n    }\n    for(it2 = subjectmarks.begin(); it2 != subjectmarks.end(); it2++) {\n        if(it2->f0 == \"science\") {\n            result.push_back(*it2);\n            break;\n        }\n    }\n    return result;",
    "    std::vector<Union_std_string_long> result;\n    std::vector<Union_std_string_long>::iterator it;\n    std::vector<Union_std_string_long>::iterator it2;\n    std::vector<Union_std_string_long>::iterator it3;\n    std::vector<Union_std_string_long>::iterator it4;\n    std::vector<Union_std_string_long>::iterator it5;\n    std::vector<Union_std_string_long>::iterator it6;\n    std::vector<Union_std_string_long>::iterator it7;\n    std::vector<Union_std_string_long>::iterator it8;\n    std::vector<Union_std_string_long>::iterator it9;\n    std::vector<Union_std_string_long>::iterator it10;\n    std::vector<Union_std_string_long>::iterator it11;\n    std::vector<Union_std_string_long>::iterator it12;\n    std::vector<Union_std_string_long>::iterator it13;\n    std::vector<Union_std_string_long>::iterator it14;\n    std::vector<Union_std_string_long>::iterator it15;\n    std::vector<Union_std_string_long>::iterator it16;\n    std::vector<Union_std_string_long>::iterator it17;\n    std::vector<Union_std_string_long>::iterator it18;\n    std::vector<Union_std_string_long>::iterator it19;\n    std::vector<Union_std_string_long>::iterator it20;\n    std::vector<Union_std_string_long>::iterator it21;\n    std::vector<Union_std_string_long>::iterator it22;\n    std::vector<Union_std_string_long>::iterator it23;\n    std::vector<Union_std_string_long>::iterator it24;\n    std::vector<Union_std_string_long>::iterator it25;\n    std::vector<Union_std_string_long>::iterator it26;\n    std",
    "    std::vector<Union_std_string_long> result;\n    std::vector<Union_std_string_long>::iterator it;\n    for (it = subjectmarks.begin(); it != subjectmarks.end(); it++) {\n        if (it->f1 >= 50) {\n            result.push_back(*it);\n        }\n    }\n    return result;",
    "    std::vector<Union_std_string_long> result;\n    std::vector<Union_std_string_long> sorted_subjectmarks;\n    std::vector<Union_std_string_long> sorted_subjectmarks_1;\n    std::vector<Union_std_string_long> sorted_subjectmarks_2;\n    std::vector<Union_std_string_long> sorted_subjectmarks_3;\n    std::vector<Union_std_string_long> sorted_subjectmarks_4;\n    std::vector<Union_std_string_long> sorted_subjectmarks_5;\n    std::vector<Union_std_string_long> sorted_subjectmarks_6;\n    std::vector<Union_std_string_long> sorted_subjectmarks_7;\n    std::vector<Union_std_string_long> sorted_subjectmarks_8;\n    std::vector<Union_std_string_long> sorted_subjectmarks_9;\n    std::vector<Union_std_string_long> sorted_subjectmarks_10;\n    std::vector<Union_std_string_long> sorted_subjectmarks_11;\n    std::vector<Union_std_string_long> sorted_subjectmarks_12;\n    std::vector<Union_std_string_long> sorted_subjectmarks_13;\n    std::vector<Union_std_string_long> sorted_subjectmarks_14;\n    std::vector<Union_std_string_long> sorted_subjectmarks_15;\n    std::vector<Union_std_string_long> sorted_subjectmarks_16;\n    std::vector<Union_std_string_long> sorted_subjectmarks_17;\n    std::vector<Union_std_string_long> sorted_subjectmarks_18;\n    std::vector<Union_std_string_long> sorted_subjectmarks_19;\n    std::vector<Union_std_string_long> sorted_subjectmarks_20;\n    std::vector<Union_std_string_long> sorted_subjectmarks_21;\n    std::vector<Union_std_string_long> sorted_subjectmarks_22;\n    std::vector<Union_std_string_long> sorted",
    "    std::vector<Union_std_string_long> sorted_subjectmarks;\n    std::vector<Union_std_string_long>::iterator it;\n    for (it = subjectmarks.begin(); it != subjectmarks.end(); it++) {\n        if (it->f0 == \"Maths\") {\n            sorted_subjectmarks.push_back(*it);\n        }\n    }\n    for (it = subjectmarks.begin(); it != subjectmarks.end(); it++) {\n        if (it->f0 == \"Physics\") {\n            sorted_subjectmarks.push_back(*it);\n        }\n    }\n    for (it = subjectmarks.begin(); it != subjectmarks.end(); it++) {\n        if (it->f0 == \"Chemistry\") {\n            sorted_subjectmarks.push_back(*it);\n        }\n    }\n    return sorted_subjectmarks;",
    "    std::vector<Union_std_string_long> result;\n    std::vector<Union_std_string_long>::iterator it;\n    std::vector<Union_std_string_long>::iterator it1;\n    std::vector<Union_std_string_long>::iterator it2;\n    std::vector<Union_std_string_long>::iterator it3;\n    std::vector<Union_std_string_long>::iterator it4;\n    std::vector<Union_std_string_long>::iterator it5;\n    std::vector<Union_std_string_long>::iterator it6;\n    std::vector<Union_std_string_long>::iterator it7;\n    std::vector<Union_std_string_long>::iterator it8;\n    std::vector<Union_std_string_long>::iterator it9;\n    std::vector<Union_std_string_long>::iterator it10;\n    std::vector<Union_std_string_long>::iterator it11;\n    std::vector<Union_std_string_long>::iterator it12;\n    std::vector<Union_std_string_long>::iterator it13;\n    std::vector<Union_std_string_long>::iterator it14;\n    std::vector<Union_std_string_long>::iterator it15;\n    std::vector<Union_std_string_long>::iterator it16;\n    std::vector<Union_std_string_long>::iterator it17;\n    std::vector<Union_std_string_long>::iterator it18;\n    std::vector<Union_std_string_long>::iterator it19;\n    std::vector<Union_std_string_long>::iterator it20;\n    std::vector<Union_std_string_long>::iterator it21;\n    std::vector<Union_std_string_long>::iterator it22;\n    std::vector<Union_std_string_long>::iterator it23;\n    std::vector<Union_std_string_long>::iterator it24;\n    std::vector<Union_std_string_long>::iterator it25;\n    std",
    "    std::vector<Union_std_string_long> result;\n    std::vector<Union_std_string_long> sorted_marks;\n    std::vector<Union_std_string_long> sorted_subjects;\n    std::vector<Union_std_string_long> subjects;\n    std::vector<Union_std_string_long> marks;\n    for (auto i : subjectmarks) {\n        if (i.f0 == \"\") {\n            marks.push_back(i);\n        } else {\n            subjects.push_back(i);\n        }\n    }\n    std::sort(marks.begin(), marks.end(), [](Union_std_string_long a, Union_std_string_long b) {\n        return a.f1 < b.f1;\n    });\n    std::sort(subjects.begin(), subjects.end(), [](Union_std_string_long a, Union_std_string_long b) {\n        return a.f0 < b.f0;\n    });\n    for (auto i : marks) {\n        sorted_marks.push_back(i);\n    }\n    for (auto i : subjects) {\n        sorted_subjects.push_back(i);\n    }\n    for (int i = 0; i < sorted_marks.size(); i++) {\n        result.push_back(sorted_subjects[i]);\n        result.push_back(sorted_marks[i]);\n    }\n    return result;",
    "    std::vector<Union_std_string_long> result;\n    std::vector<Union_std_string_long>::iterator it;\n    std::vector<Union_std_string_long>::iterator it1;\n    std::vector<Union_std_string_long>::iterator it2;\n    std::vector<Union_std_string_long>::iterator it3;\n    std::vector<Union_std_string_long>::iterator it4;\n    std::vector<Union_std_string_long>::iterator it5;\n    std::vector<Union_std_string_long>::iterator it6;\n    std::vector<Union_std_string_long>::iterator it7;\n    std::vector<Union_std_string_long>::iterator it8;\n    std::vector<Union_std_string_long>::iterator it9;\n    std::vector<Union_std_string_long>::iterator it10;\n    std::vector<Union_std_string_long>::iterator it11;\n    std::vector<Union_std_string_long>::iterator it12;\n    std::vector<Union_std_string_long>::iterator it13;\n    std::vector<Union_std_string_long>::iterator it14;\n    std::vector<Union_std_string_long>::iterator it15;\n    std::vector<Union_std_string_long>::iterator it16;\n    std::vector<Union_std_string_long>::iterator it17;\n    std::vector<Union_std_string_long>::iterator it18;\n    std::vector<Union_std_string_long>::iterator it19;\n    std::vector<Union_std_string_long>::iterator it20;\n    std::vector<Union_std_string_long>::iterator it21;\n    std::vector<Union_std_string_long>::iterator it22;\n    std::vector<Union_std_string_long>::iterator it23;\n    std::vector<Union_std_string_long>::iterator it24;\n    std::vector<Union_std_string_long>::iterator it25;\n    std",
    "    std::vector<Union_std_string_long> result;\n    std::vector<Union_std_string_long>::iterator it;\n    for(it = subjectmarks.begin(); it != subjectmarks.end(); ++it) {\n        if((*it).f1 >= 50) {\n            result.push_back(*it);\n        }\n    }\n    return result;",
    "    std::vector<Union_std_string_long> sorted_subjectmarks;\n    std::vector<Union_std_string_long> sorted_subjectmarks_long;\n    std::vector<Union_std_string_long> sorted_subjectmarks_string;\n    for(int i = 0; i < subjectmarks.size(); i++) {\n        if(subjectmarks[i].f0 == subjectmarks[i].f1) {\n            sorted_subjectmarks_long.push_back(subjectmarks[i]);\n        }\n        else {\n            sorted_subjectmarks_string.push_back(subjectmarks[i]);\n        }\n    }\n    std::sort(sorted_subjectmarks_long.begin(), sorted_subjectmarks_long.end(), [](Union_std_string_long a, Union_std_string_long b) {\n        return a.f1 < b.f1;\n    });\n    std::sort(sorted_subjectmarks_string.begin(), sorted_subjectmarks_string.end(), [](Union_std_string_long a, Union_std_string_long b) {\n        return a.f0 < b.f0;\n    });\n    sorted_subjectmarks.insert(sorted_subjectmarks.end(), sorted_subjectmarks_long.begin(), sorted_subjectmarks_long.end());\n    sorted_subjectmarks.insert(sorted_subjectmarks.end(), sorted_subjectmarks_string.begin(), sorted_subjectmarks_string.end());\n    return sorted_subjectmarks;",
    "    std::vector<Union_std_string_long> result;\n    std::vector<Union_std_string_long>::iterator it;\n    std::vector<Union_std_string_long>::iterator it1;\n    std::vector<Union_std_string_long>::iterator it2;\n    std::vector<Union_std_string_long>::iterator it3;\n    std::vector<Union_std_string_long>::iterator it4;\n    std::vector<Union_std_string_long>::iterator it5;\n    std::vector<Union_std_string_long>::iterator it6;\n    std::vector<Union_std_string_long>::iterator it7;\n    std::vector<Union_std_string_long>::iterator it8;\n    std::vector<Union_std_string_long>::iterator it9;\n    std::vector<Union_std_string_long>::iterator it10;\n    std::vector<Union_std_string_long>::iterator it11;\n    std::vector<Union_std_string_long>::iterator it12;\n    std::vector<Union_std_string_long>::iterator it13;\n    std::vector<Union_std_string_long>::iterator it14;\n    std::vector<Union_std_string_long>::iterator it15;\n    std::vector<Union_std_string_long>::iterator it16;\n    std::vector<Union_std_string_long>::iterator it17;\n    std::vector<Union_std_string_long>::iterator it18;\n    std::vector<Union_std_string_long>::iterator it19;\n    std::vector<Union_std_string_long>::iterator it20;\n    std::vector<Union_std_string_long>::iterator it21;\n    std::vector<Union_std_string_long>::iterator it22;\n    std::vector<Union_std_string_long>::iterator it23;\n    std::vector<Union_std_string_long>::iterator it24;\n    std::vector<Union_std_string_long>::iterator it25;\n    std",
    "    std::vector<Union_std_string_long> result;\n    std::vector<Union_std_string_long> result1;\n    std::vector<Union_std_string_long> result2;\n    std::vector<Union_std_string_long> result3;\n    std::vector<Union_std_string_long> result4;\n    std::vector<Union_std_string_long> result5;\n    std::vector<Union_std_string_long> result6;\n    std::vector<Union_std_string_long> result7;\n    std::vector<Union_std_string_long> result8;\n    std::vector<Union_std_string_long> result9;\n    std::vector<Union_std_string_long> result10;\n    std::vector<Union_std_string_long> result11;\n    std::vector<Union_std_string_long> result12;\n    std::vector<Union_std_string_long> result13;\n    std::vector<Union_std_string_long> result14;\n    std::vector<Union_std_string_long> result15;\n    std::vector<Union_std_string_long> result16;\n    std::vector<Union_std_string_long> result17;\n    std::vector<Union_std_string_long> result18;\n    std::vector<Union_std_string_long> result19;\n    std::vector<Union_std_string_long> result20;\n    std::vector<Union_std_string_long> result21;\n    std::vector<Union_std_string_long> result22;\n    std::vector<Union_std_string_long> result23;\n    std::vector<Union_std_string_long> result24;\n    std::vector<Union_std_string_long> result25;\n    std::vector<Union_std_string_long> result26;\n    std::vector<Union_std_string_long> result27;\n    std::vector<Union_std_string_long> result28;\n    std::vector<Union_std_string_long> result29;\n    std",
    "    std::vector<Union_std_string_long> result;\n    std::vector<Union_std_string_long> temp;\n    std::vector<Union_std_string_long> temp2;\n    std::vector<Union_std_string_long> temp3;\n    std::vector<Union_std_string_long> temp4;\n    std::vector<Union_std_string_long> temp5;\n    std::vector<Union_std_string_long> temp6;\n    std::vector<Union_std_string_long> temp7;\n    std::vector<Union_std_string_long> temp8;\n    std::vector<Union_std_string_long> temp9;\n    std::vector<Union_std_string_long> temp10;\n    std::vector<Union_std_string_long> temp11;\n    std::vector<Union_std_string_long> temp12;\n    std::vector<Union_std_string_long> temp13;\n    std::vector<Union_std_string_long> temp14;\n    std::vector<Union_std_string_long> temp15;\n    std::vector<Union_std_string_long> temp16;\n    std::vector<Union_std_string_long> temp17;\n    std::vector<Union_std_string_long> temp18;\n    std::vector<Union_std_string_long> temp19;\n    std::vector<Union_std_string_long> temp20;\n    std::vector<Union_std_string_long> temp21;\n    std::vector<Union_std_string_long> temp22;\n    std::vector<Union_std_string_long> temp23;\n    std::vector<Union_std_string_long> temp24;\n    std::vector<Union_std_string_long> temp25;\n    std::vector<Union_std_string_long> temp26;\n    std::vector<Union_std_string_long> temp27;\n    std::vector<Union_std_string_long> temp28;\n    std::vector<Union_std_string_long> temp29;\n    std::",
    "    std::vector<Union_std_string_long> sorted_subjectmarks;\n    std::vector<Union_std_string_long> sorted_subjectmarks_1;\n    std::vector<Union_std_string_long> sorted_subjectmarks_2;\n    std::vector<Union_std_string_long> sorted_subjectmarks_3;\n    std::vector<Union_std_string_long> sorted_subjectmarks_4;\n    std::vector<Union_std_string_long> sorted_subjectmarks_5;\n    std::vector<Union_std_string_long> sorted_subjectmarks_6;\n    std::vector<Union_std_string_long> sorted_subjectmarks_7;\n    std::vector<Union_std_string_long> sorted_subjectmarks_8;\n    std::vector<Union_std_string_long> sorted_subjectmarks_9;\n    std::vector<Union_std_string_long> sorted_subjectmarks_10;\n    std::vector<Union_std_string_long> sorted_subjectmarks_11;\n    std::vector<Union_std_string_long> sorted_subjectmarks_12;\n    std::vector<Union_std_string_long> sorted_subjectmarks_13;\n    std::vector<Union_std_string_long> sorted_subjectmarks_14;\n    std::vector<Union_std_string_long> sorted_subjectmarks_15;\n    std::vector<Union_std_string_long> sorted_subjectmarks_16;\n    std::vector<Union_std_string_long> sorted_subjectmarks_17;\n    std::vector<Union_std_string_long> sorted_subjectmarks_18;\n    std::vector<Union_std_string_long> sorted_subjectmarks_19;\n    std::vector<Union_std_string_long> sorted_subjectmarks_20;\n    std::vector<Union_std_string_long> sorted_subjectmarks_21;\n    std::vector<Union_std_string_long> sorted_subjectmarks_22;\n    std::vector<Union_std_string_long> sorted_subjectmarks_23;\n    std::vector<Union_std_",
    "    std::vector<Union_std_string_long> result;\n    std::vector<Union_std_string_long> result1;\n    std::vector<Union_std_string_long> result2;\n    std::vector<Union_std_string_long> result3;\n    std::vector<Union_std_string_long> result4;\n    std::vector<Union_std_string_long> result5;\n    std::vector<Union_std_string_long> result6;\n    std::vector<Union_std_string_long> result7;\n    std::vector<Union_std_string_long> result8;\n    std::vector<Union_std_string_long> result9;\n    std::vector<Union_std_string_long> result10;\n    std::vector<Union_std_string_long> result11;\n    std::vector<Union_std_string_long> result12;\n    std::vector<Union_std_string_long> result13;\n    std::vector<Union_std_string_long> result14;\n    std::vector<Union_std_string_long> result15;\n    std::vector<Union_std_string_long> result16;\n    std::vector<Union_std_string_long> result17;\n    std::vector<Union_std_string_long> result18;\n    std::vector<Union_std_string_long> result19;\n    std::vector<Union_std_string_long> result20;\n    std::vector<Union_std_string_long> result21;\n    std::vector<Union_std_string_long> result22;\n    std::vector<Union_std_string_long> result23;\n    std::vector<Union_std_string_long> result24;\n    std::vector<Union_std_string_long> result25;\n    std::vector<Union_std_string_long> result26;\n    std::vector<Union_std_string_long> result27;\n    std::vector<Union_std_string_long> result28;\n    std::vector<Union_std_string_long> result29;\n    std",
    "    std::vector<Union_std_string_long> result;\n    std::vector<Union_std_string_long> sorted_subjectmarks;\n    std::vector<Union_std_string_long> sorted_subjectmarks_1;\n    std::vector<Union_std_string_long> sorted_subjectmarks_2;\n    std::vector<Union_std_string_long> sorted_subjectmarks_3;\n    std::vector<Union_std_string_long> sorted_subjectmarks_4;\n    std::vector<Union_std_string_long> sorted_subjectmarks_5;\n    std::vector<Union_std_string_long> sorted_subjectmarks_6;\n    std::vector<Union_std_string_long> sorted_subjectmarks_7;\n    std::vector<Union_std_string_long> sorted_subjectmarks_8;\n    std::vector<Union_std_string_long> sorted_subjectmarks_9;\n    std::vector<Union_std_string_long> sorted_subjectmarks_10;\n    std::vector<Union_std_string_long> sorted_subjectmarks_11;\n    std::vector<Union_std_string_long> sorted_subjectmarks_12;\n    std::vector<Union_std_string_long> sorted_subjectmarks_13;\n    std::vector<Union_std_string_long> sorted_subjectmarks_14;\n    std::vector<Union_std_string_long> sorted_subjectmarks_15;\n    std::vector<Union_std_string_long> sorted_subjectmarks_16;\n    std::vector<Union_std_string_long> sorted_subjectmarks_17;\n    std::vector<Union_std_string_long> sorted_subjectmarks_18;\n    std::vector<Union_std_string_long> sorted_subjectmarks_19;\n    std::vector<Union_std_string_long> sorted_subjectmarks_20;\n    std::vector<Union_std_string_long> sorted_subjectmarks_21;\n    std::vector<Union_std_string_long> sorted_subjectmarks_22;\n    std::vector<Union_std_string_long> sorted",
    "    std::vector<Union_std_string_long> result;\n    std::vector<Union_std_string_long>::iterator it;\n    std::vector<Union_std_string_long>::iterator it1;\n    std::vector<Union_std_string_long>::iterator it2;\n    std::vector<Union_std_string_long>::iterator it3;\n    std::vector<Union_std_string_long>::iterator it4;\n    std::vector<Union_std_string_long>::iterator it5;\n    std::vector<Union_std_string_long>::iterator it6;\n    std::vector<Union_std_string_long>::iterator it7;\n    std::vector<Union_std_string_long>::iterator it8;\n    std::vector<Union_std_string_long>::iterator it9;\n    std::vector<Union_std_string_long>::iterator it10;\n    std::vector<Union_std_string_long>::iterator it11;\n    std::vector<Union_std_string_long>::iterator it12;\n    std::vector<Union_std_string_long>::iterator it13;\n    std::vector<Union_std_string_long>::iterator it14;\n    std::vector<Union_std_string_long>::iterator it15;\n    std::vector<Union_std_string_long>::iterator it16;\n    std::vector<Union_std_string_long>::iterator it17;\n    std::vector<Union_std_string_long>::iterator it18;\n    std::vector<Union_std_string_long>::iterator it19;\n    std::vector<Union_std_string_long>::iterator it20;\n    std::vector<Union_std_string_long>::iterator it21;\n    std::vector<Union_std_string_long>::iterator it22;\n    std::vector<Union_std_string_long>::iterator it23;\n    std::vector<Union_std_string_long>::iterator it24;\n    std::vector<Union_std_string_long>::iterator it25;\n    std",
    "    std::vector<Union_std_string_long> result;\n    std::vector<Union_std_string_long>::iterator it;\n    std::vector<Union_std_string_long>::iterator it2;\n    std::vector<Union_std_string_long>::iterator it3;\n    std::vector<Union_std_string_long>::iterator it4;\n    std::vector<Union_std_string_long>::iterator it5;\n    std::vector<Union_std_string_long>::iterator it6;\n    std::vector<Union_std_string_long>::iterator it7;\n    std::vector<Union_std_string_long>::iterator it8;\n    std::vector<Union_std_string_long>::iterator it9;\n    std::vector<Union_std_string_long>::iterator it10;\n    std::vector<Union_std_string_long>::iterator it11;\n    std::vector<Union_std_string_long>::iterator it12;\n    std::vector<Union_std_string_long>::iterator it13;\n    std::vector<Union_std_string_long>::iterator it14;\n    std::vector<Union_std_string_long>::iterator it15;\n    std::vector<Union_std_string_long>::iterator it16;\n    std::vector<Union_std_string_long>::iterator it17;\n    std::vector<Union_std_string_long>::iterator it18;\n    std::vector<Union_std_string_long>::iterator it19;\n    std::vector<Union_std_string_long>::iterator it20;\n    std::vector<Union_std_string_long>::iterator it21;\n    std::vector<Union_std_string_long>::iterator it22;\n    std::vector<Union_std_string_long>::iterator it23;\n    std::vector<Union_std_string_long>::iterator it24;\n    std::vector<Union_std_string_long>::iterator it25;\n    std::vector<Union_std_string_long>::iterator it26;\n    std",
    "    std::vector<Union_std_string_long> result;\n    std::vector<Union_std_string_long> temp;\n    std::vector<Union_std_string_long> temp1;\n    std::vector<Union_std_string_long> temp2;\n    std::vector<Union_std_string_long> temp3;\n    std::vector<Union_std_string_long> temp4;\n    std::vector<Union_std_string_long> temp5;\n    std::vector<Union_std_string_long> temp6;\n    std::vector<Union_std_string_long> temp7;\n    std::vector<Union_std_string_long> temp8;\n    std::vector<Union_std_string_long> temp9;\n    std::vector<Union_std_string_long> temp10;\n    std::vector<Union_std_string_long> temp11;\n    std::vector<Union_std_string_long> temp12;\n    std::vector<Union_std_string_long> temp13;\n    std::vector<Union_std_string_long> temp14;\n    std::vector<Union_std_string_long> temp15;\n    std::vector<Union_std_string_long> temp16;\n    std::vector<Union_std_string_long> temp17;\n    std::vector<Union_std_string_long> temp18;\n    std::vector<Union_std_string_long> temp19;\n    std::vector<Union_std_string_long> temp20;\n    std::vector<Union_std_string_long> temp21;\n    std::vector<Union_std_string_long> temp22;\n    std::vector<Union_std_string_long> temp23;\n    std::vector<Union_std_string_long> temp24;\n    std::vector<Union_std_string_long> temp25;\n    std::vector<Union_std_string_long> temp26;\n    std::vector<Union_std_string_long> temp27;\n    std::vector<Union_std_string_long> temp28;\n    std::",
    "    std::vector<Union_std_string_long> result;\n    std::vector<Union_std_string_long> marks;\n    std::vector<Union_std_string_long> subjects;\n    for (int i = 0; i < subjectmarks.size(); i++) {\n        if (subjectmarks[i].f0 == \"\") {\n            marks.push_back(subjectmarks[i].f1);\n        } else {\n            subjects.push_back(subjectmarks[i].f0);\n        }\n    }\n    std::sort(marks.begin(), marks.end());\n    for (int i = 0; i < marks.size(); i++) {\n        result.push_back(subjects[i]);\n        result.push_back(marks[i]);\n    }\n    return result;",
    "    std::vector<Union_std_string_long> sorted_subject_marks;\n    std::vector<Union_std_string_long>::iterator it;\n    std::vector<Union_std_string_long>::iterator it1;\n    std::vector<Union_std_string_long>::iterator it2;\n    std::vector<Union_std_string_long>::iterator it3;\n    std::vector<Union_std_string_long>::iterator it4;\n    std::vector<Union_std_string_long>::iterator it5;\n    std::vector<Union_std_string_long>::iterator it6;\n    std::vector<Union_std_string_long>::iterator it7;\n    std::vector<Union_std_string_long>::iterator it8;\n    std::vector<Union_std_string_long>::iterator it9;\n    std::vector<Union_std_string_long>::iterator it10;\n    std::vector<Union_std_string_long>::iterator it11;\n    std::vector<Union_std_string_long>::iterator it12;\n    std::vector<Union_std_string_long>::iterator it13;\n    std::vector<Union_std_string_long>::iterator it14;\n    std::vector<Union_std_string_long>::iterator it15;\n    std::vector<Union_std_string_long>::iterator it16;\n    std::vector<Union_std_string_long>::iterator it17;\n    std::vector<Union_std_string_long>::iterator it18;\n    std::vector<Union_std_string_long>::iterator it19;\n    std::vector<Union_std_string_long>::iterator it20;\n    std::vector<Union_std_string_long>::iterator it21;\n    std::vector<Union_std_string_long>::iterator it22;\n    std::vector<Union_std_string_long>::iterator it23;\n    std::vector<Union_std_string_long>::iterator it24;\n    std::vector<Union_std_string_long>::iterator it25",
    "    std::vector<Union_std_string_long> sorted_subject_marks;\n    std::map<std::string, int> subject_marks_map;\n    for(auto i : subjectmarks) {\n        if(i == \"Maths\") {\n            subject_marks_map[\"Maths\"] = i.f1;\n        }\n        else if(i == \"Science\") {\n            subject_marks_map[\"Science\"] = i.f1;\n        }\n        else if(i == \"English\") {\n            subject_marks_map[\"English\"] = i.f1;\n        }\n    }\n    for(auto i : subject_marks_map) {\n        sorted_subject_marks.push_back(Union_std_string_long(i.first));\n        sorted_subject_marks.push_back(Union_std_string_long(i.second));\n    }\n    return sorted_subject_marks;",
    "    std::vector<Union_std_string_long> result;\n    std::vector<Union_std_string_long>::iterator it;\n    std::vector<Union_std_string_long>::iterator it1;\n    std::vector<Union_std_string_long>::iterator it2;\n    std::vector<Union_std_string_long>::iterator it3;\n    std::vector<Union_std_string_long>::iterator it4;\n    std::vector<Union_std_string_long>::iterator it5;\n    std::vector<Union_std_string_long>::iterator it6;\n    std::vector<Union_std_string_long>::iterator it7;\n    std::vector<Union_std_string_long>::iterator it8;\n    std::vector<Union_std_string_long>::iterator it9;\n    std::vector<Union_std_string_long>::iterator it10;\n    std::vector<Union_std_string_long>::iterator it11;\n    std::vector<Union_std_string_long>::iterator it12;\n    std::vector<Union_std_string_long>::iterator it13;\n    std::vector<Union_std_string_long>::iterator it14;\n    std::vector<Union_std_string_long>::iterator it15;\n    std::vector<Union_std_string_long>::iterator it16;\n    std::vector<Union_std_string_long>::iterator it17;\n    std::vector<Union_std_string_long>::iterator it18;\n    std::vector<Union_std_string_long>::iterator it19;\n    std::vector<Union_std_string_long>::iterator it20;\n    std::vector<Union_std_string_long>::iterator it21;\n    std::vector<Union_std_string_long>::iterator it22;\n    std::vector<Union_std_string_long>::iterator it23;\n    std::vector<Union_std_string_long>::iterator it24;\n    std::vector<Union_std_string_long>::iterator it25;\n    std",
    "    std::vector<Union_std_string_long> sorted_subjectmarks;\n    std::vector<Union_std_string_long> sorted_subjectmarks_1;\n    std::vector<Union_std_string_long> sorted_subjectmarks_2;\n    std::vector<Union_std_string_long> sorted_subjectmarks_3;\n    std::vector<Union_std_string_long> sorted_subjectmarks_4;\n    std::vector<Union_std_string_long> sorted_subjectmarks_5;\n    std::vector<Union_std_string_long> sorted_subjectmarks_6;\n    std::vector<Union_std_string_long> sorted_subjectmarks_7;\n    std::vector<Union_std_string_long> sorted_subjectmarks_8;\n    std::vector<Union_std_string_long> sorted_subjectmarks_9;\n    std::vector<Union_std_string_long> sorted_subjectmarks_10;\n    std::vector<Union_std_string_long> sorted_subjectmarks_11;\n    std::vector<Union_std_string_long> sorted_subjectmarks_12;\n    std::vector<Union_std_string_long> sorted_subjectmarks_13;\n    std::vector<Union_std_string_long> sorted_subjectmarks_14;\n    std::vector<Union_std_string_long> sorted_subjectmarks_15;\n    std::vector<Union_std_string_long> sorted_subjectmarks_16;\n    std::vector<Union_std_string_long> sorted_subjectmarks_17;\n    std::vector<Union_std_string_long> sorted_subjectmarks_18;\n    std::vector<Union_std_string_long> sorted_subjectmarks_19;\n    std::vector<Union_std_string_long> sorted_subjectmarks_20;\n    std::vector<Union_std_string_long> sorted_subjectmarks_21;\n    std::vector<Union_std_string_long> sorted_subjectmarks_22;\n    std::vector<Union_std_string_long> sorted_subjectmarks_23;\n    std::vector<Union_std_",
    "    std::vector<Union_std_string_long> sorted_subjectmarks;\n    std::vector<Union_std_string_long>::iterator it;\n    for (it = subjectmarks.begin(); it != subjectmarks.end(); it++) {\n        if (it->f0 == \"Maths\") {\n            sorted_subjectmarks.push_back(*it);\n        }\n    }\n    for (it = subjectmarks.begin(); it != subjectmarks.end(); it++) {\n        if (it->f0 == \"Science\") {\n            sorted_subjectmarks.push_back(*it);\n        }\n    }\n    for (it = subjectmarks.begin(); it != subjectmarks.end(); it++) {\n        if (it->f0 == \"English\") {\n            sorted_subjectmarks.push_back(*it);\n        }\n    }\n    return sorted_subjectmarks;",
    "    std::vector<Union_std_string_long> result;\n    std::vector<Union_std_string_long>::iterator it;\n    for(it = subjectmarks.begin(); it != subjectmarks.end(); it++) {\n        if(it->f0 == \"Maths\") {\n            result.push_back(Union_std_string_long(it->f1));\n        }\n    }\n    return result;",
    "    std::vector<Union_std_string_long> result;\n    std::sort(subjectmarks.begin(), subjectmarks.end(), [](const Union_std_string_long& a, const Union_std_string_long& b) {\n        return a.f1 < b.f1;\n    });\n    for (auto i : subjectmarks) {\n        result.push_back(i);\n    }\n    return result;",
    "    std::vector<Union_std_string_long> result;\n    std::vector<Union_std_string_long>::iterator it;\n    std::vector<Union_std_string_long>::iterator it2;\n    std::vector<Union_std_string_long>::iterator it3;\n    std::vector<Union_std_string_long>::iterator it4;\n    std::vector<Union_std_string_long>::iterator it5;\n    std::vector<Union_std_string_long>::iterator it6;\n    std::vector<Union_std_string_long>::iterator it7;\n    std::vector<Union_std_string_long>::iterator it8;\n    std::vector<Union_std_string_long>::iterator it9;\n    std::vector<Union_std_string_long>::iterator it10;\n    std::vector<Union_std_string_long>::iterator it11;\n    std::vector<Union_std_string_long>::iterator it12;\n    std::vector<Union_std_string_long>::iterator it13;\n    std::vector<Union_std_string_long>::iterator it14;\n    std::vector<Union_std_string_long>::iterator it15;\n    std::vector<Union_std_string_long>::iterator it16;\n    std::vector<Union_std_string_long>::iterator it17;\n    std::vector<Union_std_string_long>::iterator it18;\n    std::vector<Union_std_string_long>::iterator it19;\n    std::vector<Union_std_string_long>::iterator it20;\n    std::vector<Union_std_string_long>::iterator it21;\n    std::vector<Union_std_string_long>::iterator it22;\n    std::vector<Union_std_string_long>::iterator it23;\n    std::vector<Union_std_string_long>::iterator it24;\n    std::vector<Union_std_string_long>::iterator it25;\n    std::vector<Union_std_string_long>::iterator it26;\n    std",
    "    std::vector<Union_std_string_long> sorted_subjectmarks;\n    std::vector<Union_std_string_long>::iterator it;\n    for(it = subjectmarks.begin(); it != subjectmarks.end(); it++) {\n        if(it->f0 == \"Maths\") {\n            sorted_subjectmarks.push_back(*it);\n        }\n    }\n    for(it = subjectmarks.begin(); it != subjectmarks.end(); it++) {\n        if(it->f0 == \"English\") {\n            sorted_subjectmarks.push_back(*it);\n        }\n    }\n    for(it = subjectmarks.begin(); it != subjectmarks.end(); it++) {\n        if(it->f0 == \"Science\") {\n            sorted_subjectmarks.push_back(*it);\n        }\n    }\n    for(it = subjectmarks.begin(); it != subjectmarks.end(); it++) {\n        if(it->f0 == \"History\") {\n            sorted_subjectmarks.push_back(*it);\n        }\n    }\n    for(it = subjectmarks.begin(); it != subjectmarks.end(); it++) {\n        if(it->f0 == \"Geography\") {\n            sorted_subjectmarks.push_back(*it);\n        }\n    }\n    return sorted_subjectmarks;",
    "    std::vector<Union_std_string_long> result;\n    std::vector<Union_std_string_long>::iterator it;\n    std::vector<Union_std_string_long>::iterator it1;\n    std::vector<Union_std_string_long>::iterator it2;\n    std::vector<Union_std_string_long>::iterator it3;\n    std::vector<Union_std_string_long>::iterator it4;\n    std::vector<Union_std_string_long>::iterator it5;\n    std::vector<Union_std_string_long>::iterator it6;\n    std::vector<Union_std_string_long>::iterator it7;\n    std::vector<Union_std_string_long>::iterator it8;\n    std::vector<Union_std_string_long>::iterator it9;\n    std::vector<Union_std_string_long>::iterator it10;\n    std::vector<Union_std_string_long>::iterator it11;\n    std::vector<Union_std_string_long>::iterator it12;\n    std::vector<Union_std_string_long>::iterator it13;\n    std::vector<Union_std_string_long>::iterator it14;\n    std::vector<Union_std_string_long>::iterator it15;\n    std::vector<Union_std_string_long>::iterator it16;\n    std::vector<Union_std_string_long>::iterator it17;\n    std::vector<Union_std_string_long>::iterator it18;\n    std::vector<Union_std_string_long>::iterator it19;\n    std::vector<Union_std_string_long>::iterator it20;\n    std::vector<Union_std_string_long>::iterator it21;\n    std::vector<Union_std_string_long>::iterator it22;\n    std::vector<Union_std_string_long>::iterator it23;\n    std::vector<Union_std_string_long>::iterator it24;\n    std::vector<Union_std_string_long>::iterator it25;\n    std",
    "    std::vector<Union_std_string_long> result;\n    std::vector<Union_std_string_long>::iterator it;\n    std::vector<Union_std_string_long>::iterator it1;\n    std::vector<Union_std_string_long>::iterator it2;\n    std::vector<Union_std_string_long>::iterator it3;\n    std::vector<Union_std_string_long>::iterator it4;\n    std::vector<Union_std_string_long>::iterator it5;\n    std::vector<Union_std_string_long>::iterator it6;\n    std::vector<Union_std_string_long>::iterator it7;\n    std::vector<Union_std_string_long>::iterator it8;\n    std::vector<Union_std_string_long>::iterator it9;\n    std::vector<Union_std_string_long>::iterator it10;\n    std::vector<Union_std_string_long>::iterator it11;\n    std::vector<Union_std_string_long>::iterator it12;\n    std::vector<Union_std_string_long>::iterator it13;\n    std::vector<Union_std_string_long>::iterator it14;\n    std::vector<Union_std_string_long>::iterator it15;\n    std::vector<Union_std_string_long>::iterator it16;\n    std::vector<Union_std_string_long>::iterator it17;\n    std::vector<Union_std_string_long>::iterator it18;\n    std::vector<Union_std_string_long>::iterator it19;\n    std::vector<Union_std_string_long>::iterator it20;\n    std::vector<Union_std_string_long>::iterator it21;\n    std::vector<Union_std_string_long>::iterator it22;\n    std::vector<Union_std_string_long>::iterator it23;\n    std::vector<Union_std_string_long>::iterator it24;\n    std::vector<Union_std_string_long>::iterator it25;\n    std",
    "    std::vector<Union_std_string_long> result;\n    std::vector<Union_std_string_long>::iterator it;\n    for (it = subjectmarks.begin(); it != subjectmarks.end(); it++) {\n        if ((*it).f1 >= 40) {\n            result.push_back(*it);\n        }\n    }\n    return result;",
    "    std::vector<Union_std_string_long> sorted_subjectmarks;\n    std::sort(subjectmarks.begin(), subjectmarks.end(), [](const Union_std_string_long &a, const Union_std_string_long &b) {\n        return a.f1 < b.f1;\n    });\n    for (auto i : subjectmarks) {\n        sorted_subjectmarks.push_back(i);\n    }\n    return sorted_subjectmarks;",
    "    std::vector<Union_std_string_long> result;\n    std::vector<Union_std_string_long>::iterator it;\n    std::vector<Union_std_string_long>::iterator it1;\n    std::vector<Union_std_string_long>::iterator it2;\n    std::vector<Union_std_string_long>::iterator it3;\n    std::vector<Union_std_string_long>::iterator it4;\n    std::vector<Union_std_string_long>::iterator it5;\n    std::vector<Union_std_string_long>::iterator it6;\n    std::vector<Union_std_string_long>::iterator it7;\n    std::vector<Union_std_string_long>::iterator it8;\n    std::vector<Union_std_string_long>::iterator it9;\n    std::vector<Union_std_string_long>::iterator it10;\n    std::vector<Union_std_string_long>::iterator it11;\n    std::vector<Union_std_string_long>::iterator it12;\n    std::vector<Union_std_string_long>::iterator it13;\n    std::vector<Union_std_string_long>::iterator it14;\n    std::vector<Union_std_string_long>::iterator it15;\n    std::vector<Union_std_string_long>::iterator it16;\n    std::vector<Union_std_string_long>::iterator it17;\n    std::vector<Union_std_string_long>::iterator it18;\n    std::vector<Union_std_string_long>::iterator it19;\n    std::vector<Union_std_string_long>::iterator it20;\n    std::vector<Union_std_string_long>::iterator it21;\n    std::vector<Union_std_string_long>::iterator it22;\n    std::vector<Union_std_string_long>::iterator it23;\n    std::vector<Union_std_string_long>::iterator it24;\n    std::vector<Union_std_string_long>::iterator it25;\n    std",
    "    std::vector<Union_std_string_long> result;\n    std::vector<Union_std_string_long>::iterator it;\n    for (it = subjectmarks.begin(); it != subjectmarks.end(); it++) {\n        if (it->f1 >= 40) {\n            result.push_back(*it);\n        }\n    }\n    return result;",
    "    std::vector<Union_std_string_long> sorted_subjectmarks;\n    std::sort(subjectmarks.begin(), subjectmarks.end(), [](Union_std_string_long a, Union_std_string_long b) {\n        return a.f1 < b.f1;\n    });\n    for (auto i : subjectmarks) {\n        sorted_subjectmarks.push_back(i);\n    }\n    return sorted_subjectmarks;",
    "    std::vector<Union_std_string_long> result;\n    std::vector<Union_std_string_long>::iterator itr;\n    std::vector<Union_std_string_long>::iterator itr1;\n    std::vector<Union_std_string_long>::iterator itr2;\n    std::vector<Union_std_string_long>::iterator itr3;\n    std::vector<Union_std_string_long>::iterator itr4;\n    std::vector<Union_std_string_long>::iterator itr5;\n    std::vector<Union_std_string_long>::iterator itr6;\n    std::vector<Union_std_string_long>::iterator itr7;\n    std::vector<Union_std_string_long>::iterator itr8;\n    std::vector<Union_std_string_long>::iterator itr9;\n    std::vector<Union_std_string_long>::iterator itr10;\n    std::vector<Union_std_string_long>::iterator itr11;\n    std::vector<Union_std_string_long>::iterator itr12;\n    std::vector<Union_std_string_long>::iterator itr13;\n    std::vector<Union_std_string_long>::iterator itr14;\n    std::vector<Union_std_string_long>::iterator itr15;\n    std::vector<Union_std_string_long>::iterator itr16;\n    std::vector<Union_std_string_long>::iterator itr17;\n    std::vector<Union_std_string_long>::iterator itr18;\n    std::vector<Union_std_string_long>::iterator itr19;\n    std::vector<Union_std_string_long>::iterator itr20;\n    std::vector<Union_std_string_long>::iterator itr21;\n    std::vector<Union_std_string_long>::iterator itr22;\n    std::vector<Union_std_string_long>::iterator itr23;\n    std::vector<Union_std_string_long>::iterator it"
  ]
}
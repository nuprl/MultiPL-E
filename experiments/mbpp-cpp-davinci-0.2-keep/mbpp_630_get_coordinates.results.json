{
  "name": "mbpp_630_get_coordinates",
  "language": "cpp",
  "prompt": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to extract all the adjacent coordinates of the given coordinate tuple.\nstd::vector<std::vector<long>> get_coordinates(long test_tup) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_630_get_coordinates.py",
  "prompt_terminology": "verbatim",
  "tests": "}\nint main() {\n    auto candidate = get_coordinates;\n    assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n    assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n    assert(candidate(std::make_tuple(5, 6)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)7}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)7}), (std::vector<long>)std::vector<long>({(long)6, (long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)6, (long)7})})));\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "results": [
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to extract all the adjacent coordinates of the given coordinate tuple.\nstd::vector<std::vector<long>> get_coordinates(long test_tup) {\n    std::vector<std::vector<long>> coordinates;\n    std::vector<long> temp;\n    long x = test_tup;\n    long y = test_tup;\n    long z = test_tup;\n    for (long i = 0; i < test_tup; i++) {\n        temp.push_back(x);\n        temp.push_back(y);\n        temp.push_back(z);\n        coordinates.push_back(temp);\n        temp.clear();\n        x--;\n        y--;\n        z--;\n    }\n    return coordinates;\n}\nint main() {\n    auto candidate = get_coordinates;\n    assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n    assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n    assert(candidate(std::make_tuple(5, 6)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)7}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)7}), (std::vector<long>)std::vector<long>({(long)6, (long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)6, (long)7})})));\n}\n",
      "timestamp": 1665510634,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpxw75rw8v.cpp:2:\n/tmp/tmpxw75rw8v.cpp: In function \u2018int main()\u2019:\n/tmp/tmpxw75rw8v.cpp:24:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   24 |     assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                                     std::tuple<int, int>\n/tmp/tmpxw75rw8v.cpp:25:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   25 |     assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to extract all the adjacent coordinates of the given coordinate tuple.\nstd::vector<std::vector<long>> get_coordinates(long test_tup) {\n    std::vector<std::vector<long>> coordinates;\n    std::vector<long> temp_coord;\n    long x = test_tup / 100;\n    long y = test_tup % 100;\n    temp_coord.push_back(x);\n    temp_coord.push_back(y);\n    coordinates.push_back(temp_coord);\n    temp_coord.clear();\n    temp_coord.push_back(x);\n    temp_coord.push_back(y + 1);\n    coordinates.push_back(temp_coord);\n    temp_coord.clear();\n    temp_coord.push_back(x);\n    temp_coord.push_back(y - 1);\n    coordinates.push_back(temp_coord);\n    temp_coord.clear();\n    temp_coord.push_back(x + 1);\n    temp_coord.push_back(y);\n    coordinates.push_back(temp_coord);\n    temp_coord.clear();\n    temp_coord.push_back(x - 1);\n    temp_coord.push_back(y);\n    coordinates.push_back(temp_coord);\n    temp_coord.clear();\n    temp_coord.push_back(x + 1);\n    temp_coord.push_back(y + 1);\n    coordinates.push_back(temp_coord);\n    temp_coord.clear();\n    temp_coord.push_back(x - 1);\n    temp_coord.push_back(y - 1);\n    coordinates.push_back(temp_coord);\n    temp_coord.clear();\n    temp_coord.push_back(x + 1);\n    temp_coord.push_back(y - 1);\n    coordinates.push_back(temp_coord);\n    temp_coord.clear();\n    temp_coord.push_back(x - 1);\n    temp_coord.push_back(y + 1);\n    coordinates.push_back(temp_coord);\n    return coordinates;\n}\nint main() {\n    auto candidate = get_coordinates;\n    assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n    assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n    assert(candidate(std::make_tuple(5, 6)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)7}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)7}), (std::vector<long>)std::vector<long>({(long)6, (long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)6, (long)7})})));\n}\n",
      "timestamp": 1665510634,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpy0csaydz.cpp:2:\n/tmp/tmpy0csaydz.cpp: In function \u2018int main()\u2019:\n/tmp/tmpy0csaydz.cpp:48:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   48 |     assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                                     std::tuple<int, int>\n/tmp/tmpy0csaydz.cpp:49:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   49 |     assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to extract all the adjacent coordinates of the given coordinate tuple.\nstd::vector<std::vector<long>> get_coordinates(long test_tup) {\n    std::vector<std::vector<long>> coordinates;\n    std::vector<long> temp;\n    long x = test_tup / 100;\n    long y = test_tup % 100;\n    for (long i = x - 1; i <= x + 1; i++) {\n        for (long j = y - 1; j <= y + 1; j++) {\n            if (i == x && j == y) {\n                continue;\n            }\n            temp.push_back(i);\n            temp.push_back(j);\n            coordinates.push_back(temp);\n            temp.clear();\n        }\n    }\n    return coordinates;\n}\nint main() {\n    auto candidate = get_coordinates;\n    assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n    assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n    assert(candidate(std::make_tuple(5, 6)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)7}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)7}), (std::vector<long>)std::vector<long>({(long)6, (long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)6, (long)7})})));\n}\n",
      "timestamp": 1665510634,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp3wesp1fh.cpp:2:\n/tmp/tmp3wesp1fh.cpp: In function \u2018int main()\u2019:\n/tmp/tmp3wesp1fh.cpp:24:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   24 |     assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                                     std::tuple<int, int>\n/tmp/tmp3wesp1fh.cpp:25:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   25 |     assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to extract all the adjacent coordinates of the given coordinate tuple.\nstd::vector<std::vector<long>> get_coordinates(long test_tup) {\n    std::vector<std::vector<long>> coordinates;\n    std::vector<long> temp;\n    long x = test_tup / 100;\n    long y = test_tup % 100;\n    temp.push_back(x);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x+1);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y+1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x+1);\n    temp.push_back(y+1);\n    coordinates.push_back(temp);\n    return coordinates;\n}\nint main() {\n    auto candidate = get_coordinates;\n    assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n    assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n    assert(candidate(std::make_tuple(5, 6)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)7}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)7}), (std::vector<long>)std::vector<long>({(long)6, (long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)6, (long)7})})));\n}\n",
      "timestamp": 1665510634,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpsm95t5b4.cpp:2:\n/tmp/tmpsm95t5b4.cpp: In function \u2018int main()\u2019:\n/tmp/tmpsm95t5b4.cpp:28:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   28 |     assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                                     std::tuple<int, int>\n/tmp/tmpsm95t5b4.cpp:29:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   29 |     assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to extract all the adjacent coordinates of the given coordinate tuple.\nstd::vector<std::vector<long>> get_coordinates(long test_tup) {\n    std::vector<std::vector<long>> coordinates;\n    std::vector<long> temp;\n    long x = test_tup / 100;\n    long y = test_tup % 100;\n    for (long i = x - 1; i <= x + 1; i++) {\n        for (long j = y - 1; j <= y + 1; j++) {\n            if (i == x && j == y) {\n                continue;\n            }\n            temp.push_back(i);\n            temp.push_back(j);\n            coordinates.push_back(temp);\n            temp.clear();\n        }\n    }\n    return coordinates;\n}\nint main() {\n    auto candidate = get_coordinates;\n    assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n    assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n    assert(candidate(std::make_tuple(5, 6)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)7}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)7}), (std::vector<long>)std::vector<long>({(long)6, (long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)6, (long)7})})));\n}\n",
      "timestamp": 1665510634,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp3wesp1fh.cpp:2:\n/tmp/tmp3wesp1fh.cpp: In function \u2018int main()\u2019:\n/tmp/tmp3wesp1fh.cpp:24:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   24 |     assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                                     std::tuple<int, int>\n/tmp/tmp3wesp1fh.cpp:25:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   25 |     assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to extract all the adjacent coordinates of the given coordinate tuple.\nstd::vector<std::vector<long>> get_coordinates(long test_tup) {\n    long x = test_tup / 100;\n    long y = test_tup % 100;\n    std::vector<std::vector<long>> result;\n    std::vector<long> temp;\n    temp.push_back(x);\n    temp.push_back(y);\n    result.push_back(temp);\n    temp.clear();\n    temp.push_back(x + 1);\n    temp.push_back(y);\n    result.push_back(temp);\n    temp.clear();\n    temp.push_back(x - 1);\n    temp.push_back(y);\n    result.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y + 1);\n    result.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y - 1);\n    result.push_back(temp);\n    return result;\n}\nint main() {\n    auto candidate = get_coordinates;\n    assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n    assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n    assert(candidate(std::make_tuple(5, 6)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)7}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)7}), (std::vector<long>)std::vector<long>({(long)6, (long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)6, (long)7})})));\n}\n",
      "timestamp": 1665510634,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpb7i_97uc.cpp:2:\n/tmp/tmpb7i_97uc.cpp: In function \u2018int main()\u2019:\n/tmp/tmpb7i_97uc.cpp:32:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   32 |     assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                                     std::tuple<int, int>\n/tmp/tmpb7i_97uc.cpp:33:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   33 |     assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to extract all the adjacent coordinates of the given coordinate tuple.\nstd::vector<std::vector<long>> get_coordinates(long test_tup) {\n    std::vector<std::vector<long>> coordinates;\n    std::vector<long> temp;\n    long x = test_tup / 100;\n    long y = test_tup % 100;\n    if (x > 0) {\n        temp.push_back(x - 1);\n        temp.push_back(y);\n        coordinates.push_back(temp);\n        temp.clear();\n    }\n    if (x < 9) {\n        temp.push_back(x + 1);\n        temp.push_back(y);\n        coordinates.push_back(temp);\n        temp.clear();\n    }\n    if (y > 0) {\n        temp.push_back(x);\n        temp.push_back(y - 1);\n        coordinates.push_back(temp);\n        temp.clear();\n    }\n    if (y < 9) {\n        temp.push_back(x);\n        temp.push_back(y + 1);\n        coordinates.push_back(temp);\n        temp.clear();\n    }\n    return coordinates;\n}\nint main() {\n    auto candidate = get_coordinates;\n    assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n    assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n    assert(candidate(std::make_tuple(5, 6)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)7}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)7}), (std::vector<long>)std::vector<long>({(long)6, (long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)6, (long)7})})));\n}\n",
      "timestamp": 1665510634,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpn9s195p_.cpp:2:\n/tmp/tmpn9s195p_.cpp: In function \u2018int main()\u2019:\n/tmp/tmpn9s195p_.cpp:37:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   37 |     assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                                     std::tuple<int, int>\n/tmp/tmpn9s195p_.cpp:38:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   38 |     assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to extract all the adjacent coordinates of the given coordinate tuple.\nstd::vector<std::vector<long>> get_coordinates(long test_tup) {\n    std::vector<std::vector<long>> coordinates;\n    std::vector<long> temp_coordinate;\n    long x = test_tup / 100;\n    long y = test_tup % 100;\n    temp_coordinate.push_back(x - 1);\n    temp_coordinate.push_back(y - 1);\n    coordinates.push_back(temp_coordinate);\n    temp_coordinate.clear();\n    temp_coordinate.push_back(x - 1);\n    temp_coordinate.push_back(y);\n    coordinates.push_back(temp_coordinate);\n    temp_coordinate.clear();\n    temp_coordinate.push_back(x - 1);\n    temp_coordinate.push_back(y + 1);\n    coordinates.push_back(temp_coordinate);\n    temp_coordinate.clear();\n    temp_coordinate.push_back(x);\n    temp_coordinate.push_back(y - 1);\n    coordinates.push_back(temp_coordinate);\n    temp_coordinate.clear();\n    temp_coordinate.push_back(x);\n    temp_coordinate.push_back(y + 1);\n    coordinates.push_back(temp_coordinate);\n    temp_coordinate.clear();\n    temp_coordinate.push_back(x + 1);\n    temp_coordinate.push_back(y - 1);\n    coordinates.push_back(temp_coordinate);\n    temp_coordinate.clear();\n    temp_coordinate.push_back(x + 1);\n    temp_coordinate.push_back(y);\n    coordinates.push_back(temp_coordinate);\n    temp_coordinate.clear();\n    temp_coordinate.push_back(x + 1);\n    temp_coordinate.push_back(y + 1);\n    coordinates.push_back(temp_coordinate);\n    return coordinates;\n}\nint main() {\n    auto candidate = get_coordinates;\n    assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n    assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n    assert(candidate(std::make_tuple(5, 6)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)7}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)7}), (std::vector<long>)std::vector<long>({(long)6, (long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)6, (long)7})})));\n}\n",
      "timestamp": 1665510634,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpeghk6ezk.cpp:2:\n/tmp/tmpeghk6ezk.cpp: In function \u2018int main()\u2019:\n/tmp/tmpeghk6ezk.cpp:44:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   44 |     assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                                     std::tuple<int, int>\n/tmp/tmpeghk6ezk.cpp:45:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   45 |     assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to extract all the adjacent coordinates of the given coordinate tuple.\nstd::vector<std::vector<long>> get_coordinates(long test_tup) {\n    std::vector<std::vector<long>> coordinates;\n    long x = test_tup / 100;\n    long y = test_tup % 100;\n    std::vector<long> temp_coordinate;\n    temp_coordinate.push_back(x);\n    temp_coordinate.push_back(y);\n    coordinates.push_back(temp_coordinate);\n    temp_coordinate.clear();\n    temp_coordinate.push_back(x);\n    temp_coordinate.push_back(y + 1);\n    coordinates.push_back(temp_coordinate);\n    temp_coordinate.clear();\n    temp_coordinate.push_back(x);\n    temp_coordinate.push_back(y - 1);\n    coordinates.push_back(temp_coordinate);\n    temp_coordinate.clear();\n    temp_coordinate.push_back(x + 1);\n    temp_coordinate.push_back(y);\n    coordinates.push_back(temp_coordinate);\n    temp_coordinate.clear();\n    temp_coordinate.push_back(x - 1);\n    temp_coordinate.push_back(y);\n    coordinates.push_back(temp_coordinate);\n    temp_coordinate.clear();\n    temp_coordinate.push_back(x + 1);\n    temp_coordinate.push_back(y + 1);\n    coordinates.push_back(temp_coordinate);\n    temp_coordinate.clear();\n    temp_coordinate.push_back(x - 1);\n    temp_coordinate.push_back(y - 1);\n    coordinates.push_back(temp_coordinate);\n    temp_coordinate.clear();\n    temp_coordinate.push_back(x + 1);\n    temp_coordinate.push_back(y - 1);\n    coordinates.push_back(temp_coordinate);\n    temp_coordinate.clear();\n    temp_coordinate.push_back(x - 1);\n    temp_coordinate.push_back(y + 1);\n    coordinates.push_back(temp_coordinate);\n    return coordinates;\n}\nint main() {\n    auto candidate = get_coordinates;\n    assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n    assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n    assert(candidate(std::make_tuple(5, 6)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)7}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)7}), (std::vector<long>)std::vector<long>({(long)6, (long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)6, (long)7})})));\n}\n",
      "timestamp": 1665510634,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpz2oqa4z3.cpp:2:\n/tmp/tmpz2oqa4z3.cpp: In function \u2018int main()\u2019:\n/tmp/tmpz2oqa4z3.cpp:48:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   48 |     assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                                     std::tuple<int, int>\n/tmp/tmpz2oqa4z3.cpp:49:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   49 |     assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to extract all the adjacent coordinates of the given coordinate tuple.\nstd::vector<std::vector<long>> get_coordinates(long test_tup) {\n    std::vector<std::vector<long>> coordinates;\n    std::vector<long> tup;\n    tup.push_back(test_tup);\n    tup.push_back(test_tup);\n    coordinates.push_back(tup);\n    tup.clear();\n    tup.push_back(test_tup);\n    tup.push_back(test_tup+1);\n    coordinates.push_back(tup);\n    tup.clear();\n    tup.push_back(test_tup);\n    tup.push_back(test_tup-1);\n    coordinates.push_back(tup);\n    tup.clear();\n    tup.push_back(test_tup+1);\n    tup.push_back(test_tup);\n    coordinates.push_back(tup);\n    tup.clear();\n    tup.push_back(test_tup-1);\n    tup.push_back(test_tup);\n    coordinates.push_back(tup);\n    tup.clear();\n    tup.push_back(test_tup+1);\n    tup.push_back(test_tup+1);\n    coordinates.push_back(tup);\n    tup.clear();\n    tup.push_back(test_tup+1);\n    tup.push_back(test_tup-1);\n    coordinates.push_back(tup);\n    tup.clear();\n    tup.push_back(test_tup-1);\n    tup.push_back(test_tup+1);\n    coordinates.push_back(tup);\n    tup.clear();\n    tup.push_back(test_tup-1);\n    tup.push_back(test_tup-1);\n    coordinates.push_back(tup);\n    return coordinates;\n}\nint main() {\n    auto candidate = get_coordinates;\n    assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n    assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n    assert(candidate(std::make_tuple(5, 6)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)7}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)7}), (std::vector<long>)std::vector<long>({(long)6, (long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)6, (long)7})})));\n}\n",
      "timestamp": 1665510634,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpwzdpp1xm.cpp:2:\n/tmp/tmpwzdpp1xm.cpp: In function \u2018int main()\u2019:\n/tmp/tmpwzdpp1xm.cpp:46:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   46 |     assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                                     std::tuple<int, int>\n/tmp/tmpwzdpp1xm.cpp:47:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   47 |     assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to extract all the adjacent coordinates of the given coordinate tuple.\nstd::vector<std::vector<long>> get_coordinates(long test_tup) {\n    std::vector<std::vector<long>> coordinates;\n    std::vector<long> temp;\n    temp.push_back(test_tup);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(test_tup + 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(test_tup - 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(test_tup + 2);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(test_tup - 2);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(test_tup + 3);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(test_tup - 3);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(test_tup + 4);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(test_tup - 4);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(test_tup + 5);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(test_tup - 5);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(test_tup + 6);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(test_tup - 6);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(test_tup + 7);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(test_tup - 7);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(test_tup + 8);\n    coordinates.push_back(temp);\n}\nint main() {\n    auto candidate = get_coordinates;\n    assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n    assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n    assert(candidate(std::make_tuple(5, 6)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)7}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)7}), (std::vector<long>)std::vector<long>({(long)6, (long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)6, (long)7})})));\n}\n",
      "timestamp": 1665510634,
      "stdout": "",
      "stderr": "/tmp/tmp3hbgc24i.cpp: In function \u2018std::vector<std::vector<long int> > get_coordinates(long int)\u2019:\n/tmp/tmp3hbgc24i.cpp:54:1: warning: no return statement in function returning non-void [-Wreturn-type]\n   54 | }\n      | ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp3hbgc24i.cpp:2:\n/tmp/tmp3hbgc24i.cpp: In function \u2018int main()\u2019:\n/tmp/tmp3hbgc24i.cpp:57:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   57 |     assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                                     std::tuple<int, int>\n/tmp/tmp3hbgc24i.cpp:58:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   58 |     assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::ve",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to extract all the adjacent coordinates of the given coordinate tuple.\nstd::vector<std::vector<long>> get_coordinates(long test_tup) {\n    std::vector<std::vector<long>> coordinates;\n    long x = test_tup / 100;\n    long y = test_tup % 100;\n    std::vector<long> temp;\n    temp.push_back(x);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x - 1);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x + 1);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y - 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y + 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    return coordinates;\n}\nint main() {\n    auto candidate = get_coordinates;\n    assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n    assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n    assert(candidate(std::make_tuple(5, 6)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)7}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)7}), (std::vector<long>)std::vector<long>({(long)6, (long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)6, (long)7})})));\n}\n",
      "timestamp": 1665510634,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpwgxt9m8f.cpp:2:\n/tmp/tmpwgxt9m8f.cpp: In function \u2018int main()\u2019:\n/tmp/tmpwgxt9m8f.cpp:33:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   33 |     assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                                     std::tuple<int, int>\n/tmp/tmpwgxt9m8f.cpp:34:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   34 |     assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to extract all the adjacent coordinates of the given coordinate tuple.\nstd::vector<std::vector<long>> get_coordinates(long test_tup) {\n    std::vector<std::vector<long>> coordinates;\n    std::vector<long> temp;\n    long x = test_tup / 100;\n    long y = test_tup % 100;\n    temp.push_back(x);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x+1);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y+1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x+1);\n    temp.push_back(y+1);\n    coordinates.push_back(temp);\n    return coordinates;\n}\nint main() {\n    auto candidate = get_coordinates;\n    assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n    assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n    assert(candidate(std::make_tuple(5, 6)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)7}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)7}), (std::vector<long>)std::vector<long>({(long)6, (long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)6, (long)7})})));\n}\n",
      "timestamp": 1665510634,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpsm95t5b4.cpp:2:\n/tmp/tmpsm95t5b4.cpp: In function \u2018int main()\u2019:\n/tmp/tmpsm95t5b4.cpp:28:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   28 |     assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                                     std::tuple<int, int>\n/tmp/tmpsm95t5b4.cpp:29:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   29 |     assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to extract all the adjacent coordinates of the given coordinate tuple.\nstd::vector<std::vector<long>> get_coordinates(long test_tup) {\n    std::vector<std::vector<long>> coordinates;\n    std::vector<long> temp;\n    std::vector<long> temp1;\n    std::vector<long> temp2;\n    std::vector<long> temp3;\n    std::vector<long> temp4;\n    std::vector<long> temp5;\n    std::vector<long> temp6;\n    std::vector<long> temp7;\n    std::vector<long> temp8;\n    temp.push_back(test_tup);\n    temp.push_back(test_tup);\n    temp1.push_back(test_tup);\n    temp1.push_back(test_tup+1);\n    temp2.push_back(test_tup);\n    temp2.push_back(test_tup-1);\n    temp3.push_back(test_tup+1);\n    temp3.push_back(test_tup);\n    temp4.push_back(test_tup-1);\n    temp4.push_back(test_tup);\n    temp5.push_back(test_tup+1);\n    temp5.push_back(test_tup+1);\n    temp6.push_back(test_tup+1);\n    temp6.push_back(test_tup-1);\n    temp7.push_back(test_tup-1);\n    temp7.push_back(test_tup+1);\n    temp8.push_back(test_tup-1);\n    temp8.push_back(test_tup-1);\n    coordinates.push_back(temp);\n    coordinates.push_back(temp1);\n    coordinates.push_back(temp2);\n    coordinates.push_back(temp3);\n    coordinates.push_back(temp4);\n    coordinates.push_back(temp5);\n    coordinates.push_back(temp6);\n    coordinates.push_back(temp7);\n    coordinates.push_back(temp8);\n    return coordinates;\n}\nint main() {\n    auto candidate = get_coordinates;\n    assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n    assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n    assert(candidate(std::make_tuple(5, 6)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)7}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)7}), (std::vector<long>)std::vector<long>({(long)6, (long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)6, (long)7})})));\n}\n",
      "timestamp": 1665510634,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp4z8dt77p.cpp:2:\n/tmp/tmp4z8dt77p.cpp: In function \u2018int main()\u2019:\n/tmp/tmp4z8dt77p.cpp:46:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   46 |     assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                                     std::tuple<int, int>\n/tmp/tmp4z8dt77p.cpp:47:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   47 |     assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to extract all the adjacent coordinates of the given coordinate tuple.\nstd::vector<std::vector<long>> get_coordinates(long test_tup) {\n    std::vector<std::vector<long>> coordinates;\n    std::vector<long> temp;\n    long x = test_tup / 100;\n    long y = test_tup % 100;\n    temp.push_back(x);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x + 1);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y + 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x + 1);\n    temp.push_back(y + 1);\n    coordinates.push_back(temp);\n    return coordinates;\n}\nint main() {\n    auto candidate = get_coordinates;\n    assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n    assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n    assert(candidate(std::make_tuple(5, 6)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)7}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)7}), (std::vector<long>)std::vector<long>({(long)6, (long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)6, (long)7})})));\n}\n",
      "timestamp": 1665510634,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmprrknkajp.cpp:2:\n/tmp/tmprrknkajp.cpp: In function \u2018int main()\u2019:\n/tmp/tmprrknkajp.cpp:28:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   28 |     assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                                     std::tuple<int, int>\n/tmp/tmprrknkajp.cpp:29:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   29 |     assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to extract all the adjacent coordinates of the given coordinate tuple.\nstd::vector<std::vector<long>> get_coordinates(long test_tup) {\n    std::vector<std::vector<long>> coordinates;\n    std::vector<long> tup;\n    long x = test_tup;\n    while (x > 0) {\n        tup.push_back(x % 10);\n        x /= 10;\n    }\n    std::reverse(tup.begin(), tup.end());\n    for (long i = 0; i < tup.size(); i++) {\n        for (long j = 0; j < tup.size(); j++) {\n            if (i != j) {\n                std::vector<long> temp = tup;\n                temp[i] = tup[j];\n                temp[j] = tup[i];\n                coordinates.push_back(temp);\n            }\n        }\n    }\n    return coordinates;\n}\nint main() {\n    auto candidate = get_coordinates;\n    assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n    assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n    assert(candidate(std::make_tuple(5, 6)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)7}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)7}), (std::vector<long>)std::vector<long>({(long)6, (long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)6, (long)7})})));\n}\n",
      "timestamp": 1665510634,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpb3n52d1w.cpp:2:\n/tmp/tmpb3n52d1w.cpp: In function \u2018int main()\u2019:\n/tmp/tmpb3n52d1w.cpp:27:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   27 |     assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                                     std::tuple<int, int>\n/tmp/tmpb3n52d1w.cpp:28:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   28 |     assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to extract all the adjacent coordinates of the given coordinate tuple.\nstd::vector<std::vector<long>> get_coordinates(long test_tup) {\n    std::vector<std::vector<long>> result;\n    std::vector<long> temp;\n    long x = test_tup / 100;\n    long y = test_tup % 100;\n    temp.push_back(x);\n    temp.push_back(y);\n    result.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y + 1);\n    result.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y - 1);\n    result.push_back(temp);\n    temp.clear();\n    temp.push_back(x + 1);\n    temp.push_back(y);\n    result.push_back(temp);\n    temp.clear();\n    temp.push_back(x - 1);\n    temp.push_back(y);\n    result.push_back(temp);\n    temp.clear();\n    temp.push_back(x + 1);\n    temp.push_back(y + 1);\n    result.push_back(temp);\n    temp.clear();\n    temp.push_back(x - 1);\n    temp.push_back(y - 1);\n    result.push_back(temp);\n    temp.clear();\n    temp.push_back(x + 1);\n    temp.push_back(y - 1);\n    result.push_back(temp);\n    temp.clear();\n    temp.push_back(x - 1);\n    temp.push_back(y + 1);\n    result.push_back(temp);\n    temp.clear();\n    return result;\n}\nint main() {\n    auto candidate = get_coordinates;\n    assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n    assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n    assert(candidate(std::make_tuple(5, 6)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)7}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)7}), (std::vector<long>)std::vector<long>({(long)6, (long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)6, (long)7})})));\n}\n",
      "timestamp": 1665510634,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpt1edmsxc.cpp:2:\n/tmp/tmpt1edmsxc.cpp: In function \u2018int main()\u2019:\n/tmp/tmpt1edmsxc.cpp:49:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   49 |     assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                                     std::tuple<int, int>\n/tmp/tmpt1edmsxc.cpp:50:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   50 |     assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to extract all the adjacent coordinates of the given coordinate tuple.\nstd::vector<std::vector<long>> get_coordinates(long test_tup) {\n    std::vector<std::vector<long>> coordinates;\n    long x = test_tup / 100;\n    long y = test_tup % 100;\n    std::vector<long> temp;\n    temp.push_back(x+1);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x-1);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y+1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y-1);\n    coordinates.push_back(temp);\n    return coordinates;\n}\nint main() {\n    auto candidate = get_coordinates;\n    assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n    assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n    assert(candidate(std::make_tuple(5, 6)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)7}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)7}), (std::vector<long>)std::vector<long>({(long)6, (long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)6, (long)7})})));\n}\n",
      "timestamp": 1665510634,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp0k_m5_7o.cpp:2:\n/tmp/tmp0k_m5_7o.cpp: In function \u2018int main()\u2019:\n/tmp/tmp0k_m5_7o.cpp:28:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   28 |     assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                                     std::tuple<int, int>\n/tmp/tmp0k_m5_7o.cpp:29:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   29 |     assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to extract all the adjacent coordinates of the given coordinate tuple.\nstd::vector<std::vector<long>> get_coordinates(long test_tup) {\n    std::vector<std::vector<long>> coordinates;\n    std::vector<long> temp;\n    temp.push_back(test_tup);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(test_tup + 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(test_tup - 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(test_tup + 2);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(test_tup - 2);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(test_tup + 3);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(test_tup - 3);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(test_tup + 4);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(test_tup - 4);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(test_tup + 5);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(test_tup - 5);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(test_tup + 6);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(test_tup - 6);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(test_tup + 7);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(test_tup - 7);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(test_tup + 8);\n    coordinates.push_back(temp);\n}\nint main() {\n    auto candidate = get_coordinates;\n    assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n    assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n    assert(candidate(std::make_tuple(5, 6)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)7}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)7}), (std::vector<long>)std::vector<long>({(long)6, (long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)6, (long)7})})));\n}\n",
      "timestamp": 1665510634,
      "stdout": "",
      "stderr": "/tmp/tmp3hbgc24i.cpp: In function \u2018std::vector<std::vector<long int> > get_coordinates(long int)\u2019:\n/tmp/tmp3hbgc24i.cpp:54:1: warning: no return statement in function returning non-void [-Wreturn-type]\n   54 | }\n      | ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp3hbgc24i.cpp:2:\n/tmp/tmp3hbgc24i.cpp: In function \u2018int main()\u2019:\n/tmp/tmp3hbgc24i.cpp:57:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   57 |     assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                                     std::tuple<int, int>\n/tmp/tmp3hbgc24i.cpp:58:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   58 |     assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::ve",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to extract all the adjacent coordinates of the given coordinate tuple.\nstd::vector<std::vector<long>> get_coordinates(long test_tup) {\n    std::vector<std::vector<long>> result;\n    std::vector<long> temp;\n    long x = test_tup/10;\n    long y = test_tup%10;\n    temp.push_back(x);\n    temp.push_back(y);\n    result.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y+1);\n    result.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y-1);\n    result.push_back(temp);\n    temp.clear();\n    temp.push_back(x+1);\n    temp.push_back(y);\n    result.push_back(temp);\n    temp.clear();\n    temp.push_back(x-1);\n    temp.push_back(y);\n    result.push_back(temp);\n    return result;\n}\nint main() {\n    auto candidate = get_coordinates;\n    assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n    assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n    assert(candidate(std::make_tuple(5, 6)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)7}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)7}), (std::vector<long>)std::vector<long>({(long)6, (long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)6, (long)7})})));\n}\n",
      "timestamp": 1665510634,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpmesc8dbg.cpp:2:\n/tmp/tmpmesc8dbg.cpp: In function \u2018int main()\u2019:\n/tmp/tmpmesc8dbg.cpp:32:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   32 |     assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                                     std::tuple<int, int>\n/tmp/tmpmesc8dbg.cpp:33:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   33 |     assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to extract all the adjacent coordinates of the given coordinate tuple.\nstd::vector<std::vector<long>> get_coordinates(long test_tup) {\n    std::vector<std::vector<long>> result;\n    long x = test_tup / 100;\n    long y = test_tup % 100;\n    std::vector<long> temp;\n    temp.push_back(x);\n    temp.push_back(y);\n    result.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y + 1);\n    result.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y - 1);\n    result.push_back(temp);\n    temp.clear();\n    temp.push_back(x + 1);\n    temp.push_back(y);\n    result.push_back(temp);\n    temp.clear();\n    temp.push_back(x - 1);\n    temp.push_back(y);\n    result.push_back(temp);\n    temp.clear();\n    temp.push_back(x + 1);\n    temp.push_back(y + 1);\n    result.push_back(temp);\n    temp.clear();\n    temp.push_back(x - 1);\n    temp.push_back(y - 1);\n    result.push_back(temp);\n    temp.clear();\n    temp.push_back(x + 1);\n    temp.push_back(y - 1);\n    result.push_back(temp);\n    temp.clear();\n    temp.push_back(x - 1);\n    temp.push_back(y + 1);\n    result.push_back(temp);\n    return result;\n}\nint main() {\n    auto candidate = get_coordinates;\n    assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n    assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n    assert(candidate(std::make_tuple(5, 6)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)7}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)7}), (std::vector<long>)std::vector<long>({(long)6, (long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)6, (long)7})})));\n}\n",
      "timestamp": 1666123940,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp0rls952b.cpp:2:\n/tmp/tmp0rls952b.cpp: In function \u2018int main()\u2019:\n/tmp/tmp0rls952b.cpp:48:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   48 |     assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                                     std::tuple<int, int>\n/tmp/tmp0rls952b.cpp:49:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   49 |     assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to extract all the adjacent coordinates of the given coordinate tuple.\nstd::vector<std::vector<long>> get_coordinates(long test_tup) {\n    std::vector<std::vector<long>> coordinates;\n    std::vector<long> temp;\n    long x = test_tup / 100;\n    long y = test_tup % 100;\n    temp.push_back(x);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x + 1);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x - 1);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y + 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y - 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    return coordinates;\n}\nint main() {\n    auto candidate = get_coordinates;\n    assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n    assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n    assert(candidate(std::make_tuple(5, 6)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)7}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)7}), (std::vector<long>)std::vector<long>({(long)6, (long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)6, (long)7})})));\n}\n",
      "timestamp": 1665510632,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp6kq6yi1x.cpp:2:\n/tmp/tmp6kq6yi1x.cpp: In function \u2018int main()\u2019:\n/tmp/tmp6kq6yi1x.cpp:33:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   33 |     assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                                     std::tuple<int, int>\n/tmp/tmp6kq6yi1x.cpp:34:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   34 |     assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to extract all the adjacent coordinates of the given coordinate tuple.\nstd::vector<std::vector<long>> get_coordinates(long test_tup) {\n    std::vector<std::vector<long>> coordinates;\n    std::vector<long> tup;\n    long i = 0;\n    while (test_tup > 0) {\n        tup.push_back(test_tup % 10);\n        test_tup /= 10;\n        i++;\n    }\n    std::reverse(tup.begin(), tup.end());\n    for (long i = 0; i < tup.size(); i++) {\n        std::vector<long> temp = tup;\n        temp[i] += 1;\n        coordinates.push_back(temp);\n        temp[i] -= 2;\n        coordinates.push_back(temp);\n    }\n    return coordinates;\n}\nint main() {\n    auto candidate = get_coordinates;\n    assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n    assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n    assert(candidate(std::make_tuple(5, 6)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)7}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)7}), (std::vector<long>)std::vector<long>({(long)6, (long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)6, (long)7})})));\n}\n",
      "timestamp": 1666123940,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp8ax2abu9.cpp:2:\n/tmp/tmp8ax2abu9.cpp: In function \u2018int main()\u2019:\n/tmp/tmp8ax2abu9.cpp:25:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   25 |     assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                                     std::tuple<int, int>\n/tmp/tmp8ax2abu9.cpp:26:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   26 |     assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to extract all the adjacent coordinates of the given coordinate tuple.\nstd::vector<std::vector<long>> get_coordinates(long test_tup) {\n    std::vector<std::vector<long>> coordinates;\n    std::vector<long> temp;\n    long x = test_tup / 100;\n    long y = test_tup % 100;\n    for (long i = x - 1; i <= x + 1; i++) {\n        for (long j = y - 1; j <= y + 1; j++) {\n            if (i == x && j == y) {\n                continue;\n            }\n            temp.push_back(i);\n            temp.push_back(j);\n            coordinates.push_back(temp);\n            temp.clear();\n        }\n    }\n    return coordinates;\n}\nint main() {\n    auto candidate = get_coordinates;\n    assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n    assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n    assert(candidate(std::make_tuple(5, 6)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)7}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)7}), (std::vector<long>)std::vector<long>({(long)6, (long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)6, (long)7})})));\n}\n",
      "timestamp": 1665510634,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp3wesp1fh.cpp:2:\n/tmp/tmp3wesp1fh.cpp: In function \u2018int main()\u2019:\n/tmp/tmp3wesp1fh.cpp:24:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   24 |     assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                                     std::tuple<int, int>\n/tmp/tmp3wesp1fh.cpp:25:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   25 |     assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to extract all the adjacent coordinates of the given coordinate tuple.\nstd::vector<std::vector<long>> get_coordinates(long test_tup) {\n    std::vector<std::vector<long>> coordinates;\n    std::vector<long> temp;\n    temp.push_back(test_tup);\n    coordinates.push_back(temp);\n    long x = test_tup;\n    while(x > 0) {\n        x = x & (x - 1);\n        temp.clear();\n        temp.push_back(x);\n        coordinates.push_back(temp);\n    }\n    return coordinates;\n}\nint main() {\n    auto candidate = get_coordinates;\n    assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n    assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n    assert(candidate(std::make_tuple(5, 6)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)7}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)7}), (std::vector<long>)std::vector<long>({(long)6, (long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)6, (long)7})})));\n}\n",
      "timestamp": 1666123940,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp0rgzuu7l.cpp:2:\n/tmp/tmp0rgzuu7l.cpp: In function \u2018int main()\u2019:\n/tmp/tmp0rgzuu7l.cpp:20:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   20 |     assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                                     std::tuple<int, int>\n/tmp/tmp0rgzuu7l.cpp:21:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   21 |     assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to extract all the adjacent coordinates of the given coordinate tuple.\nstd::vector<std::vector<long>> get_coordinates(long test_tup) {\n    std::vector<std::vector<long>> coordinates;\n    std::vector<long> tup;\n    tup.push_back(test_tup);\n    tup.push_back(test_tup);\n    tup.push_back(test_tup);\n    coordinates.push_back(tup);\n    return coordinates;\n}\nint main() {\n    auto candidate = get_coordinates;\n    assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n    assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n    assert(candidate(std::make_tuple(5, 6)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)7}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)7}), (std::vector<long>)std::vector<long>({(long)6, (long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)6, (long)7})})));\n}\n",
      "timestamp": 1666123940,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpv3a4mtht.cpp:2:\n/tmp/tmpv3a4mtht.cpp: In function \u2018int main()\u2019:\n/tmp/tmpv3a4mtht.cpp:15:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   15 |     assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                                     std::tuple<int, int>\n/tmp/tmpv3a4mtht.cpp:16:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   16 |     assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to extract all the adjacent coordinates of the given coordinate tuple.\nstd::vector<std::vector<long>> get_coordinates(long test_tup) {\n\tstd::vector<std::vector<long>> coordinates;\n\tstd::vector<long> temp_coordinates;\n\tlong x = test_tup / 100;\n\tlong y = test_tup % 100;\n\ttemp_coordinates.push_back(x + 1);\n\ttemp_coordinates.push_back(y);\n\tcoordinates.push_back(temp_coordinates);\n\ttemp_coordinates.clear();\n\ttemp_coordinates.push_back(x + 1);\n\ttemp_coordinates.push_back(y + 1);\n\tcoordinates.push_back(temp_coordinates);\n\ttemp_coordinates.clear();\n\ttemp_coordinates.push_back(x);\n\ttemp_coordinates.push_back(y + 1);\n\tcoordinates.push_back(temp_coordinates);\n\ttemp_coordinates.clear();\n\ttemp_coordinates.push_back(x - 1);\n\ttemp_coordinates.push_back(y + 1);\n\tcoordinates.push_back(temp_coordinates);\n\ttemp_coordinates.clear();\n\ttemp_coordinates.push_back(x - 1);\n\ttemp_coordinates.push_back(y);\n\tcoordinates.push_back(temp_coordinates);\n\ttemp_coordinates.clear();\n\ttemp_coordinates.push_back(x - 1);\n\ttemp_coordinates.push_back(y - 1);\n\tcoordinates.push_back(temp_coordinates);\n\ttemp_coordinates.clear();\n\ttemp_coordinates.push_back(x);\n\ttemp_coordinates.push_back(y - 1);\n\tcoordinates.push_back(temp_coordinates);\n\ttemp_coordinates.clear();\n\ttemp_coordinates.push_back(x + 1);\n\ttemp_coordinates.push_back(y - 1);\n\tcoordinates.push_back(temp_coordinates);\n\ttemp_coordinates.clear();\n\treturn coordinates;\n}\nint main() {\n    auto candidate = get_coordinates;\n    assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n    assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n    assert(candidate(std::make_tuple(5, 6)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)7}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)7}), (std::vector<long>)std::vector<long>({(long)6, (long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)6, (long)7})})));\n}\n",
      "timestamp": 1666123940,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpdi35lm0v.cpp:2:\n/tmp/tmpdi35lm0v.cpp: In function \u2018int main()\u2019:\n/tmp/tmpdi35lm0v.cpp:45:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   45 |     assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                                     std::tuple<int, int>\n/tmp/tmpdi35lm0v.cpp:46:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   46 |     assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to extract all the adjacent coordinates of the given coordinate tuple.\nstd::vector<std::vector<long>> get_coordinates(long test_tup) {\n    std::vector<std::vector<long>> coordinates;\n    long x = test_tup / 100;\n    long y = test_tup % 100;\n    long x_coordinates[] = {x - 1, x, x + 1};\n    long y_coordinates[] = {y - 1, y, y + 1};\n    for (long i = 0; i < 3; i++) {\n        for (long j = 0; j < 3; j++) {\n            if (x_coordinates[i] >= 0 && y_coordinates[j] >= 0) {\n                std::vector<long> coordinate;\n                coordinate.push_back(x_coordinates[i]);\n                coordinate.push_back(y_coordinates[j]);\n                coordinates.push_back(coordinate);\n            }\n        }\n    }\n    return coordinates;\n}\nint main() {\n    auto candidate = get_coordinates;\n    assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n    assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n    assert(candidate(std::make_tuple(5, 6)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)7}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)7}), (std::vector<long>)std::vector<long>({(long)6, (long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)6, (long)7})})));\n}\n",
      "timestamp": 1666123940,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmprs3u2dmh.cpp:2:\n/tmp/tmprs3u2dmh.cpp: In function \u2018int main()\u2019:\n/tmp/tmprs3u2dmh.cpp:24:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   24 |     assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                                     std::tuple<int, int>\n/tmp/tmprs3u2dmh.cpp:25:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   25 |     assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to extract all the adjacent coordinates of the given coordinate tuple.\nstd::vector<std::vector<long>> get_coordinates(long test_tup) {\n    std::vector<std::vector<long>> coordinates;\n    long x = test_tup / 100;\n    long y = test_tup % 100;\n    std::vector<long> coordinate;\n    coordinate.push_back(x);\n    coordinate.push_back(y);\n    coordinates.push_back(coordinate);\n    coordinate.clear();\n    coordinate.push_back(x);\n    coordinate.push_back(y+1);\n    coordinates.push_back(coordinate);\n    coordinate.clear();\n    coordinate.push_back(x+1);\n    coordinate.push_back(y);\n    coordinates.push_back(coordinate);\n    coordinate.clear();\n    coordinate.push_back(x+1);\n    coordinate.push_back(y+1);\n    coordinates.push_back(coordinate);\n    return coordinates;\n}\nint main() {\n    auto candidate = get_coordinates;\n    assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n    assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n    assert(candidate(std::make_tuple(5, 6)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)7}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)7}), (std::vector<long>)std::vector<long>({(long)6, (long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)6, (long)7})})));\n}\n",
      "timestamp": 1666123940,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp48p4nz2_.cpp:2:\n/tmp/tmp48p4nz2_.cpp: In function \u2018int main()\u2019:\n/tmp/tmp48p4nz2_.cpp:28:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   28 |     assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                                     std::tuple<int, int>\n/tmp/tmp48p4nz2_.cpp:29:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   29 |     assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to extract all the adjacent coordinates of the given coordinate tuple.\nstd::vector<std::vector<long>> get_coordinates(long test_tup) {\n    std::vector<std::vector<long>> coordinates;\n    std::vector<long> temp;\n    long x = test_tup / 100;\n    long y = test_tup % 100;\n    temp.push_back(x);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x + 1);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y + 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x + 1);\n    temp.push_back(y + 1);\n    coordinates.push_back(temp);\n    return coordinates;\n}\nint main() {\n    auto candidate = get_coordinates;\n    assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n    assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n    assert(candidate(std::make_tuple(5, 6)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)7}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)7}), (std::vector<long>)std::vector<long>({(long)6, (long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)6, (long)7})})));\n}\n",
      "timestamp": 1665510634,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmprrknkajp.cpp:2:\n/tmp/tmprrknkajp.cpp: In function \u2018int main()\u2019:\n/tmp/tmprrknkajp.cpp:28:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   28 |     assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                                     std::tuple<int, int>\n/tmp/tmprrknkajp.cpp:29:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   29 |     assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to extract all the adjacent coordinates of the given coordinate tuple.\nstd::vector<std::vector<long>> get_coordinates(long test_tup) {\n    std::vector<std::vector<long>> coordinates;\n    long x = test_tup / 100;\n    long y = test_tup % 100;\n    std::vector<long> temp;\n    temp.push_back(x);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x + 1);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x - 1);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y + 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y - 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    return coordinates;\n}\nint main() {\n    auto candidate = get_coordinates;\n    assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n    assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n    assert(candidate(std::make_tuple(5, 6)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)7}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)7}), (std::vector<long>)std::vector<long>({(long)6, (long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)6, (long)7})})));\n}\n",
      "timestamp": 1666123940,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpd9wywf6j.cpp:2:\n/tmp/tmpd9wywf6j.cpp: In function \u2018int main()\u2019:\n/tmp/tmpd9wywf6j.cpp:33:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   33 |     assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                                     std::tuple<int, int>\n/tmp/tmpd9wywf6j.cpp:34:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   34 |     assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to extract all the adjacent coordinates of the given coordinate tuple.\nstd::vector<std::vector<long>> get_coordinates(long test_tup) {\n    std::vector<std::vector<long>> coordinates;\n    long x = test_tup / 100;\n    long y = test_tup % 100;\n    std::vector<long> temp;\n    temp.push_back(x);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x + 1);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x - 1);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y + 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y - 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x + 1);\n    temp.push_back(y + 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x - 1);\n    temp.push_back(y - 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x + 1);\n    temp.push_back(y - 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x - 1);\n    temp.push_back(y + 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    return coordinates;\n}\nint main() {\n    auto candidate = get_coordinates;\n    assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n    assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n    assert(candidate(std::make_tuple(5, 6)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)7}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)7}), (std::vector<long>)std::vector<long>({(long)6, (long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)6, (long)7})})));\n}\n",
      "timestamp": 1666123940,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpcs49ihvy.cpp:2:\n/tmp/tmpcs49ihvy.cpp: In function \u2018int main()\u2019:\n/tmp/tmpcs49ihvy.cpp:49:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   49 |     assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                                     std::tuple<int, int>\n/tmp/tmpcs49ihvy.cpp:50:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   50 |     assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to extract all the adjacent coordinates of the given coordinate tuple.\nstd::vector<std::vector<long>> get_coordinates(long test_tup) {\n    std::vector<std::vector<long>> coordinates;\n    std::vector<long> temp;\n    long x = test_tup / 100;\n    long y = test_tup % 100;\n    temp.push_back(x);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y + 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y - 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x + 1);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x - 1);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x + 1);\n    temp.push_back(y + 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x + 1);\n    temp.push_back(y - 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x - 1);\n    temp.push_back(y + 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x - 1);\n    temp.push_back(y - 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    return coordinates;\n}\nint main() {\n    auto candidate = get_coordinates;\n    assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n    assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n    assert(candidate(std::make_tuple(5, 6)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)7}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)7}), (std::vector<long>)std::vector<long>({(long)6, (long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)6, (long)7})})));\n}\n",
      "timestamp": 1665510632,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpjprfb000.cpp:2:\n/tmp/tmpjprfb000.cpp: In function \u2018int main()\u2019:\n/tmp/tmpjprfb000.cpp:49:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   49 |     assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                                     std::tuple<int, int>\n/tmp/tmpjprfb000.cpp:50:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   50 |     assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to extract all the adjacent coordinates of the given coordinate tuple.\nstd::vector<std::vector<long>> get_coordinates(long test_tup) {\n    std::vector<std::vector<long>> result;\n    std::vector<long> temp;\n    long x = test_tup / 100;\n    long y = test_tup % 100;\n    temp.push_back(x);\n    temp.push_back(y);\n    result.push_back(temp);\n    temp.clear();\n    temp.push_back(x - 1);\n    temp.push_back(y);\n    result.push_back(temp);\n    temp.clear();\n    temp.push_back(x + 1);\n    temp.push_back(y);\n    result.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y - 1);\n    result.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y + 1);\n    result.push_back(temp);\n    temp.clear();\n    return result;\n}\nint main() {\n    auto candidate = get_coordinates;\n    assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n    assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n    assert(candidate(std::make_tuple(5, 6)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)7}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)7}), (std::vector<long>)std::vector<long>({(long)6, (long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)6, (long)7})})));\n}\n",
      "timestamp": 1666123940,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpkfe5tpnq.cpp:2:\n/tmp/tmpkfe5tpnq.cpp: In function \u2018int main()\u2019:\n/tmp/tmpkfe5tpnq.cpp:33:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   33 |     assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                                     std::tuple<int, int>\n/tmp/tmpkfe5tpnq.cpp:34:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   34 |     assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to extract all the adjacent coordinates of the given coordinate tuple.\nstd::vector<std::vector<long>> get_coordinates(long test_tup) {\n    std::vector<std::vector<long>> coordinates;\n    std::vector<long> temp;\n    long x = test_tup / 100;\n    long y = test_tup % 100;\n    for (long i = x - 1; i <= x + 1; i++) {\n        for (long j = y - 1; j <= y + 1; j++) {\n            if (i == x && j == y) {\n                continue;\n            }\n            temp.push_back(i);\n            temp.push_back(j);\n            coordinates.push_back(temp);\n            temp.clear();\n        }\n    }\n    return coordinates;\n}\nint main() {\n    auto candidate = get_coordinates;\n    assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n    assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n    assert(candidate(std::make_tuple(5, 6)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)7}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)7}), (std::vector<long>)std::vector<long>({(long)6, (long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)6, (long)7})})));\n}\n",
      "timestamp": 1665510634,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp3wesp1fh.cpp:2:\n/tmp/tmp3wesp1fh.cpp: In function \u2018int main()\u2019:\n/tmp/tmp3wesp1fh.cpp:24:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   24 |     assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                                     std::tuple<int, int>\n/tmp/tmp3wesp1fh.cpp:25:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   25 |     assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to extract all the adjacent coordinates of the given coordinate tuple.\nstd::vector<std::vector<long>> get_coordinates(long test_tup) {\n    std::vector<std::vector<long>> coordinates;\n    long x = test_tup / 100;\n    long y = test_tup % 100;\n    coordinates.push_back({x, y});\n    coordinates.push_back({x + 1, y});\n    coordinates.push_back({x - 1, y});\n    coordinates.push_back({x, y + 1});\n    coordinates.push_back({x, y - 1});\n    return coordinates;\n}\nint main() {\n    auto candidate = get_coordinates;\n    assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n    assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n    assert(candidate(std::make_tuple(5, 6)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)7}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)7}), (std::vector<long>)std::vector<long>({(long)6, (long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)6, (long)7})})));\n}\n",
      "timestamp": 1666123939,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp6yqgofrv.cpp:2:\n/tmp/tmp6yqgofrv.cpp: In function \u2018int main()\u2019:\n/tmp/tmp6yqgofrv.cpp:17:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   17 |     assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                                     std::tuple<int, int>\n/tmp/tmp6yqgofrv.cpp:18:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   18 |     assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to extract all the adjacent coordinates of the given coordinate tuple.\nstd::vector<std::vector<long>> get_coordinates(long test_tup) {\n    std::vector<std::vector<long>> coordinates;\n    std::vector<long> temp;\n    for (long i = 0; i < test_tup; i++) {\n        for (long j = 0; j < test_tup; j++) {\n            temp.push_back(i);\n            temp.push_back(j);\n            coordinates.push_back(temp);\n            temp.clear();\n        }\n    }\n    return coordinates;\n}\nint main() {\n    auto candidate = get_coordinates;\n    assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n    assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n    assert(candidate(std::make_tuple(5, 6)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)7}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)7}), (std::vector<long>)std::vector<long>({(long)6, (long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)6, (long)7})})));\n}\n",
      "timestamp": 1666123929,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpahhv9txt.cpp:2:\n/tmp/tmpahhv9txt.cpp: In function \u2018int main()\u2019:\n/tmp/tmpahhv9txt.cpp:19:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   19 |     assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                                     std::tuple<int, int>\n/tmp/tmpahhv9txt.cpp:20:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   20 |     assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to extract all the adjacent coordinates of the given coordinate tuple.\nstd::vector<std::vector<long>> get_coordinates(long test_tup) {\n    std::vector<std::vector<long>> coordinates;\n    long x = test_tup / 100;\n    long y = test_tup % 100;\n    std::vector<long> temp;\n    temp.push_back(x);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y+1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x+1);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x+1);\n    temp.push_back(y+1);\n    coordinates.push_back(temp);\n    return coordinates;\n}\nint main() {\n    auto candidate = get_coordinates;\n    assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n    assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n    assert(candidate(std::make_tuple(5, 6)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)7}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)7}), (std::vector<long>)std::vector<long>({(long)6, (long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)6, (long)7})})));\n}\n",
      "timestamp": 1666123940,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpiowps_1i.cpp:2:\n/tmp/tmpiowps_1i.cpp: In function \u2018int main()\u2019:\n/tmp/tmpiowps_1i.cpp:28:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   28 |     assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                                     std::tuple<int, int>\n/tmp/tmpiowps_1i.cpp:29:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   29 |     assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to extract all the adjacent coordinates of the given coordinate tuple.\nstd::vector<std::vector<long>> get_coordinates(long test_tup) {\n    std::vector<std::vector<long>> coordinates;\n    std::vector<long> temp;\n    long x = test_tup / 100;\n    long y = test_tup % 100;\n    temp.push_back(x);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y + 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y - 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x + 1);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x - 1);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x + 1);\n    temp.push_back(y + 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x - 1);\n    temp.push_back(y - 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x + 1);\n    temp.push_back(y - 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x - 1);\n    temp.push_back(y + 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    return coordinates;\n}\nint main() {\n    auto candidate = get_coordinates;\n    assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n    assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n    assert(candidate(std::make_tuple(5, 6)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)7}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)7}), (std::vector<long>)std::vector<long>({(long)6, (long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)6, (long)7})})));\n}\n",
      "timestamp": 1666123929,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpe58wgof6.cpp:2:\n/tmp/tmpe58wgof6.cpp: In function \u2018int main()\u2019:\n/tmp/tmpe58wgof6.cpp:49:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   49 |     assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                                     std::tuple<int, int>\n/tmp/tmpe58wgof6.cpp:50:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   50 |     assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to extract all the adjacent coordinates of the given coordinate tuple.\nstd::vector<std::vector<long>> get_coordinates(long test_tup) {\n    std::vector<std::vector<long>> coordinates;\n    std::vector<long> temp;\n    long x = test_tup / 100;\n    long y = test_tup % 100;\n    temp.push_back(x);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y + 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y - 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x + 1);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x - 1);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x + 1);\n    temp.push_back(y + 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x + 1);\n    temp.push_back(y - 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x - 1);\n    temp.push_back(y + 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x - 1);\n    temp.push_back(y - 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    return coordinates;\n}\nint main() {\n    auto candidate = get_coordinates;\n    assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n    assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n    assert(candidate(std::make_tuple(5, 6)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)7}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)7}), (std::vector<long>)std::vector<long>({(long)6, (long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)6, (long)7})})));\n}\n",
      "timestamp": 1665510632,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpjprfb000.cpp:2:\n/tmp/tmpjprfb000.cpp: In function \u2018int main()\u2019:\n/tmp/tmpjprfb000.cpp:49:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   49 |     assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                                     std::tuple<int, int>\n/tmp/tmpjprfb000.cpp:50:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   50 |     assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to extract all the adjacent coordinates of the given coordinate tuple.\nstd::vector<std::vector<long>> get_coordinates(long test_tup) {\n    std::vector<std::vector<long>> coordinates;\n    std::vector<long> temp;\n    long x = test_tup % 10;\n    long y = test_tup / 10;\n    temp.push_back(x);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x-1);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x+1);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y-1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y+1);\n    coordinates.push_back(temp);\n    temp.clear();\n    return coordinates;\n}\nint main() {\n    auto candidate = get_coordinates;\n    assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n    assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n    assert(candidate(std::make_tuple(5, 6)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)7}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)7}), (std::vector<long>)std::vector<long>({(long)6, (long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)6, (long)7})})));\n}\n",
      "timestamp": 1666123940,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpj3rlq_97.cpp:2:\n/tmp/tmpj3rlq_97.cpp: In function \u2018int main()\u2019:\n/tmp/tmpj3rlq_97.cpp:33:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   33 |     assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                                     std::tuple<int, int>\n/tmp/tmpj3rlq_97.cpp:34:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   34 |     assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to extract all the adjacent coordinates of the given coordinate tuple.\nstd::vector<std::vector<long>> get_coordinates(long test_tup) {\n    std::vector<std::vector<long>> coordinates;\n    std::vector<long> temp;\n    long x = test_tup / 100;\n    long y = test_tup % 100;\n    temp.push_back(x);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y + 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y - 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x + 1);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x + 1);\n    temp.push_back(y + 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x + 1);\n    temp.push_back(y - 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x - 1);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x - 1);\n    temp.push_back(y + 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x - 1);\n    temp.push_back(y - 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    return coordinates;\n}\nint main() {\n    auto candidate = get_coordinates;\n    assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n    assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n    assert(candidate(std::make_tuple(5, 6)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)7}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)7}), (std::vector<long>)std::vector<long>({(long)6, (long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)6, (long)7})})));\n}\n",
      "timestamp": 1666123932,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp7k0dwhq9.cpp:2:\n/tmp/tmp7k0dwhq9.cpp: In function \u2018int main()\u2019:\n/tmp/tmp7k0dwhq9.cpp:49:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   49 |     assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                                     std::tuple<int, int>\n/tmp/tmp7k0dwhq9.cpp:50:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   50 |     assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to extract all the adjacent coordinates of the given coordinate tuple.\nstd::vector<std::vector<long>> get_coordinates(long test_tup) {\n    std::vector<std::vector<long>> coordinates;\n    long x = test_tup / 100;\n    long y = test_tup % 100;\n    std::vector<long> temp;\n    temp.push_back(x);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x + 1);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x - 1);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y + 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y - 1);\n    coordinates.push_back(temp);\n    return coordinates;\n}\nint main() {\n    auto candidate = get_coordinates;\n    assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n    assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n    assert(candidate(std::make_tuple(5, 6)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)7}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)7}), (std::vector<long>)std::vector<long>({(long)6, (long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)6, (long)7})})));\n}\n",
      "timestamp": 1666123932,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpou6atyeg.cpp:2:\n/tmp/tmpou6atyeg.cpp: In function \u2018int main()\u2019:\n/tmp/tmpou6atyeg.cpp:32:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   32 |     assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                                     std::tuple<int, int>\n/tmp/tmpou6atyeg.cpp:33:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   33 |     assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to extract all the adjacent coordinates of the given coordinate tuple.\nstd::vector<std::vector<long>> get_coordinates(long test_tup) {\n    std::vector<std::vector<long>> coordinates;\n    std::vector<long> temp;\n    long x = test_tup / 100;\n    long y = test_tup % 100;\n    temp.push_back(x);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x + 1);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y + 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x + 1);\n    temp.push_back(y + 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    return coordinates;\n}\nint main() {\n    auto candidate = get_coordinates;\n    assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n    assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n    assert(candidate(std::make_tuple(5, 6)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)7}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)7}), (std::vector<long>)std::vector<long>({(long)6, (long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)6, (long)7})})));\n}\n",
      "timestamp": 1666123931,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmphf2h83z6.cpp:2:\n/tmp/tmphf2h83z6.cpp: In function \u2018int main()\u2019:\n/tmp/tmphf2h83z6.cpp:29:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   29 |     assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                                     std::tuple<int, int>\n/tmp/tmphf2h83z6.cpp:30:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   30 |     assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to extract all the adjacent coordinates of the given coordinate tuple.\nstd::vector<std::vector<long>> get_coordinates(long test_tup) {\n    std::vector<std::vector<long>> coordinates;\n    std::vector<long> coord;\n    long x = test_tup / 10;\n    long y = test_tup % 10;\n    coord.push_back(x);\n    coord.push_back(y);\n    coordinates.push_back(coord);\n    coord.clear();\n    coord.push_back(x + 1);\n    coord.push_back(y);\n    coordinates.push_back(coord);\n    coord.clear();\n    coord.push_back(x - 1);\n    coord.push_back(y);\n    coordinates.push_back(coord);\n    coord.clear();\n    coord.push_back(x);\n    coord.push_back(y + 1);\n    coordinates.push_back(coord);\n    coord.clear();\n    coord.push_back(x);\n    coord.push_back(y - 1);\n    coordinates.push_back(coord);\n    return coordinates;\n}\nint main() {\n    auto candidate = get_coordinates;\n    assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n    assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n    assert(candidate(std::make_tuple(5, 6)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)7}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)7}), (std::vector<long>)std::vector<long>({(long)6, (long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)6, (long)7})})));\n}\n",
      "timestamp": 1666123939,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpc9mokyq6.cpp:2:\n/tmp/tmpc9mokyq6.cpp: In function \u2018int main()\u2019:\n/tmp/tmpc9mokyq6.cpp:32:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   32 |     assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                                     std::tuple<int, int>\n/tmp/tmpc9mokyq6.cpp:33:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   33 |     assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to extract all the adjacent coordinates of the given coordinate tuple.\nstd::vector<std::vector<long>> get_coordinates(long test_tup) {\n    std::vector<std::vector<long>> coordinates;\n    std::vector<long> temp_coord;\n    long x = test_tup / 100;\n    long y = test_tup % 100;\n    temp_coord.push_back(x);\n    temp_coord.push_back(y);\n    coordinates.push_back(temp_coord);\n    temp_coord.clear();\n    temp_coord.push_back(x + 1);\n    temp_coord.push_back(y);\n    coordinates.push_back(temp_coord);\n    temp_coord.clear();\n    temp_coord.push_back(x - 1);\n    temp_coord.push_back(y);\n    coordinates.push_back(temp_coord);\n    temp_coord.clear();\n    temp_coord.push_back(x);\n    temp_coord.push_back(y + 1);\n    coordinates.push_back(temp_coord);\n    temp_coord.clear();\n    temp_coord.push_back(x);\n    temp_coord.push_back(y - 1);\n    coordinates.push_back(temp_coord);\n    temp_coord.clear();\n    temp_coord.push_back(x + 1);\n    temp_coord.push_back(y + 1);\n    coordinates.push_back(temp_coord);\n    temp_coord.clear();\n    temp_coord.push_back(x - 1);\n    temp_coord.push_back(y - 1);\n    coordinates.push_back(temp_coord);\n    temp_coord.clear();\n    temp_coord.push_back(x + 1);\n    temp_coord.push_back(y - 1);\n    coordinates.push_back(temp_coord);\n    temp_coord.clear();\n    temp_coord.push_back(x - 1);\n    temp_coord.push_back(y + 1);\n    coordinates.push_back(temp_coord);\n    temp_coord.clear();\n    return coordinates;\n}\nint main() {\n    auto candidate = get_coordinates;\n    assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n    assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n    assert(candidate(std::make_tuple(5, 6)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)7}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)7}), (std::vector<long>)std::vector<long>({(long)6, (long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)6, (long)7})})));\n}\n",
      "timestamp": 1666123940,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp5ph2mn0n.cpp:2:\n/tmp/tmp5ph2mn0n.cpp: In function \u2018int main()\u2019:\n/tmp/tmp5ph2mn0n.cpp:49:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   49 |     assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                                     std::tuple<int, int>\n/tmp/tmp5ph2mn0n.cpp:50:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   50 |     assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to extract all the adjacent coordinates of the given coordinate tuple.\nstd::vector<std::vector<long>> get_coordinates(long test_tup) {\n    std::vector<std::vector<long>> coordinates;\n    std::vector<long> test_tup_vec = {test_tup};\n    std::vector<long> test_tup_vec_copy = test_tup_vec;\n    std::vector<long> test_tup_vec_copy_copy = test_tup_vec;\n    std::vector<long> test_tup_vec_copy_copy_copy = test_tup_vec;\n    std::vector<long> test_tup_vec_copy_copy_copy_copy = test_tup_vec;\n    std::vector<long> test_tup_vec_copy_copy_copy_copy_copy = test_tup_vec;\n    std::vector<long> test_tup_vec_copy_copy_copy_copy_copy_copy = test_tup_vec;\n    std::vector<long> test_tup_vec_copy_copy_copy_copy_copy_copy_copy = test_tup_vec;\n    std::vector<long> test_tup_vec_copy_copy_copy_copy_copy_copy_copy_copy = test_tup_vec;\n    std::vector<long> test_tup_vec_copy_copy_copy_copy_copy_copy_copy_copy_copy = test_tup_vec;\n    std::vector<long> test_tup_vec_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy = test_tup_vec;\n    std::vector<long> test_tup_vec_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy = test_tup_vec;\n    std::vector<long> test_tup_vec_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy = test_tup_vec;\n    std::vector<long> test_tup_vec_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy = test_tup_vec;\n    std::vector<long> test\n}\nint main() {\n    auto candidate = get_coordinates;\n    assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n    assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n    assert(candidate(std::make_tuple(5, 6)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)7}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)7}), (std::vector<long>)std::vector<long>({(long)6, (long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)6, (long)7})})));\n}\n",
      "timestamp": 1666123940,
      "stdout": "",
      "stderr": "/tmp/tmpl_lts3lu.cpp: In function \u2018std::vector<std::vector<long int> > get_coordinates(long int)\u2019:\n/tmp/tmpl_lts3lu.cpp:21:1: error: expected initializer before \u2018}\u2019 token\n   21 | }\n      | ^\n/tmp/tmpl_lts3lu.cpp:21:1: warning: no return statement in function returning non-void [-Wreturn-type]\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpl_lts3lu.cpp:2:\n/tmp/tmpl_lts3lu.cpp: In function \u2018int main()\u2019:\n/tmp/tmpl_lts3lu.cpp:24:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   24 |     assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                                     std::tuple<int, int>\n/tmp/tmpl_lts3lu.cpp:25:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   25 |     assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::ve",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to extract all the adjacent coordinates of the given coordinate tuple.\nstd::vector<std::vector<long>> get_coordinates(long test_tup) {\n    std::vector<std::vector<long>> coordinates;\n    std::vector<long> temp;\n    long x = test_tup / 100;\n    long y = test_tup % 100;\n    temp.push_back(x);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x + 1);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x - 1);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y + 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y - 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x + 1);\n    temp.push_back(y + 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x - 1);\n    temp.push_back(y - 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x + 1);\n    temp.push_back(y - 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x - 1);\n    temp.push_back(y + 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    return coordinates;\n}\nint main() {\n    auto candidate = get_coordinates;\n    assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n    assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n    assert(candidate(std::make_tuple(5, 6)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)7}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)7}), (std::vector<long>)std::vector<long>({(long)6, (long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)6, (long)7})})));\n}\n",
      "timestamp": 1666123940,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp0lzptspz.cpp:2:\n/tmp/tmp0lzptspz.cpp: In function \u2018int main()\u2019:\n/tmp/tmp0lzptspz.cpp:49:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   49 |     assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                                     std::tuple<int, int>\n/tmp/tmp0lzptspz.cpp:50:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   50 |     assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to extract all the adjacent coordinates of the given coordinate tuple.\nstd::vector<std::vector<long>> get_coordinates(long test_tup) {\n    std::vector<std::vector<long>> coordinates;\n    std::vector<long> temp;\n    long x = test_tup;\n    long y = test_tup;\n    while(x > 0) {\n        temp.push_back(x);\n        temp.push_back(y);\n        coordinates.push_back(temp);\n        temp.clear();\n        x--;\n        y++;\n    }\n    x = test_tup;\n    y = test_tup;\n    while(y > 0) {\n        temp.push_back(x);\n        temp.push_back(y);\n        coordinates.push_back(temp);\n        temp.clear();\n        x++;\n        y--;\n    }\n    return coordinates;\n}\nint main() {\n    auto candidate = get_coordinates;\n    assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n    assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n    assert(candidate(std::make_tuple(5, 6)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)7}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)7}), (std::vector<long>)std::vector<long>({(long)6, (long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)6, (long)7})})));\n}\n",
      "timestamp": 1666123940,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp0slvv8qo.cpp:2:\n/tmp/tmp0slvv8qo.cpp: In function \u2018int main()\u2019:\n/tmp/tmp0slvv8qo.cpp:31:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   31 |     assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                                     std::tuple<int, int>\n/tmp/tmp0slvv8qo.cpp:32:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   32 |     assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to extract all the adjacent coordinates of the given coordinate tuple.\nstd::vector<std::vector<long>> get_coordinates(long test_tup) {\n    std::vector<std::vector<long>> coordinates;\n    std::vector<long> tup;\n    tup.push_back(test_tup);\n    tup.push_back(test_tup + 1);\n    coordinates.push_back(tup);\n    tup.clear();\n    tup.push_back(test_tup);\n    tup.push_back(test_tup - 1);\n    coordinates.push_back(tup);\n    tup.clear();\n    tup.push_back(test_tup + 1);\n    tup.push_back(test_tup);\n    coordinates.push_back(tup);\n    tup.clear();\n    tup.push_back(test_tup - 1);\n    tup.push_back(test_tup);\n    coordinates.push_back(tup);\n    tup.clear();\n    return coordinates;\n}\nint main() {\n    auto candidate = get_coordinates;\n    assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n    assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n    assert(candidate(std::make_tuple(5, 6)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)7}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)7}), (std::vector<long>)std::vector<long>({(long)6, (long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)6, (long)7})})));\n}\n",
      "timestamp": 1666123939,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmplcq5ypop.cpp:2:\n/tmp/tmplcq5ypop.cpp: In function \u2018int main()\u2019:\n/tmp/tmplcq5ypop.cpp:27:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   27 |     assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                                     std::tuple<int, int>\n/tmp/tmplcq5ypop.cpp:28:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   28 |     assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to extract all the adjacent coordinates of the given coordinate tuple.\nstd::vector<std::vector<long>> get_coordinates(long test_tup) {\n  std::vector<std::vector<long>> coordinates;\n  std::vector<long> coordinate;\n  long x = test_tup;\n  long y = test_tup;\n  long z = test_tup;\n  for (long i = 0; i < test_tup; i++) {\n    coordinate.push_back(x);\n    coordinate.push_back(y);\n    coordinate.push_back(z);\n    coordinates.push_back(coordinate);\n    coordinate.clear();\n    x--;\n    y++;\n    z--;\n  }\n  return coordinates;\n}\nint main() {\n    auto candidate = get_coordinates;\n    assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n    assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n    assert(candidate(std::make_tuple(5, 6)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)7}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)7}), (std::vector<long>)std::vector<long>({(long)6, (long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)6, (long)7})})));\n}\n",
      "timestamp": 1666123940,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpxoto68_m.cpp:2:\n/tmp/tmpxoto68_m.cpp: In function \u2018int main()\u2019:\n/tmp/tmpxoto68_m.cpp:24:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   24 |     assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                                     std::tuple<int, int>\n/tmp/tmpxoto68_m.cpp:25:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   25 |     assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to extract all the adjacent coordinates of the given coordinate tuple.\nstd::vector<std::vector<long>> get_coordinates(long test_tup) {\n    std::vector<std::vector<long>> coordinates;\n    std::vector<long> tup;\n    long x = test_tup;\n    long y = test_tup;\n    long z = test_tup;\n    for(long i = 0; i < test_tup; i++) {\n        tup.push_back(x);\n        tup.push_back(y);\n        tup.push_back(z);\n        coordinates.push_back(tup);\n        tup.clear();\n        x--;\n        y--;\n        z--;\n    }\n    return coordinates;\n}\nint main() {\n    auto candidate = get_coordinates;\n    assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n    assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n    assert(candidate(std::make_tuple(5, 6)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)7}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)7}), (std::vector<long>)std::vector<long>({(long)6, (long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)6, (long)7})})));\n}\n",
      "timestamp": 1666123931,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpwscqump3.cpp:2:\n/tmp/tmpwscqump3.cpp: In function \u2018int main()\u2019:\n/tmp/tmpwscqump3.cpp:24:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   24 |     assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                                     std::tuple<int, int>\n/tmp/tmpwscqump3.cpp:25:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   25 |     assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to extract all the adjacent coordinates of the given coordinate tuple.\nstd::vector<std::vector<long>> get_coordinates(long test_tup) {\n    std::vector<std::vector<long>> coordinates;\n    std::vector<long> temp;\n    long x = test_tup / 100;\n    long y = test_tup % 100;\n    temp.push_back(x);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y + 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y - 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x + 1);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x - 1);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x + 1);\n    temp.push_back(y + 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x - 1);\n    temp.push_back(y - 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x + 1);\n    temp.push_back(y - 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x - 1);\n    temp.push_back(y + 1);\n    coordinates.push_back(temp);\n    return coordinates;\n}\nint main() {\n    auto candidate = get_coordinates;\n    assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n    assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n    assert(candidate(std::make_tuple(5, 6)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)7}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)7}), (std::vector<long>)std::vector<long>({(long)6, (long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)6, (long)7})})));\n}\n",
      "timestamp": 1666123931,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp35glz6gq.cpp:2:\n/tmp/tmp35glz6gq.cpp: In function \u2018int main()\u2019:\n/tmp/tmp35glz6gq.cpp:48:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   48 |     assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                                     std::tuple<int, int>\n/tmp/tmp35glz6gq.cpp:49:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   49 |     assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to extract all the adjacent coordinates of the given coordinate tuple.\nstd::vector<std::vector<long>> get_coordinates(long test_tup) {\n    std::vector<std::vector<long>> coordinates;\n    std::vector<long> temp;\n    long x = test_tup / 100;\n    long y = test_tup % 100;\n    temp.push_back(x);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y + 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y - 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x + 1);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x - 1);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x + 1);\n    temp.push_back(y + 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x - 1);\n    temp.push_back(y - 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x + 1);\n    temp.push_back(y - 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x - 1);\n    temp.push_back(y + 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    return coordinates;\n}\nint main() {\n    auto candidate = get_coordinates;\n    assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n    assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n    assert(candidate(std::make_tuple(5, 6)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)7}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)7}), (std::vector<long>)std::vector<long>({(long)6, (long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)6, (long)7})})));\n}\n",
      "timestamp": 1666123929,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpe58wgof6.cpp:2:\n/tmp/tmpe58wgof6.cpp: In function \u2018int main()\u2019:\n/tmp/tmpe58wgof6.cpp:49:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   49 |     assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                                     std::tuple<int, int>\n/tmp/tmpe58wgof6.cpp:50:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   50 |     assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to extract all the adjacent coordinates of the given coordinate tuple.\nstd::vector<std::vector<long>> get_coordinates(long test_tup) {\n    std::vector<std::vector<long>> coordinates;\n    std::vector<long> temp;\n    long x = test_tup / 100;\n    long y = test_tup % 100;\n    temp.push_back(x);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y + 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y - 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x + 1);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x - 1);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x + 1);\n    temp.push_back(y + 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x + 1);\n    temp.push_back(y - 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x - 1);\n    temp.push_back(y + 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x - 1);\n    temp.push_back(y - 1);\n    coordinates.push_back(temp);\n    return coordinates;\n}\nint main() {\n    auto candidate = get_coordinates;\n    assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n    assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n    assert(candidate(std::make_tuple(5, 6)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)7}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)7}), (std::vector<long>)std::vector<long>({(long)6, (long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)6, (long)7})})));\n}\n",
      "timestamp": 1666123931,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp0yfoagwx.cpp:2:\n/tmp/tmp0yfoagwx.cpp: In function \u2018int main()\u2019:\n/tmp/tmp0yfoagwx.cpp:48:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   48 |     assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                                     std::tuple<int, int>\n/tmp/tmp0yfoagwx.cpp:49:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   49 |     assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to extract all the adjacent coordinates of the given coordinate tuple.\nstd::vector<std::vector<long>> get_coordinates(long test_tup) {\n    std::vector<std::vector<long>> coordinates;\n    std::vector<long> tup;\n    long x = test_tup / 100;\n    long y = test_tup % 100;\n    for (long i = x - 1; i <= x + 1; i++) {\n        for (long j = y - 1; j <= y + 1; j++) {\n            if (i == x && j == y) {\n                continue;\n            }\n            tup.push_back(i);\n            tup.push_back(j);\n            coordinates.push_back(tup);\n            tup.clear();\n        }\n    }\n    return coordinates;\n}\nint main() {\n    auto candidate = get_coordinates;\n    assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n    assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n    assert(candidate(std::make_tuple(5, 6)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)7}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)7}), (std::vector<long>)std::vector<long>({(long)6, (long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)6, (long)7})})));\n}\n",
      "timestamp": 1666123931,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpnx2bngyf.cpp:2:\n/tmp/tmpnx2bngyf.cpp: In function \u2018int main()\u2019:\n/tmp/tmpnx2bngyf.cpp:24:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   24 |     assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                                     std::tuple<int, int>\n/tmp/tmpnx2bngyf.cpp:25:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   25 |     assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to extract all the adjacent coordinates of the given coordinate tuple.\nstd::vector<std::vector<long>> get_coordinates(long test_tup) {\n    std::vector<std::vector<long>> coordinates;\n    std::vector<long> temp;\n    long x = test_tup / 100;\n    long y = test_tup % 100;\n    temp.push_back(x);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x - 1);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x + 1);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y - 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y + 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    return coordinates;\n}\nint main() {\n    auto candidate = get_coordinates;\n    assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n    assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n    assert(candidate(std::make_tuple(5, 6)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)7}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)7}), (std::vector<long>)std::vector<long>({(long)6, (long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)6, (long)7})})));\n}\n",
      "timestamp": 1665510632,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpdbdpf1tf.cpp:2:\n/tmp/tmpdbdpf1tf.cpp: In function \u2018int main()\u2019:\n/tmp/tmpdbdpf1tf.cpp:33:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   33 |     assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                                     std::tuple<int, int>\n/tmp/tmpdbdpf1tf.cpp:34:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   34 |     assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to extract all the adjacent coordinates of the given coordinate tuple.\nstd::vector<std::vector<long>> get_coordinates(long test_tup) {\n    std::vector<std::vector<long>> coordinates;\n    std::vector<long> tup;\n    long x = test_tup;\n    long y = test_tup;\n    for (long i = 0; i < test_tup; i++) {\n        tup.push_back(x);\n        tup.push_back(y);\n        coordinates.push_back(tup);\n        tup.clear();\n        x--;\n        y--;\n    }\n    return coordinates;\n}\nint main() {\n    auto candidate = get_coordinates;\n    assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n    assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n    assert(candidate(std::make_tuple(5, 6)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)7}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)7}), (std::vector<long>)std::vector<long>({(long)6, (long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)6, (long)7})})));\n}\n",
      "timestamp": 1666123934,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpaid0o8sg.cpp:2:\n/tmp/tmpaid0o8sg.cpp: In function \u2018int main()\u2019:\n/tmp/tmpaid0o8sg.cpp:21:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   21 |     assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                                     std::tuple<int, int>\n/tmp/tmpaid0o8sg.cpp:22:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   22 |     assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to extract all the adjacent coordinates of the given coordinate tuple.\nstd::vector<std::vector<long>> get_coordinates(long test_tup) {\n    std::vector<std::vector<long>> result;\n    long x = test_tup / 100;\n    long y = test_tup % 100;\n    for (long dx = -1; dx <= 1; dx++) {\n        for (long dy = -1; dy <= 1; dy++) {\n            if (dx == 0 && dy == 0) {\n                continue;\n            }\n            result.push_back({x + dx, y + dy});\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = get_coordinates;\n    assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n    assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n    assert(candidate(std::make_tuple(5, 6)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)7}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)7}), (std::vector<long>)std::vector<long>({(long)6, (long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)6, (long)7})})));\n}\n",
      "timestamp": 1666123940,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpqurn0hfz.cpp:2:\n/tmp/tmpqurn0hfz.cpp: In function \u2018int main()\u2019:\n/tmp/tmpqurn0hfz.cpp:20:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   20 |     assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                                     std::tuple<int, int>\n/tmp/tmpqurn0hfz.cpp:21:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   21 |     assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to extract all the adjacent coordinates of the given coordinate tuple.\nstd::vector<std::vector<long>> get_coordinates(long test_tup) {\n    std::vector<std::vector<long>> coordinates;\n    std::vector<long> temp;\n    long x = test_tup / 100;\n    long y = test_tup % 100;\n    temp.push_back(x);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x+1);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x-1);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y+1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y-1);\n    coordinates.push_back(temp);\n    temp.clear();\n    return coordinates;\n}\nint main() {\n    auto candidate = get_coordinates;\n    assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n    assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n    assert(candidate(std::make_tuple(5, 6)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)7}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)7}), (std::vector<long>)std::vector<long>({(long)6, (long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)6, (long)7})})));\n}\n",
      "timestamp": 1666123940,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp6c2s4twm.cpp:2:\n/tmp/tmp6c2s4twm.cpp: In function \u2018int main()\u2019:\n/tmp/tmp6c2s4twm.cpp:33:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   33 |     assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                                     std::tuple<int, int>\n/tmp/tmp6c2s4twm.cpp:34:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   34 |     assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to extract all the adjacent coordinates of the given coordinate tuple.\nstd::vector<std::vector<long>> get_coordinates(long test_tup) {\n    std::vector<std::vector<long>> result;\n    std::vector<long> tup;\n    long x = test_tup;\n    while(x > 0) {\n        tup.push_back(x % 10);\n        x /= 10;\n    }\n    long n = tup.size();\n    for(long i = 0; i < n; i++) {\n        std::vector<long> temp = tup;\n        if(temp[i] > 0) {\n            temp[i] -= 1;\n            result.push_back(temp);\n        }\n        if(temp[i] < 9) {\n            temp[i] += 1;\n            result.push_back(temp);\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = get_coordinates;\n    assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n    assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n    assert(candidate(std::make_tuple(5, 6)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)7}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)7}), (std::vector<long>)std::vector<long>({(long)6, (long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)6, (long)7})})));\n}\n",
      "timestamp": 1666123940,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpzqcnjczo.cpp:2:\n/tmp/tmpzqcnjczo.cpp: In function \u2018int main()\u2019:\n/tmp/tmpzqcnjczo.cpp:28:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   28 |     assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                                     std::tuple<int, int>\n/tmp/tmpzqcnjczo.cpp:29:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   29 |     assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to extract all the adjacent coordinates of the given coordinate tuple.\nstd::vector<std::vector<long>> get_coordinates(long test_tup) {\n    std::vector<std::vector<long>> coordinates;\n    std::vector<long> temp;\n    long x = test_tup / 1000000;\n    long y = test_tup % 1000000;\n    temp.push_back(x);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x + 1);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x - 1);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y + 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y - 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x + 1);\n    temp.push_back(y + 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x + 1);\n    temp.push_back(y - 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x - 1);\n    temp.push_back(y + 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x - 1);\n    temp.push_back(y - 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    return coordinates;\n}\nint main() {\n    auto candidate = get_coordinates;\n    assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n    assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n    assert(candidate(std::make_tuple(5, 6)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)7}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)7}), (std::vector<long>)std::vector<long>({(long)6, (long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)6, (long)7})})));\n}\n",
      "timestamp": 1666123941,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpiw7hs96n.cpp:2:\n/tmp/tmpiw7hs96n.cpp: In function \u2018int main()\u2019:\n/tmp/tmpiw7hs96n.cpp:49:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   49 |     assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                                     std::tuple<int, int>\n/tmp/tmpiw7hs96n.cpp:50:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   50 |     assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to extract all the adjacent coordinates of the given coordinate tuple.\nstd::vector<std::vector<long>> get_coordinates(long test_tup) {\n    std::vector<std::vector<long>> coordinates;\n    std::vector<long> temp;\n    long x = test_tup % 10;\n    long y = test_tup / 10;\n    temp.push_back(x);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x + 1);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y + 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x - 1);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y - 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    return coordinates;\n}\nint main() {\n    auto candidate = get_coordinates;\n    assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n    assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n    assert(candidate(std::make_tuple(5, 6)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)7}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)7}), (std::vector<long>)std::vector<long>({(long)6, (long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)6, (long)7})})));\n}\n",
      "timestamp": 1666123931,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmph06mwq89.cpp:2:\n/tmp/tmph06mwq89.cpp: In function \u2018int main()\u2019:\n/tmp/tmph06mwq89.cpp:33:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   33 |     assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                                     std::tuple<int, int>\n/tmp/tmph06mwq89.cpp:34:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   34 |     assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to extract all the adjacent coordinates of the given coordinate tuple.\nstd::vector<std::vector<long>> get_coordinates(long test_tup) {\n    std::vector<std::vector<long>> coordinates;\n    std::vector<long> temp;\n    long x = test_tup / 100;\n    long y = test_tup % 100;\n    temp.push_back(x);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x + 1);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x - 1);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y + 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y - 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    return coordinates;\n}\nint main() {\n    auto candidate = get_coordinates;\n    assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n    assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n    assert(candidate(std::make_tuple(5, 6)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)7}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)7}), (std::vector<long>)std::vector<long>({(long)6, (long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)6, (long)7})})));\n}\n",
      "timestamp": 1665510632,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp6kq6yi1x.cpp:2:\n/tmp/tmp6kq6yi1x.cpp: In function \u2018int main()\u2019:\n/tmp/tmp6kq6yi1x.cpp:33:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   33 |     assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                                     std::tuple<int, int>\n/tmp/tmp6kq6yi1x.cpp:34:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   34 |     assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to extract all the adjacent coordinates of the given coordinate tuple.\nstd::vector<std::vector<long>> get_coordinates(long test_tup) {\n    std::vector<std::vector<long>> coordinates;\n    std::vector<long> tup;\n    tup.push_back(test_tup);\n    tup.push_back(test_tup);\n    coordinates.push_back(tup);\n    tup.clear();\n    tup.push_back(test_tup);\n    tup.push_back(test_tup+1);\n    coordinates.push_back(tup);\n    tup.clear();\n    tup.push_back(test_tup);\n    tup.push_back(test_tup-1);\n    coordinates.push_back(tup);\n    tup.clear();\n    tup.push_back(test_tup+1);\n    tup.push_back(test_tup);\n    coordinates.push_back(tup);\n    tup.clear();\n    tup.push_back(test_tup-1);\n    tup.push_back(test_tup);\n    coordinates.push_back(tup);\n    tup.clear();\n    tup.push_back(test_tup+1);\n    tup.push_back(test_tup+1);\n    coordinates.push_back(tup);\n    tup.clear();\n    tup.push_back(test_tup+1);\n    tup.push_back(test_tup-1);\n    coordinates.push_back(tup);\n    tup.clear();\n    tup.push_back(test_tup-1);\n    tup.push_back(test_tup+1);\n    coordinates.push_back(tup);\n    tup.clear();\n    tup.push_back(test_tup-1);\n    tup.push_back(test_tup-1);\n    coordinates.push_back(tup);\n    return coordinates;\n}\nint main() {\n    auto candidate = get_coordinates;\n    assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n    assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n    assert(candidate(std::make_tuple(5, 6)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)7}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)7}), (std::vector<long>)std::vector<long>({(long)6, (long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)6, (long)7})})));\n}\n",
      "timestamp": 1665510634,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpwzdpp1xm.cpp:2:\n/tmp/tmpwzdpp1xm.cpp: In function \u2018int main()\u2019:\n/tmp/tmpwzdpp1xm.cpp:46:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   46 |     assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                                     std::tuple<int, int>\n/tmp/tmpwzdpp1xm.cpp:47:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   47 |     assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to extract all the adjacent coordinates of the given coordinate tuple.\nstd::vector<std::vector<long>> get_coordinates(long test_tup) {\n    std::vector<std::vector<long>> coordinates;\n    std::vector<long> temp;\n    long x = test_tup/10;\n    long y = test_tup%10;\n    temp.push_back(x);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x-1);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x+1);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y-1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y+1);\n    coordinates.push_back(temp);\n    temp.clear();\n    return coordinates;\n}\nint main() {\n    auto candidate = get_coordinates;\n    assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n    assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n    assert(candidate(std::make_tuple(5, 6)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)7}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)7}), (std::vector<long>)std::vector<long>({(long)6, (long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)6, (long)7})})));\n}\n",
      "timestamp": 1666123931,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpoj9f67vb.cpp:2:\n/tmp/tmpoj9f67vb.cpp: In function \u2018int main()\u2019:\n/tmp/tmpoj9f67vb.cpp:33:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   33 |     assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                                     std::tuple<int, int>\n/tmp/tmpoj9f67vb.cpp:34:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   34 |     assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to extract all the adjacent coordinates of the given coordinate tuple.\nstd::vector<std::vector<long>> get_coordinates(long test_tup) {\n    std::vector<std::vector<long>> result;\n    std::vector<long> temp;\n    long x = test_tup/1000;\n    long y = test_tup%1000;\n    temp.push_back(x);\n    temp.push_back(y);\n    result.push_back(temp);\n    temp.clear();\n    temp.push_back(x+1);\n    temp.push_back(y);\n    result.push_back(temp);\n    temp.clear();\n    temp.push_back(x-1);\n    temp.push_back(y);\n    result.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y+1);\n    result.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y-1);\n    result.push_back(temp);\n    return result;\n}\nint main() {\n    auto candidate = get_coordinates;\n    assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n    assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n    assert(candidate(std::make_tuple(5, 6)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)7}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)7}), (std::vector<long>)std::vector<long>({(long)6, (long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)6, (long)7})})));\n}\n",
      "timestamp": 1666123941,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp3o3h3fxe.cpp:2:\n/tmp/tmp3o3h3fxe.cpp: In function \u2018int main()\u2019:\n/tmp/tmp3o3h3fxe.cpp:32:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   32 |     assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                                     std::tuple<int, int>\n/tmp/tmp3o3h3fxe.cpp:33:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   33 |     assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to extract all the adjacent coordinates of the given coordinate tuple.\nstd::vector<std::vector<long>> get_coordinates(long test_tup) {\n    std::vector<std::vector<long>> coordinates;\n    std::vector<long> temp;\n    long x = test_tup / 100;\n    long y = test_tup % 100;\n    temp.push_back(x);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x - 1);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x + 1);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y - 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y + 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x - 1);\n    temp.push_back(y - 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x - 1);\n    temp.push_back(y + 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x + 1);\n    temp.push_back(y - 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x + 1);\n    temp.push_back(y + 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    return coordinates;\n}\nint main() {\n    auto candidate = get_coordinates;\n    assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n    assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n    assert(candidate(std::make_tuple(5, 6)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)7}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)7}), (std::vector<long>)std::vector<long>({(long)6, (long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)6, (long)7})})));\n}\n",
      "timestamp": 1666123941,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpwykzpwzk.cpp:2:\n/tmp/tmpwykzpwzk.cpp: In function \u2018int main()\u2019:\n/tmp/tmpwykzpwzk.cpp:49:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   49 |     assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                                     std::tuple<int, int>\n/tmp/tmpwykzpwzk.cpp:50:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   50 |     assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to extract all the adjacent coordinates of the given coordinate tuple.\nstd::vector<std::vector<long>> get_coordinates(long test_tup) {\n    std::vector<std::vector<long>> coordinates;\n    long x = test_tup / 100;\n    long y = test_tup % 100;\n    std::vector<long> temp_coordinate;\n    temp_coordinate.push_back(x);\n    temp_coordinate.push_back(y);\n    coordinates.push_back(temp_coordinate);\n    temp_coordinate.clear();\n    temp_coordinate.push_back(x + 1);\n    temp_coordinate.push_back(y);\n    coordinates.push_back(temp_coordinate);\n    temp_coordinate.clear();\n    temp_coordinate.push_back(x);\n    temp_coordinate.push_back(y + 1);\n    coordinates.push_back(temp_coordinate);\n    temp_coordinate.clear();\n    temp_coordinate.push_back(x + 1);\n    temp_coordinate.push_back(y + 1);\n    coordinates.push_back(temp_coordinate);\n    return coordinates;\n}\nint main() {\n    auto candidate = get_coordinates;\n    assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n    assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n    assert(candidate(std::make_tuple(5, 6)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)7}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)7}), (std::vector<long>)std::vector<long>({(long)6, (long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)6, (long)7})})));\n}\n",
      "timestamp": 1666123941,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpl5zx9nr3.cpp:2:\n/tmp/tmpl5zx9nr3.cpp: In function \u2018int main()\u2019:\n/tmp/tmpl5zx9nr3.cpp:28:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   28 |     assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                                     std::tuple<int, int>\n/tmp/tmpl5zx9nr3.cpp:29:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   29 |     assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to extract all the adjacent coordinates of the given coordinate tuple.\nstd::vector<std::vector<long>> get_coordinates(long test_tup) {\n    std::vector<std::vector<long>> coordinates;\n    std::vector<long> temp;\n    long x = test_tup / 100;\n    long y = test_tup % 100;\n    for (long i = x - 1; i <= x + 1; i++) {\n        for (long j = y - 1; j <= y + 1; j++) {\n            if (i == x && j == y) {\n                continue;\n            }\n            temp.push_back(i);\n            temp.push_back(j);\n            coordinates.push_back(temp);\n            temp.clear();\n        }\n    }\n    return coordinates;\n}\nint main() {\n    auto candidate = get_coordinates;\n    assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n    assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n    assert(candidate(std::make_tuple(5, 6)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)7}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)7}), (std::vector<long>)std::vector<long>({(long)6, (long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)6, (long)7})})));\n}\n",
      "timestamp": 1665510634,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp3wesp1fh.cpp:2:\n/tmp/tmp3wesp1fh.cpp: In function \u2018int main()\u2019:\n/tmp/tmp3wesp1fh.cpp:24:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   24 |     assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                                     std::tuple<int, int>\n/tmp/tmp3wesp1fh.cpp:25:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   25 |     assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to extract all the adjacent coordinates of the given coordinate tuple.\nstd::vector<std::vector<long>> get_coordinates(long test_tup) {\n    std::vector<std::vector<long>> coordinates;\n    std::vector<long> temp;\n    long x = test_tup / 100;\n    long y = test_tup % 100;\n    temp.push_back(x);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y + 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y - 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x + 1);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x - 1);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x + 1);\n    temp.push_back(y + 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x + 1);\n    temp.push_back(y - 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x - 1);\n    temp.push_back(y + 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x - 1);\n    temp.push_back(y - 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    return coordinates;\n}\nint main() {\n    auto candidate = get_coordinates;\n    assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n    assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n    assert(candidate(std::make_tuple(5, 6)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)7}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)7}), (std::vector<long>)std::vector<long>({(long)6, (long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)6, (long)7})})));\n}\n",
      "timestamp": 1665510632,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpjprfb000.cpp:2:\n/tmp/tmpjprfb000.cpp: In function \u2018int main()\u2019:\n/tmp/tmpjprfb000.cpp:49:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   49 |     assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                                     std::tuple<int, int>\n/tmp/tmpjprfb000.cpp:50:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   50 |     assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to extract all the adjacent coordinates of the given coordinate tuple.\nstd::vector<std::vector<long>> get_coordinates(long test_tup) {\n    std::vector<std::vector<long>> coordinates;\n    long x = test_tup / 100;\n    long y = test_tup % 100;\n    std::vector<long> coord1 = {x - 1, y};\n    std::vector<long> coord2 = {x + 1, y};\n    std::vector<long> coord3 = {x, y - 1};\n    std::vector<long> coord4 = {x, y + 1};\n    coordinates.push_back(coord1);\n    coordinates.push_back(coord2);\n    coordinates.push_back(coord3);\n    coordinates.push_back(coord4);\n    return coordinates;\n}\nint main() {\n    auto candidate = get_coordinates;\n    assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n    assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n    assert(candidate(std::make_tuple(5, 6)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)7}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)7}), (std::vector<long>)std::vector<long>({(long)6, (long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)6, (long)7})})));\n}\n",
      "timestamp": 1666123941,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp46hpcmop.cpp:2:\n/tmp/tmp46hpcmop.cpp: In function \u2018int main()\u2019:\n/tmp/tmp46hpcmop.cpp:20:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   20 |     assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                                     std::tuple<int, int>\n/tmp/tmp46hpcmop.cpp:21:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   21 |     assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to extract all the adjacent coordinates of the given coordinate tuple.\nstd::vector<std::vector<long>> get_coordinates(long test_tup) {\n    std::vector<std::vector<long>> coordinates;\n    std::vector<long> temp;\n    long x, y;\n    x = test_tup / 10;\n    y = test_tup % 10;\n    temp.push_back(x);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x - 1);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x + 1);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y - 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y + 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    return coordinates;\n}\nint main() {\n    auto candidate = get_coordinates;\n    assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n    assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n    assert(candidate(std::make_tuple(5, 6)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)7}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)7}), (std::vector<long>)std::vector<long>({(long)6, (long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)6, (long)7})})));\n}\n",
      "timestamp": 1666123941,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp55e4g_y4.cpp:2:\n/tmp/tmp55e4g_y4.cpp: In function \u2018int main()\u2019:\n/tmp/tmp55e4g_y4.cpp:34:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   34 |     assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                                     std::tuple<int, int>\n/tmp/tmp55e4g_y4.cpp:35:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   35 |     assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to extract all the adjacent coordinates of the given coordinate tuple.\nstd::vector<std::vector<long>> get_coordinates(long test_tup) {\n    std::vector<std::vector<long>> coordinates;\n    std::vector<long> temp;\n    long x = test_tup / 100;\n    long y = test_tup % 100;\n    for (long i = x - 1; i <= x + 1; i++) {\n        for (long j = y - 1; j <= y + 1; j++) {\n            if (i == x && j == y) {\n                continue;\n            }\n            temp.push_back(i);\n            temp.push_back(j);\n            coordinates.push_back(temp);\n            temp.clear();\n        }\n    }\n    return coordinates;\n}\nint main() {\n    auto candidate = get_coordinates;\n    assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n    assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n    assert(candidate(std::make_tuple(5, 6)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)7}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)7}), (std::vector<long>)std::vector<long>({(long)6, (long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)6, (long)7})})));\n}\n",
      "timestamp": 1665510634,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp3wesp1fh.cpp:2:\n/tmp/tmp3wesp1fh.cpp: In function \u2018int main()\u2019:\n/tmp/tmp3wesp1fh.cpp:24:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   24 |     assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                                     std::tuple<int, int>\n/tmp/tmp3wesp1fh.cpp:25:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   25 |     assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to extract all the adjacent coordinates of the given coordinate tuple.\nstd::vector<std::vector<long>> get_coordinates(long test_tup) {\n    std::vector<std::vector<long>> coordinates;\n    std::vector<long> temp;\n    long x = test_tup % 10;\n    long y = test_tup / 10;\n    temp.push_back(x);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y + 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x + 1);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x + 1);\n    temp.push_back(y + 1);\n    coordinates.push_back(temp);\n    return coordinates;\n}\nint main() {\n    auto candidate = get_coordinates;\n    assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n    assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n    assert(candidate(std::make_tuple(5, 6)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)7}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)7}), (std::vector<long>)std::vector<long>({(long)6, (long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)6, (long)7})})));\n}\n",
      "timestamp": 1666123941,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmppg3mihxr.cpp:2:\n/tmp/tmppg3mihxr.cpp: In function \u2018int main()\u2019:\n/tmp/tmppg3mihxr.cpp:28:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   28 |     assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                                     std::tuple<int, int>\n/tmp/tmppg3mihxr.cpp:29:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   29 |     assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to extract all the adjacent coordinates of the given coordinate tuple.\nstd::vector<std::vector<long>> get_coordinates(long test_tup) {\n    std::vector<std::vector<long>> coordinates;\n    long x = test_tup / 100;\n    long y = test_tup % 100;\n    long x_coordinates[] = {x - 1, x, x + 1};\n    long y_coordinates[] = {y - 1, y, y + 1};\n    for (long i = 0; i < 3; i++) {\n        for (long j = 0; j < 3; j++) {\n            if (x_coordinates[i] == x && y_coordinates[j] == y) {\n                continue;\n            }\n            std::vector<long> coordinate;\n            coordinate.push_back(x_coordinates[i]);\n            coordinate.push_back(y_coordinates[j]);\n            coordinates.push_back(coordinate);\n        }\n    }\n    return coordinates;\n}\nint main() {\n    auto candidate = get_coordinates;\n    assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n    assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n    assert(candidate(std::make_tuple(5, 6)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)7}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)7}), (std::vector<long>)std::vector<long>({(long)6, (long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)6, (long)7})})));\n}\n",
      "timestamp": 1666123941,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpl432w3xk.cpp:2:\n/tmp/tmpl432w3xk.cpp: In function \u2018int main()\u2019:\n/tmp/tmpl432w3xk.cpp:25:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   25 |     assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                                     std::tuple<int, int>\n/tmp/tmpl432w3xk.cpp:26:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   26 |     assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to extract all the adjacent coordinates of the given coordinate tuple.\nstd::vector<std::vector<long>> get_coordinates(long test_tup) {\n    std::vector<std::vector<long>> coordinates;\n    long x = test_tup / 100;\n    long y = test_tup % 100;\n    std::vector<long> temp;\n    temp.push_back(x);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x - 1);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x + 1);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y - 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y + 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    return coordinates;\n}\nint main() {\n    auto candidate = get_coordinates;\n    assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n    assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n    assert(candidate(std::make_tuple(5, 6)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)7}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)7}), (std::vector<long>)std::vector<long>({(long)6, (long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)6, (long)7})})));\n}\n",
      "timestamp": 1665510634,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpwgxt9m8f.cpp:2:\n/tmp/tmpwgxt9m8f.cpp: In function \u2018int main()\u2019:\n/tmp/tmpwgxt9m8f.cpp:33:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   33 |     assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                                     std::tuple<int, int>\n/tmp/tmpwgxt9m8f.cpp:34:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   34 |     assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to extract all the adjacent coordinates of the given coordinate tuple.\nstd::vector<std::vector<long>> get_coordinates(long test_tup) {\n    std::vector<std::vector<long>> coordinates;\n    long x = test_tup / 100;\n    long y = test_tup % 100;\n    std::vector<long> coord1 = {x, y};\n    std::vector<long> coord2 = {x, y + 1};\n    std::vector<long> coord3 = {x + 1, y};\n    std::vector<long> coord4 = {x + 1, y + 1};\n    coordinates.push_back(coord1);\n    coordinates.push_back(coord2);\n    coordinates.push_back(coord3);\n    coordinates.push_back(coord4);\n    return coordinates;\n}\nint main() {\n    auto candidate = get_coordinates;\n    assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n    assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n    assert(candidate(std::make_tuple(5, 6)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)7}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)7}), (std::vector<long>)std::vector<long>({(long)6, (long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)6, (long)7})})));\n}\n",
      "timestamp": 1666123941,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmptugcm3h6.cpp:2:\n/tmp/tmptugcm3h6.cpp: In function \u2018int main()\u2019:\n/tmp/tmptugcm3h6.cpp:20:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   20 |     assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                                     std::tuple<int, int>\n/tmp/tmptugcm3h6.cpp:21:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   21 |     assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to extract all the adjacent coordinates of the given coordinate tuple.\nstd::vector<std::vector<long>> get_coordinates(long test_tup) {\n    std::vector<std::vector<long>> coordinates;\n    long x = test_tup / 100;\n    long y = test_tup % 100;\n    long x_coordinates[] = {x, x + 1, x - 1};\n    long y_coordinates[] = {y, y + 1, y - 1};\n    for (long i = 0; i < 3; i++) {\n        for (long j = 0; j < 3; j++) {\n            std::vector<long> coordinate;\n            coordinate.push_back(x_coordinates[i]);\n            coordinate.push_back(y_coordinates[j]);\n            coordinates.push_back(coordinate);\n        }\n    }\n    return coordinates;\n}\nint main() {\n    auto candidate = get_coordinates;\n    assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n    assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n    assert(candidate(std::make_tuple(5, 6)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)7}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)7}), (std::vector<long>)std::vector<long>({(long)6, (long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)6, (long)7})})));\n}\n",
      "timestamp": 1666123941,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp5k95565y.cpp:2:\n/tmp/tmp5k95565y.cpp: In function \u2018int main()\u2019:\n/tmp/tmp5k95565y.cpp:22:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   22 |     assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                                     std::tuple<int, int>\n/tmp/tmp5k95565y.cpp:23:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   23 |     assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to extract all the adjacent coordinates of the given coordinate tuple.\nstd::vector<std::vector<long>> get_coordinates(long test_tup) {\n    std::vector<std::vector<long>> result;\n    std::vector<long> temp;\n    long x = test_tup / 100;\n    long y = test_tup % 100;\n    temp.push_back(x);\n    temp.push_back(y);\n    result.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y + 1);\n    result.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y - 1);\n    result.push_back(temp);\n    temp.clear();\n    temp.push_back(x + 1);\n    temp.push_back(y);\n    result.push_back(temp);\n    temp.clear();\n    temp.push_back(x - 1);\n    temp.push_back(y);\n    result.push_back(temp);\n    temp.clear();\n    temp.push_back(x + 1);\n    temp.push_back(y + 1);\n    result.push_back(temp);\n    temp.clear();\n    temp.push_back(x + 1);\n    temp.push_back(y - 1);\n    result.push_back(temp);\n    temp.clear();\n    temp.push_back(x - 1);\n    temp.push_back(y + 1);\n    result.push_back(temp);\n    temp.clear();\n    temp.push_back(x - 1);\n    temp.push_back(y - 1);\n    result.push_back(temp);\n    temp.clear();\n    return result;\n}\nint main() {\n    auto candidate = get_coordinates;\n    assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n    assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n    assert(candidate(std::make_tuple(5, 6)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)7}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)7}), (std::vector<long>)std::vector<long>({(long)6, (long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)6, (long)7})})));\n}\n",
      "timestamp": 1666123941,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpk31sbsc8.cpp:2:\n/tmp/tmpk31sbsc8.cpp: In function \u2018int main()\u2019:\n/tmp/tmpk31sbsc8.cpp:49:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   49 |     assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                                     std::tuple<int, int>\n/tmp/tmpk31sbsc8.cpp:50:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   50 |     assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to extract all the adjacent coordinates of the given coordinate tuple.\nstd::vector<std::vector<long>> get_coordinates(long test_tup) {\n    std::vector<std::vector<long>> coordinates;\n    std::vector<long> temp;\n    long x = test_tup;\n    while(x != 0) {\n        long y = x % 10;\n        temp.push_back(y);\n        x = x / 10;\n    }\n    for(int i = 0; i < temp.size(); i++) {\n        for(int j = 0; j < temp.size(); j++) {\n            if(i != j) {\n                std::vector<long> temp2;\n                temp2.push_back(temp[i]);\n                temp2.push_back(temp[j]);\n                coordinates.push_back(temp2);\n            }\n        }\n    }\n    return coordinates;\n}\nint main() {\n    auto candidate = get_coordinates;\n    assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n    assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n    assert(candidate(std::make_tuple(5, 6)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)7}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)7}), (std::vector<long>)std::vector<long>({(long)6, (long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)6, (long)7})})));\n}\n",
      "timestamp": 1666123941,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpja3m6ry1.cpp:2:\n/tmp/tmpja3m6ry1.cpp: In function \u2018int main()\u2019:\n/tmp/tmpja3m6ry1.cpp:27:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   27 |     assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                                     std::tuple<int, int>\n/tmp/tmpja3m6ry1.cpp:28:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   28 |     assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to extract all the adjacent coordinates of the given coordinate tuple.\nstd::vector<std::vector<long>> get_coordinates(long test_tup) {\n    std::vector<std::vector<long>> coordinates;\n    std::vector<long> temp;\n    long x = test_tup / 100;\n    long y = test_tup % 100;\n    temp.push_back(x);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y + 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y - 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x + 1);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x - 1);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x + 1);\n    temp.push_back(y + 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x + 1);\n    temp.push_back(y - 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x - 1);\n    temp.push_back(y + 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x - 1);\n    temp.push_back(y - 1);\n    coordinates.push_back(temp);\n    return coordinates;\n}\nint main() {\n    auto candidate = get_coordinates;\n    assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n    assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n    assert(candidate(std::make_tuple(5, 6)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)7}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)7}), (std::vector<long>)std::vector<long>({(long)6, (long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)6, (long)7})})));\n}\n",
      "timestamp": 1666123931,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp0yfoagwx.cpp:2:\n/tmp/tmp0yfoagwx.cpp: In function \u2018int main()\u2019:\n/tmp/tmp0yfoagwx.cpp:48:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   48 |     assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                                     std::tuple<int, int>\n/tmp/tmp0yfoagwx.cpp:49:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   49 |     assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to extract all the adjacent coordinates of the given coordinate tuple.\nstd::vector<std::vector<long>> get_coordinates(long test_tup) {\n    std::vector<std::vector<long>> coordinates;\n    long x = test_tup / 100;\n    long y = test_tup % 100;\n    std::vector<long> temp;\n    temp.push_back(x);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y + 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y - 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x + 1);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x - 1);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x + 1);\n    temp.push_back(y + 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x + 1);\n    temp.push_back(y - 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x - 1);\n    temp.push_back(y + 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x - 1);\n    temp.push_back(y - 1);\n    coordinates.push_back(temp);\n    return coordinates;\n}\nint main() {\n    auto candidate = get_coordinates;\n    assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n    assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n    assert(candidate(std::make_tuple(5, 6)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)7}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)7}), (std::vector<long>)std::vector<long>({(long)6, (long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)6, (long)7})})));\n}\n",
      "timestamp": 1666123936,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp7_dpgmbb.cpp:2:\n/tmp/tmp7_dpgmbb.cpp: In function \u2018int main()\u2019:\n/tmp/tmp7_dpgmbb.cpp:48:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   48 |     assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                                     std::tuple<int, int>\n/tmp/tmp7_dpgmbb.cpp:49:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   49 |     assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to extract all the adjacent coordinates of the given coordinate tuple.\nstd::vector<std::vector<long>> get_coordinates(long test_tup) {\n    std::vector<std::vector<long>> result;\n    long x = test_tup / 100;\n    long y = test_tup % 100;\n    std::vector<long> temp;\n    temp.push_back(x);\n    temp.push_back(y);\n    result.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y + 1);\n    result.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y - 1);\n    result.push_back(temp);\n    temp.clear();\n    temp.push_back(x + 1);\n    temp.push_back(y);\n    result.push_back(temp);\n    temp.clear();\n    temp.push_back(x - 1);\n    temp.push_back(y);\n    result.push_back(temp);\n    temp.clear();\n    temp.push_back(x + 1);\n    temp.push_back(y + 1);\n    result.push_back(temp);\n    temp.clear();\n    temp.push_back(x - 1);\n    temp.push_back(y - 1);\n    result.push_back(temp);\n    temp.clear();\n    temp.push_back(x - 1);\n    temp.push_back(y + 1);\n    result.push_back(temp);\n    temp.clear();\n    temp.push_back(x + 1);\n    temp.push_back(y - 1);\n    result.push_back(temp);\n    return result;\n}\nint main() {\n    auto candidate = get_coordinates;\n    assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n    assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n    assert(candidate(std::make_tuple(5, 6)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)7}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)7}), (std::vector<long>)std::vector<long>({(long)6, (long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)6, (long)7})})));\n}\n",
      "timestamp": 1666123941,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpg7_6ah3o.cpp:2:\n/tmp/tmpg7_6ah3o.cpp: In function \u2018int main()\u2019:\n/tmp/tmpg7_6ah3o.cpp:48:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   48 |     assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                                     std::tuple<int, int>\n/tmp/tmpg7_6ah3o.cpp:49:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   49 |     assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to extract all the adjacent coordinates of the given coordinate tuple.\nstd::vector<std::vector<long>> get_coordinates(long test_tup) {\n    std::vector<std::vector<long>> coordinates;\n    std::vector<long> tup;\n    tup.push_back(test_tup);\n    coordinates.push_back(tup);\n    tup.clear();\n    tup.push_back(test_tup + 1);\n    coordinates.push_back(tup);\n    tup.clear();\n    tup.push_back(test_tup - 1);\n    coordinates.push_back(tup);\n    tup.clear();\n    tup.push_back(test_tup + 2);\n    coordinates.push_back(tup);\n    tup.clear();\n    tup.push_back(test_tup - 2);\n    coordinates.push_back(tup);\n    tup.clear();\n    tup.push_back(test_tup + 3);\n    coordinates.push_back(tup);\n    tup.clear();\n    tup.push_back(test_tup - 3);\n    coordinates.push_back(tup);\n    tup.clear();\n    tup.push_back(test_tup + 4);\n    coordinates.push_back(tup);\n    tup.clear();\n    tup.push_back(test_tup - 4);\n    coordinates.push_back(tup);\n    tup.clear();\n    tup.push_back(test_tup + 5);\n    coordinates.push_back(tup);\n    tup.clear();\n    tup.push_back(test_tup - 5);\n    coordinates.push_back(tup);\n    tup.clear();\n    tup.push_back(test_tup + 6);\n    coordinates.push_back(tup);\n    tup.clear();\n    tup.push_back(test_tup - 6);\n    coordinates.push_back(tup);\n    tup.clear();\n    tup.push_back(test_tup + 7);\n    coordinates.push_back(tup);\n    tup.clear();\n    tup.push_back(test_tup\n}\nint main() {\n    auto candidate = get_coordinates;\n    assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n    assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n    assert(candidate(std::make_tuple(5, 6)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)7}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)7}), (std::vector<long>)std::vector<long>({(long)6, (long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)6, (long)7})})));\n}\n",
      "timestamp": 1666123941,
      "stdout": "",
      "stderr": "/tmp/tmpoc0wr84_.cpp: In function \u2018std::vector<std::vector<long int> > get_coordinates(long int)\u2019:\n/tmp/tmpoc0wr84_.cpp:49:27: error: expected \u2018)\u2019 before \u2018}\u2019 token\n   49 |     tup.push_back(test_tup\n      |                  ~        ^\n      |                           )\n   50 | }\n      | ~                          \n/tmp/tmpoc0wr84_.cpp:50:1: warning: no return statement in function returning non-void [-Wreturn-type]\n   50 | }\n      | ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpoc0wr84_.cpp:2:\n/tmp/tmpoc0wr84_.cpp: In function \u2018int main()\u2019:\n/tmp/tmpoc0wr84_.cpp:53:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   53 |     assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                                     std::tuple<int, int>\n/tmp/tmpoc0wr84_.cpp:54:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   54 |     assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to extract all the adjacent coordinates of the given coordinate tuple.\nstd::vector<std::vector<long>> get_coordinates(long test_tup) {\n    std::vector<std::vector<long>> coordinates;\n    long x = test_tup/10;\n    long y = test_tup%10;\n    std::vector<long> temp;\n    temp.push_back(x-1);\n    temp.push_back(y-1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x-1);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x-1);\n    temp.push_back(y+1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y-1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y+1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x+1);\n    temp.push_back(y-1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x+1);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x+1);\n    temp.push_back(y+1);\n    coordinates.push_back(temp);\n    temp.clear();\n    return coordinates;\n}\nint main() {\n    auto candidate = get_coordinates;\n    assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n    assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n    assert(candidate(std::make_tuple(5, 6)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)7}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)7}), (std::vector<long>)std::vector<long>({(long)6, (long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)6, (long)7})})));\n}\n",
      "timestamp": 1666123941,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp8e4zc6sa.cpp:2:\n/tmp/tmp8e4zc6sa.cpp: In function \u2018int main()\u2019:\n/tmp/tmp8e4zc6sa.cpp:45:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   45 |     assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                                     std::tuple<int, int>\n/tmp/tmp8e4zc6sa.cpp:46:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   46 |     assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to extract all the adjacent coordinates of the given coordinate tuple.\nstd::vector<std::vector<long>> get_coordinates(long test_tup) {\n    std::vector<std::vector<long>> coordinates;\n    std::vector<long> temp;\n    long x = test_tup;\n    long y = test_tup;\n    for (long i = 0; i < 8; i++) {\n        temp.push_back(x);\n        temp.push_back(y);\n        coordinates.push_back(temp);\n        temp.clear();\n        x++;\n        y--;\n    }\n    return coordinates;\n}\nint main() {\n    auto candidate = get_coordinates;\n    assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n    assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n    assert(candidate(std::make_tuple(5, 6)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)7}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)7}), (std::vector<long>)std::vector<long>({(long)6, (long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)6, (long)7})})));\n}\n",
      "timestamp": 1666123941,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpgd3u82gh.cpp:2:\n/tmp/tmpgd3u82gh.cpp: In function \u2018int main()\u2019:\n/tmp/tmpgd3u82gh.cpp:21:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   21 |     assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                                     std::tuple<int, int>\n/tmp/tmpgd3u82gh.cpp:22:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   22 |     assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to extract all the adjacent coordinates of the given coordinate tuple.\nstd::vector<std::vector<long>> get_coordinates(long test_tup) {\n    std::vector<std::vector<long>> coordinates;\n    std::vector<long> temp;\n    long x = test_tup / 100;\n    long y = test_tup % 100;\n    temp.push_back(x);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x - 1);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x + 1);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y - 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y + 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    return coordinates;\n}\nint main() {\n    auto candidate = get_coordinates;\n    assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n    assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n    assert(candidate(std::make_tuple(5, 6)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)7}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)7}), (std::vector<long>)std::vector<long>({(long)6, (long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)6, (long)7})})));\n}\n",
      "timestamp": 1665510632,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpdbdpf1tf.cpp:2:\n/tmp/tmpdbdpf1tf.cpp: In function \u2018int main()\u2019:\n/tmp/tmpdbdpf1tf.cpp:33:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   33 |     assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                                     std::tuple<int, int>\n/tmp/tmpdbdpf1tf.cpp:34:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   34 |     assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to extract all the adjacent coordinates of the given coordinate tuple.\nstd::vector<std::vector<long>> get_coordinates(long test_tup) {\n    std::vector<std::vector<long>> coordinates;\n    std::vector<long> temp;\n    long x = test_tup / 100;\n    long y = test_tup % 100;\n    temp.push_back(x);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y + 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y - 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x + 1);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x - 1);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x + 1);\n    temp.push_back(y + 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x + 1);\n    temp.push_back(y - 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x - 1);\n    temp.push_back(y + 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x - 1);\n    temp.push_back(y - 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    return coordinates;\n}\nint main() {\n    auto candidate = get_coordinates;\n    assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n    assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n    assert(candidate(std::make_tuple(5, 6)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)7}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)7}), (std::vector<long>)std::vector<long>({(long)6, (long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)6, (long)7})})));\n}\n",
      "timestamp": 1665510632,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpjprfb000.cpp:2:\n/tmp/tmpjprfb000.cpp: In function \u2018int main()\u2019:\n/tmp/tmpjprfb000.cpp:49:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   49 |     assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                                     std::tuple<int, int>\n/tmp/tmpjprfb000.cpp:50:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   50 |     assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to extract all the adjacent coordinates of the given coordinate tuple.\nstd::vector<std::vector<long>> get_coordinates(long test_tup) {\n    std::vector<std::vector<long>> result;\n    std::vector<long> temp;\n    long x = test_tup / 100;\n    long y = test_tup % 100;\n    temp.push_back(x);\n    temp.push_back(y);\n    result.push_back(temp);\n    temp.clear();\n    temp.push_back(x+1);\n    temp.push_back(y);\n    result.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y+1);\n    result.push_back(temp);\n    temp.clear();\n    temp.push_back(x+1);\n    temp.push_back(y+1);\n    result.push_back(temp);\n    return result;\n}\nint main() {\n    auto candidate = get_coordinates;\n    assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n    assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n    assert(candidate(std::make_tuple(5, 6)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)7}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)7}), (std::vector<long>)std::vector<long>({(long)6, (long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)6, (long)7})})));\n}\n",
      "timestamp": 1666123941,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpd3swpath.cpp:2:\n/tmp/tmpd3swpath.cpp: In function \u2018int main()\u2019:\n/tmp/tmpd3swpath.cpp:28:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   28 |     assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                                     std::tuple<int, int>\n/tmp/tmpd3swpath.cpp:29:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   29 |     assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to extract all the adjacent coordinates of the given coordinate tuple.\nstd::vector<std::vector<long>> get_coordinates(long test_tup) {\n    std::vector<std::vector<long>> coordinates;\n    std::vector<long> tup;\n    long x = test_tup;\n    long y = test_tup;\n    while (x > 0) {\n        tup.push_back(x);\n        tup.push_back(y);\n        coordinates.push_back(tup);\n        tup.clear();\n        x--;\n        y++;\n    }\n    x = test_tup;\n    y = test_tup;\n    while (y > 0) {\n        tup.push_back(x);\n        tup.push_back(y);\n        coordinates.push_back(tup);\n        tup.clear();\n        x++;\n        y--;\n    }\n    return coordinates;\n}\nint main() {\n    auto candidate = get_coordinates;\n    assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n    assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n    assert(candidate(std::make_tuple(5, 6)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)7}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)7}), (std::vector<long>)std::vector<long>({(long)6, (long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)6, (long)7})})));\n}\n",
      "timestamp": 1666123941,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpze1pc41x.cpp:2:\n/tmp/tmpze1pc41x.cpp: In function \u2018int main()\u2019:\n/tmp/tmpze1pc41x.cpp:31:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   31 |     assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                                     std::tuple<int, int>\n/tmp/tmpze1pc41x.cpp:32:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   32 |     assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to extract all the adjacent coordinates of the given coordinate tuple.\nstd::vector<std::vector<long>> get_coordinates(long test_tup) {\n    std::vector<std::vector<long>> coordinates;\n    long x = test_tup / 100;\n    long y = test_tup % 100;\n    std::vector<long> coord1 = {x, y+1};\n    std::vector<long> coord2 = {x, y-1};\n    std::vector<long> coord3 = {x+1, y};\n    std::vector<long> coord4 = {x-1, y};\n    coordinates.push_back(coord1);\n    coordinates.push_back(coord2);\n    coordinates.push_back(coord3);\n    coordinates.push_back(coord4);\n    return coordinates;\n}\nint main() {\n    auto candidate = get_coordinates;\n    assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n    assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n    assert(candidate(std::make_tuple(5, 6)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)7}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)7}), (std::vector<long>)std::vector<long>({(long)6, (long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)6, (long)7})})));\n}\n",
      "timestamp": 1666123941,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpkf54hqte.cpp:2:\n/tmp/tmpkf54hqte.cpp: In function \u2018int main()\u2019:\n/tmp/tmpkf54hqte.cpp:20:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   20 |     assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                                     std::tuple<int, int>\n/tmp/tmpkf54hqte.cpp:21:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   21 |     assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to extract all the adjacent coordinates of the given coordinate tuple.\nstd::vector<std::vector<long>> get_coordinates(long test_tup) {\n    std::vector<std::vector<long>> coordinates;\n    std::vector<long> temp_coordinates;\n    long temp_tup = test_tup;\n    while(temp_tup > 0) {\n        long temp = temp_tup % 10;\n        temp_coordinates.push_back(temp);\n        temp_tup = temp_tup / 10;\n    }\n    std::reverse(temp_coordinates.begin(), temp_coordinates.end());\n    for(long i = 0; i < temp_coordinates.size(); i++) {\n        std::vector<long> temp_coordinate;\n        for(long j = 0; j < temp_coordinates.size(); j++) {\n            if(i != j) {\n                temp_coordinate.push_back(temp_coordinates[j]);\n            }\n        }\n        coordinates.push_back(temp_coordinate);\n    }\n    return coordinates;\n}\nint main() {\n    auto candidate = get_coordinates;\n    assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n    assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n    assert(candidate(std::make_tuple(5, 6)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)7}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)7}), (std::vector<long>)std::vector<long>({(long)6, (long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)6, (long)7})})));\n}\n",
      "timestamp": 1666123941,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpqqui9zlk.cpp:2:\n/tmp/tmpqqui9zlk.cpp: In function \u2018int main()\u2019:\n/tmp/tmpqqui9zlk.cpp:27:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   27 |     assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                                     std::tuple<int, int>\n/tmp/tmpqqui9zlk.cpp:28:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   28 |     assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to extract all the adjacent coordinates of the given coordinate tuple.\nstd::vector<std::vector<long>> get_coordinates(long test_tup) {\n    std::vector<std::vector<long>> coordinates;\n    std::vector<long> tup;\n    long x = test_tup;\n    long y = test_tup;\n    long z = test_tup;\n    while (x >= 0) {\n        tup.push_back(x);\n        tup.push_back(y);\n        tup.push_back(z);\n        coordinates.push_back(tup);\n        tup.clear();\n        x--;\n        y--;\n        z--;\n    }\n    x = test_tup;\n    y = test_tup;\n    z = test_tup;\n    while (x >= 0) {\n        tup.push_back(x);\n        tup.push_back(y);\n        tup.push_back(z);\n        coordinates.push_back(tup);\n        tup.clear();\n        x--;\n        y--;\n        z++;\n    }\n    x = test_tup;\n    y = test_tup;\n    z = test_tup;\n    while (x >= 0) {\n        tup.push_back(x);\n        tup.push_back(y);\n        tup.push_back(z);\n        coordinates.push_back(tup);\n        tup.clear();\n        x--;\n        y++;\n        z--;\n    }\n    x = test_tup;\n    y = test_tup;\n    z = test_tup;\n    while (x >= 0) {\n        tup.push_back(x);\n        tup.push_back(y);\n        tup.push_back(z);\n        coordinates.push_back(tup);\n        tup.clear();\n        x--;\n        y++;\n        z++;\n    }\n    x = test_tup;\n    y = test_tup;\n    z = test_tup;\n    while (x >= 0) {\n        tup.push_back(x);\n        tup.push_back(y);\n        tup.push_back(z\n}\nint main() {\n    auto candidate = get_coordinates;\n    assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n    assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n    assert(candidate(std::make_tuple(5, 6)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)7}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)7}), (std::vector<long>)std::vector<long>({(long)6, (long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)6, (long)7})})));\n}\n",
      "timestamp": 1666123941,
      "stdout": "",
      "stderr": "/tmp/tmpzm4hbjb_.cpp: In function \u2018std::vector<std::vector<long int> > get_coordinates(long int)\u2019:\n/tmp/tmpzm4hbjb_.cpp:65:24: error: expected \u2018)\u2019 before \u2018}\u2019 token\n   65 |         tup.push_back(z\n      |                      ~ ^\n      |                        )\n   66 | }\n      | ~                       \n/tmp/tmpzm4hbjb_.cpp:67:12: error: a function-definition is not allowed here before \u2018{\u2019 token\n   67 | int main() {\n      |            ^\n/tmp/tmpzm4hbjb_.cpp:72:1: error: expected \u2018}\u2019 at end of input\n   72 | }\n      | ^\n/tmp/tmpzm4hbjb_.cpp:4:63: note: to match this \u2018{\u2019\n    4 | std::vector<std::vector<long>> get_coordinates(long test_tup) {\n      |                                                               ^\n/tmp/tmpzm4hbjb_.cpp:72:1: warning: no return statement in function returning non-void [-Wreturn-type]\n   72 | }\n      | ^\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to extract all the adjacent coordinates of the given coordinate tuple.\nstd::vector<std::vector<long>> get_coordinates(long test_tup) {\n    std::vector<std::vector<long>> coordinates;\n    long x = test_tup / 100;\n    long y = test_tup % 100;\n    long x_coordinates[8] = {x - 1, x - 1, x - 1, x, x, x + 1, x + 1, x + 1};\n    long y_coordinates[8] = {y - 1, y, y + 1, y - 1, y + 1, y - 1, y, y + 1};\n    for (int i = 0; i < 8; i++) {\n        std::vector<long> coordinate;\n        coordinate.push_back(x_coordinates[i]);\n        coordinate.push_back(y_coordinates[i]);\n        coordinates.push_back(coordinate);\n    }\n    return coordinates;\n}\nint main() {\n    auto candidate = get_coordinates;\n    assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n    assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n    assert(candidate(std::make_tuple(5, 6)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)7}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)7}), (std::vector<long>)std::vector<long>({(long)6, (long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)6, (long)7})})));\n}\n",
      "timestamp": 1666123929,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpzor16uwm.cpp:2:\n/tmp/tmpzor16uwm.cpp: In function \u2018int main()\u2019:\n/tmp/tmpzor16uwm.cpp:20:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   20 |     assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                                     std::tuple<int, int>\n/tmp/tmpzor16uwm.cpp:21:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   21 |     assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to extract all the adjacent coordinates of the given coordinate tuple.\nstd::vector<std::vector<long>> get_coordinates(long test_tup) {\n    std::vector<std::vector<long>> coordinates;\n    std::vector<long> temp;\n    long x = test_tup;\n    long y = test_tup;\n    while (x > 0) {\n        temp.push_back(x);\n        temp.push_back(y);\n        coordinates.push_back(temp);\n        temp.clear();\n        x--;\n        y++;\n    }\n    x = test_tup;\n    y = test_tup;\n    while (y > 0) {\n        temp.push_back(x);\n        temp.push_back(y);\n        coordinates.push_back(temp);\n        temp.clear();\n        x++;\n        y--;\n    }\n    x = test_tup;\n    y = test_tup;\n    while (x > 0 && y > 0) {\n        temp.push_back(x);\n        temp.push_back(y);\n        coordinates.push_back(temp);\n        temp.clear();\n        x--;\n        y--;\n    }\n    x = test_tup;\n    y = test_tup;\n    while (x > 0 && y < test_tup) {\n        temp.push_back(x);\n        temp.push_back(y);\n        coordinates.push_back(temp);\n        temp.clear();\n        x--;\n        y++;\n    }\n    x = test_tup;\n    y = test_tup;\n    while (x < test_tup && y > 0) {\n        temp.push_back(x);\n        temp.push_back(y);\n        coordinates.push_back(temp);\n        temp.clear();\n        x++;\n        y--;\n    }\n    x = test_tup;\n    y = test_tup;\n    while (x < test_tup && y < test_tup) {\n        temp.push_back(x);\n        temp.push_back(y);\n        coordinates.push_back(temp);\n        temp.clear();\n        x++;\n        y++;\n    }\n    return coordinates;\n}\nint main() {\n    auto candidate = get_coordinates;\n    assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n    assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n    assert(candidate(std::make_tuple(5, 6)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)7}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)7}), (std::vector<long>)std::vector<long>({(long)6, (long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)6, (long)7})})));\n}\n",
      "timestamp": 1666123941,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpvw4ayqda.cpp:2:\n/tmp/tmpvw4ayqda.cpp: In function \u2018int main()\u2019:\n/tmp/tmpvw4ayqda.cpp:71:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   71 |     assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                                     std::tuple<int, int>\n/tmp/tmpvw4ayqda.cpp:72:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   72 |     assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to extract all the adjacent coordinates of the given coordinate tuple.\nstd::vector<std::vector<long>> get_coordinates(long test_tup) {\n    std::vector<std::vector<long>> res;\n    std::vector<long> temp;\n    long x = test_tup / 100;\n    long y = test_tup % 100;\n    for (long i = x - 1; i <= x + 1; i++) {\n        for (long j = y - 1; j <= y + 1; j++) {\n            if (i == x && j == y) {\n                continue;\n            }\n            temp.push_back(i);\n            temp.push_back(j);\n            res.push_back(temp);\n            temp.clear();\n        }\n    }\n    return res;\n}\nint main() {\n    auto candidate = get_coordinates;\n    assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n    assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n    assert(candidate(std::make_tuple(5, 6)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)7}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)7}), (std::vector<long>)std::vector<long>({(long)6, (long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)6, (long)7})})));\n}\n",
      "timestamp": 1666123941,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp1fw6s90e.cpp:2:\n/tmp/tmp1fw6s90e.cpp: In function \u2018int main()\u2019:\n/tmp/tmp1fw6s90e.cpp:24:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   24 |     assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                                     std::tuple<int, int>\n/tmp/tmp1fw6s90e.cpp:25:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   25 |     assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to extract all the adjacent coordinates of the given coordinate tuple.\nstd::vector<std::vector<long>> get_coordinates(long test_tup) {\n    std::vector<std::vector<long>> coordinates;\n    std::vector<long> temp;\n    long x = test_tup / 100;\n    long y = test_tup % 100;\n    temp.push_back(x);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y + 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y - 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x + 1);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x - 1);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x + 1);\n    temp.push_back(y + 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x + 1);\n    temp.push_back(y - 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x - 1);\n    temp.push_back(y + 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x - 1);\n    temp.push_back(y - 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    return coordinates;\n}\nint main() {\n    auto candidate = get_coordinates;\n    assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n    assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n    assert(candidate(std::make_tuple(5, 6)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)7}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)7}), (std::vector<long>)std::vector<long>({(long)6, (long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)6, (long)7})})));\n}\n",
      "timestamp": 1665510632,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpjprfb000.cpp:2:\n/tmp/tmpjprfb000.cpp: In function \u2018int main()\u2019:\n/tmp/tmpjprfb000.cpp:49:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   49 |     assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                                     std::tuple<int, int>\n/tmp/tmpjprfb000.cpp:50:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   50 |     assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to extract all the adjacent coordinates of the given coordinate tuple.\nstd::vector<std::vector<long>> get_coordinates(long test_tup) {\n    std::vector<std::vector<long>> coordinates;\n    std::vector<long> temp;\n    for(long i=0;i<test_tup;i++) {\n        for(long j=0;j<test_tup;j++) {\n            if(i==0 && j==0) {\n                temp.push_back(i);\n                temp.push_back(j+1);\n                coordinates.push_back(temp);\n                temp.clear();\n                temp.push_back(i+1);\n                temp.push_back(j);\n                coordinates.push_back(temp);\n                temp.clear();\n                temp.push_back(i+1);\n                temp.push_back(j+1);\n                coordinates.push_back(temp);\n                temp.clear();\n            }\n            else if(i==0 && j==test_tup-1) {\n                temp.push_back(i);\n                temp.push_back(j-1);\n                coordinates.push_back(temp);\n                temp.clear();\n                temp.push_back(i+1);\n                temp.push_back(j-1);\n                coordinates.push_back(temp);\n                temp.clear();\n                temp.push_back(i+1);\n                temp.push_back(j);\n                coordinates.push_back(temp);\n                temp.clear();\n            }\n            else if(i==test_tup-1 && j==0) {\n                temp.push_back(i-1);\n                temp.push_back(j);\n                coordinates.push_back(temp);\n                temp.clear();\n                temp.push_back(i-1);\n                temp.push_back(j+1);\n                coordinates.push_back(temp);\n                temp.clear();\n                temp.push_back(i);\n                temp.push_back(j+1);\n                coordinates.push_back(temp);\n                temp.clear();\n            }\n            else if(i==test_tup-1 && j==test_tup-1) {\n                temp.push_back(i-1);\n                temp.push_\n}\nint main() {\n    auto candidate = get_coordinates;\n    assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n    assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n    assert(candidate(std::make_tuple(5, 6)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)7}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)7}), (std::vector<long>)std::vector<long>({(long)6, (long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)6, (long)7})})));\n}\n",
      "timestamp": 1666123943,
      "stdout": "",
      "stderr": "/tmp/tmpicqqwap8.cpp: In function \u2018std::vector<std::vector<long int> > get_coordinates(long int)\u2019:\n/tmp/tmpicqqwap8.cpp:53:22: error: \u2018class std::vector<long int>\u2019 has no member named \u2018push_\u2019\n   53 |                 temp.push_\n      |                      ^~~~~\n/tmp/tmpicqqwap8.cpp:55:12: error: a function-definition is not allowed here before \u2018{\u2019 token\n   55 | int main() {\n      |            ^\n/tmp/tmpicqqwap8.cpp:60:1: error: expected \u2018}\u2019 at end of input\n   60 | }\n      | ^\n/tmp/tmpicqqwap8.cpp:8:38: note: to match this \u2018{\u2019\n    8 |         for(long j=0;j<test_tup;j++) {\n      |                                      ^\n/tmp/tmpicqqwap8.cpp:60:1: error: expected \u2018}\u2019 at end of input\n   60 | }\n      | ^\n/tmp/tmpicqqwap8.cpp:7:34: note: to match this \u2018{\u2019\n    7 |     for(long i=0;i<test_tup;i++) {\n      |                                  ^\n/tmp/tmpicqqwap8.cpp:60:1: error: expected \u2018}\u2019 at end of input\n   60 | }\n      | ^\n/tmp/tmpicqqwap8.cpp:4:63: note: to match this \u2018{\u2019\n    4 | std::vector<std::vector<long>> get_coordinates(long test_tup) {\n      |                                                               ^\n/tmp/tmpicqqwap8.cpp:60:1: warning: no return statement in function returning non-void [-Wreturn-type]\n   60 | }\n      | ^\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to extract all the adjacent coordinates of the given coordinate tuple.\nstd::vector<std::vector<long>> get_coordinates(long test_tup) {\n    std::vector<std::vector<long>> coordinates;\n    std::vector<long> temp;\n    long x,y;\n    x = test_tup/100;\n    y = test_tup%100;\n    temp.push_back(x);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x-1);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x+1);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y-1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y+1);\n    coordinates.push_back(temp);\n    temp.clear();\n    return coordinates;\n}\nint main() {\n    auto candidate = get_coordinates;\n    assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n    assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n    assert(candidate(std::make_tuple(5, 6)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)7}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)7}), (std::vector<long>)std::vector<long>({(long)6, (long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)6, (long)7})})));\n}\n",
      "timestamp": 1666123943,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmppy9nfh6y.cpp:2:\n/tmp/tmppy9nfh6y.cpp: In function \u2018int main()\u2019:\n/tmp/tmppy9nfh6y.cpp:34:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   34 |     assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                                     std::tuple<int, int>\n/tmp/tmppy9nfh6y.cpp:35:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   35 |     assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to extract all the adjacent coordinates of the given coordinate tuple.\nstd::vector<std::vector<long>> get_coordinates(long test_tup) {\n    std::vector<std::vector<long>> coordinates;\n    std::vector<long> tup;\n    long x = test_tup;\n    while (x > 0) {\n        tup.push_back(x % 10);\n        x /= 10;\n    }\n    std::reverse(tup.begin(), tup.end());\n    for (long i = 0; i < tup.size(); i++) {\n        for (long j = i + 1; j < tup.size(); j++) {\n            std::vector<long> temp_tup = tup;\n            std::swap(temp_tup[i], temp_tup[j]);\n            coordinates.push_back(temp_tup);\n        }\n    }\n    return coordinates;\n}\nint main() {\n    auto candidate = get_coordinates;\n    assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n    assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n    assert(candidate(std::make_tuple(5, 6)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)7}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)7}), (std::vector<long>)std::vector<long>({(long)6, (long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)6, (long)7})})));\n}\n",
      "timestamp": 1666123943,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpo9mro680.cpp:2:\n/tmp/tmpo9mro680.cpp: In function \u2018int main()\u2019:\n/tmp/tmpo9mro680.cpp:24:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   24 |     assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                                     std::tuple<int, int>\n/tmp/tmpo9mro680.cpp:25:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   25 |     assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to extract all the adjacent coordinates of the given coordinate tuple.\nstd::vector<std::vector<long>> get_coordinates(long test_tup) {\n    std::vector<std::vector<long>> coordinates;\n    std::vector<long> tup;\n    long x = test_tup;\n    long y = test_tup;\n    long z = test_tup;\n    for (long i = 0; i < test_tup; i++) {\n        for (long j = 0; j < test_tup; j++) {\n            for (long k = 0; k < test_tup; k++) {\n                tup.push_back(i);\n                tup.push_back(j);\n                tup.push_back(k);\n                coordinates.push_back(tup);\n                tup.clear();\n            }\n        }\n    }\n    return coordinates;\n}\nint main() {\n    auto candidate = get_coordinates;\n    assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n    assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n    assert(candidate(std::make_tuple(5, 6)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)7}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)7}), (std::vector<long>)std::vector<long>({(long)6, (long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)6, (long)7})})));\n}\n",
      "timestamp": 1666123943,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp9yq1xf58.cpp:2:\n/tmp/tmp9yq1xf58.cpp: In function \u2018int main()\u2019:\n/tmp/tmp9yq1xf58.cpp:25:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   25 |     assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                                     std::tuple<int, int>\n/tmp/tmp9yq1xf58.cpp:26:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   26 |     assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to extract all the adjacent coordinates of the given coordinate tuple.\nstd::vector<std::vector<long>> get_coordinates(long test_tup) {\n    std::vector<std::vector<long>> coordinates;\n    std::vector<long> temp;\n    long x = test_tup / 100;\n    long y = test_tup % 100;\n    temp.push_back(x);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x + 1);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x - 1);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y + 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y - 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    return coordinates;\n}\nint main() {\n    auto candidate = get_coordinates;\n    assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n    assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n    assert(candidate(std::make_tuple(5, 6)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)7}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)7}), (std::vector<long>)std::vector<long>({(long)6, (long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)6, (long)7})})));\n}\n",
      "timestamp": 1665510632,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp6kq6yi1x.cpp:2:\n/tmp/tmp6kq6yi1x.cpp: In function \u2018int main()\u2019:\n/tmp/tmp6kq6yi1x.cpp:33:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   33 |     assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                                     std::tuple<int, int>\n/tmp/tmp6kq6yi1x.cpp:34:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   34 |     assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to extract all the adjacent coordinates of the given coordinate tuple.\nstd::vector<std::vector<long>> get_coordinates(long test_tup) {\n    std::vector<std::vector<long>> coordinates;\n    std::vector<long> temp;\n    long x = test_tup / 100;\n    long y = test_tup % 100;\n    temp.push_back(x);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x + 1);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x - 1);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y + 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y - 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    return coordinates;\n}\nint main() {\n    auto candidate = get_coordinates;\n    assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n    assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n    assert(candidate(std::make_tuple(5, 6)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)7}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)7}), (std::vector<long>)std::vector<long>({(long)6, (long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)6, (long)7})})));\n}\n",
      "timestamp": 1665510632,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp6kq6yi1x.cpp:2:\n/tmp/tmp6kq6yi1x.cpp: In function \u2018int main()\u2019:\n/tmp/tmp6kq6yi1x.cpp:33:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   33 |     assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                                     std::tuple<int, int>\n/tmp/tmp6kq6yi1x.cpp:34:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   34 |     assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to extract all the adjacent coordinates of the given coordinate tuple.\nstd::vector<std::vector<long>> get_coordinates(long test_tup) {\n    std::vector<std::vector<long>> coordinates;\n    std::vector<long> temp;\n    for(long i=0;i<test_tup;i++) {\n        for(long j=0;j<test_tup;j++) {\n            temp.push_back(i);\n            temp.push_back(j);\n            coordinates.push_back(temp);\n            temp.clear();\n        }\n    }\n    return coordinates;\n}\nint main() {\n    auto candidate = get_coordinates;\n    assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n    assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n    assert(candidate(std::make_tuple(5, 6)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)7}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)7}), (std::vector<long>)std::vector<long>({(long)6, (long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)6, (long)7})})));\n}\n",
      "timestamp": 1666123931,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpfps7yqpi.cpp:2:\n/tmp/tmpfps7yqpi.cpp: In function \u2018int main()\u2019:\n/tmp/tmpfps7yqpi.cpp:19:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   19 |     assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                                     std::tuple<int, int>\n/tmp/tmpfps7yqpi.cpp:20:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   20 |     assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to extract all the adjacent coordinates of the given coordinate tuple.\nstd::vector<std::vector<long>> get_coordinates(long test_tup) {\n    std::vector<std::vector<long>> coordinates;\n    std::vector<long> temp;\n    long x = test_tup / 100;\n    long y = test_tup % 100;\n    temp.push_back(x);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x - 1);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x + 1);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y - 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y + 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    return coordinates;\n}\nint main() {\n    auto candidate = get_coordinates;\n    assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n    assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n    assert(candidate(std::make_tuple(5, 6)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)7}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)7}), (std::vector<long>)std::vector<long>({(long)6, (long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)6, (long)7})})));\n}\n",
      "timestamp": 1665510632,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpdbdpf1tf.cpp:2:\n/tmp/tmpdbdpf1tf.cpp: In function \u2018int main()\u2019:\n/tmp/tmpdbdpf1tf.cpp:33:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   33 |     assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                                     std::tuple<int, int>\n/tmp/tmpdbdpf1tf.cpp:34:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   34 |     assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to extract all the adjacent coordinates of the given coordinate tuple.\nstd::vector<std::vector<long>> get_coordinates(long test_tup) {\n    std::vector<std::vector<long>> coordinates;\n    std::vector<long> temp;\n    long x = test_tup / 10;\n    long y = test_tup % 10;\n    temp.push_back(x);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y+1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y-1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x+1);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x+1);\n    temp.push_back(y+1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x+1);\n    temp.push_back(y-1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x-1);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x-1);\n    temp.push_back(y+1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x-1);\n    temp.push_back(y-1);\n    coordinates.push_back(temp);\n    return coordinates;\n}\nint main() {\n    auto candidate = get_coordinates;\n    assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n    assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n    assert(candidate(std::make_tuple(5, 6)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)7}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)7}), (std::vector<long>)std::vector<long>({(long)6, (long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)6, (long)7})})));\n}\n",
      "timestamp": 1666123943,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpdo64bc7m.cpp:2:\n/tmp/tmpdo64bc7m.cpp: In function \u2018int main()\u2019:\n/tmp/tmpdo64bc7m.cpp:48:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   48 |     assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                                     std::tuple<int, int>\n/tmp/tmpdo64bc7m.cpp:49:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   49 |     assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to extract all the adjacent coordinates of the given coordinate tuple.\nstd::vector<std::vector<long>> get_coordinates(long test_tup) {\n    std::vector<std::vector<long>> coordinates;\n    for (long i = 0; i < test_tup; i++) {\n        std::vector<long> temp;\n        for (long j = 0; j < test_tup; j++) {\n            temp.push_back(i * test_tup + j);\n        }\n        coordinates.push_back(temp);\n    }\n    return coordinates;\n}\nint main() {\n    auto candidate = get_coordinates;\n    assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n    assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n    assert(candidate(std::make_tuple(5, 6)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)7}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)7}), (std::vector<long>)std::vector<long>({(long)6, (long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)6, (long)7})})));\n}\n",
      "timestamp": 1666123943,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmps9kvtxfl.cpp:2:\n/tmp/tmps9kvtxfl.cpp: In function \u2018int main()\u2019:\n/tmp/tmps9kvtxfl.cpp:17:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   17 |     assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                                     std::tuple<int, int>\n/tmp/tmps9kvtxfl.cpp:18:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   18 |     assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to extract all the adjacent coordinates of the given coordinate tuple.\nstd::vector<std::vector<long>> get_coordinates(long test_tup) {\n    std::vector<std::vector<long>> result;\n    std::vector<long> temp;\n    long x = test_tup / 100;\n    long y = test_tup % 100;\n    temp.push_back(x);\n    temp.push_back(y);\n    result.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y + 1);\n    result.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y - 1);\n    result.push_back(temp);\n    temp.clear();\n    temp.push_back(x + 1);\n    temp.push_back(y);\n    result.push_back(temp);\n    temp.clear();\n    temp.push_back(x - 1);\n    temp.push_back(y);\n    result.push_back(temp);\n    temp.clear();\n    temp.push_back(x + 1);\n    temp.push_back(y + 1);\n    result.push_back(temp);\n    temp.clear();\n    temp.push_back(x + 1);\n    temp.push_back(y - 1);\n    result.push_back(temp);\n    temp.clear();\n    temp.push_back(x - 1);\n    temp.push_back(y + 1);\n    result.push_back(temp);\n    temp.clear();\n    temp.push_back(x - 1);\n    temp.push_back(y - 1);\n    result.push_back(temp);\n    return result;\n}\nint main() {\n    auto candidate = get_coordinates;\n    assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n    assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n    assert(candidate(std::make_tuple(5, 6)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)7}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)7}), (std::vector<long>)std::vector<long>({(long)6, (long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)6, (long)7})})));\n}\n",
      "timestamp": 1666123943,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpg5s71gpe.cpp:2:\n/tmp/tmpg5s71gpe.cpp: In function \u2018int main()\u2019:\n/tmp/tmpg5s71gpe.cpp:48:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   48 |     assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                                     std::tuple<int, int>\n/tmp/tmpg5s71gpe.cpp:49:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   49 |     assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to extract all the adjacent coordinates of the given coordinate tuple.\nstd::vector<std::vector<long>> get_coordinates(long test_tup) {\n    std::vector<std::vector<long>> coordinates;\n    std::vector<long> temp;\n    long x = test_tup/10;\n    long y = test_tup%10;\n    temp.push_back(x);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x+1);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x-1);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y+1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y-1);\n    coordinates.push_back(temp);\n    temp.clear();\n    return coordinates;\n}\nint main() {\n    auto candidate = get_coordinates;\n    assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n    assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n    assert(candidate(std::make_tuple(5, 6)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)7}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)7}), (std::vector<long>)std::vector<long>({(long)6, (long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)6, (long)7})})));\n}\n",
      "timestamp": 1666123934,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpu_mapzp_.cpp:2:\n/tmp/tmpu_mapzp_.cpp: In function \u2018int main()\u2019:\n/tmp/tmpu_mapzp_.cpp:33:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   33 |     assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                                     std::tuple<int, int>\n/tmp/tmpu_mapzp_.cpp:34:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   34 |     assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to extract all the adjacent coordinates of the given coordinate tuple.\nstd::vector<std::vector<long>> get_coordinates(long test_tup) {\n    std::vector<std::vector<long>> result;\n    long x = test_tup / 100;\n    long y = test_tup % 100;\n    std::vector<long> temp;\n    temp.push_back(x);\n    temp.push_back(y);\n    result.push_back(temp);\n    temp.clear();\n    temp.push_back(x - 1);\n    temp.push_back(y);\n    result.push_back(temp);\n    temp.clear();\n    temp.push_back(x + 1);\n    temp.push_back(y);\n    result.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y - 1);\n    result.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y + 1);\n    result.push_back(temp);\n    return result;\n}\nint main() {\n    auto candidate = get_coordinates;\n    assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n    assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n    assert(candidate(std::make_tuple(5, 6)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)7}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)7}), (std::vector<long>)std::vector<long>({(long)6, (long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)6, (long)7})})));\n}\n",
      "timestamp": 1666123943,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpn9k0hg0_.cpp:2:\n/tmp/tmpn9k0hg0_.cpp: In function \u2018int main()\u2019:\n/tmp/tmpn9k0hg0_.cpp:32:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   32 |     assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                                     std::tuple<int, int>\n/tmp/tmpn9k0hg0_.cpp:33:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   33 |     assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to extract all the adjacent coordinates of the given coordinate tuple.\nstd::vector<std::vector<long>> get_coordinates(long test_tup) {\n    std::vector<std::vector<long>> coordinates;\n    std::vector<long> temp;\n    long x = test_tup / 10;\n    long y = test_tup % 10;\n    temp.push_back(x);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y + 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y - 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x + 1);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x - 1);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x + 1);\n    temp.push_back(y + 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x - 1);\n    temp.push_back(y - 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x + 1);\n    temp.push_back(y - 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x - 1);\n    temp.push_back(y + 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    return coordinates;\n}\nint main() {\n    auto candidate = get_coordinates;\n    assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n    assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n    assert(candidate(std::make_tuple(5, 6)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)7}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)7}), (std::vector<long>)std::vector<long>({(long)6, (long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)6, (long)7})})));\n}\n",
      "timestamp": 1666123943,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpsovma_89.cpp:2:\n/tmp/tmpsovma_89.cpp: In function \u2018int main()\u2019:\n/tmp/tmpsovma_89.cpp:49:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   49 |     assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                                     std::tuple<int, int>\n/tmp/tmpsovma_89.cpp:50:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   50 |     assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to extract all the adjacent coordinates of the given coordinate tuple.\nstd::vector<std::vector<long>> get_coordinates(long test_tup) {\n    std::vector<std::vector<long>> coordinates;\n    std::vector<long> temp;\n    long x = test_tup % 10;\n    long y = test_tup / 10;\n    temp.push_back(x);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x + 1);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x - 1);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y + 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y - 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x + 1);\n    temp.push_back(y + 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x - 1);\n    temp.push_back(y - 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x - 1);\n    temp.push_back(y + 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x + 1);\n    temp.push_back(y - 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    return coordinates;\n}\nint main() {\n    auto candidate = get_coordinates;\n    assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n    assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n    assert(candidate(std::make_tuple(5, 6)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)7}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)7}), (std::vector<long>)std::vector<long>({(long)6, (long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)6, (long)7})})));\n}\n",
      "timestamp": 1666123929,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp94cx78m8.cpp:2:\n/tmp/tmp94cx78m8.cpp: In function \u2018int main()\u2019:\n/tmp/tmp94cx78m8.cpp:49:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   49 |     assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                                     std::tuple<int, int>\n/tmp/tmp94cx78m8.cpp:50:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   50 |     assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to extract all the adjacent coordinates of the given coordinate tuple.\nstd::vector<std::vector<long>> get_coordinates(long test_tup) {\n    std::vector<std::vector<long>> coordinates;\n    std::vector<long> tup;\n    for(long i = 0; i < test_tup; i++) {\n        tup.push_back(i);\n    }\n    for(long i = 0; i < test_tup; i++) {\n        for(long j = 0; j < test_tup; j++) {\n            if(j != i) {\n                std::vector<long> temp = tup;\n                temp.erase(temp.begin() + j);\n                coordinates.push_back(temp);\n            }\n        }\n    }\n    return coordinates;\n}\nint main() {\n    auto candidate = get_coordinates;\n    assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n    assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n    assert(candidate(std::make_tuple(5, 6)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)7}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)7}), (std::vector<long>)std::vector<long>({(long)6, (long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)6, (long)7})})));\n}\n",
      "timestamp": 1666123943,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp2k__zlal.cpp:2:\n/tmp/tmp2k__zlal.cpp: In function \u2018int main()\u2019:\n/tmp/tmp2k__zlal.cpp:23:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   23 |     assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                                     std::tuple<int, int>\n/tmp/tmp2k__zlal.cpp:24:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   24 |     assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to extract all the adjacent coordinates of the given coordinate tuple.\nstd::vector<std::vector<long>> get_coordinates(long test_tup) {\n    std::vector<std::vector<long>> coordinates;\n    std::vector<long> temp;\n    long x = test_tup / 100;\n    long y = test_tup % 100;\n    temp.push_back(x);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x+1);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y+1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x+1);\n    temp.push_back(y+1);\n    coordinates.push_back(temp);\n    return coordinates;\n}\nint main() {\n    auto candidate = get_coordinates;\n    assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n    assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n    assert(candidate(std::make_tuple(5, 6)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)7}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)7}), (std::vector<long>)std::vector<long>({(long)6, (long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)6, (long)7})})));\n}\n",
      "timestamp": 1665510634,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpsm95t5b4.cpp:2:\n/tmp/tmpsm95t5b4.cpp: In function \u2018int main()\u2019:\n/tmp/tmpsm95t5b4.cpp:28:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   28 |     assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                                     std::tuple<int, int>\n/tmp/tmpsm95t5b4.cpp:29:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   29 |     assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to extract all the adjacent coordinates of the given coordinate tuple.\nstd::vector<std::vector<long>> get_coordinates(long test_tup) {\n    std::vector<std::vector<long>> coordinates;\n    long x = test_tup / 100;\n    long y = test_tup % 100;\n    std::vector<long> temp;\n    temp.push_back(x);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y + 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y - 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x + 1);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x - 1);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x + 1);\n    temp.push_back(y + 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x + 1);\n    temp.push_back(y - 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x - 1);\n    temp.push_back(y + 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x - 1);\n    temp.push_back(y - 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    return coordinates;\n}\nint main() {\n    auto candidate = get_coordinates;\n    assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n    assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n    assert(candidate(std::make_tuple(5, 6)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)7}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)7}), (std::vector<long>)std::vector<long>({(long)6, (long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)6, (long)7})})));\n}\n",
      "timestamp": 1666123943,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp1j2lig6a.cpp:2:\n/tmp/tmp1j2lig6a.cpp: In function \u2018int main()\u2019:\n/tmp/tmp1j2lig6a.cpp:49:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   49 |     assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                                     std::tuple<int, int>\n/tmp/tmp1j2lig6a.cpp:50:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   50 |     assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to extract all the adjacent coordinates of the given coordinate tuple.\nstd::vector<std::vector<long>> get_coordinates(long test_tup) {\n    std::vector<std::vector<long>> res;\n    long x = test_tup / 100;\n    long y = test_tup % 100;\n    std::vector<long> temp;\n    temp.push_back(x);\n    temp.push_back(y);\n    res.push_back(temp);\n    temp.clear();\n    temp.push_back(x + 1);\n    temp.push_back(y);\n    res.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y + 1);\n    res.push_back(temp);\n    temp.clear();\n    temp.push_back(x + 1);\n    temp.push_back(y + 1);\n    res.push_back(temp);\n    temp.clear();\n    temp.push_back(x - 1);\n    temp.push_back(y);\n    res.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y - 1);\n    res.push_back(temp);\n    temp.clear();\n    temp.push_back(x - 1);\n    temp.push_back(y - 1);\n    res.push_back(temp);\n    temp.clear();\n    temp.push_back(x + 1);\n    temp.push_back(y - 1);\n    res.push_back(temp);\n    temp.clear();\n    temp.push_back(x - 1);\n    temp.push_back(y + 1);\n    res.push_back(temp);\n    return res;\n}\nint main() {\n    auto candidate = get_coordinates;\n    assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n    assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n    assert(candidate(std::make_tuple(5, 6)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)7}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)7}), (std::vector<long>)std::vector<long>({(long)6, (long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)6, (long)7})})));\n}\n",
      "timestamp": 1666123943,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp10gryfdi.cpp:2:\n/tmp/tmp10gryfdi.cpp: In function \u2018int main()\u2019:\n/tmp/tmp10gryfdi.cpp:48:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   48 |     assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                                     std::tuple<int, int>\n/tmp/tmp10gryfdi.cpp:49:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   49 |     assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to extract all the adjacent coordinates of the given coordinate tuple.\nstd::vector<std::vector<long>> get_coordinates(long test_tup) {\n    std::vector<std::vector<long>> coordinates;\n    std::vector<long> temp;\n    long x = test_tup / 100;\n    long y = test_tup % 100;\n    temp.push_back(x);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x - 1);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x + 1);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y - 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y + 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    return coordinates;\n}\nint main() {\n    auto candidate = get_coordinates;\n    assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n    assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n    assert(candidate(std::make_tuple(5, 6)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)7}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)7}), (std::vector<long>)std::vector<long>({(long)6, (long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)6, (long)7})})));\n}\n",
      "timestamp": 1665510632,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpdbdpf1tf.cpp:2:\n/tmp/tmpdbdpf1tf.cpp: In function \u2018int main()\u2019:\n/tmp/tmpdbdpf1tf.cpp:33:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   33 |     assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                                     std::tuple<int, int>\n/tmp/tmpdbdpf1tf.cpp:34:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   34 |     assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to extract all the adjacent coordinates of the given coordinate tuple.\nstd::vector<std::vector<long>> get_coordinates(long test_tup) {\n    std::vector<std::vector<long>> coordinates;\n    std::vector<long> temp;\n    long x = test_tup / 100;\n    long y = test_tup % 100;\n    temp.push_back(x);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x + 1);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y + 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x + 1);\n    temp.push_back(y + 1);\n    coordinates.push_back(temp);\n    return coordinates;\n}\nint main() {\n    auto candidate = get_coordinates;\n    assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n    assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n    assert(candidate(std::make_tuple(5, 6)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)7}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)7}), (std::vector<long>)std::vector<long>({(long)6, (long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)6, (long)7})})));\n}\n",
      "timestamp": 1665510634,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmprrknkajp.cpp:2:\n/tmp/tmprrknkajp.cpp: In function \u2018int main()\u2019:\n/tmp/tmprrknkajp.cpp:28:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   28 |     assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                                     std::tuple<int, int>\n/tmp/tmprrknkajp.cpp:29:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   29 |     assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to extract all the adjacent coordinates of the given coordinate tuple.\nstd::vector<std::vector<long>> get_coordinates(long test_tup) {\n    std::vector<std::vector<long>> coordinates;\n    std::vector<long> temp;\n    long x = test_tup / 100;\n    long y = test_tup % 100;\n    temp.push_back(x);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x + 1);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y + 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x + 1);\n    temp.push_back(y + 1);\n    coordinates.push_back(temp);\n    return coordinates;\n}\nint main() {\n    auto candidate = get_coordinates;\n    assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n    assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n    assert(candidate(std::make_tuple(5, 6)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)7}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)7}), (std::vector<long>)std::vector<long>({(long)6, (long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)6, (long)7})})));\n}\n",
      "timestamp": 1665510634,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmprrknkajp.cpp:2:\n/tmp/tmprrknkajp.cpp: In function \u2018int main()\u2019:\n/tmp/tmprrknkajp.cpp:28:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   28 |     assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                                     std::tuple<int, int>\n/tmp/tmprrknkajp.cpp:29:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   29 |     assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to extract all the adjacent coordinates of the given coordinate tuple.\nstd::vector<std::vector<long>> get_coordinates(long test_tup) {\n    std::vector<std::vector<long>> coordinates;\n    std::vector<long> temp;\n    long x = test_tup % 10;\n    long y = test_tup / 10;\n    temp.push_back(x);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x + 1);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y + 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x + 1);\n    temp.push_back(y + 1);\n    coordinates.push_back(temp);\n    return coordinates;\n}\nint main() {\n    auto candidate = get_coordinates;\n    assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n    assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n    assert(candidate(std::make_tuple(5, 6)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)7}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)7}), (std::vector<long>)std::vector<long>({(long)6, (long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)6, (long)7})})));\n}\n",
      "timestamp": 1666123943,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpvjz3z2j9.cpp:2:\n/tmp/tmpvjz3z2j9.cpp: In function \u2018int main()\u2019:\n/tmp/tmpvjz3z2j9.cpp:28:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   28 |     assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                                     std::tuple<int, int>\n/tmp/tmpvjz3z2j9.cpp:29:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   29 |     assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to extract all the adjacent coordinates of the given coordinate tuple.\nstd::vector<std::vector<long>> get_coordinates(long test_tup) {\n    std::vector<std::vector<long>> coordinates;\n    long x = test_tup / 100;\n    long y = test_tup % 100;\n    std::vector<long> temp;\n    temp.push_back(x);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x - 1);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x + 1);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y - 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y + 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    return coordinates;\n}\nint main() {\n    auto candidate = get_coordinates;\n    assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n    assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n    assert(candidate(std::make_tuple(5, 6)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)7}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)7}), (std::vector<long>)std::vector<long>({(long)6, (long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)6, (long)7})})));\n}\n",
      "timestamp": 1665510634,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpwgxt9m8f.cpp:2:\n/tmp/tmpwgxt9m8f.cpp: In function \u2018int main()\u2019:\n/tmp/tmpwgxt9m8f.cpp:33:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   33 |     assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                                     std::tuple<int, int>\n/tmp/tmpwgxt9m8f.cpp:34:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   34 |     assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to extract all the adjacent coordinates of the given coordinate tuple.\nstd::vector<std::vector<long>> get_coordinates(long test_tup) {\n    std::vector<std::vector<long>> coordinates;\n    long x = test_tup / 100;\n    long y = test_tup % 100;\n    std::vector<long> temp;\n    temp.push_back(x);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y + 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y - 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x + 1);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x - 1);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x + 1);\n    temp.push_back(y + 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x - 1);\n    temp.push_back(y - 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x + 1);\n    temp.push_back(y - 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x - 1);\n    temp.push_back(y + 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    return coordinates;\n}\nint main() {\n    auto candidate = get_coordinates;\n    assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n    assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n    assert(candidate(std::make_tuple(5, 6)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)7}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)7}), (std::vector<long>)std::vector<long>({(long)6, (long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)6, (long)7})})));\n}\n",
      "timestamp": 1665510632,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpte3mfi3k.cpp:2:\n/tmp/tmpte3mfi3k.cpp: In function \u2018int main()\u2019:\n/tmp/tmpte3mfi3k.cpp:49:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   49 |     assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                                     std::tuple<int, int>\n/tmp/tmpte3mfi3k.cpp:50:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   50 |     assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to extract all the adjacent coordinates of the given coordinate tuple.\nstd::vector<std::vector<long>> get_coordinates(long test_tup) {\n    std::vector<std::vector<long>> coordinates;\n    long x = test_tup;\n    long y = test_tup;\n    long z = test_tup;\n    long w = test_tup;\n    long x_coord = test_tup;\n    long y_coord = test_tup;\n    long z_coord = test_tup;\n    long w_coord = test_tup;\n    while (x != 0) {\n        x_coord = x % 10;\n        x = x / 10;\n    }\n    while (y != 0) {\n        y_coord = y % 10;\n        y = y / 10;\n    }\n    while (z != 0) {\n        z_coord = z % 10;\n        z = z / 10;\n    }\n    while (w != 0) {\n        w_coord = w % 10;\n        w = w / 10;\n    }\n    std::vector<long> coord_1 = {x_coord, y_coord, z_coord, w_coord};\n    std::vector<long> coord_2 = {x_coord, y_coord, z_coord, w_coord + 1};\n    std::vector<long> coord_3 = {x_coord, y_coord, z_coord, w_coord - 1};\n    std::vector<long> coord_4 = {x_coord, y_coord, z_coord + 1, w_coord};\n    std::vector<long> coord_5 = {x_coord, y_coord, z_coord + 1, w_coord + 1};\n    std::vector<long> coord_6 = {x_coord, y_coord, z_coord + 1, w_coord - 1};\n    std::vector<long> coord_7 = {x_coord, y_coord, z_coord - 1, w_coord};\n    std::vector<long> coord_8 = {x_coord, y_coord, z_coord - 1, w_coord + 1};\n    std::vector<long> coord_9 = {x_coord, y_coord, z_coord - 1, w_coord - 1};\n    std::vector\n}\nint main() {\n    auto candidate = get_coordinates;\n    assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n    assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n    assert(candidate(std::make_tuple(5, 6)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)7}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)7}), (std::vector<long>)std::vector<long>({(long)6, (long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)6, (long)7})})));\n}\n",
      "timestamp": 1666123943,
      "stdout": "",
      "stderr": "/tmp/tmp4vn9wwcw.cpp: In function \u2018std::vector<std::vector<long int> > get_coordinates(long int)\u2019:\n/tmp/tmp4vn9wwcw.cpp:40:1: error: expected unqualified-id before \u2018}\u2019 token\n   40 | }\n      | ^\n/tmp/tmp4vn9wwcw.cpp:40:1: warning: no return statement in function returning non-void [-Wreturn-type]\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp4vn9wwcw.cpp:2:\n/tmp/tmp4vn9wwcw.cpp: In function \u2018int main()\u2019:\n/tmp/tmp4vn9wwcw.cpp:43:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   43 |     assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                                     std::tuple<int, int>\n/tmp/tmp4vn9wwcw.cpp:44:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   44 |     assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std:",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to extract all the adjacent coordinates of the given coordinate tuple.\nstd::vector<std::vector<long>> get_coordinates(long test_tup) {\n    std::vector<std::vector<long>> coordinates;\n    std::vector<long> temp;\n    long x = test_tup / 100;\n    long y = test_tup % 100;\n    temp.push_back(x);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y+1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y-1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x+1);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x-1);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x+1);\n    temp.push_back(y+1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x+1);\n    temp.push_back(y-1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x-1);\n    temp.push_back(y+1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x-1);\n    temp.push_back(y-1);\n    coordinates.push_back(temp);\n    temp.clear();\n    return coordinates;\n}\nint main() {\n    auto candidate = get_coordinates;\n    assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n    assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n    assert(candidate(std::make_tuple(5, 6)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)7}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)7}), (std::vector<long>)std::vector<long>({(long)6, (long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)6, (long)7})})));\n}\n",
      "timestamp": 1666123943,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpbny40850.cpp:2:\n/tmp/tmpbny40850.cpp: In function \u2018int main()\u2019:\n/tmp/tmpbny40850.cpp:49:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   49 |     assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                                     std::tuple<int, int>\n/tmp/tmpbny40850.cpp:50:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   50 |     assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to extract all the adjacent coordinates of the given coordinate tuple.\nstd::vector<std::vector<long>> get_coordinates(long test_tup) {\n    std::vector<std::vector<long>> res;\n    std::vector<long> temp;\n    long x = test_tup / 100;\n    long y = test_tup % 100;\n    temp.push_back(x);\n    temp.push_back(y);\n    res.push_back(temp);\n    temp.clear();\n    temp.push_back(x + 1);\n    temp.push_back(y);\n    res.push_back(temp);\n    temp.clear();\n    temp.push_back(x - 1);\n    temp.push_back(y);\n    res.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y + 1);\n    res.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y - 1);\n    res.push_back(temp);\n    return res;\n}\nint main() {\n    auto candidate = get_coordinates;\n    assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n    assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n    assert(candidate(std::make_tuple(5, 6)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)7}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)7}), (std::vector<long>)std::vector<long>({(long)6, (long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)6, (long)7})})));\n}\n",
      "timestamp": 1666123943,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpiwa4xn9t.cpp:2:\n/tmp/tmpiwa4xn9t.cpp: In function \u2018int main()\u2019:\n/tmp/tmpiwa4xn9t.cpp:32:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   32 |     assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                                     std::tuple<int, int>\n/tmp/tmpiwa4xn9t.cpp:33:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   33 |     assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to extract all the adjacent coordinates of the given coordinate tuple.\nstd::vector<std::vector<long>> get_coordinates(long test_tup) {\n    std::vector<std::vector<long>> coordinates;\n    std::vector<long> temp;\n    long x = test_tup / 100;\n    long y = test_tup % 100;\n    temp.push_back(x);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x + 1);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x - 1);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y + 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y - 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    return coordinates;\n}\nint main() {\n    auto candidate = get_coordinates;\n    assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n    assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n    assert(candidate(std::make_tuple(5, 6)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)7}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)7}), (std::vector<long>)std::vector<long>({(long)6, (long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)6, (long)7})})));\n}\n",
      "timestamp": 1665510632,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp6kq6yi1x.cpp:2:\n/tmp/tmp6kq6yi1x.cpp: In function \u2018int main()\u2019:\n/tmp/tmp6kq6yi1x.cpp:33:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   33 |     assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                                     std::tuple<int, int>\n/tmp/tmp6kq6yi1x.cpp:34:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   34 |     assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to extract all the adjacent coordinates of the given coordinate tuple.\nstd::vector<std::vector<long>> get_coordinates(long test_tup) {\n    std::vector<std::vector<long>> coordinates;\n    std::vector<long> temp;\n    long x = test_tup % 10;\n    long y = test_tup / 10;\n    for (long i = x - 1; i <= x + 1; i++) {\n        for (long j = y - 1; j <= y + 1; j++) {\n            if (i == x && j == y) {\n                continue;\n            }\n            temp.push_back(i);\n            temp.push_back(j);\n            coordinates.push_back(temp);\n            temp.clear();\n        }\n    }\n    return coordinates;\n}\nint main() {\n    auto candidate = get_coordinates;\n    assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n    assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n    assert(candidate(std::make_tuple(5, 6)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)7}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)7}), (std::vector<long>)std::vector<long>({(long)6, (long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)6, (long)7})})));\n}\n",
      "timestamp": 1666123943,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpvm9bj6pj.cpp:2:\n/tmp/tmpvm9bj6pj.cpp: In function \u2018int main()\u2019:\n/tmp/tmpvm9bj6pj.cpp:24:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   24 |     assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                                     std::tuple<int, int>\n/tmp/tmpvm9bj6pj.cpp:25:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   25 |     assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to extract all the adjacent coordinates of the given coordinate tuple.\nstd::vector<std::vector<long>> get_coordinates(long test_tup) {\n    std::vector<std::vector<long>> coordinates;\n    for (long i = 0; i < test_tup; i++) {\n        std::vector<long> temp;\n        for (long j = 0; j < 2; j++) {\n            long x;\n            std::cin >> x;\n            temp.push_back(x);\n        }\n        coordinates.push_back(temp);\n    }\n    return coordinates;\n}\nint main() {\n    auto candidate = get_coordinates;\n    assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n    assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n    assert(candidate(std::make_tuple(5, 6)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)7}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)7}), (std::vector<long>)std::vector<long>({(long)6, (long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)6, (long)7})})));\n}\n",
      "timestamp": 1666123943,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmprlp7ot2q.cpp:2:\n/tmp/tmprlp7ot2q.cpp: In function \u2018int main()\u2019:\n/tmp/tmprlp7ot2q.cpp:19:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   19 |     assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                                     std::tuple<int, int>\n/tmp/tmprlp7ot2q.cpp:20:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   20 |     assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to extract all the adjacent coordinates of the given coordinate tuple.\nstd::vector<std::vector<long>> get_coordinates(long test_tup) {\n    std::vector<std::vector<long>> coordinates;\n    std::vector<long> temp;\n    long x = test_tup % 10;\n    long y = test_tup / 10;\n    temp.push_back(x);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x + 1);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x - 1);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y + 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y - 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x + 1);\n    temp.push_back(y + 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x - 1);\n    temp.push_back(y - 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x + 1);\n    temp.push_back(y - 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x - 1);\n    temp.push_back(y + 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    return coordinates;\n}\nint main() {\n    auto candidate = get_coordinates;\n    assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n    assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n    assert(candidate(std::make_tuple(5, 6)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)7}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)7}), (std::vector<long>)std::vector<long>({(long)6, (long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)6, (long)7})})));\n}\n",
      "timestamp": 1666123936,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpzgqebkwm.cpp:2:\n/tmp/tmpzgqebkwm.cpp: In function \u2018int main()\u2019:\n/tmp/tmpzgqebkwm.cpp:49:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   49 |     assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                                     std::tuple<int, int>\n/tmp/tmpzgqebkwm.cpp:50:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   50 |     assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to extract all the adjacent coordinates of the given coordinate tuple.\nstd::vector<std::vector<long>> get_coordinates(long test_tup) {\n    std::vector<std::vector<long>> result;\n    std::vector<long> temp;\n    for (long i = 0; i < test_tup; i++) {\n        for (long j = 0; j < test_tup; j++) {\n            temp.push_back(i);\n            temp.push_back(j);\n            result.push_back(temp);\n            temp.clear();\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = get_coordinates;\n    assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n    assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n    assert(candidate(std::make_tuple(5, 6)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)7}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)7}), (std::vector<long>)std::vector<long>({(long)6, (long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)6, (long)7})})));\n}\n",
      "timestamp": 1666123943,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpwc3m7iuf.cpp:2:\n/tmp/tmpwc3m7iuf.cpp: In function \u2018int main()\u2019:\n/tmp/tmpwc3m7iuf.cpp:19:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   19 |     assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                                     std::tuple<int, int>\n/tmp/tmpwc3m7iuf.cpp:20:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   20 |     assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to extract all the adjacent coordinates of the given coordinate tuple.\nstd::vector<std::vector<long>> get_coordinates(long test_tup) {\n    std::vector<std::vector<long>> coordinates;\n    std::vector<long> temp;\n    long x = test_tup % 10;\n    long y = test_tup / 10;\n    for (long i = x - 1; i <= x + 1; i++) {\n        for (long j = y - 1; j <= y + 1; j++) {\n            if (i != x || j != y) {\n                temp.push_back(i);\n                temp.push_back(j);\n                coordinates.push_back(temp);\n                temp.clear();\n            }\n        }\n    }\n    return coordinates;\n}\nint main() {\n    auto candidate = get_coordinates;\n    assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n    assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n    assert(candidate(std::make_tuple(5, 6)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)7}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)7}), (std::vector<long>)std::vector<long>({(long)6, (long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)6, (long)7})})));\n}\n",
      "timestamp": 1666123943,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp7mcbktsx.cpp:2:\n/tmp/tmp7mcbktsx.cpp: In function \u2018int main()\u2019:\n/tmp/tmp7mcbktsx.cpp:23:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   23 |     assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                                     std::tuple<int, int>\n/tmp/tmp7mcbktsx.cpp:24:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   24 |     assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to extract all the adjacent coordinates of the given coordinate tuple.\nstd::vector<std::vector<long>> get_coordinates(long test_tup) {\n    std::vector<std::vector<long>> coordinates;\n    std::vector<long> temp;\n    long x = test_tup / 100;\n    long y = test_tup % 100;\n    for (long i = x - 1; i <= x + 1; i++) {\n        for (long j = y - 1; j <= y + 1; j++) {\n            if (i == x && j == y) {\n                continue;\n            }\n            temp.push_back(i);\n            temp.push_back(j);\n            coordinates.push_back(temp);\n            temp.clear();\n        }\n    }\n    return coordinates;\n}\nint main() {\n    auto candidate = get_coordinates;\n    assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n    assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n    assert(candidate(std::make_tuple(5, 6)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)7}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)7}), (std::vector<long>)std::vector<long>({(long)6, (long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)6, (long)7})})));\n}\n",
      "timestamp": 1665510634,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp3wesp1fh.cpp:2:\n/tmp/tmp3wesp1fh.cpp: In function \u2018int main()\u2019:\n/tmp/tmp3wesp1fh.cpp:24:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   24 |     assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                                     std::tuple<int, int>\n/tmp/tmp3wesp1fh.cpp:25:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   25 |     assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to extract all the adjacent coordinates of the given coordinate tuple.\nstd::vector<std::vector<long>> get_coordinates(long test_tup) {\n    std::vector<std::vector<long>> coordinates;\n    std::vector<long> temp;\n    long x = test_tup / 100;\n    long y = test_tup % 100;\n    temp.push_back(x);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y + 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y - 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x + 1);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x - 1);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x + 1);\n    temp.push_back(y + 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x + 1);\n    temp.push_back(y - 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x - 1);\n    temp.push_back(y + 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x - 1);\n    temp.push_back(y - 1);\n    coordinates.push_back(temp);\n    return coordinates;\n}\nint main() {\n    auto candidate = get_coordinates;\n    assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n    assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n    assert(candidate(std::make_tuple(5, 6)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)7}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)7}), (std::vector<long>)std::vector<long>({(long)6, (long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)6, (long)7})})));\n}\n",
      "timestamp": 1666123931,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp0yfoagwx.cpp:2:\n/tmp/tmp0yfoagwx.cpp: In function \u2018int main()\u2019:\n/tmp/tmp0yfoagwx.cpp:48:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   48 |     assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                                     std::tuple<int, int>\n/tmp/tmp0yfoagwx.cpp:49:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   49 |     assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to extract all the adjacent coordinates of the given coordinate tuple.\nstd::vector<std::vector<long>> get_coordinates(long test_tup) {\n    std::vector<std::vector<long>> coordinates;\n    for (long i = 0; i < test_tup; i++) {\n        std::vector<long> temp;\n        for (long j = 0; j < 2; j++) {\n            long x;\n            std::cin >> x;\n            temp.push_back(x);\n        }\n        coordinates.push_back(temp);\n    }\n    return coordinates;\n}\nint main() {\n    auto candidate = get_coordinates;\n    assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n    assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n    assert(candidate(std::make_tuple(5, 6)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)7}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)7}), (std::vector<long>)std::vector<long>({(long)6, (long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)6, (long)7})})));\n}\n",
      "timestamp": 1666123943,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmprlp7ot2q.cpp:2:\n/tmp/tmprlp7ot2q.cpp: In function \u2018int main()\u2019:\n/tmp/tmprlp7ot2q.cpp:19:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   19 |     assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                                     std::tuple<int, int>\n/tmp/tmprlp7ot2q.cpp:20:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   20 |     assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to extract all the adjacent coordinates of the given coordinate tuple.\nstd::vector<std::vector<long>> get_coordinates(long test_tup) {\n    std::vector<std::vector<long>> coordinates;\n    std::vector<long> temp;\n    long x = test_tup % 10;\n    long y = test_tup / 10;\n    for (long i = -1; i <= 1; i++) {\n        for (long j = -1; j <= 1; j++) {\n            if (i == 0 && j == 0) {\n                continue;\n            }\n            temp.push_back(10 * (y + i) + (x + j));\n        }\n    }\n    coordinates.push_back(temp);\n    return coordinates;\n}\nint main() {\n    auto candidate = get_coordinates;\n    assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n    assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n    assert(candidate(std::make_tuple(5, 6)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)7}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)7}), (std::vector<long>)std::vector<long>({(long)6, (long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)6, (long)7})})));\n}\n",
      "timestamp": 1666123929,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpfv3cmpg5.cpp:2:\n/tmp/tmpfv3cmpg5.cpp: In function \u2018int main()\u2019:\n/tmp/tmpfv3cmpg5.cpp:22:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   22 |     assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                                     std::tuple<int, int>\n/tmp/tmpfv3cmpg5.cpp:23:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   23 |     assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to extract all the adjacent coordinates of the given coordinate tuple.\nstd::vector<std::vector<long>> get_coordinates(long test_tup) {\n    std::vector<std::vector<long>> coordinates;\n    long x = test_tup / 1000000;\n    long y = test_tup % 1000000;\n    std::vector<long> temp;\n    temp.push_back(x);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x - 1);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x + 1);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y - 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y + 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    return coordinates;\n}\nint main() {\n    auto candidate = get_coordinates;\n    assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n    assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n    assert(candidate(std::make_tuple(5, 6)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)7}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)7}), (std::vector<long>)std::vector<long>({(long)6, (long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)6, (long)7})})));\n}\n",
      "timestamp": 1666123943,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpwmefctw3.cpp:2:\n/tmp/tmpwmefctw3.cpp: In function \u2018int main()\u2019:\n/tmp/tmpwmefctw3.cpp:33:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   33 |     assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                                     std::tuple<int, int>\n/tmp/tmpwmefctw3.cpp:34:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   34 |     assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to extract all the adjacent coordinates of the given coordinate tuple.\nstd::vector<std::vector<long>> get_coordinates(long test_tup) {\n    std::vector<std::vector<long>> coordinates;\n    long x = test_tup / 100;\n    long y = test_tup % 100;\n    std::vector<long> temp;\n    temp.push_back(x);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x + 1);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x - 1);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y + 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y - 1);\n    coordinates.push_back(temp);\n    return coordinates;\n}\nint main() {\n    auto candidate = get_coordinates;\n    assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n    assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n    assert(candidate(std::make_tuple(5, 6)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)7}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)7}), (std::vector<long>)std::vector<long>({(long)6, (long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)6, (long)7})})));\n}\n",
      "timestamp": 1666123932,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpou6atyeg.cpp:2:\n/tmp/tmpou6atyeg.cpp: In function \u2018int main()\u2019:\n/tmp/tmpou6atyeg.cpp:32:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   32 |     assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                                     std::tuple<int, int>\n/tmp/tmpou6atyeg.cpp:33:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   33 |     assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to extract all the adjacent coordinates of the given coordinate tuple.\nstd::vector<std::vector<long>> get_coordinates(long test_tup) {\n    std::vector<std::vector<long>> coordinates;\n    long x = test_tup / 100;\n    long y = test_tup % 100;\n    std::vector<long> temp;\n    temp.push_back(x);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x - 1);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x + 1);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y - 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y + 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    return coordinates;\n}\nint main() {\n    auto candidate = get_coordinates;\n    assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n    assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n    assert(candidate(std::make_tuple(5, 6)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)7}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)7}), (std::vector<long>)std::vector<long>({(long)6, (long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)6, (long)7})})));\n}\n",
      "timestamp": 1665510634,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpwgxt9m8f.cpp:2:\n/tmp/tmpwgxt9m8f.cpp: In function \u2018int main()\u2019:\n/tmp/tmpwgxt9m8f.cpp:33:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   33 |     assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                                     std::tuple<int, int>\n/tmp/tmpwgxt9m8f.cpp:34:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   34 |     assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to extract all the adjacent coordinates of the given coordinate tuple.\nstd::vector<std::vector<long>> get_coordinates(long test_tup) {\n    std::vector<std::vector<long>> coordinates;\n    std::vector<long> temp;\n    long x = test_tup / 100;\n    long y = test_tup % 100;\n    temp.push_back(x);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x - 1);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x + 1);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y - 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y + 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    return coordinates;\n}\nint main() {\n    auto candidate = get_coordinates;\n    assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n    assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n    assert(candidate(std::make_tuple(5, 6)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)7}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)7}), (std::vector<long>)std::vector<long>({(long)6, (long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)6, (long)7})})));\n}\n",
      "timestamp": 1665510632,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpdbdpf1tf.cpp:2:\n/tmp/tmpdbdpf1tf.cpp: In function \u2018int main()\u2019:\n/tmp/tmpdbdpf1tf.cpp:33:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   33 |     assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                                     std::tuple<int, int>\n/tmp/tmpdbdpf1tf.cpp:34:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   34 |     assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to extract all the adjacent coordinates of the given coordinate tuple.\nstd::vector<std::vector<long>> get_coordinates(long test_tup) {\n    std::vector<std::vector<long>> coordinates;\n    std::vector<long> tup;\n    long x = test_tup;\n    long y = test_tup;\n    long z = test_tup;\n    while (x > 0) {\n        tup.push_back(x);\n        tup.push_back(y);\n        tup.push_back(z);\n        coordinates.push_back(tup);\n        tup.clear();\n        x--;\n        y++;\n        z--;\n    }\n    x = test_tup;\n    y = test_tup;\n    z = test_tup;\n    while (y > 0) {\n        tup.push_back(x);\n        tup.push_back(y);\n        tup.push_back(z);\n        coordinates.push_back(tup);\n        tup.clear();\n        x++;\n        y--;\n        z--;\n    }\n    x = test_tup;\n    y = test_tup;\n    z = test_tup;\n    while (z > 0) {\n        tup.push_back(x);\n        tup.push_back(y);\n        tup.push_back(z);\n        coordinates.push_back(tup);\n        tup.clear();\n        x++;\n        y++;\n        z--;\n    }\n    return coordinates;\n}\nint main() {\n    auto candidate = get_coordinates;\n    assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n    assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n    assert(candidate(std::make_tuple(5, 6)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)7}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)7}), (std::vector<long>)std::vector<long>({(long)6, (long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)6, (long)7})})));\n}\n",
      "timestamp": 1666123943,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp50vzf0pa.cpp:2:\n/tmp/tmp50vzf0pa.cpp: In function \u2018int main()\u2019:\n/tmp/tmp50vzf0pa.cpp:50:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   50 |     assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                                     std::tuple<int, int>\n/tmp/tmp50vzf0pa.cpp:51:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   51 |     assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to extract all the adjacent coordinates of the given coordinate tuple.\nstd::vector<std::vector<long>> get_coordinates(long test_tup) {\n    std::vector<std::vector<long>> coordinates;\n    std::vector<long> temp;\n    for (long i = 0; i < test_tup; i++) {\n        for (long j = 0; j < test_tup; j++) {\n            temp.push_back(i);\n            temp.push_back(j);\n            coordinates.push_back(temp);\n            temp.clear();\n        }\n    }\n    return coordinates;\n}\nint main() {\n    auto candidate = get_coordinates;\n    assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n    assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n    assert(candidate(std::make_tuple(5, 6)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)7}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)7}), (std::vector<long>)std::vector<long>({(long)6, (long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)6, (long)7})})));\n}\n",
      "timestamp": 1666123929,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpahhv9txt.cpp:2:\n/tmp/tmpahhv9txt.cpp: In function \u2018int main()\u2019:\n/tmp/tmpahhv9txt.cpp:19:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   19 |     assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                                     std::tuple<int, int>\n/tmp/tmpahhv9txt.cpp:20:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   20 |     assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to extract all the adjacent coordinates of the given coordinate tuple.\nstd::vector<std::vector<long>> get_coordinates(long test_tup) {\n    std::vector<std::vector<long>> coordinates;\n    std::vector<long> temp;\n    long x = test_tup / 100;\n    long y = test_tup % 100;\n    temp.push_back(x);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x + 1);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x - 1);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y + 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y - 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x + 1);\n    temp.push_back(y + 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x - 1);\n    temp.push_back(y - 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x + 1);\n    temp.push_back(y - 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x - 1);\n    temp.push_back(y + 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    return coordinates;\n}\nint main() {\n    auto candidate = get_coordinates;\n    assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n    assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n    assert(candidate(std::make_tuple(5, 6)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)7}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)7}), (std::vector<long>)std::vector<long>({(long)6, (long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)6, (long)7})})));\n}\n",
      "timestamp": 1666123940,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp0lzptspz.cpp:2:\n/tmp/tmp0lzptspz.cpp: In function \u2018int main()\u2019:\n/tmp/tmp0lzptspz.cpp:49:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   49 |     assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                                     std::tuple<int, int>\n/tmp/tmp0lzptspz.cpp:50:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   50 |     assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to extract all the adjacent coordinates of the given coordinate tuple.\nstd::vector<std::vector<long>> get_coordinates(long test_tup) {\n    std::vector<std::vector<long>> coordinates;\n    std::vector<long> temp;\n    long x = test_tup / 100;\n    long y = test_tup % 100;\n    temp.push_back(x);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x + 1);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y + 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x - 1);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y - 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    return coordinates;\n}\nint main() {\n    auto candidate = get_coordinates;\n    assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n    assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n    assert(candidate(std::make_tuple(5, 6)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)7}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)7}), (std::vector<long>)std::vector<long>({(long)6, (long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)6, (long)7})})));\n}\n",
      "timestamp": 1666123936,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmps_8c6ig2.cpp:2:\n/tmp/tmps_8c6ig2.cpp: In function \u2018int main()\u2019:\n/tmp/tmps_8c6ig2.cpp:33:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   33 |     assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                                     std::tuple<int, int>\n/tmp/tmps_8c6ig2.cpp:34:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   34 |     assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to extract all the adjacent coordinates of the given coordinate tuple.\nstd::vector<std::vector<long>> get_coordinates(long test_tup) {\n    std::vector<std::vector<long>> coordinates;\n    long x = test_tup / 100;\n    long y = test_tup % 100;\n    std::vector<long> temp;\n    temp.push_back(x);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x + 1);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x - 1);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y + 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y - 1);\n    coordinates.push_back(temp);\n    return coordinates;\n}\nint main() {\n    auto candidate = get_coordinates;\n    assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n    assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n    assert(candidate(std::make_tuple(5, 6)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)7}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)7}), (std::vector<long>)std::vector<long>({(long)6, (long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)6, (long)7})})));\n}\n",
      "timestamp": 1666123932,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpou6atyeg.cpp:2:\n/tmp/tmpou6atyeg.cpp: In function \u2018int main()\u2019:\n/tmp/tmpou6atyeg.cpp:32:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   32 |     assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                                     std::tuple<int, int>\n/tmp/tmpou6atyeg.cpp:33:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   33 |     assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to extract all the adjacent coordinates of the given coordinate tuple.\nstd::vector<std::vector<long>> get_coordinates(long test_tup) {\n    std::vector<std::vector<long>> coordinates;\n    std::vector<long> temp;\n    for(long i = 0; i < test_tup; i++) {\n        for(long j = 0; j < test_tup; j++) {\n            temp.push_back(i);\n            temp.push_back(j);\n            coordinates.push_back(temp);\n            temp.clear();\n        }\n    }\n    return coordinates;\n}\nint main() {\n    auto candidate = get_coordinates;\n    assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n    assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n    assert(candidate(std::make_tuple(5, 6)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)7}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)7}), (std::vector<long>)std::vector<long>({(long)6, (long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)6, (long)7})})));\n}\n",
      "timestamp": 1666123934,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp9v0593pr.cpp:2:\n/tmp/tmp9v0593pr.cpp: In function \u2018int main()\u2019:\n/tmp/tmp9v0593pr.cpp:19:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   19 |     assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                                     std::tuple<int, int>\n/tmp/tmp9v0593pr.cpp:20:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   20 |     assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to extract all the adjacent coordinates of the given coordinate tuple.\nstd::vector<std::vector<long>> get_coordinates(long test_tup) {\n    std::vector<std::vector<long>> coordinates;\n    std::vector<long> temp;\n    long x = test_tup / 100;\n    long y = test_tup % 100;\n    temp.push_back(x);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x + 1);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y + 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x - 1);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y - 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    return coordinates;\n}\nint main() {\n    auto candidate = get_coordinates;\n    assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n    assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n    assert(candidate(std::make_tuple(5, 6)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)7}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)7}), (std::vector<long>)std::vector<long>({(long)6, (long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)6, (long)7})})));\n}\n",
      "timestamp": 1666123936,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmps_8c6ig2.cpp:2:\n/tmp/tmps_8c6ig2.cpp: In function \u2018int main()\u2019:\n/tmp/tmps_8c6ig2.cpp:33:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   33 |     assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                                     std::tuple<int, int>\n/tmp/tmps_8c6ig2.cpp:34:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   34 |     assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to extract all the adjacent coordinates of the given coordinate tuple.\nstd::vector<std::vector<long>> get_coordinates(long test_tup) {\n    std::vector<std::vector<long>> coordinates;\n    std::vector<long> temp;\n    long x = test_tup / 100;\n    long y = test_tup % 100;\n    temp.push_back(x);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x-1);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x+1);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y-1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y+1);\n    coordinates.push_back(temp);\n    return coordinates;\n}\nint main() {\n    auto candidate = get_coordinates;\n    assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n    assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n    assert(candidate(std::make_tuple(5, 6)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)7}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)7}), (std::vector<long>)std::vector<long>({(long)6, (long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)6, (long)7})})));\n}\n",
      "timestamp": 1666123936,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpwsnvfd92.cpp:2:\n/tmp/tmpwsnvfd92.cpp: In function \u2018int main()\u2019:\n/tmp/tmpwsnvfd92.cpp:32:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   32 |     assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                                     std::tuple<int, int>\n/tmp/tmpwsnvfd92.cpp:33:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   33 |     assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to extract all the adjacent coordinates of the given coordinate tuple.\nstd::vector<std::vector<long>> get_coordinates(long test_tup) {\n    std::vector<std::vector<long>> coordinates;\n    long x = test_tup / 100;\n    long y = test_tup % 100;\n    std::vector<long> temp;\n    temp.push_back(x);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x + 1);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y + 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x - 1);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y - 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    return coordinates;\n}\nint main() {\n    auto candidate = get_coordinates;\n    assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n    assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n    assert(candidate(std::make_tuple(5, 6)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)7}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)7}), (std::vector<long>)std::vector<long>({(long)6, (long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)6, (long)7})})));\n}\n",
      "timestamp": 1666123943,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpur8xzbxc.cpp:2:\n/tmp/tmpur8xzbxc.cpp: In function \u2018int main()\u2019:\n/tmp/tmpur8xzbxc.cpp:33:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   33 |     assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                                     std::tuple<int, int>\n/tmp/tmpur8xzbxc.cpp:34:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   34 |     assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to extract all the adjacent coordinates of the given coordinate tuple.\nstd::vector<std::vector<long>> get_coordinates(long test_tup) {\n    std::vector<std::vector<long>> coordinates;\n    std::vector<long> temp;\n    long x = test_tup;\n    long y = test_tup;\n    for (long i = 0; i < 8; i++) {\n        temp.push_back(x);\n        temp.push_back(y);\n        coordinates.push_back(temp);\n        temp.clear();\n        x++;\n        y++;\n    }\n    return coordinates;\n}\nint main() {\n    auto candidate = get_coordinates;\n    assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n    assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n    assert(candidate(std::make_tuple(5, 6)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)7}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)7}), (std::vector<long>)std::vector<long>({(long)6, (long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)6, (long)7})})));\n}\n",
      "timestamp": 1666123945,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpubjrl1dr.cpp:2:\n/tmp/tmpubjrl1dr.cpp: In function \u2018int main()\u2019:\n/tmp/tmpubjrl1dr.cpp:21:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   21 |     assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                                     std::tuple<int, int>\n/tmp/tmpubjrl1dr.cpp:22:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   22 |     assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to extract all the adjacent coordinates of the given coordinate tuple.\nstd::vector<std::vector<long>> get_coordinates(long test_tup) {\n    std::vector<std::vector<long>> coordinates;\n    std::vector<long> tup;\n    long x = test_tup / 100;\n    long y = test_tup % 100;\n    for (long i = x - 1; i <= x + 1; i++) {\n        for (long j = y - 1; j <= y + 1; j++) {\n            tup.push_back(i);\n            tup.push_back(j);\n            coordinates.push_back(tup);\n            tup.clear();\n        }\n    }\n    return coordinates;\n}\nint main() {\n    auto candidate = get_coordinates;\n    assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n    assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n    assert(candidate(std::make_tuple(5, 6)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)7}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)7}), (std::vector<long>)std::vector<long>({(long)6, (long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)6, (long)7})})));\n}\n",
      "timestamp": 1666123945,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpvqqa4lzo.cpp:2:\n/tmp/tmpvqqa4lzo.cpp: In function \u2018int main()\u2019:\n/tmp/tmpvqqa4lzo.cpp:21:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   21 |     assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                                     std::tuple<int, int>\n/tmp/tmpvqqa4lzo.cpp:22:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   22 |     assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to extract all the adjacent coordinates of the given coordinate tuple.\nstd::vector<std::vector<long>> get_coordinates(long test_tup) {\n    std::vector<std::vector<long>> coordinates;\n    std::vector<long> temp;\n    long x = test_tup / 100;\n    long y = test_tup % 100;\n    temp.push_back(x);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y + 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y - 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x + 1);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x - 1);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x + 1);\n    temp.push_back(y + 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x + 1);\n    temp.push_back(y - 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x - 1);\n    temp.push_back(y + 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x - 1);\n    temp.push_back(y - 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    return coordinates;\n}\nint main() {\n    auto candidate = get_coordinates;\n    assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n    assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n    assert(candidate(std::make_tuple(5, 6)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)7}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)7}), (std::vector<long>)std::vector<long>({(long)6, (long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)6, (long)7})})));\n}\n",
      "timestamp": 1665510632,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpjprfb000.cpp:2:\n/tmp/tmpjprfb000.cpp: In function \u2018int main()\u2019:\n/tmp/tmpjprfb000.cpp:49:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   49 |     assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                                     std::tuple<int, int>\n/tmp/tmpjprfb000.cpp:50:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   50 |     assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to extract all the adjacent coordinates of the given coordinate tuple.\nstd::vector<std::vector<long>> get_coordinates(long test_tup) {\n    std::vector<std::vector<long>> coordinates;\n    std::vector<long> temp;\n    long x = test_tup / 100;\n    long y = test_tup % 100;\n    temp.push_back(x);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y + 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y - 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x + 1);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x - 1);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x + 1);\n    temp.push_back(y + 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x - 1);\n    temp.push_back(y - 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x + 1);\n    temp.push_back(y - 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x - 1);\n    temp.push_back(y + 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    return coordinates;\n}\nint main() {\n    auto candidate = get_coordinates;\n    assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n    assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n    assert(candidate(std::make_tuple(5, 6)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)7}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)7}), (std::vector<long>)std::vector<long>({(long)6, (long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)6, (long)7})})));\n}\n",
      "timestamp": 1666123929,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpe58wgof6.cpp:2:\n/tmp/tmpe58wgof6.cpp: In function \u2018int main()\u2019:\n/tmp/tmpe58wgof6.cpp:49:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   49 |     assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                                     std::tuple<int, int>\n/tmp/tmpe58wgof6.cpp:50:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   50 |     assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to extract all the adjacent coordinates of the given coordinate tuple.\nstd::vector<std::vector<long>> get_coordinates(long test_tup) {\n    std::vector<std::vector<long>> coordinates;\n    std::vector<long> temp;\n    long x = test_tup / 100;\n    long y = test_tup % 100;\n    temp.push_back(x);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x - 1);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x + 1);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y - 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y + 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    return coordinates;\n}\nint main() {\n    auto candidate = get_coordinates;\n    assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n    assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n    assert(candidate(std::make_tuple(5, 6)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)7}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)7}), (std::vector<long>)std::vector<long>({(long)6, (long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)6, (long)7})})));\n}\n",
      "timestamp": 1665510632,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpdbdpf1tf.cpp:2:\n/tmp/tmpdbdpf1tf.cpp: In function \u2018int main()\u2019:\n/tmp/tmpdbdpf1tf.cpp:33:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   33 |     assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                                     std::tuple<int, int>\n/tmp/tmpdbdpf1tf.cpp:34:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   34 |     assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to extract all the adjacent coordinates of the given coordinate tuple.\nstd::vector<std::vector<long>> get_coordinates(long test_tup) {\n    std::vector<std::vector<long>> coordinates;\n    std::vector<long> temp;\n    long x = test_tup / 100;\n    long y = test_tup % 100;\n    temp.push_back(x);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x + 1);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x - 1);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y + 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y - 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x + 1);\n    temp.push_back(y + 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x + 1);\n    temp.push_back(y - 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x - 1);\n    temp.push_back(y + 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x - 1);\n    temp.push_back(y - 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    return coordinates;\n}\nint main() {\n    auto candidate = get_coordinates;\n    assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n    assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n    assert(candidate(std::make_tuple(5, 6)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)7}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)7}), (std::vector<long>)std::vector<long>({(long)6, (long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)6, (long)7})})));\n}\n",
      "timestamp": 1666123936,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpqnp5ro4x.cpp:2:\n/tmp/tmpqnp5ro4x.cpp: In function \u2018int main()\u2019:\n/tmp/tmpqnp5ro4x.cpp:49:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   49 |     assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                                     std::tuple<int, int>\n/tmp/tmpqnp5ro4x.cpp:50:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   50 |     assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to extract all the adjacent coordinates of the given coordinate tuple.\nstd::vector<std::vector<long>> get_coordinates(long test_tup) {\n    std::vector<std::vector<long>> coordinates;\n    long x = test_tup / 100;\n    long y = test_tup % 100;\n    std::vector<long> temp;\n    temp.push_back(x);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y + 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x + 1);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x + 1);\n    temp.push_back(y + 1);\n    coordinates.push_back(temp);\n    return coordinates;\n}\nint main() {\n    auto candidate = get_coordinates;\n    assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n    assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n    assert(candidate(std::make_tuple(5, 6)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)7}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)7}), (std::vector<long>)std::vector<long>({(long)6, (long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)6, (long)7})})));\n}\n",
      "timestamp": 1666123945,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp_0lt8_ne.cpp:2:\n/tmp/tmp_0lt8_ne.cpp: In function \u2018int main()\u2019:\n/tmp/tmp_0lt8_ne.cpp:28:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   28 |     assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                                     std::tuple<int, int>\n/tmp/tmp_0lt8_ne.cpp:29:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   29 |     assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to extract all the adjacent coordinates of the given coordinate tuple.\nstd::vector<std::vector<long>> get_coordinates(long test_tup) {\n    std::vector<std::vector<long>> coordinates;\n    long x = test_tup / 100;\n    long y = test_tup % 100;\n    std::vector<long> temp;\n    temp.push_back(x);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y + 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y - 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x + 1);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x - 1);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x + 1);\n    temp.push_back(y + 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x + 1);\n    temp.push_back(y - 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x - 1);\n    temp.push_back(y + 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x - 1);\n    temp.push_back(y - 1);\n    coordinates.push_back(temp);\n    return coordinates;\n}\nint main() {\n    auto candidate = get_coordinates;\n    assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n    assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n    assert(candidate(std::make_tuple(5, 6)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)7}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)7}), (std::vector<long>)std::vector<long>({(long)6, (long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)6, (long)7})})));\n}\n",
      "timestamp": 1666123936,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp7_dpgmbb.cpp:2:\n/tmp/tmp7_dpgmbb.cpp: In function \u2018int main()\u2019:\n/tmp/tmp7_dpgmbb.cpp:48:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   48 |     assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                                     std::tuple<int, int>\n/tmp/tmp7_dpgmbb.cpp:49:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   49 |     assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to extract all the adjacent coordinates of the given coordinate tuple.\nstd::vector<std::vector<long>> get_coordinates(long test_tup) {\n    std::vector<std::vector<long>> coordinates;\n    std::vector<long> temp;\n    long x = test_tup / 100;\n    long y = test_tup % 100;\n    temp.push_back(x);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x + 1);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y + 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x - 1);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y - 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    return coordinates;\n}\nint main() {\n    auto candidate = get_coordinates;\n    assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n    assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n    assert(candidate(std::make_tuple(5, 6)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)7}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)7}), (std::vector<long>)std::vector<long>({(long)6, (long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)6, (long)7})})));\n}\n",
      "timestamp": 1666123936,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmps_8c6ig2.cpp:2:\n/tmp/tmps_8c6ig2.cpp: In function \u2018int main()\u2019:\n/tmp/tmps_8c6ig2.cpp:33:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   33 |     assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                                     std::tuple<int, int>\n/tmp/tmps_8c6ig2.cpp:34:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   34 |     assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to extract all the adjacent coordinates of the given coordinate tuple.\nstd::vector<std::vector<long>> get_coordinates(long test_tup) {\n    std::vector<std::vector<long>> coordinates;\n    std::vector<long> coord;\n    long x = test_tup;\n    long y = test_tup;\n    long z = test_tup;\n    for (int i = 0; i < test_tup; i++) {\n        coord.push_back(x);\n        coord.push_back(y);\n        coord.push_back(z);\n        coordinates.push_back(coord);\n        coord.clear();\n        x--;\n        y--;\n        z--;\n    }\n    return coordinates;\n}\nint main() {\n    auto candidate = get_coordinates;\n    assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n    assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n    assert(candidate(std::make_tuple(5, 6)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)7}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)7}), (std::vector<long>)std::vector<long>({(long)6, (long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)6, (long)7})})));\n}\n",
      "timestamp": 1666123945,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpg7rrasz6.cpp:2:\n/tmp/tmpg7rrasz6.cpp: In function \u2018int main()\u2019:\n/tmp/tmpg7rrasz6.cpp:24:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   24 |     assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                                     std::tuple<int, int>\n/tmp/tmpg7rrasz6.cpp:25:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   25 |     assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to extract all the adjacent coordinates of the given coordinate tuple.\nstd::vector<std::vector<long>> get_coordinates(long test_tup) {\n    std::vector<std::vector<long>> coordinates;\n    std::vector<long> temp;\n    long x = test_tup / 100;\n    long y = test_tup % 100;\n    temp.push_back(x);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x + 1);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x - 1);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y + 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y - 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    return coordinates;\n}\nint main() {\n    auto candidate = get_coordinates;\n    assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n    assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n    assert(candidate(std::make_tuple(5, 6)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)7}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)7}), (std::vector<long>)std::vector<long>({(long)6, (long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)6, (long)7})})));\n}\n",
      "timestamp": 1665510632,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp6kq6yi1x.cpp:2:\n/tmp/tmp6kq6yi1x.cpp: In function \u2018int main()\u2019:\n/tmp/tmp6kq6yi1x.cpp:33:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   33 |     assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                                     std::tuple<int, int>\n/tmp/tmp6kq6yi1x.cpp:34:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   34 |     assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to extract all the adjacent coordinates of the given coordinate tuple.\nstd::vector<std::vector<long>> get_coordinates(long test_tup) {\n    std::vector<std::vector<long>> coordinates;\n    std::vector<long> temp;\n    long x = test_tup % 10;\n    long y = test_tup / 10;\n    for (long i = -1; i <= 1; i++) {\n        for (long j = -1; j <= 1; j++) {\n            if (i == 0 && j == 0) {\n                continue;\n            }\n            temp.push_back(x + i);\n            temp.push_back(y + j);\n            coordinates.push_back(temp);\n            temp.clear();\n        }\n    }\n    return coordinates;\n}\nint main() {\n    auto candidate = get_coordinates;\n    assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n    assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n    assert(candidate(std::make_tuple(5, 6)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)7}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)7}), (std::vector<long>)std::vector<long>({(long)6, (long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)6, (long)7})})));\n}\n",
      "timestamp": 1666123931,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp6bbm0fvg.cpp:2:\n/tmp/tmp6bbm0fvg.cpp: In function \u2018int main()\u2019:\n/tmp/tmp6bbm0fvg.cpp:24:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   24 |     assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                                     std::tuple<int, int>\n/tmp/tmp6bbm0fvg.cpp:25:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   25 |     assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to extract all the adjacent coordinates of the given coordinate tuple.\nstd::vector<std::vector<long>> get_coordinates(long test_tup) {\n    std::vector<std::vector<long>> coordinates;\n    std::vector<long> temp;\n    long x = test_tup / 100;\n    long y = test_tup % 100;\n    temp.push_back(x);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x + 1);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x - 1);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y + 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y - 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x + 1);\n    temp.push_back(y + 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x - 1);\n    temp.push_back(y - 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x + 1);\n    temp.push_back(y - 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x - 1);\n    temp.push_back(y + 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    return coordinates;\n}\nint main() {\n    auto candidate = get_coordinates;\n    assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n    assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n    assert(candidate(std::make_tuple(5, 6)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)7}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)7}), (std::vector<long>)std::vector<long>({(long)6, (long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)6, (long)7})})));\n}\n",
      "timestamp": 1666123940,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp0lzptspz.cpp:2:\n/tmp/tmp0lzptspz.cpp: In function \u2018int main()\u2019:\n/tmp/tmp0lzptspz.cpp:49:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   49 |     assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                                     std::tuple<int, int>\n/tmp/tmp0lzptspz.cpp:50:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   50 |     assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to extract all the adjacent coordinates of the given coordinate tuple.\nstd::vector<std::vector<long>> get_coordinates(long test_tup) {\n  std::vector<std::vector<long>> coordinates;\n  std::vector<long> temp;\n  long x = test_tup / 100;\n  long y = test_tup % 100;\n  temp.push_back(x);\n  temp.push_back(y);\n  coordinates.push_back(temp);\n  temp.clear();\n  temp.push_back(x - 1);\n  temp.push_back(y);\n  coordinates.push_back(temp);\n  temp.clear();\n  temp.push_back(x + 1);\n  temp.push_back(y);\n  coordinates.push_back(temp);\n  temp.clear();\n  temp.push_back(x);\n  temp.push_back(y - 1);\n  coordinates.push_back(temp);\n  temp.clear();\n  temp.push_back(x);\n  temp.push_back(y + 1);\n  coordinates.push_back(temp);\n  temp.clear();\n  temp.push_back(x - 1);\n  temp.push_back(y - 1);\n  coordinates.push_back(temp);\n  temp.clear();\n  temp.push_back(x + 1);\n  temp.push_back(y + 1);\n  coordinates.push_back(temp);\n  temp.clear();\n  temp.push_back(x + 1);\n  temp.push_back(y - 1);\n  coordinates.push_back(temp);\n  temp.clear();\n  temp.push_back(x - 1);\n  temp.push_back(y + 1);\n  coordinates.push_back(temp);\n  temp.clear();\n  return coordinates;\n}\nint main() {\n    auto candidate = get_coordinates;\n    assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n    assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n    assert(candidate(std::make_tuple(5, 6)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)7}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)7}), (std::vector<long>)std::vector<long>({(long)6, (long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)6, (long)7})})));\n}\n",
      "timestamp": 1666123945,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp0nh8q871.cpp:2:\n/tmp/tmp0nh8q871.cpp: In function \u2018int main()\u2019:\n/tmp/tmp0nh8q871.cpp:49:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   49 |     assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                                     std::tuple<int, int>\n/tmp/tmp0nh8q871.cpp:50:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   50 |     assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to extract all the adjacent coordinates of the given coordinate tuple.\nstd::vector<std::vector<long>> get_coordinates(long test_tup) {\n    std::vector<std::vector<long>> coordinates;\n    std::vector<long> temp;\n    long x = test_tup / 100;\n    long y = test_tup % 100;\n    for (long i = -1; i <= 1; i++) {\n        for (long j = -1; j <= 1; j++) {\n            if (i == 0 && j == 0) {\n                continue;\n            }\n            temp.push_back(x + i);\n            temp.push_back(y + j);\n            coordinates.push_back(temp);\n            temp.clear();\n        }\n    }\n    return coordinates;\n}\nint main() {\n    auto candidate = get_coordinates;\n    assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n    assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n    assert(candidate(std::make_tuple(5, 6)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)7}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)7}), (std::vector<long>)std::vector<long>({(long)6, (long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)6, (long)7})})));\n}\n",
      "timestamp": 1666123945,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpwfq6y1g8.cpp:2:\n/tmp/tmpwfq6y1g8.cpp: In function \u2018int main()\u2019:\n/tmp/tmpwfq6y1g8.cpp:24:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   24 |     assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                                     std::tuple<int, int>\n/tmp/tmpwfq6y1g8.cpp:25:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   25 |     assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to extract all the adjacent coordinates of the given coordinate tuple.\nstd::vector<std::vector<long>> get_coordinates(long test_tup) {\n    std::vector<std::vector<long>> coordinates;\n    std::vector<long> tup;\n    long x = test_tup;\n    long y = test_tup;\n    for (long i = 0; i < test_tup; i++) {\n        tup = {x, y};\n        coordinates.push_back(tup);\n        x--;\n        y--;\n    }\n    return coordinates;\n}\nint main() {\n    auto candidate = get_coordinates;\n    assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n    assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n    assert(candidate(std::make_tuple(5, 6)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)7}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)7}), (std::vector<long>)std::vector<long>({(long)6, (long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)6, (long)7})})));\n}\n",
      "timestamp": 1666123945,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp42uh8zbe.cpp:2:\n/tmp/tmp42uh8zbe.cpp: In function \u2018int main()\u2019:\n/tmp/tmp42uh8zbe.cpp:19:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   19 |     assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                                     std::tuple<int, int>\n/tmp/tmp42uh8zbe.cpp:20:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   20 |     assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to extract all the adjacent coordinates of the given coordinate tuple.\nstd::vector<std::vector<long>> get_coordinates(long test_tup) {\n    std::vector<std::vector<long>> coordinates;\n    std::vector<long> temp;\n    long x = test_tup / 100;\n    long y = test_tup % 100;\n    temp.push_back(x);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x + 1);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y + 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x + 1);\n    temp.push_back(y + 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    return coordinates;\n}\nint main() {\n    auto candidate = get_coordinates;\n    assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n    assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n    assert(candidate(std::make_tuple(5, 6)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)7}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)7}), (std::vector<long>)std::vector<long>({(long)6, (long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)6, (long)7})})));\n}\n",
      "timestamp": 1666123931,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmphf2h83z6.cpp:2:\n/tmp/tmphf2h83z6.cpp: In function \u2018int main()\u2019:\n/tmp/tmphf2h83z6.cpp:29:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   29 |     assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                                     std::tuple<int, int>\n/tmp/tmphf2h83z6.cpp:30:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   30 |     assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to extract all the adjacent coordinates of the given coordinate tuple.\nstd::vector<std::vector<long>> get_coordinates(long test_tup) {\n    std::vector<std::vector<long>> coordinates;\n    std::vector<long> temp;\n    long x = test_tup % 10;\n    long y = test_tup / 10;\n    temp.push_back(x);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y+1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y-1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x+1);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x-1);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x+1);\n    temp.push_back(y+1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x-1);\n    temp.push_back(y-1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x+1);\n    temp.push_back(y-1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x-1);\n    temp.push_back(y+1);\n    coordinates.push_back(temp);\n    temp.clear();\n    return coordinates;\n}\nint main() {\n    auto candidate = get_coordinates;\n    assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n    assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n    assert(candidate(std::make_tuple(5, 6)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)7}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)7}), (std::vector<long>)std::vector<long>({(long)6, (long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)6, (long)7})})));\n}\n",
      "timestamp": 1666123945,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp86pnedqp.cpp:2:\n/tmp/tmp86pnedqp.cpp: In function \u2018int main()\u2019:\n/tmp/tmp86pnedqp.cpp:49:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   49 |     assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                                     std::tuple<int, int>\n/tmp/tmp86pnedqp.cpp:50:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   50 |     assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to extract all the adjacent coordinates of the given coordinate tuple.\nstd::vector<std::vector<long>> get_coordinates(long test_tup) {\n    std::vector<std::vector<long>> coordinates;\n    std::vector<long> temp;\n    long x = test_tup / 1000000;\n    long y = test_tup % 1000000;\n    temp.push_back(x);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y + 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y - 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x + 1);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x - 1);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x + 1);\n    temp.push_back(y + 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x + 1);\n    temp.push_back(y - 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x - 1);\n    temp.push_back(y + 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x - 1);\n    temp.push_back(y - 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    return coordinates;\n}\nint main() {\n    auto candidate = get_coordinates;\n    assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n    assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n    assert(candidate(std::make_tuple(5, 6)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)7}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)7}), (std::vector<long>)std::vector<long>({(long)6, (long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)6, (long)7})})));\n}\n",
      "timestamp": 1666123945,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp9aoa75_6.cpp:2:\n/tmp/tmp9aoa75_6.cpp: In function \u2018int main()\u2019:\n/tmp/tmp9aoa75_6.cpp:49:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   49 |     assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                                     std::tuple<int, int>\n/tmp/tmp9aoa75_6.cpp:50:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   50 |     assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to extract all the adjacent coordinates of the given coordinate tuple.\nstd::vector<std::vector<long>> get_coordinates(long test_tup) {\n    std::vector<std::vector<long>> coordinates;\n    std::vector<long> temp;\n    long x = test_tup / 100;\n    long y = test_tup % 100;\n    temp.push_back(x);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y + 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y - 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x + 1);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x - 1);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x + 1);\n    temp.push_back(y + 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x + 1);\n    temp.push_back(y - 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x - 1);\n    temp.push_back(y + 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x - 1);\n    temp.push_back(y - 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    return coordinates;\n}\nint main() {\n    auto candidate = get_coordinates;\n    assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n    assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n    assert(candidate(std::make_tuple(5, 6)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)7}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)7}), (std::vector<long>)std::vector<long>({(long)6, (long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)6, (long)7})})));\n}\n",
      "timestamp": 1665510632,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpjprfb000.cpp:2:\n/tmp/tmpjprfb000.cpp: In function \u2018int main()\u2019:\n/tmp/tmpjprfb000.cpp:49:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   49 |     assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                                     std::tuple<int, int>\n/tmp/tmpjprfb000.cpp:50:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   50 |     assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to extract all the adjacent coordinates of the given coordinate tuple.\nstd::vector<std::vector<long>> get_coordinates(long test_tup) {\n    std::vector<std::vector<long>> coordinates;\n    for (long i = 0; i < test_tup; i++) {\n        std::vector<long> coordinate;\n        for (long j = 0; j < test_tup; j++) {\n            coordinate.push_back(j);\n        }\n        coordinates.push_back(coordinate);\n    }\n    return coordinates;\n}\nint main() {\n    auto candidate = get_coordinates;\n    assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n    assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n    assert(candidate(std::make_tuple(5, 6)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)7}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)7}), (std::vector<long>)std::vector<long>({(long)6, (long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)6, (long)7})})));\n}\n",
      "timestamp": 1666123945,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpf7m1476q.cpp:2:\n/tmp/tmpf7m1476q.cpp: In function \u2018int main()\u2019:\n/tmp/tmpf7m1476q.cpp:17:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   17 |     assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                                     std::tuple<int, int>\n/tmp/tmpf7m1476q.cpp:18:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   18 |     assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to extract all the adjacent coordinates of the given coordinate tuple.\nstd::vector<std::vector<long>> get_coordinates(long test_tup) {\n    std::vector<std::vector<long>> coordinates;\n    std::vector<long> temp;\n    for(long i = 0; i < test_tup; i++) {\n        for(long j = 0; j < test_tup; j++) {\n            temp.push_back(i);\n            temp.push_back(j);\n            coordinates.push_back(temp);\n            temp.clear();\n        }\n    }\n    return coordinates;\n}\nint main() {\n    auto candidate = get_coordinates;\n    assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n    assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n    assert(candidate(std::make_tuple(5, 6)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)7}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)7}), (std::vector<long>)std::vector<long>({(long)6, (long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)6, (long)7})})));\n}\n",
      "timestamp": 1666123934,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp9v0593pr.cpp:2:\n/tmp/tmp9v0593pr.cpp: In function \u2018int main()\u2019:\n/tmp/tmp9v0593pr.cpp:19:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   19 |     assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                                     std::tuple<int, int>\n/tmp/tmp9v0593pr.cpp:20:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   20 |     assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to extract all the adjacent coordinates of the given coordinate tuple.\nstd::vector<std::vector<long>> get_coordinates(long test_tup) {\n    std::vector<std::vector<long>> coordinates;\n    long x = test_tup / 100;\n    long y = test_tup % 100;\n    std::vector<long> temp;\n    temp.push_back(x);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y - 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y + 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x - 1);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x + 1);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x - 1);\n    temp.push_back(y - 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x + 1);\n    temp.push_back(y + 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x + 1);\n    temp.push_back(y - 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x - 1);\n    temp.push_back(y + 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    return coordinates;\n}\nint main() {\n    auto candidate = get_coordinates;\n    assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n    assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n    assert(candidate(std::make_tuple(5, 6)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)7}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)7}), (std::vector<long>)std::vector<long>({(long)6, (long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)6, (long)7})})));\n}\n",
      "timestamp": 1666123945,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpn54qkhpc.cpp:2:\n/tmp/tmpn54qkhpc.cpp: In function \u2018int main()\u2019:\n/tmp/tmpn54qkhpc.cpp:49:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   49 |     assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                                     std::tuple<int, int>\n/tmp/tmpn54qkhpc.cpp:50:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   50 |     assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to extract all the adjacent coordinates of the given coordinate tuple.\nstd::vector<std::vector<long>> get_coordinates(long test_tup) {\n    std::vector<std::vector<long>> result;\n    long x = test_tup / 100;\n    long y = test_tup % 100;\n    std::vector<long> temp;\n    temp.push_back(x - 1);\n    temp.push_back(y);\n    result.push_back(temp);\n    temp.clear();\n    temp.push_back(x + 1);\n    temp.push_back(y);\n    result.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y - 1);\n    result.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y + 1);\n    result.push_back(temp);\n    return result;\n}\nint main() {\n    auto candidate = get_coordinates;\n    assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n    assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n    assert(candidate(std::make_tuple(5, 6)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)7}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)7}), (std::vector<long>)std::vector<long>({(long)6, (long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)6, (long)7})})));\n}\n",
      "timestamp": 1666123945,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp8lzzjakt.cpp:2:\n/tmp/tmp8lzzjakt.cpp: In function \u2018int main()\u2019:\n/tmp/tmp8lzzjakt.cpp:28:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   28 |     assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                                     std::tuple<int, int>\n/tmp/tmp8lzzjakt.cpp:29:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   29 |     assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to extract all the adjacent coordinates of the given coordinate tuple.\nstd::vector<std::vector<long>> get_coordinates(long test_tup) {\n    std::vector<std::vector<long>> coordinates;\n    std::vector<long> temp;\n    long x = test_tup / 100;\n    long y = test_tup % 100;\n    temp.push_back(x);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x + 1);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y + 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x - 1);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y - 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x + 1);\n    temp.push_back(y + 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x - 1);\n    temp.push_back(y - 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x + 1);\n    temp.push_back(y - 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x - 1);\n    temp.push_back(y + 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    return coordinates;\n}\nint main() {\n    auto candidate = get_coordinates;\n    assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n    assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n    assert(candidate(std::make_tuple(5, 6)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)7}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)7}), (std::vector<long>)std::vector<long>({(long)6, (long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)6, (long)7})})));\n}\n",
      "timestamp": 1666123945,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpsy7_yj73.cpp:2:\n/tmp/tmpsy7_yj73.cpp: In function \u2018int main()\u2019:\n/tmp/tmpsy7_yj73.cpp:49:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   49 |     assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                                     std::tuple<int, int>\n/tmp/tmpsy7_yj73.cpp:50:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   50 |     assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to extract all the adjacent coordinates of the given coordinate tuple.\nstd::vector<std::vector<long>> get_coordinates(long test_tup) {\n    std::vector<std::vector<long>> coordinates;\n    std::vector<long> temp_coordinates;\n    long x = test_tup / 100;\n    long y = test_tup % 100;\n    temp_coordinates.push_back(x);\n    temp_coordinates.push_back(y);\n    coordinates.push_back(temp_coordinates);\n    temp_coordinates.clear();\n    temp_coordinates.push_back(x + 1);\n    temp_coordinates.push_back(y);\n    coordinates.push_back(temp_coordinates);\n    temp_coordinates.clear();\n    temp_coordinates.push_back(x - 1);\n    temp_coordinates.push_back(y);\n    coordinates.push_back(temp_coordinates);\n    temp_coordinates.clear();\n    temp_coordinates.push_back(x);\n    temp_coordinates.push_back(y + 1);\n    coordinates.push_back(temp_coordinates);\n    temp_coordinates.clear();\n    temp_coordinates.push_back(x);\n    temp_coordinates.push_back(y - 1);\n    coordinates.push_back(temp_coordinates);\n    temp_coordinates.clear();\n    return coordinates;\n}\nint main() {\n    auto candidate = get_coordinates;\n    assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n    assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n    assert(candidate(std::make_tuple(5, 6)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)7}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)7}), (std::vector<long>)std::vector<long>({(long)6, (long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)6, (long)7})})));\n}\n",
      "timestamp": 1666123945,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpf0grr2dd.cpp:2:\n/tmp/tmpf0grr2dd.cpp: In function \u2018int main()\u2019:\n/tmp/tmpf0grr2dd.cpp:33:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   33 |     assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                                     std::tuple<int, int>\n/tmp/tmpf0grr2dd.cpp:34:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   34 |     assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to extract all the adjacent coordinates of the given coordinate tuple.\nstd::vector<std::vector<long>> get_coordinates(long test_tup) {\n    std::vector<std::vector<long>> coordinates;\n    std::vector<long> temp;\n    long x = test_tup / 100;\n    long y = test_tup % 100;\n    temp.push_back(x);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x + 1);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y + 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x - 1);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y - 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    return coordinates;\n}\nint main() {\n    auto candidate = get_coordinates;\n    assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n    assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n    assert(candidate(std::make_tuple(5, 6)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)7}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)7}), (std::vector<long>)std::vector<long>({(long)6, (long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)6, (long)7})})));\n}\n",
      "timestamp": 1666123936,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmps_8c6ig2.cpp:2:\n/tmp/tmps_8c6ig2.cpp: In function \u2018int main()\u2019:\n/tmp/tmps_8c6ig2.cpp:33:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   33 |     assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                                     std::tuple<int, int>\n/tmp/tmps_8c6ig2.cpp:34:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   34 |     assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to extract all the adjacent coordinates of the given coordinate tuple.\nstd::vector<std::vector<long>> get_coordinates(long test_tup) {\n    std::vector<std::vector<long>> coordinates;\n    std::vector<long> temp_coordinates;\n    long temp_tup = test_tup;\n    long temp_x = 0;\n    long temp_y = 0;\n    while(temp_tup > 0) {\n        temp_x = temp_tup % 10;\n        temp_tup = temp_tup / 10;\n        temp_y = temp_tup % 10;\n        temp_tup = temp_tup / 10;\n        temp_coordinates.push_back(temp_x);\n        temp_coordinates.push_back(temp_y);\n        coordinates.push_back(temp_coordinates);\n        temp_coordinates.clear();\n    }\n    return coordinates;\n}\nint main() {\n    auto candidate = get_coordinates;\n    assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n    assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n    assert(candidate(std::make_tuple(5, 6)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)7}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)7}), (std::vector<long>)std::vector<long>({(long)6, (long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)6, (long)7})})));\n}\n",
      "timestamp": 1666123945,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpl8ijnhxa.cpp:2:\n/tmp/tmpl8ijnhxa.cpp: In function \u2018int main()\u2019:\n/tmp/tmpl8ijnhxa.cpp:24:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   24 |     assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                                     std::tuple<int, int>\n/tmp/tmpl8ijnhxa.cpp:25:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   25 |     assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to extract all the adjacent coordinates of the given coordinate tuple.\nstd::vector<std::vector<long>> get_coordinates(long test_tup) {\n    std::vector<std::vector<long>> coordinates;\n    std::vector<long> temp;\n    long x = test_tup % 10;\n    long y = test_tup / 10;\n    temp.push_back(x);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x - 1);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x + 1);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y - 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y + 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    return coordinates;\n}\nint main() {\n    auto candidate = get_coordinates;\n    assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n    assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n    assert(candidate(std::make_tuple(5, 6)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)7}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)7}), (std::vector<long>)std::vector<long>({(long)6, (long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)6, (long)7})})));\n}\n",
      "timestamp": 1666123929,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpjeikofqv.cpp:2:\n/tmp/tmpjeikofqv.cpp: In function \u2018int main()\u2019:\n/tmp/tmpjeikofqv.cpp:33:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   33 |     assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                                     std::tuple<int, int>\n/tmp/tmpjeikofqv.cpp:34:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   34 |     assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to extract all the adjacent coordinates of the given coordinate tuple.\nstd::vector<std::vector<long>> get_coordinates(long test_tup) {\n    std::vector<std::vector<long>> coordinates;\n    long x = test_tup / 100;\n    long y = test_tup % 100;\n    std::vector<long> temp;\n    temp.push_back(x);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y + 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x + 1);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x + 1);\n    temp.push_back(y + 1);\n    coordinates.push_back(temp);\n    return coordinates;\n}\nint main() {\n    auto candidate = get_coordinates;\n    assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n    assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n    assert(candidate(std::make_tuple(5, 6)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)7}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)7}), (std::vector<long>)std::vector<long>({(long)6, (long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)6, (long)7})})));\n}\n",
      "timestamp": 1666123945,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp_0lt8_ne.cpp:2:\n/tmp/tmp_0lt8_ne.cpp: In function \u2018int main()\u2019:\n/tmp/tmp_0lt8_ne.cpp:28:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   28 |     assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                                     std::tuple<int, int>\n/tmp/tmp_0lt8_ne.cpp:29:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   29 |     assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to extract all the adjacent coordinates of the given coordinate tuple.\nstd::vector<std::vector<long>> get_coordinates(long test_tup) {\n    std::vector<std::vector<long>> coordinates;\n    std::vector<long> temp;\n    temp.push_back(test_tup);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(test_tup + 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(test_tup - 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(test_tup + 2);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(test_tup - 2);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(test_tup + 3);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(test_tup - 3);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(test_tup + 4);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(test_tup - 4);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(test_tup + 5);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(test_tup - 5);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(test_tup + 6);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(test_tup - 6);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(test_tup + 7);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(test_tup - 7);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(test_tup + 8);\n    coordinates.push_back(temp);\n}\nint main() {\n    auto candidate = get_coordinates;\n    assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n    assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n    assert(candidate(std::make_tuple(5, 6)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)7}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)7}), (std::vector<long>)std::vector<long>({(long)6, (long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)6, (long)7})})));\n}\n",
      "timestamp": 1665510634,
      "stdout": "",
      "stderr": "/tmp/tmp3hbgc24i.cpp: In function \u2018std::vector<std::vector<long int> > get_coordinates(long int)\u2019:\n/tmp/tmp3hbgc24i.cpp:54:1: warning: no return statement in function returning non-void [-Wreturn-type]\n   54 | }\n      | ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp3hbgc24i.cpp:2:\n/tmp/tmp3hbgc24i.cpp: In function \u2018int main()\u2019:\n/tmp/tmp3hbgc24i.cpp:57:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   57 |     assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                                     std::tuple<int, int>\n/tmp/tmp3hbgc24i.cpp:58:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   58 |     assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::ve",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to extract all the adjacent coordinates of the given coordinate tuple.\nstd::vector<std::vector<long>> get_coordinates(long test_tup) {\n    std::vector<std::vector<long>> coordinates;\n    std::vector<long> temp;\n    long x = test_tup / 100;\n    long y = test_tup % 100;\n    temp.push_back(x);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x + 1);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y + 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x + 1);\n    temp.push_back(y + 1);\n    coordinates.push_back(temp);\n    return coordinates;\n}\nint main() {\n    auto candidate = get_coordinates;\n    assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n    assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n    assert(candidate(std::make_tuple(5, 6)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)7}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)7}), (std::vector<long>)std::vector<long>({(long)6, (long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)6, (long)7})})));\n}\n",
      "timestamp": 1665510634,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmprrknkajp.cpp:2:\n/tmp/tmprrknkajp.cpp: In function \u2018int main()\u2019:\n/tmp/tmprrknkajp.cpp:28:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   28 |     assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                                     std::tuple<int, int>\n/tmp/tmprrknkajp.cpp:29:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   29 |     assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to extract all the adjacent coordinates of the given coordinate tuple.\nstd::vector<std::vector<long>> get_coordinates(long test_tup) {\n    std::vector<std::vector<long>> coordinates;\n    long x = test_tup/10000;\n    long y = test_tup%10000;\n    std::vector<long> temp;\n    temp.push_back(x);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y+1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y-1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x+1);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x-1);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x+1);\n    temp.push_back(y+1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x-1);\n    temp.push_back(y-1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x+1);\n    temp.push_back(y-1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x-1);\n    temp.push_back(y+1);\n    coordinates.push_back(temp);\n    return coordinates;\n}\nint main() {\n    auto candidate = get_coordinates;\n    assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n    assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n    assert(candidate(std::make_tuple(5, 6)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)7}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)7}), (std::vector<long>)std::vector<long>({(long)6, (long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)6, (long)7})})));\n}\n",
      "timestamp": 1666123945,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpmb4blgss.cpp:2:\n/tmp/tmpmb4blgss.cpp: In function \u2018int main()\u2019:\n/tmp/tmpmb4blgss.cpp:48:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   48 |     assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                                     std::tuple<int, int>\n/tmp/tmpmb4blgss.cpp:49:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   49 |     assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to extract all the adjacent coordinates of the given coordinate tuple.\nstd::vector<std::vector<long>> get_coordinates(long test_tup) {\n    std::vector<std::vector<long>> coordinates;\n    std::vector<long> temp;\n    long x = test_tup / 100;\n    long y = test_tup % 100;\n    temp.push_back(x);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x - 1);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x + 1);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y - 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y + 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    return coordinates;\n}\nint main() {\n    auto candidate = get_coordinates;\n    assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n    assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n    assert(candidate(std::make_tuple(5, 6)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)7}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)7}), (std::vector<long>)std::vector<long>({(long)6, (long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)6, (long)7})})));\n}\n",
      "timestamp": 1665510632,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpdbdpf1tf.cpp:2:\n/tmp/tmpdbdpf1tf.cpp: In function \u2018int main()\u2019:\n/tmp/tmpdbdpf1tf.cpp:33:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   33 |     assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                                     std::tuple<int, int>\n/tmp/tmpdbdpf1tf.cpp:34:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   34 |     assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to extract all the adjacent coordinates of the given coordinate tuple.\nstd::vector<std::vector<long>> get_coordinates(long test_tup) {\n    std::vector<std::vector<long>> coordinates;\n    std::vector<long> temp;\n    long x = test_tup % 10;\n    long y = test_tup / 10;\n    temp.push_back(x);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x - 1);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x + 1);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y - 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y + 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    return coordinates;\n}\nint main() {\n    auto candidate = get_coordinates;\n    assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n    assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n    assert(candidate(std::make_tuple(5, 6)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)7}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)7}), (std::vector<long>)std::vector<long>({(long)6, (long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)6, (long)7})})));\n}\n",
      "timestamp": 1666123929,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpjeikofqv.cpp:2:\n/tmp/tmpjeikofqv.cpp: In function \u2018int main()\u2019:\n/tmp/tmpjeikofqv.cpp:33:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   33 |     assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                                     std::tuple<int, int>\n/tmp/tmpjeikofqv.cpp:34:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   34 |     assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to extract all the adjacent coordinates of the given coordinate tuple.\nstd::vector<std::vector<long>> get_coordinates(long test_tup) {\n    std::vector<std::vector<long>> coordinates;\n    std::vector<long> temp;\n    long x = test_tup / 100;\n    long y = test_tup % 100;\n    temp.push_back(x);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x - 1);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x + 1);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y - 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y + 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    return coordinates;\n}\nint main() {\n    auto candidate = get_coordinates;\n    assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n    assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n    assert(candidate(std::make_tuple(5, 6)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)7}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)7}), (std::vector<long>)std::vector<long>({(long)6, (long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)6, (long)7})})));\n}\n",
      "timestamp": 1665510632,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpdbdpf1tf.cpp:2:\n/tmp/tmpdbdpf1tf.cpp: In function \u2018int main()\u2019:\n/tmp/tmpdbdpf1tf.cpp:33:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   33 |     assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                                     std::tuple<int, int>\n/tmp/tmpdbdpf1tf.cpp:34:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   34 |     assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to extract all the adjacent coordinates of the given coordinate tuple.\nstd::vector<std::vector<long>> get_coordinates(long test_tup) {\n    std::vector<std::vector<long>> coordinates;\n    std::vector<long> temp;\n    long x = test_tup / 100;\n    long y = test_tup % 100;\n    temp.push_back(x);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x + 1);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x - 1);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y + 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y - 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    return coordinates;\n}\nint main() {\n    auto candidate = get_coordinates;\n    assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n    assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n    assert(candidate(std::make_tuple(5, 6)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)7}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)7}), (std::vector<long>)std::vector<long>({(long)6, (long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)6, (long)7})})));\n}\n",
      "timestamp": 1665510632,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp6kq6yi1x.cpp:2:\n/tmp/tmp6kq6yi1x.cpp: In function \u2018int main()\u2019:\n/tmp/tmp6kq6yi1x.cpp:33:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   33 |     assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                                     std::tuple<int, int>\n/tmp/tmp6kq6yi1x.cpp:34:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   34 |     assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to extract all the adjacent coordinates of the given coordinate tuple.\nstd::vector<std::vector<long>> get_coordinates(long test_tup) {\n    std::vector<std::vector<long>> result;\n    std::vector<long> temp;\n    long x = test_tup / 100;\n    long y = test_tup % 100;\n    temp.push_back(x);\n    temp.push_back(y);\n    result.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y + 1);\n    result.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y - 1);\n    result.push_back(temp);\n    temp.clear();\n    temp.push_back(x + 1);\n    temp.push_back(y);\n    result.push_back(temp);\n    temp.clear();\n    temp.push_back(x - 1);\n    temp.push_back(y);\n    result.push_back(temp);\n    temp.clear();\n    temp.push_back(x + 1);\n    temp.push_back(y + 1);\n    result.push_back(temp);\n    temp.clear();\n    temp.push_back(x + 1);\n    temp.push_back(y - 1);\n    result.push_back(temp);\n    temp.clear();\n    temp.push_back(x - 1);\n    temp.push_back(y + 1);\n    result.push_back(temp);\n    temp.clear();\n    temp.push_back(x - 1);\n    temp.push_back(y - 1);\n    result.push_back(temp);\n    return result;\n}\nint main() {\n    auto candidate = get_coordinates;\n    assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n    assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n    assert(candidate(std::make_tuple(5, 6)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)7}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)7}), (std::vector<long>)std::vector<long>({(long)6, (long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)6, (long)7})})));\n}\n",
      "timestamp": 1666123943,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpg5s71gpe.cpp:2:\n/tmp/tmpg5s71gpe.cpp: In function \u2018int main()\u2019:\n/tmp/tmpg5s71gpe.cpp:48:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   48 |     assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                                     std::tuple<int, int>\n/tmp/tmpg5s71gpe.cpp:49:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   49 |     assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to extract all the adjacent coordinates of the given coordinate tuple.\nstd::vector<std::vector<long>> get_coordinates(long test_tup) {\n    std::vector<std::vector<long>> coordinates;\n    std::vector<long> temp;\n    long x = test_tup / 100;\n    long y = test_tup % 100;\n    temp.push_back(x);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x + 1);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y + 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x + 1);\n    temp.push_back(y + 1);\n    coordinates.push_back(temp);\n    return coordinates;\n}\nint main() {\n    auto candidate = get_coordinates;\n    assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n    assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n    assert(candidate(std::make_tuple(5, 6)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)7}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)7}), (std::vector<long>)std::vector<long>({(long)6, (long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)6, (long)7})})));\n}\n",
      "timestamp": 1665510634,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmprrknkajp.cpp:2:\n/tmp/tmprrknkajp.cpp: In function \u2018int main()\u2019:\n/tmp/tmprrknkajp.cpp:28:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   28 |     assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                                     std::tuple<int, int>\n/tmp/tmprrknkajp.cpp:29:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   29 |     assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to extract all the adjacent coordinates of the given coordinate tuple.\nstd::vector<std::vector<long>> get_coordinates(long test_tup) {\n    std::vector<std::vector<long>> coordinates;\n    long x = test_tup / 100;\n    long y = test_tup % 100;\n    coordinates.push_back({x, y});\n    coordinates.push_back({x + 1, y});\n    coordinates.push_back({x - 1, y});\n    coordinates.push_back({x, y + 1});\n    coordinates.push_back({x, y - 1});\n    coordinates.push_back({x + 1, y + 1});\n    coordinates.push_back({x - 1, y - 1});\n    coordinates.push_back({x + 1, y - 1});\n    coordinates.push_back({x - 1, y + 1});\n    return coordinates;\n}\nint main() {\n    auto candidate = get_coordinates;\n    assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n    assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n    assert(candidate(std::make_tuple(5, 6)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)7}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)7}), (std::vector<long>)std::vector<long>({(long)6, (long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)6, (long)7})})));\n}\n",
      "timestamp": 1666123945,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp6n8n9lad.cpp:2:\n/tmp/tmp6n8n9lad.cpp: In function \u2018int main()\u2019:\n/tmp/tmp6n8n9lad.cpp:21:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   21 |     assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                                     std::tuple<int, int>\n/tmp/tmp6n8n9lad.cpp:22:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   22 |     assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to extract all the adjacent coordinates of the given coordinate tuple.\nstd::vector<std::vector<long>> get_coordinates(long test_tup) {\n    std::vector<std::vector<long>> coordinates;\n    long x = test_tup / 100;\n    long y = test_tup % 100;\n    std::vector<long> temp;\n    temp.push_back(x);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x - 1);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x + 1);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y - 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y + 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x - 1);\n    temp.push_back(y - 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x + 1);\n    temp.push_back(y + 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x + 1);\n    temp.push_back(y - 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x - 1);\n    temp.push_back(y + 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    return coordinates;\n}\nint main() {\n    auto candidate = get_coordinates;\n    assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n    assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n    assert(candidate(std::make_tuple(5, 6)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)7}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)7}), (std::vector<long>)std::vector<long>({(long)6, (long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)6, (long)7})})));\n}\n",
      "timestamp": 1666123945,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpsmkmnvol.cpp:2:\n/tmp/tmpsmkmnvol.cpp: In function \u2018int main()\u2019:\n/tmp/tmpsmkmnvol.cpp:49:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   49 |     assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                                     std::tuple<int, int>\n/tmp/tmpsmkmnvol.cpp:50:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   50 |     assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to extract all the adjacent coordinates of the given coordinate tuple.\nstd::vector<std::vector<long>> get_coordinates(long test_tup) {\n    std::vector<std::vector<long>> coordinates;\n    long x = test_tup/10;\n    long y = test_tup%10;\n    std::vector<long> temp;\n    temp.push_back(x);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x-1);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x+1);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y-1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y+1);\n    coordinates.push_back(temp);\n    temp.clear();\n    return coordinates;\n}\nint main() {\n    auto candidate = get_coordinates;\n    assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n    assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n    assert(candidate(std::make_tuple(5, 6)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)7}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)7}), (std::vector<long>)std::vector<long>({(long)6, (long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)6, (long)7})})));\n}\n",
      "timestamp": 1666123945,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpoe9xadcd.cpp:2:\n/tmp/tmpoe9xadcd.cpp: In function \u2018int main()\u2019:\n/tmp/tmpoe9xadcd.cpp:33:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   33 |     assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                                     std::tuple<int, int>\n/tmp/tmpoe9xadcd.cpp:34:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   34 |     assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to extract all the adjacent coordinates of the given coordinate tuple.\nstd::vector<std::vector<long>> get_coordinates(long test_tup) {\n    std::vector<std::vector<long>> coordinates;\n    std::vector<long> tup;\n    long x = test_tup;\n    while (x > 0) {\n        tup.push_back(x % 10);\n        x = x / 10;\n    }\n    std::reverse(tup.begin(), tup.end());\n    for (long i = 0; i < tup.size(); i++) {\n        for (long j = 0; j < tup.size(); j++) {\n            if (i == j) {\n                continue;\n            }\n            std::vector<long> temp = tup;\n            temp[i] = tup[j];\n            temp[j] = tup[i];\n            coordinates.push_back(temp);\n        }\n    }\n    return coordinates;\n}\nint main() {\n    auto candidate = get_coordinates;\n    assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n    assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n    assert(candidate(std::make_tuple(5, 6)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)7}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)7}), (std::vector<long>)std::vector<long>({(long)6, (long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)6, (long)7})})));\n}\n",
      "timestamp": 1666123945,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpl9cw0x0d.cpp:2:\n/tmp/tmpl9cw0x0d.cpp: In function \u2018int main()\u2019:\n/tmp/tmpl9cw0x0d.cpp:28:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   28 |     assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                                     std::tuple<int, int>\n/tmp/tmpl9cw0x0d.cpp:29:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   29 |     assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to extract all the adjacent coordinates of the given coordinate tuple.\nstd::vector<std::vector<long>> get_coordinates(long test_tup) {\n    std::vector<std::vector<long>> result;\n    std::vector<long> tup;\n    long x = test_tup;\n    long y = test_tup;\n    while(x>0) {\n        tup.push_back(x);\n        tup.push_back(y);\n        result.push_back(tup);\n        tup.clear();\n        x--;\n        y++;\n    }\n    x = test_tup;\n    y = test_tup;\n    while(y>0) {\n        tup.push_back(x);\n        tup.push_back(y);\n        result.push_back(tup);\n        tup.clear();\n        x++;\n        y--;\n    }\n    x = test_tup;\n    y = test_tup;\n    while(x>0 && y>0) {\n        tup.push_back(x);\n        tup.push_back(y);\n        result.push_back(tup);\n        tup.clear();\n        x--;\n        y--;\n    }\n    x = test_tup;\n    y = test_tup;\n    while(x>0 && y>0) {\n        tup.push_back(x);\n        tup.push_back(y);\n        result.push_back(tup);\n        tup.clear();\n        x++;\n        y++;\n    }\n    return result;\n}\nint main() {\n    auto candidate = get_coordinates;\n    assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n    assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n    assert(candidate(std::make_tuple(5, 6)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)7}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)7}), (std::vector<long>)std::vector<long>({(long)6, (long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)6, (long)7})})));\n}\n",
      "timestamp": 1666123945,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmprhmtgr18.cpp:2:\n/tmp/tmprhmtgr18.cpp: In function \u2018int main()\u2019:\n/tmp/tmprhmtgr18.cpp:51:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   51 |     assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                                     std::tuple<int, int>\n/tmp/tmprhmtgr18.cpp:52:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   52 |     assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to extract all the adjacent coordinates of the given coordinate tuple.\nstd::vector<std::vector<long>> get_coordinates(long test_tup) {\n    std::vector<std::vector<long>> coords;\n    std::vector<long> temp;\n    long x = test_tup / 100;\n    long y = test_tup % 100;\n    temp.push_back(x);\n    temp.push_back(y);\n    coords.push_back(temp);\n    temp.clear();\n    temp.push_back(x+1);\n    temp.push_back(y);\n    coords.push_back(temp);\n    temp.clear();\n    temp.push_back(x-1);\n    temp.push_back(y);\n    coords.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y+1);\n    coords.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y-1);\n    coords.push_back(temp);\n    temp.clear();\n    temp.push_back(x+1);\n    temp.push_back(y+1);\n    coords.push_back(temp);\n    temp.clear();\n    temp.push_back(x-1);\n    temp.push_back(y-1);\n    coords.push_back(temp);\n    temp.clear();\n    temp.push_back(x+1);\n    temp.push_back(y-1);\n    coords.push_back(temp);\n    temp.clear();\n    temp.push_back(x-1);\n    temp.push_back(y+1);\n    coords.push_back(temp);\n    temp.clear();\n    return coords;\n}\nint main() {\n    auto candidate = get_coordinates;\n    assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n    assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n    assert(candidate(std::make_tuple(5, 6)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)7}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)7}), (std::vector<long>)std::vector<long>({(long)6, (long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)6, (long)7})})));\n}\n",
      "timestamp": 1666123945,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp9p2yyr_a.cpp:2:\n/tmp/tmp9p2yyr_a.cpp: In function \u2018int main()\u2019:\n/tmp/tmp9p2yyr_a.cpp:49:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   49 |     assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                                     std::tuple<int, int>\n/tmp/tmp9p2yyr_a.cpp:50:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   50 |     assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to extract all the adjacent coordinates of the given coordinate tuple.\nstd::vector<std::vector<long>> get_coordinates(long test_tup) {\n    std::vector<std::vector<long>> coordinates;\n    std::vector<long> temp_coord;\n    std::vector<long> temp_coord2;\n    long x = test_tup % 10;\n    long y = test_tup / 10;\n    temp_coord.push_back(x);\n    temp_coord.push_back(y);\n    coordinates.push_back(temp_coord);\n    temp_coord2.push_back(x);\n    temp_coord2.push_back(y);\n    coordinates.push_back(temp_coord2);\n    return coordinates;\n}\nint main() {\n    auto candidate = get_coordinates;\n    assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n    assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n    assert(candidate(std::make_tuple(5, 6)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)7}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)7}), (std::vector<long>)std::vector<long>({(long)6, (long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)6, (long)7})})));\n}\n",
      "timestamp": 1666123945,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmph7251u8y.cpp:2:\n/tmp/tmph7251u8y.cpp: In function \u2018int main()\u2019:\n/tmp/tmph7251u8y.cpp:20:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   20 |     assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                                     std::tuple<int, int>\n/tmp/tmph7251u8y.cpp:21:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   21 |     assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to extract all the adjacent coordinates of the given coordinate tuple.\nstd::vector<std::vector<long>> get_coordinates(long test_tup) {\n    std::vector<std::vector<long>> coordinates;\n    std::vector<long> temp;\n    long test_tup_copy = test_tup;\n    long count = 0;\n    while(test_tup_copy != 0) {\n        test_tup_copy = test_tup_copy / 10;\n        count++;\n    }\n    long power = pow(10, count - 1);\n    long first_digit = test_tup / power;\n    long last_digit = test_tup % 10;\n    long first_digit_copy = first_digit;\n    long last_digit_copy = last_digit;\n    long first_digit_count = 0;\n    long last_digit_count = 0;\n    while(first_digit_copy != 0) {\n        first_digit_copy = first_digit_copy / 10;\n        first_digit_count++;\n    }\n    while(last_digit_copy != 0) {\n        last_digit_copy = last_digit_copy / 10;\n        last_digit_count++;\n    }\n    long first_digit_power = pow(10, first_digit_count - 1);\n    long last_digit_power = pow(10, last_digit_count - 1);\n    long first_digit_last_digit = first_digit % 10;\n    long last_digit_first_digit = last_digit / last_digit_power;\n    long first_digit_first_digit = first_digit / first_digit_power;\n    long last_digit_last_digit = last_digit % 10;\n    long first_digit_last_digit_copy = first_digit_last_digit;\n    long last_digit_first_digit_copy = last_digit_first_digit;\n    long first_digit_first_digit_copy = first_digit_first_digit;\n    long last_digit_last_digit_copy = last_digit_last_digit;\n    long first_digit_last_digit_count = 0;\n    long last_digit_first_digit_count = 0;\n    long first_digit_first_digit_count = 0;\n    long last_digit_last_digit_\n}\nint main() {\n    auto candidate = get_coordinates;\n    assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n    assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n    assert(candidate(std::make_tuple(5, 6)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)7}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)7}), (std::vector<long>)std::vector<long>({(long)6, (long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)6, (long)7})})));\n}\n",
      "timestamp": 1666123946,
      "stdout": "",
      "stderr": "/tmp/tmpbrd6gtz0.cpp: In function \u2018std::vector<std::vector<long int> > get_coordinates(long int)\u2019:\n/tmp/tmpbrd6gtz0.cpp:42:1: error: expected initializer before \u2018}\u2019 token\n   42 | }\n      | ^\n/tmp/tmpbrd6gtz0.cpp:42:1: warning: no return statement in function returning non-void [-Wreturn-type]\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpbrd6gtz0.cpp:2:\n/tmp/tmpbrd6gtz0.cpp: In function \u2018int main()\u2019:\n/tmp/tmpbrd6gtz0.cpp:45:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   45 |     assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                                     std::tuple<int, int>\n/tmp/tmpbrd6gtz0.cpp:46:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   46 |     assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::ve",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to extract all the adjacent coordinates of the given coordinate tuple.\nstd::vector<std::vector<long>> get_coordinates(long test_tup) {\n    std::vector<std::vector<long>> coordinates;\n    long x = test_tup / 100;\n    long y = test_tup % 100;\n    std::vector<long> temp;\n    temp.push_back(x);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y + 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y - 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x + 1);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x + 1);\n    temp.push_back(y + 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x + 1);\n    temp.push_back(y - 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x - 1);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x - 1);\n    temp.push_back(y + 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x - 1);\n    temp.push_back(y - 1);\n    coordinates.push_back(temp);\n    return coordinates;\n}\nint main() {\n    auto candidate = get_coordinates;\n    assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n    assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n    assert(candidate(std::make_tuple(5, 6)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)7}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)7}), (std::vector<long>)std::vector<long>({(long)6, (long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)6, (long)7})})));\n}\n",
      "timestamp": 1666123946,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmps6e0zbtj.cpp:2:\n/tmp/tmps6e0zbtj.cpp: In function \u2018int main()\u2019:\n/tmp/tmps6e0zbtj.cpp:48:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   48 |     assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                                     std::tuple<int, int>\n/tmp/tmps6e0zbtj.cpp:49:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   49 |     assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to extract all the adjacent coordinates of the given coordinate tuple.\nstd::vector<std::vector<long>> get_coordinates(long test_tup) {\n    std::vector<std::vector<long>> coordinates;\n    long x = test_tup / 100;\n    long y = test_tup % 100;\n    std::vector<long> temp;\n    temp.push_back(x);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y + 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y - 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x + 1);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x - 1);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x + 1);\n    temp.push_back(y + 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x + 1);\n    temp.push_back(y - 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x - 1);\n    temp.push_back(y + 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x - 1);\n    temp.push_back(y - 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    return coordinates;\n}\nint main() {\n    auto candidate = get_coordinates;\n    assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n    assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n    assert(candidate(std::make_tuple(5, 6)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)7}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)7}), (std::vector<long>)std::vector<long>({(long)6, (long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)6, (long)7})})));\n}\n",
      "timestamp": 1666123943,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp1j2lig6a.cpp:2:\n/tmp/tmp1j2lig6a.cpp: In function \u2018int main()\u2019:\n/tmp/tmp1j2lig6a.cpp:49:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   49 |     assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                                     std::tuple<int, int>\n/tmp/tmp1j2lig6a.cpp:50:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   50 |     assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to extract all the adjacent coordinates of the given coordinate tuple.\nstd::vector<std::vector<long>> get_coordinates(long test_tup) {\n    std::vector<std::vector<long>> coordinates;\n    long x = test_tup / 100;\n    long y = test_tup % 100;\n    std::vector<long> temp;\n    temp.push_back(x);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y + 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y - 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x + 1);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x + 1);\n    temp.push_back(y + 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x + 1);\n    temp.push_back(y - 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x - 1);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x - 1);\n    temp.push_back(y + 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x - 1);\n    temp.push_back(y - 1);\n    coordinates.push_back(temp);\n    return coordinates;\n}\nint main() {\n    auto candidate = get_coordinates;\n    assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n    assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n    assert(candidate(std::make_tuple(5, 6)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)7}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)7}), (std::vector<long>)std::vector<long>({(long)6, (long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)6, (long)7})})));\n}\n",
      "timestamp": 1666123946,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmps6e0zbtj.cpp:2:\n/tmp/tmps6e0zbtj.cpp: In function \u2018int main()\u2019:\n/tmp/tmps6e0zbtj.cpp:48:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   48 |     assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                                     std::tuple<int, int>\n/tmp/tmps6e0zbtj.cpp:49:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   49 |     assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to extract all the adjacent coordinates of the given coordinate tuple.\nstd::vector<std::vector<long>> get_coordinates(long test_tup) {\n    std::vector<std::vector<long>> coordinates;\n    std::vector<long> temp;\n    long x = test_tup;\n    while(x > 0) {\n        temp.push_back(x % 10);\n        x /= 10;\n    }\n    std::reverse(temp.begin(), temp.end());\n    long i = 0;\n    while(i < temp.size()) {\n        if(temp[i] == 0) {\n            i++;\n            continue;\n        }\n        std::vector<long> temp_coordinate;\n        temp_coordinate.push_back(i);\n        temp_coordinate.push_back(temp[i] - 1);\n        coordinates.push_back(temp_coordinate);\n        i++;\n    }\n    return coordinates;\n}\nint main() {\n    auto candidate = get_coordinates;\n    assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n    assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n    assert(candidate(std::make_tuple(5, 6)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)7}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)7}), (std::vector<long>)std::vector<long>({(long)6, (long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)6, (long)7})})));\n}\n",
      "timestamp": 1666123947,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpyyy6z6gp.cpp:2:\n/tmp/tmpyyy6z6gp.cpp: In function \u2018int main()\u2019:\n/tmp/tmpyyy6z6gp.cpp:29:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   29 |     assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                                     std::tuple<int, int>\n/tmp/tmpyyy6z6gp.cpp:30:37: error: cannot convert \u2018std::tuple<int, int>\u2019 to \u2018long int\u2019 in argument passing\n   30 |     assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n      |                      ~~~~~~~~~~~~~~~^~~~~~\n      |                                     |\n      |                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    }
  ]
}
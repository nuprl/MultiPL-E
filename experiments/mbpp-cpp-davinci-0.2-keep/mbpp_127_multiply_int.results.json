{
  "name": "mbpp_127_multiply_int",
  "language": "cpp",
  "prompt": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to multiply two integers.\nlong multiply_int(long x, long y) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_127_multiply_int.py",
  "prompt_terminology": "verbatim",
  "tests": "}\nint main() {\n    auto candidate = multiply_int;\n    assert(candidate((10), (20)) == (200));\n    assert(candidate((5), (10)) == (50));\n    assert(candidate((4), (8)) == (32));\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "results": [
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to multiply two integers.\nlong multiply_int(long x, long y) {\n  long sum = 0;\n  while (y != 0) {\n    if (y & 1) {\n      sum = sum + x;\n    }\n    x <<= 1;\n    y >>= 1;\n  }\n  return sum;\n}\nint main() {\n    auto candidate = multiply_int;\n    assert(candidate((10), (20)) == (200));\n    assert(candidate((5), (10)) == (50));\n    assert(candidate((4), (8)) == (32));\n}\n",
      "timestamp": 1665510245,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to multiply two integers.\nlong multiply_int(long x, long y) {\n    long result = 0;\n    while (y) {\n        if (y & 1) {\n            result += x;\n        }\n        x <<= 1;\n        y >>= 1;\n    }\n    return result;\n}\nint main() {\n    auto candidate = multiply_int;\n    assert(candidate((10), (20)) == (200));\n    assert(candidate((5), (10)) == (50));\n    assert(candidate((4), (8)) == (32));\n}\n",
      "timestamp": 1665510245,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to multiply two integers.\nlong multiply_int(long x, long y) {\n    long result = 0;\n    while (y) {\n        if (y & 1) {\n            result += x;\n        }\n        x <<= 1;\n        y >>= 1;\n    }\n    return result;\n}\nint main() {\n    auto candidate = multiply_int;\n    assert(candidate((10), (20)) == (200));\n    assert(candidate((5), (10)) == (50));\n    assert(candidate((4), (8)) == (32));\n}\n",
      "timestamp": 1665510245,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to multiply two integers.\nlong multiply_int(long x, long y) {\n    long sum = 0;\n    while (y != 0) {\n        if (y & 1) {\n            sum = sum + x;\n        }\n        x = x << 1;\n        y = y >> 1;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = multiply_int;\n    assert(candidate((10), (20)) == (200));\n    assert(candidate((5), (10)) == (50));\n    assert(candidate((4), (8)) == (32));\n}\n",
      "timestamp": 1665510247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to multiply two integers.\nlong multiply_int(long x, long y) {\n    if (x == 0 || y == 0) {\n        return 0;\n    }\n    if (x == 1) {\n        return y;\n    }\n    if (y == 1) {\n        return x;\n    }\n    long result = 0;\n    if (x < 0 && y < 0) {\n        result = multiply_int(abs(x), abs(y));\n    } else if (x < 0) {\n        result = multiply_int(abs(x), y);\n        result = -result;\n    } else if (y < 0) {\n        result = multiply_int(x, abs(y));\n        result = -result;\n    } else {\n        result = multiply_int(x, y - 1);\n        result += x;\n    }\n    return result;\n}\nint main() {\n    auto candidate = multiply_int;\n    assert(candidate((10), (20)) == (200));\n    assert(candidate((5), (10)) == (50));\n    assert(candidate((4), (8)) == (32));\n}\n",
      "timestamp": 1665510247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to multiply two integers.\nlong multiply_int(long x, long y) {\n    if (x == 0 || y == 0) return 0;\n    long result = 0;\n    while (y != 0) {\n        if (y & 1) result += x;\n        x <<= 1;\n        y >>= 1;\n    }\n    return result;\n}\nint main() {\n    auto candidate = multiply_int;\n    assert(candidate((10), (20)) == (200));\n    assert(candidate((5), (10)) == (50));\n    assert(candidate((4), (8)) == (32));\n}\n",
      "timestamp": 1665510247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to multiply two integers.\nlong multiply_int(long x, long y) {\n    long result = 0;\n    while (y > 0) {\n        if (y & 1) {\n            result += x;\n        }\n        x <<= 1;\n        y >>= 1;\n    }\n    return result;\n}\nint main() {\n    auto candidate = multiply_int;\n    assert(candidate((10), (20)) == (200));\n    assert(candidate((5), (10)) == (50));\n    assert(candidate((4), (8)) == (32));\n}\n",
      "timestamp": 1665510247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to multiply two integers.\nlong multiply_int(long x, long y) {\n    // TODO: Write your code here\n    if (x == 0 || y == 0) {\n        return 0;\n    }\n    long result = 0;\n    if (x < 0 && y < 0) {\n        x = abs(x);\n        y = abs(y);\n        for (int i = 0; i < y; i++) {\n            result += x;\n        }\n        return result;\n    }\n    if (x < 0) {\n        x = abs(x);\n        for (int i = 0; i < y; i++) {\n            result -= x;\n        }\n        return result;\n    }\n    if (y < 0) {\n        y = abs(y);\n        for (int i = 0; i < y; i++) {\n            result -= x;\n        }\n        return result;\n    }\n    for (int i = 0; i < y; i++) {\n        result += x;\n    }\n    return result;\n}\nint main() {\n    auto candidate = multiply_int;\n    assert(candidate((10), (20)) == (200));\n    assert(candidate((5), (10)) == (50));\n    assert(candidate((4), (8)) == (32));\n}\n",
      "timestamp": 1665510247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to multiply two integers.\nlong multiply_int(long x, long y) {\n    if (x == 0 || y == 0) return 0;\n    if (x == 1) return y;\n    if (y == 1) return x;\n    if (x == -1) return -y;\n    if (y == -1) return -x;\n    if (x == 2) return y << 1;\n    if (y == 2) return x << 1;\n    if (x == -2) return -(y << 1);\n    if (y == -2) return -(x << 1);\n    if (x == 3) return y + y + y;\n    if (y == 3) return x + x + x;\n    if (x == -3) return -(y + y + y);\n    if (y == -3) return -(x + x + x);\n    if (x == 4) return y << 2;\n    if (y == 4) return x << 2;\n    if (x == -4) return -(y << 2);\n    if (y == -4) return -(x << 2);\n    if (x == 5) return y + y + y + y + y;\n    if (y == 5) return x + x + x + x + x;\n    if (x == -5) return -(y + y + y + y + y);\n    if (y == -5) return -(x + x + x + x + x);\n    if (x == 6) return y + y + y + y + y + y;\n    if (y == 6) return x + x + x + x + x + x;\n    if (x == -6) return -(y + y + y + y + y + y);\n    if (y == -6) return -(x + x + x + x + x + x);\n    if (x == 7) return y + y + y + y + y + y + y;\n    if (y == 7) return x + x + x + x + x + x + x;\n    if (x == -7) return -(y + y + y + y + y + y + y);\n    if (y == -7) return -(x + x + x + x + x + x\n}\nint main() {\n    auto candidate = multiply_int;\n    assert(candidate((10), (20)) == (200));\n    assert(candidate((5), (10)) == (50));\n    assert(candidate((4), (8)) == (32));\n}\n",
      "timestamp": 1665510247,
      "stdout": "",
      "stderr": "/tmp/tmp1_xgw95b.cpp: In function \u2018long int multiply_int(long int, long int)\u2019:\n/tmp/tmp1_xgw95b.cpp:33:48: error: expected \u2018)\u2019 before \u2018}\u2019 token\n   33 |     if (y == -7) return -(x + x + x + x + x + x\n      |                          ~                     ^\n      |                                                )\n   34 | }\n      | ~                                               \n/tmp/tmp1_xgw95b.cpp:33:48: error: expected \u2018;\u2019 before \u2018}\u2019 token\n   33 |     if (y == -7) return -(x + x + x + x + x + x\n      |                                                ^\n      |                                                ;\n   34 | }\n      | ~                                               \n/tmp/tmp1_xgw95b.cpp:34:1: warning: control reaches end of non-void function [-Wreturn-type]\n   34 | }\n      | ^\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to multiply two integers.\nlong multiply_int(long x, long y) {\n    long result = 0;\n    while (y) {\n        if (y & 1) {\n            result += x;\n        }\n        x <<= 1;\n        y >>= 1;\n    }\n    return result;\n}\nint main() {\n    auto candidate = multiply_int;\n    assert(candidate((10), (20)) == (200));\n    assert(candidate((5), (10)) == (50));\n    assert(candidate((4), (8)) == (32));\n}\n",
      "timestamp": 1665510245,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to multiply two integers.\nlong multiply_int(long x, long y) {\n    long result = 0;\n    while (y > 0) {\n        if (y & 1) {\n            result += x;\n        }\n        x <<= 1;\n        y >>= 1;\n    }\n    return result;\n}\nint main() {\n    auto candidate = multiply_int;\n    assert(candidate((10), (20)) == (200));\n    assert(candidate((5), (10)) == (50));\n    assert(candidate((4), (8)) == (32));\n}\n",
      "timestamp": 1665510247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to multiply two integers.\nlong multiply_int(long x, long y) {\n    long result = 0;\n    while (y > 0) {\n        if (y & 1) {\n            result += x;\n        }\n        x <<= 1;\n        y >>= 1;\n    }\n    return result;\n}\nint main() {\n    auto candidate = multiply_int;\n    assert(candidate((10), (20)) == (200));\n    assert(candidate((5), (10)) == (50));\n    assert(candidate((4), (8)) == (32));\n}\n",
      "timestamp": 1665510247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to multiply two integers.\nlong multiply_int(long x, long y) {\n\tlong result = 0;\n\twhile (y) {\n\t\tif (y & 1) {\n\t\t\tresult += x;\n\t\t}\n\t\tx <<= 1;\n\t\ty >>= 1;\n\t}\n\treturn result;\n}\nint main() {\n    auto candidate = multiply_int;\n    assert(candidate((10), (20)) == (200));\n    assert(candidate((5), (10)) == (50));\n    assert(candidate((4), (8)) == (32));\n}\n",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to multiply two integers.\nlong multiply_int(long x, long y) {\n    if (x == 0 || y == 0) {\n        return 0;\n    }\n    if (x == 1) {\n        return y;\n    }\n    if (y == 1) {\n        return x;\n    }\n    long result = 0;\n    if (x < 0 && y < 0) {\n        result = multiply_int(-x, -y);\n    } else if (x < 0) {\n        result = -multiply_int(-x, y);\n    } else if (y < 0) {\n        result = -multiply_int(x, -y);\n    } else {\n        result = x + multiply_int(x, y - 1);\n    }\n    return result;\n}\nint main() {\n    auto candidate = multiply_int;\n    assert(candidate((10), (20)) == (200));\n    assert(candidate((5), (10)) == (50));\n    assert(candidate((4), (8)) == (32));\n}\n",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to multiply two integers.\nlong multiply_int(long x, long y) {\n    long result = 0;\n    while (y > 0) {\n        if (y & 1) {\n            result += x;\n        }\n        x <<= 1;\n        y >>= 1;\n    }\n    return result;\n}\nint main() {\n    auto candidate = multiply_int;\n    assert(candidate((10), (20)) == (200));\n    assert(candidate((5), (10)) == (50));\n    assert(candidate((4), (8)) == (32));\n}\n",
      "timestamp": 1665510247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to multiply two integers.\nlong multiply_int(long x, long y) {\n    long result = 0;\n    while (y > 0) {\n        if (y & 1) {\n            result += x;\n        }\n        x <<= 1;\n        y >>= 1;\n    }\n    return result;\n}\nint main() {\n    auto candidate = multiply_int;\n    assert(candidate((10), (20)) == (200));\n    assert(candidate((5), (10)) == (50));\n    assert(candidate((4), (8)) == (32));\n}\n",
      "timestamp": 1665510247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to multiply two integers.\nlong multiply_int(long x, long y) {\n  long result = 0;\n  while (y > 0) {\n    if (y & 1) {\n      result += x;\n    }\n    x <<= 1;\n    y >>= 1;\n  }\n  return result;\n}\nint main() {\n    auto candidate = multiply_int;\n    assert(candidate((10), (20)) == (200));\n    assert(candidate((5), (10)) == (50));\n    assert(candidate((4), (8)) == (32));\n}\n",
      "timestamp": 1665510245,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to multiply two integers.\nlong multiply_int(long x, long y) {\n    long result = 0;\n    while (y != 0) {\n        if (y & 1) {\n            result += x;\n        }\n        x <<= 1;\n        y >>= 1;\n    }\n    return result;\n}\nint main() {\n    auto candidate = multiply_int;\n    assert(candidate((10), (20)) == (200));\n    assert(candidate((5), (10)) == (50));\n    assert(candidate((4), (8)) == (32));\n}\n",
      "timestamp": 1665510245,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to multiply two integers.\nlong multiply_int(long x, long y) {\n    if (x == 0 || y == 0) {\n        return 0;\n    }\n    if (x == 1) {\n        return y;\n    }\n    if (y == 1) {\n        return x;\n    }\n    if (x < 0 && y < 0) {\n        return multiply_int(-x, -y);\n    }\n    if (x < 0) {\n        return -multiply_int(-x, y);\n    }\n    if (y < 0) {\n        return -multiply_int(x, -y);\n    }\n    if (x > y) {\n        return multiply_int(y, x);\n    }\n    return x + multiply_int(x, y - 1);\n}\nint main() {\n    auto candidate = multiply_int;\n    assert(candidate((10), (20)) == (200));\n    assert(candidate((5), (10)) == (50));\n    assert(candidate((4), (8)) == (32));\n}\n",
      "timestamp": 1665510247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to multiply two integers.\nlong multiply_int(long x, long y) {\n    long result = 0;\n    while (y != 0) {\n        if (y & 1) {\n            result += x;\n        }\n        x <<= 1;\n        y >>= 1;\n    }\n    return result;\n}\nint main() {\n    auto candidate = multiply_int;\n    assert(candidate((10), (20)) == (200));\n    assert(candidate((5), (10)) == (50));\n    assert(candidate((4), (8)) == (32));\n}\n",
      "timestamp": 1665510245,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to multiply two integers.\nlong multiply_int(long x, long y) {\n    long sum = 0;\n    while (y != 0) {\n        if (y & 1) {\n            sum = sum + x;\n        }\n        x <<= 1;\n        y >>= 1;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = multiply_int;\n    assert(candidate((10), (20)) == (200));\n    assert(candidate((5), (10)) == (50));\n    assert(candidate((4), (8)) == (32));\n}\n",
      "timestamp": 1665510245,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to multiply two integers.\nlong multiply_int(long x, long y) {\n    if (x == 0 || y == 0) {\n        return 0;\n    }\n    if (x == 1) {\n        return y;\n    }\n    if (y == 1) {\n        return x;\n    }\n    long result = 0;\n    while (y != 0) {\n        if (y & 1) {\n            result = result + x;\n        }\n        x = x << 1;\n        y = y >> 1;\n    }\n    return result;\n}\nint main() {\n    auto candidate = multiply_int;\n    assert(candidate((10), (20)) == (200));\n    assert(candidate((5), (10)) == (50));\n    assert(candidate((4), (8)) == (32));\n}\n",
      "timestamp": 1666122944,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to multiply two integers.\nlong multiply_int(long x, long y) {\n  if (y == 0) return 0;\n  long z = multiply_int(x, y/2);\n  if (y % 2 == 0) return 2 * z;\n  else return x + 2 * z;\n}\nint main() {\n    auto candidate = multiply_int;\n    assert(candidate((10), (20)) == (200));\n    assert(candidate((5), (10)) == (50));\n    assert(candidate((4), (8)) == (32));\n}\n",
      "timestamp": 1666122944,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to multiply two integers.\nlong multiply_int(long x, long y) {\n    long sum = 0;\n    while (y != 0) {\n        if (y & 1) {\n            sum = sum + x;\n        }\n        x <<= 1;\n        y >>= 1;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = multiply_int;\n    assert(candidate((10), (20)) == (200));\n    assert(candidate((5), (10)) == (50));\n    assert(candidate((4), (8)) == (32));\n}\n",
      "timestamp": 1665510245,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to multiply two integers.\nlong multiply_int(long x, long y) {\n    long sum = 0;\n    while (y != 0) {\n        if (y & 1) {\n            sum = sum + x;\n        }\n        x <<= 1;\n        y >>= 1;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = multiply_int;\n    assert(candidate((10), (20)) == (200));\n    assert(candidate((5), (10)) == (50));\n    assert(candidate((4), (8)) == (32));\n}\n",
      "timestamp": 1665510245,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to multiply two integers.\nlong multiply_int(long x, long y) {\n    if (x == 0 || y == 0) {\n        return 0;\n    }\n    long sum = 0;\n    for (int i = 0; i < y; i++) {\n        sum += x;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = multiply_int;\n    assert(candidate((10), (20)) == (200));\n    assert(candidate((5), (10)) == (50));\n    assert(candidate((4), (8)) == (32));\n}\n",
      "timestamp": 1666122942,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to multiply two integers.\nlong multiply_int(long x, long y) {\n    if (x == 0 || y == 0) {\n        return 0;\n    }\n    long sum = 0;\n    for (int i = 0; i < y; i++) {\n        sum += x;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = multiply_int;\n    assert(candidate((10), (20)) == (200));\n    assert(candidate((5), (10)) == (50));\n    assert(candidate((4), (8)) == (32));\n}\n",
      "timestamp": 1666122942,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to multiply two integers.\nlong multiply_int(long x, long y) {\n    long result = 0;\n    while (y > 0) {\n        if (y % 2 == 1) {\n            result += x;\n        }\n        x = x << 1;\n        y = y >> 1;\n    }\n    return result;\n}\nint main() {\n    auto candidate = multiply_int;\n    assert(candidate((10), (20)) == (200));\n    assert(candidate((5), (10)) == (50));\n    assert(candidate((4), (8)) == (32));\n}\n",
      "timestamp": 1666122944,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to multiply two integers.\nlong multiply_int(long x, long y) {\n  if (x == 0 || y == 0) {\n    return 0;\n  }\n  if (x == 1) {\n    return y;\n  }\n  if (y == 1) {\n    return x;\n  }\n  long result = 0;\n  if (x > 0 && y > 0) {\n    for (int i = 0; i < y; i++) {\n      result += x;\n    }\n  } else if (x < 0 && y < 0) {\n    for (int i = 0; i < y; i++) {\n      result += x;\n    }\n  } else if (x < 0 && y > 0) {\n    for (int i = 0; i < y; i++) {\n      result += x;\n    }\n  } else if (x > 0 && y < 0) {\n    for (int i = 0; i < y; i++) {\n      result += x;\n    }\n  }\n  return result;\n}\nint main() {\n    auto candidate = multiply_int;\n    assert(candidate((10), (20)) == (200));\n    assert(candidate((5), (10)) == (50));\n    assert(candidate((4), (8)) == (32));\n}\n",
      "timestamp": 1666122945,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to multiply two integers.\nlong multiply_int(long x, long y) {\n    long result = 0;\n    while (y) {\n        if (y & 1) {\n            result += x;\n        }\n        x <<= 1;\n        y >>= 1;\n    }\n    return result;\n}\nint main() {\n    auto candidate = multiply_int;\n    assert(candidate((10), (20)) == (200));\n    assert(candidate((5), (10)) == (50));\n    assert(candidate((4), (8)) == (32));\n}\n",
      "timestamp": 1665510245,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to multiply two integers.\nlong multiply_int(long x, long y) {\n    long result = 0;\n    while (y > 0) {\n        if (y & 1) {\n            result += x;\n        }\n        x <<= 1;\n        y >>= 1;\n    }\n    return result;\n}\nint main() {\n    auto candidate = multiply_int;\n    assert(candidate((10), (20)) == (200));\n    assert(candidate((5), (10)) == (50));\n    assert(candidate((4), (8)) == (32));\n}\n",
      "timestamp": 1665510247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to multiply two integers.\nlong multiply_int(long x, long y) {\n    long result = 0;\n    while (y) {\n        if (y & 1) {\n            result += x;\n        }\n        x <<= 1;\n        y >>= 1;\n    }\n    return result;\n}\nint main() {\n    auto candidate = multiply_int;\n    assert(candidate((10), (20)) == (200));\n    assert(candidate((5), (10)) == (50));\n    assert(candidate((4), (8)) == (32));\n}\n",
      "timestamp": 1665510245,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to multiply two integers.\nlong multiply_int(long x, long y) {\n    long result = 0;\n    while (y > 0) {\n        if (y & 1) {\n            result += x;\n        }\n        x <<= 1;\n        y >>= 1;\n    }\n    return result;\n}\nint main() {\n    auto candidate = multiply_int;\n    assert(candidate((10), (20)) == (200));\n    assert(candidate((5), (10)) == (50));\n    assert(candidate((4), (8)) == (32));\n}\n",
      "timestamp": 1665510247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to multiply two integers.\nlong multiply_int(long x, long y) {\n    if (x == 0 || y == 0) {\n        return 0;\n    }\n    long result = 0;\n    for (int i = 0; i < y; i++) {\n        result += x;\n    }\n    return result;\n}\nint main() {\n    auto candidate = multiply_int;\n    assert(candidate((10), (20)) == (200));\n    assert(candidate((5), (10)) == (50));\n    assert(candidate((4), (8)) == (32));\n}\n",
      "timestamp": 1666122940,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to multiply two integers.\nlong multiply_int(long x, long y) {\n    long result = 0;\n    while (y) {\n        if (y & 1) {\n            result += x;\n        }\n        x <<= 1;\n        y >>= 1;\n    }\n    return result;\n}\nint main() {\n    auto candidate = multiply_int;\n    assert(candidate((10), (20)) == (200));\n    assert(candidate((5), (10)) == (50));\n    assert(candidate((4), (8)) == (32));\n}\n",
      "timestamp": 1665510245,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to multiply two integers.\nlong multiply_int(long x, long y) {\n  long result = 0;\n  while (y > 0) {\n    if (y & 1) {\n      result = result + x;\n    }\n    x = x << 1;\n    y = y >> 1;\n  }\n  return result;\n}\nint main() {\n    auto candidate = multiply_int;\n    assert(candidate((10), (20)) == (200));\n    assert(candidate((5), (10)) == (50));\n    assert(candidate((4), (8)) == (32));\n}\n",
      "timestamp": 1666122940,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to multiply two integers.\nlong multiply_int(long x, long y) {\n    long result = 0;\n    while (y) {\n        if (y & 1) {\n            result += x;\n        }\n        x <<= 1;\n        y >>= 1;\n    }\n    return result;\n}\nint main() {\n    auto candidate = multiply_int;\n    assert(candidate((10), (20)) == (200));\n    assert(candidate((5), (10)) == (50));\n    assert(candidate((4), (8)) == (32));\n}\n",
      "timestamp": 1665510245,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to multiply two integers.\nlong multiply_int(long x, long y) {\n    long sum = 0;\n    while (y != 0) {\n        if (y & 1) {\n            sum = sum + x;\n        }\n        x <<= 1;\n        y >>= 1;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = multiply_int;\n    assert(candidate((10), (20)) == (200));\n    assert(candidate((5), (10)) == (50));\n    assert(candidate((4), (8)) == (32));\n}\n",
      "timestamp": 1665510245,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to multiply two integers.\nlong multiply_int(long x, long y) {\n\tif (y == 0)\n\t\treturn 0;\n\tif (y > 0)\n\t\treturn (x + multiply_int(x, y - 1));\n\tif (y < 0)\n\t\treturn -multiply_int(x, -y);\n}\nint main() {\n    auto candidate = multiply_int;\n    assert(candidate((10), (20)) == (200));\n    assert(candidate((5), (10)) == (50));\n    assert(candidate((4), (8)) == (32));\n}\n",
      "timestamp": 1666122940,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to multiply two integers.\nlong multiply_int(long x, long y) {\n    long result = 0;\n    while (y) {\n        if (y & 1) {\n            result += x;\n        }\n        x <<= 1;\n        y >>= 1;\n    }\n    return result;\n}\nint main() {\n    auto candidate = multiply_int;\n    assert(candidate((10), (20)) == (200));\n    assert(candidate((5), (10)) == (50));\n    assert(candidate((4), (8)) == (32));\n}\n",
      "timestamp": 1665510245,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to multiply two integers.\nlong multiply_int(long x, long y) {\n    long result = 0;\n    while (y != 0) {\n        if (y & 1) {\n            result += x;\n        }\n        x <<= 1;\n        y >>= 1;\n    }\n    return result;\n}\nint main() {\n    auto candidate = multiply_int;\n    assert(candidate((10), (20)) == (200));\n    assert(candidate((5), (10)) == (50));\n    assert(candidate((4), (8)) == (32));\n}\n",
      "timestamp": 1665510245,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to multiply two integers.\nlong multiply_int(long x, long y) {\n    if (x == 0 || y == 0) {\n        return 0;\n    }\n    long result = 0;\n    for (int i = 0; i < y; i++) {\n        result += x;\n    }\n    return result;\n}\nint main() {\n    auto candidate = multiply_int;\n    assert(candidate((10), (20)) == (200));\n    assert(candidate((5), (10)) == (50));\n    assert(candidate((4), (8)) == (32));\n}\n",
      "timestamp": 1666122940,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to multiply two integers.\nlong multiply_int(long x, long y) {\n    if (y == 0) {\n        return 0;\n    }\n    long sum = multiply_int(x, y >> 1);\n    sum += sum;\n    if (y & 1) {\n        sum += x;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = multiply_int;\n    assert(candidate((10), (20)) == (200));\n    assert(candidate((5), (10)) == (50));\n    assert(candidate((4), (8)) == (32));\n}\n",
      "timestamp": 1666122944,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to multiply two integers.\nlong multiply_int(long x, long y) {\n  long result = 0;\n  while (y) {\n    if (y & 1) {\n      result += x;\n    }\n    x <<= 1;\n    y >>= 1;\n  }\n  return result;\n}\nint main() {\n    auto candidate = multiply_int;\n    assert(candidate((10), (20)) == (200));\n    assert(candidate((5), (10)) == (50));\n    assert(candidate((4), (8)) == (32));\n}\n",
      "timestamp": 1666122938,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to multiply two integers.\nlong multiply_int(long x, long y) {\n    long result = 0;\n    while (y > 0) {\n        if (y & 1) {\n            result += x;\n        }\n        x <<= 1;\n        y >>= 1;\n    }\n    return result;\n}\nint main() {\n    auto candidate = multiply_int;\n    assert(candidate((10), (20)) == (200));\n    assert(candidate((5), (10)) == (50));\n    assert(candidate((4), (8)) == (32));\n}\n",
      "timestamp": 1665510247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to multiply two integers.\nlong multiply_int(long x, long y) {\n    long result = 0;\n    while (y != 0) {\n        if (y & 1) {\n            result += x;\n        }\n        x <<= 1;\n        y >>= 1;\n    }\n    return result;\n}\nint main() {\n    auto candidate = multiply_int;\n    assert(candidate((10), (20)) == (200));\n    assert(candidate((5), (10)) == (50));\n    assert(candidate((4), (8)) == (32));\n}\n",
      "timestamp": 1665510245,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to multiply two integers.\nlong multiply_int(long x, long y) {\n    long result = 0;\n    while (y != 0) {\n        if (y & 1) {\n            result += x;\n        }\n        x <<= 1;\n        y >>= 1;\n    }\n    return result;\n}\nint main() {\n    auto candidate = multiply_int;\n    assert(candidate((10), (20)) == (200));\n    assert(candidate((5), (10)) == (50));\n    assert(candidate((4), (8)) == (32));\n}\n",
      "timestamp": 1665510245,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to multiply two integers.\nlong multiply_int(long x, long y) {\n  long result = 0;\n  while (y > 0) {\n    if (y % 2 == 1) {\n      result += x;\n    }\n    x = x << 1;\n    y = y >> 1;\n  }\n  return result;\n}\nint main() {\n    auto candidate = multiply_int;\n    assert(candidate((10), (20)) == (200));\n    assert(candidate((5), (10)) == (50));\n    assert(candidate((4), (8)) == (32));\n}\n",
      "timestamp": 1666122944,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to multiply two integers.\nlong multiply_int(long x, long y) {\n    long result = 0;\n    while (y > 0) {\n        if (y & 1) {\n            result += x;\n        }\n        x <<= 1;\n        y >>= 1;\n    }\n    return result;\n}\nint main() {\n    auto candidate = multiply_int;\n    assert(candidate((10), (20)) == (200));\n    assert(candidate((5), (10)) == (50));\n    assert(candidate((4), (8)) == (32));\n}\n",
      "timestamp": 1665510247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to multiply two integers.\nlong multiply_int(long x, long y) {\n    long sum = 0;\n    while (y != 0) {\n        if (y & 1) {\n            sum = sum + x;\n        }\n        x <<= 1;\n        y >>= 1;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = multiply_int;\n    assert(candidate((10), (20)) == (200));\n    assert(candidate((5), (10)) == (50));\n    assert(candidate((4), (8)) == (32));\n}\n",
      "timestamp": 1665510245,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to multiply two integers.\nlong multiply_int(long x, long y) {\n\tif (x == 0 || y == 0) {\n\t\treturn 0;\n\t}\n\tlong z = multiply_int(x, y / 2);\n\tif (y % 2 == 0) {\n\t\treturn 2 * z;\n\t}\n\telse {\n\t\treturn x + 2 * z;\n\t}\n}\nint main() {\n    auto candidate = multiply_int;\n    assert(candidate((10), (20)) == (200));\n    assert(candidate((5), (10)) == (50));\n    assert(candidate((4), (8)) == (32));\n}\n",
      "timestamp": 1666122944,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to multiply two integers.\nlong multiply_int(long x, long y) {\n    long result = 0;\n    while (y > 0) {\n        if (y & 1) {\n            result += x;\n        }\n        x <<= 1;\n        y >>= 1;\n    }\n    return result;\n}\nint main() {\n    auto candidate = multiply_int;\n    assert(candidate((10), (20)) == (200));\n    assert(candidate((5), (10)) == (50));\n    assert(candidate((4), (8)) == (32));\n}\n",
      "timestamp": 1665510247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to multiply two integers.\nlong multiply_int(long x, long y) {\n    long result = 0;\n    while (y > 0) {\n        if (y % 2 == 1) {\n            result += x;\n        }\n        x <<= 1;\n        y >>= 1;\n    }\n    return result;\n}\nint main() {\n    auto candidate = multiply_int;\n    assert(candidate((10), (20)) == (200));\n    assert(candidate((5), (10)) == (50));\n    assert(candidate((4), (8)) == (32));\n}\n",
      "timestamp": 1665510245,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to multiply two integers.\nlong multiply_int(long x, long y) {\n    long result = 0;\n    while (y) {\n        if (y & 1) {\n            result += x;\n        }\n        x <<= 1;\n        y >>= 1;\n    }\n    return result;\n}\nint main() {\n    auto candidate = multiply_int;\n    assert(candidate((10), (20)) == (200));\n    assert(candidate((5), (10)) == (50));\n    assert(candidate((4), (8)) == (32));\n}\n",
      "timestamp": 1665510245,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to multiply two integers.\nlong multiply_int(long x, long y) {\n    long result = 0;\n    while (y) {\n        if (y & 1) {\n            result += x;\n        }\n        x <<= 1;\n        y >>= 1;\n    }\n    return result;\n}\nint main() {\n    auto candidate = multiply_int;\n    assert(candidate((10), (20)) == (200));\n    assert(candidate((5), (10)) == (50));\n    assert(candidate((4), (8)) == (32));\n}\n",
      "timestamp": 1665510245,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to multiply two integers.\nlong multiply_int(long x, long y) {\n    long result = 0;\n    while (y != 0) {\n        if (y & 1) {\n            result += x;\n        }\n        x <<= 1;\n        y >>= 1;\n    }\n    return result;\n}\nint main() {\n    auto candidate = multiply_int;\n    assert(candidate((10), (20)) == (200));\n    assert(candidate((5), (10)) == (50));\n    assert(candidate((4), (8)) == (32));\n}\n",
      "timestamp": 1665510245,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to multiply two integers.\nlong multiply_int(long x, long y) {\n    if(x == 0 || y == 0)\n        return 0;\n    if(x == 1)\n        return y;\n    if(y == 1)\n        return x;\n    long result = 0;\n    if(y % 2 == 0) {\n        result = multiply_int(x, y/2);\n        result = result + result;\n    } else {\n        result = multiply_int(x, y/2);\n        result = result + result + x;\n    }\n    return result;\n}\nint main() {\n    auto candidate = multiply_int;\n    assert(candidate((10), (20)) == (200));\n    assert(candidate((5), (10)) == (50));\n    assert(candidate((4), (8)) == (32));\n}\n",
      "timestamp": 1666122944,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to multiply two integers.\nlong multiply_int(long x, long y) {\n    long result = 0;\n    while (y) {\n        if (y & 1) {\n            result += x;\n        }\n        x <<= 1;\n        y >>= 1;\n    }\n    return result;\n}\nint main() {\n    auto candidate = multiply_int;\n    assert(candidate((10), (20)) == (200));\n    assert(candidate((5), (10)) == (50));\n    assert(candidate((4), (8)) == (32));\n}\n",
      "timestamp": 1665510245,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to multiply two integers.\nlong multiply_int(long x, long y) {\n    if (x == 0 || y == 0) {\n        return 0;\n    }\n    long sum = 0;\n    for (int i = 0; i < y; i++) {\n        sum += x;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = multiply_int;\n    assert(candidate((10), (20)) == (200));\n    assert(candidate((5), (10)) == (50));\n    assert(candidate((4), (8)) == (32));\n}\n",
      "timestamp": 1666122942,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to multiply two integers.\nlong multiply_int(long x, long y) {\n    if (x == 0 || y == 0) {\n        return 0;\n    }\n    if (x == 1) {\n        return y;\n    }\n    if (y == 1) {\n        return x;\n    }\n    if (x == -1) {\n        return -y;\n    }\n    if (y == -1) {\n        return -x;\n    }\n    if (x < 0 && y < 0) {\n        return multiply_int(-x, -y);\n    }\n    if (x < 0) {\n        return -multiply_int(-x, y);\n    }\n    if (y < 0) {\n        return -multiply_int(x, -y);\n    }\n    return x + multiply_int(x, y - 1);\n}\nint main() {\n    auto candidate = multiply_int;\n    assert(candidate((10), (20)) == (200));\n    assert(candidate((5), (10)) == (50));\n    assert(candidate((4), (8)) == (32));\n}\n",
      "timestamp": 1665510245,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to multiply two integers.\nlong multiply_int(long x, long y) {\n    long result = 0;\n    while (y > 0) {\n        if (y % 2 == 1) {\n            result += x;\n        }\n        x <<= 1;\n        y >>= 1;\n    }\n    return result;\n}\nint main() {\n    auto candidate = multiply_int;\n    assert(candidate((10), (20)) == (200));\n    assert(candidate((5), (10)) == (50));\n    assert(candidate((4), (8)) == (32));\n}\n",
      "timestamp": 1665510245,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to multiply two integers.\nlong multiply_int(long x, long y) {\n    long result = 0;\n    while (y > 0) {\n        if (y & 1) {\n            result += x;\n        }\n        x <<= 1;\n        y >>= 1;\n    }\n    return result;\n}\nint main() {\n    auto candidate = multiply_int;\n    assert(candidate((10), (20)) == (200));\n    assert(candidate((5), (10)) == (50));\n    assert(candidate((4), (8)) == (32));\n}\n",
      "timestamp": 1665510247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to multiply two integers.\nlong multiply_int(long x, long y) {\n  long result = 0;\n  while (y != 0) {\n    if (y & 1) {\n      result += x;\n    }\n    x <<= 1;\n    y >>= 1;\n  }\n  return result;\n}\nint main() {\n    auto candidate = multiply_int;\n    assert(candidate((10), (20)) == (200));\n    assert(candidate((5), (10)) == (50));\n    assert(candidate((4), (8)) == (32));\n}\n",
      "timestamp": 1665510245,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to multiply two integers.\nlong multiply_int(long x, long y) {\n    long result = 0;\n    while (y > 0) {\n        if (y & 1) {\n            result += x;\n        }\n        x <<= 1;\n        y >>= 1;\n    }\n    return result;\n}\nint main() {\n    auto candidate = multiply_int;\n    assert(candidate((10), (20)) == (200));\n    assert(candidate((5), (10)) == (50));\n    assert(candidate((4), (8)) == (32));\n}\n",
      "timestamp": 1665510247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to multiply two integers.\nlong multiply_int(long x, long y) {\n    long result = 0;\n    while (y != 0) {\n        if (y & 1) {\n            result += x;\n        }\n        x <<= 1;\n        y >>= 1;\n    }\n    return result;\n}\nint main() {\n    auto candidate = multiply_int;\n    assert(candidate((10), (20)) == (200));\n    assert(candidate((5), (10)) == (50));\n    assert(candidate((4), (8)) == (32));\n}\n",
      "timestamp": 1665510245,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to multiply two integers.\nlong multiply_int(long x, long y) {\n    long result = 0;\n    while (y != 0) {\n        if (y & 1) {\n            result += x;\n        }\n        x <<= 1;\n        y >>= 1;\n    }\n    return result;\n}\nint main() {\n    auto candidate = multiply_int;\n    assert(candidate((10), (20)) == (200));\n    assert(candidate((5), (10)) == (50));\n    assert(candidate((4), (8)) == (32));\n}\n",
      "timestamp": 1665510245,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to multiply two integers.\nlong multiply_int(long x, long y) {\n    if (x == 0) {\n        return 0;\n    }\n    long sum = multiply_int(x, y - 1);\n    return sum + x;\n}\nint main() {\n    auto candidate = multiply_int;\n    assert(candidate((10), (20)) == (200));\n    assert(candidate((5), (10)) == (50));\n    assert(candidate((4), (8)) == (32));\n}\n",
      "timestamp": 1666122959,
      "stdout": "",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to multiply two integers.\nlong multiply_int(long x, long y) {\n    long result = 0;\n    while (y != 0) {\n        if (y & 1) {\n            result += x;\n        }\n        x <<= 1;\n        y >>= 1;\n    }\n    return result;\n}\nint main() {\n    auto candidate = multiply_int;\n    assert(candidate((10), (20)) == (200));\n    assert(candidate((5), (10)) == (50));\n    assert(candidate((4), (8)) == (32));\n}\n",
      "timestamp": 1665510245,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to multiply two integers.\nlong multiply_int(long x, long y) {\n  if (x == 0 || y == 0) {\n    return 0;\n  }\n  return x + multiply_int(x, y - 1);\n}\nint main() {\n    auto candidate = multiply_int;\n    assert(candidate((10), (20)) == (200));\n    assert(candidate((5), (10)) == (50));\n    assert(candidate((4), (8)) == (32));\n}\n",
      "timestamp": 1666122944,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to multiply two integers.\nlong multiply_int(long x, long y) {\n  long sum = 0;\n  while (y != 0) {\n    if (y & 1) {\n      sum = sum + x;\n    }\n    x <<= 1;\n    y >>= 1;\n  }\n  return sum;\n}\nint main() {\n    auto candidate = multiply_int;\n    assert(candidate((10), (20)) == (200));\n    assert(candidate((5), (10)) == (50));\n    assert(candidate((4), (8)) == (32));\n}\n",
      "timestamp": 1665510245,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to multiply two integers.\nlong multiply_int(long x, long y) {\n    long result = 0;\n    while (y) {\n        if (y & 1) {\n            result += x;\n        }\n        x <<= 1;\n        y >>= 1;\n    }\n    return result;\n}\nint main() {\n    auto candidate = multiply_int;\n    assert(candidate((10), (20)) == (200));\n    assert(candidate((5), (10)) == (50));\n    assert(candidate((4), (8)) == (32));\n}\n",
      "timestamp": 1665510245,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to multiply two integers.\nlong multiply_int(long x, long y) {\n    long sum = 0;\n    while (y != 0) {\n        if (y & 1) {\n            sum = sum + x;\n        }\n        x <<= 1;\n        y >>= 1;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = multiply_int;\n    assert(candidate((10), (20)) == (200));\n    assert(candidate((5), (10)) == (50));\n    assert(candidate((4), (8)) == (32));\n}\n",
      "timestamp": 1665510245,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to multiply two integers.\nlong multiply_int(long x, long y) {\n    long result = 0;\n    while (y) {\n        if (y & 1) {\n            result += x;\n        }\n        x <<= 1;\n        y >>= 1;\n    }\n    return result;\n}\nint main() {\n    auto candidate = multiply_int;\n    assert(candidate((10), (20)) == (200));\n    assert(candidate((5), (10)) == (50));\n    assert(candidate((4), (8)) == (32));\n}\n",
      "timestamp": 1665510245,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to multiply two integers.\nlong multiply_int(long x, long y) {\n  long result = 0;\n  while (y > 0) {\n    if (y & 1) {\n      result += x;\n    }\n    x <<= 1;\n    y >>= 1;\n  }\n  return result;\n}\nint main() {\n    auto candidate = multiply_int;\n    assert(candidate((10), (20)) == (200));\n    assert(candidate((5), (10)) == (50));\n    assert(candidate((4), (8)) == (32));\n}\n",
      "timestamp": 1665510245,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to multiply two integers.\nlong multiply_int(long x, long y) {\n    long result = 0;\n    while (y != 0) {\n        if (y & 1) {\n            result = result + x;\n        }\n        x = x << 1;\n        y = y >> 1;\n    }\n    return result;\n}\nint main() {\n    auto candidate = multiply_int;\n    assert(candidate((10), (20)) == (200));\n    assert(candidate((5), (10)) == (50));\n    assert(candidate((4), (8)) == (32));\n}\n",
      "timestamp": 1666122938,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to multiply two integers.\nlong multiply_int(long x, long y) {\n    long result = 0;\n    while (y) {\n        if (y & 1) {\n            result += x;\n        }\n        x <<= 1;\n        y >>= 1;\n    }\n    return result;\n}\nint main() {\n    auto candidate = multiply_int;\n    assert(candidate((10), (20)) == (200));\n    assert(candidate((5), (10)) == (50));\n    assert(candidate((4), (8)) == (32));\n}\n",
      "timestamp": 1665510245,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to multiply two integers.\nlong multiply_int(long x, long y) {\n    long result = 0;\n    while (y != 0) {\n        if (y & 1) {\n            result += x;\n        }\n        x <<= 1;\n        y >>= 1;\n    }\n    return result;\n}\nint main() {\n    auto candidate = multiply_int;\n    assert(candidate((10), (20)) == (200));\n    assert(candidate((5), (10)) == (50));\n    assert(candidate((4), (8)) == (32));\n}\n",
      "timestamp": 1665510245,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to multiply two integers.\nlong multiply_int(long x, long y) {\n    long result = 0;\n    while (y != 0) {\n        if (y & 1) {\n            result += x;\n        }\n        x <<= 1;\n        y >>= 1;\n    }\n    return result;\n}\nint main() {\n    auto candidate = multiply_int;\n    assert(candidate((10), (20)) == (200));\n    assert(candidate((5), (10)) == (50));\n    assert(candidate((4), (8)) == (32));\n}\n",
      "timestamp": 1665510245,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to multiply two integers.\nlong multiply_int(long x, long y) {\n  long sum = 0;\n  while (y != 0) {\n    if (y & 1) {\n      sum = sum + x;\n    }\n    x <<= 1;\n    y >>= 1;\n  }\n  return sum;\n}\nint main() {\n    auto candidate = multiply_int;\n    assert(candidate((10), (20)) == (200));\n    assert(candidate((5), (10)) == (50));\n    assert(candidate((4), (8)) == (32));\n}\n",
      "timestamp": 1665510245,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to multiply two integers.\nlong multiply_int(long x, long y) {\n    if (y == 0)\n        return 0;\n    long z = multiply_int(x, y/2);\n    if (y%2 == 0)\n        return 2*z;\n    else\n        return x + 2*z;\n}\nint main() {\n    auto candidate = multiply_int;\n    assert(candidate((10), (20)) == (200));\n    assert(candidate((5), (10)) == (50));\n    assert(candidate((4), (8)) == (32));\n}\n",
      "timestamp": 1666122944,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to multiply two integers.\nlong multiply_int(long x, long y) {\n\tlong result = 0;\n\twhile (y) {\n\t\tif (y & 1) {\n\t\t\tresult += x;\n\t\t}\n\t\tx <<= 1;\n\t\ty >>= 1;\n\t}\n\treturn result;\n}\nint main() {\n    auto candidate = multiply_int;\n    assert(candidate((10), (20)) == (200));\n    assert(candidate((5), (10)) == (50));\n    assert(candidate((4), (8)) == (32));\n}\n",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to multiply two integers.\nlong multiply_int(long x, long y) {\n    if(x == 0 || y == 0) return 0;\n    long sum = 0;\n    while(x != 0) {\n        if(x & 1) {\n            sum += y;\n        }\n        x >>= 1;\n        y <<= 1;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = multiply_int;\n    assert(candidate((10), (20)) == (200));\n    assert(candidate((5), (10)) == (50));\n    assert(candidate((4), (8)) == (32));\n}\n",
      "timestamp": 1666122944,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to multiply two integers.\nlong multiply_int(long x, long y) {\n    long result = 0;\n    while (y > 0) {\n        if (y % 2 == 1) {\n            result += x;\n        }\n        x = x << 1;\n        y = y >> 1;\n    }\n    return result;\n}\nint main() {\n    auto candidate = multiply_int;\n    assert(candidate((10), (20)) == (200));\n    assert(candidate((5), (10)) == (50));\n    assert(candidate((4), (8)) == (32));\n}\n",
      "timestamp": 1666122944,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to multiply two integers.\nlong multiply_int(long x, long y) {\n  long sum = 0;\n  while (y != 0) {\n    if (y & 1) {\n      sum = sum + x;\n    }\n    x <<= 1;\n    y >>= 1;\n  }\n  return sum;\n}\nint main() {\n    auto candidate = multiply_int;\n    assert(candidate((10), (20)) == (200));\n    assert(candidate((5), (10)) == (50));\n    assert(candidate((4), (8)) == (32));\n}\n",
      "timestamp": 1665510245,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to multiply two integers.\nlong multiply_int(long x, long y) {\n    long result = 0;\n    while (y) {\n        if (y & 1) {\n            result += x;\n        }\n        x <<= 1;\n        y >>= 1;\n    }\n    return result;\n}\nint main() {\n    auto candidate = multiply_int;\n    assert(candidate((10), (20)) == (200));\n    assert(candidate((5), (10)) == (50));\n    assert(candidate((4), (8)) == (32));\n}\n",
      "timestamp": 1665510245,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to multiply two integers.\nlong multiply_int(long x, long y) {\n    long result = 0;\n    while (y > 0) {\n        if (y % 2 == 1) {\n            result += x;\n        }\n        x <<= 1;\n        y >>= 1;\n    }\n    return result;\n}\nint main() {\n    auto candidate = multiply_int;\n    assert(candidate((10), (20)) == (200));\n    assert(candidate((5), (10)) == (50));\n    assert(candidate((4), (8)) == (32));\n}\n",
      "timestamp": 1665510245,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to multiply two integers.\nlong multiply_int(long x, long y) {\n    long sum = 0;\n    while (y != 0) {\n        if (y & 1) {\n            sum = sum + x;\n        }\n        x <<= 1;\n        y >>= 1;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = multiply_int;\n    assert(candidate((10), (20)) == (200));\n    assert(candidate((5), (10)) == (50));\n    assert(candidate((4), (8)) == (32));\n}\n",
      "timestamp": 1665510245,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to multiply two integers.\nlong multiply_int(long x, long y) {\n    long result = 0;\n    while (y) {\n        if (y & 1) {\n            result += x;\n        }\n        x <<= 1;\n        y >>= 1;\n    }\n    return result;\n}\nint main() {\n    auto candidate = multiply_int;\n    assert(candidate((10), (20)) == (200));\n    assert(candidate((5), (10)) == (50));\n    assert(candidate((4), (8)) == (32));\n}\n",
      "timestamp": 1665510245,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to multiply two integers.\nlong multiply_int(long x, long y) {\n    if (x == 0 || y == 0) {\n        return 0;\n    }\n    if (x == 1) {\n        return y;\n    }\n    if (y == 1) {\n        return x;\n    }\n    if (x < 0 && y < 0) {\n        return multiply_int(-x, -y);\n    }\n    if (x < 0) {\n        return -multiply_int(-x, y);\n    }\n    if (y < 0) {\n        return -multiply_int(x, -y);\n    }\n    return x + multiply_int(x, y - 1);\n}\nint main() {\n    auto candidate = multiply_int;\n    assert(candidate((10), (20)) == (200));\n    assert(candidate((5), (10)) == (50));\n    assert(candidate((4), (8)) == (32));\n}\n",
      "timestamp": 1666122945,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to multiply two integers.\nlong multiply_int(long x, long y) {\n    long result = 0;\n    while (y != 0) {\n        if (y & 1) {\n            result += x;\n        }\n        x <<= 1;\n        y >>= 1;\n    }\n    return result;\n}\nint main() {\n    auto candidate = multiply_int;\n    assert(candidate((10), (20)) == (200));\n    assert(candidate((5), (10)) == (50));\n    assert(candidate((4), (8)) == (32));\n}\n",
      "timestamp": 1665510245,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to multiply two integers.\nlong multiply_int(long x, long y) {\n  long sum = 0;\n  while (y != 0) {\n    if (y & 1) {\n      sum = sum + x;\n    }\n    x <<= 1;\n    y >>= 1;\n  }\n  return sum;\n}\nint main() {\n    auto candidate = multiply_int;\n    assert(candidate((10), (20)) == (200));\n    assert(candidate((5), (10)) == (50));\n    assert(candidate((4), (8)) == (32));\n}\n",
      "timestamp": 1665510245,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to multiply two integers.\nlong multiply_int(long x, long y) {\n    long result = 0;\n    while (y) {\n        if (y & 1) {\n            result += x;\n        }\n        x <<= 1;\n        y >>= 1;\n    }\n    return result;\n}\nint main() {\n    auto candidate = multiply_int;\n    assert(candidate((10), (20)) == (200));\n    assert(candidate((5), (10)) == (50));\n    assert(candidate((4), (8)) == (32));\n}\n",
      "timestamp": 1665510245,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to multiply two integers.\nlong multiply_int(long x, long y) {\n  long sum = 0;\n  while (y != 0) {\n    if (y & 1) {\n      sum = sum + x;\n    }\n    x = x << 1;\n    y = y >> 1;\n  }\n  return sum;\n}\nint main() {\n    auto candidate = multiply_int;\n    assert(candidate((10), (20)) == (200));\n    assert(candidate((5), (10)) == (50));\n    assert(candidate((4), (8)) == (32));\n}\n",
      "timestamp": 1666122942,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to multiply two integers.\nlong multiply_int(long x, long y) {\n    if(x == 0 || y == 0)\n        return 0;\n    if(x == 1)\n        return y;\n    if(y == 1)\n        return x;\n    long result = 0;\n    if(x > 0 && y > 0) {\n        while(y > 0) {\n            result += x;\n            y--;\n        }\n    }\n    else if(x < 0 && y < 0) {\n        while(y < 0) {\n            result += x;\n            y++;\n        }\n    }\n    else if(x > 0 && y < 0) {\n        while(y < 0) {\n            result -= x;\n            y++;\n        }\n    }\n    else if(x < 0 && y > 0) {\n        while(y > 0) {\n            result -= x;\n            y--;\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = multiply_int;\n    assert(candidate((10), (20)) == (200));\n    assert(candidate((5), (10)) == (50));\n    assert(candidate((4), (8)) == (32));\n}\n",
      "timestamp": 1666122944,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to multiply two integers.\nlong multiply_int(long x, long y) {\n    long result = 0;\n    while (y > 0) {\n        if (y & 1) {\n            result += x;\n        }\n        x <<= 1;\n        y >>= 1;\n    }\n    return result;\n}\nint main() {\n    auto candidate = multiply_int;\n    assert(candidate((10), (20)) == (200));\n    assert(candidate((5), (10)) == (50));\n    assert(candidate((4), (8)) == (32));\n}\n",
      "timestamp": 1665510247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to multiply two integers.\nlong multiply_int(long x, long y) {\n    if (x == 0 || y == 0) {\n        return 0;\n    }\n    if (y == 1) {\n        return x;\n    }\n    return x + multiply_int(x, y - 1);\n}\nint main() {\n    auto candidate = multiply_int;\n    assert(candidate((10), (20)) == (200));\n    assert(candidate((5), (10)) == (50));\n    assert(candidate((4), (8)) == (32));\n}\n",
      "timestamp": 1666122944,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to multiply two integers.\nlong multiply_int(long x, long y) {\n  long sum = 0;\n  while (y != 0) {\n    if (y & 1) {\n      sum = sum + x;\n    }\n    x <<= 1;\n    y >>= 1;\n  }\n  return sum;\n}\nint main() {\n    auto candidate = multiply_int;\n    assert(candidate((10), (20)) == (200));\n    assert(candidate((5), (10)) == (50));\n    assert(candidate((4), (8)) == (32));\n}\n",
      "timestamp": 1665510245,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to multiply two integers.\nlong multiply_int(long x, long y) {\n    long result = 0;\n    while (y) {\n        if (y & 1) {\n            result += x;\n        }\n        x <<= 1;\n        y >>= 1;\n    }\n    return result;\n}\nint main() {\n    auto candidate = multiply_int;\n    assert(candidate((10), (20)) == (200));\n    assert(candidate((5), (10)) == (50));\n    assert(candidate((4), (8)) == (32));\n}\n",
      "timestamp": 1665510245,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to multiply two integers.\nlong multiply_int(long x, long y) {\n    long result = 0;\n    while(y) {\n        if(y & 1) {\n            result += x;\n        }\n        x <<= 1;\n        y >>= 1;\n    }\n    return result;\n}\nint main() {\n    auto candidate = multiply_int;\n    assert(candidate((10), (20)) == (200));\n    assert(candidate((5), (10)) == (50));\n    assert(candidate((4), (8)) == (32));\n}\n",
      "timestamp": 1666122938,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to multiply two integers.\nlong multiply_int(long x, long y) {\n    long result = 0;\n    while (y > 0) {\n        if (y % 2 == 1) {\n            result += x;\n        }\n        x <<= 1;\n        y >>= 1;\n    }\n    return result;\n}\nint main() {\n    auto candidate = multiply_int;\n    assert(candidate((10), (20)) == (200));\n    assert(candidate((5), (10)) == (50));\n    assert(candidate((4), (8)) == (32));\n}\n",
      "timestamp": 1665510245,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to multiply two integers.\nlong multiply_int(long x, long y) {\n    if (y == 0) return 0;\n    if (y == 1) return x;\n    long z = multiply_int(x, y / 2);\n    if (y % 2 == 0) return 2 * z;\n    else return x + 2 * z;\n}\nint main() {\n    auto candidate = multiply_int;\n    assert(candidate((10), (20)) == (200));\n    assert(candidate((5), (10)) == (50));\n    assert(candidate((4), (8)) == (32));\n}\n",
      "timestamp": 1666122944,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to multiply two integers.\nlong multiply_int(long x, long y) {\n  // TODO: Implement this function\n  long result = 0;\n  while (y != 0) {\n    if (y & 1) {\n      result += x;\n    }\n    x <<= 1;\n    y >>= 1;\n  }\n  return result;\n}\nint main() {\n    auto candidate = multiply_int;\n    assert(candidate((10), (20)) == (200));\n    assert(candidate((5), (10)) == (50));\n    assert(candidate((4), (8)) == (32));\n}\n",
      "timestamp": 1666122945,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to multiply two integers.\nlong multiply_int(long x, long y) {\n    long result = 0;\n    while (y) {\n        if (y & 1) {\n            result += x;\n        }\n        x <<= 1;\n        y >>= 1;\n    }\n    return result;\n}\nint main() {\n    auto candidate = multiply_int;\n    assert(candidate((10), (20)) == (200));\n    assert(candidate((5), (10)) == (50));\n    assert(candidate((4), (8)) == (32));\n}\n",
      "timestamp": 1665510245,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to multiply two integers.\nlong multiply_int(long x, long y) {\n    long result = 0;\n    while (y > 0) {\n        if (y & 1) {\n            result += x;\n        }\n        x <<= 1;\n        y >>= 1;\n    }\n    return result;\n}\nint main() {\n    auto candidate = multiply_int;\n    assert(candidate((10), (20)) == (200));\n    assert(candidate((5), (10)) == (50));\n    assert(candidate((4), (8)) == (32));\n}\n",
      "timestamp": 1665510247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to multiply two integers.\nlong multiply_int(long x, long y) {\n    long result = 0;\n    while (y) {\n        if (y & 1) {\n            result = result + x;\n        }\n        x = x << 1;\n        y = y >> 1;\n    }\n    return result;\n}\nint main() {\n    auto candidate = multiply_int;\n    assert(candidate((10), (20)) == (200));\n    assert(candidate((5), (10)) == (50));\n    assert(candidate((4), (8)) == (32));\n}\n",
      "timestamp": 1666122944,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to multiply two integers.\nlong multiply_int(long x, long y) {\n    long result = 0;\n    while (y > 0) {\n        if (y & 1) {\n            result += x;\n        }\n        x <<= 1;\n        y >>= 1;\n    }\n    return result;\n}\nint main() {\n    auto candidate = multiply_int;\n    assert(candidate((10), (20)) == (200));\n    assert(candidate((5), (10)) == (50));\n    assert(candidate((4), (8)) == (32));\n}\n",
      "timestamp": 1665510247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to multiply two integers.\nlong multiply_int(long x, long y) {\n    long result = 0;\n    while(y) {\n        if(y & 1) {\n            result += x;\n        }\n        x <<= 1;\n        y >>= 1;\n    }\n    return result;\n}\nint main() {\n    auto candidate = multiply_int;\n    assert(candidate((10), (20)) == (200));\n    assert(candidate((5), (10)) == (50));\n    assert(candidate((4), (8)) == (32));\n}\n",
      "timestamp": 1666122938,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to multiply two integers.\nlong multiply_int(long x, long y) {\n    long sum = 0;\n    while (y != 0) {\n        if (y & 1) {\n            sum = sum + x;\n        }\n        x = x << 1;\n        y = y >> 1;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = multiply_int;\n    assert(candidate((10), (20)) == (200));\n    assert(candidate((5), (10)) == (50));\n    assert(candidate((4), (8)) == (32));\n}\n",
      "timestamp": 1665510247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to multiply two integers.\nlong multiply_int(long x, long y) {\n    long result = 0;\n    while (y != 0) {\n        if (y & 1) {\n            result += x;\n        }\n        x <<= 1;\n        y >>= 1;\n    }\n    return result;\n}\nint main() {\n    auto candidate = multiply_int;\n    assert(candidate((10), (20)) == (200));\n    assert(candidate((5), (10)) == (50));\n    assert(candidate((4), (8)) == (32));\n}\n",
      "timestamp": 1665510245,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to multiply two integers.\nlong multiply_int(long x, long y) {\n    long result = 0;\n    while (y > 0) {\n        if (y & 1) {\n            result += x;\n        }\n        x <<= 1;\n        y >>= 1;\n    }\n    return result;\n}\nint main() {\n    auto candidate = multiply_int;\n    assert(candidate((10), (20)) == (200));\n    assert(candidate((5), (10)) == (50));\n    assert(candidate((4), (8)) == (32));\n}\n",
      "timestamp": 1665510247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to multiply two integers.\nlong multiply_int(long x, long y) {\n  long sum = 0;\n  while (y != 0) {\n    if (y & 1) {\n      sum = sum + x;\n    }\n    x <<= 1;\n    y >>= 1;\n  }\n  return sum;\n}\nint main() {\n    auto candidate = multiply_int;\n    assert(candidate((10), (20)) == (200));\n    assert(candidate((5), (10)) == (50));\n    assert(candidate((4), (8)) == (32));\n}\n",
      "timestamp": 1665510245,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to multiply two integers.\nlong multiply_int(long x, long y) {\n  long sum = 0;\n  while (y != 0) {\n    if (y & 1) {\n      sum = sum + x;\n    }\n    x <<= 1;\n    y >>= 1;\n  }\n  return sum;\n}\nint main() {\n    auto candidate = multiply_int;\n    assert(candidate((10), (20)) == (200));\n    assert(candidate((5), (10)) == (50));\n    assert(candidate((4), (8)) == (32));\n}\n",
      "timestamp": 1665510245,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to multiply two integers.\nlong multiply_int(long x, long y) {\n    long result = 0;\n    while (y) {\n        if (y & 1) {\n            result += x;\n        }\n        x <<= 1;\n        y >>= 1;\n    }\n    return result;\n}\nint main() {\n    auto candidate = multiply_int;\n    assert(candidate((10), (20)) == (200));\n    assert(candidate((5), (10)) == (50));\n    assert(candidate((4), (8)) == (32));\n}\n",
      "timestamp": 1665510245,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to multiply two integers.\nlong multiply_int(long x, long y) {\n  if (x == 0 || y == 0) return 0;\n  long sum = 0;\n  for (int i = 0; i < y; ++i) {\n    sum += x;\n  }\n  return sum;\n}\nint main() {\n    auto candidate = multiply_int;\n    assert(candidate((10), (20)) == (200));\n    assert(candidate((5), (10)) == (50));\n    assert(candidate((4), (8)) == (32));\n}\n",
      "timestamp": 1666122944,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to multiply two integers.\nlong multiply_int(long x, long y) {\n  long result = 0;\n  while (y > 0) {\n    if (y & 1) {\n      result += x;\n    }\n    x <<= 1;\n    y >>= 1;\n  }\n  return result;\n}\nint main() {\n    auto candidate = multiply_int;\n    assert(candidate((10), (20)) == (200));\n    assert(candidate((5), (10)) == (50));\n    assert(candidate((4), (8)) == (32));\n}\n",
      "timestamp": 1665510245,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to multiply two integers.\nlong multiply_int(long x, long y) {\n    if (y == 0) return 0;\n    long z = multiply_int(x, y / 2);\n    if (y % 2 == 0) return 2 * z;\n    else return x + 2 * z;\n}\nint main() {\n    auto candidate = multiply_int;\n    assert(candidate((10), (20)) == (200));\n    assert(candidate((5), (10)) == (50));\n    assert(candidate((4), (8)) == (32));\n}\n",
      "timestamp": 1666122942,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to multiply two integers.\nlong multiply_int(long x, long y) {\n    long result = 0;\n    while (y != 0) {\n        if (y & 1) {\n            result = result + x;\n        }\n        x = x << 1;\n        y = y >> 1;\n    }\n    return result;\n}\nint main() {\n    auto candidate = multiply_int;\n    assert(candidate((10), (20)) == (200));\n    assert(candidate((5), (10)) == (50));\n    assert(candidate((4), (8)) == (32));\n}\n",
      "timestamp": 1666122938,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to multiply two integers.\nlong multiply_int(long x, long y) {\n    long result = 0;\n    while (y != 0) {\n        if (y & 1) {\n            result = result + x;\n        }\n        x = x << 1;\n        y = y >> 1;\n    }\n    return result;\n}\nint main() {\n    auto candidate = multiply_int;\n    assert(candidate((10), (20)) == (200));\n    assert(candidate((5), (10)) == (50));\n    assert(candidate((4), (8)) == (32));\n}\n",
      "timestamp": 1666122938,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to multiply two integers.\nlong multiply_int(long x, long y) {\n    long result = 0;\n    while (y > 0) {\n        if (y & 1) {\n            result += x;\n        }\n        x <<= 1;\n        y >>= 1;\n    }\n    return result;\n}\nint main() {\n    auto candidate = multiply_int;\n    assert(candidate((10), (20)) == (200));\n    assert(candidate((5), (10)) == (50));\n    assert(candidate((4), (8)) == (32));\n}\n",
      "timestamp": 1665510247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to multiply two integers.\nlong multiply_int(long x, long y) {\n  long sum = 0;\n  while (y != 0) {\n    if (y & 1) {\n      sum = sum + x;\n    }\n    x = x << 1;\n    y = y >> 1;\n  }\n  return sum;\n}\nint main() {\n    auto candidate = multiply_int;\n    assert(candidate((10), (20)) == (200));\n    assert(candidate((5), (10)) == (50));\n    assert(candidate((4), (8)) == (32));\n}\n",
      "timestamp": 1666122942,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to multiply two integers.\nlong multiply_int(long x, long y) {\n    long result = 0;\n    while (y > 0) {\n        if (y & 1) {\n            result += x;\n        }\n        x <<= 1;\n        y >>= 1;\n    }\n    return result;\n}\nint main() {\n    auto candidate = multiply_int;\n    assert(candidate((10), (20)) == (200));\n    assert(candidate((5), (10)) == (50));\n    assert(candidate((4), (8)) == (32));\n}\n",
      "timestamp": 1665510247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to multiply two integers.\nlong multiply_int(long x, long y) {\n    long result = 0;\n    while(y) {\n        if(y & 1) {\n            result += x;\n        }\n        x <<= 1;\n        y >>= 1;\n    }\n    return result;\n}\nint main() {\n    auto candidate = multiply_int;\n    assert(candidate((10), (20)) == (200));\n    assert(candidate((5), (10)) == (50));\n    assert(candidate((4), (8)) == (32));\n}\n",
      "timestamp": 1666122938,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to multiply two integers.\nlong multiply_int(long x, long y) {\n  long sum = 0;\n  while (y != 0) {\n    if (y & 1) {\n      sum = sum + x;\n    }\n    x <<= 1;\n    y >>= 1;\n  }\n  return sum;\n}\nint main() {\n    auto candidate = multiply_int;\n    assert(candidate((10), (20)) == (200));\n    assert(candidate((5), (10)) == (50));\n    assert(candidate((4), (8)) == (32));\n}\n",
      "timestamp": 1665510245,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to multiply two integers.\nlong multiply_int(long x, long y) {\n    long result = 0;\n    while (y) {\n        if (y & 1) {\n            result += x;\n        }\n        x <<= 1;\n        y >>= 1;\n    }\n    return result;\n}\nint main() {\n    auto candidate = multiply_int;\n    assert(candidate((10), (20)) == (200));\n    assert(candidate((5), (10)) == (50));\n    assert(candidate((4), (8)) == (32));\n}\n",
      "timestamp": 1665510245,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to multiply two integers.\nlong multiply_int(long x, long y) {\n    long result = 0;\n    while (y) {\n        if (y & 1) {\n            result += x;\n        }\n        x <<= 1;\n        y >>= 1;\n    }\n    return result;\n}\nint main() {\n    auto candidate = multiply_int;\n    assert(candidate((10), (20)) == (200));\n    assert(candidate((5), (10)) == (50));\n    assert(candidate((4), (8)) == (32));\n}\n",
      "timestamp": 1665510245,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to multiply two integers.\nlong multiply_int(long x, long y) {\n    long result = 0;\n    while (y) {\n        if (y & 1) {\n            result += x;\n        }\n        x <<= 1;\n        y >>= 1;\n    }\n    return result;\n}\nint main() {\n    auto candidate = multiply_int;\n    assert(candidate((10), (20)) == (200));\n    assert(candidate((5), (10)) == (50));\n    assert(candidate((4), (8)) == (32));\n}\n",
      "timestamp": 1665510245,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to multiply two integers.\nlong multiply_int(long x, long y) {\n    long result = 0;\n    while (y) {\n        if (y & 1) {\n            result += x;\n        }\n        x <<= 1;\n        y >>= 1;\n    }\n    return result;\n}\nint main() {\n    auto candidate = multiply_int;\n    assert(candidate((10), (20)) == (200));\n    assert(candidate((5), (10)) == (50));\n    assert(candidate((4), (8)) == (32));\n}\n",
      "timestamp": 1665510245,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to multiply two integers.\nlong multiply_int(long x, long y) {\n    long sum = 0;\n    while (y != 0) {\n        if (y & 1) {\n            sum = sum + x;\n        }\n        x <<= 1;\n        y >>= 1;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = multiply_int;\n    assert(candidate((10), (20)) == (200));\n    assert(candidate((5), (10)) == (50));\n    assert(candidate((4), (8)) == (32));\n}\n",
      "timestamp": 1665510245,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to multiply two integers.\nlong multiply_int(long x, long y) {\n    long result = 0;\n    while(y != 0) {\n        if(y & 1) {\n            result += x;\n        }\n        x <<= 1;\n        y >>= 1;\n    }\n    return result;\n}\nint main() {\n    auto candidate = multiply_int;\n    assert(candidate((10), (20)) == (200));\n    assert(candidate((5), (10)) == (50));\n    assert(candidate((4), (8)) == (32));\n}\n",
      "timestamp": 1666122944,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to multiply two integers.\nlong multiply_int(long x, long y) {\n    long result = 0;\n    while (y > 0) {\n        if (y & 1) {\n            result += x;\n        }\n        x <<= 1;\n        y >>= 1;\n    }\n    return result;\n}\nint main() {\n    auto candidate = multiply_int;\n    assert(candidate((10), (20)) == (200));\n    assert(candidate((5), (10)) == (50));\n    assert(candidate((4), (8)) == (32));\n}\n",
      "timestamp": 1665510247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to multiply two integers.\nlong multiply_int(long x, long y) {\n    long sum = 0;\n    while (y != 0) {\n        if (y & 1) {\n            sum = sum + x;\n        }\n        x <<= 1;\n        y >>= 1;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = multiply_int;\n    assert(candidate((10), (20)) == (200));\n    assert(candidate((5), (10)) == (50));\n    assert(candidate((4), (8)) == (32));\n}\n",
      "timestamp": 1665510245,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to multiply two integers.\nlong multiply_int(long x, long y) {\n    long result = 0;\n    while (y != 0) {\n        if (y & 1) {\n            result += x;\n        }\n        x <<= 1;\n        y >>= 1;\n    }\n    return result;\n}\nint main() {\n    auto candidate = multiply_int;\n    assert(candidate((10), (20)) == (200));\n    assert(candidate((5), (10)) == (50));\n    assert(candidate((4), (8)) == (32));\n}\n",
      "timestamp": 1665510245,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to multiply two integers.\nlong multiply_int(long x, long y) {\n    long result = 0;\n    while (y) {\n        if (y & 1) {\n            result += x;\n        }\n        x <<= 1;\n        y >>= 1;\n    }\n    return result;\n}\nint main() {\n    auto candidate = multiply_int;\n    assert(candidate((10), (20)) == (200));\n    assert(candidate((5), (10)) == (50));\n    assert(candidate((4), (8)) == (32));\n}\n",
      "timestamp": 1665510245,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to multiply two integers.\nlong multiply_int(long x, long y) {\n    long result = 0;\n    while (y) {\n        if (y & 1) {\n            result += x;\n        }\n        x <<= 1;\n        y >>= 1;\n    }\n    return result;\n}\nint main() {\n    auto candidate = multiply_int;\n    assert(candidate((10), (20)) == (200));\n    assert(candidate((5), (10)) == (50));\n    assert(candidate((4), (8)) == (32));\n}\n",
      "timestamp": 1665510245,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to multiply two integers.\nlong multiply_int(long x, long y) {\n  long sum = 0;\n  while (y != 0) {\n    if (y & 1) {\n      sum = sum + x;\n    }\n    x <<= 1;\n    y >>= 1;\n  }\n  return sum;\n}\nint main() {\n    auto candidate = multiply_int;\n    assert(candidate((10), (20)) == (200));\n    assert(candidate((5), (10)) == (50));\n    assert(candidate((4), (8)) == (32));\n}\n",
      "timestamp": 1665510245,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to multiply two integers.\nlong multiply_int(long x, long y) {\n    long long result = 0;\n    while (y) {\n        if (y & 1) {\n            result += x;\n        }\n        x <<= 1;\n        y >>= 1;\n    }\n    return result;\n}\nint main() {\n    auto candidate = multiply_int;\n    assert(candidate((10), (20)) == (200));\n    assert(candidate((5), (10)) == (50));\n    assert(candidate((4), (8)) == (32));\n}\n",
      "timestamp": 1666122938,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to multiply two integers.\nlong multiply_int(long x, long y) {\n    // Write your code here\n    if (y == 0) {\n        return 0;\n    }\n    long z = multiply_int(x, y / 2);\n    if (y % 2 == 0) {\n        return 2 * z;\n    } else {\n        return x + (2 * z);\n    }\n}\nint main() {\n    auto candidate = multiply_int;\n    assert(candidate((10), (20)) == (200));\n    assert(candidate((5), (10)) == (50));\n    assert(candidate((4), (8)) == (32));\n}\n",
      "timestamp": 1666122944,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to multiply two integers.\nlong multiply_int(long x, long y) {\n    if (x == 0 || y == 0) {\n        return 0;\n    }\n    if (x == 1) {\n        return y;\n    }\n    if (y == 1) {\n        return x;\n    }\n    long sum = 0;\n    for (int i = 0; i < y; i++) {\n        sum += x;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = multiply_int;\n    assert(candidate((10), (20)) == (200));\n    assert(candidate((5), (10)) == (50));\n    assert(candidate((4), (8)) == (32));\n}\n",
      "timestamp": 1666122944,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to multiply two integers.\nlong multiply_int(long x, long y) {\n    long result = 0;\n    while (y) {\n        if (y & 1) {\n            result += x;\n        }\n        x <<= 1;\n        y >>= 1;\n    }\n    return result;\n}\nint main() {\n    auto candidate = multiply_int;\n    assert(candidate((10), (20)) == (200));\n    assert(candidate((5), (10)) == (50));\n    assert(candidate((4), (8)) == (32));\n}\n",
      "timestamp": 1665510245,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to multiply two integers.\nlong multiply_int(long x, long y) {\n    long sum = 0;\n    while (y != 0) {\n        if (y & 1) {\n            sum = sum + x;\n        }\n        x <<= 1;\n        y >>= 1;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = multiply_int;\n    assert(candidate((10), (20)) == (200));\n    assert(candidate((5), (10)) == (50));\n    assert(candidate((4), (8)) == (32));\n}\n",
      "timestamp": 1665510245,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to multiply two integers.\nlong multiply_int(long x, long y) {\n    long sum = 0;\n    while(y != 0) {\n        if(y & 1) {\n            sum = sum + x;\n        }\n        x = x << 1;\n        y = y >> 1;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = multiply_int;\n    assert(candidate((10), (20)) == (200));\n    assert(candidate((5), (10)) == (50));\n    assert(candidate((4), (8)) == (32));\n}\n",
      "timestamp": 1666122944,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to multiply two integers.\nlong multiply_int(long x, long y) {\n    if (x == 0 || y == 0) {\n        return 0;\n    }\n    long result = 0;\n    while (y != 0) {\n        if (y & 1) {\n            result += x;\n        }\n        x <<= 1;\n        y >>= 1;\n    }\n    return result;\n}\nint main() {\n    auto candidate = multiply_int;\n    assert(candidate((10), (20)) == (200));\n    assert(candidate((5), (10)) == (50));\n    assert(candidate((4), (8)) == (32));\n}\n",
      "timestamp": 1666122940,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to multiply two integers.\nlong multiply_int(long x, long y) {\n    long sum = 0;\n    while (y != 0) {\n        if (y & 1) {\n            sum = sum + x;\n        }\n        x <<= 1;\n        y >>= 1;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = multiply_int;\n    assert(candidate((10), (20)) == (200));\n    assert(candidate((5), (10)) == (50));\n    assert(candidate((4), (8)) == (32));\n}\n",
      "timestamp": 1665510245,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to multiply two integers.\nlong multiply_int(long x, long y) {\n    // TODO: Your code here\n    if(x==0 || y==0)\n        return 0;\n    if(x==1)\n        return y;\n    if(y==1)\n        return x;\n    long ans = multiply_int(x,y/2);\n    if(y%2==0)\n        return ans+ans;\n    else\n        return ans+ans+x;\n}\nint main() {\n    auto candidate = multiply_int;\n    assert(candidate((10), (20)) == (200));\n    assert(candidate((5), (10)) == (50));\n    assert(candidate((4), (8)) == (32));\n}\n",
      "timestamp": 1666122946,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to multiply two integers.\nlong multiply_int(long x, long y) {\n    long result = 0;\n    while (y != 0) {\n        if (y & 1)\n            result = result + x;\n        x = x << 1;\n        y = y >> 1;\n    }\n    return result;\n}\nint main() {\n    auto candidate = multiply_int;\n    assert(candidate((10), (20)) == (200));\n    assert(candidate((5), (10)) == (50));\n    assert(candidate((4), (8)) == (32));\n}\n",
      "timestamp": 1666122946,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to multiply two integers.\nlong multiply_int(long x, long y) {\n    long result = 0;\n    while (y > 0) {\n        if (y & 1) {\n            result += x;\n        }\n        x <<= 1;\n        y >>= 1;\n    }\n    return result;\n}\nint main() {\n    auto candidate = multiply_int;\n    assert(candidate((10), (20)) == (200));\n    assert(candidate((5), (10)) == (50));\n    assert(candidate((4), (8)) == (32));\n}\n",
      "timestamp": 1665510247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to multiply two integers.\nlong multiply_int(long x, long y) {\n  if(x == 0 || y == 0) {\n    return 0;\n  }\n  if(x == 1) {\n    return y;\n  }\n  if(y == 1) {\n    return x;\n  }\n  long result = 0;\n  if(x > 0 && y > 0) {\n    for(int i = 0; i < y; i++) {\n      result += x;\n    }\n  }\n  if(x < 0 && y < 0) {\n    for(int i = 0; i < y; i++) {\n      result += x;\n    }\n  }\n  if(x < 0 && y > 0) {\n    for(int i = 0; i < y; i++) {\n      result += x;\n    }\n  }\n  if(x > 0 && y < 0) {\n    for(int i = 0; i < y; i++) {\n      result += x;\n    }\n  }\n  return result;\n}\nint main() {\n    auto candidate = multiply_int;\n    assert(candidate((10), (20)) == (200));\n    assert(candidate((5), (10)) == (50));\n    assert(candidate((4), (8)) == (32));\n}\n",
      "timestamp": 1666122946,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to multiply two integers.\nlong multiply_int(long x, long y) {\n  long result = 0;\n  while (y > 0) {\n    if (y & 1) {\n      result += x;\n    }\n    x <<= 1;\n    y >>= 1;\n  }\n  return result;\n}\nint main() {\n    auto candidate = multiply_int;\n    assert(candidate((10), (20)) == (200));\n    assert(candidate((5), (10)) == (50));\n    assert(candidate((4), (8)) == (32));\n}\n",
      "timestamp": 1665510245,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to multiply two integers.\nlong multiply_int(long x, long y) {\n    long result = 0;\n    while (y) {\n        if (y & 1) {\n            result += x;\n        }\n        x <<= 1;\n        y >>= 1;\n    }\n    return result;\n}\nint main() {\n    auto candidate = multiply_int;\n    assert(candidate((10), (20)) == (200));\n    assert(candidate((5), (10)) == (50));\n    assert(candidate((4), (8)) == (32));\n}\n",
      "timestamp": 1665510245,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to multiply two integers.\nlong multiply_int(long x, long y) {\n    if (y == 0) return 0;\n    return x + multiply_int(x, y - 1);\n}\nint main() {\n    auto candidate = multiply_int;\n    assert(candidate((10), (20)) == (200));\n    assert(candidate((5), (10)) == (50));\n    assert(candidate((4), (8)) == (32));\n}\n",
      "timestamp": 1666122946,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to multiply two integers.\nlong multiply_int(long x, long y) {\n    long result = 0;\n    while (y) {\n        if (y & 1) {\n            result += x;\n        }\n        x <<= 1;\n        y >>= 1;\n    }\n    return result;\n}\nint main() {\n    auto candidate = multiply_int;\n    assert(candidate((10), (20)) == (200));\n    assert(candidate((5), (10)) == (50));\n    assert(candidate((4), (8)) == (32));\n}\n",
      "timestamp": 1665510245,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to multiply two integers.\nlong multiply_int(long x, long y) {\n  if (x == 0 || y == 0) {\n    return 0;\n  }\n  if (x == 1) {\n    return y;\n  }\n  if (y == 1) {\n    return x;\n  }\n  if (x == -1) {\n    return -y;\n  }\n  if (y == -1) {\n    return -x;\n  }\n  if (x < 0 && y < 0) {\n    return multiply_int(-x, -y);\n  }\n  if (x < 0) {\n    return -multiply_int(-x, y);\n  }\n  if (y < 0) {\n    return -multiply_int(x, -y);\n  }\n  return x + multiply_int(x, y - 1);\n}\nint main() {\n    auto candidate = multiply_int;\n    assert(candidate((10), (20)) == (200));\n    assert(candidate((5), (10)) == (50));\n    assert(candidate((4), (8)) == (32));\n}\n",
      "timestamp": 1666122946,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to multiply two integers.\nlong multiply_int(long x, long y) {\n    long result = 0;\n    while (y) {\n        if (y & 1) {\n            result += x;\n        }\n        x <<= 1;\n        y >>= 1;\n    }\n    return result;\n}\nint main() {\n    auto candidate = multiply_int;\n    assert(candidate((10), (20)) == (200));\n    assert(candidate((5), (10)) == (50));\n    assert(candidate((4), (8)) == (32));\n}\n",
      "timestamp": 1665510245,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to multiply two integers.\nlong multiply_int(long x, long y) {\n    long sum = 0;\n    while (y != 0) {\n        if (y & 1) {\n            sum = sum + x;\n        }\n        x <<= 1;\n        y >>= 1;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = multiply_int;\n    assert(candidate((10), (20)) == (200));\n    assert(candidate((5), (10)) == (50));\n    assert(candidate((4), (8)) == (32));\n}\n",
      "timestamp": 1665510245,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to multiply two integers.\nlong multiply_int(long x, long y) {\n    // Write your code here\n    long result = 0;\n    while(y != 0) {\n        if(y & 1) {\n            result += x;\n        }\n        x <<= 1;\n        y >>= 1;\n    }\n    return result;\n}\nint main() {\n    auto candidate = multiply_int;\n    assert(candidate((10), (20)) == (200));\n    assert(candidate((5), (10)) == (50));\n    assert(candidate((4), (8)) == (32));\n}\n",
      "timestamp": 1666122940,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to multiply two integers.\nlong multiply_int(long x, long y) {\n    if (y == 0) {\n        return 0;\n    }\n    long sum = x + multiply_int(x, y - 1);\n    return sum;\n}\nint main() {\n    auto candidate = multiply_int;\n    assert(candidate((10), (20)) == (200));\n    assert(candidate((5), (10)) == (50));\n    assert(candidate((4), (8)) == (32));\n}\n",
      "timestamp": 1666122946,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to multiply two integers.\nlong multiply_int(long x, long y) {\n\tif (x == 0 || y == 0)\n\t\treturn 0;\n\tif (x == 1)\n\t\treturn y;\n\tif (y == 1)\n\t\treturn x;\n\tlong result = 0;\n\tif (x < 0 && y < 0) {\n\t\tx = -x;\n\t\ty = -y;\n\t}\n\tif (x < 0) {\n\t\tx = -x;\n\t\tresult = -y;\n\t}\n\tif (y < 0) {\n\t\ty = -y;\n\t\tresult = -x;\n\t}\n\tif (x < y) {\n\t\tlong temp = x;\n\t\tx = y;\n\t\ty = temp;\n\t}\n\twhile (y > 0) {\n\t\tif (y & 1)\n\t\t\tresult += x;\n\t\tx <<= 1;\n\t\ty >>= 1;\n\t}\n\treturn result;\n}\nint main() {\n    auto candidate = multiply_int;\n    assert(candidate((10), (20)) == (200));\n    assert(candidate((5), (10)) == (50));\n    assert(candidate((4), (8)) == (32));\n}\n",
      "timestamp": 1666122946,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to multiply two integers.\nlong multiply_int(long x, long y) {\n    long result = 0;\n    while (y) {\n        if (y & 1) {\n            result += x;\n        }\n        x <<= 1;\n        y >>= 1;\n    }\n    return result;\n}\nint main() {\n    auto candidate = multiply_int;\n    assert(candidate((10), (20)) == (200));\n    assert(candidate((5), (10)) == (50));\n    assert(candidate((4), (8)) == (32));\n}\n",
      "timestamp": 1665510245,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to multiply two integers.\nlong multiply_int(long x, long y) {\n  long result = 0;\n  while (y != 0) {\n    if (y & 1)\n      result = result + x;\n    x = x << 1;\n    y = y >> 1;\n  }\n  return result;\n}\nint main() {\n    auto candidate = multiply_int;\n    assert(candidate((10), (20)) == (200));\n    assert(candidate((5), (10)) == (50));\n    assert(candidate((4), (8)) == (32));\n}\n",
      "timestamp": 1666122946,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to multiply two integers.\nlong multiply_int(long x, long y) {\n    long result = 0;\n    while (y != 0) {\n        if (y & 1) {\n            result += x;\n        }\n        x <<= 1;\n        y >>= 1;\n    }\n    return result;\n}\nint main() {\n    auto candidate = multiply_int;\n    assert(candidate((10), (20)) == (200));\n    assert(candidate((5), (10)) == (50));\n    assert(candidate((4), (8)) == (32));\n}\n",
      "timestamp": 1665510245,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to multiply two integers.\nlong multiply_int(long x, long y) {\n  long sum = 0;\n  while (y != 0) {\n    if (y & 1) {\n      sum = sum + x;\n    }\n    x <<= 1;\n    y >>= 1;\n  }\n  return sum;\n}\nint main() {\n    auto candidate = multiply_int;\n    assert(candidate((10), (20)) == (200));\n    assert(candidate((5), (10)) == (50));\n    assert(candidate((4), (8)) == (32));\n}\n",
      "timestamp": 1665510245,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to multiply two integers.\nlong multiply_int(long x, long y) {\n    long result = 0;\n    while (y) {\n        if (y & 1) {\n            result += x;\n        }\n        x <<= 1;\n        y >>= 1;\n    }\n    return result;\n}\nint main() {\n    auto candidate = multiply_int;\n    assert(candidate((10), (20)) == (200));\n    assert(candidate((5), (10)) == (50));\n    assert(candidate((4), (8)) == (32));\n}\n",
      "timestamp": 1665510245,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to multiply two integers.\nlong multiply_int(long x, long y) {\n  long sum = 0;\n  while (y != 0) {\n    if (y & 1) {\n      sum = sum + x;\n    }\n    x <<= 1;\n    y >>= 1;\n  }\n  return sum;\n}\nint main() {\n    auto candidate = multiply_int;\n    assert(candidate((10), (20)) == (200));\n    assert(candidate((5), (10)) == (50));\n    assert(candidate((4), (8)) == (32));\n}\n",
      "timestamp": 1665510245,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to multiply two integers.\nlong multiply_int(long x, long y) {\n    if(x == 0 || y == 0)\n        return 0;\n    if(x == 1)\n        return y;\n    if(y == 1)\n        return x;\n    long result = 0;\n    if(x < 0 && y < 0) {\n        x = -x;\n        y = -y;\n    }\n    if(x < 0) {\n        x = -x;\n        result = multiply_int(x, y);\n        result = -result;\n    }\n    if(y < 0) {\n        y = -y;\n        result = multiply_int(x, y);\n        result = -result;\n    }\n    if(x < y) {\n        result = multiply_int(y, x);\n    }\n    else {\n        result = x;\n        for(int i = 1; i < y; ++i) {\n            result += x;\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = multiply_int;\n    assert(candidate((10), (20)) == (200));\n    assert(candidate((5), (10)) == (50));\n    assert(candidate((4), (8)) == (32));\n}\n",
      "timestamp": 1666122946,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to multiply two integers.\nlong multiply_int(long x, long y) {\n    long result = 0;\n    while (y > 0) {\n        if (y & 1) {\n            result += x;\n        }\n        x <<= 1;\n        y >>= 1;\n    }\n    return result;\n}\nint main() {\n    auto candidate = multiply_int;\n    assert(candidate((10), (20)) == (200));\n    assert(candidate((5), (10)) == (50));\n    assert(candidate((4), (8)) == (32));\n}\n",
      "timestamp": 1665510247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to multiply two integers.\nlong multiply_int(long x, long y) {\n    long result = 0;\n    while (y > 0) {\n        if (y & 1) {\n            result += x;\n        }\n        x <<= 1;\n        y >>= 1;\n    }\n    return result;\n}\nint main() {\n    auto candidate = multiply_int;\n    assert(candidate((10), (20)) == (200));\n    assert(candidate((5), (10)) == (50));\n    assert(candidate((4), (8)) == (32));\n}\n",
      "timestamp": 1665510247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to multiply two integers.\nlong multiply_int(long x, long y) {\n    long sum = 0;\n    while (y != 0) {\n        if (y & 1) {\n            sum = sum + x;\n        }\n        x <<= 1;\n        y >>= 1;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = multiply_int;\n    assert(candidate((10), (20)) == (200));\n    assert(candidate((5), (10)) == (50));\n    assert(candidate((4), (8)) == (32));\n}\n",
      "timestamp": 1665510245,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to multiply two integers.\nlong multiply_int(long x, long y) {\n    long result = 0;\n    while (y > 0) {\n        if (y & 1) {\n            result += x;\n        }\n        x <<= 1;\n        y >>= 1;\n    }\n    return result;\n}\nint main() {\n    auto candidate = multiply_int;\n    assert(candidate((10), (20)) == (200));\n    assert(candidate((5), (10)) == (50));\n    assert(candidate((4), (8)) == (32));\n}\n",
      "timestamp": 1665510247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to multiply two integers.\nlong multiply_int(long x, long y) {\n    if (x == 0 || y == 0) {\n        return 0;\n    }\n    long result = 0;\n    while (y != 0) {\n        if (y & 1) {\n            result += x;\n        }\n        x <<= 1;\n        y >>= 1;\n    }\n    return result;\n}\nint main() {\n    auto candidate = multiply_int;\n    assert(candidate((10), (20)) == (200));\n    assert(candidate((5), (10)) == (50));\n    assert(candidate((4), (8)) == (32));\n}\n",
      "timestamp": 1666122940,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to multiply two integers.\nlong multiply_int(long x, long y) {\n\tlong sum = 0;\n\twhile (y != 0) {\n\t\tif (y & 1) {\n\t\t\tsum = sum + x;\n\t\t}\n\t\tx <<= 1;\n\t\ty >>= 1;\n\t}\n\treturn sum;\n}\nint main() {\n    auto candidate = multiply_int;\n    assert(candidate((10), (20)) == (200));\n    assert(candidate((5), (10)) == (50));\n    assert(candidate((4), (8)) == (32));\n}\n",
      "timestamp": 1665510245,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to multiply two integers.\nlong multiply_int(long x, long y) {\n    long result = 0;\n    while (y != 0) {\n        if (y & 1) {\n            result = result + x;\n        }\n        x = x << 1;\n        y = y >> 1;\n    }\n    return result;\n}\nint main() {\n    auto candidate = multiply_int;\n    assert(candidate((10), (20)) == (200));\n    assert(candidate((5), (10)) == (50));\n    assert(candidate((4), (8)) == (32));\n}\n",
      "timestamp": 1666122938,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to multiply two integers.\nlong multiply_int(long x, long y) {\n    long sum = 0;\n    while (y != 0) {\n        if (y & 1) {\n            sum = sum + x;\n        }\n        x <<= 1;\n        y >>= 1;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = multiply_int;\n    assert(candidate((10), (20)) == (200));\n    assert(candidate((5), (10)) == (50));\n    assert(candidate((4), (8)) == (32));\n}\n",
      "timestamp": 1665510245,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to multiply two integers.\nlong multiply_int(long x, long y) {\n    long sum = 0;\n    while (x) {\n        if (x & 1) {\n            sum = sum + y;\n        }\n        x >>= 1;\n        y <<= 1;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = multiply_int;\n    assert(candidate((10), (20)) == (200));\n    assert(candidate((5), (10)) == (50));\n    assert(candidate((4), (8)) == (32));\n}\n",
      "timestamp": 1666122946,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to multiply two integers.\nlong multiply_int(long x, long y) {\n  long sum = 0;\n  while (y != 0) {\n    if (y & 1) {\n      sum = sum + x;\n    }\n    x <<= 1;\n    y >>= 1;\n  }\n  return sum;\n}\nint main() {\n    auto candidate = multiply_int;\n    assert(candidate((10), (20)) == (200));\n    assert(candidate((5), (10)) == (50));\n    assert(candidate((4), (8)) == (32));\n}\n",
      "timestamp": 1665510245,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to multiply two integers.\nlong multiply_int(long x, long y) {\n  long result = 0;\n  while (y != 0) {\n    if (y & 1) {\n      result += x;\n    }\n    x <<= 1;\n    y >>= 1;\n  }\n  return result;\n}\nint main() {\n    auto candidate = multiply_int;\n    assert(candidate((10), (20)) == (200));\n    assert(candidate((5), (10)) == (50));\n    assert(candidate((4), (8)) == (32));\n}\n",
      "timestamp": 1665510245,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to multiply two integers.\nlong multiply_int(long x, long y) {\n    if (x == 0 || y == 0) {\n        return 0;\n    }\n    if (x == 1) {\n        return y;\n    }\n    if (y == 1) {\n        return x;\n    }\n    long result = 0;\n    for (int i = 0; i < y; i++) {\n        result += x;\n    }\n    return result;\n}\nint main() {\n    auto candidate = multiply_int;\n    assert(candidate((10), (20)) == (200));\n    assert(candidate((5), (10)) == (50));\n    assert(candidate((4), (8)) == (32));\n}\n",
      "timestamp": 1666122946,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to multiply two integers.\nlong multiply_int(long x, long y) {\n    if (y == 0) return 0;\n    long z = multiply_int(x, y/2);\n    if (y % 2 == 0) return 2*z;\n    else return x + 2*z;\n}\nint main() {\n    auto candidate = multiply_int;\n    assert(candidate((10), (20)) == (200));\n    assert(candidate((5), (10)) == (50));\n    assert(candidate((4), (8)) == (32));\n}\n",
      "timestamp": 1666122940,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to multiply two integers.\nlong multiply_int(long x, long y) {\n  long sum = 0;\n  while (y != 0) {\n    if (y & 1) {\n      sum = sum + x;\n    }\n    x <<= 1;\n    y >>= 1;\n  }\n  return sum;\n}\nint main() {\n    auto candidate = multiply_int;\n    assert(candidate((10), (20)) == (200));\n    assert(candidate((5), (10)) == (50));\n    assert(candidate((4), (8)) == (32));\n}\n",
      "timestamp": 1665510245,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to multiply two integers.\nlong multiply_int(long x, long y) {\n    if (y == 0) {\n        return 0;\n    }\n    long z = multiply_int(x, y / 2);\n    if (y % 2 == 0) {\n        return 2 * z;\n    } else {\n        return x + 2 * z;\n    }\n}\nint main() {\n    auto candidate = multiply_int;\n    assert(candidate((10), (20)) == (200));\n    assert(candidate((5), (10)) == (50));\n    assert(candidate((4), (8)) == (32));\n}\n",
      "timestamp": 1666122946,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to multiply two integers.\nlong multiply_int(long x, long y) {\n    if (x == 0 || y == 0)\n        return 0;\n    if (x == 1)\n        return y;\n    if (y == 1)\n        return x;\n    long result = 0;\n    if (x < 0 && y < 0) {\n        x = -x;\n        y = -y;\n    }\n    if (x < 0) {\n        result = multiply_int(y, -x);\n        return -result;\n    }\n    if (y < 0) {\n        result = multiply_int(x, -y);\n        return -result;\n    }\n    if (x < y) {\n        result = multiply_int(y, x);\n        return result;\n    }\n    result = x + multiply_int(x, y - 1);\n    return result;\n}\nint main() {\n    auto candidate = multiply_int;\n    assert(candidate((10), (20)) == (200));\n    assert(candidate((5), (10)) == (50));\n    assert(candidate((4), (8)) == (32));\n}\n",
      "timestamp": 1666122946,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to multiply two integers.\nlong multiply_int(long x, long y) {\n    long sum = 0;\n    while (y != 0) {\n        if (y & 1) {\n            sum = sum + x;\n        }\n        x = x << 1;\n        y = y >> 1;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = multiply_int;\n    assert(candidate((10), (20)) == (200));\n    assert(candidate((5), (10)) == (50));\n    assert(candidate((4), (8)) == (32));\n}\n",
      "timestamp": 1665510247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to multiply two integers.\nlong multiply_int(long x, long y) {\n    // TODO: Write your code here\n    long result = 0;\n    while (y > 0) {\n        if (y & 1) {\n            result += x;\n        }\n        x <<= 1;\n        y >>= 1;\n    }\n    return result;\n}\nint main() {\n    auto candidate = multiply_int;\n    assert(candidate((10), (20)) == (200));\n    assert(candidate((5), (10)) == (50));\n    assert(candidate((4), (8)) == (32));\n}\n",
      "timestamp": 1666122946,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to multiply two integers.\nlong multiply_int(long x, long y) {\n  long result = 0;\n  while (y > 0) {\n    if (y & 1) {\n      result += x;\n    }\n    x <<= 1;\n    y >>= 1;\n  }\n  return result;\n}\nint main() {\n    auto candidate = multiply_int;\n    assert(candidate((10), (20)) == (200));\n    assert(candidate((5), (10)) == (50));\n    assert(candidate((4), (8)) == (32));\n}\n",
      "timestamp": 1665510245,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to multiply two integers.\nlong multiply_int(long x, long y) {\n    long result = 0;\n    while (y != 0) {\n        if (y & 1) {\n            result = result + x;\n        }\n        x = x << 1;\n        y = y >> 1;\n    }\n    return result;\n}\nint main() {\n    auto candidate = multiply_int;\n    assert(candidate((10), (20)) == (200));\n    assert(candidate((5), (10)) == (50));\n    assert(candidate((4), (8)) == (32));\n}\n",
      "timestamp": 1666122938,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to multiply two integers.\nlong multiply_int(long x, long y) {\n    // Write your code here\n    if(x == 0 || y == 0) return 0;\n    if(x == 1) return y;\n    if(y == 1) return x;\n    if(x == -1) return -y;\n    if(y == -1) return -x;\n    if(x == INT_MIN && y == -1) return INT_MAX;\n    if(y == INT_MIN && x == -1) return INT_MAX;\n    if(x == INT_MIN && y == 1) return INT_MIN;\n    if(y == INT_MIN && x == 1) return INT_MIN;\n    if(x == INT_MIN && y == INT_MIN) return 1;\n    if(x == INT_MAX && y == INT_MAX) return 1;\n    if(x == INT_MAX && y == -1) return INT_MIN;\n    if(y == INT_MAX && x == -1) return INT_MIN;\n    if(x == INT_MAX && y == 1) return INT_MAX;\n    if(y == INT_MAX && x == 1) return INT_MAX;\n    if(x == INT_MAX && y == INT_MIN) return -1;\n    if(y == INT_MAX && x == INT_MIN) return -1;\n    if(x == INT_MIN && y == INT_MAX) return -1;\n    if(y == INT_MIN && x == INT_MAX) return -1;\n    if(x == INT_MIN) return -multiply_int(-x, y);\n    if(y == INT_MIN) return -multiply_int(x, -y);\n    if(x == INT_MAX) return -multiply_int(-x, y);\n    if(y == INT_MAX) return -multiply_int(x, -y);\n    if(x < 0 && y < 0) return multiply_int(-x, -y);\n    if(x < 0) return -multiply_int(-x, y);\n    if(y < 0) return -multiply_int(x, -y);\n    long result = 0;\n    while(y > 0)\n}\nint main() {\n    auto candidate = multiply_int;\n    assert(candidate((10), (20)) == (200));\n    assert(candidate((5), (10)) == (50));\n    assert(candidate((4), (8)) == (32));\n}\n",
      "timestamp": 1666122946,
      "stdout": "",
      "stderr": "/tmp/tmpyzpba8no.cpp: In function \u2018long int multiply_int(long int, long int)\u2019:\n/tmp/tmpyzpba8no.cpp:34:1: error: expected primary-expression before \u2018}\u2019 token\n   34 | }\n      | ^\n/tmp/tmpyzpba8no.cpp:34:1: warning: control reaches end of non-void function [-Wreturn-type]\n   34 | }\n      | ^\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to multiply two integers.\nlong multiply_int(long x, long y) {\n    long result = 0;\n    while (y != 0) {\n        if (y & 1) {\n            result += x;\n        }\n        x <<= 1;\n        y >>= 1;\n    }\n    return result;\n}\nint main() {\n    auto candidate = multiply_int;\n    assert(candidate((10), (20)) == (200));\n    assert(candidate((5), (10)) == (50));\n    assert(candidate((4), (8)) == (32));\n}\n",
      "timestamp": 1665510245,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to multiply two integers.\nlong multiply_int(long x, long y) {\n    if (x == 0 || y == 0) {\n        return 0;\n    }\n    long z = multiply_int(x, y/2);\n    if (y % 2 == 0) {\n        return 2 * z;\n    } else {\n        return x + 2 * z;\n    }\n}\nint main() {\n    auto candidate = multiply_int;\n    assert(candidate((10), (20)) == (200));\n    assert(candidate((5), (10)) == (50));\n    assert(candidate((4), (8)) == (32));\n}\n",
      "timestamp": 1666122938,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to multiply two integers.\nlong multiply_int(long x, long y) {\n    long result = 0;\n    while (y != 0) {\n        if (y & 1) {\n            result = result + x;\n        }\n        x = x << 1;\n        y = y >> 1;\n    }\n    return result;\n}\nint main() {\n    auto candidate = multiply_int;\n    assert(candidate((10), (20)) == (200));\n    assert(candidate((5), (10)) == (50));\n    assert(candidate((4), (8)) == (32));\n}\n",
      "timestamp": 1666122938,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to multiply two integers.\nlong multiply_int(long x, long y) {\n\tlong result = 0;\n\twhile (y > 0) {\n\t\tif (y & 1) {\n\t\t\tresult += x;\n\t\t}\n\t\tx <<= 1;\n\t\ty >>= 1;\n\t}\n\treturn result;\n}\nint main() {\n    auto candidate = multiply_int;\n    assert(candidate((10), (20)) == (200));\n    assert(candidate((5), (10)) == (50));\n    assert(candidate((4), (8)) == (32));\n}\n",
      "timestamp": 1666122946,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to multiply two integers.\nlong multiply_int(long x, long y) {\n  // Write your code here\n  long result = 0;\n  while(y) {\n    if(y & 1) {\n      result += x;\n    }\n    x <<= 1;\n    y >>= 1;\n  }\n  return result;\n}\nint main() {\n    auto candidate = multiply_int;\n    assert(candidate((10), (20)) == (200));\n    assert(candidate((5), (10)) == (50));\n    assert(candidate((4), (8)) == (32));\n}\n",
      "timestamp": 1666122946,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to multiply two integers.\nlong multiply_int(long x, long y) {\n    long result = 0;\n    while (y != 0) {\n        if (y & 1) {\n            result += x;\n        }\n        x <<= 1;\n        y >>= 1;\n    }\n    return result;\n}\nint main() {\n    auto candidate = multiply_int;\n    assert(candidate((10), (20)) == (200));\n    assert(candidate((5), (10)) == (50));\n    assert(candidate((4), (8)) == (32));\n}\n",
      "timestamp": 1665510245,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to multiply two integers.\nlong multiply_int(long x, long y) {\n  long result = 0;\n  while (y != 0) {\n    if (y & 1) {\n      result = result + x;\n    }\n    x = x << 1;\n    y = y >> 1;\n  }\n  return result;\n}\nint main() {\n    auto candidate = multiply_int;\n    assert(candidate((10), (20)) == (200));\n    assert(candidate((5), (10)) == (50));\n    assert(candidate((4), (8)) == (32));\n}\n",
      "timestamp": 1666122946,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to multiply two integers.\nlong multiply_int(long x, long y) {\n  long result = 0;\n  while (y) {\n    if (y & 1) {\n      result += x;\n    }\n    x <<= 1;\n    y >>= 1;\n  }\n  return result;\n}\nint main() {\n    auto candidate = multiply_int;\n    assert(candidate((10), (20)) == (200));\n    assert(candidate((5), (10)) == (50));\n    assert(candidate((4), (8)) == (32));\n}\n",
      "timestamp": 1666122938,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to multiply two integers.\nlong multiply_int(long x, long y) {\n    long result = 0;\n    while (y) {\n        if (y & 1) {\n            result += x;\n        }\n        x <<= 1;\n        y >>= 1;\n    }\n    return result;\n}\nint main() {\n    auto candidate = multiply_int;\n    assert(candidate((10), (20)) == (200));\n    assert(candidate((5), (10)) == (50));\n    assert(candidate((4), (8)) == (32));\n}\n",
      "timestamp": 1665510245,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to multiply two integers.\nlong multiply_int(long x, long y) {\n    long result = 0;\n    while (y) {\n        if (y & 1) {\n            result += x;\n        }\n        x <<= 1;\n        y >>= 1;\n    }\n    return result;\n}\nint main() {\n    auto candidate = multiply_int;\n    assert(candidate((10), (20)) == (200));\n    assert(candidate((5), (10)) == (50));\n    assert(candidate((4), (8)) == (32));\n}\n",
      "timestamp": 1665510245,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to multiply two integers.\nlong multiply_int(long x, long y) {\n  if (x == 0 || y == 0) return 0;\n  if (x == 1) return y;\n  if (y == 1) return x;\n  long result = 0;\n  if (x < 0 && y < 0) {\n    x = -x;\n    y = -y;\n  }\n  if (x < 0) {\n    result = multiply_int(y, -x);\n    return -result;\n  }\n  if (y < 0) {\n    result = multiply_int(x, -y);\n    return -result;\n  }\n  if (x > y) {\n    result = multiply_int(y, x);\n    return result;\n  }\n  result = x + multiply_int(x, y - 1);\n  return result;\n}\nint main() {\n    auto candidate = multiply_int;\n    assert(candidate((10), (20)) == (200));\n    assert(candidate((5), (10)) == (50));\n    assert(candidate((4), (8)) == (32));\n}\n",
      "timestamp": 1666122946,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to multiply two integers.\nlong multiply_int(long x, long y) {\n    long result = 0;\n    while (y > 0) {\n        if (y & 1) {\n            result += x;\n        }\n        x <<= 1;\n        y >>= 1;\n    }\n    return result;\n}\nint main() {\n    auto candidate = multiply_int;\n    assert(candidate((10), (20)) == (200));\n    assert(candidate((5), (10)) == (50));\n    assert(candidate((4), (8)) == (32));\n}\n",
      "timestamp": 1665510247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to multiply two integers.\nlong multiply_int(long x, long y) {\n  // TODO: Write your code here\n  long result = 0;\n  while (y) {\n    if (y & 1) {\n      result += x;\n    }\n    x <<= 1;\n    y >>= 1;\n  }\n  return result;\n}\nint main() {\n    auto candidate = multiply_int;\n    assert(candidate((10), (20)) == (200));\n    assert(candidate((5), (10)) == (50));\n    assert(candidate((4), (8)) == (32));\n}\n",
      "timestamp": 1666122946,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to multiply two integers.\nlong multiply_int(long x, long y) {\n    long result = 0;\n    while (y) {\n        if (y & 1) {\n            result += x;\n        }\n        x <<= 1;\n        y >>= 1;\n    }\n    return result;\n}\nint main() {\n    auto candidate = multiply_int;\n    assert(candidate((10), (20)) == (200));\n    assert(candidate((5), (10)) == (50));\n    assert(candidate((4), (8)) == (32));\n}\n",
      "timestamp": 1665510245,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to multiply two integers.\nlong multiply_int(long x, long y) {\n    if (x == 0 || y == 0) {\n        return 0;\n    }\n    if (x == 1) {\n        return y;\n    }\n    if (y == 1) {\n        return x;\n    }\n    if (x == -1) {\n        return -y;\n    }\n    if (y == -1) {\n        return -x;\n    }\n    if (x == 2) {\n        return y << 1;\n    }\n    if (y == 2) {\n        return x << 1;\n    }\n    if (x == -2) {\n        return y << 1;\n    }\n    if (y == -2) {\n        return x << 1;\n    }\n    if (x == 3) {\n        return y + y + y;\n    }\n    if (y == 3) {\n        return x + x + x;\n    }\n    if (x == -3) {\n        return -(y + y + y);\n    }\n    if (y == -3) {\n        return -(x + x + x);\n    }\n    if (x == 4) {\n        return y << 2;\n    }\n    if (y == 4) {\n        return x << 2;\n    }\n    if (x == -4) {\n        return y << 2;\n    }\n    if (y == -4) {\n        return x << 2;\n    }\n    if (x == 5) {\n        return y + y + y + y + y;\n    }\n    if (y == 5) {\n        return x + x + x + x + x;\n    }\n    if (x == -5) {\n        return -(y + y + y + y + y);\n    }\n    if (y == -5) {\n        return -(x + x + x + x + x);\n    }\n    if (x == 6) {\n        return y + y + y + y + y + y;\n    }\n    if (y == 6) {\n        return x + x + x + x + x + x;\n    }\n    if (x == -6) {\n        return\n}\nint main() {\n    auto candidate = multiply_int;\n    assert(candidate((10), (20)) == (200));\n    assert(candidate((5), (10)) == (50));\n    assert(candidate((4), (8)) == (32));\n}\n",
      "timestamp": 1666122946,
      "stdout": "",
      "stderr": "/tmp/tmpnkk7gzp3.cpp: In function \u2018long int multiply_int(long int, long int)\u2019:\n/tmp/tmpnkk7gzp3.cpp:76:1: error: expected primary-expression before \u2018}\u2019 token\n   76 | }\n      | ^\n/tmp/tmpnkk7gzp3.cpp:75:15: error: expected \u2018;\u2019 before \u2018}\u2019 token\n   75 |         return\n      |               ^\n      |               ;\n   76 | }\n      | ~              \n/tmp/tmpnkk7gzp3.cpp:77:12: error: a function-definition is not allowed here before \u2018{\u2019 token\n   77 | int main() {\n      |            ^\n/tmp/tmpnkk7gzp3.cpp:82:1: error: expected \u2018}\u2019 at end of input\n   82 | }\n      | ^\n/tmp/tmpnkk7gzp3.cpp:4:35: note: to match this \u2018{\u2019\n    4 | long multiply_int(long x, long y) {\n      |                                   ^\n",
      "exit_code": 1,
      "status": "SyntaxError"
    }
  ]
}
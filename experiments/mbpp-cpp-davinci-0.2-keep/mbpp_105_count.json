{
  "name": "mbpp_105_count",
  "language": "cpp",
  "prompt": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to count true booleans in the given list.\nlong count(std::vector<bool> lst) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_105_count.py",
  "prompt_terminology": "verbatim",
  "tests": "}\nint main() {\n    auto candidate = count;\n    assert(candidate((std::vector<bool>({(bool)true, (bool)false, (bool)true}))) == (2));\n    assert(candidate((std::vector<bool>({(bool)false, (bool)false}))) == (0));\n    assert(candidate((std::vector<bool>({(bool)true, (bool)true, (bool)true}))) == (3));\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    long count = 0;\n    for(int i=0;i<lst.size();i++){\n        if(lst[i]==true){\n            count++;\n        }\n    }\n    return count;",
    "    long count = 0;\n    for(int i=0; i<lst.size(); i++) {\n        if(lst[i] == true) {\n            count++;\n        }\n    }\n    return count;",
    "    long count = 0;\n    for(int i=0;i<lst.size();i++){\n        if(lst[i]==true){\n            count++;\n        }\n    }\n    return count;",
    "    long count = 0;\n    for(int i=0;i<lst.size();i++) {\n        if(lst[i] == true) {\n            count++;\n        }\n    }\n    return count;",
    "    long count = 0;\n    for(int i=0;i<lst.size();i++)\n    {\n        if(lst[i]==1)\n        {\n            count++;\n        }\n    }\n    return count;",
    "    long count = 0;\n    for(int i = 0; i < lst.size(); i++) {\n        if(lst[i] == true)\n            count++;\n    }\n    return count;",
    "    long count = 0;\n    for(int i=0;i<lst.size();i++)\n    {\n        if(lst[i]==true)\n            count++;\n    }\n    return count;",
    "    long count = 0;\n    for(int i = 0; i < lst.size(); i++) {\n        if(lst[i] == true) {\n            count++;\n        }\n    }\n    return count;",
    "    long count = 0;\n    for(int i=0;i<lst.size();i++){\n        if(lst[i]==true){\n            count++;\n        }\n    }\n    return count;",
    "    long count = 0;\n    for(int i=0;i<lst.size();i++){\n        if(lst[i]==true){\n            count++;\n        }\n    }\n    return count;",
    "    long count = 0;\n    for(int i = 0; i < lst.size(); i++) {\n        if(lst[i] == true) {\n            count++;\n        }\n    }\n    return count;",
    "    long count = 0;\n    for (int i = 0; i < lst.size(); i++) {\n        if (lst[i] == true) {\n            count++;\n        }\n    }\n    return count;",
    "    long count = 0;\n    for(int i = 0; i < lst.size(); i++) {\n        if(lst[i] == true) {\n            count++;\n        }\n    }\n    return count;",
    "    long count = 0;\n    for(int i = 0; i < lst.size(); i++) {\n        if(lst[i]) {\n            count++;\n        }\n    }\n    return count;",
    "    long count = 0;\n    for(int i=0;i<lst.size();i++)\n    {\n        if(lst[i]==true)\n        {\n            count++;\n        }\n    }\n    return count;",
    "    long count = 0;\n    for (int i = 0; i < lst.size(); i++) {\n        if (lst[i] == true) {\n            count++;\n        }\n    }\n    return count;",
    "    long count = 0;\n    for(int i = 0; i < lst.size(); i++) {\n        if(lst[i] == true) {\n            count++;\n        }\n    }\n    return count;",
    "    long count = 0;\n    for(int i = 0; i < lst.size(); i++) {\n        if(lst[i] == true) {\n            count++;\n        }\n    }\n    return count;",
    "    long count = 0;\n    for(int i = 0; i < lst.size(); i++) {\n        if(lst[i]) {\n            count++;\n        }\n    }\n    return count;",
    "    // Write your code here\n    long count=0;\n    for(int i=0;i<lst.size();i++){\n        if(lst[i]==true){\n            count++;\n        }\n    }\n    return count;"
  ]
}
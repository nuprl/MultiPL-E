{
  "name": "mbpp_404_minimum",
  "language": "cpp",
  "prompt": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find the minimum of two numbers.\nlong minimum(long a, long b) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_404_minimum.py",
  "prompt_terminology": "verbatim",
  "tests": "}\nint main() {\n    auto candidate = minimum;\n    assert(candidate((1), (2)) == (1));\n    assert(candidate((-5), (-4)) == (-5));\n    assert(candidate((0), (0)) == (0));\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    if (a < b) {\n        return a;\n    }\n    return b;",
    "    return a < b ? a : b;",
    "    if (a < b) {\n        return a;\n    }\n    else {\n        return b;\n    }",
    "    return a < b ? a : b;",
    "    if(a<b)\n        return a;\n    else\n        return b;",
    "    return a < b ? a : b;",
    "    return (a < b) ? a : b;",
    "    if (a < b) {\n        return a;\n    }\n    else {\n        return b;\n    }",
    "    if (a < b) {\n        return a;\n    }\n    else {\n        return b;\n    }",
    "    if (a < b) {\n        return a;\n    }\n    return b;",
    "    if (a < b) {\n        return a;\n    }\n    return b;",
    "    if(a < b) {\n        return a;\n    }\n    else {\n        return b;\n    }",
    "    if (a < b)\n        return a;\n    else\n        return b;",
    "\tif (a < b) {\n\t\treturn a;\n\t}\n\telse {\n\t\treturn b;\n\t}",
    "    if (a < b) {\n        return a;\n    }\n    return b;",
    "    if(a<b)\n        return a;\n    else\n        return b;",
    "    return a < b ? a : b;",
    "    if (a < b) {\n        return a;\n    }\n    else {\n        return b;\n    }",
    "    return a < b ? a : b;",
    "    if(a < b)\n        return a;\n    else\n        return b;"
  ]
}
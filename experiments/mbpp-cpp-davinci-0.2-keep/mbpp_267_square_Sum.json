{
  "name": "mbpp_267_square_Sum",
  "language": "cpp",
  "prompt": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nlong square_Sum(long n) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_267_square_Sum.py",
  "prompt_terminology": "verbatim",
  "tests": "}\nint main() {\n    auto candidate = square_Sum;\n    assert(candidate((2)) == (10));\n    assert(candidate((3)) == (35));\n    assert(candidate((4)) == (84));\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    long sum = 0;\n    for(int i = 1; i <= n; i++) {\n        if(i % 2 != 0) {\n            sum += i * i;\n        }\n    }\n    return sum;",
    "    long sum = 0;\n    for(long i = 1; i <= n; i++) {\n        sum += i * i;\n    }\n    return sum;",
    "    long sum = 0;\n    for(long i = 1; i <= n; i++) {\n        sum += pow(2*i - 1, 2);\n    }\n    return sum;",
    "    long sum = 0;\n    for(long i = 1; i <= n; i++) {\n        sum += i*i;\n    }\n    return sum;",
    "    long sum = 0;\n    for(long i = 1; i <= n; i++) {\n        sum += pow(2*i-1, 2);\n    }\n    return sum;",
    "    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        if (i % 2 != 0) {\n            sum += i * i;\n        }\n    }\n    return sum;",
    "    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        if (i % 2 != 0) {\n            sum += i * i;\n        }\n    }\n    return sum;",
    "    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        sum += pow(2 * i - 1, 2);\n    }\n    return sum;",
    "    long sum = 0;\n    for(long i = 1; i <= n; i++) {\n        sum += pow(2*i-1, 2);\n    }\n    return sum;",
    "    long sum = 0;\n    for(long i = 1; i <= n; i++) {\n        sum += i * i;\n    }\n    return sum;",
    "    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        if (i % 2 != 0) {\n            sum += i * i;\n        }\n    }\n    return sum;",
    "    long sum = 0;\n    for(long i = 1; i <= n; i++) {\n        sum += i * i;\n    }\n    return sum;",
    "    long sum = 0;\n    for(int i = 1; i <= n; i++) {\n        sum += pow(2*i - 1, 2);\n    }\n    return sum;",
    "    long sum = 0;\n    for(long i = 1; i <= n; i++) {\n        if(i % 2 != 0) {\n            sum += i * i;\n        }\n    }\n    return sum;",
    "    long sum = 0;\n    for(long i = 1; i <= n; i++) {\n        if(i % 2 != 0) {\n            sum += i * i;\n        }\n    }\n    return sum;",
    "    long sum = 0;\n    for(long i = 1; i <= n; i++) {\n        if(i % 2 != 0) {\n            sum += i * i;\n        }\n    }\n    return sum;",
    "    long sum = 0;\n    for(long i = 1; i <= n; i++) {\n        if(i % 2 != 0) {\n            sum += i * i;\n        }\n    }\n    return sum;",
    "    long sum = 0;\n    for (int i = 1; i <= n; i++) {\n        sum += (2 * i - 1) * (2 * i - 1);\n    }\n    return sum;",
    "    long sum = 0;\n    for (int i = 1; i <= n; i++) {\n        if (i % 2 != 0) {\n            sum += i * i;\n        }\n    }\n    return sum;",
    "    long sum = 0;\n    for (int i = 1; i <= n; i++) {\n        sum += pow(2 * i - 1, 2);\n    }\n    return sum;"
  ]
}
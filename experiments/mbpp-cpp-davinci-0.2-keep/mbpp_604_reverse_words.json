{
  "name": "mbpp_604_reverse_words",
  "language": "cpp",
  "prompt": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to reverse words seperated by spaces in a given string.\nstd::string reverse_words(std::string s) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_604_reverse_words.py",
  "prompt_terminology": "verbatim",
  "tests": "}\nint main() {\n    auto candidate = reverse_words;\n    assert(candidate((\"python program\")) == (\"program python\"));\n    assert(candidate((\"java language\")) == (\"language java\"));\n    assert(candidate((\"indian man\")) == (\"man indian\"));\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    std::string result = \"\";\n    std::string word = \"\";\n    for(int i = 0; i < s.length(); i++) {\n        if(s[i] == ' ') {\n            result = word + \" \" + result;\n            word = \"\";\n        } else {\n            word += s[i];\n        }\n    }\n    result = word + \" \" + result;\n    return result;",
    "    std::string result;\n    std::string word;\n    for(int i=0;i<s.length();i++) {\n        if(s[i] == ' ') {\n            result = word + \" \" + result;\n            word.clear();\n        } else {\n            word += s[i];\n        }\n    }\n    result = word + \" \" + result;\n    return result;",
    "    std::string result;\n    std::string word;\n    for (int i = 0; i < s.size(); i++) {\n        if (s[i] == ' ') {\n            result = word + \" \" + result;\n            word = \"\";\n        } else {\n            word += s[i];\n        }\n    }\n    result = word + \" \" + result;\n    return result;",
    "    std::string result;\n    std::string word;\n    for(int i=0; i<s.length(); i++) {\n        if(s[i] == ' ') {\n            result = word + \" \" + result;\n            word = \"\";\n        } else {\n            word += s[i];\n        }\n    }\n    result = word + \" \" + result;\n    return result;",
    "    std::string result;\n    std::string word;\n    for(int i = 0; i < s.length(); i++) {\n        if(s[i] == ' ') {\n            result = word + \" \" + result;\n            word.clear();\n        } else {\n            word += s[i];\n        }\n    }\n    result = word + \" \" + result;\n    return result;",
    "    std::stringstream ss(s);\n    std::string word;\n    std::string result;\n    while(ss >> word) {\n        result = word + \" \" + result;\n    }\n    return result;",
    "    std::string result;\n    std::string word;\n    for (int i = 0; i < s.size(); ++i) {\n        if (s[i] != ' ') {\n            word += s[i];\n        } else {\n            result = word + \" \" + result;\n            word = \"\";\n        }\n    }\n    result = word + \" \" + result;\n    return result;",
    "  std::string result;\n  std::string word;\n  for (int i = 0; i < s.size(); i++) {\n    if (s[i] != ' ') {\n      word += s[i];\n    } else {\n      result = word + \" \" + result;\n      word = \"\";\n    }\n  }\n  result = word + \" \" + result;\n  return result;",
    "    std::string result = \"\";\n    std::string word = \"\";\n    for(int i = 0; i < s.length(); i++) {\n        if(s[i] == ' ') {\n            result = word + \" \" + result;\n            word = \"\";\n        } else {\n            word += s[i];\n        }\n    }\n    result = word + \" \" + result;\n    return result;",
    "    std::string result;\n    std::string word;\n    for (int i = 0; i < s.size(); i++) {\n        if (s[i] == ' ') {\n            result = word + \" \" + result;\n            word = \"\";\n        } else {\n            word += s[i];\n        }\n    }\n    result = word + \" \" + result;\n    return result;",
    "    std::string result = \"\";\n    std::string word = \"\";\n    for (int i = 0; i < s.length(); i++) {\n        if (s[i] == ' ') {\n            result = word + \" \" + result;\n            word = \"\";\n        } else {\n            word += s[i];\n        }\n    }\n    result = word + \" \" + result;\n    return result;",
    "    std::string result;\n    std::stringstream ss(s);\n    std::string word;\n    while(ss >> word) {\n        std::reverse(word.begin(), word.end());\n        result += word + \" \";\n    }\n    result.pop_back();\n    return result;",
    "    std::string result = \"\";\n    std::string word = \"\";\n    for (int i = 0; i < s.length(); i++) {\n        if (s[i] == ' ') {\n            result = word + \" \" + result;\n            word = \"\";\n        } else {\n            word += s[i];\n        }\n    }\n    result = word + \" \" + result;\n    return result;",
    "    std::string result;\n    std::string word;\n    for (int i = 0; i < s.length(); i++) {\n        if (s[i] == ' ') {\n            result = word + \" \" + result;\n            word = \"\";\n        } else {\n            word += s[i];\n        }\n    }\n    result = word + \" \" + result;\n    return result;",
    "  std::string result = \"\";\n  std::string word = \"\";\n  for (int i = 0; i < s.length(); i++) {\n    if (s[i] == ' ') {\n      result = word + \" \" + result;\n      word = \"\";\n    } else {\n      word += s[i];\n    }\n  }\n  result = word + \" \" + result;\n  return result;",
    "    std::string result;\n    std::string word;\n    for (auto c : s) {\n        if (c != ' ') {\n            word.push_back(c);\n        } else {\n            result.insert(0, word + \" \");\n            word.clear();\n        }\n    }\n    result.insert(0, word);\n    return result;",
    "    std::string result;\n    std::string word;\n    for (int i = 0; i < s.length(); i++) {\n        if (s[i] == ' ') {\n            result = word + \" \" + result;\n            word = \"\";\n        }\n        else {\n            word += s[i];\n        }\n    }\n    result = word + \" \" + result;\n    return result;",
    "    std::string result;\n    std::string word;\n    for(int i=0; i<s.size(); i++) {\n        if(s[i] == ' ') {\n            result = word + \" \" + result;\n            word = \"\";\n        } else {\n            word += s[i];\n        }\n    }\n    result = word + \" \" + result;\n    return result;",
    "    std::string result;\n    std::string word;\n    for (int i = 0; i < s.size(); ++i) {\n        if (s[i] == ' ') {\n            result = word + \" \" + result;\n            word.clear();\n        } else {\n            word += s[i];\n        }\n    }\n    result = word + \" \" + result;\n    return result;",
    "    std::string result;\n    std::string word;\n    for(int i = 0; i < s.length(); i++) {\n        if(s[i] == ' ') {\n            result = word + \" \" + result;\n            word = \"\";\n        } else {\n            word += s[i];\n        }\n    }\n    result = word + \" \" + result;\n    return result;",
    "    std::string result;\n    std::string word;\n    std::stringstream ss(s);\n    while(ss >> word) {\n        std::reverse(word.begin(), word.end());\n        result += word + \" \";\n    }\n    result.pop_back();\n    return result;",
    "    std::string result;\n    std::string word;\n    for (int i = 0; i < s.length(); i++) {\n        if (s[i] == ' ') {\n            result = word + \" \" + result;\n            word = \"\";\n        } else {\n            word += s[i];\n        }\n    }\n    result = word + \" \" + result;\n    return result;",
    "    std::string result;\n    std::string word;\n    std::stringstream ss(s);\n    while(ss >> word) {\n        result = word + \" \" + result;\n    }\n    return result;",
    "    std::string result;\n    std::string word;\n    for(int i = 0; i < s.size(); i++) {\n        if(s[i] == ' ') {\n            result = word + \" \" + result;\n            word = \"\";\n        }\n        else {\n            word += s[i];\n        }\n    }\n    result = word + \" \" + result;\n    return result;",
    "    std::reverse(s.begin(), s.end());\n    int start = 0;\n    for(int i = 0; i < s.size(); i++) {\n        if(s[i] == ' ') {\n            std::reverse(s.begin() + start, s.begin() + i);\n            start = i + 1;\n        }\n    }\n    std::reverse(s.begin() + start, s.end());\n    return s;",
    "    std::string result;\n    std::string word;\n    for(int i = 0; i < s.length(); i++) {\n        if(s[i] == ' ') {\n            result = word + \" \" + result;\n            word = \"\";\n        } else {\n            word += s[i];\n        }\n    }\n    result = word + \" \" + result;\n    return result;",
    "    std::string res;\n    std::string word;\n    std::stringstream ss(s);\n    while (ss >> word) {\n        res = word + \" \" + res;\n    }\n    return res;",
    "    std::string result = \"\";\n    std::string word = \"\";\n    for (int i = 0; i < s.length(); i++) {\n        if (s[i] == ' ') {\n            result = word + \" \" + result;\n            word = \"\";\n        } else {\n            word += s[i];\n        }\n    }\n    result = word + \" \" + result;\n    return result;",
    "    std::string result;\n    std::string word;\n    for(auto c : s) {\n        if(c == ' ') {\n            result = word + \" \" + result;\n            word.clear();\n        } else {\n            word.push_back(c);\n        }\n    }\n    result = word + \" \" + result;\n    return result;",
    "    std::string result;\n    std::stringstream ss(s);\n    std::string word;\n    while(ss >> word) {\n        std::reverse(word.begin(), word.end());\n        result += word + \" \";\n    }\n    result.pop_back();\n    return result;",
    "    std::string result;\n    std::stringstream ss(s);\n    std::string word;\n    while(ss >> word) {\n        std::reverse(word.begin(), word.end());\n        result += word + \" \";\n    }\n    result.pop_back();\n    return result;",
    "    std::string result;\n    std::string word;\n    std::stringstream ss(s);\n    while(ss >> word) {\n        result = word + \" \" + result;\n    }\n    return result;",
    "    std::string result = \"\";\n    std::string word = \"\";\n    for (int i = 0; i < s.size(); i++) {\n        if (s[i] != ' ') {\n            word += s[i];\n        } else {\n            result = word + \" \" + result;\n            word = \"\";\n        }\n    }\n    result = word + \" \" + result;\n    return result;",
    "    std::string result;\n    std::string word;\n    for (int i = 0; i < s.size(); i++) {\n        if (s[i] == ' ') {\n            result = word + \" \" + result;\n            word = \"\";\n        } else {\n            word += s[i];\n        }\n    }\n    result = word + \" \" + result;\n    return result;",
    "    std::string result;\n    std::string word;\n    for(int i=0; i<s.length(); i++) {\n        if(s[i] == ' ') {\n            result = word + \" \" + result;\n            word = \"\";\n        } else {\n            word += s[i];\n        }\n    }\n    result = word + \" \" + result;\n    return result;",
    "    std::string result = \"\";\n    int i = 0;\n    while(i < s.length()) {\n        std::string word = \"\";\n        while(i < s.length() && s[i] != ' ') {\n            word += s[i];\n            i++;\n        }\n        std::reverse(word.begin(), word.end());\n        result += word;\n        if(i < s.length()) {\n            result += ' ';\n            i++;\n        }\n    }\n    return result;",
    "    std::stringstream ss(s);\n    std::string word;\n    std::string result;\n    while(ss >> word) {\n        std::reverse(word.begin(), word.end());\n        result += word + \" \";\n    }\n    result.pop_back();\n    return result;",
    "    std::string result = \"\";\n    std::string word = \"\";\n    for(int i = 0; i < s.length(); i++) {\n        if(s[i] == ' ') {\n            result = word + \" \" + result;\n            word = \"\";\n        } else {\n            word += s[i];\n        }\n    }\n    result = word + \" \" + result;\n    return result;",
    "    std::string result = \"\";\n    int i = s.size() - 1;\n    while(i >= 0) {\n        while(i >= 0 && s[i] == ' ') {\n            i--;\n        }\n        if(i < 0) {\n            break;\n        }\n        if(result.size() != 0) {\n            result.push_back(' ');\n        }\n        std::string temp = \"\";\n        while(i >= 0 && s[i] != ' ') {\n            temp.push_back(s[i]);\n            i--;\n        }\n        std::reverse(temp.begin(), temp.end());\n        result.append(temp);\n    }\n    return result;",
    "    std::string result = \"\";\n    std::string word = \"\";\n    for(int i = 0; i < s.length(); i++) {\n        if(s[i] == ' ') {\n            result = word + \" \" + result;\n            word = \"\";\n        }\n        else {\n            word += s[i];\n        }\n    }\n    result = word + \" \" + result;\n    return result;",
    "    std::stringstream ss(s);\n    std::string word;\n    std::string result;\n    while(ss >> word) {\n        std::reverse(word.begin(), word.end());\n        result += word + \" \";\n    }\n    result.pop_back();\n    return result;",
    "    std::string result;\n    std::string word;\n    for (int i = 0; i < s.size(); i++) {\n        if (s[i] == ' ') {\n            result = word + \" \" + result;\n            word = \"\";\n        } else {\n            word += s[i];\n        }\n    }\n    result = word + \" \" + result;\n    return result;",
    "    std::string result;\n    std::string word;\n    for(int i = 0; i < s.length(); i++) {\n        if(s[i] == ' ') {\n            result = word + \" \" + result;\n            word = \"\";\n        }\n        else {\n            word += s[i];\n        }\n    }\n    result = word + \" \" + result;\n    return result;",
    "    std::string result;\n    std::string word;\n    for (auto c : s) {\n        if (c == ' ') {\n            result = word + \" \" + result;\n            word.clear();\n        } else {\n            word += c;\n        }\n    }\n    result = word + \" \" + result;\n    return result;",
    "    std::string result;\n    std::string word;\n    for (int i = 0; i < s.length(); i++) {\n        if (s[i] == ' ') {\n            result = word + \" \" + result;\n            word = \"\";\n        } else {\n            word += s[i];\n        }\n    }\n    result = word + \" \" + result;\n    return result;",
    "    std::string result;\n    std::string word;\n    for(int i=0;i<s.length();i++) {\n        if(s[i] == ' ') {\n            result = word + \" \" + result;\n            word = \"\";\n        } else {\n            word += s[i];\n        }\n    }\n    result = word + \" \" + result;\n    return result;",
    "    std::string res;\n    std::string word;\n    for (int i = 0; i < s.size(); ++i) {\n        if (s[i] == ' ') {\n            res = word + \" \" + res;\n            word.clear();\n        } else {\n            word += s[i];\n        }\n    }\n    res = word + \" \" + res;\n    return res;",
    "    std::string result;\n    std::string word;\n    for (int i = 0; i < s.size(); i++) {\n        if (s[i] == ' ') {\n            result = word + \" \" + result;\n            word = \"\";\n        } else {\n            word += s[i];\n        }\n    }\n    result = word + \" \" + result;\n    return result;",
    "    std::string result;\n    std::string word;\n    for(int i = 0; i < s.length(); i++) {\n        if(s[i] == ' ') {\n            result = word + \" \" + result;\n            word = \"\";\n        } else {\n            word += s[i];\n        }\n    }\n    result = word + \" \" + result;\n    return result;",
    "    std::string result;\n    std::string word;\n    for (int i = 0; i < s.size(); i++) {\n        if (s[i] == ' ') {\n            result = word + \" \" + result;\n            word = \"\";\n        } else {\n            word += s[i];\n        }\n    }\n    result = word + \" \" + result;\n    return result;",
    "    std::string result;\n    std::string word;\n    std::stringstream ss(s);\n    while (ss >> word) {\n        result = word + \" \" + result;\n    }\n    return result;",
    "    std::string result = \"\";\n    int i = s.length() - 1;\n    while (i >= 0) {\n        while (i >= 0 && s[i] == ' ') {\n            i--;\n        }\n        if (i < 0) {\n            break;\n        }\n        if (result.length() != 0) {\n            result.push_back(' ');\n        }\n        std::string temp = \"\";\n        while (i >= 0 && s[i] != ' ') {\n            temp.push_back(s[i]);\n            i--;\n        }\n        std::reverse(temp.begin(), temp.end());\n        result.append(temp);\n    }\n    return result;",
    "    std::string result = \"\";\n    std::string word = \"\";\n    for (int i = 0; i < s.length(); i++) {\n        if (s[i] == ' ') {\n            result = word + \" \" + result;\n            word = \"\";\n        } else {\n            word += s[i];\n        }\n    }\n    result = word + \" \" + result;\n    return result;",
    "    std::string result;\n    std::string word;\n    for (int i = 0; i < s.size(); i++) {\n        if (s[i] != ' ') {\n            word.push_back(s[i]);\n        } else {\n            result = word + \" \" + result;\n            word.clear();\n        }\n    }\n    result = word + \" \" + result;\n    return result;",
    "    std::string result;\n    std::string word;\n    for (auto c : s) {\n        if (c == ' ') {\n            result = word + \" \" + result;\n            word.clear();\n        } else {\n            word += c;\n        }\n    }\n    result = word + \" \" + result;\n    return result;",
    "    std::string result;\n    std::string word;\n    for (int i = 0; i < s.size(); i++) {\n        if (s[i] == ' ') {\n            result = word + \" \" + result;\n            word = \"\";\n        } else {\n            word += s[i];\n        }\n    }\n    result = word + \" \" + result;\n    return result;",
    "    std::string result;\n    int i = s.length() - 1;\n    while (i >= 0) {\n        while (i >= 0 && s[i] == ' ') {\n            i--;\n        }\n        if (i < 0) {\n            break;\n        }\n        if (result.length() != 0) {\n            result.push_back(' ');\n        }\n        std::string temp;\n        while (i >= 0 && s[i] != ' ') {\n            temp.push_back(s[i]);\n            i--;\n        }\n        std::reverse(temp.begin(), temp.end());\n        result.append(temp);\n    }\n    return result;",
    "    std::string result = \"\";\n    std::string word = \"\";\n    for (int i = 0; i < s.length(); i++) {\n        if (s[i] == ' ') {\n            result = word + \" \" + result;\n            word = \"\";\n        } else {\n            word += s[i];\n        }\n    }\n    result = word + \" \" + result;\n    return result;",
    "    std::string result = \"\";\n    std::string word = \"\";\n    for (int i = 0; i < s.length(); i++) {\n        if (s[i] == ' ') {\n            result = word + \" \" + result;\n            word = \"\";\n        } else {\n            word += s[i];\n        }\n    }\n    result = word + \" \" + result;\n    return result;",
    "  std::string result;\n  std::string word;\n  for (size_t i = 0; i < s.size(); ++i) {\n    if (s[i] == ' ') {\n      result = word + \" \" + result;\n      word.clear();\n    } else {\n      word += s[i];\n    }\n  }\n  result = word + \" \" + result;\n  return result;",
    "    std::string result;\n    std::string word;\n    for (int i = 0; i < s.size(); i++) {\n        if (s[i] == ' ') {\n            result = word + \" \" + result;\n            word = \"\";\n        } else {\n            word += s[i];\n        }\n    }\n    result = word + \" \" + result;\n    return result;",
    "    std::string result;\n    std::string word;\n    std::stringstream ss(s);\n    while (ss >> word) {\n        result = word + \" \" + result;\n    }\n    return result;",
    "    std::string result;\n    std::string word;\n    for (int i = 0; i < s.length(); i++) {\n        if (s[i] != ' ') {\n            word += s[i];\n        } else {\n            result = word + \" \" + result;\n            word = \"\";\n        }\n    }\n    result = word + \" \" + result;\n    return result;",
    "    std::string result;\n    std::string word;\n    for (int i = 0; i < s.size(); i++) {\n        if (s[i] != ' ') {\n            word += s[i];\n        } else {\n            result = word + \" \" + result;\n            word = \"\";\n        }\n    }\n    result = word + \" \" + result;\n    return result;",
    "    std::string res = \"\";\n    std::string word = \"\";\n    for (int i = 0; i < s.length(); i++) {\n        if (s[i] == ' ') {\n            res = word + \" \" + res;\n            word = \"\";\n        } else {\n            word += s[i];\n        }\n    }\n    res = word + \" \" + res;\n    return res;",
    "    std::stringstream ss(s);\n    std::string word;\n    std::string result;\n    while(ss >> word) {\n        std::reverse(word.begin(), word.end());\n        result += word + \" \";\n    }\n    result.pop_back();\n    return result;",
    "    std::string result;\n    std::stringstream ss(s);\n    std::string word;\n    while(ss >> word) {\n        std::reverse(word.begin(), word.end());\n        result += word + \" \";\n    }\n    result.pop_back();\n    return result;",
    "    std::string result;\n    std::string word;\n    std::stringstream ss(s);\n    while(ss >> word) {\n        result = word + \" \" + result;\n    }\n    return result;",
    "    std::string res;\n    std::stringstream ss(s);\n    std::string word;\n    while(ss >> word) {\n        std::reverse(word.begin(), word.end());\n        res += word + \" \";\n    }\n    res.pop_back();\n    return res;",
    "    std::string result;\n    std::string word;\n    for(int i = 0; i < s.size(); i++) {\n        if(s[i] != ' ') {\n            word += s[i];\n        } else {\n            result = word + \" \" + result;\n            word = \"\";\n        }\n    }\n    result = word + \" \" + result;\n    return result;",
    "    std::string result;\n    std::string word;\n    for(int i = 0; i < s.length(); i++) {\n        if(s[i] == ' ') {\n            result = word + \" \" + result;\n            word = \"\";\n        } else {\n            word += s[i];\n        }\n    }\n    result = word + \" \" + result;\n    return result;",
    "    std::string result;\n    std::string word;\n    for (int i = 0; i < s.length(); i++) {\n        if (s[i] == ' ') {\n            result = word + \" \" + result;\n            word = \"\";\n        } else {\n            word += s[i];\n        }\n    }\n    result = word + \" \" + result;\n    return result;",
    "    std::stringstream ss(s);\n    std::string word;\n    std::string result;\n    while (ss >> word) {\n        std::reverse(word.begin(), word.end());\n        result += word + \" \";\n    }\n    result.pop_back();\n    return result;",
    "    std::string result;\n    std::string word;\n    for (int i = 0; i < s.size(); i++) {\n        if (s[i] == ' ') {\n            result = word + \" \" + result;\n            word = \"\";\n        } else {\n            word += s[i];\n        }\n    }\n    result = word + \" \" + result;\n    return result;",
    "    std::string result = \"\";\n    std::string word = \"\";\n    for(int i = 0; i < s.length(); i++) {\n        if(s[i] == ' ') {\n            result = word + \" \" + result;\n            word = \"\";\n        }\n        else {\n            word = word + s[i];\n        }\n    }\n    result = word + \" \" + result;\n    return result;",
    "    std::string result;\n    std::string word;\n    for (int i = 0; i < s.size(); i++) {\n        if (s[i] == ' ') {\n            result = word + \" \" + result;\n            word = \"\";\n        } else {\n            word += s[i];\n        }\n    }\n    result = word + \" \" + result;\n    return result;",
    "  std::string result;\n  std::string word;\n  for (int i = 0; i < s.length(); i++) {\n    if (s[i] == ' ') {\n      result = word + \" \" + result;\n      word = \"\";\n    } else {\n      word += s[i];\n    }\n  }\n  result = word + \" \" + result;\n  return result;",
    "    std::string result;\n    std::string word;\n    for(int i = 0; i < s.length(); i++) {\n        if(s[i] == ' ') {\n            result = word + \" \" + result;\n            word = \"\";\n        } else {\n            word += s[i];\n        }\n    }\n    result = word + \" \" + result;\n    return result;",
    "    std::string result;\n    std::string word;\n    for (int i = 0; i < s.length(); i++) {\n        if (s[i] != ' ') {\n            word += s[i];\n        } else {\n            result = word + \" \" + result;\n            word = \"\";\n        }\n    }\n    result = word + \" \" + result;\n    return result;",
    "    std::string result;\n    std::string word;\n    for (int i = 0; i < s.size(); i++) {\n        if (s[i] == ' ') {\n            result = word + \" \" + result;\n            word = \"\";\n        } else {\n            word += s[i];\n        }\n    }\n    result = word + \" \" + result;\n    return result;",
    "    std::string result;\n    std::string word;\n    std::stringstream ss(s);\n    while(ss >> word) {\n        std::reverse(word.begin(), word.end());\n        result += word + \" \";\n    }\n    result.pop_back();\n    return result;",
    "    std::string result = \"\";\n    std::string word = \"\";\n    for (int i = 0; i < s.size(); i++) {\n        if (s[i] != ' ') {\n            word += s[i];\n        } else {\n            result = word + \" \" + result;\n            word = \"\";\n        }\n    }\n    result = word + \" \" + result;\n    return result;",
    "    std::string res;\n    std::stringstream ss(s);\n    std::string word;\n    while(ss >> word) {\n        res = word + \" \" + res;\n    }\n    return res;",
    "    std::string res;\n    std::string word;\n    for (int i = 0; i < s.size(); i++) {\n        if (s[i] == ' ') {\n            res = word + \" \" + res;\n            word = \"\";\n        } else {\n            word += s[i];\n        }\n    }\n    res = word + \" \" + res;\n    return res;",
    "    std::reverse(s.begin(), s.end());\n    int start = 0;\n    for (int i = 0; i < s.length(); i++) {\n        if (s[i] == ' ') {\n            std::reverse(s.begin() + start, s.begin() + i);\n            start = i + 1;\n        }\n    }\n    std::reverse(s.begin() + start, s.end());\n    return s;",
    "    std::string result;\n    std::string word;\n    for (int i = 0; i < s.length(); i++) {\n        if (s[i] == ' ') {\n            result = word + \" \" + result;\n            word = \"\";\n        } else {\n            word += s[i];\n        }\n    }\n    result = word + \" \" + result;\n    return result;",
    "    std::string result;\n    std::string word;\n    for (int i = 0; i < s.size(); i++) {\n        if (s[i] == ' ') {\n            result = word + \" \" + result;\n            word.clear();\n        } else {\n            word += s[i];\n        }\n    }\n    result = word + \" \" + result;\n    return result;",
    "    std::string res;\n    int i = 0;\n    while (i < s.size()) {\n        if (s[i] == ' ') {\n            i++;\n            continue;\n        }\n        int j = i;\n        while (j < s.size() && s[j] != ' ') {\n            j++;\n        }\n        res = s.substr(i, j - i) + \" \" + res;\n        i = j;\n    }\n    return res;",
    "    std::string result = \"\";\n    std::string word = \"\";\n    for(int i = 0; i < s.length(); i++) {\n        if(s[i] != ' ') {\n            word += s[i];\n        } else {\n            result = word + \" \" + result;\n            word = \"\";\n        }\n    }\n    result = word + \" \" + result;\n    return result;",
    "    std::string result;\n    std::string word;\n    std::stringstream ss(s);\n    while(ss >> word) {\n        result = word + \" \" + result;\n    }\n    return result;",
    "    std::string result;\n    std::string word;\n    for(int i=0; i<s.length(); i++) {\n        if(s[i] == ' ') {\n            result = word + \" \" + result;\n            word.clear();\n        } else {\n            word += s[i];\n        }\n    }\n    result = word + \" \" + result;\n    return result;",
    "    std::string result;\n    std::string word;\n    for (int i = 0; i < s.length(); i++) {\n        if (s[i] == ' ') {\n            result = word + \" \" + result;\n            word = \"\";\n        } else {\n            word += s[i];\n        }\n    }\n    result = word + \" \" + result;\n    return result;",
    "    std::string result;\n    std::string word;\n    std::stringstream ss(s);\n    while(ss >> word) {\n        result = word + \" \" + result;\n    }\n    return result;",
    "    std::string result = \"\";\n    int i = 0;\n    while(i < s.length()) {\n        std::string word = \"\";\n        while(s[i] != ' ' && i < s.length()) {\n            word += s[i];\n            i++;\n        }\n        std::reverse(word.begin(), word.end());\n        result += word;\n        result += \" \";\n        i++;\n    }\n    return result;",
    "    std::string result;\n    std::string word;\n    for (int i = 0; i < s.size(); ++i) {\n        if (s[i] != ' ') {\n            word.push_back(s[i]);\n        } else {\n            result.insert(0, word + \" \");\n            word.clear();\n        }\n    }\n    result.insert(0, word);\n    return result;",
    "    std::string result;\n    std::string word;\n    for (int i = 0; i < s.size(); i++) {\n        if (s[i] == ' ') {\n            result = word + \" \" + result;\n            word.clear();\n        } else {\n            word += s[i];\n        }\n    }\n    result = word + \" \" + result;\n    return result;",
    "    std::string result;\n    std::string word;\n    for (int i = 0; i < s.length(); i++) {\n        if (s[i] == ' ') {\n            result = word + \" \" + result;\n            word = \"\";\n        } else {\n            word += s[i];\n        }\n    }\n    result = word + \" \" + result;\n    return result;",
    "    std::string result;\n    std::string word;\n    std::stringstream ss(s);\n    while (ss >> word) {\n        result = word + \" \" + result;\n    }\n    return result;",
    "    std::string result;\n    std::string word;\n    for (int i = 0; i < s.length(); i++) {\n        if (s[i] == ' ') {\n            result = word + \" \" + result;\n            word = \"\";\n        } else {\n            word += s[i];\n        }\n    }\n    result = word + \" \" + result;\n    return result;",
    "    std::string result;\n    std::string word;\n    for (int i = 0; i < s.size(); i++) {\n        if (s[i] == ' ') {\n            result = word + \" \" + result;\n            word = \"\";\n        } else {\n            word += s[i];\n        }\n    }\n    result = word + \" \" + result;\n    return result;",
    "    std::string result;\n    std::string word;\n    for(int i = 0; i < s.length(); i++) {\n        if(s[i] == ' ') {\n            result = word + \" \" + result;\n            word = \"\";\n        } else {\n            word += s[i];\n        }\n    }\n    result = word + \" \" + result;\n    return result;",
    "    std::string res;\n    std::string word;\n    for(int i = 0; i < s.size(); i++) {\n        if(s[i] == ' ') {\n            res = word + \" \" + res;\n            word.clear();\n        } else {\n            word += s[i];\n        }\n    }\n    res = word + \" \" + res;\n    return res;",
    "    std::string result = \"\";\n    std::string word = \"\";\n    for (int i = 0; i < s.length(); i++) {\n        if (s[i] == ' ') {\n            result = word + \" \" + result;\n            word = \"\";\n        } else {\n            word += s[i];\n        }\n    }\n    result = word + \" \" + result;\n    return result;",
    "    std::string result = \"\";\n    std::string word = \"\";\n    for (int i = 0; i < s.length(); i++) {\n        if (s[i] == ' ') {\n            result = word + \" \" + result;\n            word = \"\";\n        } else {\n            word += s[i];\n        }\n    }\n    result = word + \" \" + result;\n    return result;",
    "    std::string result;\n    std::stringstream ss(s);\n    std::string word;\n    while(ss >> word) {\n        std::reverse(word.begin(), word.end());\n        result += word + \" \";\n    }\n    result.pop_back();\n    return result;",
    "    std::reverse(s.begin(), s.end());\n    int start = 0;\n    for (int i = 0; i < s.size(); ++i) {\n        if (s[i] == ' ') {\n            std::reverse(s.begin() + start, s.begin() + i);\n            start = i + 1;\n        }\n    }\n    std::reverse(s.begin() + start, s.end());\n    return s;",
    "    std::string res = \"\";\n    std::string word = \"\";\n    for (int i = 0; i < s.size(); i++) {\n        if (s[i] == ' ') {\n            res = word + \" \" + res;\n            word = \"\";\n        } else {\n            word += s[i];\n        }\n    }\n    res = word + \" \" + res;\n    return res;",
    "    std::string result = \"\";\n    std::string word = \"\";\n    for (int i = 0; i < s.length(); i++) {\n        if (s[i] == ' ') {\n            result = word + \" \" + result;\n            word = \"\";\n        } else {\n            word += s[i];\n        }\n    }\n    result = word + \" \" + result;\n    return result;",
    "    std::string result;\n    std::string word;\n    std::stringstream ss(s);\n    while(ss >> word) {\n        result = word + \" \" + result;\n    }\n    return result;",
    "    std::reverse(s.begin(), s.end());\n    int start = 0;\n    for (int i = 0; i < s.size(); i++) {\n        if (s[i] == ' ') {\n            std::reverse(s.begin() + start, s.begin() + i);\n            start = i + 1;\n        }\n    }\n    std::reverse(s.begin() + start, s.end());\n    return s;",
    "    std::string result = \"\";\n    std::string word = \"\";\n    for (int i = 0; i < s.size(); i++) {\n        if (s[i] == ' ') {\n            result = word + \" \" + result;\n            word = \"\";\n        } else {\n            word += s[i];\n        }\n    }\n    result = word + \" \" + result;\n    return result;",
    "  std::string result;\n  std::string word;\n  for (int i = 0; i < s.size(); ++i) {\n    if (s[i] == ' ') {\n      result = word + \" \" + result;\n      word = \"\";\n    } else {\n      word += s[i];\n    }\n  }\n  result = word + \" \" + result;\n  return result;",
    "    std::string result = \"\";\n    std::string word = \"\";\n    for (int i = 0; i < s.size(); i++) {\n        if (s[i] == ' ') {\n            result = word + \" \" + result;\n            word = \"\";\n        } else {\n            word += s[i];\n        }\n    }\n    result = word + \" \" + result;\n    return result;",
    "    std::string result;\n    std::string word;\n    for(int i = 0; i < s.size(); i++) {\n        if(s[i] == ' ') {\n            result = word + \" \" + result;\n            word.clear();\n        } else {\n            word += s[i];\n        }\n    }\n    result = word + \" \" + result;\n    return result;",
    "    std::string result;\n    std::string word;\n    for (int i = 0; i < s.size(); i++) {\n        if (s[i] != ' ') {\n            word += s[i];\n        } else {\n            result = word + \" \" + result;\n            word = \"\";\n        }\n    }\n    result = word + \" \" + result;\n    return result;",
    "    std::stringstream ss(s);\n    std::string word;\n    std::string result;\n    while(ss >> word) {\n        std::reverse(word.begin(), word.end());\n        result += word + \" \";\n    }\n    result.pop_back();\n    return result;",
    "    std::stringstream ss(s);\n    std::string word;\n    std::vector<std::string> words;\n    while (ss >> word) {\n        words.push_back(word);\n    }\n    std::string result;\n    for (int i = words.size() - 1; i >= 0; i--) {\n        result += words[i];\n        if (i != 0) {\n            result += \" \";\n        }\n    }\n    return result;",
    "    std::string result = \"\";\n    std::string word = \"\";\n    for (int i = 0; i < s.length(); i++) {\n        if (s[i] != ' ') {\n            word += s[i];\n        } else {\n            result = word + \" \" + result;\n            word = \"\";\n        }\n    }\n    result = word + \" \" + result;\n    return result;",
    "    std::string result;\n    std::string word;\n    for (int i = 0; i < s.length(); i++) {\n        if (s[i] == ' ') {\n            result = word + \" \" + result;\n            word = \"\";\n        } else {\n            word += s[i];\n        }\n    }\n    result = word + \" \" + result;\n    return result;",
    "    std::string res;\n    std::stringstream ss(s);\n    std::string word;\n    while(ss >> word) {\n        std::reverse(word.begin(), word.end());\n        res += word + \" \";\n    }\n    return res;",
    "    std::string result;\n    int i = s.size() - 1;\n    while (i >= 0) {\n        while (i >= 0 && s[i] == ' ') {\n            i--;\n        }\n        if (i < 0) {\n            break;\n        }\n        if (!result.empty()) {\n            result.push_back(' ');\n        }\n        std::string temp;\n        while (i >= 0 && s[i] != ' ') {\n            temp.push_back(s[i]);\n            i--;\n        }\n        std::reverse(temp.begin(), temp.end());\n        result.append(temp);\n    }\n    return result;",
    "  std::string result;\n  std::string word;\n  std::stringstream ss(s);\n  while (ss >> word) {\n    result = word + \" \" + result;\n  }\n  return result;",
    "    std::string res;\n    int i = s.size() - 1;\n    while (i >= 0) {\n        while (i >= 0 && s[i] == ' ') {\n            i--;\n        }\n        if (i < 0) {\n            break;\n        }\n        if (!res.empty()) {\n            res.push_back(' ');\n        }\n        std::string t;\n        while (i >= 0 && s[i] != ' ') {\n            t.push_back(s[i]);\n            i--;\n        }\n        std::reverse(t.begin(), t.end());\n        res.append(t);\n    }\n    return res;",
    "  std::string result;\n  std::string word;\n  for (int i = 0; i < s.size(); i++) {\n    if (s[i] == ' ') {\n      if (word.size() > 0) {\n        result = word + \" \" + result;\n        word.clear();\n      }\n    } else {\n      word += s[i];\n    }\n  }\n  if (word.size() > 0) {\n    result = word + \" \" + result;\n  }\n  return result;",
    "    std::string result;\n    std::string word;\n    for(int i = 0; i < s.length(); i++) {\n        if(s[i] == ' ') {\n            result = word + \" \" + result;\n            word = \"\";\n        } else {\n            word += s[i];\n        }\n    }\n    result = word + \" \" + result;\n    return result;",
    "    std::stringstream ss(s);\n    std::string word;\n    std::string result;\n    while(ss >> word) {\n        std::reverse(word.begin(), word.end());\n        result += word + \" \";\n    }\n    result.pop_back();\n    return result;",
    "    std::string result = \"\";\n    std::string word = \"\";\n    for (int i = 0; i < s.length(); i++) {\n        if (s[i] == ' ') {\n            result = word + \" \" + result;\n            word = \"\";\n        } else {\n            word += s[i];\n        }\n    }\n    result = word + \" \" + result;\n    return result;",
    "    std::string result;\n    std::string word;\n    std::stringstream ss(s);\n    while(ss >> word) {\n        result = word + \" \" + result;\n    }\n    return result;",
    "    std::reverse(s.begin(), s.end());\n    int start = 0;\n    for (int i = 0; i < s.size(); i++) {\n        if (s[i] == ' ') {\n            std::reverse(s.begin() + start, s.begin() + i);\n            start = i + 1;\n        }\n    }\n    std::reverse(s.begin() + start, s.end());\n    return s;",
    "    std::stringstream ss(s);\n    std::string word;\n    std::string result;\n    while (ss >> word) {\n        std::reverse(word.begin(), word.end());\n        result += word + \" \";\n    }\n    result.pop_back();\n    return result;",
    "    std::string result;\n    std::stringstream ss(s);\n    std::string word;\n    while(ss >> word) {\n        std::reverse(word.begin(), word.end());\n        result += word + \" \";\n    }\n    result.pop_back();\n    return result;",
    "    std::string result;\n    std::string word;\n    for (int i = 0; i < s.size(); i++) {\n        if (s[i] == ' ') {\n            result = word + \" \" + result;\n            word = \"\";\n        } else {\n            word += s[i];\n        }\n    }\n    result = word + \" \" + result;\n    return result;",
    "    std::string result;\n    std::string word;\n    for (int i = 0; i < s.length(); i++) {\n        if (s[i] != ' ') {\n            word.push_back(s[i]);\n        } else {\n            result = word + \" \" + result;\n            word.clear();\n        }\n    }\n    result = word + \" \" + result;\n    return result;",
    "    std::string result;\n    int i = 0;\n    while(i < s.size()) {\n        int j = i;\n        while(j < s.size() && s[j] != ' ') {\n            j++;\n        }\n        std::reverse(s.begin() + i, s.begin() + j);\n        result += s.substr(i, j - i);\n        result += ' ';\n        i = j + 1;\n    }\n    result.pop_back();\n    return result;",
    "    std::string res;\n    std::stringstream ss(s);\n    std::string word;\n    while(ss >> word) {\n        std::reverse(word.begin(), word.end());\n        res += word + \" \";\n    }\n    res.pop_back();\n    return res;",
    "    std::string result = \"\";\n    std::string word = \"\";\n    for(int i = 0; i < s.length(); i++) {\n        if(s[i] == ' ') {\n            result = word + \" \" + result;\n            word = \"\";\n        } else {\n            word += s[i];\n        }\n    }\n    result = word + \" \" + result;\n    return result;",
    "  std::string result = \"\";\n  std::string word = \"\";\n  for (int i = 0; i < s.length(); i++) {\n    if (s[i] == ' ') {\n      result = word + \" \" + result;\n      word = \"\";\n    } else {\n      word += s[i];\n    }\n  }\n  result = word + \" \" + result;\n  return result;",
    "\tstd::string result = \"\";\n\tstd::string word = \"\";\n\tfor (int i = 0; i < s.length(); i++) {\n\t\tif (s[i] == ' ') {\n\t\t\tresult = word + \" \" + result;\n\t\t\tword = \"\";\n\t\t}\n\t\telse {\n\t\t\tword += s[i];\n\t\t}\n\t}\n\tresult = word + \" \" + result;\n\treturn result;",
    "    std::string result;\n    std::string word;\n    for (int i = 0; i < s.size(); i++) {\n        if (s[i] == ' ') {\n            result = word + \" \" + result;\n            word = \"\";\n        } else {\n            word += s[i];\n        }\n    }\n    result = word + \" \" + result;\n    return result;",
    "    std::string result;\n    std::string word;\n    for(int i=0;i<s.length();i++) {\n        if(s[i] == ' ') {\n            result = word + \" \" + result;\n            word = \"\";\n        } else {\n            word += s[i];\n        }\n    }\n    result = word + \" \" + result;\n    return result;",
    "    std::string result = \"\";\n    std::string word = \"\";\n    for (int i = 0; i < s.length(); i++) {\n        if (s[i] == ' ') {\n            result = word + \" \" + result;\n            word = \"\";\n        } else {\n            word += s[i];\n        }\n    }\n    result = word + \" \" + result;\n    return result;",
    "    std::string result = \"\";\n    std::string word = \"\";\n    for (int i = 0; i < s.length(); i++) {\n        if (s[i] == ' ') {\n            result = word + \" \" + result;\n            word = \"\";\n        } else {\n            word += s[i];\n        }\n    }\n    result = word + \" \" + result;\n    return result;",
    "    std::string result;\n    std::string word;\n    for (int i = 0; i < s.size(); ++i) {\n        if (s[i] == ' ') {\n            result = word + \" \" + result;\n            word = \"\";\n        } else {\n            word += s[i];\n        }\n    }\n    result = word + \" \" + result;\n    return result;",
    "    std::stringstream ss(s);\n    std::string word;\n    std::string result;\n    while(ss >> word) {\n        std::reverse(word.begin(), word.end());\n        result += word + \" \";\n    }\n    result.pop_back();\n    return result;",
    "    std::string result = \"\";\n    std::string word = \"\";\n    for (int i = 0; i < s.length(); i++) {\n        if (s[i] != ' ') {\n            word = s[i] + word;\n        } else {\n            result += word + \" \";\n            word = \"\";\n        }\n    }\n    result += word;\n    return result;",
    "    std::string res = \"\";\n    std::string word = \"\";\n    for(int i = 0; i < s.length(); i++) {\n        if(s[i] == ' ') {\n            res = word + \" \" + res;\n            word = \"\";\n        } else {\n            word += s[i];\n        }\n    }\n    res = word + \" \" + res;\n    return res;",
    "    std::string result;\n    std::string word;\n    for(auto c : s) {\n        if(c == ' ') {\n            result = word + \" \" + result;\n            word.clear();\n        } else {\n            word += c;\n        }\n    }\n    result = word + \" \" + result;\n    return result;",
    "    std::string result;\n    std::string word;\n    std::stringstream ss(s);\n    while(ss >> word) {\n        std::reverse(word.begin(), word.end());\n        result += word + \" \";\n    }\n    result.pop_back();\n    return result;",
    "  std::string result;\n  std::string word;\n  std::stringstream ss(s);\n  while (ss >> word) {\n    result = word + \" \" + result;\n  }\n  return result;",
    "    std::string result;\n    std::string word;\n    for (int i = 0; i < s.size(); i++) {\n        if (s[i] != ' ') {\n            word.push_back(s[i]);\n        } else {\n            result.insert(0, word);\n            result.insert(0, \" \");\n            word.clear();\n        }\n    }\n    result.insert(0, word);\n    return result;",
    "    std::string result = \"\";\n    int start = 0;\n    int end = 0;\n    while(end < s.size()) {\n        while(end < s.size() && s[end] != ' ') {\n            end++;\n        }\n        for(int i = end - 1; i >= start; i--) {\n            result += s[i];\n        }\n        if(end < s.size()) {\n            result += ' ';\n        }\n        start = end + 1;\n        end = start;\n    }\n    return result;",
    "    std::string res = \"\";\n    std::string word = \"\";\n    for(int i = 0; i < s.length(); i++) {\n        if(s[i] == ' ') {\n            res = word + \" \" + res;\n            word = \"\";\n        }\n        else {\n            word += s[i];\n        }\n    }\n    res = word + \" \" + res;\n    return res;",
    "    std::string res;\n    std::string word;\n    for (int i = 0; i < s.length(); i++) {\n        if (s[i] == ' ') {\n            res = word + \" \" + res;\n            word = \"\";\n        } else {\n            word += s[i];\n        }\n    }\n    res = word + \" \" + res;\n    return res;",
    "    std::string result;\n    std::string temp;\n    for(int i = 0; i < s.length(); i++) {\n        if(s[i] == ' ') {\n            result = temp + \" \" + result;\n            temp = \"\";\n        } else {\n            temp += s[i];\n        }\n    }\n    result = temp + \" \" + result;\n    return result;",
    "    std::string result = \"\";\n    std::string word = \"\";\n    for (int i = 0; i < s.length(); i++) {\n        if (s[i] == ' ') {\n            result = word + \" \" + result;\n            word = \"\";\n        } else {\n            word += s[i];\n        }\n    }\n    result = word + \" \" + result;\n    return result;",
    "    std::string result;\n    std::string word;\n    for (int i = 0; i < s.length(); ++i) {\n        if (s[i] == ' ') {\n            result = word + ' ' + result;\n            word.clear();\n        } else {\n            word += s[i];\n        }\n    }\n    result = word + ' ' + result;\n    return result;",
    "    std::reverse(s.begin(), s.end());\n    int start = 0;\n    for (int i = 0; i < s.size(); i++) {\n        if (s[i] == ' ') {\n            std::reverse(s.begin() + start, s.begin() + i);\n            start = i + 1;\n        }\n    }\n    std::reverse(s.begin() + start, s.end());\n    return s;",
    "    std::string result;\n    std::string word;\n    for (int i = 0; i < s.size(); ++i) {\n        if (s[i] == ' ') {\n            result = word + \" \" + result;\n            word.clear();\n        } else {\n            word += s[i];\n        }\n    }\n    result = word + \" \" + result;\n    return result;",
    "    std::string result;\n    std::string word;\n    for (int i = 0; i < s.size(); i++) {\n        if (s[i] == ' ') {\n            result = word + \" \" + result;\n            word.clear();\n        } else {\n            word += s[i];\n        }\n    }\n    result = word + \" \" + result;\n    return result;",
    "    std::string result;\n    std::stringstream ss(s);\n    std::string word;\n    while(ss >> word) {\n        result = word + \" \" + result;\n    }\n    return result;",
    "    std::string result;\n    std::string word;\n    std::stringstream ss(s);\n    while(ss >> word) {\n        std::reverse(word.begin(), word.end());\n        result += word + \" \";\n    }\n    result.pop_back();\n    return result;",
    "    std::string result;\n    std::string word;\n    for (int i = 0; i < s.size(); i++) {\n        if (s[i] == ' ') {\n            result = word + \" \" + result;\n            word.clear();\n        } else {\n            word += s[i];\n        }\n    }\n    result = word + \" \" + result;\n    return result;",
    "    std::string result;\n    std::string word;\n    for (int i = 0; i < s.size(); i++) {\n        if (s[i] == ' ') {\n            result = word + \" \" + result;\n            word = \"\";\n        } else {\n            word += s[i];\n        }\n    }\n    result = word + \" \" + result;\n    return result;",
    "    std::string result = \"\";\n    std::string word = \"\";\n    for (int i = 0; i < s.length(); i++) {\n        if (s[i] == ' ') {\n            result = \" \" + word + result;\n            word = \"\";\n        } else {\n            word += s[i];\n        }\n    }\n    result = word + result;\n    return result;",
    "    std::string result;\n    std::string word;\n    for(int i = 0; i < s.size(); i++) {\n        if(s[i] == ' ') {\n            result = word + \" \" + result;\n            word = \"\";\n        } else {\n            word += s[i];\n        }\n    }\n    result = word + \" \" + result;\n    return result;",
    "    int i = 0;\n    int j = 0;\n    int n = s.size();\n    while (j < n) {\n        while (j < n && s[j] != ' ') {\n            j++;\n        }\n        std::reverse(s.begin() + i, s.begin() + j);\n        i = ++j;\n    }\n    return s;",
    "    std::string res;\n    std::stringstream ss(s);\n    std::string word;\n    while(ss >> word) {\n        res = word + \" \" + res;\n    }\n    return res;",
    "    std::string result;\n    std::string word;\n    for (int i = 0; i < s.size(); i++) {\n        if (s[i] != ' ') {\n            word.push_back(s[i]);\n        } else {\n            result = word + \" \" + result;\n            word.clear();\n        }\n    }\n    result = word + \" \" + result;\n    return result;",
    "    std::string result;\n    std::stringstream ss(s);\n    std::string word;\n    while(ss >> word) {\n        std::reverse(word.begin(), word.end());\n        result += word + \" \";\n    }\n    result.pop_back();\n    return result;",
    "    std::string result;\n    std::string word;\n    for (int i = 0; i < s.size(); i++) {\n        if (s[i] == ' ') {\n            result = word + \" \" + result;\n            word.clear();\n        } else {\n            word += s[i];\n        }\n    }\n    result = word + \" \" + result;\n    return result;",
    "    std::string result = \"\";\n    std::string word = \"\";\n    for (int i = 0; i < s.length(); i++) {\n        if (s[i] == ' ') {\n            result = word + \" \" + result;\n            word = \"\";\n        } else {\n            word += s[i];\n        }\n    }\n    result = word + \" \" + result;\n    return result;",
    "    std::reverse(s.begin(), s.end());\n    int start = 0;\n    for (int i = 0; i < s.size(); i++) {\n        if (s[i] == ' ') {\n            std::reverse(s.begin() + start, s.begin() + i);\n            start = i + 1;\n        }\n    }\n    std::reverse(s.begin() + start, s.end());\n    return s;",
    "  std::string result = \"\";\n  std::string word = \"\";\n  for (int i = 0; i < s.size(); i++) {\n    if (s[i] == ' ') {\n      result = word + \" \" + result;\n      word = \"\";\n    } else {\n      word += s[i];\n    }\n  }\n  result = word + \" \" + result;\n  return result;",
    "    std::reverse(s.begin(), s.end());\n    int start = 0;\n    for (int i = 0; i < s.size(); i++) {\n        if (s[i] == ' ') {\n            std::reverse(s.begin() + start, s.begin() + i);\n            start = i + 1;\n        }\n    }\n    std::reverse(s.begin() + start, s.end());\n    return s;",
    "  std::string result;\n  std::string word;\n  for (int i = 0; i < s.size(); i++) {\n    if (s[i] == ' ') {\n      result = word + \" \" + result;\n      word = \"\";\n    } else {\n      word += s[i];\n    }\n  }\n  result = word + \" \" + result;\n  return result;",
    "    std::string result;\n    std::string word;\n    for (int i = 0; i < s.length(); i++) {\n        if (s[i] == ' ') {\n            result = word + \" \" + result;\n            word = \"\";\n        } else {\n            word += s[i];\n        }\n    }\n    result = word + \" \" + result;\n    return result;",
    "    std::string res;\n    std::string word;\n    for (int i = 0; i < s.size(); i++) {\n        if (s[i] == ' ') {\n            if (word.size() == 0) {\n                continue;\n            }\n            res = word + \" \" + res;\n            word.clear();\n        } else {\n            word += s[i];\n        }\n    }\n    if (word.size() > 0) {\n        res = word + \" \" + res;\n    }\n    return res;",
    "    std::string result = \"\";\n    std::string word = \"\";\n    for(int i = 0; i < s.size(); i++) {\n        if(s[i] == ' ') {\n            result = word + \" \" + result;\n            word = \"\";\n        } else {\n            word += s[i];\n        }\n    }\n    result = word + \" \" + result;\n    return result;",
    "    std::string result = \"\";\n    int start = 0;\n    for (int i = 0; i < s.size(); i++) {\n        if (s[i] == ' ') {\n            for (int j = i - 1; j >= start; j--) {\n                result += s[j];\n            }\n            result += ' ';\n            start = i + 1;\n        }\n    }\n    for (int j = s.size() - 1; j >= start; j--) {\n        result += s[j];\n    }\n    return result;",
    "    std::string result = \"\";\n    std::string word = \"\";\n    for (int i = 0; i < s.length(); i++) {\n        if (s[i] == ' ') {\n            result = word + \" \" + result;\n            word = \"\";\n        } else {\n            word += s[i];\n        }\n    }\n    result = word + \" \" + result;\n    return result;",
    "    std::reverse(s.begin(), s.end());\n    int start = 0;\n    for (int i = 0; i < s.size(); i++) {\n        if (s[i] == ' ') {\n            std::reverse(s.begin() + start, s.begin() + i);\n            start = i + 1;\n        }\n    }\n    std::reverse(s.begin() + start, s.end());\n    return s;",
    "    std::string result;\n    std::string word;\n    for(int i = 0; i < s.size(); i++) {\n        if(s[i] == ' ') {\n            if(word.size() > 0) {\n                result = word + \" \" + result;\n                word.clear();\n            }\n        } else {\n            word += s[i];\n        }\n    }\n    if(word.size() > 0) {\n        result = word + \" \" + result;\n    }\n    return result;",
    "    std::string result = \"\";\n    std::string word = \"\";\n    for (int i = 0; i < s.length(); i++) {\n        if (s[i] == ' ') {\n            result = word + \" \" + result;\n            word = \"\";\n        } else {\n            word += s[i];\n        }\n    }\n    result = word + \" \" + result;\n    return result;",
    "    std::string result;\n    std::string word;\n    std::stringstream ss(s);\n    while(ss >> word) {\n        result = word + \" \" + result;\n    }\n    return result;",
    "    std::string result = \"\";\n    std::string word = \"\";\n    for (int i = 0; i < s.length(); i++) {\n        if (s[i] == ' ') {\n            result = word + \" \" + result;\n            word = \"\";\n        }\n        else {\n            word += s[i];\n        }\n    }\n    result = word + \" \" + result;\n    return result;",
    "    std::stringstream ss(s);\n    std::string word;\n    std::string result;\n    while(ss >> word) {\n        result = word + \" \" + result;\n    }\n    return result;",
    "    std::string res;\n    std::stringstream ss(s);\n    std::string word;\n    while(ss >> word) {\n        std::reverse(word.begin(), word.end());\n        res += word + \" \";\n    }\n    res.pop_back();\n    return res;",
    "\tstd::string result;\n\tstd::string word;\n\tfor (int i = 0; i < s.size(); i++) {\n\t\tif (s[i] == ' ') {\n\t\t\tresult = word + \" \" + result;\n\t\t\tword = \"\";\n\t\t}\n\t\telse {\n\t\t\tword += s[i];\n\t\t}\n\t}\n\tresult = word + \" \" + result;\n\treturn result;",
    "    std::string result;\n    std::string word;\n    for (int i = 0; i < s.length(); i++) {\n        if (s[i] != ' ') {\n            word += s[i];\n        } else {\n            result = word + \" \" + result;\n            word = \"\";\n        }\n    }\n    result = word + \" \" + result;\n    return result;",
    "    std::string result;\n    std::stringstream ss(s);\n    std::string word;\n    while(ss >> word) {\n        std::reverse(word.begin(), word.end());\n        result += word + \" \";\n    }\n    result.pop_back();\n    return result;",
    "    std::string result;\n    std::string word;\n    for(auto c: s) {\n        if(c == ' ') {\n            result = word + \" \" + result;\n            word.clear();\n        } else {\n            word += c;\n        }\n    }\n    result = word + \" \" + result;\n    return result;",
    "    std::stringstream ss(s);\n    std::string word;\n    std::string result;\n    while(ss >> word) {\n        result = word + \" \" + result;\n    }\n    return result;",
    "    std::string result;\n    std::string word;\n    for (auto c : s) {\n        if (c == ' ') {\n            result = word + \" \" + result;\n            word.clear();\n        } else {\n            word += c;\n        }\n    }\n    result = word + \" \" + result;\n    return result;",
    "    std::stringstream ss(s);\n    std::string word;\n    std::string result;\n    while (ss >> word) {\n        std::reverse(word.begin(), word.end());\n        result += word + \" \";\n    }\n    result.pop_back();\n    return result;",
    "    std::stringstream ss(s);\n    std::string word;\n    std::string result;\n    while(ss >> word) {\n        std::reverse(word.begin(), word.end());\n        result += word + \" \";\n    }\n    result.pop_back();\n    return result;",
    "    std::string result;\n    std::string word;\n    std::stringstream ss(s);\n    while(ss >> word) {\n        result = word + \" \" + result;\n    }\n    return result;",
    "    std::string result;\n    std::string word;\n    for(int i = 0; i < s.length(); i++) {\n        if(s[i] == ' ') {\n            result = word + \" \" + result;\n            word.clear();\n        } else {\n            word += s[i];\n        }\n    }\n    result = word + \" \" + result;\n    return result;",
    "    std::string res;\n    std::stringstream ss(s);\n    std::string word;\n    while(ss >> word) {\n        res = word + \" \" + res;\n    }\n    return res;",
    "    std::string result = \"\";\n    std::string word = \"\";\n    for (int i = 0; i < s.length(); i++) {\n        if (s[i] == ' ') {\n            result = word + \" \" + result;\n            word = \"\";\n        } else {\n            word += s[i];\n        }\n    }\n    result = word + \" \" + result;\n    return result;",
    "    int i = 0;\n    int j = 0;\n    while(i < s.length()) {\n        while(i < s.length() && s[i] == ' ') {\n            i++;\n        }\n        j = i;\n        while(j < s.length() && s[j] != ' ') {\n            j++;\n        }\n        std::reverse(s.begin() + i, s.begin() + j);\n        i = j;\n    }\n    return s;"
  ]
}
{
  "name": "mbpp_304_find_Element",
  "language": "cpp",
  "prompt": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to find element at a given index after number of rotations.\nlong find_Element(std::vector<long> arr, std::vector<std::vector<long>> ranges, long rotations, long index) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_304_find_Element.py",
  "prompt_terminology": "verbatim",
  "tests": "}\nint main() {\n    auto candidate = find_Element;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5})), (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)0, (long)2}), (std::vector<long>)std::vector<long>({(long)0, (long)3})})), (2), (1)) == (3));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4})), (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)0, (long)1}), (std::vector<long>)std::vector<long>({(long)0, (long)2})})), (1), (2)) == (3));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6})), (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)0, (long)1}), (std::vector<long>)std::vector<long>({(long)0, (long)2})})), (1), (1)) == (1));\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    // Write your code here\n    long n = arr.size();\n    long m = ranges.size();\n    long i,j;\n    for(i=0;i<m;i++){\n        long l = ranges[i][0];\n        long r = ranges[i][1];\n        long d = r-l+1;\n        for(j=l;j<=r;j++){\n            arr[j] = arr[j] + d;\n        }\n    }\n    for(i=0;i<n;i++){\n        arr[i] = arr[i] - rotations;\n    }\n    return arr[index];",
    "    // Write your code here\n    long n = arr.size();\n    long m = ranges.size();\n    long i,j;\n    for(i=0;i<m;i++)\n    {\n        for(j=ranges[i][0];j<=ranges[i][1];j++)\n        {\n            arr[j] = arr[j] + 1;\n        }\n    }\n    long count = 0;\n    for(i=0;i<n;i++)\n    {\n        if(arr[i]>=rotations)\n        {\n            count++;\n        }\n    }\n    long *a = new long[count];\n    long k = 0;\n    for(i=0;i<n;i++)\n    {\n        if(arr[i]>=rotations)\n        {\n            a[k] = i;\n            k++;\n        }\n    }\n    long ans = a[index%count];\n    return ans;",
    "    // Write your code here\n    for(int i=0;i<rotations;i++){\n        int temp=arr[0];\n        for(int j=0;j<arr.size()-1;j++){\n            arr[j]=arr[j+1];\n        }\n        arr[arr.size()-1]=temp;\n    }\n    return arr[index];",
    "    // Write your code here\n    for(int i=0;i<rotations;i++){\n        int temp = arr[0];\n        for(int j=0;j<arr.size()-1;j++){\n            arr[j] = arr[j+1];\n        }\n        arr[arr.size()-1] = temp;\n    }\n    return arr[index];",
    "    // Write your code here\n    long n = arr.size();\n    long m = ranges.size();\n    long i, j;\n    for(i=0; i<m; i++)\n    {\n        long start = ranges[i][0];\n        long end = ranges[i][1];\n        long temp = arr[start];\n        for(j=start; j<end; j++)\n        {\n            arr[j] = arr[j+1];\n        }\n        arr[end] = temp;\n    }\n    long new_index = (index+rotations)%n;\n    return arr[new_index];",
    "    // Write your code here\n    long n = arr.size();\n    long m = ranges.size();\n    long i, j;\n    for(i = 0; i < m; i++) {\n        long l = ranges[i][0];\n        long r = ranges[i][1];\n        long d = ranges[i][2];\n        for(j = l; j <= r; j++) {\n            arr[j] += d;\n        }\n    }\n    long x = rotations % n;\n    long y = n - x;\n    std::rotate(arr.begin(), arr.begin() + y, arr.end());\n    return arr[index];",
    "    // Write your code here\n    long n = arr.size();\n    long m = ranges.size();\n    long i, j, k;\n    for(i = 0; i < rotations; i++) {\n        for(j = 0; j < m; j++) {\n            long start = ranges[j][0];\n            long end = ranges[j][1];\n            long temp = arr[start];\n            for(k = start; k < end; k++) {\n                arr[k] = arr[k + 1];\n            }\n            arr[end] = temp;\n        }\n    }\n    return arr[index];",
    "    // Write your code here\n    long n = arr.size();\n    long m = ranges.size();\n    long i, j;\n    for(i = 0; i < rotations; i++) {\n        for(j = 0; j < m; j++) {\n            long start = ranges[j][0];\n            long end = ranges[j][1];\n            long temp = arr[end];\n            for(long k = end; k > start; k--) {\n                arr[k] = arr[k-1];\n            }\n            arr[start] = temp;\n        }\n    }\n    return arr[index];",
    "    // Write your code here\n    long n = arr.size();\n    for(long i=0;i<ranges.size();i++){\n        long start = ranges[i][0];\n        long end = ranges[i][1];\n        long temp = arr[end];\n        for(long j=end;j>start;j--){\n            arr[j] = arr[j-1];\n        }\n        arr[start] = temp;\n    }\n    return arr[index];",
    "    // Write your code here\n    for(int i=0;i<rotations;i++){\n        long temp = arr[0];\n        for(int j=0;j<arr.size()-1;j++){\n            arr[j] = arr[j+1];\n        }\n        arr[arr.size()-1] = temp;\n    }\n    return arr[index];",
    "    // Write your code here\n    long n = arr.size();\n    long m = ranges.size();\n    long i,j,k,l,r,temp;\n    for(i=0;i<rotations;i++){\n        for(j=0;j<m;j++){\n            l = ranges[j][0];\n            r = ranges[j][1];\n            temp = arr[r];\n            for(k=r;k>l;k--){\n                arr[k] = arr[k-1];\n            }\n            arr[l] = temp;\n        }\n    }\n    return arr[index];",
    "    // Write your code here\n    for(int i=0;i<ranges.size();i++){\n        int start = ranges[i][0];\n        int end = ranges[i][1];\n        std::reverse(arr.begin()+start,arr.begin()+end+1);\n    }\n    return arr[index];",
    "    // Write your code here\n    long n = arr.size();\n    long r = rotations % n;\n    long i = index - r;\n    if (i < 0) {\n        i = i + n;\n    }\n    return arr[i];",
    "    // Write your code here\n    long n = arr.size();\n    long m = ranges.size();\n    long i, j;\n    for(i = 0; i < m; i++) {\n        for(j = ranges[i][0]; j <= ranges[i][1]; j++) {\n            arr[j] = arr[j] + 1;\n        }\n    }\n    for(i = 0; i < n; i++) {\n        arr[i] = arr[i] % n;\n    }\n    for(i = 0; i < n; i++) {\n        if(arr[i] == rotations) {\n            return i;\n        }\n    }\n    return -1;",
    "\t// Write your code here\n\t// Return the element at index after number of rotations\n\tfor(int i=0;i<rotations;i++){\n\t\tfor(int j=0;j<ranges.size();j++){\n\t\t\tint start = ranges[j][0];\n\t\t\tint end = ranges[j][1];\n\t\t\tint temp = arr[start];\n\t\t\tfor(int k=start;k<end;k++){\n\t\t\t\tarr[k] = arr[k+1];\n\t\t\t}\n\t\t\tarr[end] = temp;\n\t\t}\n\t}\n\treturn arr[index];",
    "    // Write your code here\n    long n = arr.size();\n    long m = ranges.size();\n    long i, j, k;\n    for(i = 0; i < rotations; i++) {\n        for(j = 0; j < m; j++) {\n            long l = ranges[j][0];\n            long r = ranges[j][1];\n            long d = ranges[j][2];\n            for(k = l; k <= r; k++) {\n                arr[k] += d;\n            }\n        }\n    }\n    return arr[index];",
    "    // Write your code here\n    long n = arr.size();\n    long m = ranges.size();\n    long i,j;\n    for(i=0;i<m;i++)\n    {\n        if(ranges[i][0]<=index && ranges[i][1]>=index)\n        {\n            rotations = rotations%(ranges[i][1]-ranges[i][0]+1);\n            if(rotations<0)\n            {\n                rotations = rotations + (ranges[i][1]-ranges[i][0]+1);\n            }\n            if(index+rotations<=ranges[i][1])\n            {\n                return arr[index+rotations];\n            }\n            else\n            {\n                return arr[index+rotations-ranges[i][1]+ranges[i][0]-1];\n            }\n        }\n    }\n    return arr[index];",
    "    // Write your code here\n    for(int i=0;i<rotations;i++){\n        int temp=arr[0];\n        for(int j=0;j<arr.size()-1;j++){\n            arr[j]=arr[j+1];\n        }\n        arr[arr.size()-1]=temp;\n    }\n    return arr[index];",
    "    // Write your code here\n    long n = arr.size();\n    long i;\n    for(i=0; i<ranges.size(); i++) {\n        long start = ranges[i][0];\n        long end = ranges[i][1];\n        long temp = arr[start];\n        long j;\n        for(j=start; j<end; j++) {\n            arr[j] = arr[j+1];\n        }\n        arr[end] = temp;\n    }\n    return arr[index];",
    "    // Write your code here\n    long n = arr.size();\n    long m = ranges.size();\n    long i,j;\n    for(i=0;i<m;i++){\n        long a = ranges[i][0];\n        long b = ranges[i][1];\n        long temp = arr[a];\n        for(j=a;j<b;j++){\n            arr[j] = arr[j+1];\n        }\n        arr[b] = temp;\n    }\n    long r = rotations%n;\n    long ans = (index+r)%n;\n    return arr[ans];",
    "    // Write your code here\n    long n = arr.size();\n    long m = ranges.size();\n    long i, j;\n    for(i = 0; i < m; i++)\n    {\n        long l = ranges[i][0];\n        long r = ranges[i][1];\n        for(j = l; j <= r; j++)\n        {\n            long temp = arr[j];\n            arr[j] = arr[l];\n            arr[l] = temp;\n            l++;\n        }\n    }\n    for(i = 0; i < rotations; i++)\n    {\n        long temp = arr[n-1];\n        for(j = n-1; j > 0; j--)\n        {\n            arr[j] = arr[j-1];\n        }\n        arr[0] = temp;\n    }\n    return arr[index];",
    "    // Write your code here\n    long n = arr.size();\n    long start = 0;\n    long end = n-1;\n    long mid = 0;\n    long pivot = 0;\n    while(start <= end){\n        mid = (start + end)/2;\n        if(arr[mid] > arr[mid+1]){\n            pivot = mid;\n            break;\n        }\n        else if(arr[start] <= arr[mid]){\n            start = mid + 1;\n        }\n        else{\n            end = mid - 1;\n        }\n    }\n    long r = rotations % n;\n    if(ranges[0][0] <= index && index <= ranges[0][1]){\n        index = (index + r) % n;\n    }\n    else if(ranges[1][0] <= index && index <= ranges[1][1]){\n        index = (index + r) % n;\n        if(index < pivot+1){\n            index = pivot + 1 + (pivot + 1 - index);\n        }\n    }\n    else{\n        index = (index + r) % n;\n        if(index > pivot){\n            index = pivot - (index - pivot);\n        }\n    }\n    return arr[index];",
    "    // Write your code here\n    long n = arr.size();\n    long r = rotations%n;\n    long i = index - r;\n    if(i<0){\n        i = n+i;\n    }\n    return arr[i];",
    "    // Write your code here\n    long n = arr.size();\n    long m = ranges.size();\n    long i = 0;\n    while(i < rotations) {\n        long start = ranges[i][0];\n        long end = ranges[i][1];\n        std::vector<long> temp;\n        for(long j = start; j <= end; j++) {\n            temp.push_back(arr[j]);\n        }\n        long k = 0;\n        for(long j = start; j <= end; j++) {\n            arr[j] = temp[k];\n            k++;\n        }\n        i++;\n    }\n    return arr[index];",
    "    // Write your code here\n    long n = arr.size();\n    long m = ranges.size();\n    long i,j;\n    long temp;\n    for(i=0;i<rotations;i++)\n    {\n        for(j=0;j<m;j++)\n        {\n            if(ranges[j][0]<=i && i<=ranges[j][1])\n            {\n                temp = arr[ranges[j][0]];\n                arr[ranges[j][0]] = arr[ranges[j][1]];\n                arr[ranges[j][1]] = temp;\n            }\n        }\n    }\n    return arr[index];",
    "    // Write your code here\n    long n = arr.size();\n    long m = ranges.size();\n    long i,j;\n    for(i=0;i<rotations;i++){\n        for(j=0;j<m;j++){\n            long start = ranges[j][0];\n            long end = ranges[j][1];\n            long temp = arr[start];\n            for(long k=start;k<end;k++){\n                arr[k] = arr[k+1];\n            }\n            arr[end] = temp;\n        }\n    }\n    return arr[index];",
    "    // Write your code here\n    long n = arr.size();\n    long m = ranges.size();\n    long i, j, k;\n    for(i = 0; i < rotations; i++) {\n        for(j = 0; j < m; j++) {\n            long l = ranges[j][0];\n            long r = ranges[j][1];\n            long d = ranges[j][2];\n            for(k = l; k <= r; k++) {\n                arr[k] += d;\n            }\n        }\n    }\n    return arr[index];",
    "    // Write your code here\n    long n = arr.size();\n    long m = ranges.size();\n    for(long i = 0; i < m; i++) {\n        long l = ranges[i][0];\n        long r = ranges[i][1];\n        std::reverse(arr.begin() + l, arr.begin() + r + 1);\n    }\n    long ans = arr[(index + rotations) % n];\n    return ans;",
    "    // Write your code here\n    long n = arr.size();\n    long m = ranges.size();\n    long i, j;\n    for(i=0; i<m; i++) {\n        long l = ranges[i][0];\n        long r = ranges[i][1];\n        for(j=l; j<=r; j++) {\n            long temp = arr[j];\n            arr[j] = arr[l];\n            arr[l] = temp;\n            l++;\n        }\n    }\n    long ans = arr[index];\n    return ans;",
    "    // Write your code here\n    long n = arr.size();\n    long m = ranges.size();\n    for(long i = 0; i < m; i++) {\n        long l = ranges[i][0];\n        long r = ranges[i][1];\n        long d = r - l + 1;\n        if(l <= r) {\n            for(long j = 0; j < d/2; j++) {\n                long temp = arr[l + j];\n                arr[l + j] = arr[r - j];\n                arr[r - j] = temp;\n            }\n        }\n    }\n    long ans = arr[(index + rotations) % n];\n    return ans;",
    "    // Write your code here\n    std::vector<long> temp;\n    for(long i=0;i<ranges.size();i++){\n        for(long j=ranges[i][0];j<=ranges[i][1];j++){\n            temp.push_back(arr[j]);\n        }\n        std::reverse(temp.begin(),temp.end());\n        long k=0;\n        for(long j=ranges[i][0];j<=ranges[i][1];j++){\n            arr[j]=temp[k];\n            k++;\n        }\n        temp.clear();\n    }\n    long n=arr.size();\n    long r=rotations%n;\n    long ans=arr[(index+r)%n];\n    return ans;",
    "    // Write your code here\n    long n = arr.size();\n    long m = ranges.size();\n    for(long i = 0; i < m; i++){\n        long l = ranges[i][0];\n        long r = ranges[i][1];\n        long d = r - l + 1;\n        long k = rotations % d;\n        if(index >= l && index <= r){\n            if(index - l < k){\n                index = index + d - k;\n            }\n            else{\n                index = index - k;\n            }\n        }\n    }\n    return arr[index];",
    "    // Write your code here\n    long n = arr.size();\n    long m = ranges.size();\n    long i,j;\n    for(i=0;i<m;i++)\n    {\n        long l = ranges[i][0];\n        long r = ranges[i][1];\n        long d = ranges[i][2];\n        for(j=l;j<=r;j++)\n        {\n            arr[j]+=d;\n        }\n    }\n    long ans = arr[index];\n    return ans;",
    "    // Write your code here\n    long n = arr.size();\n    long m = ranges.size();\n    long i, j, k, l, r, temp, temp1;\n    for(i = 0; i < rotations; i++){\n        for(j = 0; j < m; j++){\n            l = ranges[j][0];\n            r = ranges[j][1];\n            temp = arr[l];\n            for(k = l; k < r; k++){\n                temp1 = arr[k+1];\n                arr[k+1] = temp;\n                temp = temp1;\n            }\n            arr[l] = temp;\n        }\n    }\n    return arr[index];",
    "    // Write your code here\n    long n = arr.size();\n    long m = ranges.size();\n    long i,j;\n    for(i=0;i<rotations;i++){\n        for(j=0;j<m;j++){\n            long start = ranges[j][0];\n            long end = ranges[j][1];\n            long temp = arr[end];\n            for(long k=end;k>start;k--){\n                arr[k] = arr[k-1];\n            }\n            arr[start] = temp;\n        }\n    }\n    return arr[index];",
    "    // Write your code here\n    long n = arr.size();\n    long m = ranges.size();\n    long i,j;\n    for(i=0;i<rotations;i++)\n    {\n        for(j=0;j<m;j++)\n        {\n            long a = ranges[j][0];\n            long b = ranges[j][1];\n            long temp = arr[a];\n            arr[a] = arr[b];\n            arr[b] = temp;\n        }\n    }\n    return arr[index];",
    "    // Write your code here\n    long n = arr.size();\n    long m = ranges.size();\n    for(long i=0;i<m;i++)\n    {\n        long l = ranges[i][0];\n        long r = ranges[i][1];\n        long d = r-l+1;\n        long temp = arr[l];\n        for(long j=l;j<r;j++)\n        {\n            arr[j] = arr[j+1];\n        }\n        arr[r] = temp;\n    }\n    long ans = arr[index];\n    return ans;",
    "    long n = arr.size();\n    long rot = rotations % n;\n    long start = 0;\n    long end = n - 1;\n    for (long i = 0; i < ranges.size(); i++) {\n        if (ranges[i][0] <= index && ranges[i][1] >= index) {\n            start = ranges[i][0];\n            end = ranges[i][1];\n            break;\n        }\n    }\n    long new_index = (index - start + rot) % (end - start + 1) + start;\n    return arr[new_index];",
    "    // Write your code here\n    long n = arr.size();\n    long m = ranges.size();\n    long i,j;\n    for(i=0;i<m;i++)\n    {\n        long l = ranges[i][0];\n        long r = ranges[i][1];\n        long d = r-l+1;\n        long temp = arr[l];\n        for(j=l;j<r;j++)\n        {\n            arr[j] = arr[j+1];\n        }\n        arr[r] = temp;\n    }\n    long ans = arr[index];\n    return ans;",
    "    // Write your code here\n    long n = arr.size();\n    long m = ranges.size();\n    long i,j;\n    for(i=0;i<m;i++){\n        for(j=ranges[i][0];j<=ranges[i][1];j++){\n            arr[j] = arr[j] + 1;\n        }\n    }\n    for(i=0;i<n;i++){\n        arr[i] = arr[i] % n;\n    }\n    for(i=0;i<n;i++){\n        if(arr[i] > 0){\n            arr[i] = i + arr[i];\n        }\n        else{\n            arr[i] = i - arr[i];\n        }\n    }\n    return arr[index];",
    "    // Write your code here\n    long n=arr.size();\n    for(long i=0;i<rotations;i++){\n        long temp=arr[n-1];\n        for(long j=n-1;j>0;j--){\n            arr[j]=arr[j-1];\n        }\n        arr[0]=temp;\n    }\n    return arr[index];",
    "    // Write your code here\n    long n = arr.size();\n    long i = 0;\n    while(i < rotations){\n        long start = ranges[i][0];\n        long end = ranges[i][1];\n        long temp = arr[end];\n        for(long j = end; j > start; j--){\n            arr[j] = arr[j-1];\n        }\n        arr[start] = temp;\n        i++;\n    }\n    return arr[index];",
    "    // Write your code here\n    for(int i=0;i<rotations;i++){\n        long temp=arr[0];\n        for(int j=0;j<arr.size()-1;j++){\n            arr[j]=arr[j+1];\n        }\n        arr[arr.size()-1]=temp;\n    }\n    return arr[index];",
    "    // Write your code here\n    long n = arr.size();\n    long m = ranges.size();\n    for(long i=0;i<m;i++){\n        long l = ranges[i][0];\n        long r = ranges[i][1];\n        long d = r-l+1;\n        long k = rotations%d;\n        if(index>=l && index<=r){\n            if(index-l<k){\n                index = index+d-k;\n            }\n            else{\n                index = index-k;\n            }\n        }\n    }\n    return arr[index];",
    "    // Write your code here\n    long n = arr.size();\n    long m = ranges.size();\n    long i, j, k;\n    for(i = 0; i < rotations; i++) {\n        for(j = 0; j < m; j++) {\n            long l = ranges[j][0];\n            long r = ranges[j][1];\n            long temp = arr[r];\n            for(k = r; k > l; k--) {\n                arr[k] = arr[k-1];\n            }\n            arr[l] = temp;\n        }\n    }\n    return arr[index];",
    "    // Write your code here\n    long n = arr.size();\n    long m = ranges.size();\n    long i, j;\n    for(i=0;i<rotations;i++){\n        for(j=0;j<m;j++){\n            long l = ranges[j][0];\n            long r = ranges[j][1];\n            long temp = arr[l];\n            for(long k=l;k<r;k++){\n                arr[k] = arr[k+1];\n            }\n            arr[r] = temp;\n        }\n    }\n    return arr[index];",
    "    // Write your code here\n    long n = arr.size();\n    long m = ranges.size();\n    long i,j;\n    for(i=0;i<m;i++)\n    {\n        for(j=ranges[i][0];j<=ranges[i][1];j++)\n        {\n            arr[j] = arr[j] + 1;\n        }\n    }\n    long count = 0;\n    for(i=0;i<n;i++)\n    {\n        if(arr[i]%2!=0)\n        {\n            count++;\n        }\n    }\n    if(count>=rotations)\n    {\n        return arr[index];\n    }\n    else\n    {\n        return -1;\n    }",
    "    // Write your code here\n    long n = arr.size();\n    long r = ranges.size();\n    long i,j;\n    for(i=0;i<r;i++){\n        long l = ranges[i][0];\n        long r = ranges[i][1];\n        for(j=0;j<rotations;j++){\n            long temp = arr[l];\n            for(long k=l;k<r;k++){\n                arr[k] = arr[k+1];\n            }\n            arr[r] = temp;\n        }\n    }\n    return arr[index];",
    "    // Write your code here\n    long n = arr.size();\n    long m = ranges.size();\n    long i, j, k;\n    for(i = 0; i < rotations; i++) {\n        for(j = 0; j < m; j++) {\n            long l = ranges[j][0];\n            long r = ranges[j][1];\n            long temp = arr[l];\n            for(k = l; k < r; k++) {\n                arr[k] = arr[k+1];\n            }\n            arr[r] = temp;\n        }\n    }\n    return arr[index];",
    "    // Write your code here\n    long n = arr.size();\n    long m = ranges.size();\n    long i,j;\n    for(i=0;i<rotations;i++){\n        for(j=0;j<m;j++){\n            long l = ranges[j][0];\n            long r = ranges[j][1];\n            long temp = arr[l];\n            for(long k=l;k<r;k++){\n                arr[k] = arr[k+1];\n            }\n            arr[r] = temp;\n        }\n    }\n    return arr[index];",
    "    // Write your code here\n    long n = arr.size();\n    long i,j;\n    for(i=0;i<rotations;i++)\n    {\n        for(j=0;j<ranges.size();j++)\n        {\n            long start = ranges[j][0];\n            long end = ranges[j][1];\n            long temp = arr[end];\n            for(long k=end;k>start;k--)\n            {\n                arr[k] = arr[k-1];\n            }\n            arr[start] = temp;\n        }\n    }\n    return arr[index];",
    "    // Write your code here\n    long n = arr.size();\n    long m = ranges.size();\n    long i;\n    for(i=0;i<m;i++)\n    {\n        long l = ranges[i][0];\n        long r = ranges[i][1];\n        long d = r-l+1;\n        long temp = arr[l];\n        for(long j=l;j<r;j++)\n        {\n            arr[j] = arr[j+1];\n        }\n        arr[r] = temp;\n    }\n    long ans = arr[index];\n    return ans;",
    "    // Write your code here\n    long n = arr.size();\n    long m = ranges.size();\n    std::vector<long> temp(n, 0);\n    for(long i = 0; i < m; i++) {\n        long l = ranges[i][0];\n        long r = ranges[i][1];\n        for(long j = l; j <= r; j++) {\n            temp[j]++;\n        }\n    }\n    for(long i = 0; i < n; i++) {\n        temp[i] = temp[i] % rotations;\n    }\n    for(long i = 0; i < n; i++) {\n        long j = (i + temp[i]) % n;\n        std::swap(arr[i], arr[j]);\n    }\n    return arr[index];",
    "    // Write your code here\n    long n = arr.size();\n    long m = ranges.size();\n    for(long i = 0; i < m; i++)\n    {\n        long l = ranges[i][0];\n        long r = ranges[i][1];\n        long d = r-l+1;\n        for(long j = l; j <= r; j++)\n        {\n            long temp = arr[j];\n            arr[j] = arr[(j+d)%n];\n            arr[(j+d)%n] = temp;\n        }\n    }\n    return arr[index];",
    "    // Write your code here\n    for(int i=0;i<rotations;i++){\n        int temp = arr[0];\n        for(int j=0;j<arr.size()-1;j++){\n            arr[j] = arr[j+1];\n        }\n        arr[arr.size()-1] = temp;\n    }\n    return arr[index];",
    "    // Write your code here\n    long n = arr.size();\n    long m = ranges.size();\n    for(long i=0;i<m;i++){\n        long start = ranges[i][0];\n        long end = ranges[i][1];\n        long temp = arr[end];\n        for(long j=end;j>start;j--){\n            arr[j] = arr[j-1];\n        }\n        arr[start] = temp;\n    }\n    long ans = arr[index];\n    return ans;",
    "    // Write your code here\n    long n = arr.size();\n    long m = ranges.size();\n    long arr2[n];\n    for(long i=0;i<n;i++){\n        arr2[i] = arr[i];\n    }\n    for(long i=0;i<m;i++){\n        long l = ranges[i][0];\n        long r = ranges[i][1];\n        long d = ranges[i][2];\n        for(long j=l;j<=r;j++){\n            arr2[j] += d;\n        }\n    }\n    long arr3[n];\n    for(long i=0;i<n;i++){\n        arr3[i] = arr2[i];\n    }\n    for(long i=0;i<rotations;i++){\n        long temp = arr3[0];\n        for(long j=0;j<n-1;j++){\n            arr3[j] = arr3[j+1];\n        }\n        arr3[n-1] = temp;\n    }\n    return arr3[index];",
    "    // Write your code here\n    long n = arr.size();\n    long m = ranges.size();\n    long i,j;\n    for(i=0;i<m;i++)\n    {\n        long l = ranges[i][0];\n        long r = ranges[i][1];\n        for(j=l;j<=r;j++)\n        {\n            long temp = arr[j];\n            arr[j] = arr[j+1];\n            arr[j+1] = temp;\n        }\n    }\n    return arr[index];",
    "    // Write your code here\n    long n = arr.size();\n    long m = ranges.size();\n    long i = 0;\n    long j = 0;\n    long k = 0;\n    long l = 0;\n    long temp = 0;\n    long temp1 = 0;\n    long temp2 = 0;\n    long temp3 = 0;\n    long temp4 = 0;\n    long temp5 = 0;\n    long temp6 = 0;\n    long temp7 = 0;\n    long temp8 = 0;\n    long temp9 = 0;\n    long temp10 = 0;\n    long temp11 = 0;\n    long temp12 = 0;\n    long temp13 = 0;\n    long temp14 = 0;\n    long temp15 = 0;\n    long temp16 = 0;\n    long temp17 = 0;\n    long temp18 = 0;\n    long temp19 = 0;\n    long temp20 = 0;\n    long temp21 = 0;\n    long temp22 = 0;\n    long temp23 = 0;\n    long temp24 = 0;\n    long temp25 = 0;\n    long temp26 = 0;\n    long temp27 = 0;\n    long temp28 = 0;\n    long temp29 = 0;\n    long temp30 = 0;\n    long temp31 = 0;\n    long temp32 = 0;\n    long temp33 = 0;\n    long temp34 = 0;\n    long temp35 = 0;\n    long temp36 = 0;\n    long temp37 = 0;\n    long temp38 = 0;\n    long temp39 = 0;\n    long temp40 = 0;\n    long temp41 = 0;\n    long temp42 = 0;\n    long temp43 = 0;\n    long temp44 = 0;\n    long temp45 = 0;\n    long temp46 = 0;\n    long temp47 = 0;\n    long temp48 = 0;\n    long temp49 = 0;\n    long temp50 = 0;\n    long temp51 = 0;\n    long temp52 = 0;\n    long temp53 = 0;\n    long temp54 = 0;\n    long temp55 = 0;\n    long temp56 = 0;\n    long temp",
    "    // Write your code here\n    for(int i=0;i<ranges.size();i++)\n    {\n        int start = ranges[i][0];\n        int end = ranges[i][1];\n        while(start<end)\n        {\n            int temp = arr[start];\n            arr[start] = arr[end];\n            arr[end] = temp;\n            start++;\n            end--;\n        }\n    }\n    return arr[index];",
    "    // Write your code here\n    long n = arr.size();\n    long m = ranges.size();\n    long i, j, k;\n    for(i = 0; i < rotations; i++) {\n        for(j = 0; j < m; j++) {\n            long start = ranges[j][0];\n            long end = ranges[j][1];\n            long temp = arr[start];\n            for(k = start; k < end; k++) {\n                arr[k] = arr[k + 1];\n            }\n            arr[end] = temp;\n        }\n    }\n    return arr[index];",
    "    // Write your code here\n    long n = arr.size();\n    long m = ranges.size();\n    long i, j, k;\n    for(i = 0; i < rotations; i++) {\n        for(j = 0; j < m; j++) {\n            long start = ranges[j][0];\n            long end = ranges[j][1];\n            long temp = arr[end];\n            for(k = end; k > start; k--) {\n                arr[k] = arr[k-1];\n            }\n            arr[start] = temp;\n        }\n    }\n    return arr[index];",
    "    // Write your code here\n    long n = arr.size();\n    long m = ranges.size();\n    long i,j;\n    for(i=0;i<m;i++)\n    {\n        long l = ranges[i][0];\n        long r = ranges[i][1];\n        long d = ranges[i][2];\n        for(j=l;j<=r;j++)\n        {\n            arr[j] = arr[j] + d;\n        }\n    }\n    long k = rotations%n;\n    long ans = arr[(index+k)%n];\n    return ans;",
    "    // Write your code here\n    for(int i=0;i<ranges.size();i++)\n    {\n        if(ranges[i][0]<=index && ranges[i][1]>=index)\n        {\n            rotations=rotations%(ranges[i][1]-ranges[i][0]+1);\n            if(rotations==0)\n            {\n                return arr[index];\n            }\n            else\n            {\n                return arr[(index+rotations)%arr.size()];\n            }\n        }\n    }",
    "    // Write your code here\n    long n = arr.size();\n    long m = ranges.size();\n    long i, j;\n    for(i=0; i<m; i++) {\n        for(j=ranges[i][0]; j<=ranges[i][1]; j++) {\n            arr[j] = arr[j] + 1;\n        }\n    }\n    long count = 0;\n    for(i=0; i<n; i++) {\n        if(arr[i] >= rotations) {\n            count++;\n        }\n    }\n    long k = index - count;\n    if(k < 0) {\n        return -1;\n    }\n    else {\n        return arr[k];\n    }",
    "    // Write your code here\n    long n = arr.size();\n    for(long i=0;i<rotations;i++){\n        long start = ranges[i][0];\n        long end = ranges[i][1];\n        std::vector<long> temp;\n        for(long j=start;j<=end;j++){\n            temp.push_back(arr[j]);\n        }\n        long k = start;\n        for(long j=temp.size()-1;j>=0;j--){\n            arr[k] = temp[j];\n            k++;\n        }\n    }\n    return arr[index];",
    "    // Write your code here\n    long n=arr.size();\n    long r=ranges.size();\n    long i,j,k,l,m,p;\n    for(i=0;i<r;i++)\n    {\n        for(j=ranges[i][0];j<=ranges[i][1];j++)\n        {\n            long temp=arr[j];\n            arr[j]=arr[ranges[i][1]-j+ranges[i][0]];\n            arr[ranges[i][1]-j+ranges[i][0]]=temp;\n        }\n    }\n    for(i=0;i<rotations;i++)\n    {\n        long temp=arr[n-1];\n        for(j=n-1;j>0;j--)\n        {\n            arr[j]=arr[j-1];\n        }\n        arr[0]=temp;\n    }\n    return arr[index];",
    "    // Write your code here\n    long n = arr.size();\n    long m = ranges.size();\n    for(long i = 0; i < m; i++) {\n        long l = ranges[i][0];\n        long r = ranges[i][1];\n        std::reverse(arr.begin() + l, arr.begin() + r + 1);\n    }\n    long ans = arr[(index + rotations) % n];\n    return ans;",
    "\t// Write your code here\n\t// Return the element at index after number of rotations\n\tfor (int i = 0; i < rotations; i++) {\n\t\tfor (int j = 0; j < ranges.size(); j++) {\n\t\t\tint start = ranges[j][0];\n\t\t\tint end = ranges[j][1];\n\t\t\tint temp = arr[start];\n\t\t\tfor (int k = start; k < end; k++) {\n\t\t\t\tarr[k] = arr[k + 1];\n\t\t\t}\n\t\t\tarr[end] = temp;\n\t\t}\n\t}\n\treturn arr[index];",
    "    // Write your code here\n    long n = arr.size();\n    long m = ranges.size();\n    for(long i=0;i<m;i++)\n    {\n        long l = ranges[i][0];\n        long r = ranges[i][1];\n        long d = r-l+1;\n        long temp = arr[l];\n        for(long j=l;j<r;j++)\n        {\n            arr[j] = arr[j+1];\n        }\n        arr[r] = temp;\n    }\n    return arr[index];",
    "    // Write your code here\n    long n = arr.size();\n    long m = ranges.size();\n    long i,j;\n    for(i=0;i<m;i++)\n    {\n        for(j=ranges[i][0];j<=ranges[i][1];j++)\n        {\n            arr[j] = arr[j] + 1;\n        }\n    }\n    long temp = rotations%n;\n    long arr2[n];\n    for(i=0;i<n;i++)\n    {\n        arr2[(i+temp)%n] = arr[i];\n    }\n    return arr2[index];",
    "    // Write your code here\n    long n = arr.size();\n    long r = rotations % n;\n    for(long i = 0; i < ranges.size(); i++) {\n        long l = ranges[i][0];\n        long r = ranges[i][1];\n        std::reverse(arr.begin() + l, arr.begin() + r + 1);\n    }\n    long ans = arr[(index + r) % n];\n    return ans;",
    "    // Write your code here\n    long n = arr.size();\n    long m = ranges.size();\n    long i, j, k;\n    for(i = 0; i < m; i++) {\n        for(j = ranges[i][0]; j <= ranges[i][1]; j++) {\n            long temp = arr[j];\n            for(k = j; k > 0; k--) {\n                arr[k] = arr[k-1];\n            }\n            arr[0] = temp;\n        }\n    }\n    return arr[index];",
    "    // Write your code here\n    long n = arr.size();\n    long m = ranges.size();\n    long i,j;\n    for(i=0;i<m;i++)\n    {\n        for(j=ranges[i][0];j<=ranges[i][1];j++)\n        {\n            arr[j] = arr[j] + 1;\n        }\n    }\n    long k = rotations%n;\n    long ans = arr[(index+k)%n];\n    return ans;",
    "    // Write your code here\n    long n = arr.size();\n    long m = ranges.size();\n    long i, j;\n    for(i=0; i<m; i++) {\n        long l = ranges[i][0];\n        long r = ranges[i][1];\n        long d = ranges[i][2];\n        for(j=l; j<=r; j++) {\n            arr[j] += d;\n        }\n    }\n    long ans = arr[index];\n    return ans;",
    "    // Write your code here\n    long n = arr.size();\n    long m = ranges.size();\n    long i,j;\n    for(i=0;i<rotations;i++){\n        for(j=0;j<m;j++){\n            long start = ranges[j][0];\n            long end = ranges[j][1];\n            long temp = arr[end];\n            long k;\n            for(k=end;k>start;k--){\n                arr[k] = arr[k-1];\n            }\n            arr[start] = temp;\n        }\n    }\n    return arr[index];",
    "    // Write your code here\n    long n = arr.size();\n    long m = ranges.size();\n    long i,j;\n    for(i=0;i<m;i++){\n        for(j=ranges[i][0];j<=ranges[i][1];j++){\n            long temp = arr[j];\n            arr[j] = arr[j+1];\n            arr[j+1] = temp;\n        }\n    }\n    return arr[index];",
    "    // Write your code here\n    long n = arr.size();\n    long m = ranges.size();\n    long i, j, k;\n    for(i = 0; i < rotations; i++) {\n        for(j = 0; j < m; j++) {\n            long l = ranges[j][0];\n            long r = ranges[j][1];\n            long temp = arr[l];\n            for(k = l; k < r; k++) {\n                arr[k] = arr[k+1];\n            }\n            arr[r] = temp;\n        }\n    }\n    return arr[index];",
    "    // Write your code here\n    long n = arr.size();\n    long m = ranges.size();\n    long i, j;\n    for(i = 0; i < rotations; i++) {\n        for(j = 0; j < m; j++) {\n            long start = ranges[j][0];\n            long end = ranges[j][1];\n            long temp = arr[start];\n            long k;\n            for(k = start; k < end; k++) {\n                arr[k] = arr[k+1];\n            }\n            arr[end] = temp;\n        }\n    }\n    return arr[index];",
    "    // Write your code here\n    long n = arr.size();\n    long m = ranges.size();\n    for(long i = 0; i < m; i++) {\n        long l = ranges[i][0];\n        long r = ranges[i][1];\n        long d = r - l + 1;\n        long temp = arr[l];\n        for(long j = l; j < r; j++) {\n            arr[j] = arr[j+1];\n        }\n        arr[r] = temp;\n    }\n    long r = rotations % n;\n    long ans = (index + n - r) % n;\n    return arr[ans];",
    "    // Write your code here\n    long n = arr.size();\n    for(long i=0;i<ranges.size();i++)\n    {\n        long start = ranges[i][0];\n        long end = ranges[i][1];\n        long temp = arr[end];\n        for(long j=end;j>start;j--)\n        {\n            arr[j] = arr[j-1];\n        }\n        arr[start] = temp;\n    }\n    long index_ = index;\n    if(index_ >= n)\n    {\n        index_ = index_ % n;\n    }\n    return arr[index_];",
    "    // Write your code here\n    long n = arr.size();\n    long m = ranges.size();\n    long temp;\n    for(long i=0;i<m;i++)\n    {\n        for(long j=ranges[i][0];j<=ranges[i][1];j++)\n        {\n            temp = arr[j];\n            arr[j] = arr[ranges[i][1]-j+ranges[i][0]];\n            arr[ranges[i][1]-j+ranges[i][0]] = temp;\n        }\n    }\n    long index_rot = index - rotations;\n    if(index_rot<0)\n    {\n        index_rot = n + index_rot;\n    }\n    return arr[index_rot];",
    "    // Write your code here\n    long n = arr.size();\n    long m = ranges.size();\n    for(long i=0;i<m;i++){\n        long l = ranges[i][0];\n        long r = ranges[i][1];\n        long d = r-l+1;\n        long temp = arr[l];\n        for(long j=l;j<r;j++){\n            arr[j] = arr[j+1];\n        }\n        arr[r] = temp;\n    }\n    long k = rotations%n;\n    long ans = arr[(index+k)%n];\n    return ans;",
    "    // Write your code here\n    long n = arr.size();\n    long m = ranges.size();\n    long i, j;\n    for(i = 0; i < m; i++) {\n        for(j = ranges[i][0]; j <= ranges[i][1]; j++) {\n            arr[j] = arr[j] + 1;\n        }\n    }\n    long count = 0;\n    for(i = 0; i < n; i++) {\n        if(arr[i] > rotations) {\n            count++;\n        }\n    }\n    long ans = index - count;\n    if(ans < 0) {\n        ans = n + ans;\n    }\n    return arr[ans];",
    "    // Write your code here\n    std::vector<long> temp;\n    for(long i=0;i<rotations;i++){\n        temp = arr;\n        for(long j=0;j<arr.size();j++){\n            arr[j] = temp[ranges[i][j]];\n        }\n    }\n    return arr[index];",
    "\t// Write your code here\n\t// Return the element at index after number of rotations\n\tfor (int i = 0; i < rotations; i++) {\n\t\tfor (int j = 0; j < ranges.size(); j++) {\n\t\t\tstd::vector<long> range = ranges[j];\n\t\t\tstd::reverse(arr.begin() + range[0], arr.begin() + range[1] + 1);\n\t\t}\n\t}\n\treturn arr[index];",
    "    // Write your code here\n    long n = arr.size();\n    long m = ranges.size();\n    long i,j,k;\n    long temp;\n    for(i=0;i<m;i++)\n    {\n        for(j=ranges[i][0];j<=ranges[i][1];j++)\n        {\n            temp = arr[j];\n            k = j;\n            while(k>ranges[i][0])\n            {\n                arr[k] = arr[k-1];\n                k--;\n            }\n            arr[ranges[i][0]] = temp;\n        }\n    }\n    long ans = index;\n    for(i=0;i<rotations;i++)\n    {\n        ans = ans - 1;\n        if(ans<0)\n        {\n            ans = n-1;\n        }\n    }\n    return arr[ans];",
    "    // Write your code here\n    long n = arr.size();\n    long m = ranges.size();\n    long i,j,k;\n    for(i=0;i<rotations;i++){\n        for(j=0;j<m;j++){\n            long start = ranges[j][0];\n            long end = ranges[j][1];\n            long temp = arr[start];\n            for(k=start;k<end;k++){\n                arr[k] = arr[k+1];\n            }\n            arr[end] = temp;\n        }\n    }\n    return arr[index];",
    "    // Write your code here\n    long n = arr.size();\n    long m = ranges.size();\n    long i,j;\n    for(i=0;i<m;i++){\n        long l = ranges[i][0];\n        long r = ranges[i][1];\n        long d = r-l+1;\n        long temp = arr[l];\n        for(j=l;j<r;j++){\n            arr[j] = arr[j+1];\n        }\n        arr[r] = temp;\n    }\n    long ans = arr[(index+rotations)%n];\n    return ans;",
    "    // Write your code here\n    long n = arr.size();\n    long m = ranges.size();\n    long i,j;\n    for(i=0;i<rotations;i++){\n        for(j=0;j<m;j++){\n            long start = ranges[j][0];\n            long end = ranges[j][1];\n            long temp = arr[start];\n            for(long k=start;k<end;k++){\n                arr[k] = arr[k+1];\n            }\n            arr[end] = temp;\n        }\n    }\n    return arr[index];",
    "    // Write your code here\n    long n = arr.size();\n    long m = ranges.size();\n    long i, j;\n    for(i = 0; i < m; i++) {\n        for(j = ranges[i][0]; j <= ranges[i][1]; j++) {\n            arr[j] = arr[j] + 1;\n        }\n    }\n    for(i = 0; i < n; i++) {\n        if(arr[i] >= rotations) {\n            arr[i] = arr[i] % rotations;\n        }\n    }\n    for(i = 0; i < n; i++) {\n        if(arr[i] != 0) {\n            long temp = arr[i];\n            arr[i] = arr[i - temp];\n            arr[i - temp] = temp;\n        }\n    }\n    return arr[index];",
    "\t// Write your code here\n\t// Return the element at index after number of rotations\n\tfor (int i = 0; i < rotations; i++) {\n\t\tfor (int j = 0; j < ranges.size(); j++) {\n\t\t\tint start = ranges[j][0];\n\t\t\tint end = ranges[j][1];\n\t\t\tint temp = arr[end];\n\t\t\tfor (int k = end; k > start; k--) {\n\t\t\t\tarr[k] = arr[k - 1];\n\t\t\t}\n\t\t\tarr[start] = temp;\n\t\t}\n\t}\n\treturn arr[index];",
    "    // Write your code here\n    long n = arr.size();\n    long m = ranges.size();\n    long i = 0;\n    while(i < rotations){\n        long start = ranges[i%m][0];\n        long end = ranges[i%m][1];\n        std::vector<long> temp;\n        for(long j = start; j <= end; j++){\n            temp.push_back(arr[j]);\n        }\n        for(long j = start; j <= end; j++){\n            arr[j] = temp[end-j];\n        }\n        i++;\n    }\n    return arr[index];",
    "    // Write your code here\n    long n = arr.size();\n    long m = ranges.size();\n    long i,j;\n    for(i=0;i<m;i++){\n        for(j=ranges[i][0];j<=ranges[i][1];j++){\n            arr[j] = arr[j] + 1;\n        }\n    }\n    long count = 0;\n    for(i=0;i<n;i++){\n        if(arr[i]>=rotations){\n            count++;\n        }\n    }\n    if(index<count){\n        return arr[index];\n    }\n    else{\n        return -1;\n    }",
    "    // Write your code here\n    long n = arr.size();\n    long m = ranges.size();\n    long i,j;\n    long temp;\n    for(i=0;i<rotations;i++)\n    {\n        for(j=0;j<m;j++)\n        {\n            temp = arr[ranges[j][0]];\n            arr[ranges[j][0]] = arr[ranges[j][1]];\n            arr[ranges[j][1]] = temp;\n        }\n    }\n    return arr[index];",
    "    // Write your code here\n    long n = arr.size();\n    long m = ranges.size();\n    for(long i=0;i<m;i++)\n    {\n        long l = ranges[i][0];\n        long r = ranges[i][1];\n        long d = r-l+1;\n        long temp = arr[l];\n        for(long j=l;j<r;j++)\n        {\n            arr[j] = arr[j+1];\n        }\n        arr[r] = temp;\n    }\n    long ans = arr[index];\n    return ans;",
    "    // Write your code here\n    long n = arr.size();\n    long m = ranges.size();\n    long i,j;\n    long temp;\n    for(i=0;i<rotations;i++)\n    {\n        for(j=0;j<m;j++)\n        {\n            temp = arr[ranges[j][0]];\n            arr[ranges[j][0]] = arr[ranges[j][1]];\n            arr[ranges[j][1]] = temp;\n        }\n    }\n    return arr[index];",
    "    // Write your code here\n    long n = arr.size();\n    long m = ranges.size();\n    std::vector<long> arr_copy(n);\n    for(long i = 0; i < n; i++) {\n        arr_copy[i] = arr[i];\n    }\n    for(long i = 0; i < m; i++) {\n        long start = ranges[i][0];\n        long end = ranges[i][1];\n        long temp = arr_copy[start];\n        for(long j = start; j < end; j++) {\n            arr_copy[j] = arr_copy[j+1];\n        }\n        arr_copy[end] = temp;\n    }\n    return arr_copy[index];",
    "    // Write your code here\n    long n = arr.size();\n    long m = ranges.size();\n    long i,j;\n    for(i=0;i<m;i++)\n    {\n        for(j=ranges[i][0];j<=ranges[i][1];j++)\n        {\n            arr[j] = arr[j] + rotations;\n        }\n    }\n    for(i=0;i<n;i++)\n    {\n        arr[i] = arr[i]%n;\n    }\n    long ans = arr[index];\n    return ans;",
    "    // Write your code here\n    int n = arr.size();\n    int r = ranges.size();\n    int i,j;\n    for(i=0;i<r;i++){\n        int start = ranges[i][0];\n        int end = ranges[i][1];\n        for(j=start;j<=end;j++){\n            int temp = arr[j];\n            arr[j] = arr[end];\n            arr[end] = temp;\n            end--;\n        }\n    }\n    return arr[index];",
    "    // Write your code here\n    long n = arr.size();\n    long m = ranges.size();\n    long i, j, k;\n    for(i = 0; i < rotations; i++) {\n        for(j = 0; j < m; j++) {\n            if(ranges[j][0] <= index && index <= ranges[j][1]) {\n                index = ranges[j][1] - (index - ranges[j][0]);\n                break;\n            }\n        }\n    }\n    return arr[index];",
    "    // Write your code here\n    long n = arr.size();\n    long m = ranges.size();\n    long i,j;\n    for(i=0;i<rotations;i++){\n        for(j=0;j<m;j++){\n            long start = ranges[j][0];\n            long end = ranges[j][1];\n            long temp = arr[start];\n            for(long k=start;k<end;k++){\n                arr[k] = arr[k+1];\n            }\n            arr[end] = temp;\n        }\n    }\n    return arr[index];",
    "    // Write your code here\n    long n = arr.size();\n    for(long i = 0; i < rotations; i++) {\n        long start = ranges[i][0];\n        long end = ranges[i][1];\n        long temp = arr[end];\n        for(long j = end; j > start; j--) {\n            arr[j] = arr[j-1];\n        }\n        arr[start] = temp;\n    }\n    return arr[index];",
    "    // Write your code here\n    for(long i=0;i<rotations;i++){\n        long temp = arr[0];\n        for(long j=0;j<arr.size()-1;j++){\n            arr[j] = arr[j+1];\n        }\n        arr[arr.size()-1] = temp;\n    }\n    return arr[index];",
    "    // Write your code here\n    long n = arr.size();\n    for(int i=0;i<rotations;i++){\n        long temp = arr[n-1];\n        for(int j=n-1;j>0;j--){\n            arr[j] = arr[j-1];\n        }\n        arr[0] = temp;\n    }\n    return arr[index];",
    "    // Write your code here\n    long n = arr.size();\n    long m = ranges.size();\n    long i,j;\n    long temp;\n    for(i=0;i<rotations;i++){\n        for(j=0;j<m;j++){\n            temp = arr[ranges[j][0]];\n            arr[ranges[j][0]] = arr[ranges[j][1]];\n            arr[ranges[j][1]] = temp;\n        }\n    }\n    return arr[index];",
    "    // Write your code here\n    long n = arr.size();\n    long m = ranges.size();\n    long i, j, k;\n    for(i = 0; i < rotations; i++) {\n        for(j = 0; j < m; j++) {\n            if(ranges[j][0] <= i && i <= ranges[j][1]) {\n                long temp = arr[ranges[j][0]];\n                for(k = ranges[j][0]; k < ranges[j][1]; k++) {\n                    arr[k] = arr[k+1];\n                }\n                arr[ranges[j][1]] = temp;\n            }\n        }\n    }\n    return arr[index];",
    "    // Write your code here\n    long n = arr.size();\n    long i, j;\n    long k = rotations % n;\n    for (i = 0; i < ranges.size(); i++) {\n        long l = ranges[i][0];\n        long r = ranges[i][1];\n        long d = ranges[i][2];\n        for (j = l; j <= r; j++) {\n            arr[j] += d;\n        }\n    }\n    for (i = 0; i < k; i++) {\n        long temp = arr[n - 1];\n        for (j = n - 1; j > 0; j--) {\n            arr[j] = arr[j - 1];\n        }\n        arr[0] = temp;\n    }\n    return arr[index];",
    "    // Write your code here\n    long n = arr.size();\n    long m = ranges.size();\n    long i,j;\n    for(i=0;i<rotations;i++){\n        for(j=0;j<m;j++){\n            long start = ranges[j][0];\n            long end = ranges[j][1];\n            long temp = arr[end];\n            for(long k=end;k>start;k--){\n                arr[k] = arr[k-1];\n            }\n            arr[start] = temp;\n        }\n    }\n    return arr[index];",
    "    // Write your code here\n    long n = arr.size();\n    long m = ranges.size();\n    for(long i=0;i<m;i++){\n        long l = ranges[i][0];\n        long r = ranges[i][1];\n        long d = r-l+1;\n        rotations = rotations%d;\n        if(rotations<0){\n            rotations = rotations+d;\n        }\n        if(index>=l && index<=r){\n            if(index+rotations>r){\n                index = index+rotations-d;\n            }\n            else{\n                index = index+rotations;\n            }\n        }\n    }\n    return arr[index];",
    "    // Write your code here\n    long n = arr.size();\n    long m = ranges.size();\n    long i, j;\n    for(i = 0; i < rotations; i++) {\n        for(j = 0; j < m; j++) {\n            long l = ranges[j][0];\n            long r = ranges[j][1];\n            long temp = arr[l];\n            for(long k = l; k < r; k++) {\n                arr[k] = arr[k+1];\n            }\n            arr[r] = temp;\n        }\n    }\n    return arr[index];",
    "    // Write your code here\n    long n = arr.size();\n    long m = ranges.size();\n    long i, j, k;\n    long temp;\n    for(i = 0; i < rotations; i++){\n        for(j = 0; j < m; j++){\n            temp = arr[ranges[j][0]];\n            for(k = ranges[j][0]; k < ranges[j][1]; k++){\n                arr[k] = arr[k+1];\n            }\n            arr[ranges[j][1]] = temp;\n        }\n    }\n    return arr[index];",
    "    // Write your code here\n    long n = arr.size();\n    long m = ranges.size();\n    for(long i=0;i<m;i++){\n        long start = ranges[i][0];\n        long end = ranges[i][1];\n        long d = end-start+1;\n        long temp = arr[start];\n        for(long j=start;j<end;j++){\n            arr[j] = arr[j+1];\n        }\n        arr[end] = temp;\n    }\n    return arr[index];",
    "    // Write your code here\n    long n = arr.size();\n    long m = ranges.size();\n    long i, j;\n    for(i = 0; i < rotations; i++) {\n        for(j = 0; j < m; j++) {\n            long start = ranges[j][0];\n            long end = ranges[j][1];\n            long temp = arr[end];\n            long k;\n            for(k = end; k > start; k--) {\n                arr[k] = arr[k-1];\n            }\n            arr[start] = temp;\n        }\n    }\n    return arr[index];",
    "    // Write your code here\n    long n = arr.size();\n    long m = ranges.size();\n    long i, j, k;\n    for(i = 0; i < rotations; i++) {\n        for(j = 0; j < m; j++) {\n            long l = ranges[j][0];\n            long r = ranges[j][1];\n            long temp = arr[l];\n            for(k = l; k < r; k++) {\n                arr[k] = arr[k + 1];\n            }\n            arr[r] = temp;\n        }\n    }\n    return arr[index];",
    "    // Write your code here\n    long n = arr.size();\n    long m = ranges.size();\n    long i,j;\n    for(i=0;i<rotations;i++){\n        for(j=0;j<m;j++){\n            long start = ranges[j][0];\n            long end = ranges[j][1];\n            long temp = arr[start];\n            for(long k=start;k<end;k++){\n                arr[k] = arr[k+1];\n            }\n            arr[end] = temp;\n        }\n    }\n    return arr[index];",
    "    // Write your code here\n    long n = arr.size();\n    long r = rotations%n;\n    long i = index;\n    if(i<r)\n        i = n-r+i;\n    else\n        i = i-r;\n    return arr[i];",
    "    // Write your code here\n    long n = arr.size();\n    long m = ranges.size();\n    long i, j, k;\n    for(i = 0; i < rotations; i++) {\n        for(j = 0; j < m; j++) {\n            if(ranges[j][0] <= i && i <= ranges[j][1]) {\n                long temp = arr[ranges[j][0]];\n                for(k = ranges[j][0]; k < ranges[j][1]; k++) {\n                    arr[k] = arr[k+1];\n                }\n                arr[ranges[j][1]] = temp;\n            }\n        }\n    }\n    return arr[index];",
    "    // Write your code here\n    long n = arr.size();\n    long m = ranges.size();\n    long i, j;\n    for(i=0; i<m; i++)\n    {\n        for(j=ranges[i][0]; j<=ranges[i][1]; j++)\n        {\n            arr[j] = arr[j] + ranges[i][2];\n        }\n    }\n    for(i=0; i<rotations; i++)\n    {\n        long temp = arr[n-1];\n        for(j=n-1; j>0; j--)\n        {\n            arr[j] = arr[j-1];\n        }\n        arr[0] = temp;\n    }\n    return arr[index];",
    "    // Write your code here\n    long n = arr.size();\n    long m = ranges.size();\n    long i,j;\n    for(i=0;i<rotations;i++)\n    {\n        for(j=0;j<m;j++)\n        {\n            long left = ranges[j][0];\n            long right = ranges[j][1];\n            long temp = arr[left];\n            long k;\n            for(k=left;k<right;k++)\n            {\n                arr[k] = arr[k+1];\n            }\n            arr[right] = temp;\n        }\n    }\n    return arr[index];",
    "    //write your code here\n    long n = arr.size();\n    long m = ranges.size();\n    long i,j,k,l,r,temp;\n    for(i=0;i<rotations;i++)\n    {\n        for(j=0;j<m;j++)\n        {\n            l = ranges[j][0];\n            r = ranges[j][1];\n            temp = arr[r];\n            for(k=r;k>l;k--)\n            {\n                arr[k] = arr[k-1];\n            }\n            arr[l] = temp;\n        }\n    }\n    return arr[index];",
    "    // Write your code here\n    long n = arr.size();\n    long m = ranges.size();\n    long i, j;\n    for(i = 0; i < rotations; i++) {\n        for(j = 0; j < m; j++) {\n            long l = ranges[j][0];\n            long r = ranges[j][1];\n            long temp = arr[l];\n            for(long k = l; k < r; k++) {\n                arr[k] = arr[k+1];\n            }\n            arr[r] = temp;\n        }\n    }\n    return arr[index];",
    "    // Write your code here\n    long n = arr.size();\n    long m = ranges.size();\n    long i,j;\n    for(i=0;i<m;i++){\n        for(j=ranges[i][0];j<=ranges[i][1];j++){\n            arr.push_back(arr[j]);\n        }\n        for(j=ranges[i][0];j<=ranges[i][1];j++){\n            arr.erase(arr.begin()+j);\n        }\n    }\n    long k = rotations%n;\n    if(k==0){\n        return arr[index];\n    }\n    else{\n        return arr[(index+k)%n];\n    }",
    "    // Write your code here\n    long n = arr.size();\n    long m = ranges.size();\n    for(long i=0;i<m;i++){\n        long l = ranges[i][0];\n        long r = ranges[i][1];\n        long d = r-l+1;\n        long temp = arr[l];\n        for(long j=l;j<r;j++){\n            arr[j] = arr[j+1];\n        }\n        arr[r] = temp;\n    }\n    long k = index - rotations;\n    if(k<0){\n        k = k + n;\n    }\n    return arr[k];",
    "    // Write your code here\n    long n = arr.size();\n    long m = ranges.size();\n    long i,j;\n    long count = 0;\n    for(i=0;i<m;i++){\n        if(ranges[i][0]<=index && ranges[i][1]>=index){\n            count++;\n        }\n    }\n    long rot = rotations%count;\n    for(i=0;i<m;i++){\n        if(ranges[i][0]<=index && ranges[i][1]>=index){\n            if(rot==0){\n                index = ranges[i][1];\n                break;\n            }\n            else{\n                rot--;\n            }\n        }\n    }\n    return arr[index];",
    "\t// Write your code here\n\tlong n = arr.size();\n\tlong i;\n\tfor (i = 0; i < ranges.size(); i++) {\n\t\tlong l = ranges[i][0];\n\t\tlong r = ranges[i][1];\n\t\tlong d = ranges[i][2];\n\t\tif (l <= index && index <= r) {\n\t\t\trotations -= d;\n\t\t}\n\t}\n\trotations %= n;\n\tif (rotations < 0) {\n\t\trotations += n;\n\t}\n\treturn arr[(index + rotations) % n];",
    "    // Write your code here\n    long n = arr.size();\n    long m = ranges.size();\n    long start, end;\n    for(long i = 0; i < m; i++) {\n        start = ranges[i][0];\n        end = ranges[i][1];\n        if(start <= index && index <= end) {\n            rotations = rotations % (end - start + 1);\n            if(rotations < 0)\n                rotations = rotations + (end - start + 1);\n            index = start + rotations;\n            break;\n        }\n    }\n    return arr[index];",
    "    // Write your code here\n    long n = arr.size();\n    long m = ranges.size();\n    long i,j,k;\n    for(i=0;i<rotations;i++){\n        for(j=0;j<m;j++){\n            long start = ranges[j][0];\n            long end = ranges[j][1];\n            long temp = arr[end];\n            for(k=end;k>start;k--){\n                arr[k] = arr[k-1];\n            }\n            arr[start] = temp;\n        }\n    }\n    return arr[index];",
    "    // Write your code here\n    for(int i=0;i<rotations;i++){\n        int temp=arr[0];\n        for(int j=0;j<arr.size()-1;j++){\n            arr[j]=arr[j+1];\n        }\n        arr[arr.size()-1]=temp;\n    }\n    return arr[index];",
    "    // Write your code here\n    long n = arr.size();\n    long m = ranges.size();\n    long i, j, k;\n    for(i=0; i<m; i++)\n    {\n        for(j=ranges[i][0]; j<=ranges[i][1]; j++)\n        {\n            arr[j] = arr[j] + 1;\n        }\n    }\n    for(i=0; i<n; i++)\n    {\n        if(arr[i] == rotations)\n        {\n            return i;\n        }\n    }\n    return -1;",
    "    // Write your code here\n    for(int i=0;i<rotations;i++)\n    {\n        int temp=arr[ranges[i][0]];\n        for(int j=ranges[i][0];j<ranges[i][1];j++)\n        {\n            arr[j]=arr[j+1];\n        }\n        arr[ranges[i][1]]=temp;\n    }\n    return arr[index];",
    "    // Write your code here\n    long n = arr.size();\n    long m = ranges.size();\n    long i, j;\n    for (i = 0; i < rotations; i++) {\n        for (j = 0; j < m; j++) {\n            long start = ranges[j][0];\n            long end = ranges[j][1];\n            long temp = arr[start];\n            for (long k = start; k < end; k++) {\n                arr[k] = arr[k + 1];\n            }\n            arr[end] = temp;\n        }\n    }\n    return arr[index];",
    "    // Write your code here\n    long n = arr.size();\n    long m = ranges.size();\n    long i,j,k,l,r,x;\n    for(i=0;i<rotations;i++)\n    {\n        for(j=0;j<m;j++)\n        {\n            l = ranges[j][0];\n            r = ranges[j][1];\n            x = ranges[j][2];\n            for(k=l;k<=r;k++)\n            {\n                arr[k] = arr[k] + x;\n            }\n        }\n    }\n    return arr[index];",
    "    // Write your code here\n    long n = arr.size();\n    long m = ranges.size();\n    long i,j,k;\n    for(i=0;i<m;i++)\n    {\n        for(j=ranges[i][0];j<=ranges[i][1];j++)\n        {\n            arr[j] = arr[j] + 1;\n        }\n    }\n    for(i=0;i<n;i++)\n    {\n        if(arr[i] == rotations)\n        {\n            if(i == index)\n            {\n                return arr[i];\n            }\n        }\n    }\n    return -1;",
    "    // Write your code here\n    long n = arr.size();\n    long i,j;\n    long temp;\n    for(i=0;i<rotations;i++)\n    {\n        for(j=0;j<ranges.size();j++)\n        {\n            temp = arr[ranges[j][0]];\n            arr[ranges[j][0]] = arr[ranges[j][1]];\n            arr[ranges[j][1]] = temp;\n        }\n    }\n    return arr[index];",
    "    // Write your code here\n    long n=arr.size();\n    long m=ranges.size();\n    long i,j;\n    for(i=0;i<m;i++)\n    {\n        long l=ranges[i][0];\n        long r=ranges[i][1];\n        long d=ranges[i][2];\n        for(j=l;j<=r;j++)\n        {\n            arr[j]+=d;\n        }\n    }\n    long k=rotations%n;\n    if(index-k>=0)\n    {\n        return arr[index-k];\n    }\n    else\n    {\n        return arr[n+index-k];\n    }",
    "    // Write your code here\n    long n = arr.size();\n    long i, j;\n    for (i = 0; i < rotations; i++) {\n        for (j = 0; j < ranges.size(); j++) {\n            long start = ranges[j][0];\n            long end = ranges[j][1];\n            long temp = arr[end];\n            for (long k = end; k > start; k--) {\n                arr[k] = arr[k-1];\n            }\n            arr[start] = temp;\n        }\n    }\n    return arr[index];",
    "    // Write your code here\n    long n = arr.size();\n    long i,j,k,l,m;\n    for(i=0;i<rotations;i++){\n        for(j=0;j<ranges.size();j++){\n            std::vector<long> temp;\n            for(k=ranges[j][0];k<=ranges[j][1];k++){\n                temp.push_back(arr[k]);\n            }\n            std::reverse(temp.begin(),temp.end());\n            for(l=ranges[j][0],m=0;l<=ranges[j][1];l++,m++){\n                arr[l] = temp[m];\n            }\n        }\n    }\n    return arr[index];",
    "    // Write your code here\n    long n = arr.size();\n    long i, j;\n    for(i = 0; i < ranges.size(); i++) {\n        for(j = ranges[i][0]; j <= ranges[i][1]; j++) {\n            arr[j] = arr[j] + 1;\n        }\n    }\n    long count = 0;\n    for(i = 0; i < n; i++) {\n        if(arr[i] % 2 != 0) {\n            count++;\n        }\n    }\n    long k = rotations % count;\n    long temp = arr[index];\n    for(i = 0; i < k; i++) {\n        for(j = 0; j < n; j++) {\n            if(arr[j] % 2 != 0) {\n                if(j == n - 1) {\n                    arr[j] = temp;\n                    temp = arr[0];\n                }\n                else {\n                    arr[j] = temp;\n                    temp = arr[j + 1];\n                }\n            }\n        }\n    }\n    return arr[index];",
    "    // Write your code here\n    long n = arr.size();\n    long m = ranges.size();\n    long i,j;\n    for(i=0;i<rotations;i++)\n    {\n        for(j=0;j<m;j++)\n        {\n            long start = ranges[j][0];\n            long end = ranges[j][1];\n            long temp = arr[end];\n            long k;\n            for(k=end;k>start;k--)\n            {\n                arr[k] = arr[k-1];\n            }\n            arr[start] = temp;\n        }\n    }\n    return arr[index];",
    "    // Write your code here\n    long n = arr.size();\n    long m = ranges.size();\n    long i, j;\n    for(i = 0; i < rotations; i++) {\n        for(j = 0; j < m; j++) {\n            long start = ranges[j][0];\n            long end = ranges[j][1];\n            long temp = arr[end];\n            for(long k = end; k > start; k--) {\n                arr[k] = arr[k-1];\n            }\n            arr[start] = temp;\n        }\n    }\n    return arr[index];",
    "    // Write your code here\n    long n = arr.size();\n    long m = ranges.size();\n    for(long i=0;i<m;i++){\n        long a = ranges[i][0];\n        long b = ranges[i][1];\n        long d = b-a+1;\n        long temp[d];\n        long k = 0;\n        for(long j=a;j<=b;j++){\n            temp[k] = arr[j];\n            k++;\n        }\n        k = 0;\n        for(long j=a;j<=b;j++){\n            arr[j] = temp[(k+rotations)%d];\n            k++;\n        }\n    }\n    return arr[index];",
    "    // Write your code here\n    long n = arr.size();\n    long m = ranges.size();\n    for(long i = 0; i < m; i++)\n    {\n        long start = ranges[i][0];\n        long end = ranges[i][1];\n        long temp = arr[end];\n        for(long j = end; j > start; j--)\n        {\n            arr[j] = arr[j-1];\n        }\n        arr[start] = temp;\n    }\n    long ans = arr[index];\n    return ans;",
    "    // Write your code here\n    long n = arr.size();\n    long m = ranges.size();\n    long i,j,k;\n    for(i=0;i<m;i++){\n        long l = ranges[i][0];\n        long r = ranges[i][1];\n        long d = ranges[i][2];\n        for(j=l;j<=r;j++){\n            arr[j] += d;\n        }\n    }\n    for(i=0;i<rotations;i++){\n        long temp = arr[n-1];\n        for(j=n-1;j>0;j--){\n            arr[j] = arr[j-1];\n        }\n        arr[0] = temp;\n    }\n    return arr[index];",
    "\t// Write your code here\n\tfor(int i = 0; i < ranges.size(); i++) {\n\t\tif(index >= ranges[i][0] && index <= ranges[i][1]) {\n\t\t\tindex = (index - ranges[i][0] + rotations) % (ranges[i][1] - ranges[i][0] + 1) + ranges[i][0];\n\t\t}\n\t}\n\treturn arr[index];",
    "    // Write your code here\n    long n = arr.size();\n    long m = ranges.size();\n    long i,j,k;\n    for(i=0;i<m;i++)\n    {\n        for(j=ranges[i][0];j<=ranges[i][1];j++)\n        {\n            long temp = arr[j];\n            for(k=j;k>0;k--)\n            {\n                arr[k] = arr[k-1];\n            }\n            arr[0] = temp;\n        }\n    }\n    return arr[index];",
    "    // Write your code here\n    long n = arr.size();\n    long m = ranges.size();\n    long i,j;\n    for(i=0;i<m;i++){\n        long l = ranges[i][0];\n        long r = ranges[i][1];\n        long d = r-l+1;\n        for(j=l;j<=r;j++){\n            arr[j] = arr[j] + d;\n        }\n    }\n    for(i=0;i<n;i++){\n        arr[i] = arr[i] - rotations;\n    }\n    for(i=0;i<n;i++){\n        if(arr[i]<=0){\n            arr[i] = arr[i] + n;\n        }\n    }\n    return arr[index];",
    "    // Write your code here\n    long n = arr.size();\n    long m = ranges.size();\n    long r = rotations;\n    long i = index;\n    long j,k;\n    for(j=0;j<m;j++){\n        for(k=ranges[j][0];k<=ranges[j][1];k++){\n            arr[k] = arr[k] + 1;\n        }\n    }\n    for(j=0;j<r;j++){\n        long temp = arr[n-1];\n        for(k=n-1;k>0;k--){\n            arr[k] = arr[k-1];\n        }\n        arr[0] = temp;\n    }\n    return arr[i];",
    "    //write your code here\n    long n = arr.size();\n    long m = ranges.size();\n    long i,j;\n    for(i=0;i<rotations;i++){\n        for(j=0;j<m;j++){\n            long start = ranges[j][0];\n            long end = ranges[j][1];\n            long temp = arr[end];\n            long k;\n            for(k=end;k>start;k--){\n                arr[k] = arr[k-1];\n            }\n            arr[start] = temp;\n        }\n    }\n    return arr[index];",
    "    // Write your code here\n    for(int i=0;i<rotations;i++){\n        int temp = arr[0];\n        for(int j=0;j<arr.size()-1;j++){\n            arr[j] = arr[j+1];\n        }\n        arr[arr.size()-1] = temp;\n    }\n    return arr[index];",
    "    // Write your code here\n    long n = arr.size();\n    long m = ranges.size();\n    long i, j;\n    for(i = 0; i < m; i++) {\n        for(j = ranges[i][0]; j <= ranges[i][1]; j++) {\n            arr[j] = arr[j] + 1;\n        }\n    }\n    long max = arr[0];\n    for(i = 1; i < n; i++) {\n        if(arr[i] > max) {\n            max = arr[i];\n        }\n    }\n    long count = 0;\n    for(i = 0; i < n; i++) {\n        if(arr[i] == max) {\n            count++;\n        }\n    }\n    long *arr1 = new long[count];\n    long k = 0;\n    for(i = 0; i < n; i++) {\n        if(arr[i] == max) {\n            arr1[k] = i;\n            k++;\n        }\n    }\n    long index1 = index - rotations;\n    if(index1 < 0) {\n        index1 = index1 + count;\n    }\n    return arr1[index1];",
    "    // Write your code here\n    long n = arr.size();\n    long r = ranges.size();\n    long i, j;\n    for(i = 0; i < r; i++)\n    {\n        for(j = ranges[i][0]; j <= ranges[i][1]; j++)\n        {\n            arr[j] = arr[j] + 1;\n        }\n    }\n    for(i = 0; i < n; i++)\n    {\n        if(arr[i] == rotations)\n        {\n            return i;\n        }\n    }\n    return -1;",
    "    // Write your code here\n    long n = arr.size();\n    long m = ranges.size();\n    long i,j;\n    for(i=0;i<m;i++)\n    {\n        for(j=ranges[i][0];j<=ranges[i][1];j++)\n        {\n            arr[j] = arr[j] + 1;\n        }\n    }\n    long k = rotations%n;\n    long ans = arr[(k+index)%n];\n    return ans;",
    "    // Write your code here\n    long n = arr.size();\n    long m = ranges.size();\n    long r = rotations % n;\n    long i = index - r;\n    if (i < 0) {\n        i = n + i;\n    }\n    for (long j = 0; j < m; j++) {\n        if (ranges[j][0] <= i && i <= ranges[j][1]) {\n            i = ranges[j][1] - (i - ranges[j][0]);\n        }\n    }\n    return arr[i];",
    "    // Write your code here\n    long n = arr.size();\n    long m = ranges.size();\n    long i,j,k,l;\n    for(i=0;i<rotations;i++)\n    {\n        for(j=0;j<m;j++)\n        {\n            k = ranges[j][0];\n            l = ranges[j][1];\n            std::reverse(arr.begin()+k,arr.begin()+l+1);\n        }\n    }\n    return arr[index];",
    "    // Write your code here\n    long n = arr.size();\n    for(long i = 0; i < rotations; i++) {\n        long start = ranges[i][0];\n        long end = ranges[i][1];\n        long temp = arr[start];\n        for(long j = start; j < end; j++) {\n            arr[j] = arr[j+1];\n        }\n        arr[end] = temp;\n    }\n    return arr[index];",
    "    // Write your code here\n    long n = arr.size();\n    long m = ranges.size();\n    long i,j;\n    for(i=0;i<m;i++)\n    {\n        long l = ranges[i][0];\n        long r = ranges[i][1];\n        for(j=l;j<=r;j++)\n        {\n            long temp = arr[j];\n            arr[j] = arr[l];\n            arr[l] = temp;\n            l++;\n        }\n    }\n    long new_index = (index+rotations)%n;\n    return arr[new_index];",
    "    // Write your code here\n    long n = arr.size();\n    long m = ranges.size();\n    long i, j;\n    for(i = 0; i < m; i++)\n    {\n        for(j = ranges[i][0]; j <= ranges[i][1]; j++)\n        {\n            arr[j] = arr[j] + 1;\n        }\n    }\n    for(i = 0; i < n; i++)\n    {\n        if(arr[i] == rotations)\n        {\n            return i;\n        }\n    }\n    return -1;",
    "    // Write your code here\n    long n = arr.size();\n    long m = ranges.size();\n    long i, j;\n    for(i = 0; i < rotations; i++) {\n        for(j = 0; j < m; j++) {\n            long start = ranges[j][0];\n            long end = ranges[j][1];\n            long temp = arr[start];\n            long k;\n            for(k = start; k < end; k++) {\n                arr[k] = arr[k+1];\n            }\n            arr[end] = temp;\n        }\n    }\n    return arr[index];",
    "    // Write your code here\n    long n = arr.size();\n    long m = ranges.size();\n    long i, j;\n    long temp;\n    for(i = 0; i < rotations; i++) {\n        for(j = 0; j < m; j++) {\n            temp = arr[ranges[j][0]];\n            arr[ranges[j][0]] = arr[ranges[j][1]];\n            arr[ranges[j][1]] = temp;\n        }\n    }\n    return arr[index];",
    "    // Write your code here\n    long n = arr.size();\n    long m = ranges.size();\n    long i, j;\n    for(i = 0; i < rotations; i++) {\n        for(j = 0; j < m; j++) {\n            long start = ranges[j][0];\n            long end = ranges[j][1];\n            long temp = arr[end];\n            long k;\n            for(k = end; k > start; k--) {\n                arr[k] = arr[k - 1];\n            }\n            arr[start] = temp;\n        }\n    }\n    return arr[index];",
    "    for(long i = 0; i < rotations; i++) {\n        long temp = arr[ranges[i][0]];\n        for(long j = ranges[i][0]; j < ranges[i][1]; j++) {\n            arr[j] = arr[j+1];\n        }\n        arr[ranges[i][1]] = temp;\n    }\n    return arr[index];",
    "    // Write your code here\n    long n = arr.size();\n    long m = ranges.size();\n    long i,j;\n    for(i=0;i<m;i++)\n    {\n        for(j=ranges[i][0];j<=ranges[i][1];j++)\n        {\n            arr[j] = arr[j] + ranges[i][2];\n        }\n    }\n    for(i=0;i<rotations;i++)\n    {\n        long temp = arr[n-1];\n        for(j=n-1;j>0;j--)\n        {\n            arr[j] = arr[j-1];\n        }\n        arr[0] = temp;\n    }\n    return arr[index];",
    "    // Write your code here\n    for(int i=0;i<rotations;i++){\n        int temp=arr[0];\n        for(int j=0;j<arr.size()-1;j++){\n            arr[j]=arr[j+1];\n        }\n        arr[arr.size()-1]=temp;\n    }\n    return arr[index];",
    "    // Write your code here\n    long n = arr.size();\n    long m = ranges.size();\n    long i, j;\n    for (i = 0; i < m; i++) {\n        for (j = ranges[i][0]; j <= ranges[i][1]; j++) {\n            arr[j] = arr[j] + 1;\n        }\n    }\n    for (i = 0; i < n; i++) {\n        arr[i] = arr[i] % n;\n    }\n    for (i = 0; i < n; i++) {\n        arr[i] = arr[i] + i;\n        arr[i] = arr[i] % n;\n    }\n    return arr[index];",
    "    // Write your code here\n    long n = arr.size();\n    long m = ranges.size();\n    long i,j,k;\n    for(i=0;i<m;i++)\n    {\n        for(j=ranges[i][0];j<=ranges[i][1];j++)\n        {\n            long temp = arr[j];\n            for(k=j;k>0;k--)\n            {\n                arr[k] = arr[k-1];\n            }\n            arr[0] = temp;\n        }\n    }\n    return arr[index];",
    "    // Write your code here\n    long n = arr.size();\n    long r = rotations % n;\n    long i = index + r;\n    if(i >= n)\n        i = i - n;\n    return arr[i];",
    "    // Write your code here\n    long n = arr.size();\n    long m = ranges.size();\n    long i, j;\n    for(i = 0; i < m; i++) {\n        for(j = ranges[i][0]; j <= ranges[i][1]; j++) {\n            long temp = arr[j];\n            arr[j] = arr[j+1];\n            arr[j+1] = temp;\n        }\n    }\n    return arr[index];",
    "    // Write your code here\n    long n = arr.size();\n    long m = ranges.size();\n    for(long i = 0; i < m; i++)\n    {\n        long l = ranges[i][0];\n        long r = ranges[i][1];\n        if(l <= index && index <= r)\n        {\n            long temp = index - l;\n            index = r - temp;\n        }\n    }\n    return arr[(index + rotations) % n];",
    "    // Write your code here\n    long n = arr.size();\n    long m = ranges.size();\n    long i,j,k,l;\n    long count = 0;\n    for(i=0;i<m;i++){\n        for(j=ranges[i][0];j<=ranges[i][1];j++){\n            count++;\n        }\n    }\n    long rot = rotations%count;\n    for(i=0;i<m;i++){\n        for(j=ranges[i][0];j<=ranges[i][1];j++){\n            if(rot>0){\n                long temp = arr[j];\n                for(k=j;k>0;k--){\n                    arr[k] = arr[k-1];\n                }\n                arr[0] = temp;\n                rot--;\n            }\n        }\n    }\n    return arr[index];",
    "    // Write your code here\n    long n = arr.size();\n    long m = ranges.size();\n    long temp = 0;\n    for(long i = 0; i < m; i++){\n        if(ranges[i][0] <= index && ranges[i][1] >= index){\n            temp = ranges[i][1] - index + 1;\n            break;\n        }\n    }\n    long new_index = (index + rotations) % n;\n    if(new_index < temp){\n        return arr[ranges[i][1] - new_index];\n    }\n    else{\n        return arr[new_index - temp];\n    }",
    "    // Write your code here\n    for(long i=0;i<rotations;i++)\n    {\n        long temp=arr[0];\n        for(long j=0;j<arr.size()-1;j++)\n        {\n            arr[j]=arr[j+1];\n        }\n        arr[arr.size()-1]=temp;\n    }\n    return arr[index];",
    "    // Write your code here\n    long n = arr.size();\n    long m = ranges.size();\n    long i,j,k,l;\n    for(i=0;i<rotations;i++){\n        for(j=0;j<m;j++){\n            long start = ranges[j][0];\n            long end = ranges[j][1];\n            long temp = arr[start];\n            for(k=start;k<end;k++){\n                arr[k] = arr[k+1];\n            }\n            arr[end] = temp;\n        }\n    }\n    return arr[index];",
    "    // Write your code here\n    long n = arr.size();\n    long m = ranges.size();\n    long i,j;\n    for(i=0;i<m;i++)\n    {\n        long l = ranges[i][0];\n        long r = ranges[i][1];\n        long d = r-l+1;\n        long temp = arr[l];\n        for(j=l;j<r;j++)\n        {\n            arr[j] = arr[j+1];\n        }\n        arr[r] = temp;\n    }\n    long k = rotations%n;\n    long ans = (index+n-k)%n;\n    return arr[ans];",
    "    // Write your code here\n    long n = arr.size();\n    long m = ranges.size();\n    long i,j,k;\n    for(i=0;i<m;i++){\n        long l = ranges[i][0];\n        long r = ranges[i][1];\n        for(j=l;j<=r;j++){\n            long temp = arr[j];\n            for(k=j;k>l;k--){\n                arr[k] = arr[k-1];\n            }\n            arr[l] = temp;\n        }\n    }\n    long ans = arr[index];\n    return ans;",
    "    // Write your code here\n    long n = arr.size();\n    long m = ranges.size();\n    long i, j;\n    for(i = 0; i < rotations; i++) {\n        for(j = 0; j < m; j++) {\n            long l = ranges[j][0];\n            long r = ranges[j][1];\n            long temp = arr[l];\n            for(long k = l; k < r; k++) {\n                arr[k] = arr[k + 1];\n            }\n            arr[r] = temp;\n        }\n    }\n    return arr[index];",
    "    //write your code here\n    long n = arr.size();\n    long m = ranges.size();\n    long i,j;\n    for(i=0;i<m;i++){\n        for(j=ranges[i][0];j<=ranges[i][1];j++){\n            long temp = arr[j];\n            arr[j] = arr[j+1];\n            arr[j+1] = temp;\n        }\n    }\n    return arr[index];",
    "    // Write your code here\n    long n = arr.size();\n    long m = ranges.size();\n    long i,j,k,l,r,x,y;\n    for(i=0;i<m;i++)\n    {\n        l = ranges[i][0];\n        r = ranges[i][1];\n        for(j=0;j<rotations;j++)\n        {\n            x = arr[l];\n            for(k=l;k<r;k++)\n            {\n                arr[k] = arr[k+1];\n            }\n            arr[r] = x;\n        }\n    }\n    return arr[index];",
    "    // Write your code here\n    long n = arr.size();\n    long i = 0;\n    while(i < rotations) {\n        long start = ranges[i][0];\n        long end = ranges[i][1];\n        std::vector<long> temp;\n        for(long j = start; j <= end; j++) {\n            temp.push_back(arr[j]);\n        }\n        long k = 0;\n        for(long j = start; j <= end; j++) {\n            arr[j] = temp[k];\n            k++;\n        }\n        i++;\n    }\n    return arr[index];",
    "    // Write your code here\n    long n = arr.size();\n    long m = ranges.size();\n    for(long i = 0; i < m; i++) {\n        long l = ranges[i][0];\n        long r = ranges[i][1];\n        long d = r - l + 1;\n        long temp = arr[l];\n        for(long j = l; j < r; j++) {\n            arr[j] = arr[j+1];\n        }\n        arr[r] = temp;\n    }\n    long ans = arr[(index + rotations) % n];\n    return ans;",
    "    // Write your code here\n    long n = arr.size();\n    long m = ranges.size();\n    long i,j,k;\n    for(i=0;i<rotations;i++){\n        for(j=0;j<m;j++){\n            long start = ranges[j][0];\n            long end = ranges[j][1];\n            long temp = arr[end];\n            for(k=end;k>start;k--){\n                arr[k] = arr[k-1];\n            }\n            arr[start] = temp;\n        }\n    }\n    return arr[index];",
    "    // Write your code here\n    long n = arr.size();\n    long m = ranges.size();\n    long count = 0;\n    for(long i=0;i<m;i++){\n        long l = ranges[i][0];\n        long r = ranges[i][1];\n        if(l<=index && index<=r){\n            count++;\n        }\n    }\n    long ans = (index + rotations*count)%n;\n    return arr[ans];",
    "    // Write your code here\n    long n = arr.size();\n    long m = ranges.size();\n    long i, j, k;\n    for(i = 0; i < rotations; i++) {\n        for(j = 0; j < m; j++) {\n            long l = ranges[j][0];\n            long r = ranges[j][1];\n            long d = ranges[j][2];\n            for(k = l; k <= r; k++) {\n                arr[k] += d;\n            }\n        }\n    }\n    return arr[index];",
    "    // Write your code here\n    long n = arr.size();\n    long m = ranges.size();\n    for(long i=0;i<m;i++){\n        long l = ranges[i][0];\n        long r = ranges[i][1];\n        long d = r-l+1;\n        long rot = rotations%d;\n        if(index>=l && index<=r){\n            if(index+rot>r){\n                index = index+rot-d;\n            }\n            else{\n                index = index+rot;\n            }\n        }\n    }\n    return arr[index];",
    "    // Write your code here\n    long n = arr.size();\n    long m = ranges.size();\n    for(long i=0;i<m;i++){\n        long l = ranges[i][0];\n        long r = ranges[i][1];\n        long d = r-l+1;\n        if(index>=l && index<=r){\n            long new_index = (index-l+rotations)%d+l;\n            return arr[new_index];\n        }\n    }\n    return arr[index];",
    "    // Write your code here\n    long n = arr.size();\n    long m = ranges.size();\n    long i,j;\n    long temp;\n    for(i=0;i<rotations;i++)\n    {\n        for(j=0;j<m;j++)\n        {\n            temp = arr[ranges[j][0]];\n            arr[ranges[j][0]] = arr[ranges[j][1]];\n            arr[ranges[j][1]] = temp;\n        }\n    }\n    return arr[index];",
    "    // Write your code here\n    long n = arr.size();\n    long m = ranges.size();\n    long i,j,k;\n    for(i=0;i<rotations;i++){\n        for(j=0;j<m;j++){\n            long start = ranges[j][0];\n            long end = ranges[j][1];\n            long temp = arr[start];\n            for(k=start;k<end;k++){\n                arr[k] = arr[k+1];\n            }\n            arr[end] = temp;\n        }\n    }\n    return arr[index];",
    "    // Write your code here\n    for(int i=0;i<rotations;i++)\n    {\n        long temp=arr[0];\n        for(int j=0;j<arr.size()-1;j++)\n        {\n            arr[j]=arr[j+1];\n        }\n        arr[arr.size()-1]=temp;\n    }\n    return arr[index];",
    "    // Write your code here\n    long n = arr.size();\n    long m = ranges.size();\n    for(long i = 0; i < rotations; i++) {\n        for(long j = 0; j < m; j++) {\n            long start = ranges[j][0];\n            long end = ranges[j][1];\n            long temp = arr[end];\n            for(long k = end; k > start; k--) {\n                arr[k] = arr[k-1];\n            }\n            arr[start] = temp;\n        }\n    }\n    return arr[index];",
    "    // Write your code here\n    long n = arr.size();\n    long m = ranges.size();\n    long i,j;\n    for(i=0;i<m;i++)\n    {\n        long l = ranges[i][0];\n        long r = ranges[i][1];\n        long d = r-l+1;\n        long temp = arr[l];\n        for(j=l;j<r;j++)\n        {\n            arr[j] = arr[j+1];\n        }\n        arr[r] = temp;\n    }\n    long ans = arr[index];\n    return ans;",
    "    // Write your code here\n    long n = arr.size();\n    long m = ranges.size();\n    long i,j,k;\n    for(i=0;i<rotations;i++){\n        for(j=0;j<m;j++){\n            long start = ranges[j][0];\n            long end = ranges[j][1];\n            long temp = arr[end];\n            for(k=end;k>start;k--){\n                arr[k] = arr[k-1];\n            }\n            arr[start] = temp;\n        }\n    }\n    return arr[index];",
    "    // Write your code here\n    long n = arr.size();\n    long m = ranges.size();\n    long i,j;\n    for(i=0;i<rotations;i++)\n    {\n        for(j=0;j<m;j++)\n        {\n            long start = ranges[j][0];\n            long end = ranges[j][1];\n            long temp = arr[start];\n            long k;\n            for(k=start;k<end;k++)\n            {\n                arr[k] = arr[k+1];\n            }\n            arr[end] = temp;\n        }\n    }\n    return arr[index];",
    "    // Write your code here\n    long n = arr.size();\n    long m = ranges.size();\n    long i,j;\n    for(i=0;i<m;i++)\n    {\n        if(ranges[i][0]<=index && ranges[i][1]>=index)\n        {\n            rotations = rotations%(ranges[i][1]-ranges[i][0]+1);\n            if(rotations<0)\n            {\n                rotations = rotations + (ranges[i][1]-ranges[i][0]+1);\n            }\n            if(index-rotations<ranges[i][0])\n            {\n                index = ranges[i][1]-(rotations-(index-ranges[i][0]));\n            }\n            else\n            {\n                index = index-rotations;\n            }\n        }\n    }\n    return arr[index];",
    "    //write your code here\n    long n = arr.size();\n    long m = ranges.size();\n    long i,j;\n    for(i=0;i<rotations;i++){\n        for(j=0;j<m;j++){\n            long l = ranges[j][0];\n            long r = ranges[j][1];\n            long temp = arr[l];\n            long k;\n            for(k=l;k<r;k++){\n                arr[k] = arr[k+1];\n            }\n            arr[r] = temp;\n        }\n    }\n    return arr[index];",
    "    // Write your code here\n    long n = arr.size();\n    for(long i=0;i<ranges.size();i++){\n        long l = ranges[i][0];\n        long r = ranges[i][1];\n        long d = r-l+1;\n        long temp = arr[l];\n        for(long j=l;j<r;j++){\n            arr[j] = arr[j+1];\n        }\n        arr[r] = temp;\n    }\n    return arr[index];",
    "    // Write your code here\n    long n = arr.size();\n    long m = ranges.size();\n    long i, j, k;\n    for(i = 0; i < rotations; i++){\n        for(j = 0; j < m; j++){\n            long l = ranges[j][0];\n            long r = ranges[j][1];\n            long temp = arr[l];\n            for(k = l; k < r; k++){\n                arr[k] = arr[k+1];\n            }\n            arr[r] = temp;\n        }\n    }\n    return arr[index];",
    "    // Write your code here\n    long n = arr.size();\n    long m = ranges.size();\n    long i, j, k;\n    for(i = 0; i < rotations; i++) {\n        for(j = 0; j < m; j++) {\n            long start = ranges[j][0];\n            long end = ranges[j][1];\n            long temp = arr[end];\n            for(k = end; k > start; k--) {\n                arr[k] = arr[k-1];\n            }\n            arr[start] = temp;\n        }\n    }\n    return arr[index];",
    "    // Write your code here\n    long n = arr.size();\n    long m = ranges.size();\n    long i,j,k;\n    for(i=0;i<m;i++)\n    {\n        long l = ranges[i][0];\n        long r = ranges[i][1];\n        long d = r-l+1;\n        long temp[d];\n        for(j=l;j<=r;j++)\n        {\n            temp[j-l] = arr[j];\n        }\n        for(j=l;j<=r;j++)\n        {\n            arr[j] = temp[(j-l+rotations)%d];\n        }\n    }\n    return arr[index];",
    "    // Write your code here\n    long n = arr.size();\n    long m = ranges.size();\n    long i, j;\n    for(i = 0; i < m; i++) {\n        long start = ranges[i][0];\n        long end = ranges[i][1];\n        long temp = arr[start];\n        for(j = start; j < end; j++) {\n            arr[j] = arr[j+1];\n        }\n        arr[end] = temp;\n    }\n    return arr[index];",
    "    // Write your code here\n    long n = arr.size();\n    long m = ranges.size();\n    long i,j;\n    for(i=0;i<m;i++)\n    {\n        long l = ranges[i][0];\n        long r = ranges[i][1];\n        long d = ranges[i][2];\n        for(j=l;j<=r;j++)\n        {\n            arr[j] = arr[j] + d;\n        }\n    }\n    long temp = rotations%n;\n    long ans = arr[(index+temp)%n];\n    return ans;"
  ]
}
{
  "name": "mbpp_617_min_Jumps",
  "language": "cpp",
  "prompt": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check for the number of jumps required of given length to reach a point of form (d, 0) from origin in a 2d plane.\nfloat min_Jumps(long steps, long d) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_617_min_Jumps.py",
  "prompt_terminology": "verbatim",
  "tests": "}\nint main() {\n    auto candidate = min_Jumps;\n    assert(candidate(std::make_tuple(3, 4), (11)) == (3.5));\n    assert(candidate(std::make_tuple(3, 4), (0)) == (float(0)));\n    assert(candidate(std::make_tuple(11, 14), (11)) == (float(1)));\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    float jumps = 0;\n    if (steps <= d) {\n        jumps = 1;\n    } else {\n        jumps = ceil(steps / d);\n    }\n    return jumps;",
    "    if(steps == 0) return 0;\n    if(steps == 1) return 1;\n    if(steps == 2) return 2;\n    if(steps == 3) return 3;\n    if(steps == 4) return 4;\n    if(steps == 5) return 5;\n    if(steps == 6) return 6;\n    if(steps == 7) return 7;\n    if(steps == 8) return 8;\n    if(steps == 9) return 9;\n    if(steps == 10) return 10;\n    if(steps == 11) return 11;\n    if(steps == 12) return 12;\n    if(steps == 13) return 13;\n    if(steps == 14) return 14;\n    if(steps == 15) return 15;\n    if(steps == 16) return 16;\n    if(steps == 17) return 17;\n    if(steps == 18) return 18;\n    if(steps == 19) return 19;\n    if(steps == 20) return 20;\n    if(steps == 21) return 21;\n    if(steps == 22) return 22;\n    if(steps == 23) return 23;\n    if(steps == 24) return 24;\n    if(steps == 25) return 25;\n    if(steps == 26) return 26;\n    if(steps == 27) return 27;\n    if(steps == 28) return 28;\n    if(steps == 29) return 29;\n    if(steps == 30) return 30;\n    if(steps == 31) return 31;\n    if(steps == 32) return 32;\n    if(steps == 33) return 33;\n    if(steps == 34) return 34;\n    if(steps == 35) return 35;\n    if(steps == 36) return 36;\n    if(steps == 37) return 37;\n    if(steps == 38) return 38;\n    if(steps == 39) return 39;\n    if(steps == 40) return 40;\n    if(steps == 41) return 41;\n    if(steps == 42) return 42;\n    if(steps == 43) return 43;\n    if(steps == 44) return 44;\n    if(steps == 45) return 45;\n    if(steps ==",
    "    float jumps = 0;\n    if(steps == 0)\n        return 0;\n    if(steps == 1)\n        return 1;\n    if(steps == 2)\n        return 2;\n    if(steps == 3)\n        return 3;\n    if(steps == 4)\n        return 4;\n    if(steps == 5)\n        return 5;\n    if(steps == 6)\n        return 6;\n    if(steps == 7)\n        return 7;\n    if(steps == 8)\n        return 8;\n    if(steps == 9)\n        return 9;\n    if(steps == 10)\n        return 10;\n    if(steps == 11)\n        return 11;\n    if(steps == 12)\n        return 12;\n    if(steps == 13)\n        return 13;\n    if(steps == 14)\n        return 14;\n    if(steps == 15)\n        return 15;\n    if(steps == 16)\n        return 16;\n    if(steps == 17)\n        return 17;\n    if(steps == 18)\n        return 18;\n    if(steps == 19)\n        return 19;\n    if(steps == 20)\n        return 20;\n    if(steps == 21)\n        return 21;\n    if(steps == 22)\n        return 22;\n    if(steps == 23)\n        return 23;\n    if(steps == 24)\n        return 24;\n    if(steps == 25)\n        return 25;\n    if(steps == 26)\n        return 26;\n    if(steps == 27)\n        return 27;\n    if(steps == 28)\n        return 28;\n    if(steps == 29)\n        return 29;\n    if(steps == 30)\n        return 30;\n    if(steps == 31)\n        return 31;\n    if(steps == 32)\n        return 32;\n    if(steps == 33)\n        return 33;\n    if(steps == 34)\n        return 34;\n    if(steps == 35)\n        return 35;\n    if(steps == 36)\n        return 36;\n    if(steps == 37)\n        return 37;\n    if(steps == 38)\n        return",
    "    if(d == 0) {\n        return 0;\n    }\n    if(steps == 0) {\n        return INT_MAX;\n    }\n    if(steps == d) {\n        return 1;\n    }\n    if(steps > d) {\n        return min_Jumps(steps - d, d);\n    }\n    return 1 + min(min_Jumps(steps - 1, d), min_Jumps(steps + 1, d));",
    "  if(steps == 0) return 0;\n  if(steps == 1) return 1;\n  if(steps == 2) return 2;\n  if(steps == 3) return 3;\n  if(steps == 4) return 4;\n  if(steps == 5) return 5;\n  if(steps == 6) return 6;\n  if(steps == 7) return 7;\n  if(steps == 8) return 8;\n  if(steps == 9) return 9;\n  if(steps == 10) return 10;\n  if(steps == 11) return 11;\n  if(steps == 12) return 12;\n  if(steps == 13) return 13;\n  if(steps == 14) return 14;\n  if(steps == 15) return 15;\n  if(steps == 16) return 16;\n  if(steps == 17) return 17;\n  if(steps == 18) return 18;\n  if(steps == 19) return 19;\n  if(steps == 20) return 20;\n  if(steps == 21) return 21;\n  if(steps == 22) return 22;\n  if(steps == 23) return 23;\n  if(steps == 24) return 24;\n  if(steps == 25) return 25;\n  if(steps == 26) return 26;\n  if(steps == 27) return 27;\n  if(steps == 28) return 28;\n  if(steps == 29) return 29;\n  if(steps == 30) return 30;\n  if(steps == 31) return 31;\n  if(steps == 32) return 32;\n  if(steps == 33) return 33;\n  if(steps == 34) return 34;\n  if(steps == 35) return 35;\n  if(steps == 36) return 36;\n  if(steps == 37) return 37;\n  if(steps == 38) return 38;\n  if(steps == 39) return 39;\n  if(steps == 40) return 40;\n  if(steps == 41) return 41;\n  if(steps == 42) return 42;\n  if(steps == 43) return 43;\n  if(steps == 44) return 44;\n  if(steps == 45) return 45;\n  if(steps ==",
    "    if(steps == 0)\n        return 0;\n    if(steps == 1)\n        return 1;\n    if(steps == 2)\n        return 2;\n    if(steps == 3)\n        return 3;\n    if(steps == 4)\n        return 4;\n    if(steps == 5)\n        return 5;\n    if(steps == 6)\n        return 6;\n    if(steps == 7)\n        return 7;\n    if(steps == 8)\n        return 8;\n    if(steps == 9)\n        return 9;\n    if(steps == 10)\n        return 10;\n    if(steps == 11)\n        return 11;\n    if(steps == 12)\n        return 12;\n    if(steps == 13)\n        return 13;\n    if(steps == 14)\n        return 14;\n    if(steps == 15)\n        return 15;\n    if(steps == 16)\n        return 16;\n    if(steps == 17)\n        return 17;\n    if(steps == 18)\n        return 18;\n    if(steps == 19)\n        return 19;\n    if(steps == 20)\n        return 20;\n    if(steps == 21)\n        return 21;\n    if(steps == 22)\n        return 22;\n    if(steps == 23)\n        return 23;\n    if(steps == 24)\n        return 24;\n    if(steps == 25)\n        return 25;\n    if(steps == 26)\n        return 26;\n    if(steps == 27)\n        return 27;\n    if(steps == 28)\n        return 28;\n    if(steps == 29)\n        return 29;\n    if(steps == 30)\n        return 30;\n    if(steps == 31)\n        return 31;\n    if(steps == 32)\n        return 32;\n    if(steps == 33)\n        return 33;\n    if(steps == 34)\n        return 34;\n    if(steps == 35)\n        return 35;\n    if(steps == 36)\n        return 36;\n    if(steps == 37)\n        return 37;\n    if(steps == 38)\n        return 38;\n    if(steps",
    "    if(steps == 0) {\n        return 0;\n    }\n    if(steps == 1) {\n        return 1;\n    }\n    if(steps == 2) {\n        return 2;\n    }\n    if(steps == 3) {\n        return 3;\n    }\n    if(steps == 4) {\n        return 4;\n    }\n    if(steps == 5) {\n        return 5;\n    }\n    if(steps == 6) {\n        return 6;\n    }\n    if(steps == 7) {\n        return 7;\n    }\n    if(steps == 8) {\n        return 8;\n    }\n    if(steps == 9) {\n        return 9;\n    }\n    if(steps == 10) {\n        return 10;\n    }\n    if(steps == 11) {\n        return 11;\n    }\n    if(steps == 12) {\n        return 12;\n    }\n    if(steps == 13) {\n        return 13;\n    }\n    if(steps == 14) {\n        return 14;\n    }\n    if(steps == 15) {\n        return 15;\n    }\n    if(steps == 16) {\n        return 16;\n    }\n    if(steps == 17) {\n        return 17;\n    }\n    if(steps == 18) {\n        return 18;\n    }\n    if(steps == 19) {\n        return 19;\n    }\n    if(steps == 20) {\n        return 20;\n    }\n    if(steps == 21) {\n        return 21;\n    }\n    if(steps == 22) {\n        return 22;\n    }\n    if(steps == 23) {\n        return 23;\n    }\n    if(steps == 24) {\n        return 24;\n    }\n    if(steps == 25) {\n        return 25;\n    }\n    if(steps == 26) {\n        return 26;\n    }\n    if(steps == 27) {\n        return 27;\n    }\n    if(steps == 28) {\n        return 28;\n    }\n    if(steps == 29) {\n        return 29;\n    }\n   ",
    "    if(d == 0) {\n        return 0;\n    }\n    if(steps == 0) {\n        return INT_MAX;\n    }\n    if(steps >= d) {\n        return 1;\n    }\n    float min = INT_MAX;\n    for(long i = 1; i <= steps; i++) {\n        float jumps = min_Jumps(steps - i, d - i);\n        if(jumps != INT_MAX && jumps + 1 < min) {\n            min = jumps + 1;\n        }\n    }\n    return min;",
    "    if (d == 0) {\n        return 0;\n    }\n    if (steps == 0) {\n        return INT_MAX;\n    }\n    if (steps == d) {\n        return 1;\n    }\n    return std::min(min_Jumps(steps - 1, d - 1), min_Jumps(steps - 1, d + 1)) + 1;",
    "    if(d == 0) {\n        return 0;\n    }\n    if(steps == 0) {\n        return INT_MAX;\n    }\n    if(steps == d) {\n        return 1;\n    }\n    return std::min(min_Jumps(steps-1, d-1), min_Jumps(steps-1, d+1)) + 1;",
    "    if (d == 0) {\n        return 0;\n    }\n    if (steps == 0) {\n        return INT_MAX;\n    }\n    if (steps == d) {\n        return 1;\n    }\n    float min = INT_MAX;\n    for (long i = 1; i <= steps; i++) {\n        float jumps = min_Jumps(steps - i, d - i);\n        if (jumps != INT_MAX && jumps + 1 < min) {\n            min = jumps + 1;\n        }\n    }\n    return min;",
    "    if (d == 0)\n        return 0;\n    if (steps == 0)\n        return INT_MAX;\n    if (steps == d)\n        return 1;\n    float min = INT_MAX;\n    for (int i = 1; i <= steps; i++) {\n        float jumps = min_Jumps(steps - i, d - i);\n        if (jumps != INT_MAX && jumps + 1 < min)\n            min = jumps + 1;\n    }\n    return min;",
    "    if(d == 0) {\n        return 0;\n    }\n    if(steps == 0) {\n        return INT_MAX;\n    }\n    if(steps >= d) {\n        return 1;\n    }\n    float min = INT_MAX;\n    for(int i = 1; i <= steps; i++) {\n        float jumps = min_Jumps(steps - i, d - i);\n        if(jumps != INT_MAX && jumps + 1 < min) {\n            min = jumps + 1;\n        }\n    }\n    return min;",
    "    if (d == 0)\n        return 0;\n    if (steps == 0)\n        return INT_MAX;\n    float min = INT_MAX;\n    for (long i = 1; i <= steps; i++) {\n        float temp = min_Jumps(steps - i, d - i);\n        if (temp != INT_MAX && temp + 1 < min)\n            min = temp + 1;\n    }\n    return min;",
    "    if(d == 0) return 0;\n    if(steps == 0) return INT_MAX;\n    if(steps == d) return 1;\n    return std::min(min_Jumps(steps-1, d-1), min_Jumps(steps-1, d+1)) + 1;",
    "    float jumps = 0;\n    if(steps == 0)\n        return 0;\n    if(steps == 1)\n        return 1;\n    if(steps == 2)\n        return 2;\n    if(steps == 3)\n        return 3;\n    if(steps == 4)\n        return 4;\n    if(steps == 5)\n        return 5;\n    if(steps == 6)\n        return 6;\n    if(steps == 7)\n        return 7;\n    if(steps == 8)\n        return 8;\n    if(steps == 9)\n        return 9;\n    if(steps == 10)\n        return 10;\n    if(steps == 11)\n        return 11;\n    if(steps == 12)\n        return 12;\n    if(steps == 13)\n        return 13;\n    if(steps == 14)\n        return 14;\n    if(steps == 15)\n        return 15;\n    if(steps == 16)\n        return 16;\n    if(steps == 17)\n        return 17;\n    if(steps == 18)\n        return 18;\n    if(steps == 19)\n        return 19;\n    if(steps == 20)\n        return 20;\n    if(steps == 21)\n        return 21;\n    if(steps == 22)\n        return 22;\n    if(steps == 23)\n        return 23;\n    if(steps == 24)\n        return 24;\n    if(steps == 25)\n        return 25;\n    if(steps == 26)\n        return 26;\n    if(steps == 27)\n        return 27;\n    if(steps == 28)\n        return 28;\n    if(steps == 29)\n        return 29;\n    if(steps == 30)\n        return 30;\n    if(steps == 31)\n        return 31;\n    if(steps == 32)\n        return 32;\n    if(steps == 33)\n        return 33;\n    if(steps == 34)\n        return 34;\n    if(steps == 35)\n        return 35;\n    if(steps == 36)\n        return 36;\n    if(steps == 37)\n        return 37;\n    if(steps == 38)\n        return",
    "    float jumps = 0;\n    float x = 0;\n    float y = 0;\n    float x_jump = 0;\n    float y_jump = 0;\n    float x_jump_length = 0;\n    float y_jump_length = 0;\n    float x_jump_length_remaining = 0;\n    float y_jump_length_remaining = 0;\n    float x_jump_length_remaining_temp = 0;\n    float y_jump_length_remaining_temp = 0;\n    float x_jump_length_remaining_temp_temp = 0;\n    float y_jump_length_remaining_temp_temp = 0;\n    float x_jump_length_remaining_temp_temp_temp = 0;\n    float y_jump_length_remaining_temp_temp_temp = 0;\n    float x_jump_length_remaining_temp_temp_temp_temp = 0;\n    float y_jump_length_remaining_temp_temp_temp_temp = 0;\n    float x_jump_length_remaining_temp_temp_temp_temp_temp = 0;\n    float y_jump_length_remaining_temp_temp_temp_temp_temp = 0;\n    float x_jump_length_remaining_temp_temp_temp_temp_temp_temp = 0;\n    float y_jump_length_remaining_temp_temp_temp_temp_temp_temp = 0;\n    float x_jump_length_remaining_temp_temp_temp_temp_temp_temp_temp = 0;\n    float y_jump_length_remaining_temp_temp_temp_temp_temp_temp_temp = 0;\n    float x_jump_length_remaining_temp_temp_temp_temp_temp_temp_temp_temp = 0;\n    float y_jump_length_remaining_temp_temp_temp_temp_temp_temp_temp_temp = 0;\n    float x_jump_length_remaining_temp_temp_temp_temp_temp_temp_temp_temp_temp = 0;\n    float y_jump_length_remaining_temp_temp_temp_temp_temp_temp",
    "    if (steps == 0) {\n        return 0;\n    }\n    if (steps == 1) {\n        return 1;\n    }\n    if (steps == 2) {\n        return 2;\n    }\n    if (steps == 3) {\n        return 3;\n    }\n    if (steps == 4) {\n        return 4;\n    }\n    if (steps == 5) {\n        return 5;\n    }\n    if (steps == 6) {\n        return 6;\n    }\n    if (steps == 7) {\n        return 7;\n    }\n    if (steps == 8) {\n        return 8;\n    }\n    if (steps == 9) {\n        return 9;\n    }\n    if (steps == 10) {\n        return 10;\n    }\n    if (steps == 11) {\n        return 11;\n    }\n    if (steps == 12) {\n        return 12;\n    }\n    if (steps == 13) {\n        return 13;\n    }\n    if (steps == 14) {\n        return 14;\n    }\n    if (steps == 15) {\n        return 15;\n    }\n    if (steps == 16) {\n        return 16;\n    }\n    if (steps == 17) {\n        return 17;\n    }\n    if (steps == 18) {\n        return 18;\n    }\n    if (steps == 19) {\n        return 19;\n    }\n    if (steps == 20) {\n        return 20;\n    }\n    if (steps == 21) {\n        return 21;\n    }\n    if (steps == 22) {\n        return 22;\n    }\n    if (steps == 23) {\n        return 23;\n    }\n    if (steps == 24) {\n        return 24;\n    }\n    if (steps == 25) {\n        return 25;\n    }\n    if (steps == 26) {\n        return 26;\n    }\n    if (steps == 27) {\n        return 27;\n    }\n    if (steps == 28) {\n        return 28;\n    }\n    if (steps == 29) {\n        return 29;\n    }\n   ",
    "\tif (steps == 0) {\n\t\treturn 0;\n\t}\n\tif (steps == 1) {\n\t\treturn 1;\n\t}\n\tif (steps == 2) {\n\t\treturn 2;\n\t}\n\tif (steps == 3) {\n\t\treturn 3;\n\t}\n\tif (steps == 4) {\n\t\treturn 4;\n\t}\n\tif (steps == 5) {\n\t\treturn 5;\n\t}\n\tif (steps == 6) {\n\t\treturn 6;\n\t}\n\tif (steps == 7) {\n\t\treturn 7;\n\t}\n\tif (steps == 8) {\n\t\treturn 8;\n\t}\n\tif (steps == 9) {\n\t\treturn 9;\n\t}\n\tif (steps == 10) {\n\t\treturn 10;\n\t}\n\tif (steps == 11) {\n\t\treturn 11;\n\t}\n\tif (steps == 12) {\n\t\treturn 12;\n\t}\n\tif (steps == 13) {\n\t\treturn 13;\n\t}\n\tif (steps == 14) {\n\t\treturn 14;\n\t}\n\tif (steps == 15) {\n\t\treturn 15;\n\t}\n\tif (steps == 16) {\n\t\treturn 16;\n\t}\n\tif (steps == 17) {\n\t\treturn 17;\n\t}\n\tif (steps == 18) {\n\t\treturn 18;\n\t}\n\tif (steps == 19) {\n\t\treturn 19;\n\t}\n\tif (steps == 20) {\n\t\treturn 20;\n\t}\n\tif (steps == 21) {\n\t\treturn 21;\n\t}\n\tif (steps == 22) {\n\t\treturn 22;\n\t}\n\tif (steps == 23) {\n\t\treturn 23;\n\t}\n\tif (steps == 24) {\n\t\treturn 24;\n\t}\n\tif (steps == 25) {\n\t\treturn 25;\n\t}\n\tif (steps == 26) {\n\t\treturn 26;\n\t}\n\tif (steps == 27) {\n\t\treturn 27;\n\t}\n\tif (steps == 28)",
    "    float jumps = 0;\n    if(steps == 0)\n        return 0;\n    if(steps == 1)\n        return 1;\n    if(steps == 2)\n        return 2;\n    if(steps == 3)\n        return 3;\n    if(steps == 4)\n        return 4;\n    if(steps == 5)\n        return 5;\n    if(steps == 6)\n        return 6;\n    if(steps == 7)\n        return 7;\n    if(steps == 8)\n        return 8;\n    if(steps == 9)\n        return 9;\n    if(steps == 10)\n        return 10;\n    if(steps == 11)\n        return 11;\n    if(steps == 12)\n        return 12;\n    if(steps == 13)\n        return 13;\n    if(steps == 14)\n        return 14;\n    if(steps == 15)\n        return 15;\n    if(steps == 16)\n        return 16;\n    if(steps == 17)\n        return 17;\n    if(steps == 18)\n        return 18;\n    if(steps == 19)\n        return 19;\n    if(steps == 20)\n        return 20;\n    if(steps == 21)\n        return 21;\n    if(steps == 22)\n        return 22;\n    if(steps == 23)\n        return 23;\n    if(steps == 24)\n        return 24;\n    if(steps == 25)\n        return 25;\n    if(steps == 26)\n        return 26;\n    if(steps == 27)\n        return 27;\n    if(steps == 28)\n        return 28;\n    if(steps == 29)\n        return 29;\n    if(steps == 30)\n        return 30;\n    if(steps == 31)\n        return 31;\n    if(steps == 32)\n        return 32;\n    if(steps == 33)\n        return 33;\n    if(steps == 34)\n        return 34;\n    if(steps == 35)\n        return 35;\n    if(steps == 36)\n        return 36;\n    if(steps == 37)\n        return 37;\n    if(steps == 38)\n        return",
    "    if(d == 0) {\n        return 0;\n    }\n    if(steps == 0) {\n        return INT_MAX;\n    }\n    if(steps == d) {\n        return 1;\n    }\n    float min_jumps = INT_MAX;\n    for(long i = 1; i <= steps; i++) {\n        float jumps = min_Jumps(steps - i, d - i);\n        if(jumps != INT_MAX && jumps + 1 < min_jumps) {\n            min_jumps = jumps + 1;\n        }\n    }\n    return min_jumps;",
    "    if (steps == 0) {\n        return 0;\n    }\n    if (steps == 1) {\n        return d;\n    }\n    float min_jumps = d;\n    for (long i = 1; i <= steps; i++) {\n        float jumps = min_Jumps(steps - i, d) + sqrt(d * d + i * i);\n        if (jumps < min_jumps) {\n            min_jumps = jumps;\n        }\n    }\n    return min_jumps;",
    "    if(d == 0)\n        return 0;\n    if(steps == 0)\n        return INT_MAX;\n    float min_jumps = INT_MAX;\n    for(long i = 1; i <= steps; i++) {\n        float jumps = min_Jumps(steps - i, d - i);\n        if(jumps != INT_MAX)\n            min_jumps = std::min(min_jumps, jumps + 1);\n    }\n    return min_jumps;",
    "    if(steps == 0) {\n        return 0;\n    }\n    if(steps == 1) {\n        return d;\n    }\n    if(steps == 2) {\n        return d + sqrt(2);\n    }\n    return d + sqrt(2) + min_Jumps(steps - 2, d);",
    "    if(d == 0) return 0;\n    if(steps == 0) return INT_MAX;\n    if(steps == d) return 1;\n    float min_jumps = INT_MAX;\n    for(int i = 1; i <= steps; i++) {\n        float jumps = min_Jumps(steps - i, d - i);\n        if(jumps != INT_MAX && jumps + 1 < min_jumps)\n            min_jumps = jumps + 1;\n    }\n    return min_jumps;",
    "    float jumps = 0;\n    if(steps == 0) {\n        return 0;\n    }\n    if(steps <= d) {\n        return 1;\n    }\n    else {\n        jumps = min_Jumps(steps - d, d) + 1;\n    }\n    return jumps;",
    "    float jumps = 0;\n    if(steps == 0)\n        return 0;\n    if(steps == 1)\n        return 1;\n    if(steps == 2)\n        return 2;\n    if(steps == 3)\n        return 3;\n    if(steps == 4)\n        return 4;\n    if(steps == 5)\n        return 5;\n    if(steps == 6)\n        return 6;\n    if(steps == 7)\n        return 7;\n    if(steps == 8)\n        return 8;\n    if(steps == 9)\n        return 9;\n    if(steps == 10)\n        return 10;\n    if(steps == 11)\n        return 11;\n    if(steps == 12)\n        return 12;\n    if(steps == 13)\n        return 13;\n    if(steps == 14)\n        return 14;\n    if(steps == 15)\n        return 15;\n    if(steps == 16)\n        return 16;\n    if(steps == 17)\n        return 17;\n    if(steps == 18)\n        return 18;\n    if(steps == 19)\n        return 19;\n    if(steps == 20)\n        return 20;\n    if(steps == 21)\n        return 21;\n    if(steps == 22)\n        return 22;\n    if(steps == 23)\n        return 23;\n    if(steps == 24)\n        return 24;\n    if(steps == 25)\n        return 25;\n    if(steps == 26)\n        return 26;\n    if(steps == 27)\n        return 27;\n    if(steps == 28)\n        return 28;\n    if(steps == 29)\n        return 29;\n    if(steps == 30)\n        return 30;\n    if(steps == 31)\n        return 31;\n    if(steps == 32)\n        return 32;\n    if(steps == 33)\n        return 33;\n    if(steps == 34)\n        return 34;\n    if(steps == 35)\n        return 35;\n    if(steps == 36)\n        return 36;\n    if(steps == 37)\n        return 37;\n    if(steps == 38)\n        return",
    "    float jumps = 0;\n    if (d == 0) {\n        return 0;\n    }\n    if (steps == 0) {\n        return -1;\n    }\n    if (steps == 1) {\n        return 1;\n    }\n    if (steps == 2) {\n        return 1.5;\n    }\n    if (steps == 3) {\n        return 2;\n    }\n    if (steps == 4) {\n        return 2.5;\n    }\n    if (steps == 5) {\n        return 3;\n    }\n    if (steps == 6) {\n        return 3.5;\n    }\n    if (steps == 7) {\n        return 4;\n    }\n    if (steps == 8) {\n        return 4.5;\n    }\n    if (steps == 9) {\n        return 5;\n    }\n    if (steps == 10) {\n        return 5.5;\n    }\n    if (steps == 11) {\n        return 6;\n    }\n    if (steps == 12) {\n        return 6.5;\n    }\n    if (steps == 13) {\n        return 7;\n    }\n    if (steps == 14) {\n        return 7.5;\n    }\n    if (steps == 15) {\n        return 8;\n    }\n    if (steps == 16) {\n        return 8.5;\n    }\n    if (steps == 17) {\n        return 9;\n    }\n    if (steps == 18) {\n        return 9.5;\n    }\n    if (steps == 19) {\n        return 10;\n    }\n    if (steps == 20) {\n        return 10.5;\n    }\n    if (steps == 21) {\n        return 11;\n    }\n    if (steps == 22) {\n        return 11.5;\n    }\n    if (steps == 23) {\n        return 12;\n    }\n    if (steps == 24) {\n        return 12.5;\n    }\n    if (steps == 25) {\n        return 13;\n    }\n    if (steps == 26) {\n        return 13.5;\n    }\n   ",
    "    float jumps = 0;\n    if (steps <= 0) {\n        return jumps;\n    }\n    if (steps > d) {\n        jumps = min_Jumps(steps - d, d);\n        jumps++;\n    }\n    else {\n        jumps = min_Jumps(d - steps, d);\n        jumps++;\n    }\n    return jumps;",
    "    if(steps == 0)\n        return 0;\n    if(steps == 1)\n        return 1;\n    if(steps == 2)\n        return 2;\n    if(steps == 3)\n        return 3;\n    if(steps == 4)\n        return 4;\n    if(steps == 5)\n        return 5;\n    if(steps == 6)\n        return 6;\n    if(steps == 7)\n        return 7;\n    if(steps == 8)\n        return 8;\n    if(steps == 9)\n        return 9;\n    if(steps == 10)\n        return 10;\n    if(steps == 11)\n        return 11;\n    if(steps == 12)\n        return 12;\n    if(steps == 13)\n        return 13;\n    if(steps == 14)\n        return 14;\n    if(steps == 15)\n        return 15;\n    if(steps == 16)\n        return 16;\n    if(steps == 17)\n        return 17;\n    if(steps == 18)\n        return 18;\n    if(steps == 19)\n        return 19;\n    if(steps == 20)\n        return 20;\n    if(steps == 21)\n        return 21;\n    if(steps == 22)\n        return 22;\n    if(steps == 23)\n        return 23;\n    if(steps == 24)\n        return 24;\n    if(steps == 25)\n        return 25;\n    if(steps == 26)\n        return 26;\n    if(steps == 27)\n        return 27;\n    if(steps == 28)\n        return 28;\n    if(steps == 29)\n        return 29;\n    if(steps == 30)\n        return 30;\n    if(steps == 31)\n        return 31;\n    if(steps == 32)\n        return 32;\n    if(steps == 33)\n        return 33;\n    if(steps == 34)\n        return 34;\n    if(steps == 35)\n        return 35;\n    if(steps == 36)\n        return 36;\n    if(steps == 37)\n        return 37;\n    if(steps == 38)\n        return 38;\n    if(steps",
    "    if(d == 0) return 0;\n    if(steps == 0) return INT_MAX;\n    if(d == steps) return 1;\n    if(d < steps) return min_Jumps(steps, d+1) + 1;\n    return min(min_Jumps(steps-1, d-1), min_Jumps(steps, d+1)) + 1;",
    "    if (steps == 0)\n        return 0;\n    if (steps == 1)\n        return 1;\n    if (steps == 2)\n        return 2;\n    if (steps == 3)\n        return 3;\n    if (steps == 4)\n        return 4;\n    if (steps == 5)\n        return 5;\n    if (steps == 6)\n        return 6;\n    if (steps == 7)\n        return 7;\n    if (steps == 8)\n        return 8;\n    if (steps == 9)\n        return 9;\n    if (steps == 10)\n        return 10;\n    if (steps == 11)\n        return 11;\n    if (steps == 12)\n        return 12;\n    if (steps == 13)\n        return 13;\n    if (steps == 14)\n        return 14;\n    if (steps == 15)\n        return 15;\n    if (steps == 16)\n        return 16;\n    if (steps == 17)\n        return 17;\n    if (steps == 18)\n        return 18;\n    if (steps == 19)\n        return 19;\n    if (steps == 20)\n        return 20;\n    if (steps == 21)\n        return 21;\n    if (steps == 22)\n        return 22;\n    if (steps == 23)\n        return 23;\n    if (steps == 24)\n        return 24;\n    if (steps == 25)\n        return 25;\n    if (steps == 26)\n        return 26;\n    if (steps == 27)\n        return 27;\n    if (steps == 28)\n        return 28;\n    if (steps == 29)\n        return 29;\n    if (steps == 30)\n        return 30;\n    if (steps == 31)\n        return 31;\n    if (steps == 32)\n        return 32;\n    if (steps == 33)\n        return 33;\n    if (steps == 34)\n        return 34;\n    if (steps == 35)\n        return 35;\n    if (steps == 36)\n        return 36;\n    if (steps == 37)\n        return 37;\n    if (steps == 38)\n        return 38;\n    if (steps",
    "    if(steps == 0) {\n        return 0;\n    }\n    if(steps == 1) {\n        return d;\n    }\n    if(steps == 2) {\n        return d + d;\n    }\n    if(steps == 3) {\n        return d + d + d;\n    }\n    if(steps == 4) {\n        return d + d + d + d;\n    }\n    if(steps == 5) {\n        return d + d + d + d + d;\n    }\n    if(steps == 6) {\n        return d + d + d + d + d + d;\n    }\n    if(steps == 7) {\n        return d + d + d + d + d + d + d;\n    }\n    if(steps == 8) {\n        return d + d + d + d + d + d + d + d;\n    }\n    if(steps == 9) {\n        return d + d + d + d + d + d + d + d + d;\n    }\n    if(steps == 10) {\n        return d + d + d + d + d + d + d + d + d + d;\n    }\n    if(steps == 11) {\n        return d + d + d + d + d + d + d + d + d + d + d;\n    }\n    if(steps == 12) {\n        return d + d + d + d + d + d + d + d + d + d + d + d;\n    }\n    if(steps == 13) {\n        return d + d + d + d + d + d + d + d + d + d + d + d + d;\n    }\n    if(steps == 14) {\n        return d + d + d + d + d + d + d + d + d + d + d + d + d + d;\n    }\n    if(steps == 15) {\n        return d + d + d + d + d + d + d + d + d + d + d + d + d + d + d;\n    }\n    if(steps == 16) {\n        return d + d + d + d + d + d + d + d + d +",
    "    float jumps = 0;\n    if (steps == 0) {\n        return 0;\n    }\n    if (steps == 1) {\n        return 1;\n    }\n    if (steps == 2) {\n        return 2;\n    }\n    if (steps == 3) {\n        return 3;\n    }\n    if (steps == 4) {\n        return 4;\n    }\n    if (steps == 5) {\n        return 5;\n    }\n    if (steps == 6) {\n        return 6;\n    }\n    if (steps == 7) {\n        return 7;\n    }\n    if (steps == 8) {\n        return 8;\n    }\n    if (steps == 9) {\n        return 9;\n    }\n    if (steps == 10) {\n        return 10;\n    }\n    if (steps == 11) {\n        return 11;\n    }\n    if (steps == 12) {\n        return 12;\n    }\n    if (steps == 13) {\n        return 13;\n    }\n    if (steps == 14) {\n        return 14;\n    }\n    if (steps == 15) {\n        return 15;\n    }\n    if (steps == 16) {\n        return 16;\n    }\n    if (steps == 17) {\n        return 17;\n    }\n    if (steps == 18) {\n        return 18;\n    }\n    if (steps == 19) {\n        return 19;\n    }\n    if (steps == 20) {\n        return 20;\n    }\n    if (steps == 21) {\n        return 21;\n    }\n    if (steps == 22) {\n        return 22;\n    }\n    if (steps == 23) {\n        return 23;\n    }\n    if (steps == 24) {\n        return 24;\n    }\n    if (steps == 25) {\n        return 25;\n    }\n    if (steps == 26) {\n        return 26;\n    }\n    if (steps == 27) {\n        return 27;\n    }\n    if (steps == 28) {\n        return 28;\n    }\n    if (steps == 29) {\n        return",
    "    float jumps = 0;\n    if (steps == 0) {\n        return jumps;\n    }\n    if (steps <= d) {\n        jumps = 1;\n    }\n    else {\n        jumps = 1 + min_Jumps(steps - d, d);\n    }\n    return jumps;",
    "    if(d == 0) {\n        return 0;\n    }\n    if(steps == 0) {\n        return INT_MAX;\n    }\n    if(steps == 1) {\n        return 1;\n    }\n    float min_jumps = INT_MAX;\n    for(int i = 1; i <= steps; i++) {\n        float jumps = min_Jumps(steps - i, d - i);\n        if(jumps != INT_MAX) {\n            min_jumps = std::min(min_jumps, jumps + 1);\n        }\n    }\n    return min_jumps;",
    "    if(steps == 0)\n        return 0;\n    if(steps == 1)\n        return 1;\n    if(steps == 2)\n        return 2;\n    if(steps == 3)\n        return 3;\n    if(steps == 4)\n        return 4;\n    if(steps == 5)\n        return 5;\n    if(steps == 6)\n        return 6;\n    if(steps == 7)\n        return 7;\n    if(steps == 8)\n        return 8;\n    if(steps == 9)\n        return 9;\n    if(steps == 10)\n        return 10;\n    if(steps == 11)\n        return 11;\n    if(steps == 12)\n        return 12;\n    if(steps == 13)\n        return 13;\n    if(steps == 14)\n        return 14;\n    if(steps == 15)\n        return 15;\n    if(steps == 16)\n        return 16;\n    if(steps == 17)\n        return 17;\n    if(steps == 18)\n        return 18;\n    if(steps == 19)\n        return 19;\n    if(steps == 20)\n        return 20;\n    if(steps == 21)\n        return 21;\n    if(steps == 22)\n        return 22;\n    if(steps == 23)\n        return 23;\n    if(steps == 24)\n        return 24;\n    if(steps == 25)\n        return 25;\n    if(steps == 26)\n        return 26;\n    if(steps == 27)\n        return 27;\n    if(steps == 28)\n        return 28;\n    if(steps == 29)\n        return 29;\n    if(steps == 30)\n        return 30;\n    if(steps == 31)\n        return 31;\n    if(steps == 32)\n        return 32;\n    if(steps == 33)\n        return 33;\n    if(steps == 34)\n        return 34;\n    if(steps == 35)\n        return 35;\n    if(steps == 36)\n        return 36;\n    if(steps == 37)\n        return 37;\n    if(steps == 38)\n        return 38;\n    if(steps",
    "    if(d == 0) {\n        return 0;\n    }\n    if(steps == 0) {\n        return INT_MAX;\n    }\n    if(steps >= d) {\n        return 1;\n    }\n    float min = INT_MAX;\n    for(int i = 1; i <= steps; i++) {\n        float jumps = min_Jumps(steps - i, d - i);\n        if(jumps != INT_MAX && jumps + 1 < min) {\n            min = jumps + 1;\n        }\n    }\n    return min;",
    "    if(d == 0) {\n        return 0;\n    }\n    if(steps == 0) {\n        return INT_MAX;\n    }\n    if(d == steps) {\n        return 1;\n    }\n    if(d < steps) {\n        return min_Jumps(steps - d, d);\n    }\n    return std::min(min_Jumps(steps - d, d), min_Jumps(steps, d - steps)) + 1;",
    "    if(d == 0)\n        return 0;\n    if(steps == 0)\n        return INT_MAX;\n    if(steps >= d)\n        return 1;\n    return 1 + min(min_Jumps(steps + 1, d), min_Jumps(steps + 2, d));",
    "    if (steps == 0) {\n        return 0;\n    }\n    if (steps == 1) {\n        return 1;\n    }\n    if (steps == 2) {\n        return 2;\n    }\n    if (steps == 3) {\n        return 3;\n    }\n    if (steps == 4) {\n        return 4;\n    }\n    if (steps == 5) {\n        return 5;\n    }\n    if (steps == 6) {\n        return 6;\n    }\n    if (steps == 7) {\n        return 7;\n    }\n    if (steps == 8) {\n        return 8;\n    }\n    if (steps == 9) {\n        return 9;\n    }\n    if (steps == 10) {\n        return 10;\n    }\n    if (steps == 11) {\n        return 11;\n    }\n    if (steps == 12) {\n        return 12;\n    }\n    if (steps == 13) {\n        return 13;\n    }\n    if (steps == 14) {\n        return 14;\n    }\n    if (steps == 15) {\n        return 15;\n    }\n    if (steps == 16) {\n        return 16;\n    }\n    if (steps == 17) {\n        return 17;\n    }\n    if (steps == 18) {\n        return 18;\n    }\n    if (steps == 19) {\n        return 19;\n    }\n    if (steps == 20) {\n        return 20;\n    }\n    if (steps == 21) {\n        return 21;\n    }\n    if (steps == 22) {\n        return 22;\n    }\n    if (steps == 23) {\n        return 23;\n    }\n    if (steps == 24) {\n        return 24;\n    }\n    if (steps == 25) {\n        return 25;\n    }\n    if (steps == 26) {\n        return 26;\n    }\n    if (steps == 27) {\n        return 27;\n    }\n    if (steps == 28) {\n        return 28;\n    }\n    if (steps == 29) {\n        return 29;\n    }\n   ",
    "    if(d==0)\n        return 0;\n    if(steps==0)\n        return INT_MAX;\n    if(steps>=d)\n        return 1;\n    return 1 + std::min(min_Jumps(steps+1, d), min_Jumps(steps+2, d));",
    "    if(steps == 0) {\n        return 0;\n    }\n    if(steps == 1) {\n        return 1;\n    }\n    if(steps == 2) {\n        return 2;\n    }\n    if(steps == 3) {\n        return 3;\n    }\n    if(steps == 4) {\n        return 4;\n    }\n    if(steps == 5) {\n        return 5;\n    }\n    if(steps == 6) {\n        return 6;\n    }\n    if(steps == 7) {\n        return 7;\n    }\n    if(steps == 8) {\n        return 8;\n    }\n    if(steps == 9) {\n        return 9;\n    }\n    if(steps == 10) {\n        return 10;\n    }\n    if(steps == 11) {\n        return 11;\n    }\n    if(steps == 12) {\n        return 12;\n    }\n    if(steps == 13) {\n        return 13;\n    }\n    if(steps == 14) {\n        return 14;\n    }\n    if(steps == 15) {\n        return 15;\n    }\n    if(steps == 16) {\n        return 16;\n    }\n    if(steps == 17) {\n        return 17;\n    }\n    if(steps == 18) {\n        return 18;\n    }\n    if(steps == 19) {\n        return 19;\n    }\n    if(steps == 20) {\n        return 20;\n    }\n    if(steps == 21) {\n        return 21;\n    }\n    if(steps == 22) {\n        return 22;\n    }\n    if(steps == 23) {\n        return 23;\n    }\n    if(steps == 24) {\n        return 24;\n    }\n    if(steps == 25) {\n        return 25;\n    }\n    if(steps == 26) {\n        return 26;\n    }\n    if(steps == 27) {\n        return 27;\n    }\n    if(steps == 28) {\n        return 28;\n    }\n    if(steps == 29) {\n        return 29;\n    }\n   ",
    "    float jumps = 0;\n    if (d == 0) {\n        return 0;\n    }\n    if (steps == 0) {\n        return -1;\n    }\n    if (steps == 1) {\n        return 1;\n    }\n    if (steps == 2) {\n        return 2;\n    }\n    if (steps == 3) {\n        return 3;\n    }\n    if (steps == 4) {\n        return 4;\n    }\n    if (steps == 5) {\n        return 5;\n    }\n    if (steps == 6) {\n        return 6;\n    }\n    if (steps == 7) {\n        return 7;\n    }\n    if (steps == 8) {\n        return 8;\n    }\n    if (steps == 9) {\n        return 9;\n    }\n    if (steps == 10) {\n        return 10;\n    }\n    if (steps == 11) {\n        return 11;\n    }\n    if (steps == 12) {\n        return 12;\n    }\n    if (steps == 13) {\n        return 13;\n    }\n    if (steps == 14) {\n        return 14;\n    }\n    if (steps == 15) {\n        return 15;\n    }\n    if (steps == 16) {\n        return 16;\n    }\n    if (steps == 17) {\n        return 17;\n    }\n    if (steps == 18) {\n        return 18;\n    }\n    if (steps == 19) {\n        return 19;\n    }\n    if (steps == 20) {\n        return 20;\n    }\n    if (steps == 21) {\n        return 21;\n    }\n    if (steps == 22) {\n        return 22;\n    }\n    if (steps == 23) {\n        return 23;\n    }\n    if (steps == 24) {\n        return 24;\n    }\n    if (steps == 25) {\n        return 25;\n    }\n    if (steps == 26) {\n        return 26;\n    }\n    if (steps == 27) {\n        return 27;\n    }\n    if (steps == 28) {\n       ",
    "    if(d == 0) {\n        return 0;\n    }\n    if(steps == 0) {\n        return INT_MAX;\n    }\n    if(steps == d) {\n        return 1;\n    }\n    float min_jumps = INT_MAX;\n    for(long i = 1; i <= steps; i++) {\n        float jumps = min_Jumps(steps - i, d - i);\n        if(jumps != INT_MAX && jumps + 1 < min_jumps) {\n            min_jumps = jumps + 1;\n        }\n    }\n    return min_jumps;",
    "    if(steps == 0) {\n        return 0;\n    }\n    if(steps == 1) {\n        return 1;\n    }\n    if(steps == 2) {\n        return 2;\n    }\n    if(steps == 3) {\n        return 3;\n    }\n    if(steps == 4) {\n        return 4;\n    }\n    if(steps == 5) {\n        return 5;\n    }\n    if(steps == 6) {\n        return 6;\n    }\n    if(steps == 7) {\n        return 7;\n    }\n    if(steps == 8) {\n        return 8;\n    }\n    if(steps == 9) {\n        return 9;\n    }\n    if(steps == 10) {\n        return 10;\n    }\n    if(steps == 11) {\n        return 11;\n    }\n    if(steps == 12) {\n        return 12;\n    }\n    if(steps == 13) {\n        return 13;\n    }\n    if(steps == 14) {\n        return 14;\n    }\n    if(steps == 15) {\n        return 15;\n    }\n    if(steps == 16) {\n        return 16;\n    }\n    if(steps == 17) {\n        return 17;\n    }\n    if(steps == 18) {\n        return 18;\n    }\n    if(steps == 19) {\n        return 19;\n    }\n    if(steps == 20) {\n        return 20;\n    }\n    if(steps == 21) {\n        return 21;\n    }\n    if(steps == 22) {\n        return 22;\n    }\n    if(steps == 23) {\n        return 23;\n    }\n    if(steps == 24) {\n        return 24;\n    }\n    if(steps == 25) {\n        return 25;\n    }\n    if(steps == 26) {\n        return 26;\n    }\n    if(steps == 27) {\n        return 27;\n    }\n    if(steps == 28) {\n        return 28;\n    }\n    if(steps == 29) {\n        return 29;\n    }\n   ",
    "    float jumps = 0;\n    if(steps == 0) {\n        return jumps;\n    }\n    if(steps <= d) {\n        jumps = 1;\n    }\n    else {\n        jumps = 1 + min_Jumps(steps - d, d);\n    }\n    return jumps;",
    "    float jumps = 0;\n    if(steps == 0) {\n        return jumps;\n    }\n    if(steps <= d) {\n        jumps = 1;\n    }\n    else {\n        jumps = min_Jumps(steps-d, d) + 1;\n    }\n    return jumps;",
    "    if (d == 0) {\n        return 0;\n    }\n    if (steps == 0) {\n        return INT_MAX;\n    }\n    float min_jumps = INT_MAX;\n    for (long i = 1; i <= steps; i++) {\n        float jumps = min_Jumps(steps - i, d - i);\n        if (jumps != INT_MAX) {\n            jumps = jumps + 1;\n            min_jumps = std::min(min_jumps, jumps);\n        }\n    }\n    return min_jumps;",
    "    if(steps == 0) return 0;\n    if(steps == 1) return 1;\n    if(steps == 2) return 2;\n    if(steps == 3) return 3;\n    if(steps == 4) return 4;\n    if(steps == 5) return 5;\n    if(steps == 6) return 6;\n    if(steps == 7) return 7;\n    if(steps == 8) return 8;\n    if(steps == 9) return 9;\n    if(steps == 10) return 10;\n    if(steps == 11) return 11;\n    if(steps == 12) return 12;\n    if(steps == 13) return 13;\n    if(steps == 14) return 14;\n    if(steps == 15) return 15;\n    if(steps == 16) return 16;\n    if(steps == 17) return 17;\n    if(steps == 18) return 18;\n    if(steps == 19) return 19;\n    if(steps == 20) return 20;\n    if(steps == 21) return 21;\n    if(steps == 22) return 22;\n    if(steps == 23) return 23;\n    if(steps == 24) return 24;\n    if(steps == 25) return 25;\n    if(steps == 26) return 26;\n    if(steps == 27) return 27;\n    if(steps == 28) return 28;\n    if(steps == 29) return 29;\n    if(steps == 30) return 30;\n    if(steps == 31) return 31;\n    if(steps == 32) return 32;\n    if(steps == 33) return 33;\n    if(steps == 34) return 34;\n    if(steps == 35) return 35;\n    if(steps == 36) return 36;\n    if(steps == 37) return 37;\n    if(steps == 38) return 38;\n    if(steps == 39) return 39;\n    if(steps == 40) return 40;\n    if(steps == 41) return 41;\n    if(steps == 42) return 42;\n    if(steps == 43) return 43;\n    if(steps == 44) return 44;\n    if(steps == 45) return 45;\n    if(steps ==",
    "    if (steps == 0)\n        return 0;\n    if (steps == 1)\n        return 1;\n    if (steps == 2)\n        return 2;\n    if (steps == 3)\n        return 3;\n    if (steps == 4)\n        return 4;\n    if (steps == 5)\n        return 5;\n    if (steps == 6)\n        return 6;\n    if (steps == 7)\n        return 7;\n    if (steps == 8)\n        return 8;\n    if (steps == 9)\n        return 9;\n    if (steps == 10)\n        return 10;\n    if (steps == 11)\n        return 11;\n    if (steps == 12)\n        return 12;\n    if (steps == 13)\n        return 13;\n    if (steps == 14)\n        return 14;\n    if (steps == 15)\n        return 15;\n    if (steps == 16)\n        return 16;\n    if (steps == 17)\n        return 17;\n    if (steps == 18)\n        return 18;\n    if (steps == 19)\n        return 19;\n    if (steps == 20)\n        return 20;\n    if (steps == 21)\n        return 21;\n    if (steps == 22)\n        return 22;\n    if (steps == 23)\n        return 23;\n    if (steps == 24)\n        return 24;\n    if (steps == 25)\n        return 25;\n    if (steps == 26)\n        return 26;\n    if (steps == 27)\n        return 27;\n    if (steps == 28)\n        return 28;\n    if (steps == 29)\n        return 29;\n    if (steps == 30)\n        return 30;\n    if (steps == 31)\n        return 31;\n    if (steps == 32)\n        return 32;\n    if (steps == 33)\n        return 33;\n    if (steps == 34)\n        return 34;\n    if (steps == 35)\n        return 35;\n    if (steps == 36)\n        return 36;\n    if (steps == 37)\n        return 37;\n    if (steps == 38)\n        return 38;\n    if (steps",
    "    if(steps == 0)\n        return 0;\n    if(steps == 1)\n        return 1;\n    if(steps == 2)\n        return 2;\n    if(steps == 3)\n        return 3;\n    if(steps == 4)\n        return 4;\n    if(steps == 5)\n        return 5;\n    if(steps == 6)\n        return 6;\n    if(steps == 7)\n        return 7;\n    if(steps == 8)\n        return 8;\n    if(steps == 9)\n        return 9;\n    if(steps == 10)\n        return 10;\n    if(steps == 11)\n        return 11;\n    if(steps == 12)\n        return 12;\n    if(steps == 13)\n        return 13;\n    if(steps == 14)\n        return 14;\n    if(steps == 15)\n        return 15;\n    if(steps == 16)\n        return 16;\n    if(steps == 17)\n        return 17;\n    if(steps == 18)\n        return 18;\n    if(steps == 19)\n        return 19;\n    if(steps == 20)\n        return 20;\n    if(steps == 21)\n        return 21;\n    if(steps == 22)\n        return 22;\n    if(steps == 23)\n        return 23;\n    if(steps == 24)\n        return 24;\n    if(steps == 25)\n        return 25;\n    if(steps == 26)\n        return 26;\n    if(steps == 27)\n        return 27;\n    if(steps == 28)\n        return 28;\n    if(steps == 29)\n        return 29;\n    if(steps == 30)\n        return 30;\n    if(steps == 31)\n        return 31;\n    if(steps == 32)\n        return 32;\n    if(steps == 33)\n        return 33;\n    if(steps == 34)\n        return 34;\n    if(steps == 35)\n        return 35;\n    if(steps == 36)\n        return 36;\n    if(steps == 37)\n        return 37;\n    if(steps == 38)\n        return 38;\n    if(steps",
    "    float jumps = 0;\n    if (steps == 0) {\n        return 0;\n    }\n    if (steps <= d) {\n        return 1;\n    }\n    else {\n        jumps = 1 + min_Jumps(steps - d, d);\n    }\n    return jumps;",
    "    float jumps = 0;\n    if(steps == 0) {\n        return 0;\n    }\n    if(steps <= d) {\n        return 1;\n    }\n    jumps = min_Jumps(steps-d, d) + 1;\n    return jumps;",
    "    // Write your code here\n    float jumps = 0;\n    if (steps == 0) {\n        return 0;\n    }\n    if (steps == 1) {\n        return 1;\n    }\n    if (steps == 2) {\n        return 2;\n    }\n    if (steps == 3) {\n        return 3;\n    }\n    if (steps == 4) {\n        return 4;\n    }\n    if (steps == 5) {\n        return 5;\n    }\n    if (steps == 6) {\n        return 6;\n    }\n    if (steps == 7) {\n        return 7;\n    }\n    if (steps == 8) {\n        return 8;\n    }\n    if (steps == 9) {\n        return 9;\n    }\n    if (steps == 10) {\n        return 10;\n    }\n    if (steps == 11) {\n        return 11;\n    }\n    if (steps == 12) {\n        return 12;\n    }\n    if (steps == 13) {\n        return 13;\n    }\n    if (steps == 14) {\n        return 14;\n    }\n    if (steps == 15) {\n        return 15;\n    }\n    if (steps == 16) {\n        return 16;\n    }\n    if (steps == 17) {\n        return 17;\n    }\n    if (steps == 18) {\n        return 18;\n    }\n    if (steps == 19) {\n        return 19;\n    }\n    if (steps == 20) {\n        return 20;\n    }\n    if (steps == 21) {\n        return 21;\n    }\n    if (steps == 22) {\n        return 22;\n    }\n    if (steps == 23) {\n        return 23;\n    }\n    if (steps == 24) {\n        return 24;\n    }\n    if (steps == 25) {\n        return 25;\n    }\n    if (steps == 26) {\n        return 26;\n    }\n    if (steps == 27) {\n        return 27;\n    }\n    if (steps == 28) {\n        return 28;\n    }\n    if (steps",
    "    if(steps == 0) {\n        return 0;\n    }\n    if(steps == 1) {\n        return 1;\n    }\n    if(steps == 2) {\n        return 2;\n    }\n    if(steps == 3) {\n        return 3;\n    }\n    if(steps == 4) {\n        return 4;\n    }\n    if(steps == 5) {\n        return 5;\n    }\n    if(steps == 6) {\n        return 6;\n    }\n    if(steps == 7) {\n        return 7;\n    }\n    if(steps == 8) {\n        return 8;\n    }\n    if(steps == 9) {\n        return 9;\n    }\n    if(steps == 10) {\n        return 10;\n    }\n    if(steps == 11) {\n        return 11;\n    }\n    if(steps == 12) {\n        return 12;\n    }\n    if(steps == 13) {\n        return 13;\n    }\n    if(steps == 14) {\n        return 14;\n    }\n    if(steps == 15) {\n        return 15;\n    }\n    if(steps == 16) {\n        return 16;\n    }\n    if(steps == 17) {\n        return 17;\n    }\n    if(steps == 18) {\n        return 18;\n    }\n    if(steps == 19) {\n        return 19;\n    }\n    if(steps == 20) {\n        return 20;\n    }\n    if(steps == 21) {\n        return 21;\n    }\n    if(steps == 22) {\n        return 22;\n    }\n    if(steps == 23) {\n        return 23;\n    }\n    if(steps == 24) {\n        return 24;\n    }\n    if(steps == 25) {\n        return 25;\n    }\n    if(steps == 26) {\n        return 26;\n    }\n    if(steps == 27) {\n        return 27;\n    }\n    if(steps == 28) {\n        return 28;\n    }\n    if(steps == 29) {\n        return 29;\n    }\n   ",
    "    if (steps == 0) {\n        return 0;\n    }\n    if (steps == 1) {\n        return 1;\n    }\n    if (steps == 2) {\n        return 2;\n    }\n    if (steps == 3) {\n        return 3;\n    }\n    if (steps == 4) {\n        return 4;\n    }\n    if (steps == 5) {\n        return 5;\n    }\n    if (steps == 6) {\n        return 6;\n    }\n    if (steps == 7) {\n        return 7;\n    }\n    if (steps == 8) {\n        return 8;\n    }\n    if (steps == 9) {\n        return 9;\n    }\n    if (steps == 10) {\n        return 10;\n    }\n    if (steps == 11) {\n        return 11;\n    }\n    if (steps == 12) {\n        return 12;\n    }\n    if (steps == 13) {\n        return 13;\n    }\n    if (steps == 14) {\n        return 14;\n    }\n    if (steps == 15) {\n        return 15;\n    }\n    if (steps == 16) {\n        return 16;\n    }\n    if (steps == 17) {\n        return 17;\n    }\n    if (steps == 18) {\n        return 18;\n    }\n    if (steps == 19) {\n        return 19;\n    }\n    if (steps == 20) {\n        return 20;\n    }\n    if (steps == 21) {\n        return 21;\n    }\n    if (steps == 22) {\n        return 22;\n    }\n    if (steps == 23) {\n        return 23;\n    }\n    if (steps == 24) {\n        return 24;\n    }\n    if (steps == 25) {\n        return 25;\n    }\n    if (steps == 26) {\n        return 26;\n    }\n    if (steps == 27) {\n        return 27;\n    }\n    if (steps == 28) {\n        return 28;\n    }\n    if (steps == 29) {\n        return 29;\n    }\n   ",
    "    if(d == 0)\n        return 0;\n    if(steps == 0)\n        return INT_MAX;\n    if(d == steps)\n        return 1;\n    return min(min_Jumps(steps-1, d-1), min_Jumps(steps-1, d+1)) + 1;",
    "    float jumps = 0;\n    if (steps == 0) {\n        return 0;\n    }\n    if (steps == 1) {\n        return 1;\n    }\n    if (steps == 2) {\n        return 2;\n    }\n    if (steps == 3) {\n        return 3;\n    }\n    if (steps == 4) {\n        return 4;\n    }\n    if (steps == 5) {\n        return 5;\n    }\n    if (steps == 6) {\n        return 6;\n    }\n    if (steps == 7) {\n        return 7;\n    }\n    if (steps == 8) {\n        return 8;\n    }\n    if (steps == 9) {\n        return 9;\n    }\n    if (steps == 10) {\n        return 10;\n    }\n    if (steps == 11) {\n        return 11;\n    }\n    if (steps == 12) {\n        return 12;\n    }\n    if (steps == 13) {\n        return 13;\n    }\n    if (steps == 14) {\n        return 14;\n    }\n    if (steps == 15) {\n        return 15;\n    }\n    if (steps == 16) {\n        return 16;\n    }\n    if (steps == 17) {\n        return 17;\n    }\n    if (steps == 18) {\n        return 18;\n    }\n    if (steps == 19) {\n        return 19;\n    }\n    if (steps == 20) {\n        return 20;\n    }\n    if (steps == 21) {\n        return 21;\n    }\n    if (steps == 22) {\n        return 22;\n    }\n    if (steps == 23) {\n        return 23;\n    }\n    if (steps == 24) {\n        return 24;\n    }\n    if (steps == 25) {\n        return 25;\n    }\n    if (steps == 26) {\n        return 26;\n    }\n    if (steps == 27) {\n        return 27;\n    }\n    if (steps == 28) {\n        return 28;\n    }\n    if (steps == 29) {\n        return",
    "    if(steps == 0)\n        return 0;\n    if(steps == 1)\n        return 1;\n    if(steps == 2)\n        return 2;\n    if(steps == 3)\n        return 3;\n    if(steps == 4)\n        return 4;\n    if(steps == 5)\n        return 5;\n    if(steps == 6)\n        return 6;\n    if(steps == 7)\n        return 7;\n    if(steps == 8)\n        return 8;\n    if(steps == 9)\n        return 9;\n    if(steps == 10)\n        return 10;\n    if(steps == 11)\n        return 11;\n    if(steps == 12)\n        return 12;\n    if(steps == 13)\n        return 13;\n    if(steps == 14)\n        return 14;\n    if(steps == 15)\n        return 15;\n    if(steps == 16)\n        return 16;\n    if(steps == 17)\n        return 17;\n    if(steps == 18)\n        return 18;\n    if(steps == 19)\n        return 19;\n    if(steps == 20)\n        return 20;\n    if(steps == 21)\n        return 21;\n    if(steps == 22)\n        return 22;\n    if(steps == 23)\n        return 23;\n    if(steps == 24)\n        return 24;\n    if(steps == 25)\n        return 25;\n    if(steps == 26)\n        return 26;\n    if(steps == 27)\n        return 27;\n    if(steps == 28)\n        return 28;\n    if(steps == 29)\n        return 29;\n    if(steps == 30)\n        return 30;\n    if(steps == 31)\n        return 31;\n    if(steps == 32)\n        return 32;\n    if(steps == 33)\n        return 33;\n    if(steps == 34)\n        return 34;\n    if(steps == 35)\n        return 35;\n    if(steps == 36)\n        return 36;\n    if(steps == 37)\n        return 37;\n    if(steps == 38)\n        return 38;\n    if(steps",
    "    float jumps = 0;\n    if(steps <= d) {\n        jumps = 1;\n    }\n    else {\n        jumps = min_Jumps(steps-d, d) + 1;\n    }\n    return jumps;",
    "    float jumps = 0;\n    if(steps == 0) return 0;\n    if(steps == 1) return 1;\n    if(steps == 2) return 2;\n    if(steps == 3) return 3;\n    if(steps == 4) return 4;\n    if(steps == 5) return 5;\n    if(steps == 6) return 6;\n    if(steps == 7) return 7;\n    if(steps == 8) return 8;\n    if(steps == 9) return 9;\n    if(steps == 10) return 10;\n    if(steps == 11) return 11;\n    if(steps == 12) return 12;\n    if(steps == 13) return 13;\n    if(steps == 14) return 14;\n    if(steps == 15) return 15;\n    if(steps == 16) return 16;\n    if(steps == 17) return 17;\n    if(steps == 18) return 18;\n    if(steps == 19) return 19;\n    if(steps == 20) return 20;\n    if(steps == 21) return 21;\n    if(steps == 22) return 22;\n    if(steps == 23) return 23;\n    if(steps == 24) return 24;\n    if(steps == 25) return 25;\n    if(steps == 26) return 26;\n    if(steps == 27) return 27;\n    if(steps == 28) return 28;\n    if(steps == 29) return 29;\n    if(steps == 30) return 30;\n    if(steps == 31) return 31;\n    if(steps == 32) return 32;\n    if(steps == 33) return 33;\n    if(steps == 34) return 34;\n    if(steps == 35) return 35;\n    if(steps == 36) return 36;\n    if(steps == 37) return 37;\n    if(steps == 38) return 38;\n    if(steps == 39) return 39;\n    if(steps == 40) return 40;\n    if(steps == 41) return 41;\n    if(steps == 42) return 42;\n    if(steps == 43) return 43;\n    if(steps == 44) return 44;\n    if(steps == 45) return 45",
    "    if(d == 0)\n        return 0;\n    if(steps == 0)\n        return INT_MAX;\n    float min = INT_MAX;\n    for(int i = 1; i <= steps; i++) {\n        float jumps = min_Jumps(steps-i, d-i) + 1;\n        if(jumps < min)\n            min = jumps;\n    }\n    return min;",
    "\tif (steps == 0) {\n\t\treturn 0;\n\t}\n\tif (steps == 1) {\n\t\treturn d;\n\t}\n\tif (steps == 2) {\n\t\treturn d + 1;\n\t}\n\tif (steps == 3) {\n\t\treturn d + 2;\n\t}\n\treturn min_Jumps(steps - 1, d) + min_Jumps(steps - 2, d) + min_Jumps(steps - 3, d);",
    "    float jumps = 0;\n    if(steps == 0) {\n        return 0;\n    }\n    if(steps <= d) {\n        return 1;\n    }\n    if(steps > d) {\n        jumps = (float)steps/d;\n    }\n    return jumps;",
    "    if(steps == 0)\n        return 0;\n    if(steps == 1)\n        return 1;\n    if(steps == 2)\n        return 2;\n    if(steps == 3)\n        return 3;\n    if(steps == 4)\n        return 4;\n    if(steps == 5)\n        return 5;\n    if(steps == 6)\n        return 6;\n    if(steps == 7)\n        return 7;\n    if(steps == 8)\n        return 8;\n    if(steps == 9)\n        return 9;\n    if(steps == 10)\n        return 10;\n    if(steps == 11)\n        return 11;\n    if(steps == 12)\n        return 12;\n    if(steps == 13)\n        return 13;\n    if(steps == 14)\n        return 14;\n    if(steps == 15)\n        return 15;\n    if(steps == 16)\n        return 16;\n    if(steps == 17)\n        return 17;\n    if(steps == 18)\n        return 18;\n    if(steps == 19)\n        return 19;\n    if(steps == 20)\n        return 20;\n    if(steps == 21)\n        return 21;\n    if(steps == 22)\n        return 22;\n    if(steps == 23)\n        return 23;\n    if(steps == 24)\n        return 24;\n    if(steps == 25)\n        return 25;\n    if(steps == 26)\n        return 26;\n    if(steps == 27)\n        return 27;\n    if(steps == 28)\n        return 28;\n    if(steps == 29)\n        return 29;\n    if(steps == 30)\n        return 30;\n    if(steps == 31)\n        return 31;\n    if(steps == 32)\n        return 32;\n    if(steps == 33)\n        return 33;\n    if(steps == 34)\n        return 34;\n    if(steps == 35)\n        return 35;\n    if(steps == 36)\n        return 36;\n    if(steps == 37)\n        return 37;\n    if(steps == 38)\n        return 38;\n    if(steps",
    "    if(steps == 0) return 0;\n    if(steps == 1) return 1;\n    if(steps == 2) return 2;\n    if(steps == 3) return 3;\n    if(steps == 4) return 4;\n    if(steps == 5) return 5;\n    if(steps == 6) return 6;\n    if(steps == 7) return 7;\n    if(steps == 8) return 8;\n    if(steps == 9) return 9;\n    if(steps == 10) return 10;\n    if(steps == 11) return 11;\n    if(steps == 12) return 12;\n    if(steps == 13) return 13;\n    if(steps == 14) return 14;\n    if(steps == 15) return 15;\n    if(steps == 16) return 16;\n    if(steps == 17) return 17;\n    if(steps == 18) return 18;\n    if(steps == 19) return 19;\n    if(steps == 20) return 20;\n    if(steps == 21) return 21;\n    if(steps == 22) return 22;\n    if(steps == 23) return 23;\n    if(steps == 24) return 24;\n    if(steps == 25) return 25;\n    if(steps == 26) return 26;\n    if(steps == 27) return 27;\n    if(steps == 28) return 28;\n    if(steps == 29) return 29;\n    if(steps == 30) return 30;\n    if(steps == 31) return 31;\n    if(steps == 32) return 32;\n    if(steps == 33) return 33;\n    if(steps == 34) return 34;\n    if(steps == 35) return 35;\n    if(steps == 36) return 36;\n    if(steps == 37) return 37;\n    if(steps == 38) return 38;\n    if(steps == 39) return 39;\n    if(steps == 40) return 40;\n    if(steps == 41) return 41;\n    if(steps == 42) return 42;\n    if(steps == 43) return 43;\n    if(steps == 44) return 44;\n    if(steps == 45) return 45;\n    if(steps ==",
    "    float jumps = 0;\n    if (steps == 0) {\n        return 0;\n    }\n    if (steps == 1) {\n        return 1;\n    }\n    if (steps == 2) {\n        return 2;\n    }\n    if (steps == 3) {\n        return 3;\n    }\n    if (steps == 4) {\n        return 4;\n    }\n    if (steps == 5) {\n        return 5;\n    }\n    if (steps == 6) {\n        return 6;\n    }\n    if (steps == 7) {\n        return 7;\n    }\n    if (steps == 8) {\n        return 8;\n    }\n    if (steps == 9) {\n        return 9;\n    }\n    if (steps == 10) {\n        return 10;\n    }\n    if (steps == 11) {\n        return 11;\n    }\n    if (steps == 12) {\n        return 12;\n    }\n    if (steps == 13) {\n        return 13;\n    }\n    if (steps == 14) {\n        return 14;\n    }\n    if (steps == 15) {\n        return 15;\n    }\n    if (steps == 16) {\n        return 16;\n    }\n    if (steps == 17) {\n        return 17;\n    }\n    if (steps == 18) {\n        return 18;\n    }\n    if (steps == 19) {\n        return 19;\n    }\n    if (steps == 20) {\n        return 20;\n    }\n    if (steps == 21) {\n        return 21;\n    }\n    if (steps == 22) {\n        return 22;\n    }\n    if (steps == 23) {\n        return 23;\n    }\n    if (steps == 24) {\n        return 24;\n    }\n    if (steps == 25) {\n        return 25;\n    }\n    if (steps == 26) {\n        return 26;\n    }\n    if (steps == 27) {\n        return 27;\n    }\n    if (steps == 28) {\n        return 28;\n    }\n    if (steps == 29) {\n        return",
    "    float jumps = 0;\n    if (steps == 0) {\n        return 0;\n    }\n    if (steps == 1) {\n        return 1;\n    }\n    if (steps == 2) {\n        return 2;\n    }\n    if (steps == 3) {\n        return 3;\n    }\n    if (steps == 4) {\n        return 4;\n    }\n    if (steps == 5) {\n        return 5;\n    }\n    if (steps == 6) {\n        return 6;\n    }\n    if (steps == 7) {\n        return 7;\n    }\n    if (steps == 8) {\n        return 8;\n    }\n    if (steps == 9) {\n        return 9;\n    }\n    if (steps == 10) {\n        return 10;\n    }\n    if (steps == 11) {\n        return 11;\n    }\n    if (steps == 12) {\n        return 12;\n    }\n    if (steps == 13) {\n        return 13;\n    }\n    if (steps == 14) {\n        return 14;\n    }\n    if (steps == 15) {\n        return 15;\n    }\n    if (steps == 16) {\n        return 16;\n    }\n    if (steps == 17) {\n        return 17;\n    }\n    if (steps == 18) {\n        return 18;\n    }\n    if (steps == 19) {\n        return 19;\n    }\n    if (steps == 20) {\n        return 20;\n    }\n    if (steps == 21) {\n        return 21;\n    }\n    if (steps == 22) {\n        return 22;\n    }\n    if (steps == 23) {\n        return 23;\n    }\n    if (steps == 24) {\n        return 24;\n    }\n    if (steps == 25) {\n        return 25;\n    }\n    if (steps == 26) {\n        return 26;\n    }\n    if (steps == 27) {\n        return 27;\n    }\n    if (steps == 28) {\n        return 28;\n    }\n    if (steps == 29) {\n        return",
    "    if(steps == 0)\n        return 0;\n    if(steps == 1)\n        return 1;\n    if(steps == 2)\n        return 2;\n    if(steps == 3)\n        return 3;\n    if(steps == 4)\n        return 4;\n    if(steps == 5)\n        return 5;\n    if(steps == 6)\n        return 6;\n    if(steps == 7)\n        return 7;\n    if(steps == 8)\n        return 8;\n    if(steps == 9)\n        return 9;\n    if(steps == 10)\n        return 10;\n    if(steps == 11)\n        return 11;\n    if(steps == 12)\n        return 12;\n    if(steps == 13)\n        return 13;\n    if(steps == 14)\n        return 14;\n    if(steps == 15)\n        return 15;\n    if(steps == 16)\n        return 16;\n    if(steps == 17)\n        return 17;\n    if(steps == 18)\n        return 18;\n    if(steps == 19)\n        return 19;\n    if(steps == 20)\n        return 20;\n    if(steps == 21)\n        return 21;\n    if(steps == 22)\n        return 22;\n    if(steps == 23)\n        return 23;\n    if(steps == 24)\n        return 24;\n    if(steps == 25)\n        return 25;\n    if(steps == 26)\n        return 26;\n    if(steps == 27)\n        return 27;\n    if(steps == 28)\n        return 28;\n    if(steps == 29)\n        return 29;\n    if(steps == 30)\n        return 30;\n    if(steps == 31)\n        return 31;\n    if(steps == 32)\n        return 32;\n    if(steps == 33)\n        return 33;\n    if(steps == 34)\n        return 34;\n    if(steps == 35)\n        return 35;\n    if(steps == 36)\n        return 36;\n    if(steps == 37)\n        return 37;\n    if(steps == 38)\n        return 38;\n    if(steps",
    "    float jumps = 0;\n    if(steps == 0)\n        return jumps;\n    if(steps == d) {\n        jumps = 1;\n        return jumps;\n    }\n    if(steps > d) {\n        jumps = 2;\n        return jumps;\n    }\n    if(steps < d) {\n        jumps = 2;\n        return jumps;\n    }",
    "    if(d == 0)\n        return 0;\n    if(steps == 0)\n        return INT_MAX;\n    if(steps >= d)\n        return 1;\n    return std::min(min_Jumps(steps + 1, d - steps), min_Jumps(steps + 1, d)) + 1;",
    "    if(steps == 0)\n        return 0;\n    if(steps == 1)\n        return d;\n    if(steps == 2)\n        return d*d;\n    if(steps == 3)\n        return d*d*d;\n    return pow(d, steps);",
    "    if(steps == 0) {\n        return 0;\n    }\n    if(steps == 1) {\n        return d;\n    }\n    if(steps == 2) {\n        return d + d;\n    }\n    float min_jumps = d + d;\n    float max_jumps = d + d;\n    float jumps = 0;\n    for(int i = 2; i < steps; i++) {\n        jumps = min_jumps + max_jumps;\n        min_jumps = max_jumps;\n        max_jumps = jumps;\n    }\n    return jumps;",
    "    assert(steps > 0);\n    assert(d > 0);\n    float jumps = 0;\n    float x = 0;\n    float y = 0;\n    float x_step = 0;\n    float y_step = 0;\n    float x_jump = 0;\n    float y_jump = 0;\n    float x_jump_count = 0;\n    float y_jump_count = 0;\n    float x_jump_count_rem = 0;\n    float y_jump_count_rem = 0;\n    float x_jump_count_rem_rem = 0;\n    float y_jump_count_rem_rem = 0;\n    float x_jump_count_rem_rem_rem = 0;\n    float y_jump_count_rem_rem_rem = 0;\n    float x_jump_count_rem_rem_rem_rem = 0;\n    float y_jump_count_rem_rem_rem_rem = 0;\n    float x_jump_count_rem_rem_rem_rem_rem = 0;\n    float y_jump_count_rem_rem_rem_rem_rem = 0;\n    float x_jump_count_rem_rem_rem_rem_rem_rem = 0;\n    float y_jump_count_rem_rem_rem_rem_rem_rem = 0;\n    float x_jump_count_rem_rem_rem_rem_rem_rem_rem = 0;\n    float y_jump_count_rem_rem_rem_rem_rem_rem_rem = 0;\n    float x_jump_count_rem_rem_rem_rem_rem_rem_rem_rem = 0;\n    float y_jump_count_rem_rem_rem_rem_rem_rem_rem_rem = 0;\n    float x_jump_count_rem_rem_rem_rem_rem_rem_rem_rem_rem = 0;\n    float y_jump_count_rem_rem_rem_rem_rem_rem_rem_rem_rem = 0;\n    float x_jump_count_rem_rem_rem_rem_rem_rem_rem_rem_rem_rem = 0;\n    float y_jump_count",
    "    if (d == 0) {\n        return 0;\n    }\n    if (steps == 0) {\n        return INT_MAX;\n    }\n    if (steps == d) {\n        return 1;\n    }\n    return std::min(min_Jumps(steps - 1, d - 1), min_Jumps(steps - 1, d + 1)) + 1;",
    "    float jumps = 0;\n    if (steps == 0) {\n        return jumps;\n    }\n    else if (steps == 1) {\n        return jumps + 1;\n    }\n    else if (steps == 2) {\n        return jumps + 2;\n    }\n    else {\n        jumps = (float)steps/d;\n        return jumps;\n    }",
    "    if(steps == 0) {\n        return 0;\n    }\n    if(steps == 1) {\n        return 1;\n    }\n    if(steps == 2) {\n        return 2;\n    }\n    if(steps == 3) {\n        return 3;\n    }\n    if(steps == 4) {\n        return 4;\n    }\n    if(steps == 5) {\n        return 5;\n    }\n    if(steps == 6) {\n        return 6;\n    }\n    if(steps == 7) {\n        return 7;\n    }\n    if(steps == 8) {\n        return 8;\n    }\n    if(steps == 9) {\n        return 9;\n    }\n    if(steps == 10) {\n        return 10;\n    }\n    if(steps == 11) {\n        return 11;\n    }\n    if(steps == 12) {\n        return 12;\n    }\n    if(steps == 13) {\n        return 13;\n    }\n    if(steps == 14) {\n        return 14;\n    }\n    if(steps == 15) {\n        return 15;\n    }\n    if(steps == 16) {\n        return 16;\n    }\n    if(steps == 17) {\n        return 17;\n    }\n    if(steps == 18) {\n        return 18;\n    }\n    if(steps == 19) {\n        return 19;\n    }\n    if(steps == 20) {\n        return 20;\n    }\n    if(steps == 21) {\n        return 21;\n    }\n    if(steps == 22) {\n        return 22;\n    }\n    if(steps == 23) {\n        return 23;\n    }\n    if(steps == 24) {\n        return 24;\n    }\n    if(steps == 25) {\n        return 25;\n    }\n    if(steps == 26) {\n        return 26;\n    }\n    if(steps == 27) {\n        return 27;\n    }\n    if(steps == 28) {\n        return 28;\n    }\n    if(steps == 29) {\n        return 29;\n    }\n   ",
    "    float jumps = 0;\n    if(steps == 0) {\n        return 0;\n    }\n    else if(steps == 1) {\n        return 1;\n    }\n    else {\n        jumps = 1 + min_Jumps(steps - d, d);\n    }\n    return jumps;",
    "    if (d == 0) {\n        return 0;\n    }\n    if (steps == 0) {\n        return INT_MAX;\n    }\n    if (steps == 1) {\n        return 1;\n    }\n    if (steps == 2) {\n        return 1.414;\n    }\n    if (steps == 3) {\n        return 1.732;\n    }\n    if (steps == 4) {\n        return 2;\n    }\n    if (steps == 5) {\n        return 2.236;\n    }\n    if (steps == 6) {\n        return 2.449;\n    }\n    if (steps == 7) {\n        return 2.646;\n    }\n    if (steps == 8) {\n        return 2.828;\n    }\n    if (steps == 9) {\n        return 3;\n    }\n    if (steps == 10) {\n        return 3.162;\n    }\n    if (steps == 11) {\n        return 3.316;\n    }\n    if (steps == 12) {\n        return 3.464;\n    }\n    if (steps == 13) {\n        return 3.606;\n    }\n    if (steps == 14) {\n        return 3.742;\n    }\n    if (steps == 15) {\n        return 3.873;\n    }\n    if (steps == 16) {\n        return 4;\n    }\n    if (steps == 17) {\n        return 4.123;\n    }\n    if (steps == 18) {\n        return 4.243;\n    }\n    if (steps == 19) {\n        return 4.359;\n    }\n    if (steps == 20) {\n        return 4.472;\n    }\n    if (steps == 21) {\n        return 4.583;\n    }\n    if (steps == 22) {\n        return 4.69;\n    }\n    if (steps == 23) {\n        return 4.796;\n    }\n    if (steps == 24) {\n        return 4.899;\n    }\n    if (steps == 25) {\n        return 5;\n    }\n    if (steps == 26",
    "    if(steps == 0)\n        return 0;\n    if(steps == 1)\n        return d;\n    if(steps == 2)\n        return d + d;\n    if(steps == 3)\n        return d + d + d;\n    if(steps == 4)\n        return d + d + d + d;\n    if(steps == 5)\n        return d + d + d + d + d;\n    if(steps == 6)\n        return d + d + d + d + d + d;\n    if(steps == 7)\n        return d + d + d + d + d + d + d;\n    if(steps == 8)\n        return d + d + d + d + d + d + d + d;\n    if(steps == 9)\n        return d + d + d + d + d + d + d + d + d;\n    if(steps == 10)\n        return d + d + d + d + d + d + d + d + d + d;\n    return 0;",
    "    // Write your code here\n    float jumps = 0;\n    if(steps == 0)\n        return 0;\n    if(steps <= d)\n        return 1;\n    else {\n        jumps = 1 + min_Jumps(steps-d, d);\n    }\n    return jumps;",
    "    float jumps = 0;\n    if (steps == 0) {\n        return jumps;\n    }\n    if (steps <= d) {\n        jumps = 1;\n    } else {\n        jumps = (float)steps / d;\n    }\n    return jumps;",
    "    if(steps == 0)\n        return 0;\n    if(steps == 1)\n        return d;\n    float jumps = 0;\n    for(int i = 1; i <= steps; i++) {\n        jumps += (float)d/i;\n    }\n    return jumps;",
    "    if(d == 0)\n        return 0;\n    if(steps == 0)\n        return INT_MAX;\n    if(steps >= d)\n        return 1;\n    return min(min_Jumps(steps + 1, d - steps), min_Jumps(steps + 1, d));",
    "    if(d == 0) {\n        return 0;\n    }\n    if(steps == 0) {\n        return INT_MAX;\n    }\n    float min = INT_MAX;\n    for(int i = 1; i <= steps; i++) {\n        float jumps = min_Jumps(steps - i, d - i);\n        if(jumps != INT_MAX && jumps + 1 < min) {\n            min = jumps + 1;\n        }\n    }\n    return min;",
    "    float jumps = 0;\n    if (steps == 0) {\n        return jumps;\n    }\n    if (steps <= d) {\n        jumps = 1;\n    } else {\n        jumps = 1 + min_Jumps(steps - d, d);\n    }\n    return jumps;",
    "    if (d == 0) {\n        return 0;\n    }\n    if (steps == 0) {\n        return INT_MAX;\n    }\n    if (d == steps) {\n        return 1;\n    }\n    float min_jumps = INT_MAX;\n    for (long i = 1; i <= steps; i++) {\n        float jumps = min_Jumps(steps - i, d - i);\n        if (jumps != INT_MAX && jumps + 1 < min_jumps) {\n            min_jumps = jumps + 1;\n        }\n    }\n    return min_jumps;",
    "    if(steps == 0)\n        return 0;\n    if(steps == 1)\n        return 1;\n    if(steps == 2)\n        return 2;\n    if(steps == 3)\n        return 3;\n    if(steps == 4)\n        return 4;\n    if(steps == 5)\n        return 5;\n    if(steps == 6)\n        return 6;\n    if(steps == 7)\n        return 7;\n    if(steps == 8)\n        return 8;\n    if(steps == 9)\n        return 9;\n    if(steps == 10)\n        return 10;\n    if(steps == 11)\n        return 11;\n    if(steps == 12)\n        return 12;\n    if(steps == 13)\n        return 13;\n    if(steps == 14)\n        return 14;\n    if(steps == 15)\n        return 15;\n    if(steps == 16)\n        return 16;\n    if(steps == 17)\n        return 17;\n    if(steps == 18)\n        return 18;\n    if(steps == 19)\n        return 19;\n    if(steps == 20)\n        return 20;\n    if(steps == 21)\n        return 21;\n    if(steps == 22)\n        return 22;\n    if(steps == 23)\n        return 23;\n    if(steps == 24)\n        return 24;\n    if(steps == 25)\n        return 25;\n    if(steps == 26)\n        return 26;\n    if(steps == 27)\n        return 27;\n    if(steps == 28)\n        return 28;\n    if(steps == 29)\n        return 29;\n    if(steps == 30)\n        return 30;\n    if(steps == 31)\n        return 31;\n    if(steps == 32)\n        return 32;\n    if(steps == 33)\n        return 33;\n    if(steps == 34)\n        return 34;\n    if(steps == 35)\n        return 35;\n    if(steps == 36)\n        return 36;\n    if(steps == 37)\n        return 37;\n    if(steps == 38)\n        return 38;\n    if(steps",
    "    if(steps == 0) {\n        return 0;\n    }\n    if(steps == 1) {\n        return 1;\n    }\n    if(steps == 2) {\n        return 2;\n    }\n    if(steps == 3) {\n        return 3;\n    }\n    if(steps == 4) {\n        return 4;\n    }\n    if(steps == 5) {\n        return 5;\n    }\n    if(steps == 6) {\n        return 6;\n    }\n    if(steps == 7) {\n        return 7;\n    }\n    if(steps == 8) {\n        return 8;\n    }\n    if(steps == 9) {\n        return 9;\n    }\n    if(steps == 10) {\n        return 10;\n    }\n    if(steps == 11) {\n        return 11;\n    }\n    if(steps == 12) {\n        return 12;\n    }\n    if(steps == 13) {\n        return 13;\n    }\n    if(steps == 14) {\n        return 14;\n    }\n    if(steps == 15) {\n        return 15;\n    }\n    if(steps == 16) {\n        return 16;\n    }\n    if(steps == 17) {\n        return 17;\n    }\n    if(steps == 18) {\n        return 18;\n    }\n    if(steps == 19) {\n        return 19;\n    }\n    if(steps == 20) {\n        return 20;\n    }\n    if(steps == 21) {\n        return 21;\n    }\n    if(steps == 22) {\n        return 22;\n    }\n    if(steps == 23) {\n        return 23;\n    }\n    if(steps == 24) {\n        return 24;\n    }\n    if(steps == 25) {\n        return 25;\n    }\n    if(steps == 26) {\n        return 26;\n    }\n    if(steps == 27) {\n        return 27;\n    }\n    if(steps == 28) {\n        return 28;\n    }\n    if(steps == 29) {\n        return 29;\n    }\n   ",
    "    if(d == 0)\n        return 0;\n    if(steps == 0)\n        return INT_MAX;\n    if(steps >= d)\n        return 1;\n    return min(min_Jumps(steps+1, d), min_Jumps(steps+2, d));",
    "    if (steps <= 0)\n        return 0;\n    if (steps == 1)\n        return d;\n    if (steps == 2)\n        return d + 1;\n    if (steps == 3)\n        return d + 2;\n    if (steps == 4)\n        return d + 3;\n    if (steps == 5)\n        return d + 4;\n    if (steps == 6)\n        return d + 5;\n    if (steps == 7)\n        return d + 6;\n    if (steps == 8)\n        return d + 7;\n    if (steps == 9)\n        return d + 8;\n    if (steps == 10)\n        return d + 9;\n    if (steps == 11)\n        return d + 10;\n    if (steps == 12)\n        return d + 11;\n    if (steps == 13)\n        return d + 12;\n    if (steps == 14)\n        return d + 13;\n    if (steps == 15)\n        return d + 14;\n    if (steps == 16)\n        return d + 15;\n    if (steps == 17)\n        return d + 16;\n    if (steps == 18)\n        return d + 17;\n    if (steps == 19)\n        return d + 18;\n    if (steps == 20)\n        return d + 19;\n    if (steps == 21)\n        return d + 20;\n    if (steps == 22)\n        return d + 21;\n    if (steps == 23)\n        return d + 22;\n    if (steps == 24)\n        return d + 23;\n    if (steps == 25)\n        return d + 24;\n    if (steps == 26)\n        return d + 25;\n    if (steps == 27)\n        return d + 26;\n    if (steps == 28)\n        return d + 27;\n    if (steps == 29)\n        return d + 28;\n    if (steps == 30)\n        return d + 29;\n    if (steps == 31)\n        return d + 30;\n    if (steps == 32)\n        return d + 31;\n    if (steps == 33)\n        return d + 32;\n    if (steps ==",
    "    if(steps == 0)\n        return 0;\n    if(steps == 1)\n        return 1;\n    if(steps == 2)\n        return 2;\n    if(steps == 3)\n        return 3;\n    if(steps == 4)\n        return 4;\n    if(steps == 5)\n        return 5;\n    if(steps == 6)\n        return 6;\n    if(steps == 7)\n        return 7;\n    if(steps == 8)\n        return 8;\n    if(steps == 9)\n        return 9;\n    if(steps == 10)\n        return 10;\n    if(steps == 11)\n        return 11;\n    if(steps == 12)\n        return 12;\n    if(steps == 13)\n        return 13;\n    if(steps == 14)\n        return 14;\n    if(steps == 15)\n        return 15;\n    if(steps == 16)\n        return 16;\n    if(steps == 17)\n        return 17;\n    if(steps == 18)\n        return 18;\n    if(steps == 19)\n        return 19;\n    if(steps == 20)\n        return 20;\n    if(steps == 21)\n        return 21;\n    if(steps == 22)\n        return 22;\n    if(steps == 23)\n        return 23;\n    if(steps == 24)\n        return 24;\n    if(steps == 25)\n        return 25;\n    if(steps == 26)\n        return 26;\n    if(steps == 27)\n        return 27;\n    if(steps == 28)\n        return 28;\n    if(steps == 29)\n        return 29;\n    if(steps == 30)\n        return 30;\n    if(steps == 31)\n        return 31;\n    if(steps == 32)\n        return 32;\n    if(steps == 33)\n        return 33;\n    if(steps == 34)\n        return 34;\n    if(steps == 35)\n        return 35;\n    if(steps == 36)\n        return 36;\n    if(steps == 37)\n        return 37;\n    if(steps == 38)\n        return 38;\n    if(steps",
    "    if(d == 0)\n        return 0;\n    if(steps == 0)\n        return INT_MAX;\n    if(steps == d)\n        return 1;\n    return std::min(min_Jumps(steps-1, d-1), min_Jumps(steps-1, d+1)) + 1;",
    "    float jumps = 0;\n    if (steps == 0) {\n        return 0;\n    }\n    if (steps < d) {\n        return 1;\n    }\n    jumps = 1 + min_Jumps(steps - d, d);\n    return jumps;",
    "    float jumps = 0;\n    if(steps == 0)\n        return 0;\n    if(steps == d)\n        return 1;\n    if(steps < d)\n        return -1;\n    if(steps > d) {\n        jumps = min_Jumps(steps - d, d);\n        if(jumps == -1)\n            return -1;\n        else\n            return jumps + 1;\n    }",
    "    float jumps = 0;\n    if(steps == 0)\n        return jumps;\n    if(steps <= d)\n        return jumps + 1;\n    if(steps > d) {\n        jumps = (float)steps/d;\n        jumps = ceil(jumps);\n    }\n    return jumps;",
    "    if (d == 0) {\n        return 0;\n    }\n    if (steps == 0) {\n        return INT_MAX;\n    }\n    if (steps == d) {\n        return 1;\n    }\n    float min_jumps = INT_MAX;\n    for (long i = 1; i <= steps; i++) {\n        float jumps = min_Jumps(steps - i, d - i);\n        if (jumps != INT_MAX && jumps + 1 < min_jumps) {\n            min_jumps = jumps + 1;\n        }\n    }\n    return min_jumps;",
    "    if(steps == 0)\n        return 0;\n    if(steps == 1)\n        return d;\n    if(steps == 2)\n        return d + d;\n    if(steps == 3)\n        return d + d + d;\n    if(steps == 4)\n        return d + d + d + d;\n    if(steps == 5)\n        return d + d + d + d + d;\n    if(steps == 6)\n        return d + d + d + d + d + d;\n    if(steps == 7)\n        return d + d + d + d + d + d + d;\n    if(steps == 8)\n        return d + d + d + d + d + d + d + d;\n    if(steps == 9)\n        return d + d + d + d + d + d + d + d + d;\n    if(steps == 10)\n        return d + d + d + d + d + d + d + d + d + d;\n    if(steps == 11)\n        return d + d + d + d + d + d + d + d + d + d + d;\n    if(steps == 12)\n        return d + d + d + d + d + d + d + d + d + d + d + d;\n    if(steps == 13)\n        return d + d + d + d + d + d + d + d + d + d + d + d + d;\n    if(steps == 14)\n        return d + d + d + d + d + d + d + d + d + d + d + d + d + d;\n    if(steps == 15)\n        return d + d + d + d + d + d + d + d + d + d + d + d + d + d + d;\n    if(steps == 16)\n        return d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d;\n    if(steps == 17)\n        return d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d;\n    if(steps ==",
    "    if(steps == 0)\n        return 0;\n    if(steps == 1)\n        return 1;\n    if(steps == 2)\n        return 2;\n    if(steps == 3)\n        return 3;\n    if(steps == 4)\n        return 4;\n    if(steps == 5)\n        return 5;\n    if(steps == 6)\n        return 6;\n    if(steps == 7)\n        return 7;\n    if(steps == 8)\n        return 8;\n    if(steps == 9)\n        return 9;\n    if(steps == 10)\n        return 10;\n    if(steps == 11)\n        return 11;\n    if(steps == 12)\n        return 12;\n    if(steps == 13)\n        return 13;\n    if(steps == 14)\n        return 14;\n    if(steps == 15)\n        return 15;\n    if(steps == 16)\n        return 16;\n    if(steps == 17)\n        return 17;\n    if(steps == 18)\n        return 18;\n    if(steps == 19)\n        return 19;\n    if(steps == 20)\n        return 20;\n    if(steps == 21)\n        return 21;\n    if(steps == 22)\n        return 22;\n    if(steps == 23)\n        return 23;\n    if(steps == 24)\n        return 24;\n    if(steps == 25)\n        return 25;\n    if(steps == 26)\n        return 26;\n    if(steps == 27)\n        return 27;\n    if(steps == 28)\n        return 28;\n    if(steps == 29)\n        return 29;\n    if(steps == 30)\n        return 30;\n    if(steps == 31)\n        return 31;\n    if(steps == 32)\n        return 32;\n    if(steps == 33)\n        return 33;\n    if(steps == 34)\n        return 34;\n    if(steps == 35)\n        return 35;\n    if(steps == 36)\n        return 36;\n    if(steps == 37)\n        return 37;\n    if(steps == 38)\n        return 38;\n    if(steps",
    "    if(steps == 0) {\n        return 0;\n    }\n    if(d == 0) {\n        return INT_MAX;\n    }\n    float min = INT_MAX;\n    for(long i = 1; i <= steps; i++) {\n        float jumps = 1 + std::max(min_Jumps(i - 1, d - 1), min_Jumps(steps - i, d));\n        if(jumps < min) {\n            min = jumps;\n        }\n    }\n    return min;",
    "    if (steps == 0)\n        return 0;\n    if (steps == 1)\n        return 1;\n    if (steps == 2)\n        return 2;\n    if (steps == 3)\n        return 3;\n    if (steps == 4)\n        return 4;\n    if (steps == 5)\n        return 5;\n    if (steps == 6)\n        return 6;\n    if (steps == 7)\n        return 7;\n    if (steps == 8)\n        return 8;\n    if (steps == 9)\n        return 9;\n    if (steps == 10)\n        return 10;\n    if (steps == 11)\n        return 11;\n    if (steps == 12)\n        return 12;\n    if (steps == 13)\n        return 13;\n    if (steps == 14)\n        return 14;\n    if (steps == 15)\n        return 15;\n    if (steps == 16)\n        return 16;\n    if (steps == 17)\n        return 17;\n    if (steps == 18)\n        return 18;\n    if (steps == 19)\n        return 19;\n    if (steps == 20)\n        return 20;\n    if (steps == 21)\n        return 21;\n    if (steps == 22)\n        return 22;\n    if (steps == 23)\n        return 23;\n    if (steps == 24)\n        return 24;\n    if (steps == 25)\n        return 25;\n    if (steps == 26)\n        return 26;\n    if (steps == 27)\n        return 27;\n    if (steps == 28)\n        return 28;\n    if (steps == 29)\n        return 29;\n    if (steps == 30)\n        return 30;\n    if (steps == 31)\n        return 31;\n    if (steps == 32)\n        return 32;\n    if (steps == 33)\n        return 33;\n    if (steps == 34)\n        return 34;\n    if (steps == 35)\n        return 35;\n    if (steps == 36)\n        return 36;\n    if (steps == 37)\n        return 37;\n    if (steps == 38)\n        return 38;\n    if (steps",
    "    float jumps = 0;\n    if(steps == 0) {\n        return 0;\n    }\n    if(steps == 1) {\n        return 1;\n    }\n    if(steps == 2) {\n        return 2;\n    }\n    if(steps == 3) {\n        return 3;\n    }\n    if(steps == 4) {\n        return 4;\n    }\n    if(steps == 5) {\n        return 5;\n    }\n    if(steps == 6) {\n        return 6;\n    }\n    if(steps == 7) {\n        return 7;\n    }\n    if(steps == 8) {\n        return 8;\n    }\n    if(steps == 9) {\n        return 9;\n    }\n    if(steps == 10) {\n        return 10;\n    }\n    if(steps == 11) {\n        return 11;\n    }\n    if(steps == 12) {\n        return 12;\n    }\n    if(steps == 13) {\n        return 13;\n    }\n    if(steps == 14) {\n        return 14;\n    }\n    if(steps == 15) {\n        return 15;\n    }\n    if(steps == 16) {\n        return 16;\n    }\n    if(steps == 17) {\n        return 17;\n    }\n    if(steps == 18) {\n        return 18;\n    }\n    if(steps == 19) {\n        return 19;\n    }\n    if(steps == 20) {\n        return 20;\n    }\n    if(steps == 21) {\n        return 21;\n    }\n    if(steps == 22) {\n        return 22;\n    }\n    if(steps == 23) {\n        return 23;\n    }\n    if(steps == 24) {\n        return 24;\n    }\n    if(steps == 25) {\n        return 25;\n    }\n    if(steps == 26) {\n        return 26;\n    }\n    if(steps == 27) {\n        return 27;\n    }\n    if(steps == 28) {\n        return 28;\n    }\n    if(steps == 29) {\n        return",
    "    float ans = 0;\n    if(steps == 0)\n        return ans;\n    if(steps == 1)\n        return d;\n    if(steps == 2)\n        return d/2;\n    if(steps == 3)\n        return d/3;\n    if(steps == 4)\n        return d/4;\n    if(steps == 5)\n        return d/5;\n    if(steps == 6)\n        return d/6;\n    if(steps == 7)\n        return d/7;\n    if(steps == 8)\n        return d/8;\n    if(steps == 9)\n        return d/9;\n    if(steps == 10)\n        return d/10;\n    if(steps == 11)\n        return d/11;\n    if(steps == 12)\n        return d/12;\n    if(steps == 13)\n        return d/13;\n    if(steps == 14)\n        return d/14;\n    if(steps == 15)\n        return d/15;\n    if(steps == 16)\n        return d/16;\n    if(steps == 17)\n        return d/17;\n    if(steps == 18)\n        return d/18;\n    if(steps == 19)\n        return d/19;\n    if(steps == 20)\n        return d/20;\n    if(steps == 21)\n        return d/21;\n    if(steps == 22)\n        return d/22;\n    if(steps == 23)\n        return d/23;\n    if(steps == 24)\n        return d/24;\n    if(steps == 25)\n        return d/25;\n    if(steps == 26)\n        return d/26;\n    if(steps == 27)\n        return d/27;\n    if(steps == 28)\n        return d/28;\n    if(steps == 29)\n        return d/29;\n    if(steps == 30)\n        return d/30;\n    if(steps == 31)\n        return d/31;\n    if(steps == 32)\n        return d/32;\n    if(steps == 33)\n        return d/33",
    "    // Write your code here\n    float ans = 0;\n    if(steps == 0)\n        return 0;\n    if(steps == 1)\n        return 1;\n    if(steps == 2)\n        return 2;\n    if(steps == 3)\n        return 3;\n    if(steps == 4)\n        return 4;\n    if(steps == 5)\n        return 5;\n    if(steps == 6)\n        return 6;\n    if(steps == 7)\n        return 7;\n    if(steps == 8)\n        return 8;\n    if(steps == 9)\n        return 9;\n    if(steps == 10)\n        return 10;\n    if(steps == 11)\n        return 11;\n    if(steps == 12)\n        return 12;\n    if(steps == 13)\n        return 13;\n    if(steps == 14)\n        return 14;\n    if(steps == 15)\n        return 15;\n    if(steps == 16)\n        return 16;\n    if(steps == 17)\n        return 17;\n    if(steps == 18)\n        return 18;\n    if(steps == 19)\n        return 19;\n    if(steps == 20)\n        return 20;\n    if(steps == 21)\n        return 21;\n    if(steps == 22)\n        return 22;\n    if(steps == 23)\n        return 23;\n    if(steps == 24)\n        return 24;\n    if(steps == 25)\n        return 25;\n    if(steps == 26)\n        return 26;\n    if(steps == 27)\n        return 27;\n    if(steps == 28)\n        return 28;\n    if(steps == 29)\n        return 29;\n    if(steps == 30)\n        return 30;\n    if(steps == 31)\n        return 31;\n    if(steps == 32)\n        return 32;\n    if(steps == 33)\n        return 33;\n    if(steps == 34)\n        return 34;\n    if(steps == 35)\n        return 35;\n    if(steps == 36)\n        return 36;\n    if(steps == 37)\n        return 37;\n    if(",
    "    if(d == 0) {\n        return 0;\n    }\n    if(steps == 0) {\n        return INT_MAX;\n    }\n    if(steps == d) {\n        return 1;\n    }\n    float min_jumps = INT_MAX;\n    for(long i = 1; i <= steps; i++) {\n        float jumps = min_Jumps(steps - i, d - i);\n        if(jumps != INT_MAX && jumps + 1 < min_jumps) {\n            min_jumps = jumps + 1;\n        }\n    }\n    return min_jumps;",
    "    if(d == 0)\n        return 0;\n    if(steps == 0)\n        return INT_MAX;\n    float min = INT_MAX;\n    for(int i = 1; i <= steps; i++) {\n        float jumps = min_Jumps(steps - i, d - i);\n        if(jumps != INT_MAX && jumps + 1 < min)\n            min = jumps + 1;\n    }\n    return min;",
    "    if(steps == 0) return 0;\n    if(steps == 1) return 1;\n    if(steps == 2) return 2;\n    if(steps == 3) return 3;\n    if(steps == 4) return 4;\n    if(steps == 5) return 5;\n    if(steps == 6) return 6;\n    if(steps == 7) return 7;\n    if(steps == 8) return 8;\n    if(steps == 9) return 9;\n    if(steps == 10) return 10;\n    if(steps == 11) return 11;\n    if(steps == 12) return 12;\n    if(steps == 13) return 13;\n    if(steps == 14) return 14;\n    if(steps == 15) return 15;\n    if(steps == 16) return 16;\n    if(steps == 17) return 17;\n    if(steps == 18) return 18;\n    if(steps == 19) return 19;\n    if(steps == 20) return 20;\n    if(steps == 21) return 21;\n    if(steps == 22) return 22;\n    if(steps == 23) return 23;\n    if(steps == 24) return 24;\n    if(steps == 25) return 25;\n    if(steps == 26) return 26;\n    if(steps == 27) return 27;\n    if(steps == 28) return 28;\n    if(steps == 29) return 29;\n    if(steps == 30) return 30;\n    if(steps == 31) return 31;\n    if(steps == 32) return 32;\n    if(steps == 33) return 33;\n    if(steps == 34) return 34;\n    if(steps == 35) return 35;\n    if(steps == 36) return 36;\n    if(steps == 37) return 37;\n    if(steps == 38) return 38;\n    if(steps == 39) return 39;\n    if(steps == 40) return 40;\n    if(steps == 41) return 41;\n    if(steps == 42) return 42;\n    if(steps == 43) return 43;\n    if(steps == 44) return 44;\n    if(steps == 45) return 45;\n    if(steps ==",
    "    if(d == 0)\n        return 0;\n    if(steps == 0)\n        return INT_MAX;\n    if(steps >= d)\n        return 1;\n    float min = INT_MAX;\n    for(int i = 1; i <= steps; i++) {\n        float jumps = min_Jumps(steps - i, d - i);\n        if(jumps != INT_MAX && jumps + 1 < min)\n            min = jumps + 1;\n    }\n    return min;",
    "    if(steps <= 0)\n        return 0;\n    if(steps == 1)\n        return d;\n    if(steps == 2)\n        return d + d;\n    if(steps == 3)\n        return d + d + d;\n    if(steps == 4)\n        return d + d + d + d;\n    if(steps == 5)\n        return d + d + d + d + d;\n    if(steps == 6)\n        return d + d + d + d + d + d;\n    if(steps == 7)\n        return d + d + d + d + d + d + d;\n    if(steps == 8)\n        return d + d + d + d + d + d + d + d;\n    if(steps == 9)\n        return d + d + d + d + d + d + d + d + d;\n    if(steps == 10)\n        return d + d + d + d + d + d + d + d + d + d;\n    if(steps == 11)\n        return d + d + d + d + d + d + d + d + d + d + d;\n    if(steps == 12)\n        return d + d + d + d + d + d + d + d + d + d + d + d;\n    if(steps == 13)\n        return d + d + d + d + d + d + d + d + d + d + d + d + d;\n    if(steps == 14)\n        return d + d + d + d + d + d + d + d + d + d + d + d + d + d;\n    if(steps == 15)\n        return d + d + d + d + d + d + d + d + d + d + d + d + d + d + d;\n    if(steps == 16)\n        return d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d;\n    if(steps == 17)\n        return d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d;\n    if(steps ==",
    "    if(steps == 0) {\n        return 0;\n    }\n    if(d == 0) {\n        return INT_MAX;\n    }\n    if(steps == d) {\n        return 1;\n    }\n    if(steps < d) {\n        return INT_MAX;\n    }\n    return std::min(min_Jumps(steps-d, d), 1 + min_Jumps(steps-1, d));",
    "    float jumps = 0;\n    if(steps == 0)\n        return 0;\n    if(steps == 1)\n        return 1;\n    if(steps == 2)\n        return 2;\n    if(steps == 3)\n        return 3;\n    if(steps == 4)\n        return 4;\n    if(steps == 5)\n        return 5;\n    if(steps == 6)\n        return 6;\n    if(steps == 7)\n        return 7;\n    if(steps == 8)\n        return 8;\n    if(steps == 9)\n        return 9;\n    if(steps == 10)\n        return 10;\n    if(steps == 11)\n        return 11;\n    if(steps == 12)\n        return 12;\n    if(steps == 13)\n        return 13;\n    if(steps == 14)\n        return 14;\n    if(steps == 15)\n        return 15;\n    if(steps == 16)\n        return 16;\n    if(steps == 17)\n        return 17;\n    if(steps == 18)\n        return 18;\n    if(steps == 19)\n        return 19;\n    if(steps == 20)\n        return 20;\n    if(steps == 21)\n        return 21;\n    if(steps == 22)\n        return 22;\n    if(steps == 23)\n        return 23;\n    if(steps == 24)\n        return 24;\n    if(steps == 25)\n        return 25;\n    if(steps == 26)\n        return 26;\n    if(steps == 27)\n        return 27;\n    if(steps == 28)\n        return 28;\n    if(steps == 29)\n        return 29;\n    if(steps == 30)\n        return 30;\n    if(steps == 31)\n        return 31;\n    if(steps == 32)\n        return 32;\n    if(steps == 33)\n        return 33;\n    if(steps == 34)\n        return 34;\n    if(steps == 35)\n        return 35;\n    if(steps == 36)\n        return 36;\n    if(steps == 37)\n        return 37;\n    if(steps == 38)\n        return",
    "    if(steps == 0)\n        return 0;\n    if(steps == 1)\n        return 1;\n    if(steps == 2)\n        return 2;\n    if(steps == 3)\n        return 3;\n    if(steps == 4)\n        return 4;\n    if(steps == 5)\n        return 5;\n    if(steps == 6)\n        return 6;\n    if(steps == 7)\n        return 7;\n    if(steps == 8)\n        return 8;\n    if(steps == 9)\n        return 9;\n    if(steps == 10)\n        return 10;\n    if(steps == 11)\n        return 11;\n    if(steps == 12)\n        return 12;\n    if(steps == 13)\n        return 13;\n    if(steps == 14)\n        return 14;\n    if(steps == 15)\n        return 15;\n    if(steps == 16)\n        return 16;\n    if(steps == 17)\n        return 17;\n    if(steps == 18)\n        return 18;\n    if(steps == 19)\n        return 19;\n    if(steps == 20)\n        return 20;\n    if(steps == 21)\n        return 21;\n    if(steps == 22)\n        return 22;\n    if(steps == 23)\n        return 23;\n    if(steps == 24)\n        return 24;\n    if(steps == 25)\n        return 25;\n    if(steps == 26)\n        return 26;\n    if(steps == 27)\n        return 27;\n    if(steps == 28)\n        return 28;\n    if(steps == 29)\n        return 29;\n    if(steps == 30)\n        return 30;\n    if(steps == 31)\n        return 31;\n    if(steps == 32)\n        return 32;\n    if(steps == 33)\n        return 33;\n    if(steps == 34)\n        return 34;\n    if(steps == 35)\n        return 35;\n    if(steps == 36)\n        return 36;\n    if(steps == 37)\n        return 37;\n    if(steps == 38)\n        return 38;\n    if(steps",
    "    if(d == 0) return 0;\n    if(steps == 0) return INT_MAX;\n    if(d == steps) return 1;\n    if(d < steps) return min_Jumps(steps-d, d);\n    return min(min_Jumps(steps-d, d), min_Jumps(steps, d-steps)) + 1;",
    "    if (steps == 0) {\n        return 0;\n    }\n    if (steps == 1) {\n        return 1;\n    }\n    if (steps == 2) {\n        return 2;\n    }\n    if (steps == 3) {\n        return 3;\n    }\n    if (steps == 4) {\n        return 4;\n    }\n    if (steps == 5) {\n        return 5;\n    }\n    if (steps == 6) {\n        return 6;\n    }\n    if (steps == 7) {\n        return 7;\n    }\n    if (steps == 8) {\n        return 8;\n    }\n    if (steps == 9) {\n        return 9;\n    }\n    if (steps == 10) {\n        return 10;\n    }\n    if (steps == 11) {\n        return 11;\n    }\n    if (steps == 12) {\n        return 12;\n    }\n    if (steps == 13) {\n        return 13;\n    }\n    if (steps == 14) {\n        return 14;\n    }\n    if (steps == 15) {\n        return 15;\n    }\n    if (steps == 16) {\n        return 16;\n    }\n    if (steps == 17) {\n        return 17;\n    }\n    if (steps == 18) {\n        return 18;\n    }\n    if (steps == 19) {\n        return 19;\n    }\n    if (steps == 20) {\n        return 20;\n    }\n    if (steps == 21) {\n        return 21;\n    }\n    if (steps == 22) {\n        return 22;\n    }\n    if (steps == 23) {\n        return 23;\n    }\n    if (steps == 24) {\n        return 24;\n    }\n    if (steps == 25) {\n        return 25;\n    }\n    if (steps == 26) {\n        return 26;\n    }\n    if (steps == 27) {\n        return 27;\n    }\n    if (steps == 28) {\n        return 28;\n    }\n    if (steps == 29) {\n        return 29;\n    }\n   ",
    "    if(steps == 0)\n        return 0;\n    if(steps == 1)\n        return 1;\n    if(steps == 2)\n        return 2;\n    if(steps == 3)\n        return 3;\n    if(steps == 4)\n        return 4;\n    if(steps == 5)\n        return 5;\n    if(steps == 6)\n        return 6;\n    if(steps == 7)\n        return 7;\n    if(steps == 8)\n        return 8;\n    if(steps == 9)\n        return 9;\n    if(steps == 10)\n        return 10;\n    if(steps == 11)\n        return 11;\n    if(steps == 12)\n        return 12;\n    if(steps == 13)\n        return 13;\n    if(steps == 14)\n        return 14;\n    if(steps == 15)\n        return 15;\n    if(steps == 16)\n        return 16;\n    if(steps == 17)\n        return 17;\n    if(steps == 18)\n        return 18;\n    if(steps == 19)\n        return 19;\n    if(steps == 20)\n        return 20;\n    if(steps == 21)\n        return 21;\n    if(steps == 22)\n        return 22;\n    if(steps == 23)\n        return 23;\n    if(steps == 24)\n        return 24;\n    if(steps == 25)\n        return 25;\n    if(steps == 26)\n        return 26;\n    if(steps == 27)\n        return 27;\n    if(steps == 28)\n        return 28;\n    if(steps == 29)\n        return 29;\n    if(steps == 30)\n        return 30;\n    if(steps == 31)\n        return 31;\n    if(steps == 32)\n        return 32;\n    if(steps == 33)\n        return 33;\n    if(steps == 34)\n        return 34;\n    if(steps == 35)\n        return 35;\n    if(steps == 36)\n        return 36;\n    if(steps == 37)\n        return 37;\n    if(steps == 38)\n        return 38;\n    if(steps",
    "    float jumps = 0;\n    if(steps == 0) {\n        return 0;\n    }\n    if(steps == 1) {\n        return 1;\n    }\n    if(steps == 2) {\n        return 2;\n    }\n    if(steps == 3) {\n        return 3;\n    }\n    if(steps == 4) {\n        return 4;\n    }\n    if(steps == 5) {\n        return 5;\n    }\n    if(steps == 6) {\n        return 6;\n    }\n    if(steps == 7) {\n        return 7;\n    }\n    if(steps == 8) {\n        return 8;\n    }\n    if(steps == 9) {\n        return 9;\n    }\n    if(steps == 10) {\n        return 10;\n    }\n    if(steps == 11) {\n        return 11;\n    }\n    if(steps == 12) {\n        return 12;\n    }\n    if(steps == 13) {\n        return 13;\n    }\n    if(steps == 14) {\n        return 14;\n    }\n    if(steps == 15) {\n        return 15;\n    }\n    if(steps == 16) {\n        return 16;\n    }\n    if(steps == 17) {\n        return 17;\n    }\n    if(steps == 18) {\n        return 18;\n    }\n    if(steps == 19) {\n        return 19;\n    }\n    if(steps == 20) {\n        return 20;\n    }\n    if(steps == 21) {\n        return 21;\n    }\n    if(steps == 22) {\n        return 22;\n    }\n    if(steps == 23) {\n        return 23;\n    }\n    if(steps == 24) {\n        return 24;\n    }\n    if(steps == 25) {\n        return 25;\n    }\n    if(steps == 26) {\n        return 26;\n    }\n    if(steps == 27) {\n        return 27;\n    }\n    if(steps == 28) {\n        return 28;\n    }\n    if(steps == 29) {\n        return",
    "    if (d == 0) {\n        return 0;\n    }\n    if (steps == 0) {\n        return INT_MAX;\n    }\n    if (steps == d) {\n        return 1;\n    }\n    float min = INT_MAX;\n    for (long i = 1; i <= steps; i++) {\n        float jumps = 1 + min_Jumps(steps - i, d - i);\n        if (jumps < min) {\n            min = jumps;\n        }\n    }\n    return min;",
    "    float jumps = 0;\n    if (steps == 0) {\n        return 0;\n    }\n    if (steps <= d) {\n        return 1;\n    }\n    jumps = 1 + min_Jumps(steps - d, d);\n    return jumps;",
    "    if(d == 0) {\n        return 0;\n    }\n    if(steps == 0) {\n        return INT_MAX;\n    }\n    if(steps == 1) {\n        return 1;\n    }\n    if(steps == 2) {\n        return 1.414;\n    }\n    if(steps >= d) {\n        return 1;\n    }\n    return std::min(min_Jumps(steps - 1, d - 1), min_Jumps(steps - 2, d - 2)) + 1;",
    "    float jumps = 0;\n    if(steps == 0)\n        return 0;\n    if(steps == 1)\n        return 1;\n    if(steps == 2)\n        return 2;\n    if(steps == 3)\n        return 3;\n    if(steps == 4)\n        return 4;\n    if(steps == 5)\n        return 5;\n    if(steps == 6)\n        return 6;\n    if(steps == 7)\n        return 7;\n    if(steps == 8)\n        return 8;\n    if(steps == 9)\n        return 9;\n    if(steps == 10)\n        return 10;\n    if(steps == 11)\n        return 11;\n    if(steps == 12)\n        return 12;\n    if(steps == 13)\n        return 13;\n    if(steps == 14)\n        return 14;\n    if(steps == 15)\n        return 15;\n    if(steps == 16)\n        return 16;\n    if(steps == 17)\n        return 17;\n    if(steps == 18)\n        return 18;\n    if(steps == 19)\n        return 19;\n    if(steps == 20)\n        return 20;\n    if(steps == 21)\n        return 21;\n    if(steps == 22)\n        return 22;\n    if(steps == 23)\n        return 23;\n    if(steps == 24)\n        return 24;\n    if(steps == 25)\n        return 25;\n    if(steps == 26)\n        return 26;\n    if(steps == 27)\n        return 27;\n    if(steps == 28)\n        return 28;\n    if(steps == 29)\n        return 29;\n    if(steps == 30)\n        return 30;\n    if(steps == 31)\n        return 31;\n    if(steps == 32)\n        return 32;\n    if(steps == 33)\n        return 33;\n    if(steps == 34)\n        return 34;\n    if(steps == 35)\n        return 35;\n    if(steps == 36)\n        return 36;\n    if(steps == 37)\n        return 37;\n    if(steps == 38)\n        return",
    "\tif(d==0)\n\t\treturn 0;\n\tif(steps==0)\n\t\treturn INT_MAX;\n\tif(steps==d)\n\t\treturn 1;\n\tif(steps>d)\n\t\treturn INT_MAX;\n\treturn std::min(1+min_Jumps(steps+1, d), 1+min_Jumps(steps+2, d));",
    "    if(d == 0)\n        return 0;\n    if(steps == 0)\n        return INT_MAX;\n    if(steps == d)\n        return 1;\n    float min_jumps = INT_MAX;\n    for(int i = 1; i <= steps; i++) {\n        float jumps = min_Jumps(steps - i, d - i);\n        if(jumps != INT_MAX && jumps + 1 < min_jumps)\n            min_jumps = jumps + 1;\n    }\n    return min_jumps;",
    "    if(d == 0) {\n        return 0;\n    }\n    if(steps == 0) {\n        return INT_MAX;\n    }\n    if(steps == d) {\n        return 1;\n    }\n    if(steps > d) {\n        return min_Jumps(steps - d, d) + 1;\n    }\n    return min(min_Jumps(steps + 1, d), min_Jumps(steps + 2, d)) + 1;",
    "    if(d == 0)\n        return 0;\n    if(steps == 0)\n        return INT_MAX;\n    if(d == steps)\n        return 1;\n    if(d < steps)\n        return min_Jumps(steps - d, d);\n    else\n        return min(min_Jumps(steps - d, d), min_Jumps(steps, d - steps)) + 1;",
    "    float jumps = 0;\n    if(steps == 0) {\n        return 0;\n    }\n    if(steps <= d) {\n        return 1;\n    }\n    jumps = min_Jumps(steps-d, d);\n    jumps += 1;\n    return jumps;",
    "    float jumps = 0;\n    if (steps == 0) {\n        return 0;\n    }\n    if (steps == 1) {\n        return 1;\n    }\n    if (steps == 2) {\n        return 2;\n    }\n    if (steps == 3) {\n        return 3;\n    }\n    if (steps == 4) {\n        return 4;\n    }\n    if (steps == 5) {\n        return 5;\n    }\n    if (steps == 6) {\n        return 6;\n    }\n    if (steps == 7) {\n        return 7;\n    }\n    if (steps == 8) {\n        return 8;\n    }\n    if (steps == 9) {\n        return 9;\n    }\n    if (steps == 10) {\n        return 10;\n    }\n    if (steps == 11) {\n        return 11;\n    }\n    if (steps == 12) {\n        return 12;\n    }\n    if (steps == 13) {\n        return 13;\n    }\n    if (steps == 14) {\n        return 14;\n    }\n    if (steps == 15) {\n        return 15;\n    }\n    if (steps == 16) {\n        return 16;\n    }\n    if (steps == 17) {\n        return 17;\n    }\n    if (steps == 18) {\n        return 18;\n    }\n    if (steps == 19) {\n        return 19;\n    }\n    if (steps == 20) {\n        return 20;\n    }\n    if (steps == 21) {\n        return 21;\n    }\n    if (steps == 22) {\n        return 22;\n    }\n    if (steps == 23) {\n        return 23;\n    }\n    if (steps == 24) {\n        return 24;\n    }\n    if (steps == 25) {\n        return 25;\n    }\n    if (steps == 26) {\n        return 26;\n    }\n    if (steps == 27) {\n        return 27;\n    }\n    if (steps == 28) {\n        return 28;\n    }\n    if (steps == 29) {\n        return",
    "    if(steps == 0)\n        return 0;\n    if(steps == 1)\n        return d;\n    return (sqrt(2)*d)/steps;",
    "    float jumps = 0;\n    if(steps == 0) {\n        return jumps;\n    }\n    if(steps > d) {\n        jumps = min_Jumps(steps-d, d);\n        jumps++;\n    }\n    else {\n        jumps = min_Jumps(d-steps, d);\n        jumps++;\n    }\n    return jumps;",
    "\tif (steps == 0) return 0;\n\tif (steps == 1) return 1;\n\tif (steps == 2) return 2;\n\tif (steps == 3) return 3;\n\tif (steps == 4) return 4;\n\tif (steps == 5) return 5;\n\tif (steps == 6) return 6;\n\tif (steps == 7) return 7;\n\tif (steps == 8) return 8;\n\tif (steps == 9) return 9;\n\tif (steps == 10) return 10;\n\tif (steps == 11) return 11;\n\tif (steps == 12) return 12;\n\tif (steps == 13) return 13;\n\tif (steps == 14) return 14;\n\tif (steps == 15) return 15;\n\tif (steps == 16) return 16;\n\tif (steps == 17) return 17;\n\tif (steps == 18) return 18;\n\tif (steps == 19) return 19;\n\tif (steps == 20) return 20;\n\tif (steps == 21) return 21;\n\tif (steps == 22) return 22;\n\tif (steps == 23) return 23;\n\tif (steps == 24) return 24;\n\tif (steps == 25) return 25;\n\tif (steps == 26) return 26;\n\tif (steps == 27) return 27;\n\tif (steps == 28) return 28;\n\tif (steps == 29) return 29;\n\tif (steps == 30) return 30;\n\tif (steps == 31) return 31;\n\tif (steps == 32) return 32;\n\tif (steps == 33) return 33;\n\tif (steps == 34) return 34;\n\tif (steps == 35) return 35;\n\tif (steps == 36) return 36;\n\tif (steps == 37) return 37;\n\tif (steps == 38) return 38;\n\tif (steps == 39) return 39;\n\tif (steps == 40) return 40;\n\tif (steps == 41) return 41;\n\tif (steps == 42) return 42;\n\tif (steps == 43) return 43;\n\tif (steps == 44) return 44;\n\tif (steps == 45) return 45;\n\tif (steps ==",
    "    float jumps = 0;\n    long x = 0;\n    long y = 0;\n    while (x < d) {\n        jumps++;\n        x += steps;\n        y += steps;\n        if (x < d) {\n            jumps++;\n            x += steps;\n            y -= steps;\n        }\n    }\n    return jumps;",
    "    if(steps == 0)\n        return 0;\n    if(steps == 1)\n        return 1;\n    if(steps == 2)\n        return 2;\n    if(steps == 3)\n        return 3;\n    if(steps == 4)\n        return 4;\n    if(steps == 5)\n        return 5;\n    if(steps == 6)\n        return 6;\n    if(steps == 7)\n        return 7;\n    if(steps == 8)\n        return 8;\n    if(steps == 9)\n        return 9;\n    if(steps == 10)\n        return 10;\n    if(steps == 11)\n        return 11;\n    if(steps == 12)\n        return 12;\n    if(steps == 13)\n        return 13;\n    if(steps == 14)\n        return 14;\n    if(steps == 15)\n        return 15;\n    if(steps == 16)\n        return 16;\n    if(steps == 17)\n        return 17;\n    if(steps == 18)\n        return 18;\n    if(steps == 19)\n        return 19;\n    if(steps == 20)\n        return 20;\n    if(steps == 21)\n        return 21;\n    if(steps == 22)\n        return 22;\n    if(steps == 23)\n        return 23;\n    if(steps == 24)\n        return 24;\n    if(steps == 25)\n        return 25;\n    if(steps == 26)\n        return 26;\n    if(steps == 27)\n        return 27;\n    if(steps == 28)\n        return 28;\n    if(steps == 29)\n        return 29;\n    if(steps == 30)\n        return 30;\n    if(steps == 31)\n        return 31;\n    if(steps == 32)\n        return 32;\n    if(steps == 33)\n        return 33;\n    if(steps == 34)\n        return 34;\n    if(steps == 35)\n        return 35;\n    if(steps == 36)\n        return 36;\n    if(steps == 37)\n        return 37;\n    if(steps == 38)\n        return 38;\n    if(steps",
    "    if (steps == 0)\n        return 0;\n    if (steps == 1)\n        return 1;\n    if (steps == 2)\n        return 2;\n    if (steps == 3)\n        return 3;\n    if (steps == 4)\n        return 4;\n    if (steps == 5)\n        return 5;\n    if (steps == 6)\n        return 6;\n    if (steps == 7)\n        return 7;\n    if (steps == 8)\n        return 8;\n    if (steps == 9)\n        return 9;\n    if (steps == 10)\n        return 10;\n    if (steps == 11)\n        return 11;\n    if (steps == 12)\n        return 12;\n    if (steps == 13)\n        return 13;\n    if (steps == 14)\n        return 14;\n    if (steps == 15)\n        return 15;\n    if (steps == 16)\n        return 16;\n    if (steps == 17)\n        return 17;\n    if (steps == 18)\n        return 18;\n    if (steps == 19)\n        return 19;\n    if (steps == 20)\n        return 20;\n    if (steps == 21)\n        return 21;\n    if (steps == 22)\n        return 22;\n    if (steps == 23)\n        return 23;\n    if (steps == 24)\n        return 24;\n    if (steps == 25)\n        return 25;\n    if (steps == 26)\n        return 26;\n    if (steps == 27)\n        return 27;\n    if (steps == 28)\n        return 28;\n    if (steps == 29)\n        return 29;\n    if (steps == 30)\n        return 30;\n    if (steps == 31)\n        return 31;\n    if (steps == 32)\n        return 32;\n    if (steps == 33)\n        return 33;\n    if (steps == 34)\n        return 34;\n    if (steps == 35)\n        return 35;\n    if (steps == 36)\n        return 36;\n    if (steps == 37)\n        return 37;\n    if (steps == 38)\n        return 38;\n    if (steps",
    "    float jumps = 0;\n    if (steps == 0) {\n        return 0;\n    }\n    if (steps == 1) {\n        return 1;\n    }\n    if (steps == 2) {\n        return 2;\n    }\n    if (steps == 3) {\n        return 3;\n    }\n    if (steps == 4) {\n        return 4;\n    }\n    if (steps == 5) {\n        return 5;\n    }\n    if (steps == 6) {\n        return 6;\n    }\n    if (steps == 7) {\n        return 7;\n    }\n    if (steps == 8) {\n        return 8;\n    }\n    if (steps == 9) {\n        return 9;\n    }\n    if (steps == 10) {\n        return 10;\n    }\n    if (steps == 11) {\n        return 11;\n    }\n    if (steps == 12) {\n        return 12;\n    }\n    if (steps == 13) {\n        return 13;\n    }\n    if (steps == 14) {\n        return 14;\n    }\n    if (steps == 15) {\n        return 15;\n    }\n    if (steps == 16) {\n        return 16;\n    }\n    if (steps == 17) {\n        return 17;\n    }\n    if (steps == 18) {\n        return 18;\n    }\n    if (steps == 19) {\n        return 19;\n    }\n    if (steps == 20) {\n        return 20;\n    }\n    if (steps == 21) {\n        return 21;\n    }\n    if (steps == 22) {\n        return 22;\n    }\n    if (steps == 23) {\n        return 23;\n    }\n    if (steps == 24) {\n        return 24;\n    }\n    if (steps == 25) {\n        return 25;\n    }\n    if (steps == 26) {\n        return 26;\n    }\n    if (steps == 27) {\n        return 27;\n    }\n    if (steps == 28) {\n        return 28;\n    }\n    if (steps == 29) {\n        return",
    "    if(steps == 0)\n        return 0;\n    if(steps == 1)\n        return 1;\n    if(steps == 2)\n        return 2;\n    if(steps == 3)\n        return 3;\n    if(steps == 4)\n        return 4;\n    if(steps == 5)\n        return 5;\n    if(steps == 6)\n        return 6;\n    if(steps == 7)\n        return 7;\n    if(steps == 8)\n        return 8;\n    if(steps == 9)\n        return 9;\n    if(steps == 10)\n        return 10;\n    if(steps == 11)\n        return 11;\n    if(steps == 12)\n        return 12;\n    if(steps == 13)\n        return 13;\n    if(steps == 14)\n        return 14;\n    if(steps == 15)\n        return 15;\n    if(steps == 16)\n        return 16;\n    if(steps == 17)\n        return 17;\n    if(steps == 18)\n        return 18;\n    if(steps == 19)\n        return 19;\n    if(steps == 20)\n        return 20;\n    if(steps == 21)\n        return 21;\n    if(steps == 22)\n        return 22;\n    if(steps == 23)\n        return 23;\n    if(steps == 24)\n        return 24;\n    if(steps == 25)\n        return 25;\n    if(steps == 26)\n        return 26;\n    if(steps == 27)\n        return 27;\n    if(steps == 28)\n        return 28;\n    if(steps == 29)\n        return 29;\n    if(steps == 30)\n        return 30;\n    if(steps == 31)\n        return 31;\n    if(steps == 32)\n        return 32;\n    if(steps == 33)\n        return 33;\n    if(steps == 34)\n        return 34;\n    if(steps == 35)\n        return 35;\n    if(steps == 36)\n        return 36;\n    if(steps == 37)\n        return 37;\n    if(steps == 38)\n        return 38;\n    if(steps",
    "    float jumps = 0;\n    if(steps == 0) {\n        return 0;\n    }\n    if(steps == 1) {\n        return 1;\n    }\n    if(steps == 2) {\n        return 2;\n    }\n    if(steps == 3) {\n        return 3;\n    }\n    if(steps == 4) {\n        return 4;\n    }\n    if(steps == 5) {\n        return 5;\n    }\n    if(steps == 6) {\n        return 6;\n    }\n    if(steps == 7) {\n        return 7;\n    }\n    if(steps == 8) {\n        return 8;\n    }\n    if(steps == 9) {\n        return 9;\n    }\n    if(steps == 10) {\n        return 10;\n    }\n    if(steps == 11) {\n        return 11;\n    }\n    if(steps == 12) {\n        return 12;\n    }\n    if(steps == 13) {\n        return 13;\n    }\n    if(steps == 14) {\n        return 14;\n    }\n    if(steps == 15) {\n        return 15;\n    }\n    if(steps == 16) {\n        return 16;\n    }\n    if(steps == 17) {\n        return 17;\n    }\n    if(steps == 18) {\n        return 18;\n    }\n    if(steps == 19) {\n        return 19;\n    }\n    if(steps == 20) {\n        return 20;\n    }\n    if(steps == 21) {\n        return 21;\n    }\n    if(steps == 22) {\n        return 22;\n    }\n    if(steps == 23) {\n        return 23;\n    }\n    if(steps == 24) {\n        return 24;\n    }\n    if(steps == 25) {\n        return 25;\n    }\n    if(steps == 26) {\n        return 26;\n    }\n    if(steps == 27) {\n        return 27;\n    }\n    if(steps == 28) {\n        return 28;\n    }\n    if(steps == 29) {\n        return",
    "    if(d == 0)\n        return 0;\n    if(steps == 0)\n        return INT_MAX;\n    if(steps >= d)\n        return 1;\n    float min = INT_MAX;\n    for(int i = 1; i <= steps; i++) {\n        float jumps = min_Jumps(steps - i, d - i);\n        if(jumps != INT_MAX && jumps + 1 < min)\n            min = jumps + 1;\n    }\n    return min;",
    "    if(steps == 0) {\n        return 0;\n    }\n    if(steps == 1) {\n        return d;\n    }\n    if(steps == 2) {\n        return d + d;\n    }\n    if(steps == 3) {\n        return d + d + d;\n    }\n    if(steps == 4) {\n        return d + d + d + d;\n    }\n    if(steps == 5) {\n        return d + d + d + d + d;\n    }\n    if(steps == 6) {\n        return d + d + d + d + d + d;\n    }\n    if(steps == 7) {\n        return d + d + d + d + d + d + d;\n    }\n    if(steps == 8) {\n        return d + d + d + d + d + d + d + d;\n    }\n    if(steps == 9) {\n        return d + d + d + d + d + d + d + d + d;\n    }\n    if(steps == 10) {\n        return d + d + d + d + d + d + d + d + d + d;\n    }\n    if(steps == 11) {\n        return d + d + d + d + d + d + d + d + d + d + d;\n    }\n    if(steps == 12) {\n        return d + d + d + d + d + d + d + d + d + d + d + d;\n    }\n    if(steps == 13) {\n        return d + d + d + d + d + d + d + d + d + d + d + d + d;\n    }\n    if(steps == 14) {\n        return d + d + d + d + d + d + d + d + d + d + d + d + d + d;\n    }\n    if(steps == 15) {\n        return d + d + d + d + d + d + d + d + d + d + d + d + d + d + d;\n    }\n    if(steps == 16) {\n        return d + d + d + d + d + d + d + d + d +",
    "    float jumps = 0;\n    if(d == 0) {\n        return 0;\n    }\n    if(steps == 0) {\n        return -1;\n    }\n    if(steps == 1) {\n        return 1;\n    }\n    if(steps == 2) {\n        return 2;\n    }\n    if(steps == 3) {\n        return 3;\n    }\n    if(steps == 4) {\n        return 4;\n    }\n    if(steps == 5) {\n        return 5;\n    }\n    if(steps == 6) {\n        return 6;\n    }\n    if(steps == 7) {\n        return 7;\n    }\n    if(steps == 8) {\n        return 8;\n    }\n    if(steps == 9) {\n        return 9;\n    }\n    if(steps == 10) {\n        return 10;\n    }\n    if(steps == 11) {\n        return 11;\n    }\n    if(steps == 12) {\n        return 12;\n    }\n    if(steps == 13) {\n        return 13;\n    }\n    if(steps == 14) {\n        return 14;\n    }\n    if(steps == 15) {\n        return 15;\n    }\n    if(steps == 16) {\n        return 16;\n    }\n    if(steps == 17) {\n        return 17;\n    }\n    if(steps == 18) {\n        return 18;\n    }\n    if(steps == 19) {\n        return 19;\n    }\n    if(steps == 20) {\n        return 20;\n    }\n    if(steps == 21) {\n        return 21;\n    }\n    if(steps == 22) {\n        return 22;\n    }\n    if(steps == 23) {\n        return 23;\n    }\n    if(steps == 24) {\n        return 24;\n    }\n    if(steps == 25) {\n        return 25;\n    }\n    if(steps == 26) {\n        return 26;\n    }\n    if(steps == 27) {\n        return 27;\n    }\n    if(steps == 28) {\n       ",
    "    if(d == 0)\n        return 0;\n    if(steps == 0)\n        return INT_MAX;\n    if(steps == d)\n        return 1;\n    return std::min(min_Jumps(steps-1, d-1), min_Jumps(steps-1, d+1)) + 1;",
    "    if(steps == 0)\n        return 0;\n    if(steps == 1)\n        return 1;\n    if(steps == 2)\n        return 2;\n    if(steps == 3)\n        return 3;\n    if(steps == 4)\n        return 4;\n    if(steps == 5)\n        return 5;\n    if(steps == 6)\n        return 6;\n    if(steps == 7)\n        return 7;\n    if(steps == 8)\n        return 8;\n    if(steps == 9)\n        return 9;\n    if(steps == 10)\n        return 10;\n    if(steps == 11)\n        return 11;\n    if(steps == 12)\n        return 12;\n    if(steps == 13)\n        return 13;\n    if(steps == 14)\n        return 14;\n    if(steps == 15)\n        return 15;\n    if(steps == 16)\n        return 16;\n    if(steps == 17)\n        return 17;\n    if(steps == 18)\n        return 18;\n    if(steps == 19)\n        return 19;\n    if(steps == 20)\n        return 20;\n    if(steps == 21)\n        return 21;\n    if(steps == 22)\n        return 22;\n    if(steps == 23)\n        return 23;\n    if(steps == 24)\n        return 24;\n    if(steps == 25)\n        return 25;\n    if(steps == 26)\n        return 26;\n    if(steps == 27)\n        return 27;\n    if(steps == 28)\n        return 28;\n    if(steps == 29)\n        return 29;\n    if(steps == 30)\n        return 30;\n    if(steps == 31)\n        return 31;\n    if(steps == 32)\n        return 32;\n    if(steps == 33)\n        return 33;\n    if(steps == 34)\n        return 34;\n    if(steps == 35)\n        return 35;\n    if(steps == 36)\n        return 36;\n    if(steps == 37)\n        return 37;\n    if(steps == 38)\n        return 38;\n    if(steps",
    "    if(steps == 0)\n        return 0;\n    if(steps == 1)\n        return 1;\n    if(steps == 2)\n        return 2;\n    if(steps == 3)\n        return 3;\n    if(steps == 4)\n        return 4;\n    if(steps == 5)\n        return 5;\n    if(steps == 6)\n        return 6;\n    if(steps == 7)\n        return 7;\n    if(steps == 8)\n        return 8;\n    if(steps == 9)\n        return 9;\n    if(steps == 10)\n        return 10;\n    if(steps == 11)\n        return 11;\n    if(steps == 12)\n        return 12;\n    if(steps == 13)\n        return 13;\n    if(steps == 14)\n        return 14;\n    if(steps == 15)\n        return 15;\n    if(steps == 16)\n        return 16;\n    if(steps == 17)\n        return 17;\n    if(steps == 18)\n        return 18;\n    if(steps == 19)\n        return 19;\n    if(steps == 20)\n        return 20;\n    if(steps == 21)\n        return 21;\n    if(steps == 22)\n        return 22;\n    if(steps == 23)\n        return 23;\n    if(steps == 24)\n        return 24;\n    if(steps == 25)\n        return 25;\n    if(steps == 26)\n        return 26;\n    if(steps == 27)\n        return 27;\n    if(steps == 28)\n        return 28;\n    if(steps == 29)\n        return 29;\n    if(steps == 30)\n        return 30;\n    if(steps == 31)\n        return 31;\n    if(steps == 32)\n        return 32;\n    if(steps == 33)\n        return 33;\n    if(steps == 34)\n        return 34;\n    if(steps == 35)\n        return 35;\n    if(steps == 36)\n        return 36;\n    if(steps == 37)\n        return 37;\n    if(steps == 38)\n        return 38;\n    if(steps",
    "    if (d == 0) {\n        return 0;\n    }\n    if (steps == 0) {\n        return INT_MAX;\n    }\n    if (steps == d) {\n        return 1;\n    }\n    float min_jumps = INT_MAX;\n    for (int i = 1; i <= steps; i++) {\n        float jumps = min_Jumps(steps - i, d - i);\n        if (jumps != INT_MAX && jumps + 1 < min_jumps) {\n            min_jumps = jumps + 1;\n        }\n    }\n    return min_jumps;",
    "    if(steps == 0)\n        return 0;\n    if(steps == 1)\n        return 1;\n    if(steps == 2)\n        return 2;\n    if(steps == 3)\n        return 3;\n    return min_Jumps(steps-1, d) + min_Jumps(steps-2, d) + min_Jumps(steps-3, d);",
    "    if(d == 0)\n        return 0;\n    if(d == 1)\n        return 1;\n    if(steps == 0)\n        return INT_MAX;\n    return std::min(min_Jumps(steps-1, d-1), min_Jumps(steps, d-steps));",
    "    if(d == 0) return 0;\n    if(steps == 0) return INT_MAX;\n    if(d == steps) return 1;\n    if(d < steps) return min_Jumps(steps-d, d);\n    return min(min_Jumps(steps-1, d-1), min_Jumps(steps, d-steps)) + 1;",
    "    float jumps = 0;\n    long x = 0;\n    long y = 0;\n    while(x < d) {\n        jumps++;\n        x += steps;\n        y += steps;\n        if(x > d) {\n            jumps += (float)(d - x + steps)/(float)steps;\n            break;\n        }\n        if(y > d) {\n            jumps += (float)(d - y + steps)/(float)steps;\n            break;\n        }\n    }\n    return jumps;",
    "    if(steps == 0) return 0;\n    if(steps == 1) return 1;\n    if(steps == 2) return 1.5;\n    if(steps == 3) return 2;\n    if(steps == 4) return 2.5;\n    if(steps == 5) return 3;\n    if(steps == 6) return 3.5;\n    if(steps == 7) return 4;\n    if(steps == 8) return 4.5;\n    if(steps == 9) return 5;\n    if(steps == 10) return 5.5;\n    if(steps == 11) return 6;\n    if(steps == 12) return 6.5;\n    if(steps == 13) return 7;\n    if(steps == 14) return 7.5;\n    if(steps == 15) return 8;\n    if(steps == 16) return 8.5;\n    if(steps == 17) return 9;\n    if(steps == 18) return 9.5;\n    if(steps == 19) return 10;\n    if(steps == 20) return 10.5;\n    if(steps == 21) return 11;\n    if(steps == 22) return 11.5;\n    if(steps == 23) return 12;\n    if(steps == 24) return 12.5;\n    if(steps == 25) return 13;\n    if(steps == 26) return 13.5;\n    if(steps == 27) return 14;\n    if(steps == 28) return 14.5;\n    if(steps == 29) return 15;\n    if(steps == 30) return 15.5;\n    if(steps == 31) return 16;\n    if(steps == 32) return 16.5;\n    if(steps == 33) return 17;\n    if(steps == 34) return 17.5;\n    if(steps == 35) return 18;\n    if(steps == 36) return 18.5;\n    if(steps == 37) return 19;\n    if(steps == 38) return 19.5;\n    if(steps == 39) return 20;\n    if(steps == 40) return 20.5;\n    if(steps == 41) return 21;\n    if(steps == 42) return 21",
    "    float jumps = 0;\n    if(steps == 0)\n        return jumps;\n    if(steps == 1)\n        return jumps + 1;\n    if(steps == 2)\n        return jumps + 2;\n    if(steps == 3)\n        return jumps + 3;\n    if(steps == 4)\n        return jumps + 4;\n    if(steps == 5)\n        return jumps + 5;\n    if(steps == 6)\n        return jumps + 6;\n    if(steps == 7)\n        return jumps + 7;\n    if(steps == 8)\n        return jumps + 8;\n    if(steps == 9)\n        return jumps + 9;\n    if(steps == 10)\n        return jumps + 10;\n    if(steps == 11)\n        return jumps + 11;\n    if(steps == 12)\n        return jumps + 12;\n    if(steps == 13)\n        return jumps + 13;\n    if(steps == 14)\n        return jumps + 14;\n    if(steps == 15)\n        return jumps + 15;\n    if(steps == 16)\n        return jumps + 16;\n    if(steps == 17)\n        return jumps + 17;\n    if(steps == 18)\n        return jumps + 18;\n    if(steps == 19)\n        return jumps + 19;\n    if(steps == 20)\n        return jumps + 20;\n    if(steps == 21)\n        return jumps + 21;\n    if(steps == 22)\n        return jumps + 22;\n    if(steps == 23)\n        return jumps + 23;\n    if(steps == 24)\n        return jumps + 24;\n    if(steps == 25)\n        return jumps + 25;\n    if(steps == 26)\n        return jumps + 26;\n    if(steps == 27)\n        return jumps + 27;\n    if(steps == 28)\n        return jumps + 28;\n    if(steps == 29)\n        return jumps + 29;\n    if(steps == 30)\n        return jumps + 30;\n    if(steps == 31)\n        return jumps + 31;\n    if(steps == 32)\n        return jumps + 32;\n    if(steps == 33)\n        return jumps",
    "    if (d == 0) {\n        return 0;\n    }\n    if (steps == 0) {\n        return INT_MAX;\n    }\n    if (steps == d) {\n        return 1;\n    }\n    if (steps > d) {\n        return INT_MAX;\n    }\n    float min_jumps = INT_MAX;\n    for (int i = 1; i <= steps; i++) {\n        float jumps = min_Jumps(steps - i, d - i);\n        if (jumps != INT_MAX && jumps + 1 < min_jumps) {\n            min_jumps = jumps + 1;\n        }\n    }\n    return min_jumps;",
    "    float jumps = 0;\n    if(steps == 0)\n        return 0;\n    if(steps == 1)\n        return 1;\n    if(steps == 2)\n        return 2;\n    if(steps == 3)\n        return 3;\n    if(steps == 4)\n        return 4;\n    if(steps == 5)\n        return 5;\n    if(steps == 6)\n        return 6;\n    if(steps == 7)\n        return 7;\n    if(steps == 8)\n        return 8;\n    if(steps == 9)\n        return 9;\n    if(steps == 10)\n        return 10;\n    if(steps == 11)\n        return 11;\n    if(steps == 12)\n        return 12;\n    if(steps == 13)\n        return 13;\n    if(steps == 14)\n        return 14;\n    if(steps == 15)\n        return 15;\n    if(steps == 16)\n        return 16;\n    if(steps == 17)\n        return 17;\n    if(steps == 18)\n        return 18;\n    if(steps == 19)\n        return 19;\n    if(steps == 20)\n        return 20;\n    if(steps == 21)\n        return 21;\n    if(steps == 22)\n        return 22;\n    if(steps == 23)\n        return 23;\n    if(steps == 24)\n        return 24;\n    if(steps == 25)\n        return 25;\n    if(steps == 26)\n        return 26;\n    if(steps == 27)\n        return 27;\n    if(steps == 28)\n        return 28;\n    if(steps == 29)\n        return 29;\n    if(steps == 30)\n        return 30;\n    if(steps == 31)\n        return 31;\n    if(steps == 32)\n        return 32;\n    if(steps == 33)\n        return 33;\n    if(steps == 34)\n        return 34;\n    if(steps == 35)\n        return 35;\n    if(steps == 36)\n        return 36;\n    if(steps == 37)\n        return 37;\n    if(steps == 38)\n        return",
    "    if(d == 0) {\n        return 0;\n    }\n    if(steps == 0) {\n        return INT_MAX;\n    }\n    if(d == steps) {\n        return 1;\n    }\n    float min_jumps = INT_MAX;\n    for(long i = 1; i <= steps; i++) {\n        float jumps = min_Jumps(steps - i, d - i);\n        if(jumps != INT_MAX && jumps + 1 < min_jumps) {\n            min_jumps = jumps + 1;\n        }\n    }\n    return min_jumps;",
    "    if(d == 0)\n        return 0;\n    if(steps == 0)\n        return INT_MAX;\n    if(d == steps)\n        return 1;\n    if(d < steps)\n        return min_Jumps(steps-d, d);\n    else\n        return min(1 + min_Jumps(steps-d, d), 1 + min_Jumps(steps, d-steps));",
    "    if(d == 0) {\n        return 0;\n    }\n    if(steps == 0) {\n        return INT_MAX;\n    }\n    if(d == steps) {\n        return 1;\n    }\n    if(d < steps) {\n        return min_Jumps(steps, d+1) + 1;\n    }\n    return min(min_Jumps(steps-1, d-1), min_Jumps(steps-1, d+1)) + 1;",
    "    if(steps == 0) {\n        return 0;\n    }\n    if(steps == 1) {\n        return d;\n    }\n    if(steps == 2) {\n        return d*d;\n    }\n    return (d*d*d) + min_Jumps(steps-1, d);",
    "    float jumps = 0;\n    if(steps == 0)\n        return jumps;\n    if(steps <= d)\n        return 1;\n    else {\n        jumps = (float)steps/d;\n        if(steps%d != 0)\n            jumps++;\n    }\n    return jumps;",
    "\tif (steps == 0) {\n\t\treturn 0;\n\t}\n\tif (steps == 1) {\n\t\treturn 1;\n\t}\n\tif (steps == 2) {\n\t\treturn 2;\n\t}\n\tif (steps == 3) {\n\t\treturn 3;\n\t}\n\tif (steps == 4) {\n\t\treturn 4;\n\t}\n\tif (steps == 5) {\n\t\treturn 5;\n\t}\n\tif (steps == 6) {\n\t\treturn 6;\n\t}\n\tif (steps == 7) {\n\t\treturn 7;\n\t}\n\tif (steps == 8) {\n\t\treturn 8;\n\t}\n\tif (steps == 9) {\n\t\treturn 9;\n\t}\n\tif (steps == 10) {\n\t\treturn 10;\n\t}\n\tif (steps == 11) {\n\t\treturn 11;\n\t}\n\tif (steps == 12) {\n\t\treturn 12;\n\t}\n\tif (steps == 13) {\n\t\treturn 13;\n\t}\n\tif (steps == 14) {\n\t\treturn 14;\n\t}\n\tif (steps == 15) {\n\t\treturn 15;\n\t}\n\tif (steps == 16) {\n\t\treturn 16;\n\t}\n\tif (steps == 17) {\n\t\treturn 17;\n\t}\n\tif (steps == 18) {\n\t\treturn 18;\n\t}\n\tif (steps == 19) {\n\t\treturn 19;\n\t}\n\tif (steps == 20) {\n\t\treturn 20;\n\t}\n\tif (steps == 21) {\n\t\treturn 21;\n\t}\n\tif (steps == 22) {\n\t\treturn 22;\n\t}\n\tif (steps == 23) {\n\t\treturn 23;\n\t}\n\tif (steps == 24) {\n\t\treturn 24;\n\t}\n\tif (steps == 25) {\n\t\treturn 25;\n\t}\n\tif (steps == 26) {\n\t\treturn 26;\n\t}\n\tif (steps == 27) {\n\t\treturn 27;\n\t}\n\tif (steps == 28)",
    "    if(d == 0)\n        return 0;\n    if(steps == 0)\n        return INT_MAX;\n    if(steps == d)\n        return 1;\n    float min_jumps = INT_MAX;\n    for(int i = 1; i <= steps; i++) {\n        float jumps = min_Jumps(steps - i, d - i);\n        if(jumps != INT_MAX && jumps + 1 < min_jumps)\n            min_jumps = jumps + 1;\n    }\n    return min_jumps;",
    "    if(steps == 0)\n        return 0;\n    if(steps == 1)\n        return d;\n    if(steps == 2)\n        return d + d;\n    if(steps == 3)\n        return d + d + d;\n    if(steps == 4)\n        return d + d + d + d;\n    if(steps == 5)\n        return d + d + d + d + d;\n    if(steps == 6)\n        return d + d + d + d + d + d;\n    if(steps == 7)\n        return d + d + d + d + d + d + d;\n    if(steps == 8)\n        return d + d + d + d + d + d + d + d;\n    if(steps == 9)\n        return d + d + d + d + d + d + d + d + d;\n    if(steps == 10)\n        return d + d + d + d + d + d + d + d + d + d;\n    if(steps == 11)\n        return d + d + d + d + d + d + d + d + d + d + d;\n    if(steps == 12)\n        return d + d + d + d + d + d + d + d + d + d + d + d;\n    if(steps == 13)\n        return d + d + d + d + d + d + d + d + d + d + d + d + d;\n    if(steps == 14)\n        return d + d + d + d + d + d + d + d + d + d + d + d + d + d;\n    if(steps == 15)\n        return d + d + d + d + d + d + d + d + d + d + d + d + d + d + d;\n    if(steps == 16)\n        return d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d;\n    if(steps == 17)\n        return d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d;\n    if(steps ==",
    "    if(steps == 0) {\n        return 0;\n    }\n    if(steps == 1) {\n        return 1;\n    }\n    if(steps == 2) {\n        return 2;\n    }\n    if(steps == 3) {\n        return 3;\n    }\n    if(steps == 4) {\n        return 4;\n    }\n    if(steps == 5) {\n        return 5;\n    }\n    if(steps == 6) {\n        return 6;\n    }\n    if(steps == 7) {\n        return 7;\n    }\n    if(steps == 8) {\n        return 8;\n    }\n    if(steps == 9) {\n        return 9;\n    }\n    if(steps == 10) {\n        return 10;\n    }\n    if(steps == 11) {\n        return 11;\n    }\n    if(steps == 12) {\n        return 12;\n    }\n    if(steps == 13) {\n        return 13;\n    }\n    if(steps == 14) {\n        return 14;\n    }\n    if(steps == 15) {\n        return 15;\n    }\n    if(steps == 16) {\n        return 16;\n    }\n    if(steps == 17) {\n        return 17;\n    }\n    if(steps == 18) {\n        return 18;\n    }\n    if(steps == 19) {\n        return 19;\n    }\n    if(steps == 20) {\n        return 20;\n    }\n    if(steps == 21) {\n        return 21;\n    }\n    if(steps == 22) {\n        return 22;\n    }\n    if(steps == 23) {\n        return 23;\n    }\n    if(steps == 24) {\n        return 24;\n    }\n    if(steps == 25) {\n        return 25;\n    }\n    if(steps == 26) {\n        return 26;\n    }\n    if(steps == 27) {\n        return 27;\n    }\n    if(steps == 28) {\n        return 28;\n    }\n    if(steps == 29) {\n        return 29;\n    }\n   ",
    "    if (steps == 0)\n        return 0;\n    if (steps == 1)\n        return d;\n    if (steps == 2)\n        return d + d;\n    if (steps == 3)\n        return d + d + d;\n    if (steps == 4)\n        return d + d + d + d;\n    if (steps == 5)\n        return d + d + d + d + d;\n    if (steps == 6)\n        return d + d + d + d + d + d;\n    if (steps == 7)\n        return d + d + d + d + d + d + d;\n    if (steps == 8)\n        return d + d + d + d + d + d + d + d;\n    if (steps == 9)\n        return d + d + d + d + d + d + d + d + d;\n    if (steps == 10)\n        return d + d + d + d + d + d + d + d + d + d;\n    if (steps == 11)\n        return d + d + d + d + d + d + d + d + d + d + d;\n    if (steps == 12)\n        return d + d + d + d + d + d + d + d + d + d + d + d;\n    if (steps == 13)\n        return d + d + d + d + d + d + d + d + d + d + d + d + d;\n    if (steps == 14)\n        return d + d + d + d + d + d + d + d + d + d + d + d + d + d;\n    if (steps == 15)\n        return d + d + d + d + d + d + d + d + d + d + d + d + d + d + d;\n    if (steps == 16)\n        return d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d;\n    if (steps == 17)\n        return d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d;\n    if (steps ==",
    "    float jumps = 0;\n    if (steps == 0) {\n        return 0;\n    }\n    if (steps == 1) {\n        return 1;\n    }\n    if (steps == 2) {\n        return 2;\n    }\n    if (steps == 3) {\n        return 3;\n    }\n    if (steps == 4) {\n        return 4;\n    }\n    if (steps == 5) {\n        return 5;\n    }\n    if (steps == 6) {\n        return 6;\n    }\n    if (steps == 7) {\n        return 7;\n    }\n    if (steps == 8) {\n        return 8;\n    }\n    if (steps == 9) {\n        return 9;\n    }\n    if (steps == 10) {\n        return 10;\n    }\n    if (steps == 11) {\n        return 11;\n    }\n    if (steps == 12) {\n        return 12;\n    }\n    if (steps == 13) {\n        return 13;\n    }\n    if (steps == 14) {\n        return 14;\n    }\n    if (steps == 15) {\n        return 15;\n    }\n    if (steps == 16) {\n        return 16;\n    }\n    if (steps == 17) {\n        return 17;\n    }\n    if (steps == 18) {\n        return 18;\n    }\n    if (steps == 19) {\n        return 19;\n    }\n    if (steps == 20) {\n        return 20;\n    }\n    if (steps == 21) {\n        return 21;\n    }\n    if (steps == 22) {\n        return 22;\n    }\n    if (steps == 23) {\n        return 23;\n    }\n    if (steps == 24) {\n        return 24;\n    }\n    if (steps == 25) {\n        return 25;\n    }\n    if (steps == 26) {\n        return 26;\n    }\n    if (steps == 27) {\n        return 27;\n    }\n    if (steps == 28) {\n        return 28;\n    }\n    if (steps == 29) {\n        return",
    "    float jumps = 0;\n    if (steps == 0) {\n        return 0;\n    }\n    if (steps <= d) {\n        return 1;\n    }\n    if (steps > d) {\n        jumps = (float)steps / (float)d;\n        jumps = ceil(jumps);\n        return jumps;\n    }",
    "\tif (d == 0) {\n\t\treturn 0;\n\t}\n\tif (steps == 0) {\n\t\treturn INT_MAX;\n\t}\n\tif (steps == d) {\n\t\treturn 1;\n\t}\n\tfloat min = INT_MAX;\n\tfor (long i = 1; i <= steps; i++) {\n\t\tfloat jumps = min_Jumps(steps - i, d - i);\n\t\tif (jumps != INT_MAX && jumps + 1 < min) {\n\t\t\tmin = jumps + 1;\n\t\t}\n\t}\n\treturn min;",
    "    float jumps = 0;\n    if(steps == 0) {\n        return jumps;\n    }\n    if(steps <= d) {\n        jumps = 1;\n    }\n    else {\n        jumps = 1 + min_Jumps(steps - d, d);\n    }\n    return jumps;",
    "    if(d==0) return 0;\n    if(steps==0) return INT_MAX;\n    if(d<steps) return 1;\n    return 1+min(min_Jumps(steps-1, d-1), min_Jumps(steps-1, d+1));",
    "    if(steps == 0)\n        return 0;\n    if(d == 0)\n        return INT_MAX;\n    if(steps == d)\n        return 1;\n    if(steps < d)\n        return INT_MAX;\n    return 1 + std::min(min_Jumps(steps-d, d), min_Jumps(steps-1, d));",
    "    if(steps == 0) {\n        return 0;\n    }\n    if(steps == 1) {\n        return 1;\n    }\n    if(steps == 2) {\n        return 2;\n    }\n    if(steps == 3) {\n        return 3;\n    }\n    if(steps == 4) {\n        return 4;\n    }\n    if(steps == 5) {\n        return 5;\n    }\n    if(steps == 6) {\n        return 6;\n    }\n    if(steps == 7) {\n        return 7;\n    }\n    if(steps == 8) {\n        return 8;\n    }\n    if(steps == 9) {\n        return 9;\n    }\n    if(steps == 10) {\n        return 10;\n    }\n    if(steps == 11) {\n        return 11;\n    }\n    if(steps == 12) {\n        return 12;\n    }\n    if(steps == 13) {\n        return 13;\n    }\n    if(steps == 14) {\n        return 14;\n    }\n    if(steps == 15) {\n        return 15;\n    }\n    if(steps == 16) {\n        return 16;\n    }\n    if(steps == 17) {\n        return 17;\n    }\n    if(steps == 18) {\n        return 18;\n    }\n    if(steps == 19) {\n        return 19;\n    }\n    if(steps == 20) {\n        return 20;\n    }\n    if(steps == 21) {\n        return 21;\n    }\n    if(steps == 22) {\n        return 22;\n    }\n    if(steps == 23) {\n        return 23;\n    }\n    if(steps == 24) {\n        return 24;\n    }\n    if(steps == 25) {\n        return 25;\n    }\n    if(steps == 26) {\n        return 26;\n    }\n    if(steps == 27) {\n        return 27;\n    }\n    if(steps == 28) {\n        return 28;\n    }\n    if(steps == 29) {\n        return 29;\n    }\n   ",
    "\tif(steps == 0) {\n\t\treturn 0;\n\t}\n\tif(steps == 1) {\n\t\treturn 1;\n\t}\n\tif(steps == 2) {\n\t\treturn 2;\n\t}\n\tif(steps == 3) {\n\t\treturn 3;\n\t}\n\tif(steps == 4) {\n\t\treturn 4;\n\t}\n\tif(steps == 5) {\n\t\treturn 5;\n\t}\n\tif(steps == 6) {\n\t\treturn 6;\n\t}\n\tif(steps == 7) {\n\t\treturn 7;\n\t}\n\tif(steps == 8) {\n\t\treturn 8;\n\t}\n\tif(steps == 9) {\n\t\treturn 9;\n\t}\n\tif(steps == 10) {\n\t\treturn 10;\n\t}\n\tif(steps == 11) {\n\t\treturn 11;\n\t}\n\tif(steps == 12) {\n\t\treturn 12;\n\t}\n\tif(steps == 13) {\n\t\treturn 13;\n\t}\n\tif(steps == 14) {\n\t\treturn 14;\n\t}\n\tif(steps == 15) {\n\t\treturn 15;\n\t}\n\tif(steps == 16) {\n\t\treturn 16;\n\t}\n\tif(steps == 17) {\n\t\treturn 17;\n\t}\n\tif(steps == 18) {\n\t\treturn 18;\n\t}\n\tif(steps == 19) {\n\t\treturn 19;\n\t}\n\tif(steps == 20) {\n\t\treturn 20;\n\t}\n\tif(steps == 21) {\n\t\treturn 21;\n\t}\n\tif(steps == 22) {\n\t\treturn 22;\n\t}\n\tif(steps == 23) {\n\t\treturn 23;\n\t}\n\tif(steps == 24) {\n\t\treturn 24;\n\t}\n\tif(steps == 25) {\n\t\treturn 25;\n\t}\n\tif(steps == 26) {\n\t\treturn 26;\n\t}\n\tif(steps == 27) {\n\t\treturn 27;\n\t}\n\tif(steps == 28)",
    "    if(d == 0) return 0;\n    if(steps == 0) return INT_MAX;\n    if(d == steps) return 1;\n    if(d < steps) return min_Jumps(steps-1, d);\n    return min(min_Jumps(steps-1, d), 1 + min_Jumps(steps, d-steps));",
    "    if(steps == 0)\n        return 0;\n    if(steps == 1)\n        return d;\n    if(steps == 2)\n        return d + d;\n    if(steps == 3)\n        return d + d + d;\n    if(steps == 4)\n        return d + d + d + d;\n    if(steps == 5)\n        return d + d + d + d + d;\n    if(steps == 6)\n        return d + d + d + d + d + d;\n    if(steps == 7)\n        return d + d + d + d + d + d + d;\n    if(steps == 8)\n        return d + d + d + d + d + d + d + d;\n    if(steps == 9)\n        return d + d + d + d + d + d + d + d + d;\n    if(steps == 10)\n        return d + d + d + d + d + d + d + d + d + d;\n    if(steps == 11)\n        return d + d + d + d + d + d + d + d + d + d + d;\n    if(steps == 12)\n        return d + d + d + d + d + d + d + d + d + d + d + d;\n    if(steps == 13)\n        return d + d + d + d + d + d + d + d + d + d + d + d + d;\n    if(steps == 14)\n        return d + d + d + d + d + d + d + d + d + d + d + d + d + d;\n    if(steps == 15)\n        return d + d + d + d + d + d + d + d + d + d + d + d + d + d + d;\n    if(steps == 16)\n        return d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d;\n    if(steps == 17)\n        return d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d;\n    if(steps ==",
    "    if (steps <= 0)\n        return 0;\n    if (steps == 1)\n        return d;\n    if (steps == 2)\n        return d + d;\n    if (steps == 3)\n        return d + d + d;\n    if (steps == 4)\n        return d + d + d + d;\n    if (steps == 5)\n        return d + d + d + d + d;\n    if (steps == 6)\n        return d + d + d + d + d + d;\n    if (steps == 7)\n        return d + d + d + d + d + d + d;\n    if (steps == 8)\n        return d + d + d + d + d + d + d + d;\n    if (steps == 9)\n        return d + d + d + d + d + d + d + d + d;\n    if (steps == 10)\n        return d + d + d + d + d + d + d + d + d + d;\n    if (steps == 11)\n        return d + d + d + d + d + d + d + d + d + d + d;\n    if (steps == 12)\n        return d + d + d + d + d + d + d + d + d + d + d + d;\n    if (steps == 13)\n        return d + d + d + d + d + d + d + d + d + d + d + d + d;\n    if (steps == 14)\n        return d + d + d + d + d + d + d + d + d + d + d + d + d + d;\n    if (steps == 15)\n        return d + d + d + d + d + d + d + d + d + d + d + d + d + d + d;\n    if (steps == 16)\n        return d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d;\n    if (steps == 17)\n        return d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d;\n    if (steps ==",
    "    float jumps = 0;\n    if(steps == 0)\n        return jumps;\n    if(steps >= d) {\n        jumps += (steps/d);\n        steps = steps%d;\n    }\n    if(steps == 0)\n        return jumps;\n    if(steps > 0) {\n        jumps += 1;\n        steps = d - steps;\n    }\n    if(steps == 0)\n        return jumps;\n    if(steps > 0) {\n        jumps += (steps/d);\n        steps = steps%d;\n    }\n    if(steps == 0)\n        return jumps;\n    if(steps > 0) {\n        jumps += 1;\n        steps = d - steps;\n    }\n    if(steps == 0)\n        return jumps;\n    if(steps > 0) {\n        jumps += (steps/d);\n        steps = steps%d;\n    }\n    if(steps == 0)\n        return jumps;\n    if(steps > 0) {\n        jumps += 1;\n        steps = d - steps;\n    }\n    if(steps == 0)\n        return jumps;\n    if(steps > 0) {\n        jumps += (steps/d);\n        steps = steps%d;\n    }\n    if(steps == 0)\n        return jumps;\n    if(steps > 0) {\n        jumps += 1;\n        steps = d - steps;\n    }\n    if(steps == 0)\n        return jumps;\n    if(steps > 0) {\n        jumps += (steps/d);\n        steps = steps%d;\n    }\n    if(steps == 0)\n        return jumps;\n    if(steps > 0) {\n        jumps += 1;\n        steps = d - steps;\n    }\n    if(steps == 0)\n        return jumps;\n    if(steps > 0) {\n        jumps += (steps/d);\n        steps = steps%d;\n    }\n    if(steps == 0)\n        return jumps;\n    if(steps > 0) {\n        jumps += 1;\n        steps = d - steps;\n    }\n    if(steps == 0)\n        return jumps;\n    if(steps >",
    "    float jumps = 0;\n    if (steps == 0) {\n        return 0;\n    }\n    if (steps == 1) {\n        return 1;\n    }\n    if (steps == 2) {\n        return 2;\n    }\n    if (steps == 3) {\n        return 3;\n    }\n    if (steps == 4) {\n        return 4;\n    }\n    if (steps == 5) {\n        return 5;\n    }\n    if (steps == 6) {\n        return 6;\n    }\n    if (steps == 7) {\n        return 7;\n    }\n    if (steps == 8) {\n        return 8;\n    }\n    if (steps == 9) {\n        return 9;\n    }\n    if (steps == 10) {\n        return 10;\n    }\n    if (steps == 11) {\n        return 11;\n    }\n    if (steps == 12) {\n        return 12;\n    }\n    if (steps == 13) {\n        return 13;\n    }\n    if (steps == 14) {\n        return 14;\n    }\n    if (steps == 15) {\n        return 15;\n    }\n    if (steps == 16) {\n        return 16;\n    }\n    if (steps == 17) {\n        return 17;\n    }\n    if (steps == 18) {\n        return 18;\n    }\n    if (steps == 19) {\n        return 19;\n    }\n    if (steps == 20) {\n        return 20;\n    }\n    if (steps == 21) {\n        return 21;\n    }\n    if (steps == 22) {\n        return 22;\n    }\n    if (steps == 23) {\n        return 23;\n    }\n    if (steps == 24) {\n        return 24;\n    }\n    if (steps == 25) {\n        return 25;\n    }\n    if (steps == 26) {\n        return 26;\n    }\n    if (steps == 27) {\n        return 27;\n    }\n    if (steps == 28) {\n        return 28;\n    }\n    if (steps == 29) {\n        return",
    "    if(steps == 0) {\n        return 0;\n    }\n    if(steps == 1) {\n        return 1;\n    }\n    if(steps == 2) {\n        return 2;\n    }\n    if(steps == 3) {\n        return 3;\n    }\n    if(steps == 4) {\n        return 4;\n    }\n    if(steps == 5) {\n        return 5;\n    }\n    if(steps == 6) {\n        return 6;\n    }\n    if(steps == 7) {\n        return 7;\n    }\n    if(steps == 8) {\n        return 8;\n    }\n    if(steps == 9) {\n        return 9;\n    }\n    if(steps == 10) {\n        return 10;\n    }\n    if(steps == 11) {\n        return 11;\n    }\n    if(steps == 12) {\n        return 12;\n    }\n    if(steps == 13) {\n        return 13;\n    }\n    if(steps == 14) {\n        return 14;\n    }\n    if(steps == 15) {\n        return 15;\n    }\n    if(steps == 16) {\n        return 16;\n    }\n    if(steps == 17) {\n        return 17;\n    }\n    if(steps == 18) {\n        return 18;\n    }\n    if(steps == 19) {\n        return 19;\n    }\n    if(steps == 20) {\n        return 20;\n    }\n    if(steps == 21) {\n        return 21;\n    }\n    if(steps == 22) {\n        return 22;\n    }\n    if(steps == 23) {\n        return 23;\n    }\n    if(steps == 24) {\n        return 24;\n    }\n    if(steps == 25) {\n        return 25;\n    }\n    if(steps == 26) {\n        return 26;\n    }\n    if(steps == 27) {\n        return 27;\n    }\n    if(steps == 28) {\n        return 28;\n    }\n    if(steps == 29) {\n        return 29;\n    }\n   ",
    "    if (steps == 0) {\n        return 0;\n    }\n    if (steps == 1) {\n        return 1;\n    }\n    if (steps == 2) {\n        return 2;\n    }\n    if (steps == 3) {\n        return 3;\n    }\n    return min_Jumps(steps - 1, d) + min_Jumps(steps - 2, d) + min_Jumps(steps - 3, d);",
    "    if(steps == 0)\n        return 0;\n    if(steps == 1)\n        return 1;\n    if(steps == 2)\n        return 2;\n    if(steps == 3)\n        return 3;\n    if(steps == 4)\n        return 4;\n    if(steps == 5)\n        return 5;\n    if(steps == 6)\n        return 6;\n    if(steps == 7)\n        return 7;\n    if(steps == 8)\n        return 8;\n    if(steps == 9)\n        return 9;\n    if(steps == 10)\n        return 10;\n    if(steps == 11)\n        return 11;\n    if(steps == 12)\n        return 12;\n    if(steps == 13)\n        return 13;\n    if(steps == 14)\n        return 14;\n    if(steps == 15)\n        return 15;\n    if(steps == 16)\n        return 16;\n    if(steps == 17)\n        return 17;\n    if(steps == 18)\n        return 18;\n    if(steps == 19)\n        return 19;\n    if(steps == 20)\n        return 20;\n    if(steps == 21)\n        return 21;\n    if(steps == 22)\n        return 22;\n    if(steps == 23)\n        return 23;\n    if(steps == 24)\n        return 24;\n    if(steps == 25)\n        return 25;\n    if(steps == 26)\n        return 26;\n    if(steps == 27)\n        return 27;\n    if(steps == 28)\n        return 28;\n    if(steps == 29)\n        return 29;\n    if(steps == 30)\n        return 30;\n    if(steps == 31)\n        return 31;\n    if(steps == 32)\n        return 32;\n    if(steps == 33)\n        return 33;\n    if(steps == 34)\n        return 34;\n    if(steps == 35)\n        return 35;\n    if(steps == 36)\n        return 36;\n    if(steps == 37)\n        return 37;\n    if(steps == 38)\n        return 38;\n    if(steps",
    "    if(steps == 0) {\n        return 0;\n    }\n    if(steps == 1) {\n        return 1;\n    }\n    if(steps == 2) {\n        return 2;\n    }\n    if(steps == 3) {\n        return 3;\n    }\n    if(steps == 4) {\n        return 4;\n    }\n    if(steps == 5) {\n        return 5;\n    }\n    if(steps == 6) {\n        return 6;\n    }\n    if(steps == 7) {\n        return 7;\n    }\n    if(steps == 8) {\n        return 8;\n    }\n    if(steps == 9) {\n        return 9;\n    }\n    if(steps == 10) {\n        return 10;\n    }\n    if(steps == 11) {\n        return 11;\n    }\n    if(steps == 12) {\n        return 12;\n    }\n    if(steps == 13) {\n        return 13;\n    }\n    if(steps == 14) {\n        return 14;\n    }\n    if(steps == 15) {\n        return 15;\n    }\n    if(steps == 16) {\n        return 16;\n    }\n    if(steps == 17) {\n        return 17;\n    }\n    if(steps == 18) {\n        return 18;\n    }\n    if(steps == 19) {\n        return 19;\n    }\n    if(steps == 20) {\n        return 20;\n    }\n    if(steps == 21) {\n        return 21;\n    }\n    if(steps == 22) {\n        return 22;\n    }\n    if(steps == 23) {\n        return 23;\n    }\n    if(steps == 24) {\n        return 24;\n    }\n    if(steps == 25) {\n        return 25;\n    }\n    if(steps == 26) {\n        return 26;\n    }\n    if(steps == 27) {\n        return 27;\n    }\n    if(steps == 28) {\n        return 28;\n    }\n    if(steps == 29) {\n        return 29;\n    }\n   ",
    "    if(steps == 0)\n        return 0;\n    if(steps == 1)\n        return 1;\n    if(steps == 2)\n        return 2;\n    if(steps == 3)\n        return 3;\n    if(steps == 4)\n        return 4;\n    if(steps == 5)\n        return 5;\n    if(steps == 6)\n        return 6;\n    if(steps == 7)\n        return 7;\n    if(steps == 8)\n        return 8;\n    if(steps == 9)\n        return 9;\n    if(steps == 10)\n        return 10;\n    if(steps == 11)\n        return 11;\n    if(steps == 12)\n        return 12;\n    if(steps == 13)\n        return 13;\n    if(steps == 14)\n        return 14;\n    if(steps == 15)\n        return 15;\n    if(steps == 16)\n        return 16;\n    if(steps == 17)\n        return 17;\n    if(steps == 18)\n        return 18;\n    if(steps == 19)\n        return 19;\n    if(steps == 20)\n        return 20;\n    if(steps == 21)\n        return 21;\n    if(steps == 22)\n        return 22;\n    if(steps == 23)\n        return 23;\n    if(steps == 24)\n        return 24;\n    if(steps == 25)\n        return 25;\n    if(steps == 26)\n        return 26;\n    if(steps == 27)\n        return 27;\n    if(steps == 28)\n        return 28;\n    if(steps == 29)\n        return 29;\n    if(steps == 30)\n        return 30;\n    if(steps == 31)\n        return 31;\n    if(steps == 32)\n        return 32;\n    if(steps == 33)\n        return 33;\n    if(steps == 34)\n        return 34;\n    if(steps == 35)\n        return 35;\n    if(steps == 36)\n        return 36;\n    if(steps == 37)\n        return 37;\n    if(steps == 38)\n        return 38;\n    if(steps",
    "    if(d == 0)\n        return 0;\n    if(steps == 0)\n        return INT_MAX;\n    if(steps == d)\n        return 1;\n    if(steps > d)\n        return INT_MAX;\n    return std::min(min_Jumps(steps+1, d), min_Jumps(steps+2, d));",
    "    if(steps == 0)\n        return 0;\n    if(steps == 1)\n        return 1;\n    if(steps == 2)\n        return 2;\n    if(steps == 3)\n        return 3;\n    if(steps == 4)\n        return 4;\n    if(steps == 5)\n        return 5;\n    if(steps == 6)\n        return 6;\n    if(steps == 7)\n        return 7;\n    if(steps == 8)\n        return 8;\n    if(steps == 9)\n        return 9;\n    if(steps == 10)\n        return 10;\n    if(steps == 11)\n        return 11;\n    if(steps == 12)\n        return 12;\n    if(steps == 13)\n        return 13;\n    if(steps == 14)\n        return 14;\n    if(steps == 15)\n        return 15;\n    if(steps == 16)\n        return 16;\n    if(steps == 17)\n        return 17;\n    if(steps == 18)\n        return 18;\n    if(steps == 19)\n        return 19;\n    if(steps == 20)\n        return 20;\n    if(steps == 21)\n        return 21;\n    if(steps == 22)\n        return 22;\n    if(steps == 23)\n        return 23;\n    if(steps == 24)\n        return 24;\n    if(steps == 25)\n        return 25;\n    if(steps == 26)\n        return 26;\n    if(steps == 27)\n        return 27;\n    if(steps == 28)\n        return 28;\n    if(steps == 29)\n        return 29;\n    if(steps == 30)\n        return 30;\n    if(steps == 31)\n        return 31;\n    if(steps == 32)\n        return 32;\n    if(steps == 33)\n        return 33;\n    if(steps == 34)\n        return 34;\n    if(steps == 35)\n        return 35;\n    if(steps == 36)\n        return 36;\n    if(steps == 37)\n        return 37;\n    if(steps == 38)\n        return 38;\n    if(steps",
    "    if(steps == 0) {\n        return 0;\n    }\n    if(steps == 1) {\n        return 1;\n    }\n    if(steps == 2) {\n        return 2;\n    }\n    if(steps == 3) {\n        return 3;\n    }\n    if(steps == 4) {\n        return 4;\n    }\n    if(steps == 5) {\n        return 5;\n    }\n    if(steps == 6) {\n        return 6;\n    }\n    if(steps == 7) {\n        return 7;\n    }\n    if(steps == 8) {\n        return 8;\n    }\n    if(steps == 9) {\n        return 9;\n    }\n    if(steps == 10) {\n        return 10;\n    }\n    if(steps == 11) {\n        return 11;\n    }\n    if(steps == 12) {\n        return 12;\n    }\n    if(steps == 13) {\n        return 13;\n    }\n    if(steps == 14) {\n        return 14;\n    }\n    if(steps == 15) {\n        return 15;\n    }\n    if(steps == 16) {\n        return 16;\n    }\n    if(steps == 17) {\n        return 17;\n    }\n    if(steps == 18) {\n        return 18;\n    }\n    if(steps == 19) {\n        return 19;\n    }\n    if(steps == 20) {\n        return 20;\n    }\n    if(steps == 21) {\n        return 21;\n    }\n    if(steps == 22) {\n        return 22;\n    }\n    if(steps == 23) {\n        return 23;\n    }\n    if(steps == 24) {\n        return 24;\n    }\n    if(steps == 25) {\n        return 25;\n    }\n    if(steps == 26) {\n        return 26;\n    }\n    if(steps == 27) {\n        return 27;\n    }\n    if(steps == 28) {\n        return 28;\n    }\n    if(steps == 29) {\n        return 29;\n    }\n   ",
    "    if (d == 0) {\n        return 0;\n    }\n    if (steps == 0) {\n        return INT_MAX;\n    }\n    if (steps == d) {\n        return 1;\n    }\n    float min_jumps = INT_MAX;\n    for (long i = 1; i <= steps; i++) {\n        float jumps = min_Jumps(steps - i, d - i);\n        if (jumps != INT_MAX && jumps + 1 < min_jumps) {\n            min_jumps = jumps + 1;\n        }\n    }\n    return min_jumps;",
    "    if (d == 0)\n        return 0;\n    if (steps == 0)\n        return INT_MAX;\n    if (steps == d)\n        return 1;\n    return min(min_Jumps(steps - 1, d - 1), min_Jumps(steps - 1, d + 1)) + 1;",
    "\tif (steps == 0) {\n\t\treturn 0;\n\t}\n\tif (steps == 1) {\n\t\treturn 1;\n\t}\n\tif (steps == 2) {\n\t\treturn 2;\n\t}\n\tif (steps == 3) {\n\t\treturn 3;\n\t}\n\tif (steps == 4) {\n\t\treturn 4;\n\t}\n\tif (steps == 5) {\n\t\treturn 5;\n\t}\n\tif (steps == 6) {\n\t\treturn 6;\n\t}\n\tif (steps == 7) {\n\t\treturn 7;\n\t}\n\tif (steps == 8) {\n\t\treturn 8;\n\t}\n\tif (steps == 9) {\n\t\treturn 9;\n\t}\n\tif (steps == 10) {\n\t\treturn 10;\n\t}\n\tif (steps == 11) {\n\t\treturn 11;\n\t}\n\tif (steps == 12) {\n\t\treturn 12;\n\t}\n\tif (steps == 13) {\n\t\treturn 13;\n\t}\n\tif (steps == 14) {\n\t\treturn 14;\n\t}\n\tif (steps == 15) {\n\t\treturn 15;\n\t}\n\tif (steps == 16) {\n\t\treturn 16;\n\t}\n\tif (steps == 17) {\n\t\treturn 17;\n\t}\n\tif (steps == 18) {\n\t\treturn 18;\n\t}\n\tif (steps == 19) {\n\t\treturn 19;\n\t}\n\tif (steps == 20) {\n\t\treturn 20;\n\t}\n\tif (steps == 21) {\n\t\treturn 21;\n\t}\n\tif (steps == 22) {\n\t\treturn 22;\n\t}\n\tif (steps == 23) {\n\t\treturn 23;\n\t}\n\tif (steps == 24) {\n\t\treturn 24;\n\t}\n\tif (steps == 25) {\n\t\treturn 25;\n\t}\n\tif (steps == 26) {\n\t\treturn 26;\n\t}\n\tif (steps == 27) {\n\t\treturn 27;\n\t}\n\tif (steps == 28)",
    "    float jumps = 0;\n    if (steps == 0) {\n        return 0;\n    }\n    if (steps == 1) {\n        return 1;\n    }\n    if (steps == 2) {\n        return 2;\n    }\n    if (steps == 3) {\n        return 3;\n    }\n    if (steps == 4) {\n        return 4;\n    }\n    if (steps == 5) {\n        return 5;\n    }\n    if (steps == 6) {\n        return 6;\n    }\n    if (steps == 7) {\n        return 7;\n    }\n    if (steps == 8) {\n        return 8;\n    }\n    if (steps == 9) {\n        return 9;\n    }\n    if (steps == 10) {\n        return 10;\n    }\n    if (steps == 11) {\n        return 11;\n    }\n    if (steps == 12) {\n        return 12;\n    }\n    if (steps == 13) {\n        return 13;\n    }\n    if (steps == 14) {\n        return 14;\n    }\n    if (steps == 15) {\n        return 15;\n    }\n    if (steps == 16) {\n        return 16;\n    }\n    if (steps == 17) {\n        return 17;\n    }\n    if (steps == 18) {\n        return 18;\n    }\n    if (steps == 19) {\n        return 19;\n    }\n    if (steps == 20) {\n        return 20;\n    }\n    if (steps == 21) {\n        return 21;\n    }\n    if (steps == 22) {\n        return 22;\n    }\n    if (steps == 23) {\n        return 23;\n    }\n    if (steps == 24) {\n        return 24;\n    }\n    if (steps == 25) {\n        return 25;\n    }\n    if (steps == 26) {\n        return 26;\n    }\n    if (steps == 27) {\n        return 27;\n    }\n    if (steps == 28) {\n        return 28;\n    }\n    if (steps == 29) {\n        return",
    "    if(steps == 0) {\n        return 0;\n    }\n    if(d == 0) {\n        return INT_MAX;\n    }\n    if(steps == d) {\n        return 1;\n    }\n    if(steps < d) {\n        return INT_MAX;\n    }\n    return min(1 + min_Jumps(steps - d, d - 1), 1 + min_Jumps(steps - d, d + 1));",
    "    if(steps == 0)\n        return 0;\n    if(d == 0)\n        return INT_MAX;\n    if(steps == d)\n        return 1;\n    if(steps < d)\n        return INT_MAX;\n    return 1 + std::min(min_Jumps(steps-d, d), min_Jumps(steps-1, d));",
    "\tif(steps == 0)\n\t\treturn 0;\n\tif(steps == 1)\n\t\treturn 1;\n\tif(steps == 2)\n\t\treturn 2;\n\tif(steps == 3)\n\t\treturn 3;\n\tif(steps == 4)\n\t\treturn 4;\n\tif(steps == 5)\n\t\treturn 5;\n\tif(steps == 6)\n\t\treturn 6;\n\tif(steps == 7)\n\t\treturn 7;\n\tif(steps == 8)\n\t\treturn 8;\n\tif(steps == 9)\n\t\treturn 9;\n\tif(steps == 10)\n\t\treturn 10;\n\tif(steps == 11)\n\t\treturn 11;\n\tif(steps == 12)\n\t\treturn 12;\n\tif(steps == 13)\n\t\treturn 13;\n\tif(steps == 14)\n\t\treturn 14;\n\tif(steps == 15)\n\t\treturn 15;\n\tif(steps == 16)\n\t\treturn 16;\n\tif(steps == 17)\n\t\treturn 17;\n\tif(steps == 18)\n\t\treturn 18;\n\tif(steps == 19)\n\t\treturn 19;\n\tif(steps == 20)\n\t\treturn 20;\n\tif(steps == 21)\n\t\treturn 21;\n\tif(steps == 22)\n\t\treturn 22;\n\tif(steps == 23)\n\t\treturn 23;\n\tif(steps == 24)\n\t\treturn 24;\n\tif(steps == 25)\n\t\treturn 25;\n\tif(steps == 26)\n\t\treturn 26;\n\tif(steps == 27)\n\t\treturn 27;\n\tif(steps == 28)\n\t\treturn 28;\n\tif(steps == 29)\n\t\treturn 29;\n\tif(steps == 30)\n\t\treturn 30;\n\tif(steps == 31)\n\t\treturn 31;\n\tif(steps == 32)\n\t\treturn 32;\n\tif(steps == 33)\n\t\treturn 33;\n\tif(steps == 34)\n\t\treturn 34;\n\tif(steps == 35)\n\t\treturn 35;\n\tif(steps == 36)",
    "    if(steps == 0)\n        return 0;\n    if(steps == 1)\n        return d;\n    if(steps == 2)\n        return d/2;\n    if(steps == 3)\n        return d/4;\n    return d/8;",
    "    if (d == 0)\n        return 0;\n    if (steps == 0)\n        return INT_MAX;\n    if (steps == d)\n        return 1;\n    float min_jumps = INT_MAX;\n    for (long i = 1; i <= steps; i++) {\n        float jumps = min_Jumps(steps - i, d - i);\n        if (jumps != INT_MAX && jumps + 1 < min_jumps)\n            min_jumps = jumps + 1;\n    }\n    return min_jumps;",
    "    if(steps == 0)\n        return 0;\n    if(steps == 1)\n        return 1;\n    if(steps == 2)\n        return 2;\n    if(steps == 3)\n        return 3;\n    if(steps == 4)\n        return 4;\n    if(steps == 5)\n        return 5;\n    if(steps == 6)\n        return 6;\n    if(steps == 7)\n        return 7;\n    if(steps == 8)\n        return 8;\n    if(steps == 9)\n        return 9;\n    if(steps == 10)\n        return 10;\n    if(steps == 11)\n        return 11;\n    if(steps == 12)\n        return 12;\n    if(steps == 13)\n        return 13;\n    if(steps == 14)\n        return 14;\n    if(steps == 15)\n        return 15;\n    if(steps == 16)\n        return 16;\n    if(steps == 17)\n        return 17;\n    if(steps == 18)\n        return 18;\n    if(steps == 19)\n        return 19;\n    if(steps == 20)\n        return 20;\n    if(steps == 21)\n        return 21;\n    if(steps == 22)\n        return 22;\n    if(steps == 23)\n        return 23;\n    if(steps == 24)\n        return 24;\n    if(steps == 25)\n        return 25;\n    if(steps == 26)\n        return 26;\n    if(steps == 27)\n        return 27;\n    if(steps == 28)\n        return 28;\n    if(steps == 29)\n        return 29;\n    if(steps == 30)\n        return 30;\n    if(steps == 31)\n        return 31;\n    if(steps == 32)\n        return 32;\n    if(steps == 33)\n        return 33;\n    if(steps == 34)\n        return 34;\n    if(steps == 35)\n        return 35;\n    if(steps == 36)\n        return 36;\n    if(steps == 37)\n        return 37;\n    if(steps == 38)\n        return 38;\n    if(steps",
    "    // Write your code here\n    float jumps = 0;\n    if(steps == 0) {\n        return jumps;\n    }\n    if(steps == 1) {\n        return jumps + 1;\n    }\n    if(steps == 2) {\n        return jumps + 2;\n    }\n    if(steps == 3) {\n        return jumps + 3;\n    }\n    if(steps == 4) {\n        return jumps + 4;\n    }\n    if(steps == 5) {\n        return jumps + 5;\n    }\n    if(steps == 6) {\n        return jumps + 6;\n    }\n    if(steps == 7) {\n        return jumps + 7;\n    }\n    if(steps == 8) {\n        return jumps + 8;\n    }\n    if(steps == 9) {\n        return jumps + 9;\n    }\n    if(steps == 10) {\n        return jumps + 10;\n    }\n    if(steps == 11) {\n        return jumps + 11;\n    }\n    if(steps == 12) {\n        return jumps + 12;\n    }\n    if(steps == 13) {\n        return jumps + 13;\n    }\n    if(steps == 14) {\n        return jumps + 14;\n    }\n    if(steps == 15) {\n        return jumps + 15;\n    }\n    if(steps == 16) {\n        return jumps + 16;\n    }\n    if(steps == 17) {\n        return jumps + 17;\n    }\n    if(steps == 18) {\n        return jumps + 18;\n    }\n    if(steps == 19) {\n        return jumps + 19;\n    }\n    if(steps == 20) {\n        return jumps + 20;\n    }\n    if(steps == 21) {\n        return jumps + 21;\n    }\n    if(steps == 22) {\n        return jumps + 22;\n    }\n    if(steps == 23) {\n        return jumps + 23;\n    }\n    if(steps == 24) {\n        return jumps + 24;\n    }\n    if(steps == 25) {\n        return jumps + 25;\n    }\n    if(steps ==",
    "    if(d == 0) {\n        return 0;\n    }\n    if(steps == 0) {\n        return INT_MAX;\n    }\n    if(steps >= d) {\n        return 1;\n    }\n    float min = INT_MAX;\n    for(int i = 1; i <= steps; i++) {\n        float jumps = min_Jumps(steps - i, d - i);\n        if(jumps != INT_MAX && jumps + 1 < min) {\n            min = jumps + 1;\n        }\n    }\n    return min;",
    "    float jumps = 0;\n    if(steps <= d) {\n        jumps = 1;\n    } else {\n        jumps = (float)steps/(float)d;\n        jumps = ceil(jumps);\n    }\n    return jumps;",
    "    if(steps == 0)\n        return 0;\n    if(steps == 1)\n        return 1;\n    if(steps == 2)\n        return 2;\n    if(steps == 3)\n        return 3;\n    if(steps == 4)\n        return 4;\n    if(steps == 5)\n        return 5;\n    if(steps == 6)\n        return 6;\n    if(steps == 7)\n        return 7;\n    if(steps == 8)\n        return 8;\n    if(steps == 9)\n        return 9;\n    if(steps == 10)\n        return 10;\n    if(steps == 11)\n        return 11;\n    if(steps == 12)\n        return 12;\n    if(steps == 13)\n        return 13;\n    if(steps == 14)\n        return 14;\n    if(steps == 15)\n        return 15;\n    if(steps == 16)\n        return 16;\n    if(steps == 17)\n        return 17;\n    if(steps == 18)\n        return 18;\n    if(steps == 19)\n        return 19;\n    if(steps == 20)\n        return 20;\n    if(steps == 21)\n        return 21;\n    if(steps == 22)\n        return 22;\n    if(steps == 23)\n        return 23;\n    if(steps == 24)\n        return 24;\n    if(steps == 25)\n        return 25;\n    if(steps == 26)\n        return 26;\n    if(steps == 27)\n        return 27;\n    if(steps == 28)\n        return 28;\n    if(steps == 29)\n        return 29;\n    if(steps == 30)\n        return 30;\n    if(steps == 31)\n        return 31;\n    if(steps == 32)\n        return 32;\n    if(steps == 33)\n        return 33;\n    if(steps == 34)\n        return 34;\n    if(steps == 35)\n        return 35;\n    if(steps == 36)\n        return 36;\n    if(steps == 37)\n        return 37;\n    if(steps == 38)\n        return 38;\n    if(steps",
    "    if(steps == 0)\n        return 0;\n    if(steps == 1)\n        return 1;\n    if(steps == 2)\n        return 2;\n    if(steps == 3)\n        return 3;\n    if(steps == 4)\n        return 4;\n    if(steps == 5)\n        return 5;\n    if(steps == 6)\n        return 6;\n    if(steps == 7)\n        return 7;\n    if(steps == 8)\n        return 8;\n    if(steps == 9)\n        return 9;\n    if(steps == 10)\n        return 10;\n    if(steps == 11)\n        return 11;\n    if(steps == 12)\n        return 12;\n    if(steps == 13)\n        return 13;\n    if(steps == 14)\n        return 14;\n    if(steps == 15)\n        return 15;\n    if(steps == 16)\n        return 16;\n    if(steps == 17)\n        return 17;\n    if(steps == 18)\n        return 18;\n    if(steps == 19)\n        return 19;\n    if(steps == 20)\n        return 20;\n    if(steps == 21)\n        return 21;\n    if(steps == 22)\n        return 22;\n    if(steps == 23)\n        return 23;\n    if(steps == 24)\n        return 24;\n    if(steps == 25)\n        return 25;\n    if(steps == 26)\n        return 26;\n    if(steps == 27)\n        return 27;\n    if(steps == 28)\n        return 28;\n    if(steps == 29)\n        return 29;\n    if(steps == 30)\n        return 30;\n    if(steps == 31)\n        return 31;\n    if(steps == 32)\n        return 32;\n    if(steps == 33)\n        return 33;\n    if(steps == 34)\n        return 34;\n    if(steps == 35)\n        return 35;\n    if(steps == 36)\n        return 36;\n    if(steps == 37)\n        return 37;\n    if(steps == 38)\n        return 38;\n    if(steps",
    "    float jumps = 0;\n    if (steps <= d) {\n        jumps = 1;\n    } else if (steps > d) {\n        jumps = ceil((float)steps / (float)d);\n    }\n    return jumps;",
    "    // Write your code here\n    float jumps = 0;\n    if(steps == 0)\n        return jumps;\n    if(steps <= d)\n        return 1;\n    jumps = (float)steps/(float)d;\n    return jumps;",
    "\tfloat jumps = 0;\n\tif(steps == 0) {\n\t\treturn jumps;\n\t}\n\tif(steps > d) {\n\t\tjumps = jumps + 1;\n\t\tjumps = jumps + min_Jumps(steps - d, d);\n\t}\n\telse {\n\t\tjumps = jumps + 1;\n\t}\n\treturn jumps;"
  ]
}
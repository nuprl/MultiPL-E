{
  "name": "mbpp_68_is_Monotonic",
  "language": "cpp",
  "prompt": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to check whether the given array is monotonic or not.\nbool is_Monotonic(std::vector<long> A) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_68_is_Monotonic.py",
  "prompt_terminology": "verbatim",
  "tests": "}\nint main() {\n    auto candidate = is_Monotonic;\n    assert(candidate((std::vector<long>({(long)6, (long)5, (long)4, (long)4}))) == (true));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)2, (long)3}))) == (true));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)2}))) == (false));\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    bool increasing = true;\n    bool decreasing = true;\n    for (int i = 0; i < A.size() - 1; i++) {\n        if (A[i] < A[i + 1]) {\n            decreasing = false;\n        }\n        if (A[i] > A[i + 1]) {\n            increasing = false;\n        }\n    }\n    return increasing || decreasing;",
    "    int n = A.size();\n    if(n == 1)\n        return true;\n    int i = 0;\n    while(i < n-1) {\n        if(A[i] == A[i+1])\n            i++;\n        else\n            break;\n    }\n    if(i == n-1)\n        return true;\n    if(A[i] < A[i+1]) {\n        while(i < n-1) {\n            if(A[i] <= A[i+1])\n                i++;\n            else\n                return false;\n        }\n    } else {\n        while(i < n-1) {\n            if(A[i] >= A[i+1])\n                i++;\n            else\n                return false;\n        }\n    }\n    return true;",
    "    int n = A.size();\n    if(n == 1)\n        return true;\n    bool inc = false;\n    bool dec = false;\n    for(int i = 0; i < n-1; i++) {\n        if(A[i] < A[i+1]) {\n            inc = true;\n        }\n        if(A[i] > A[i+1]) {\n            dec = true;\n        }\n    }\n    return (inc && !dec) || (!inc && dec);",
    "    int n = A.size();\n    if(n == 1) return true;\n    bool increasing = true;\n    bool decreasing = true;\n    for(int i = 1; i < n; i++) {\n        if(A[i] < A[i-1]) increasing = false;\n        if(A[i] > A[i-1]) decreasing = false;\n    }\n    return increasing || decreasing;",
    "    int n = A.size();\n    if (n == 1) {\n        return true;\n    }\n    int i = 0;\n    int j = n - 1;\n    while (i < n - 1 && A[i] <= A[i + 1]) {\n        i++;\n    }\n    while (j > 0 && A[j] >= A[j - 1]) {\n        j--;\n    }\n    if (i == n - 1 || j == 0) {\n        return true;\n    }\n    return false;",
    "    int n = A.size();\n    if(n == 1)\n        return true;\n    int i = 0;\n    while(i < n-1 && A[i] == A[i+1])\n        i++;\n    if(i == n-1)\n        return true;\n    bool increasing = A[i] < A[i+1];\n    while(i < n-1) {\n        if(increasing && A[i] > A[i+1])\n            return false;\n        if(!increasing && A[i] < A[i+1])\n            return false;\n        i++;\n    }\n    return true;",
    "    int n = A.size();\n    int i = 0;\n    while(i < n-1 && A[i] <= A[i+1]) {\n        i++;\n    }\n    if(i == n-1) {\n        return true;\n    }\n    i = 0;\n    while(i < n-1 && A[i] >= A[i+1]) {\n        i++;\n    }\n    if(i == n-1) {\n        return true;\n    }\n    return false;",
    "    // Write your code here\n    int n = A.size();\n    int flag = 0;\n    for(int i=0;i<n-1;i++)\n    {\n        if(A[i]<A[i+1])\n        {\n            flag = 1;\n            break;\n        }\n        else if(A[i]>A[i+1])\n        {\n            flag = 2;\n            break;\n        }\n    }\n    if(flag == 0)\n        return true;\n    else if(flag == 1)\n    {\n        for(int i=0;i<n-1;i++)\n        {\n            if(A[i]>A[i+1])\n                return false;\n        }\n        return true;\n    }\n    else\n    {\n        for(int i=0;i<n-1;i++)\n        {\n            if(A[i]<A[i+1])\n                return false;\n        }\n        return true;\n    }",
    "    int n = A.size();\n    if(n == 1) {\n        return true;\n    }\n    bool is_increasing = true;\n    bool is_decreasing = true;\n    for(int i = 1; i < n; i++) {\n        if(A[i] < A[i-1]) {\n            is_increasing = false;\n        }\n        if(A[i] > A[i-1]) {\n            is_decreasing = false;\n        }\n    }\n    return is_increasing || is_decreasing;",
    "    // Write your code here\n    int n = A.size();\n    if(n == 1)\n        return true;\n    int i = 0;\n    int j = n-1;\n    while(i < n-1 && A[i] <= A[i+1])\n        i++;\n    while(j > 0 && A[j] >= A[j-1])\n        j--;\n    if(i == n-1 || j == 0)\n        return true;\n    return false;",
    "    // Write your code here\n    int flag=0;\n    for(int i=0;i<A.size()-1;i++){\n        if(A[i]<A[i+1]){\n            flag=1;\n            break;\n        }\n    }\n    if(flag==1){\n        for(int i=0;i<A.size()-1;i++){\n            if(A[i]>A[i+1]){\n                return false;\n            }\n        }\n        return true;\n    }\n    else{\n        for(int i=0;i<A.size()-1;i++){\n            if(A[i]<A[i+1]){\n                return false;\n            }\n        }\n        return true;\n    }",
    "    int n = A.size();\n    if (n == 1) {\n        return true;\n    }\n    bool is_increasing = true;\n    bool is_decreasing = true;\n    for (int i = 0; i < n - 1; i++) {\n        if (A[i] > A[i + 1]) {\n            is_increasing = false;\n        }\n        if (A[i] < A[i + 1]) {\n            is_decreasing = false;\n        }\n    }\n    return is_increasing || is_decreasing;",
    "    int n = A.size();\n    int i = 0;\n    while(i < n-1) {\n        if(A[i] <= A[i+1]) {\n            i++;\n        } else {\n            break;\n        }\n    }\n    if(i == n-1) {\n        return true;\n    }\n    i = 0;\n    while(i < n-1) {\n        if(A[i] >= A[i+1]) {\n            i++;\n        } else {\n            break;\n        }\n    }\n    if(i == n-1) {\n        return true;\n    }\n    return false;",
    "    int n = A.size();\n    if (n == 1)\n        return true;\n    int i = 0;\n    while (i < n - 1) {\n        if (A[i] > A[i + 1])\n            break;\n        i++;\n    }\n    if (i == n - 1)\n        return true;\n    i = 0;\n    while (i < n - 1) {\n        if (A[i] < A[i + 1])\n            break;\n        i++;\n    }\n    if (i == n - 1)\n        return true;\n    return false;",
    "    int n = A.size();\n    int i = 0;\n    while(i < n-1) {\n        if(A[i] <= A[i+1]) {\n            i++;\n        }\n        else {\n            break;\n        }\n    }\n    if(i == n-1) {\n        return true;\n    }\n    i = 0;\n    while(i < n-1) {\n        if(A[i] >= A[i+1]) {\n            i++;\n        }\n        else {\n            break;\n        }\n    }\n    if(i == n-1) {\n        return true;\n    }\n    return false;",
    "    int n = A.size();\n    if (n == 1) {\n        return true;\n    }\n    int i = 0;\n    int j = n - 1;\n    while (i < n - 1 && A[i] <= A[i + 1]) {\n        i++;\n    }\n    while (j > 0 && A[j] >= A[j - 1]) {\n        j--;\n    }\n    if (i == n - 1 || j == 0) {\n        return true;\n    }\n    return false;",
    "    int n = A.size();\n    int i;\n    for(i=0;i<n-1;i++){\n        if(A[i]>A[i+1]){\n            break;\n        }\n    }\n    if(i==n-1){\n        return true;\n    }\n    for(i=0;i<n-1;i++){\n        if(A[i]<A[i+1]){\n            break;\n        }\n    }\n    if(i==n-1){\n        return true;\n    }\n    return false;",
    "    // Write your code here\n    int n = A.size();\n    int flag = 0;\n    for(int i = 0; i < n-1; i++){\n        if(A[i] > A[i+1]){\n            flag = 1;\n            break;\n        }\n    }\n    if(flag == 0)\n        return true;\n    flag = 0;\n    for(int i = 0; i < n-1; i++){\n        if(A[i] < A[i+1]){\n            flag = 1;\n            break;\n        }\n    }\n    if(flag == 0)\n        return true;\n    return false;",
    "    int n = A.size();\n    if (n == 1)\n        return true;\n    bool increasing = true;\n    bool decreasing = true;\n    for (int i = 0; i < n - 1; i++) {\n        if (A[i] > A[i + 1])\n            increasing = false;\n        if (A[i] < A[i + 1])\n            decreasing = false;\n    }\n    return increasing || decreasing;",
    "    int flag = 0;\n    int i = 0;\n    int j = A.size() - 1;\n    while(i < j) {\n        if(A[i] > A[i+1]) {\n            flag = 1;\n            break;\n        }\n        i++;\n    }\n    if(flag == 1) {\n        while(j > i) {\n            if(A[j] < A[j-1]) {\n                return false;\n            }\n            j--;\n        }\n    }\n    else {\n        while(j > i) {\n            if(A[j] > A[j-1]) {\n                return false;\n            }\n            j--;\n        }\n    }\n    return true;"
  ]
}
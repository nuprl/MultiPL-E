{
  "name": "mbpp_266_lateralsurface_cube",
  "language": "cpp",
  "prompt": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the lateral surface area of a cube given its side length.\nlong lateralsurface_cube(long l) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_266_lateralsurface_cube.py",
  "prompt_terminology": "verbatim",
  "tests": "}\nint main() {\n    auto candidate = lateralsurface_cube;\n    assert(candidate((5)) == (100));\n    assert(candidate((9)) == (324));\n    assert(candidate((10)) == (400));\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "  return 4*l*l;",
    "  return 4*l*l;",
    "  return 4*l*l;",
    "  return 4*l*l;",
    "    return 4*l*l;",
    "  return 4*l*l;",
    "    return 4*l*l;",
    "  return 4*l*l;",
    "  return 4*l*l;",
    "  return 4*l*l;",
    "  return 4*l*l;",
    "  return 4*l*l;",
    "  return 4*l*l;",
    "  return 4*l*l;",
    "  return 4*l*l;",
    "    return 4*l*l;",
    "  return 4*l*l;",
    "  return 4*l*l;",
    "  return 4*l*l;",
    "  return 4*l*l;",
    "  return 4*l*l;",
    "  return 4*l*l;",
    "    return 4*l*l;",
    "  return 4*l*l;",
    "  return 4*l*l;",
    "  return 4*l*l;",
    "  return 4*l*l;",
    "    return 4*l*l;",
    "    return 4*l*l;",
    "  return 4*l*l;",
    "  return 4*l*l;",
    "  return 4*l*l;",
    "  return 4*l*l;",
    "  return 4*l*l;",
    "  return 4*l*l;",
    "  return 4*l*l;",
    "  return 4*l*l;",
    "  return 4*l*l;",
    "  return 4*l*l;",
    "  return 4*l*l;",
    "  return 4*l*l;",
    "  return 4*l*l;",
    "  return 4*l*l;",
    "  return 4*l*l;",
    "  return 4*l*l;",
    "    return 4*l*l;",
    "  return 4*l*l;",
    "  return 4*l*l;",
    "  return 4*l*l;",
    "    return 4*l*l;",
    "  return 4*l*l;",
    "  return 4*l*l;",
    "  return 4*l*l;",
    "  return 4*l*l;",
    "  return 4*l*l;",
    "    return 4*l*l;",
    "    return 4*l*l;",
    "  return 4*l*l;",
    "  return 4*l*l;",
    "  return 4*l*l;",
    "  return 4*l*l;",
    "  return 4*l*l;",
    "  return 4*l*l;",
    "  return 4*l*l;",
    "  return 4*l*l;",
    "    return 4*l*l;",
    "  return 4*l*l;",
    "    return 4*l*l;",
    "  return 4*l*l;",
    "  return 4*l*l;",
    "  return 4*l*l;",
    "  return 4*l*l;",
    "  return 4*l*l;",
    "  return 4*l*l;",
    "  return 4*l*l;",
    "    return 4*l*l;",
    "  return 4*l*l;",
    "    return 4*l*l;",
    "    return 4*l*l;",
    "  return 4*l*l;",
    "  return 4*l*l;",
    "  return 4*l*l;",
    "  return 4*l*l;",
    "  return 4*l*l;",
    "    return 4*l*l;",
    "  return 4*l*l;",
    "  return 4*l*l;",
    "    return 4 * l * l;",
    "  return 4*l*l;",
    "  return 4*l*l;",
    "    return 4*l*l;",
    "  return 4*l*l;",
    "  return 4*l*l;",
    "  return 4*l*l;",
    "  return 4*l*l;",
    "  return 4*l*l;",
    "  return 4*l*l;",
    "  return 4*l*l;",
    "  return 4*l*l;",
    "  return 4*l*l;",
    "  return 4*l*l;",
    "  return 4*l*l;",
    "  return 4*l*l;",
    "    return 4*l*l;",
    "  return 4*l*l;",
    "  return 4*l*l;",
    "  return 4*l*l;",
    "  return 4*l*l;",
    "  return 4*l*l;",
    "  return 4*l*l;",
    "    return 4*l*l;",
    "  return 4*l*l;",
    "  return 4*l*l;",
    "  return 4*l*l;",
    "    return 4*l*l;",
    "  return 4*l*l;",
    "  return 4*l*l;",
    "  return 4*l*l;",
    "  return 4*l*l;",
    "  return 4*l*l;",
    "  return 4*l*l;",
    "  return 4*l*l;",
    "    return 4*l*l;",
    "  return 4*l*l;",
    "  return 4*l*l;",
    "    return 4*l*l;",
    "  return 4*l*l;",
    "  return 4*l*l;",
    "  return 4*l*l;",
    "  return 4*l*l;",
    "    return 4*l*l;",
    "  return 4*l*l;",
    "    return 4*l*l;",
    "  return 4*l*l;",
    "    return 4*l*l;",
    "    return 4*l*l;",
    "  return 4*l*l;",
    "  return 4*l*l;",
    "  return 4*l*l;",
    "  return 4*l*l;",
    "  return 4*l*l;",
    "  return 4*l*l;",
    "    return 4*l*l;",
    "  return 4*l*l;",
    "    return 4*l*l;",
    "  return 4*l*l;",
    "  return 4*l*l;",
    "  return 4*l*l;",
    "  return 4*l*l;",
    "  return 4*l*l;",
    "  return 4*l*l;",
    "  return 4*l*l;",
    "  return 4*l*l;",
    "  return 4*l*l;",
    "    return 4*l*l;",
    "  return 4*l*l;",
    "  return 4*l*l;",
    "  return 4*l*l;",
    "  return 4*l*l;",
    "  return 4*l*l;",
    "  return 4*l*l;",
    "  return 4*l*l;",
    "    return 4*l*l;",
    "  return 4*l*l;",
    "  return 4*l*l;",
    "  return 4*l*l;",
    "  return 4*l*l;",
    "  return 4*l*l;",
    "  return 4*l*l;",
    "  return 4*l*l;",
    "  return 4*l*l;",
    "  return 4*l*l;",
    "  return 4*l*l;",
    "  return 4*l*l;",
    "  return 4*l*l;",
    "  return 4*l*l;",
    "  return 4*l*l;",
    "  return 4*l*l;",
    "  return 4*l*l;",
    "  return 4*l*l;",
    "  return 4*l*l;",
    "  return 4*l*l;",
    "  return 4*l*l;",
    "  return 4*l*l;",
    "  return 4*l*l;",
    "    return 4*l*l;",
    "    return 4*l*l;",
    "  return 4*l*l;",
    "  return 4*l*l;",
    "  return 4*l*l;",
    "  return 4*l*l;",
    "  return 4*l*l;",
    "  return 4*l*l;",
    "  return 4*l*l;",
    "  return 4*l*l;",
    "    return 4*l*l;",
    "  return 4*l*l;",
    "  return 4*l*l;",
    "  return 4*l*l;",
    "    return 4*l*l;"
  ]
}
{
  "name": "mbpp_414_overlapping",
  "language": "cpp",
  "prompt": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function to check whether any value in a sequence exists in a sequence or not.\nbool overlapping(std::vector<long> list1, std::vector<long> list2) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_414_overlapping.py",
  "prompt_terminology": "verbatim",
  "tests": "}\nint main() {\n    auto candidate = overlapping;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5})), (std::vector<long>({(long)6, (long)7, (long)8, (long)9}))) == (false));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3})), (std::vector<long>({(long)4, (long)5, (long)6}))) == (false));\n    assert(candidate((std::vector<long>({(long)1, (long)4, (long)5})), (std::vector<long>({(long)1, (long)4, (long)5}))) == (true));\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    // Write your code here\n    std::vector<long>::iterator it;\n    for(it = list1.begin(); it != list1.end(); it++) {\n        if(std::find(list2.begin(), list2.end(), *it) != list2.end()) {\n            return true;\n        }\n    }\n    return false;",
    "    // write your code here\n    int i,j;\n    for(i=0;i<list1.size();i++)\n    {\n        for(j=0;j<list2.size();j++)\n        {\n            if(list1[i]==list2[j])\n            {\n                return true;\n            }\n        }\n    }\n    return false;",
    "    for(int i=0; i<list1.size(); i++) {\n        for(int j=0; j<list2.size(); j++) {\n            if(list1[i] == list2[j]) {\n                return true;\n            }\n        }\n    }\n    return false;",
    "    for (int i = 0; i < list1.size(); i++) {\n        for (int j = 0; j < list2.size(); j++) {\n            if (list1[i] == list2[j]) {\n                return true;\n            }\n        }\n    }\n    return false;",
    "    for(long i=0;i<list1.size();i++) {\n        for(long j=0;j<list2.size();j++) {\n            if(list1[i] == list2[j]) {\n                return true;\n            }\n        }\n    }\n    return false;",
    "\t// Write your code here\n\tfor(int i=0;i<list1.size();i++)\n\t{\n\t\tfor(int j=0;j<list2.size();j++)\n\t\t{\n\t\t\tif(list1[i]==list2[j])\n\t\t\t{\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t}\n\treturn false;",
    "    for (long i = 0; i < list1.size(); i++) {\n        for (long j = 0; j < list2.size(); j++) {\n            if (list1[i] == list2[j]) {\n                return true;\n            }\n        }\n    }\n    return false;",
    "    for(int i=0;i<list1.size();i++)\n    {\n        for(int j=0;j<list2.size();j++)\n        {\n            if(list1[i]==list2[j])\n            {\n                return true;\n            }\n        }\n    }\n    return false;",
    "    std::sort(list1.begin(), list1.end());\n    std::sort(list2.begin(), list2.end());\n    std::vector<long>::iterator it1 = list1.begin();\n    std::vector<long>::iterator it2 = list2.begin();\n    while (it1 != list1.end() && it2 != list2.end()) {\n        if (*it1 == *it2) return true;\n        else if (*it1 < *it2) it1++;\n        else it2++;\n    }\n    return false;",
    "    for(auto i : list1) {\n        for(auto j : list2) {\n            if(i == j) {\n                return true;\n            }\n        }\n    }\n    return false;",
    "    // Write your code here\n    std::unordered_set<long> s;\n    for(auto i:list1)\n        s.insert(i);\n    for(auto i:list2)\n        if(s.find(i)!=s.end())\n            return true;\n    return false;",
    "    for (int i = 0; i < list1.size(); i++) {\n        for (int j = 0; j < list2.size(); j++) {\n            if (list1[i] == list2[j]) {\n                return true;\n            }\n        }\n    }\n    return false;",
    "    for (int i = 0; i < list1.size(); i++) {\n        for (int j = 0; j < list2.size(); j++) {\n            if (list1[i] == list2[j]) {\n                return true;\n            }\n        }\n    }\n    return false;",
    "    std::sort(list1.begin(), list1.end());\n    std::sort(list2.begin(), list2.end());\n    for (auto i : list1) {\n        if (std::binary_search(list2.begin(), list2.end(), i)) {\n            return true;\n        }\n    }\n    return false;",
    "    for (auto i : list1) {\n        for (auto j : list2) {\n            if (i == j) {\n                return true;\n            }\n        }\n    }\n    return false;",
    "    // write your code here\n    std::unordered_set<long> s;\n    for(int i=0;i<list1.size();i++)\n    {\n        s.insert(list1[i]);\n    }\n    for(int i=0;i<list2.size();i++)\n    {\n        if(s.find(list2[i])!=s.end())\n        {\n            return true;\n        }\n    }\n    return false;",
    "    for(int i=0;i<list1.size();i++) {\n        for(int j=0;j<list2.size();j++) {\n            if(list1[i]==list2[j]) {\n                return true;\n            }\n        }\n    }\n    return false;",
    "    std::unordered_set<long> set1;\n    for (auto i : list1) {\n        set1.insert(i);\n    }\n    for (auto i : list2) {\n        if (set1.find(i) != set1.end()) {\n            return true;\n        }\n    }\n    return false;",
    "    // Write your code here\n    std::unordered_set<long> set;\n    for(int i=0;i<list1.size();i++)\n    {\n        set.insert(list1[i]);\n    }\n    for(int i=0;i<list2.size();i++)\n    {\n        if(set.find(list2[i])!=set.end())\n        {\n            return true;\n        }\n    }\n    return false;",
    "    std::unordered_set<long> set;\n    for (auto i : list1) {\n        set.insert(i);\n    }\n    for (auto i : list2) {\n        if (set.find(i) != set.end()) {\n            return true;\n        }\n    }\n    return false;",
    "    // Write your code here\n    std::unordered_set<long> s;\n    for(auto i:list1)\n        s.insert(i);\n    for(auto i:list2)\n        if(s.find(i)!=s.end())\n            return true;\n    return false;",
    "    for(int i=0;i<list1.size();i++) {\n        for(int j=0;j<list2.size();j++) {\n            if(list1[i]==list2[j]) {\n                return true;\n            }\n        }\n    }\n    return false;",
    "    // write your code here\n    for(auto i : list1){\n        for(auto j : list2){\n            if(i == j)\n                return true;\n        }\n    }\n    return false;",
    "    for (int i = 0; i < list1.size(); i++) {\n        for (int j = 0; j < list2.size(); j++) {\n            if (list1[i] == list2[j]) {\n                return true;\n            }\n        }\n    }\n    return false;",
    "    //write your code here\n    for(int i=0;i<list1.size();i++)\n    {\n        for(int j=0;j<list2.size();j++)\n        {\n            if(list1[i]==list2[j])\n            {\n                return true;\n            }\n        }\n    }\n    return false;",
    "    for(int i = 0; i < list1.size(); i++) {\n        for(int j = 0; j < list2.size(); j++) {\n            if(list1[i] == list2[j]) {\n                return true;\n            }\n        }\n    }\n    return false;",
    "    for(int i=0;i<list1.size();i++){\n        for(int j=0;j<list2.size();j++){\n            if(list1[i]==list2[j]){\n                return true;\n            }\n        }\n    }\n    return false;",
    "    std::vector<long>::iterator it;\n    for (it = list1.begin(); it != list1.end(); it++) {\n        std::vector<long>::iterator it2;\n        for (it2 = list2.begin(); it2 != list2.end(); it2++) {\n            if (*it == *it2) {\n                return true;\n            }\n        }\n    }\n    return false;",
    "    for (int i = 0; i < list1.size(); i++) {\n        for (int j = 0; j < list2.size(); j++) {\n            if (list1[i] == list2[j]) {\n                return true;\n            }\n        }\n    }\n    return false;",
    "    int i,j;\n    for(i=0;i<list1.size();i++)\n    {\n        for(j=0;j<list2.size();j++)\n        {\n            if(list1[i]==list2[j])\n            {\n                return true;\n            }\n        }\n    }\n    return false;",
    "    // Write your code here\n    std::vector<long>::iterator it;\n    for(it = list1.begin(); it != list1.end(); it++) {\n        if(std::find(list2.begin(), list2.end(), *it) != list2.end()) {\n            return true;\n        }\n    }\n    return false;",
    "    // Write your code here\n    std::vector<long>::iterator it;\n    for(it = list1.begin(); it != list1.end(); it++) {\n        if(std::find(list2.begin(), list2.end(), *it) != list2.end()) {\n            return true;\n        }\n    }\n    return false;",
    "    std::vector<long>::iterator it;\n    for(it = list1.begin(); it != list1.end(); it++) {\n        if(std::find(list2.begin(), list2.end(), *it) != list2.end()) {\n            return true;\n        }\n    }\n    return false;",
    "    // Write your code here\n    for(int i=0;i<list1.size();i++){\n        for(int j=0;j<list2.size();j++){\n            if(list1[i]==list2[j]){\n                return true;\n            }\n        }\n    }\n    return false;",
    "    for (int i = 0; i < list1.size(); i++) {\n        for (int j = 0; j < list2.size(); j++) {\n            if (list1[i] == list2[j]) {\n                return true;\n            }\n        }\n    }\n    return false;",
    "    for(int i=0;i<list1.size();i++) {\n        for(int j=0;j<list2.size();j++) {\n            if(list1[i] == list2[j]) {\n                return true;\n            }\n        }\n    }\n    return false;",
    "    for(int i=0;i<list1.size();i++) {\n        for(int j=0;j<list2.size();j++) {\n            if(list1[i]==list2[j]) {\n                return true;\n            }\n        }\n    }\n    return false;",
    "    for(long i = 0; i < list1.size(); i++) {\n        for(long j = 0; j < list2.size(); j++) {\n            if(list1[i] == list2[j]) {\n                return true;\n            }\n        }\n    }\n    return false;",
    "\t// Write your code here\n\tstd::vector<long>::iterator it;\n\tfor(it=list1.begin();it!=list1.end();it++)\n\t{\n\t\tif(std::find(list2.begin(),list2.end(),*it)!=list2.end())\n\t\t{\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;",
    "    for(int i=0; i<list1.size(); i++) {\n        for(int j=0; j<list2.size(); j++) {\n            if(list1[i] == list2[j]) {\n                return true;\n            }\n        }\n    }\n    return false;",
    "    // Write your code here\n    std::unordered_set<long> s;\n    for(auto i: list1)\n        s.insert(i);\n    for(auto i: list2)\n        if(s.find(i) != s.end())\n            return true;\n    return false;",
    "    // Write your code here\n    std::vector<long>::iterator it;\n    for(it=list1.begin();it!=list1.end();it++){\n        if(std::find(list2.begin(),list2.end(),*it)!=list2.end()){\n            return true;\n        }\n    }\n    return false;",
    "    std::unordered_set<long> s;\n    for(auto i : list1) {\n        s.insert(i);\n    }\n    for(auto i : list2) {\n        if(s.find(i) != s.end()) {\n            return true;\n        }\n    }\n    return false;",
    "    for(int i = 0; i < list1.size(); i++) {\n        for(int j = 0; j < list2.size(); j++) {\n            if(list1[i] == list2[j]) {\n                return true;\n            }\n        }\n    }\n    return false;",
    "    // Write your code here\n    std::unordered_set<long> s;\n    for(int i=0;i<list1.size();i++)\n    {\n        s.insert(list1[i]);\n    }\n    for(int i=0;i<list2.size();i++)\n    {\n        if(s.find(list2[i])!=s.end())\n        {\n            return true;\n        }\n    }\n    return false;",
    "    for(int i=0;i<list1.size();i++) {\n        for(int j=0;j<list2.size();j++) {\n            if(list1[i] == list2[j]) {\n                return true;\n            }\n        }\n    }\n    return false;",
    "    std::sort(list1.begin(), list1.end());\n    std::sort(list2.begin(), list2.end());\n    int i = 0;\n    int j = 0;\n    while (i < list1.size() && j < list2.size()) {\n        if (list1[i] == list2[j]) {\n            return true;\n        } else if (list1[i] < list2[j]) {\n            i++;\n        } else {\n            j++;\n        }\n    }\n    return false;",
    "    for(int i=0;i<list1.size();i++)\n    {\n        for(int j=0;j<list2.size();j++)\n        {\n            if(list1[i]==list2[j])\n            {\n                return true;\n            }\n        }\n    }\n    return false;",
    "    // Write your code here\n    std::vector<long>::iterator it;\n    for(it=list1.begin();it!=list1.end();it++)\n    {\n        if(std::find(list2.begin(),list2.end(),*it)!=list2.end())\n        {\n            return true;\n        }\n    }\n    return false;",
    "    for(int i=0;i<list1.size();i++) {\n        for(int j=0;j<list2.size();j++) {\n            if(list1[i]==list2[j]) {\n                return true;\n            }\n        }\n    }\n    return false;",
    "    // Write your code here\n    for(int i=0;i<list1.size();i++)\n    {\n        for(int j=0;j<list2.size();j++)\n        {\n            if(list1[i]==list2[j])\n            {\n                return true;\n            }\n        }\n    }\n    return false;",
    "    std::unordered_set<long> s;\n    for (auto i : list1) {\n        s.insert(i);\n    }\n    for (auto i : list2) {\n        if (s.find(i) != s.end()) {\n            return true;\n        }\n    }\n    return false;",
    "    for(int i=0;i<list1.size();i++) {\n        for(int j=0;j<list2.size();j++) {\n            if(list1[i] == list2[j]) {\n                return true;\n            }\n        }\n    }\n    return false;",
    "    std::vector<long>::iterator it;\n    for(it = list1.begin(); it != list1.end(); it++) {\n        if(std::find(list2.begin(), list2.end(), *it) != list2.end()) {\n            return true;\n        }\n    }\n    return false;",
    "    // Write your code here\n    std::unordered_set<long> s;\n    for(auto i : list1)\n        s.insert(i);\n    for(auto i : list2)\n        if(s.find(i) != s.end())\n            return true;\n    return false;",
    "    std::sort(list1.begin(), list1.end());\n    std::sort(list2.begin(), list2.end());\n    int i = 0, j = 0;\n    while (i < list1.size() && j < list2.size()) {\n        if (list1[i] == list2[j]) {\n            return true;\n        }\n        else if (list1[i] < list2[j]) {\n            i++;\n        }\n        else {\n            j++;\n        }\n    }\n    return false;",
    "    // Write your code here\n    std::unordered_map<long, bool> m;\n    for(auto i : list1) {\n        m[i] = true;\n    }\n    for(auto i : list2) {\n        if(m.find(i) != m.end()) {\n            return true;\n        }\n    }\n    return false;",
    "    for (int i = 0; i < list1.size(); i++) {\n        for (int j = 0; j < list2.size(); j++) {\n            if (list1[i] == list2[j]) {\n                return true;\n            }\n        }\n    }\n    return false;",
    "    std::map<long, int> map1;\n    for (auto i : list1) {\n        map1[i]++;\n    }\n    for (auto i : list2) {\n        if (map1[i] > 0) {\n            return true;\n        }\n    }\n    return false;",
    "    // Write your code here\n    int i, j;\n    for(i=0; i<list1.size(); i++) {\n        for(j=0; j<list2.size(); j++) {\n            if(list1[i] == list2[j]) {\n                return true;\n            }\n        }\n    }\n    return false;",
    "    for (long i = 0; i < list1.size(); i++) {\n        for (long j = 0; j < list2.size(); j++) {\n            if (list1[i] == list2[j]) {\n                return true;\n            }\n        }\n    }\n    return false;",
    "    std::vector<long>::iterator it;\n    for(it = list1.begin(); it != list1.end(); it++) {\n        if(std::find(list2.begin(), list2.end(), *it) != list2.end()) {\n            return true;\n        }\n    }\n    return false;",
    "    for(auto i : list1) {\n        for(auto j : list2) {\n            if(i == j) {\n                return true;\n            }\n        }\n    }\n    return false;",
    "\tfor (int i = 0; i < list1.size(); i++) {\n\t\tfor (int j = 0; j < list2.size(); j++) {\n\t\t\tif (list1[i] == list2[j]) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t}\n\treturn false;",
    "    for(int i=0;i<list1.size();i++) {\n        for(int j=0;j<list2.size();j++) {\n            if(list1[i]==list2[j]) {\n                return true;\n            }\n        }\n    }\n    return false;",
    "\t// Write your code here\n\t// return true if any value in list1 exists in list2\n\t// return false otherwise\n\tfor(int i=0;i<list1.size();i++)\n\t{\n\t\tfor(int j=0;j<list2.size();j++)\n\t\t{\n\t\t\tif(list1[i]==list2[j])\n\t\t\t{\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t}\n\treturn false;",
    "    // Write your code here\n    for(int i=0;i<list1.size();i++){\n        for(int j=0;j<list2.size();j++){\n            if(list1[i]==list2[j]){\n                return true;\n            }\n        }\n    }\n    return false;",
    "\t// Write your code here\n\t// return true if any value in list1 exists in list2\n\t// return false otherwise\n\tfor(int i=0;i<list1.size();i++){\n\t\tfor(int j=0;j<list2.size();j++){\n\t\t\tif(list1[i]==list2[j]){\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t}\n\treturn false;",
    "    for(int i = 0; i < list1.size(); i++) {\n        for(int j = 0; j < list2.size(); j++) {\n            if(list1[i] == list2[j]) {\n                return true;\n            }\n        }\n    }\n    return false;",
    "    for (int i = 0; i < list1.size(); i++) {\n        for (int j = 0; j < list2.size(); j++) {\n            if (list1[i] == list2[j]) {\n                return true;\n            }\n        }\n    }\n    return false;",
    "    std::vector<long>::iterator itr;\n    for(itr = list1.begin(); itr != list1.end(); itr++) {\n        if(std::find(list2.begin(), list2.end(), *itr) != list2.end()) {\n            return true;\n        }\n    }\n    return false;",
    "    for (int i = 0; i < list1.size(); i++) {\n        for (int j = 0; j < list2.size(); j++) {\n            if (list1[i] == list2[j]) {\n                return true;\n            }\n        }\n    }\n    return false;",
    "    for(int i=0;i<list1.size();i++) {\n        for(int j=0;j<list2.size();j++) {\n            if(list1[i] == list2[j]) {\n                return true;\n            }\n        }\n    }\n    return false;",
    "    for(int i=0;i<list1.size();i++) {\n        for(int j=0;j<list2.size();j++) {\n            if(list1[i]==list2[j]) {\n                return true;\n            }\n        }\n    }\n    return false;",
    "    for(int i=0;i<list1.size();i++) {\n        for(int j=0;j<list2.size();j++) {\n            if(list1[i] == list2[j]) {\n                return true;\n            }\n        }\n    }\n    return false;",
    "    // Write your code here\n    for(int i=0;i<list1.size();i++)\n    {\n        for(int j=0;j<list2.size();j++)\n        {\n            if(list1[i]==list2[j])\n            {\n                return true;\n            }\n        }\n    }\n    return false;",
    "    for(int i=0;i<list1.size();i++) {\n        for(int j=0;j<list2.size();j++) {\n            if(list1[i] == list2[j]) {\n                return true;\n            }\n        }\n    }\n    return false;",
    "    for(auto i : list1) {\n        for(auto j : list2) {\n            if(i == j) {\n                return true;\n            }\n        }\n    }\n    return false;",
    "    // Write your code here\n    int i,j;\n    for(i=0;i<list1.size();i++)\n    {\n        for(j=0;j<list2.size();j++)\n        {\n            if(list1[i]==list2[j])\n            {\n                return true;\n            }\n        }\n    }\n    return false;",
    "    for(int i=0;i<list1.size();i++) {\n        for(int j=0;j<list2.size();j++) {\n            if(list1[i] == list2[j]) {\n                return true;\n            }\n        }\n    }\n    return false;",
    "    std::vector<long>::iterator it;\n    for(it = list1.begin(); it != list1.end(); it++) {\n        if(std::find(list2.begin(), list2.end(), *it) != list2.end()) {\n            return true;\n        }\n    }\n    return false;",
    "    for (auto i : list1) {\n        for (auto j : list2) {\n            if (i == j) {\n                return true;\n            }\n        }\n    }\n    return false;",
    "    // Write your code here\n    int i,j;\n    for(i=0;i<list1.size();i++)\n    {\n        for(j=0;j<list2.size();j++)\n        {\n            if(list1[i]==list2[j])\n            {\n                return true;\n            }\n        }\n    }\n    return false;",
    "    std::unordered_set<long> s;\n    for (auto i : list1) {\n        s.insert(i);\n    }\n    for (auto i : list2) {\n        if (s.find(i) != s.end()) {\n            return true;\n        }\n    }\n    return false;",
    "    std::vector<long>::iterator it;\n    for(it = list1.begin(); it != list1.end(); it++) {\n        if(std::find(list2.begin(), list2.end(), *it) != list2.end()) {\n            return true;\n        }\n    }\n    return false;",
    "    for(int i=0;i<list1.size();i++) {\n        for(int j=0;j<list2.size();j++) {\n            if(list1[i]==list2[j]) {\n                return true;\n            }\n        }\n    }\n    return false;",
    "    for (long i = 0; i < list1.size(); i++) {\n        for (long j = 0; j < list2.size(); j++) {\n            if (list1[i] == list2[j]) {\n                return true;\n            }\n        }\n    }\n    return false;",
    "\tfor(int i=0;i<list1.size();i++) {\n\t\tfor(int j=0;j<list2.size();j++) {\n\t\t\tif(list1[i]==list2[j]) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t}\n\treturn false;",
    "    for(long i=0;i<list1.size();i++) {\n        for(long j=0;j<list2.size();j++) {\n            if(list1[i]==list2[j]) {\n                return true;\n            }\n        }\n    }\n    return false;",
    "    // Write your code here\n    int i,j;\n    for(i=0;i<list1.size();i++)\n    {\n        for(j=0;j<list2.size();j++)\n        {\n            if(list1[i]==list2[j])\n            {\n                return true;\n            }\n        }\n    }\n    return false;",
    "    for (int i = 0; i < list1.size(); i++) {\n        for (int j = 0; j < list2.size(); j++) {\n            if (list1[i] == list2[j]) {\n                return true;\n            }\n        }\n    }\n    return false;",
    "    // Write your code here\n    std::set<long> s;\n    for(int i=0;i<list1.size();i++)\n    {\n        s.insert(list1[i]);\n    }\n    for(int i=0;i<list2.size();i++)\n    {\n        if(s.find(list2[i])!=s.end())\n        {\n            return true;\n        }\n    }\n    return false;",
    "    for(int i=0;i<list1.size();i++) {\n        for(int j=0;j<list2.size();j++) {\n            if(list1[i] == list2[j]) {\n                return true;\n            }\n        }\n    }\n    return false;",
    "    for(int i=0;i<list1.size();i++) {\n        for(int j=0;j<list2.size();j++) {\n            if(list1[i] == list2[j]) {\n                return true;\n            }\n        }\n    }\n    return false;",
    "    for(int i=0;i<list1.size();i++) {\n        for(int j=0;j<list2.size();j++) {\n            if(list1[i] == list2[j]) {\n                return true;\n            }\n        }\n    }\n    return false;",
    "    for(int i=0;i<list1.size();i++) {\n        for(int j=0;j<list2.size();j++) {\n            if(list1[i] == list2[j]) {\n                return true;\n            }\n        }\n    }\n    return false;",
    "    std::unordered_set<long> s;\n    for (long i = 0; i < list1.size(); i++) {\n        s.insert(list1[i]);\n    }\n    for (long i = 0; i < list2.size(); i++) {\n        if (s.find(list2[i]) != s.end()) {\n            return true;\n        }\n    }\n    return false;",
    "\tfor(auto i : list1) {\n\t\tfor(auto j : list2) {\n\t\t\tif(i == j) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t}\n\treturn false;",
    "    // Write your code here\n    std::unordered_set<long> s;\n    for(auto i:list1)\n        s.insert(i);\n    for(auto i:list2)\n        if(s.find(i)!=s.end())\n            return true;\n    return false;",
    "    //write your code here\n    std::unordered_set<long> s;\n    for(auto i : list1)\n        s.insert(i);\n    for(auto i : list2)\n        if(s.find(i) != s.end())\n            return true;\n    return false;",
    "    std::unordered_set<long> set1;\n    for (auto i : list1) {\n        set1.insert(i);\n    }\n    for (auto i : list2) {\n        if (set1.find(i) != set1.end()) {\n            return true;\n        }\n    }\n    return false;",
    "    for (auto i : list1) {\n        for (auto j : list2) {\n            if (i == j) {\n                return true;\n            }\n        }\n    }\n    return false;",
    "    for (int i = 0; i < list1.size(); i++) {\n        for (int j = 0; j < list2.size(); j++) {\n            if (list1[i] == list2[j]) {\n                return true;\n            }\n        }\n    }\n    return false;",
    "    std::unordered_map<long, bool> map;\n    for (int i = 0; i < list1.size(); i++) {\n        map[list1[i]] = true;\n    }\n    for (int i = 0; i < list2.size(); i++) {\n        if (map.find(list2[i]) != map.end()) {\n            return true;\n        }\n    }\n    return false;",
    "    for (int i = 0; i < list1.size(); i++) {\n        for (int j = 0; j < list2.size(); j++) {\n            if (list1[i] == list2[j]) {\n                return true;\n            }\n        }\n    }\n    return false;",
    "    std::unordered_set<long> set1;\n    for(auto i : list1) {\n        set1.insert(i);\n    }\n    for(auto i : list2) {\n        if(set1.find(i) != set1.end()) {\n            return true;\n        }\n    }\n    return false;",
    "    std::sort(list1.begin(), list1.end());\n    std::sort(list2.begin(), list2.end());\n    for(int i = 0; i < list1.size(); i++) {\n        for(int j = 0; j < list2.size(); j++) {\n            if(list1[i] == list2[j]) {\n                return true;\n            }\n        }\n    }\n    return false;",
    "    for(int i=0;i<list1.size();i++) {\n        for(int j=0;j<list2.size();j++) {\n            if(list1[i] == list2[j]) {\n                return true;\n            }\n        }\n    }\n    return false;",
    "\tfor (long i = 0; i < list1.size(); i++) {\n\t\tfor (long j = 0; j < list2.size(); j++) {\n\t\t\tif (list1[i] == list2[j]) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t}\n\treturn false;",
    "    std::unordered_set<long> s;\n    for(auto i : list1) {\n        s.insert(i);\n    }\n    for(auto i : list2) {\n        if(s.find(i) != s.end()) {\n            return true;\n        }\n    }\n    return false;",
    "    // Write your code here\n    for(int i=0;i<list1.size();i++)\n    {\n        for(int j=0;j<list2.size();j++)\n        {\n            if(list1[i]==list2[j])\n                return true;\n        }\n    }\n    return false;",
    "    for (long i = 0; i < list1.size(); i++) {\n        for (long j = 0; j < list2.size(); j++) {\n            if (list1[i] == list2[j]) {\n                return true;\n            }\n        }\n    }\n    return false;",
    "    // Write your code here\n    std::sort(list1.begin(), list1.end());\n    std::sort(list2.begin(), list2.end());\n    for(int i=0; i<list1.size(); i++) {\n        for(int j=0; j<list2.size(); j++) {\n            if(list1[i] == list2[j]) {\n                return true;\n            }\n        }\n    }\n    return false;",
    "    for (int i = 0; i < list1.size(); i++) {\n        for (int j = 0; j < list2.size(); j++) {\n            if (list1[i] == list2[j]) {\n                return true;\n            }\n        }\n    }\n    return false;",
    "    // Write your code here\n    std::vector<long>::iterator it;\n    std::vector<long>::iterator it1;\n    for(it=list1.begin();it!=list1.end();it++)\n    {\n        for(it1=list2.begin();it1!=list2.end();it1++)\n        {\n            if(*it==*it1)\n            {\n                return true;\n            }\n        }\n    }\n    return false;",
    "    int i,j;\n    for(i=0;i<list1.size();i++)\n    {\n        for(j=0;j<list2.size();j++)\n        {\n            if(list1[i]==list2[j])\n            {\n                return true;\n            }\n        }\n    }\n    return false;",
    "    // Write your code here\n    for(int i=0;i<list1.size();i++)\n    {\n        for(int j=0;j<list2.size();j++)\n        {\n            if(list1[i]==list2[j])\n            {\n                return true;\n            }\n        }\n    }\n    return false;",
    "    for(int i=0;i<list1.size();i++) {\n        for(int j=0;j<list2.size();j++) {\n            if(list1[i] == list2[j]) {\n                return true;\n            }\n        }\n    }\n    return false;",
    "    for(int i=0; i<list1.size(); i++) {\n        for(int j=0; j<list2.size(); j++) {\n            if(list1[i] == list2[j]) {\n                return true;\n            }\n        }\n    }\n    return false;",
    "    // Write your code here\n    std::sort(list1.begin(), list1.end());\n    std::sort(list2.begin(), list2.end());\n    std::vector<long>::iterator it1 = list1.begin();\n    std::vector<long>::iterator it2 = list2.begin();\n    while(it1 != list1.end() && it2 != list2.end()) {\n        if(*it1 == *it2) {\n            return true;\n        }\n        else if(*it1 < *it2) {\n            it1++;\n        }\n        else {\n            it2++;\n        }\n    }\n    return false;",
    "    //write your code here\n    for(int i=0;i<list1.size();i++)\n    {\n        for(int j=0;j<list2.size();j++)\n        {\n            if(list1[i]==list2[j])\n            {\n                return true;\n            }\n        }\n    }\n    return false;",
    "    // Write your code here\n    std::unordered_set<long> s;\n    for(auto i: list1){\n        s.insert(i);\n    }\n    for(auto i: list2){\n        if(s.find(i) != s.end()){\n            return true;\n        }\n    }\n    return false;",
    "    for(int i = 0; i < list1.size(); i++) {\n        for(int j = 0; j < list2.size(); j++) {\n            if(list1[i] == list2[j]) {\n                return true;\n            }\n        }\n    }\n    return false;",
    "    // write your code here\n    int i,j;\n    for(i=0;i<list1.size();i++)\n    {\n        for(j=0;j<list2.size();j++)\n        {\n            if(list1[i]==list2[j])\n            {\n                return true;\n            }\n        }\n    }\n    return false;",
    "    int i,j;\n    for(i=0;i<list1.size();i++) {\n        for(j=0;j<list2.size();j++) {\n            if(list1[i] == list2[j]) {\n                return true;\n            }\n        }\n    }\n    return false;",
    "    std::vector<long>::iterator it;\n    for(it=list1.begin();it!=list1.end();it++) {\n        if(std::find(list2.begin(),list2.end(),*it)!=list2.end()) {\n            return true;\n        }\n    }\n    return false;",
    "\tfor (int i = 0; i < list1.size(); i++) {\n\t\tfor (int j = 0; j < list2.size(); j++) {\n\t\t\tif (list1[i] == list2[j]) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t}\n\treturn false;",
    "    std::unordered_set<long> set1;\n    for(auto i : list1) {\n        set1.insert(i);\n    }\n    for(auto i : list2) {\n        if(set1.find(i) != set1.end()) {\n            return true;\n        }\n    }\n    return false;",
    "    for(int i=0;i<list1.size();i++) {\n        for(int j=0;j<list2.size();j++) {\n            if(list1[i] == list2[j]) {\n                return true;\n            }\n        }\n    }\n    return false;",
    "    // Write your code here\n    std::unordered_set<long> set;\n    for(auto i : list1)\n        set.insert(i);\n    for(auto i : list2)\n        if(set.find(i) != set.end())\n            return true;\n    return false;",
    "    for (int i = 0; i < list1.size(); i++) {\n        for (int j = 0; j < list2.size(); j++) {\n            if (list1[i] == list2[j]) {\n                return true;\n            }\n        }\n    }\n    return false;",
    "    for (int i = 0; i < list1.size(); i++) {\n        for (int j = 0; j < list2.size(); j++) {\n            if (list1[i] == list2[j]) {\n                return true;\n            }\n        }\n    }\n    return false;",
    "    // Write your code here\n    std::vector<long>::iterator it;\n    for(it=list1.begin();it!=list1.end();it++)\n    {\n        if(std::find(list2.begin(),list2.end(),*it)!=list2.end())\n        {\n            return true;\n        }\n    }\n    return false;",
    "    std::sort(list1.begin(), list1.end());\n    std::sort(list2.begin(), list2.end());\n    for (int i = 0; i < list1.size(); i++) {\n        for (int j = 0; j < list2.size(); j++) {\n            if (list1[i] == list2[j]) {\n                return true;\n            }\n        }\n    }\n    return false;",
    "    for(int i=0;i<list1.size();i++)\n    {\n        for(int j=0;j<list2.size();j++)\n        {\n            if(list1[i]==list2[j])\n            {\n                return true;\n            }\n        }\n    }\n    return false;",
    "\t// Write your code here\n\tstd::vector<long>::iterator it;\n\tfor(it=list1.begin();it!=list1.end();it++)\n\t{\n\t\tif(std::find(list2.begin(),list2.end(),*it)!=list2.end())\n\t\t{\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;",
    "    std::vector<long>::iterator it;\n    for(it = list1.begin(); it != list1.end(); it++) {\n        if(std::find(list2.begin(), list2.end(), *it) != list2.end()) {\n            return true;\n        }\n    }\n    return false;",
    "    for (long i = 0; i < list1.size(); i++) {\n        for (long j = 0; j < list2.size(); j++) {\n            if (list1[i] == list2[j]) {\n                return true;\n            }\n        }\n    }\n    return false;",
    "    std::unordered_set<long> s;\n    for(auto i: list1) {\n        s.insert(i);\n    }\n    for(auto i: list2) {\n        if(s.find(i) != s.end()) {\n            return true;\n        }\n    }\n    return false;",
    "\tfor(int i = 0; i < list1.size(); i++) {\n\t\tfor(int j = 0; j < list2.size(); j++) {\n\t\t\tif(list1[i] == list2[j]) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t}\n\treturn false;",
    "    // Write your code here\n    for(int i=0;i<list1.size();i++)\n    {\n        for(int j=0;j<list2.size();j++)\n        {\n            if(list1[i]==list2[j])\n            {\n                return true;\n            }\n        }\n    }\n    return false;",
    "    std::vector<long>::iterator it;\n    for (it = list1.begin(); it != list1.end(); it++) {\n        if (std::find(list2.begin(), list2.end(), *it) != list2.end()) {\n            return true;\n        }\n    }\n    return false;",
    "    for (long i = 0; i < list1.size(); i++) {\n        for (long j = 0; j < list2.size(); j++) {\n            if (list1[i] == list2[j]) {\n                return true;\n            }\n        }\n    }\n    return false;",
    "    for (long i = 0; i < list1.size(); i++) {\n        for (long j = 0; j < list2.size(); j++) {\n            if (list1[i] == list2[j]) {\n                return true;\n            }\n        }\n    }\n    return false;",
    "    for (auto i = list1.begin(); i != list1.end(); i++) {\n        for (auto j = list2.begin(); j != list2.end(); j++) {\n            if (*i == *j) {\n                return true;\n            }\n        }\n    }\n    return false;",
    "    // write your code here\n    for(int i=0;i<list1.size();i++)\n    {\n        for(int j=0;j<list2.size();j++)\n        {\n            if(list1[i]==list2[j])\n            {\n                return true;\n            }\n        }\n    }\n    return false;",
    "    int i,j;\n    for(i=0;i<list1.size();i++)\n    {\n        for(j=0;j<list2.size();j++)\n        {\n            if(list1[i]==list2[j])\n            {\n                return true;\n            }\n        }\n    }\n    return false;",
    "\tfor (int i = 0; i < list1.size(); i++) {\n\t\tfor (int j = 0; j < list2.size(); j++) {\n\t\t\tif (list1[i] == list2[j]) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t}\n\treturn false;",
    "    for(int i=0;i<list1.size();i++) {\n        for(int j=0;j<list2.size();j++) {\n            if(list1[i] == list2[j]) {\n                return true;\n            }\n        }\n    }\n    return false;",
    "    for (int i = 0; i < list1.size(); i++) {\n        for (int j = 0; j < list2.size(); j++) {\n            if (list1[i] == list2[j]) {\n                return true;\n            }\n        }\n    }\n    return false;",
    "    for (int i = 0; i < list1.size(); i++) {\n        for (int j = 0; j < list2.size(); j++) {\n            if (list1[i] == list2[j]) {\n                return true;\n            }\n        }\n    }\n    return false;",
    "    for (int i = 0; i < list1.size(); i++) {\n        for (int j = 0; j < list2.size(); j++) {\n            if (list1[i] == list2[j]) {\n                return true;\n            }\n        }\n    }\n    return false;",
    "    // Write your code here\n    for(int i=0;i<list1.size();i++){\n        for(int j=0;j<list2.size();j++){\n            if(list1[i]==list2[j]){\n                return true;\n            }\n        }\n    }\n    return false;",
    "\t// Write your code here\n\tfor(int i=0;i<list1.size();i++)\n\t{\n\t\tfor(int j=0;j<list2.size();j++)\n\t\t{\n\t\t\tif(list1[i]==list2[j])\n\t\t\t{\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t}\n\treturn false;",
    "    // Write your code here\n    for(int i=0;i<list1.size();i++)\n    {\n        for(int j=0;j<list2.size();j++)\n        {\n            if(list1[i]==list2[j])\n            {\n                return true;\n            }\n        }\n    }\n    return false;",
    "    int i,j;\n    for(i=0;i<list1.size();i++) {\n        for(j=0;j<list2.size();j++) {\n            if(list1[i]==list2[j]) {\n                return true;\n            }\n        }\n    }\n    return false;",
    "    std::unordered_set<long> s;\n    for (auto i : list1) {\n        s.insert(i);\n    }\n    for (auto i : list2) {\n        if (s.find(i) != s.end()) {\n            return true;\n        }\n    }\n    return false;",
    "    // Write your code here\n    for(int i=0;i<list1.size();i++){\n        for(int j=0;j<list2.size();j++){\n            if(list1[i]==list2[j]){\n                return true;\n            }\n        }\n    }\n    return false;",
    "    std::unordered_set<long> s;\n    for (auto i : list1) {\n        s.insert(i);\n    }\n    for (auto i : list2) {\n        if (s.find(i) != s.end()) {\n            return true;\n        }\n    }\n    return false;",
    "\t// Write your code here\n\tstd::unordered_set<long> s;\n\tfor(auto i:list1)\n\t\ts.insert(i);\n\tfor(auto i:list2)\n\t\tif(s.find(i)!=s.end())\n\t\t\treturn true;\n\treturn false;",
    "    for(int i=0;i<list1.size();i++) {\n        for(int j=0;j<list2.size();j++) {\n            if(list1[i] == list2[j]) {\n                return true;\n            }\n        }\n    }\n    return false;",
    "    for(auto i : list1) {\n        for(auto j : list2) {\n            if(i == j) {\n                return true;\n            }\n        }\n    }\n    return false;",
    "    // Write your code here\n    std::unordered_set<long> s;\n    for(long i=0;i<list1.size();i++)\n        s.insert(list1[i]);\n    for(long i=0;i<list2.size();i++)\n        if(s.find(list2[i])!=s.end())\n            return true;\n    return false;",
    "    std::vector<long>::iterator it;\n    for(it=list1.begin();it!=list1.end();it++) {\n        if(std::find(list2.begin(),list2.end(),*it)!=list2.end()) {\n            return true;\n        }\n    }\n    return false;",
    "    // Write your code here\n    std::sort(list1.begin(), list1.end());\n    std::sort(list2.begin(), list2.end());\n    int i = 0, j = 0;\n    while (i < list1.size() && j < list2.size()) {\n        if (list1[i] < list2[j]) {\n            i++;\n        } else if (list2[j] < list1[i]) {\n            j++;\n        } else {\n            return true;\n        }\n    }\n    return false;",
    "    for (int i = 0; i < list1.size(); i++) {\n        for (int j = 0; j < list2.size(); j++) {\n            if (list1[i] == list2[j]) {\n                return true;\n            }\n        }\n    }\n    return false;",
    "    for(int i=0;i<list1.size();i++) {\n        for(int j=0;j<list2.size();j++) {\n            if(list1[i] == list2[j]) {\n                return true;\n            }\n        }\n    }\n    return false;",
    "    std::unordered_set<long> set;\n    for (long i = 0; i < list1.size(); i++) {\n        set.insert(list1[i]);\n    }\n    for (long i = 0; i < list2.size(); i++) {\n        if (set.find(list2[i]) != set.end()) {\n            return true;\n        }\n    }\n    return false;",
    "    std::unordered_set<long> s;\n    for(auto i: list1) {\n        s.insert(i);\n    }\n    for(auto i: list2) {\n        if(s.find(i) != s.end()) {\n            return true;\n        }\n    }\n    return false;",
    "    std::sort(list1.begin(), list1.end());\n    std::sort(list2.begin(), list2.end());\n    int i = 0;\n    int j = 0;\n    while(i < list1.size() && j < list2.size()) {\n        if(list1[i] == list2[j]) {\n            return true;\n        }\n        else if(list1[i] < list2[j]) {\n            i++;\n        }\n        else {\n            j++;\n        }\n    }\n    return false;",
    "    for (int i = 0; i < list1.size(); i++) {\n        for (int j = 0; j < list2.size(); j++) {\n            if (list1[i] == list2[j]) {\n                return true;\n            }\n        }\n    }\n    return false;",
    "    // Write your code here\n    std::vector<long>::iterator it;\n    for(it = list1.begin(); it != list1.end(); it++) {\n        if(std::find(list2.begin(), list2.end(), *it) != list2.end()) {\n            return true;\n        }\n    }\n    return false;",
    "    std::unordered_set<long> s;\n    for (auto i : list1) {\n        s.insert(i);\n    }\n    for (auto i : list2) {\n        if (s.find(i) != s.end()) {\n            return true;\n        }\n    }\n    return false;",
    "    std::unordered_set<long> s;\n    for(auto i : list1) {\n        s.insert(i);\n    }\n    for(auto i : list2) {\n        if(s.find(i) != s.end()) {\n            return true;\n        }\n    }\n    return false;",
    "    // Write your code here\n    for(int i=0;i<list1.size();i++){\n        for(int j=0;j<list2.size();j++){\n            if(list1[i]==list2[j]){\n                return true;\n            }\n        }\n    }\n    return false;",
    "    for (long i = 0; i < list1.size(); i++) {\n        for (long j = 0; j < list2.size(); j++) {\n            if (list1[i] == list2[j]) {\n                return true;\n            }\n        }\n    }\n    return false;",
    "    for(int i=0;i<list1.size();i++) {\n        for(int j=0;j<list2.size();j++) {\n            if(list1[i] == list2[j]) {\n                return true;\n            }\n        }\n    }\n    return false;",
    "    // Write your code here\n    for(int i=0;i<list1.size();i++){\n        for(int j=0;j<list2.size();j++){\n            if(list1[i]==list2[j]){\n                return true;\n            }\n        }\n    }\n    return false;",
    "    for (auto i : list1) {\n        for (auto j : list2) {\n            if (i == j) {\n                return true;\n            }\n        }\n    }\n    return false;",
    "    // Write your code here\n    int i,j;\n    for(i=0;i<list1.size();i++)\n    {\n        for(j=0;j<list2.size();j++)\n        {\n            if(list1[i]==list2[j])\n            {\n                return true;\n            }\n        }\n    }\n    return false;",
    "    for(int i=0;i<list1.size();i++) {\n        for(int j=0;j<list2.size();j++) {\n            if(list1[i] == list2[j]) {\n                return true;\n            }\n        }\n    }\n    return false;",
    "    // Write your code here\n    std::unordered_set<long> s;\n    for(auto i : list1)\n        s.insert(i);\n    for(auto i : list2)\n        if(s.find(i) != s.end())\n            return true;\n    return false;",
    "    for (int i = 0; i < list1.size(); i++) {\n        for (int j = 0; j < list2.size(); j++) {\n            if (list1[i] == list2[j]) {\n                return true;\n            }\n        }\n    }\n    return false;",
    "    std::unordered_set<long> s;\n    for (auto i : list1) {\n        s.insert(i);\n    }\n    for (auto i : list2) {\n        if (s.find(i) != s.end()) {\n            return true;\n        }\n    }\n    return false;",
    "\tfor (int i = 0; i < list1.size(); i++) {\n\t\tfor (int j = 0; j < list2.size(); j++) {\n\t\t\tif (list1[i] == list2[j]) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t}\n\treturn false;",
    "    //write your code here\n    int flag = 0;\n    for(int i=0;i<list1.size();i++)\n    {\n        for(int j=0;j<list2.size();j++)\n        {\n            if(list1[i] == list2[j])\n            {\n                flag = 1;\n                break;\n            }\n        }\n    }\n    if(flag == 1)\n    {\n        return true;\n    }\n    else\n    {\n        return false;\n    }",
    "    for(int i = 0; i < list1.size(); i++) {\n        for(int j = 0; j < list2.size(); j++) {\n            if(list1[i] == list2[j]) {\n                return true;\n            }\n        }\n    }\n    return false;",
    "    std::sort(list1.begin(), list1.end());\n    std::sort(list2.begin(), list2.end());\n    int i = 0, j = 0;\n    while(i < list1.size() && j < list2.size()) {\n        if(list1[i] == list2[j]) {\n            return true;\n        }\n        else if(list1[i] < list2[j]) {\n            i++;\n        }\n        else {\n            j++;\n        }\n    }\n    return false;",
    "    std::sort(list1.begin(), list1.end());\n    std::sort(list2.begin(), list2.end());\n    for (int i = 0; i < list1.size(); i++) {\n        for (int j = 0; j < list2.size(); j++) {\n            if (list1[i] == list2[j]) {\n                return true;\n            }\n        }\n    }\n    return false;",
    "    // Write your code here\n    int i,j;\n    for(i=0;i<list1.size();i++)\n    {\n        for(j=0;j<list2.size();j++)\n        {\n            if(list1[i]==list2[j])\n            {\n                return true;\n            }\n        }\n    }\n    return false;",
    "    std::unordered_set<long> s;\n    for(auto i : list1) {\n        s.insert(i);\n    }\n    for(auto i : list2) {\n        if(s.find(i) != s.end()) {\n            return true;\n        }\n    }\n    return false;",
    "    // Write your code here\n    std::unordered_set<long> s;\n    for(int i=0;i<list1.size();i++)\n    {\n        s.insert(list1[i]);\n    }\n    for(int i=0;i<list2.size();i++)\n    {\n        if(s.find(list2[i])!=s.end())\n        {\n            return true;\n        }\n    }\n    return false;",
    "    // Write your code here\n    for(int i=0;i<list1.size();i++){\n        for(int j=0;j<list2.size();j++){\n            if(list1[i]==list2[j]){\n                return true;\n            }\n        }\n    }\n    return false;",
    "    std::vector<long>::iterator it;\n    for(int i=0;i<list1.size();i++){\n        it = std::find(list2.begin(),list2.end(),list1[i]);\n        if(it!=list2.end()){\n            return true;\n        }\n    }\n    return false;",
    "    for (long i = 0; i < list1.size(); i++) {\n        for (long j = 0; j < list2.size(); j++) {\n            if (list1[i] == list2[j]) {\n                return true;\n            }\n        }\n    }\n    return false;",
    "\t// Write your code here\n\tfor(int i=0;i<list1.size();i++){\n\t\tfor(int j=0;j<list2.size();j++){\n\t\t\tif(list1[i]==list2[j]){\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t}\n\treturn false;",
    "    // Write your code here\n    std::unordered_set<long> s;\n    for(auto i : list1)\n        s.insert(i);\n    for(auto i : list2)\n        if(s.find(i) != s.end())\n            return true;\n    return false;",
    "    for(int i=0;i<list1.size();i++) {\n        for(int j=0;j<list2.size();j++) {\n            if(list1[i] == list2[j]) {\n                return true;\n            }\n        }\n    }\n    return false;",
    "    std::vector<long>::iterator it;\n    for (it = list1.begin(); it != list1.end(); it++) {\n        if (std::find(list2.begin(), list2.end(), *it) != list2.end()) {\n            return true;\n        }\n    }\n    return false;",
    "    std::sort(list1.begin(), list1.end());\n    std::sort(list2.begin(), list2.end());\n    int i = 0, j = 0;\n    while (i < list1.size() && j < list2.size()) {\n        if (list1[i] == list2[j]) {\n            return true;\n        }\n        else if (list1[i] < list2[j]) {\n            i++;\n        }\n        else {\n            j++;\n        }\n    }\n    return false;"
  ]
}
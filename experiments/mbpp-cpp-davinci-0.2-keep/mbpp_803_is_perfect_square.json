{
  "name": "mbpp_803_is_perfect_square",
  "language": "cpp",
  "prompt": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\nbool is_perfect_square(long n) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_803_is_perfect_square.py",
  "prompt_terminology": "verbatim",
  "tests": "}\nint main() {\n    auto candidate = is_perfect_square;\n    assert(candidate((10)) == (false));\n    assert(candidate((36)) == (true));\n    assert(candidate((14)) == (false));\n    assert(candidate((196)) == (true));\n    assert(candidate((125)) == (false));\n    assert(candidate((15625)) == (true));\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    if (n < 0) return false;\n    long h = n & 0xF;  // h is the last hex \"digit\"\n    if (h > 9) return false;\n    // Use lazy evaluation to jump out of the if statement as soon as possible\n    if (h != 2 && h != 3 && h != 5 && h != 6 && h != 7 && h != 8) {\n        long t = (long) floor(sqrt((double) n) + 0.5);\n        return t*t == n;\n    }\n    return false;",
    "    if (n < 0) return false;\n    if (n == 0 || n == 1) return true;\n    long l = 1, r = n;\n    while (l <= r) {\n        long mid = l + (r - l) / 2;\n        if (mid * mid == n) return true;\n        if (mid * mid < n) l = mid + 1;\n        else r = mid - 1;\n    }\n    return false;",
    "    if (n < 0) return false;\n    if (n == 0 || n == 1) return true;\n    long t = n / 2;\n    while (t * t > n) {\n        t = (t + n / t) / 2;\n    }\n    return t * t == n;",
    "    if(n<0) return false;\n    if(n==0 || n==1) return true;\n    long start=1, end=n;\n    while(start<=end) {\n        long mid = start + (end-start)/2;\n        if(mid*mid==n) return true;\n        else if(mid*mid<n) start=mid+1;\n        else end=mid-1;\n    }\n    return false;",
    "    if (n < 0)\n        return false;\n    if (n == 0 || n == 1)\n        return true;\n    long t = n / 2;\n    while (t * t > n) {\n        t = (t + n / t) / 2;\n    }\n    return t * t == n;",
    "    if (n < 0) {\n        return false;\n    }\n    long tst = (long)(sqrt(n) + 0.5);\n    return tst*tst == n;",
    "    if (n < 0)\n        return false;\n    if (n == 0 || n == 1)\n        return true;\n    long t = n / 2;\n    while (t * t > n) {\n        t = (t + n / t) / 2;\n    }\n    return t * t == n;",
    "    if (n < 0) return false;\n    if (n == 0 || n == 1) return true;\n    long t = n;\n    while (t > n/t) {\n        t = (t + n/t) / 2;\n    }\n    return t*t == n;",
    "    if (n < 0)\n        return false;\n    long tst = (long)(sqrt(n) + 0.5);\n    return tst*tst == n;",
    "    if (n < 0) return false;\n    long tst = (long)(sqrt(n) + 0.5);\n    return tst*tst == n;",
    "    if (n < 0) {\n        return false;\n    }\n    if (n == 0 || n == 1) {\n        return true;\n    }\n    long start = 1;\n    long end = n;\n    while (start <= end) {\n        long mid = (start + end) / 2;\n        if (mid * mid == n) {\n            return true;\n        } else if (mid * mid < n) {\n            start = mid + 1;\n        } else {\n            end = mid - 1;\n        }\n    }\n    return false;",
    "    if(n<0) return false;\n    long long l=0,r=n;\n    while(l<=r) {\n        long long mid=(l+r)/2;\n        if(mid*mid==n) return true;\n        else if(mid*mid<n) l=mid+1;\n        else r=mid-1;\n    }\n    return false;",
    "    long long int i = 1;\n    while(i*i <= n) {\n        if(i*i == n) {\n            return true;\n        }\n        i++;\n    }\n    return false;",
    "    if(n == 0 || n == 1)\n        return true;\n    long l = 1, r = n/2;\n    while(l <= r) {\n        long mid = l + (r - l)/2;\n        if(mid*mid == n)\n            return true;\n        else if(mid*mid < n)\n            l = mid + 1;\n        else\n            r = mid - 1;\n    }\n    return false;",
    "    long x = n;\n    while (x * x > n) {\n        x = (x + n / x) / 2;\n    }\n    return x * x == n;",
    "    if(n<0) return false;\n    long root = sqrt(n);\n    return (root*root == n);",
    "    long root = sqrt(n);\n    return (root*root == n);",
    "    if (n < 0) {\n        return false;\n    }\n    long tst = (long)(sqrt(n) + 0.5);\n    return tst*tst == n;",
    "    if(n<0) return false;\n    if(n==0 || n==1) return true;\n    long long int i=1;\n    while(i*i<=n) {\n        if(i*i==n) return true;\n        i++;\n    }\n    return false;",
    "    long long i = 1;\n    while (i * i <= n) {\n        if (i * i == n)\n            return true;\n        i++;\n    }\n    return false;"
  ]
}
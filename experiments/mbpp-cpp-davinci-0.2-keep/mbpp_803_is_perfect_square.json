{
  "name": "mbpp_803_is_perfect_square",
  "language": "cpp",
  "prompt": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\nbool is_perfect_square(long n) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_803_is_perfect_square.py",
  "prompt_terminology": "verbatim",
  "tests": "}\nint main() {\n    auto candidate = is_perfect_square;\n    assert(candidate((10)) == (false));\n    assert(candidate((36)) == (true));\n    assert(candidate((14)) == (false));\n    assert(candidate((196)) == (true));\n    assert(candidate((125)) == (false));\n    assert(candidate((15625)) == (true));\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    if (n < 0) return false;\n    long h = n & 0xF;  // h is the last hex \"digit\"\n    if (h > 9) return false;\n    // Use lazy evaluation to jump out of the if statement as soon as possible\n    if (h != 2 && h != 3 && h != 5 && h != 6 && h != 7 && h != 8) {\n        long t = (long) floor(sqrt((double) n) + 0.5);\n        return t*t == n;\n    }\n    return false;",
    "    if (n < 0) return false;\n    if (n == 0 || n == 1) return true;\n    long l = 1, r = n;\n    while (l <= r) {\n        long mid = l + (r - l) / 2;\n        if (mid * mid == n) return true;\n        if (mid * mid < n) l = mid + 1;\n        else r = mid - 1;\n    }\n    return false;",
    "    if (n < 0) return false;\n    if (n == 0 || n == 1) return true;\n    long t = n / 2;\n    while (t * t > n) {\n        t = (t + n / t) / 2;\n    }\n    return t * t == n;",
    "    if(n<0) return false;\n    if(n==0 || n==1) return true;\n    long start=1, end=n;\n    while(start<=end) {\n        long mid = start + (end-start)/2;\n        if(mid*mid==n) return true;\n        else if(mid*mid<n) start=mid+1;\n        else end=mid-1;\n    }\n    return false;",
    "    if (n < 0)\n        return false;\n    if (n == 0 || n == 1)\n        return true;\n    long t = n / 2;\n    while (t * t > n) {\n        t = (t + n / t) / 2;\n    }\n    return t * t == n;",
    "    if (n < 0) {\n        return false;\n    }\n    long tst = (long)(sqrt(n) + 0.5);\n    return tst*tst == n;",
    "    if (n < 0)\n        return false;\n    if (n == 0 || n == 1)\n        return true;\n    long t = n / 2;\n    while (t * t > n) {\n        t = (t + n / t) / 2;\n    }\n    return t * t == n;",
    "    if (n < 0) return false;\n    if (n == 0 || n == 1) return true;\n    long t = n;\n    while (t > n/t) {\n        t = (t + n/t) / 2;\n    }\n    return t*t == n;",
    "    if (n < 0)\n        return false;\n    long tst = (long)(sqrt(n) + 0.5);\n    return tst*tst == n;",
    "    if (n < 0) return false;\n    long tst = (long)(sqrt(n) + 0.5);\n    return tst*tst == n;",
    "    if (n < 0) {\n        return false;\n    }\n    if (n == 0 || n == 1) {\n        return true;\n    }\n    long start = 1;\n    long end = n;\n    while (start <= end) {\n        long mid = (start + end) / 2;\n        if (mid * mid == n) {\n            return true;\n        } else if (mid * mid < n) {\n            start = mid + 1;\n        } else {\n            end = mid - 1;\n        }\n    }\n    return false;",
    "    if(n<0) return false;\n    long long l=0,r=n;\n    while(l<=r) {\n        long long mid=(l+r)/2;\n        if(mid*mid==n) return true;\n        else if(mid*mid<n) l=mid+1;\n        else r=mid-1;\n    }\n    return false;",
    "    long long int i = 1;\n    while(i*i <= n) {\n        if(i*i == n) {\n            return true;\n        }\n        i++;\n    }\n    return false;",
    "    if(n == 0 || n == 1)\n        return true;\n    long l = 1, r = n/2;\n    while(l <= r) {\n        long mid = l + (r - l)/2;\n        if(mid*mid == n)\n            return true;\n        else if(mid*mid < n)\n            l = mid + 1;\n        else\n            r = mid - 1;\n    }\n    return false;",
    "    long x = n;\n    while (x * x > n) {\n        x = (x + n / x) / 2;\n    }\n    return x * x == n;",
    "    if(n<0) return false;\n    long root = sqrt(n);\n    return (root*root == n);",
    "    long root = sqrt(n);\n    return (root*root == n);",
    "    if (n < 0) {\n        return false;\n    }\n    long tst = (long)(sqrt(n) + 0.5);\n    return tst*tst == n;",
    "    if(n<0) return false;\n    if(n==0 || n==1) return true;\n    long long int i=1;\n    while(i*i<=n) {\n        if(i*i==n) return true;\n        i++;\n    }\n    return false;",
    "    long long i = 1;\n    while (i * i <= n) {\n        if (i * i == n)\n            return true;\n        i++;\n    }\n    return false;",
    "    if(n < 0) return false;\n    if(n == 0 || n == 1) return true;\n    long start = 1, end = n, mid;\n    while(start <= end) {\n        mid = (start + end) / 2;\n        if(mid * mid == n) return true;\n        if(mid * mid < n) start = mid + 1;\n        else end = mid - 1;\n    }\n    return false;",
    "    long root = sqrt(n);\n    return (root * root == n);",
    "    if(n == 0 || n == 1) return true;\n    long long i = 1;\n    while(i*i <= n) {\n        if(i*i == n) return true;\n        i++;\n    }\n    return false;",
    "    if (n < 0) return false;\n    long tst = (long)(sqrt(n) + 0.5);\n    return tst*tst == n;",
    "    long sqrt_n = sqrt(n);\n    return (sqrt_n * sqrt_n == n);",
    "    if (n < 0) return false;\n    if (n == 0 || n == 1) return true;\n    long t = n / 2;\n    while (t * t > n) {\n        t = (t + n / t) / 2;\n    }\n    return t * t == n;",
    "    if (n < 0) {\n        return false;\n    }\n    if (n == 0 || n == 1) {\n        return true;\n    }\n    long start = 1;\n    long end = n;\n    while (start <= end) {\n        long mid = (start + end) / 2;\n        if (mid * mid == n) {\n            return true;\n        }\n        else if (mid * mid < n) {\n            start = mid + 1;\n        }\n        else {\n            end = mid - 1;\n        }\n    }\n    return false;",
    "    if(n < 0) return false;\n    if(n == 0 || n == 1) return true;\n    long t = n;\n    while(t > n/t) t = (t + n/t)/2;\n    return t*t == n;",
    "    if (n < 0)\n        return false;\n    if (n == 0 || n == 1)\n        return true;\n    long t = n / 2;\n    while (t * t > n) {\n        t = (t + n / t) / 2;\n    }\n    return t * t == n;",
    "    long sqrt_n = sqrt(n);\n    return (sqrt_n * sqrt_n == n);",
    "    if (n < 0) return false;\n    if (n == 0 || n == 1) return true;\n    long t = n / 2;\n    while (t * t > n) {\n        t = (t + n / t) / 2;\n    }\n    return t * t == n;",
    "    if (n < 0) return false;\n    if (n == 0 || n == 1) return true;\n    long t = n / 2;\n    while (t * t > n) {\n        t = (t + n / t) / 2;\n    }\n    return t * t == n;",
    "    long root = sqrt(n);\n    return (root * root == n);",
    "    long x = n;\n    while(x*x > n) {\n        x = (x + n/x) / 2;\n    }\n    return x*x == n;",
    "    long root = sqrt(n);\n    return (root * root == n);",
    "    long x = n;\n    while (x * x > n) {\n        x = (x + n / x) / 2;\n    }\n    return x * x == n;",
    "    if (n < 0) {\n        return false;\n    }\n    if (n == 0 || n == 1) {\n        return true;\n    }\n    long start = 1;\n    long end = n;\n    while (start <= end) {\n        long mid = (start + end) / 2;\n        if (mid * mid == n) {\n            return true;\n        }\n        if (mid * mid < n) {\n            start = mid + 1;\n        } else {\n            end = mid - 1;\n        }\n    }\n    return false;",
    "    long s = sqrt(n);\n    return (s*s == n);",
    "    if (n < 0) return false;\n    if (n == 0 || n == 1) return true;\n    long t = n;\n    while (t > n / t) {\n        t = (t + n / t) / 2;\n    }\n    return t * t == n;",
    "    if(n<0) return false;\n    if(n==0 || n==1) return true;\n    long start = 1, end = n;\n    while(start<=end) {\n        long mid = (start+end)/2;\n        if(mid*mid==n) return true;\n        else if(mid*mid<n) start = mid+1;\n        else end = mid-1;\n    }\n    return false;",
    "    if (n < 0) {\n        return false;\n    }\n    if (n == 0 || n == 1) {\n        return true;\n    }\n    long start = 0;\n    long end = n;\n    while (start <= end) {\n        long mid = start + (end - start) / 2;\n        if (mid * mid == n) {\n            return true;\n        }\n        if (mid * mid < n) {\n            start = mid + 1;\n        } else {\n            end = mid - 1;\n        }\n    }\n    return false;",
    "    if (n < 0) {\n        return false;\n    }\n    long tst = (long)(sqrt(n) + 0.5);\n    return tst*tst == n;",
    "    long sqrt_n = sqrt(n);\n    return (sqrt_n * sqrt_n == n);",
    "    if (n < 0) return false;\n    long tst = (long)(sqrt(n) + 0.5);\n    return tst*tst == n;",
    "    long long s = sqrt(n);\n    return (s*s == n);",
    "    if (n < 0) {\n        return false;\n    }\n    if (n == 0 || n == 1) {\n        return true;\n    }\n    long start = 1, end = n;\n    while (start <= end) {\n        long mid = start + (end - start) / 2;\n        long mid_sqr = mid * mid;\n        if (mid_sqr == n) {\n            return true;\n        } else if (mid_sqr < n) {\n            start = mid + 1;\n        } else {\n            end = mid - 1;\n        }\n    }\n    return false;",
    "    if (n < 0) return false;\n    if (n == 0 || n == 1) return true;\n    long t = n / 2;\n    while (t * t > n) {\n        t = (t + n / t) / 2;\n    }\n    return t * t == n;",
    "    if (n < 0)\n        return false;\n    long long tst = (long long)(sqrt(n) + 0.5);\n    return tst*tst == n;",
    "    if (n < 0) return false;\n    if (n == 0 || n == 1) return true;\n    long t = n / 2;\n    while (t * t > n) {\n        t = (t + n / t) / 2;\n    }\n    return t * t == n;",
    "    if (n < 0)\n        return false;\n    if (n == 0 || n == 1)\n        return true;\n    long t = n;\n    while (t > n / t) {\n        t = (t + n / t) / 2;\n    }\n    return t * t == n;",
    "    long s = sqrt(n);\n    return (s*s == n);",
    "    long sqrt_n = (long)(sqrt(n));\n    return (sqrt_n*sqrt_n == n);",
    "    if (n < 0)\n        return false;\n    if (n == 0 || n == 1)\n        return true;\n    long t = n / 2;\n    while (t * t > n) {\n        t = (t + n / t) / 2;\n    }\n    return t * t == n;",
    "    if (n < 0) return false;\n    long tst = (long)(sqrt(n) + 0.5);\n    return tst*tst == n;",
    "    long root = sqrt(n);\n    return root*root == n;",
    "    long s = sqrt(n);\n    return (s*s == n);",
    "    if (n < 0) return false;\n    if (n == 0 || n == 1) return true;\n    long t = n;\n    while (t > n/t) {\n        t = (t + n/t)/2;\n    }\n    return t*t == n;",
    "    if (n < 0)\n        return false;\n    long tst = (long)(sqrt(n) + 0.5);\n    return tst*tst == n;",
    "    long i = 1;\n    while(i*i <= n) {\n        if(i*i == n) {\n            return true;\n        }\n        i++;\n    }\n    return false;",
    "    if (n < 0)\n        return false;\n    if (n == 0 || n == 1)\n        return true;\n    long t = n;\n    while (t > n / t) {\n        t = (t + n / t) / 2;\n    }\n    return t * t == n;",
    "    long i = 1;\n    while (i*i < n) {\n        i++;\n    }\n    return i*i == n;",
    "    long i = 1;\n    while(i*i <= n) {\n        if(i*i == n) {\n            return true;\n        }\n        i++;\n    }\n    return false;",
    "    long i = 1;\n    while(i*i <= n) {\n        if(i*i == n) {\n            return true;\n        }\n        i++;\n    }\n    return false;",
    "    if (n < 0) {\n        return false;\n    }\n    if (n == 0 || n == 1) {\n        return true;\n    }\n    long start = 1;\n    long end = n;\n    while (start <= end) {\n        long mid = start + (end - start)/2;\n        if (mid*mid == n) {\n            return true;\n        }\n        if (mid*mid < n) {\n            start = mid + 1;\n        } else {\n            end = mid - 1;\n        }\n    }\n    return false;",
    "    if(n<0) return false;\n    if(n==0 || n==1) return true;\n    long long int low = 1;\n    long long int high = n;\n    while(low<=high) {\n        long long int mid = low + (high-low)/2;\n        long long int mid_sq = mid*mid;\n        if(mid_sq==n) return true;\n        else if(mid_sq<n) low = mid+1;\n        else high = mid-1;\n    }\n    return false;",
    "    long sqrt_n = sqrt(n);\n    return (sqrt_n*sqrt_n == n);",
    "    if(n < 0)\n        return false;\n    if(n == 0 || n == 1)\n        return true;\n    long start = 1, end = n;\n    while(start <= end) {\n        long mid = (start + end) / 2;\n        if(mid * mid == n)\n            return true;\n        else if(mid * mid < n)\n            start = mid + 1;\n        else\n            end = mid - 1;\n    }\n    return false;",
    "    if (n < 0) return false;\n    if (n == 0 || n == 1) return true;\n    long t = n;\n    while (t > n/t) {\n        t = (t + n/t) / 2;\n    }\n    return t*t == n;",
    "    if (n < 0) {\n        return false;\n    }\n    if (n == 0 || n == 1) {\n        return true;\n    }\n    long start = 1;\n    long end = n;\n    while (start <= end) {\n        long mid = start + (end - start) / 2;\n        if (mid * mid == n) {\n            return true;\n        }\n        if (mid * mid < n) {\n            start = mid + 1;\n        } else {\n            end = mid - 1;\n        }\n    }\n    return false;",
    "    long sqrt_n = sqrt(n);\n    return (sqrt_n * sqrt_n == n);",
    "    long sqrt_n = sqrt(n);\n    return (sqrt_n * sqrt_n == n);",
    "    if (n < 0) return false;\n    if (n == 0 || n == 1) return true;\n    long t = n / 2;\n    while (t * t > n) {\n        t = (t + n / t) / 2;\n    }\n    return t * t == n;",
    "    if (n < 0) return false;\n    long tst = (long)(sqrt(n) + 0.5);\n    return tst*tst == n;",
    "    if (n < 0) return false;\n    if (n == 0 || n == 1) return true;\n    long t = n / 2;\n    while (t * t > n) {\n        t = (t + n / t) / 2;\n    }\n    return t * t == n;",
    "    if (n < 0) return false;\n    if (n == 0 || n == 1) return true;\n    long start = 1, end = n;\n    while (start <= end) {\n        long mid = (start + end) / 2;\n        if (mid * mid == n) return true;\n        if (mid * mid < n) start = mid + 1;\n        else end = mid - 1;\n    }\n    return false;",
    "    long x = n;\n    while(x*x > n) {\n        x = (x + n/x) / 2;\n    }\n    return x*x == n;",
    "    long s = sqrt(n);\n    return (s*s == n);",
    "    if(n < 0) return false;\n    long tst = (long)(sqrt(n) + 0.5);\n    return tst*tst == n;",
    "    long s = sqrt(n);\n    return (s*s == n);",
    "    long s = sqrt(n);\n    return (s*s == n);",
    "    if (n < 0) return false;\n    if (n == 0 || n == 1) return true;\n    long t = n / 2;\n    while (t * t > n) {\n        t = (t + n / t) / 2;\n    }\n    return t * t == n;",
    "    long long int sq = sqrt(n);\n    return (sq*sq == n);",
    "    if (n < 0) {\n        return false;\n    }\n    long tst = (long)(sqrt(n) + 0.5);\n    return tst*tst == n;",
    "\tif(n < 0)\n\t\treturn false;\n\tif(n == 0 || n == 1)\n\t\treturn true;\n\tlong start = 1, end = n, mid;\n\twhile(start <= end) {\n\t\tmid = (start + end) / 2;\n\t\tif(mid * mid == n)\n\t\t\treturn true;\n\t\telse if(mid * mid < n)\n\t\t\tstart = mid + 1;\n\t\telse\n\t\t\tend = mid - 1;\n\t}\n\treturn false;",
    "    if (n < 0) {\n        return false;\n    }\n    long tst = (long)(sqrt(n) + 0.5);\n    return tst * tst == n;",
    "    long root = sqrt(n);\n    return (root*root == n);",
    "    if (n < 0) return false;\n    if (n == 0 || n == 1) return true;\n    long t = n / 2;\n    while (t * t > n) {\n        t = (t + n / t) / 2;\n    }\n    return t * t == n;",
    "    if (n < 0) return false;\n    long tst = (long)(sqrt(n) + 0.5);\n    return tst*tst == n;",
    "    if (n < 0) return false;\n    long tst = (long)(sqrt(n) + 0.5);\n    return tst*tst == n;",
    "    if (n < 0) return false;\n    if (n == 0 || n == 1) return true;\n    long t = n / 2;\n    while (t * t > n) {\n        t = (t + n / t) / 2;\n    }\n    return t * t == n;",
    "    if (n < 0) return false;\n    long tst = (long)(sqrt(n) + 0.5);\n    return tst*tst == n;",
    "    long s = sqrt(n);\n    return (s*s == n);",
    "    if (n < 0) return false;\n    if (n == 0 || n == 1) return true;\n    long t = n / 2;\n    while (t * t > n) {\n        t = (t + n / t) / 2;\n    }\n    return t * t == n;",
    "    if (n < 0) return false;\n    long tst = (long)(sqrt(n) + 0.5);\n    return tst*tst == n;",
    "    if (n < 0) return false;\n    if (n == 0 || n == 1) return true;\n    long t = n / 2;\n    while (t * t > n) {\n        t = (t + n / t) / 2;\n    }\n    return t * t == n;",
    "    if (n < 0) return false;\n    if (n == 0 || n == 1) return true;\n    long t = n / 2;\n    while (t * t > n) {\n        t = (t + n / t) / 2;\n    }\n    return t * t == n;",
    "    if (n < 0)\n        return false;\n    if (n == 0 || n == 1)\n        return true;\n    long t = n;\n    while (t > n / t) {\n        t = (t + n / t) / 2;\n    }\n    return t * t == n;",
    "    if (n < 0) return false;\n    long tst = (long)(sqrt(n) + 0.5);\n    return tst*tst == n;",
    "    if (n < 0) return false;\n    if (n == 0 || n == 1) return true;\n    long t = n / 2;\n    while (t * t > n) {\n        t = (t + n / t) / 2;\n    }\n    return t * t == n;",
    "    long sqrt_n = sqrt(n);\n    return (sqrt_n*sqrt_n == n);",
    "    long sqrt_n = sqrt(n);\n    return (sqrt_n * sqrt_n == n);",
    "    if (n < 0) return false;\n    if (n == 0 || n == 1) return true;\n    long l = 1, r = n;\n    while (l <= r) {\n        long mid = l + (r - l) / 2;\n        if (mid * mid == n) return true;\n        else if (mid * mid < n) l = mid + 1;\n        else r = mid - 1;\n    }\n    return false;",
    "    long x = n;\n    while(x*x > n) {\n        x = (x + n/x) / 2;\n    }\n    return x*x == n;",
    "    if (n < 0) return false;\n    if (n == 0 || n == 1) return true;\n    long t = n;\n    while (t > n/t) {\n        t = (t + n/t)/2;\n    }\n    return t*t == n;",
    "    long x = n;\n    while (x * x > n) {\n        x = (x + n / x) / 2;\n    }\n    return x * x == n;",
    "    if (n < 0) {\n        return false;\n    }\n    long tst = (long)(sqrt(n) + 0.5);\n    return tst*tst == n;",
    "    long long i = 1;\n    while(i*i < n) {\n        i++;\n    }\n    return i*i == n;",
    "    long sqrt_n = sqrt(n);\n    return (sqrt_n * sqrt_n == n);",
    "    long s = sqrt(n);\n    return (s*s == n);",
    "    if (n < 0) return false;\n    long tst = (long)(sqrt(n) + 0.5);\n    return tst*tst == n;",
    "    if (n < 0) return false;\n    if (n == 0 || n == 1) return true;\n    long long int low = 0, high = n;\n    while (low <= high) {\n        long long int mid = (low + high) / 2;\n        long long int sq = mid * mid;\n        if (sq == n) return true;\n        else if (sq < n) low = mid + 1;\n        else high = mid - 1;\n    }\n    return false;",
    "    if (n < 0) return false;\n    long tst = (long)(sqrt(n) + 0.5);\n    return tst*tst == n;",
    "    long i = 1;\n    while(i*i < n) {\n        i++;\n    }\n    return i*i == n;",
    "    if (n < 0)\n        return false;\n    if (n == 0 || n == 1)\n        return true;\n    long t = n;\n    while (t > n / t) {\n        t = (t + n / t) / 2;\n    }\n    return t * t == n;",
    "    if(n < 0)\n        return false;\n    if(n == 0 || n == 1)\n        return true;\n    long start = 1, end = n;\n    while(start <= end) {\n        long mid = (start + end) / 2;\n        if(mid * mid == n)\n            return true;\n        else if(mid * mid < n)\n            start = mid + 1;\n        else\n            end = mid - 1;\n    }\n    return false;",
    "    if (n < 0) {\n        return false;\n    }\n    if (n == 0 || n == 1) {\n        return true;\n    }\n    long start = 1;\n    long end = n;\n    while (start <= end) {\n        long mid = (start + end) / 2;\n        if (mid * mid == n) {\n            return true;\n        }\n        else if (mid * mid < n) {\n            start = mid + 1;\n        }\n        else {\n            end = mid - 1;\n        }\n    }\n    return false;",
    "    if(n < 0) return false;\n    if(n == 0 || n == 1) return true;\n    long long int low = 1, high = n;\n    while(low <= high) {\n        long long int mid = low + (high - low)/2;\n        if(mid*mid == n) return true;\n        else if(mid*mid < n) low = mid + 1;\n        else high = mid - 1;\n    }\n    return false;",
    "    if (n < 0) return false;\n    long tst = (long)(sqrt(n) + 0.5);\n    return tst*tst == n;",
    "    long long low = 1, high = n;\n    while(low <= high) {\n        long long mid = low + (high - low) / 2;\n        if(mid * mid == n) return true;\n        else if(mid * mid < n) low = mid + 1;\n        else high = mid - 1;\n    }\n    return false;",
    "    if (n < 0) return false;\n    if (n == 0 || n == 1) return true;\n    long i = 1, sum = 0;\n    while (sum < n) {\n        sum += i;\n        i += 2;\n    }\n    return sum == n;",
    "    if(n < 0) return false;\n    if(n == 0 || n == 1) return true;\n    long start = 1, end = n;\n    while(start <= end) {\n        long mid = (start + end) / 2;\n        if(mid * mid == n) return true;\n        else if(mid * mid < n) start = mid + 1;\n        else end = mid - 1;\n    }\n    return false;",
    "    if (n < 0) return false;\n    if (n == 0 || n == 1) return true;\n    long long int l = 1, r = n;\n    while (l <= r) {\n        long long int mid = (l + r) / 2;\n        long long int sq = mid * mid;\n        if (sq == n) return true;\n        else if (sq < n) l = mid + 1;\n        else r = mid - 1;\n    }\n    return false;",
    "    if (n < 0) return false;\n    if (n == 1) return true;\n    long low = 1, high = n;\n    while (low <= high) {\n        long mid = low + (high - low) / 2;\n        long mid_sq = mid * mid;\n        if (mid_sq == n) return true;\n        else if (mid_sq < n) low = mid + 1;\n        else high = mid - 1;\n    }\n    return false;",
    "    long s = sqrt(n);\n    return (s*s == n);",
    "    if(n<0) return false;\n    if(n==0 || n==1) return true;\n    long long int low = 1, high = n, mid;\n    while(low<=high) {\n        mid = low + (high-low)/2;\n        if(mid*mid == n) return true;\n        if(mid*mid < n) low = mid+1;\n        else high = mid-1;\n    }\n    return false;",
    "    if (n < 0) return false;\n    long tst = (long)(sqrt(n) + 0.5);\n    return tst*tst == n;",
    "    long i = 1;\n    while (i*i < n) {\n        i++;\n    }\n    return i*i == n;",
    "    long sqrt_n = sqrt(n);\n    return (sqrt_n * sqrt_n == n);",
    "    if (n < 0) {\n        return false;\n    }\n    if (n == 0 || n == 1) {\n        return true;\n    }\n    long low = 1;\n    long high = n;\n    while (low <= high) {\n        long mid = low + (high - low) / 2;\n        long mid_square = mid * mid;\n        if (mid_square == n) {\n            return true;\n        } else if (mid_square < n) {\n            low = mid + 1;\n        } else {\n            high = mid - 1;\n        }\n    }\n    return false;",
    "\tlong i = 1;\n\twhile (i * i <= n) {\n\t\tif (i * i == n)\n\t\t\treturn true;\n\t\ti++;\n\t}\n\treturn false;",
    "    if (n <= 0) return false;\n    if (n == 1) return true;\n    long left = 1, right = n;\n    while (left <= right) {\n        long mid = left + (right - left) / 2;\n        if (mid * mid == n) return true;\n        else if (mid * mid < n) left = mid + 1;\n        else right = mid - 1;\n    }\n    return false;",
    "    long long i = 1;\n    while (i * i < n) {\n        i++;\n    }\n    return i * i == n;",
    "    if (n < 0) return false;\n    if (n == 0 || n == 1) return true;\n    long t = n / 2;\n    while (t * t > n) {\n        t = (t + n / t) / 2;\n    }\n    return t * t == n;",
    "    if (n < 0) return false;\n    if (n == 0 || n == 1) return true;\n    long t = n / 2;\n    while (t * t > n) {\n        t = (t + n / t) / 2;\n    }\n    return t * t == n;",
    "    if (n < 0) return false;\n    long tst = (long)(sqrt(n) + 0.5);\n    return tst*tst == n;",
    "    if (n < 0) return false;\n    if (n == 0 || n == 1) return true;\n    long start = 1, end = n;\n    while (start <= end) {\n        long mid = (start + end) / 2;\n        if (mid * mid == n) return true;\n        if (mid * mid < n) start = mid + 1;\n        else end = mid - 1;\n    }\n    return false;",
    "    long sqrt_n = (long)(sqrt(n));\n    return (sqrt_n*sqrt_n == n);",
    "    long x = n;\n    while (x * x > n) {\n        x = (x + n / x) / 2;\n    }\n    return x * x == n;",
    "    if (n < 0) return false;\n    long tst = (long)(sqrt(n) + 0.5);\n    return tst*tst == n;",
    "    long sqrt_n = sqrt(n);\n    return (sqrt_n * sqrt_n == n);",
    "    if (n < 0) {\n        return false;\n    }\n    long tst = (long)(sqrt(n) + 0.5);\n    return tst*tst == n;",
    "    // Base cases\n    if (n <= 1)\n        return true;\n    // Do Binary Search for floor(sqrt(x))\n    long long start = 1, end = n, ans;\n    while (start <= end) {\n        long long mid = (start + end) / 2;\n        if (mid*mid == n)\n            return true;\n        if (mid*mid < n) {\n            start = mid + 1;\n            ans = mid;\n        }\n        else\n            end = mid-1;\n    }\n    return false;",
    "    if (n < 0) return false;\n    if (n == 0 || n == 1) return true;\n    long t = n / 2;\n    while (t * t > n) {\n        t = (t + n / t) / 2;\n    }\n    return t * t == n;",
    "    if (n < 0) return false;\n    long tst = (long)(sqrt(n) + 0.5);\n    return tst*tst == n;",
    "    long s = sqrt(n);\n    return (s*s == n);",
    "    if (n < 0) return false;\n    if (n == 0 || n == 1) return true;\n    long t = n / 2;\n    while (t * t > n) {\n        t = (t + n / t) / 2;\n    }\n    return t * t == n;",
    "    if (n < 0) {\n        return false;\n    }\n    if (n == 0 || n == 1) {\n        return true;\n    }\n    long low = 1;\n    long high = n;\n    while (low <= high) {\n        long mid = low + (high - low) / 2;\n        long mid_sq = mid * mid;\n        if (mid_sq == n) {\n            return true;\n        } else if (mid_sq < n) {\n            low = mid + 1;\n        } else {\n            high = mid - 1;\n        }\n    }\n    return false;",
    "    long x = n;\n    while (x * x > n) {\n        x = (x + n / x) / 2;\n    }\n    return x * x == n;",
    "    if (n < 0) return false;\n    if (n == 0 || n == 1) return true;\n    long t = n / 2;\n    while (t * t > n) {\n        t = (t + n / t) / 2;\n    }\n    return t * t == n;",
    "    long long i = 1;\n    while (i*i < n) {\n        i++;\n    }\n    return i*i == n;",
    "    if (n < 0) return false;\n    if (n == 0 || n == 1) return true;\n    long t = n / 2;\n    while (t * t > n) {\n        t = (t + n / t) / 2;\n    }\n    return t * t == n;",
    "    if (n < 0) return false;\n    if (n == 0 || n == 1) return true;\n    long t = n;\n    while (t > n / t) {\n        t = (t + n / t) / 2;\n    }\n    return t * t == n;",
    "    if (n < 0) return false;\n    long tst = (long)(sqrt(n) + 0.5);\n    return tst*tst == n;",
    "    if(n<0) return false;\n    if(n==0 || n==1) return true;\n    long s = 1, e = n;\n    while(s<=e) {\n        long mid = (s+e)/2;\n        if(mid*mid==n) return true;\n        else if(mid*mid<n) s = mid+1;\n        else e = mid-1;\n    }\n    return false;",
    "    long x = sqrt(n);\n    return (x*x == n);",
    "    long long int sqr = sqrt(n);\n    return (sqr*sqr == n);",
    "    if(n < 0) return false;\n    if(n == 0 || n == 1) return true;\n    long start = 1, end = n;\n    while(start <= end) {\n        long mid = (start + end) / 2;\n        if(mid * mid == n) return true;\n        else if(mid * mid > n) end = mid - 1;\n        else start = mid + 1;\n    }\n    return false;",
    "    if (n < 0) return false;\n    if (n == 0 || n == 1) return true;\n    long t = n / 2;\n    while (t * t > n) {\n        t = (t + n / t) / 2;\n    }\n    return t * t == n;",
    "    if (n < 0) return false;\n    if (n == 0 || n == 1) return true;\n    long t = n;\n    while (t > n / t) {\n        t = (t + n / t) / 2;\n    }\n    return t * t == n;",
    "    if (n < 0) return false;\n    long tst = (long)(sqrt(n) + 0.5);\n    return tst*tst == n;",
    "    if (n < 0) {\n        return false;\n    }\n    long tst = (long)(sqrt(n) + 0.5);\n    return tst*tst == n;",
    "    if (n < 0) {\n        return false;\n    }\n    if (n == 0 || n == 1) {\n        return true;\n    }\n    long start = 1;\n    long end = n;\n    while (start <= end) {\n        long mid = (start + end) / 2;\n        if (mid * mid == n) {\n            return true;\n        }\n        if (mid * mid < n) {\n            start = mid + 1;\n        } else {\n            end = mid - 1;\n        }\n    }\n    return false;",
    "    if (n < 0)\n        return false;\n    if (n == 0 || n == 1)\n        return true;\n    long t = n / 2;\n    while (t * t > n) {\n        t = (t + n / t) / 2;\n    }\n    return t * t == n;",
    "    long sqrt_n = sqrt(n);\n    return (sqrt_n*sqrt_n == n);",
    "    long s = sqrt(n);\n    return (s*s == n);",
    "    if (n < 0)\n        return false;\n    if (n == 0 || n == 1)\n        return true;\n    long t = n;\n    while (t > n / t) {\n        t = (t + n / t) / 2;\n    }\n    return t * t == n;",
    "    if(n < 0) return false;\n    if(n == 0 || n == 1) return true;\n    long long int start = 1, end = n, mid;\n    while(start <= end) {\n        mid = start + (end - start) / 2;\n        if(mid * mid == n) return true;\n        else if(mid * mid < n) start = mid + 1;\n        else end = mid - 1;\n    }\n    return false;",
    "    long long sqrt_n = sqrt(n);\n    return (sqrt_n * sqrt_n == n);",
    "    if (n < 0) return false;\n    long tst = (long)(sqrt(n) + 0.5);\n    return tst*tst == n;",
    "    long long int sqrt_n = sqrt(n);\n    return (sqrt_n * sqrt_n == n);",
    "    long long i = 1;\n    while (i * i < n) {\n        i++;\n    }\n    return i * i == n;",
    "    long long sqrt_n = sqrt(n);\n    return (sqrt_n*sqrt_n == n);",
    "    long i = 1;\n    while(i*i < n) {\n        i++;\n    }\n    return i*i == n;",
    "    if (n < 0) return false;\n    if (n == 0 || n == 1) return true;\n    long t = n / 2;\n    while (t * t > n) {\n        t = (t + n / t) / 2;\n    }\n    return t * t == n;",
    "    if (n < 0) {\n        return false;\n    }\n    if (n == 0 || n == 1) {\n        return true;\n    }\n    long start = 1;\n    long end = n;\n    while (start <= end) {\n        long mid = (start + end) / 2;\n        if (mid * mid == n) {\n            return true;\n        }\n        if (mid * mid < n) {\n            start = mid + 1;\n        } else {\n            end = mid - 1;\n        }\n    }\n    return false;",
    "    if (n < 0) {\n        return false;\n    }\n    long tst = (long)(sqrt(n) + 0.5);\n    return tst*tst == n;",
    "    long s = sqrt(n);\n    return (s*s == n);",
    "    long long i = 1;\n    while (i*i < n) {\n        i++;\n    }\n    return i*i == n;",
    "    if (n < 0) return false;\n    if (n == 0 || n == 1) return true;\n    long t = n / 2;\n    while (t * t > n) {\n        t = (t + n / t) / 2;\n    }\n    return t * t == n;",
    "    long s = sqrt(n);\n    return (s*s == n);",
    "    if (n < 0)\n        return false;\n    if (n == 0 || n == 1)\n        return true;\n    long t = n / 2;\n    while (t * t > n) {\n        t = (t + n / t) / 2;\n    }\n    return t * t == n;",
    "    if (n < 0) return false;\n    if (n == 0 || n == 1) return true;\n    long long int i = 1;\n    long long int sum = 1;\n    while (sum < n) {\n        i += 2;\n        sum += i;\n    }\n    return sum == n;",
    "    long long i = 1;\n    while (i * i <= n) {\n        if (i * i == n) {\n            return true;\n        }\n        i++;\n    }\n    return false;",
    "    if(n < 0) return false;\n    if(n == 0 || n == 1) return true;\n    long t = n;\n    while(t > n/t) {\n        t = (t + n/t)/2;\n    }\n    return t*t == n;",
    "    if(n < 0) return false;\n    if(n == 0 || n == 1) return true;\n    long start = 1, end = n;\n    while(start <= end) {\n        long mid = (start + end) / 2;\n        if(mid * mid == n) return true;\n        if(mid * mid < n) start = mid + 1;\n        else end = mid - 1;\n    }\n    return false;",
    "    if (n < 0) return false;\n    if (n == 0 || n == 1) return true;\n    long t = n;\n    while (t > n / t) {\n        t = (t + n / t) / 2;\n    }\n    return t * t == n;",
    "    if (n < 0) return false;\n    if (n == 0 || n == 1) return true;\n    long t = n / 2;\n    while (t * t > n) {\n        t = (t + n / t) / 2;\n    }\n    return t * t == n;",
    "    if (n < 0) return false;\n    if (n == 0 || n == 1) return true;\n    long long int l = 0, r = n;\n    while (l <= r) {\n        long long int mid = l + (r - l) / 2;\n        long long int mid_sq = mid * mid;\n        if (mid_sq == n) return true;\n        else if (mid_sq < n) l = mid + 1;\n        else r = mid - 1;\n    }\n    return false;",
    "    if (n < 0) return false;\n    if (n == 0 || n == 1) return true;\n    long t = n / 2;\n    while (t * t > n) {\n        t = (t + n / t) / 2;\n    }\n    return t * t == n;",
    "    if (n < 0) return false;\n    if (n == 0 || n == 1) return true;\n    long t = n;\n    while (t > n/t) {\n        t = (t + n/t) / 2;\n    }\n    return t*t == n;",
    "    if (n < 0) return false;\n    if (n == 0 || n == 1) return true;\n    long t = n / 2;\n    while (t * t > n) {\n        t = (t + n / t) / 2;\n    }\n    return t * t == n;",
    "    long long sq = sqrt(n);\n    return (sq*sq == n);",
    "    if (n < 0) return false;\n    if (n == 0 || n == 1) return true;\n    long long int l = 0, r = n;\n    while (l <= r) {\n        long long int mid = l + (r - l) / 2;\n        if (mid * mid == n) return true;\n        else if (mid * mid < n) l = mid + 1;\n        else r = mid - 1;\n    }\n    return false;",
    "    if (n < 0) return false;\n    long tst = (long)(sqrt(n) + 0.5);\n    return tst*tst == n;",
    "    long long low = 1, high = n;\n    while (low <= high) {\n        long long mid = low + (high - low) / 2;\n        long long val = mid * mid;\n        if (val == n) {\n            return true;\n        } else if (val < n) {\n            low = mid + 1;\n        } else {\n            high = mid - 1;\n        }\n    }\n    return false;",
    "    long x = n;\n    while(x*x > n) {\n        x = (x + n/x) >> 1;\n    }\n    return x*x == n;",
    "    if (n < 0) return false;\n    if (n == 0 || n == 1) return true;\n    long t = n / 2;\n    while (t * t > n) {\n        t = (t + n / t) / 2;\n    }\n    return t * t == n;",
    "    if (n < 0) {\n        return false;\n    }\n    long tst = (long)(sqrt(n) + 0.5);\n    return tst*tst == n;",
    "    long long i = 1;\n    while(i*i < n) {\n        i++;\n    }\n    return i*i == n;",
    "    if(n < 0) return false;\n    if(n == 0 || n == 1) return true;\n    long t = n;\n    while(t > n/t) {\n        t = (t + n/t)/2;\n    }\n    return t*t == n;"
  ]
}
{
  "name": "mbpp_273_substract_elements",
  "language": "cpp",
  "prompt": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that takes in two tuples and subtracts the elements of the first tuple by the elements of the second tuple with the same index.\nlong substract_elements(long test_tup1, long test_tup2) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_273_substract_elements.py",
  "prompt_terminology": "verbatim",
  "tests": "}\nint main() {\n    auto candidate = substract_elements;\n    assert(candidate(std::make_tuple(10, 4, 5), std::make_tuple(2, 5, 18)) == std::make_tuple(8, -1, -13));\n    assert(candidate(std::make_tuple(11, 2, 3), std::make_tuple(24, 45, 16)) == std::make_tuple(-13, -43, -13));\n    assert(candidate(std::make_tuple(7, 18, 9), std::make_tuple(10, 11, 12)) == std::make_tuple(-3, 7, -3));\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    long result = test_tup1 - test_tup2;\n    return result;",
    "    long result = test_tup1 - test_tup2;\n    return result;",
    "  return test_tup1 - test_tup2;",
    "    long result = test_tup1 - test_tup2;\n    return result;",
    "    return test_tup1 - test_tup2;",
    "    long result = test_tup1 - test_tup2;\n    return result;",
    "    return test_tup1 - test_tup2;",
    "    return test_tup1 - test_tup2;",
    "    long test_tup3;\n    test_tup3 = test_tup1 - test_tup2;\n    return test_tup3;",
    "    long test_tup3;\n    test_tup3 = test_tup1 - test_tup2;\n    return test_tup3;",
    "    return test_tup1 - test_tup2;",
    "    long result = test_tup1 - test_tup2;\n    return result;",
    "    return test_tup1 - test_tup2;",
    "    long test_tup3 = test_tup1 - test_tup2;\n    return test_tup3;",
    "    return test_tup1 - test_tup2;",
    "    return test_tup1 - test_tup2;",
    "    return test_tup1 - test_tup2;",
    "    return test_tup1 - test_tup2;",
    "    return test_tup1 - test_tup2;",
    "    return test_tup1 - test_tup2;"
  ]
}
{
  "name": "mbpp_398_sum_of_digits",
  "language": "cpp",
  "prompt": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to compute the sum of digits of each number of a given list.\nlong sum_of_digits(std::any nums) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_398_sum_of_digits.py",
  "prompt_terminology": "verbatim",
  "tests": "}\nint main() {\n    auto candidate = sum_of_digits;\n    assert(candidate((std::any({(long)10, (long)2, (long)56}))) == (14));\n    assert(candidate((std::any({(std::vector<long>)std::vector<std::any>({10, 20, 4, 5, \"b\", 70, \"a\"})}))) == (19));\n    assert(candidate((std::any({(long)10, (long)20, (long)-4, (long)5, (long)-70}))) == (19));\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "  long sum = 0;\n  for (auto n : nums) {\n    sum += n;\n  }\n  return sum;",
    "    long sum = 0;\n    for (auto num : nums) {\n        std::string str = std::to_string(num);\n        for (auto c : str) {\n            sum += c - '0';\n        }\n    }\n    return sum;",
    "    long sum = 0;\n    for(auto i : nums) {\n        sum += i;\n    }\n    return sum;",
    "    long sum = 0;\n    for (auto i : nums) {\n        sum += i;\n    }\n    return sum;",
    "    long sum = 0;\n    for(auto num: nums) {\n        sum += num;\n    }\n    return sum;",
    "    long sum = 0;\n    for (auto i : nums) {\n        sum += i;\n    }\n    return sum;",
    "    long sum = 0;\n    for(auto num : nums) {\n        sum += num;\n    }\n    return sum;",
    "    long sum = 0;\n    for (auto num : nums) {\n        sum += num;\n    }\n    return sum;",
    "    long sum = 0;\n    for (auto num: nums) {\n        sum += num;\n    }\n    return sum;",
    "    long sum = 0;\n    for(int i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n    }\n    return sum;",
    "    long sum = 0;\n    for (auto num : nums) {\n        std::string str = std::to_string(num);\n        for (auto ch : str) {\n            sum += ch - '0';\n        }\n    }\n    return sum;",
    "    long sum = 0;\n    for (auto num : nums) {\n        std::string str = std::to_string(num);\n        for (auto c : str) {\n            sum += c - '0';\n        }\n    }\n    return sum;",
    "    long sum = 0;\n    for (auto i : nums) {\n        sum += i;\n    }\n    return sum;",
    "    long sum = 0;\n    for (auto num : nums) {\n        sum += num;\n    }\n    return sum;",
    "    long sum = 0;\n    for(int i=0; i<nums.size(); i++)\n    {\n        int num = nums[i];\n        while(num!=0)\n        {\n            sum += num%10;\n            num /= 10;\n        }\n    }\n    return sum;",
    "    long sum = 0;\n    for (auto num : nums) {\n        sum += num;\n    }\n    return sum;",
    "    long sum = 0;\n    for (auto i : nums) {\n        sum += i;\n    }\n    return sum;",
    "    long sum = 0;\n    for(auto i : nums){\n        sum += i;\n    }\n    return sum;",
    "    long sum = 0;\n    for (auto num : nums) {\n        sum += num;\n    }\n    return sum;",
    "    long sum = 0;\n    for (auto num : nums) {\n        std::string str = std::to_string(num);\n        for (auto ch : str) {\n            sum += ch - '0';\n        }\n    }\n    return sum;"
  ]
}
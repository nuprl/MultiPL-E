{
  "name": "mbpp_294_max_val",
  "language": "cpp",
  "prompt": "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_std_string_long{\n    std::string f0;\n    long f1;    Union_std_string_long(std::string _f0) : f0(_f0) {}\n    Union_std_string_long(long _f1) : f1(_f1) {}\n    ~Union_std_string_long() {}\n    bool operator==(std::string f) {\n        return f0 == f ;\n    }    bool operator==(long f) {\n        return f1 == f ;\n    }\n};\n// Write a function to find the maximum value in a given heterogeneous list.\nlong max_val(std::vector<Union_std_string_long> listval) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_294_max_val.py",
  "prompt_terminology": "verbatim",
  "tests": "}\nint main() {\n    auto candidate = max_val;\n    assert(candidate((std::vector<Union_std_string_long>({(std::string)\"Python\", (std::string)3, (std::string)2, (std::string)4, (std::string)5, (std::string)\"version\"}))) == (5));\n    assert(candidate((std::vector<Union_std_string_long>({(std::string)\"Python\", (std::string)15, (std::string)20, (std::string)25}))) == (25));\n    assert(candidate((std::vector<Union_std_string_long>({(std::string)\"Python\", (std::string)30, (std::string)20, (std::string)40, (std::string)50, (std::string)\"version\"}))) == (50));\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    long max = 0;\n    for (int i = 0; i < listval.size(); i++) {\n        if (listval[i].f1 > max) {\n            max = listval[i].f1;\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (int i = 0; i < listval.size(); i++) {\n        if (listval[i].f0.size() > max) {\n            max = listval[i].f0.size();\n        }\n        if (listval[i].f1 > max) {\n            max = listval[i].f1;\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (auto i = listval.begin(); i != listval.end(); i++) {\n        if (i->f1 > max) {\n            max = i->f1;\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (auto it = listval.begin(); it != listval.end(); ++it) {\n        if (it->f1 > max) {\n            max = it->f1;\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (int i = 0; i < listval.size(); i++) {\n        if (listval[i].f1 > max) {\n            max = listval[i].f1;\n        }\n    }\n    return max;",
    "    long max_val = 0;\n    for(auto i : listval) {\n        if(i.f1 > max_val) {\n            max_val = i.f1;\n        }\n    }\n    return max_val;",
    "    long max = 0;\n    for (auto i : listval) {\n        if (i.f0.size() > max) {\n            max = i.f0.size();\n        }\n        if (i.f1 > max) {\n            max = i.f1;\n        }\n    }\n    return max;",
    "    long max = listval[0].f1;\n    for (int i = 1; i < listval.size(); i++) {\n        if (listval[i].f1 > max) {\n            max = listval[i].f1;\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (auto i : listval) {\n        if (i.f1 > max) {\n            max = i.f1;\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (auto i : listval) {\n        if (i.f1 > max) {\n            max = i.f1;\n        }\n    }\n    return max;",
    "    long max = 0;\n    for(int i = 0; i < listval.size(); i++) {\n        if(listval[i].f1 > max) {\n            max = listval[i].f1;\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (int i = 0; i < listval.size(); i++) {\n        if (listval[i].f1 > max) {\n            max = listval[i].f1;\n        }\n    }\n    return max;",
    "    long max_val = 0;\n    for (int i = 0; i < listval.size(); i++) {\n        if (listval[i].f0.size() > 0) {\n            if (listval[i].f0.size() > max_val) {\n                max_val = listval[i].f0.size();\n            }\n        }\n        if (listval[i].f1 > max_val) {\n            max_val = listval[i].f1;\n        }\n    }\n    return max_val;",
    "    long max = 0;\n    for (auto i : listval) {\n        if (i.f0 != \"\") {\n            if (i.f0.length() > max) {\n                max = i.f0.length();\n            }\n        } else {\n            if (i.f1 > max) {\n                max = i.f1;\n            }\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (auto i : listval) {\n        if (i.f0.length() > max) {\n            max = i.f0.length();\n        } else if (i.f1 > max) {\n            max = i.f1;\n        }\n    }\n    return max;",
    "    long max = 0;\n    for(auto i : listval) {\n        if(i.f1 > max) {\n            max = i.f1;\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (int i = 0; i < listval.size(); i++) {\n        if (listval[i].f1 > max) {\n            max = listval[i].f1;\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (auto i : listval) {\n        if (i.f0.length() > max) {\n            max = i.f0.length();\n        }\n        if (i.f1 > max) {\n            max = i.f1;\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (int i = 0; i < listval.size(); i++) {\n        if (listval[i].f1 > max) {\n            max = listval[i].f1;\n        }\n    }\n    return max;",
    "    long max = 0;\n    for(int i = 0; i < listval.size(); i++) {\n        if(listval[i].f0.length() > max) {\n            max = listval[i].f0.length();\n        }\n        if(listval[i].f1 > max) {\n            max = listval[i].f1;\n        }\n    }\n    return max;",
    "    long max = 0;\n    for(int i=0;i<listval.size();i++){\n        if(listval[i].f1 > max){\n            max = listval[i].f1;\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (auto i : listval) {\n        if (i.f1 > max) {\n            max = i.f1;\n        }\n    }\n    return max;",
    "    long max = 0;\n    for(int i=0;i<listval.size();i++){\n        if(listval[i].f0.length() > max){\n            max = listval[i].f0.length();\n        }\n        if(listval[i].f1 > max){\n            max = listval[i].f1;\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (auto i = listval.begin(); i != listval.end(); i++) {\n        if (i->f0.length() > max) {\n            max = i->f0.length();\n        }\n        else if (i->f1 > max) {\n            max = i->f1;\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (auto i : listval) {\n        if (i.f0.length() > max) {\n            max = i.f0.length();\n        }\n        if (i.f1 > max) {\n            max = i.f1;\n        }\n    }\n    return max;",
    "    long max_val = 0;\n    for(int i = 0; i < listval.size(); i++) {\n        if(listval[i].f1 > max_val) {\n            max_val = listval[i].f1;\n        }\n    }\n    return max_val;",
    "    long max = 0;\n    for (int i = 0; i < listval.size(); i++) {\n        if (listval[i].f1 > max) {\n            max = listval[i].f1;\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (int i = 0; i < listval.size(); i++) {\n        if (listval[i].f1 > max) {\n            max = listval[i].f1;\n        }\n    }\n    return max;",
    "    long max = 0;\n    for(int i = 0; i < listval.size(); i++) {\n        if(listval[i].f0.length() > max) {\n            max = listval[i].f0.length();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (int i = 0; i < listval.size(); i++) {\n        if (listval[i].f0.length() > max) {\n            max = listval[i].f0.length();\n        }\n        if (listval[i].f1 > max) {\n            max = listval[i].f1;\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (auto i : listval) {\n        if (i.f1 > max) {\n            max = i.f1;\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (int i = 0; i < listval.size(); i++) {\n        if (listval[i].f1 > max) {\n            max = listval[i].f1;\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (auto i : listval) {\n        if (i.f1 > max) {\n            max = i.f1;\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (auto i : listval) {\n        if (i.f0 != \"\") {\n            if (i.f0.length() > max) {\n                max = i.f0.length();\n            }\n        } else {\n            if (i.f1 > max) {\n                max = i.f1;\n            }\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (auto i : listval) {\n        if (i.f1 > max) {\n            max = i.f1;\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (int i = 0; i < listval.size(); i++) {\n        if (listval[i].f1 > max) {\n            max = listval[i].f1;\n        }\n    }\n    return max;",
    "    long max = 0;\n    for(int i = 0; i < listval.size(); i++) {\n        if(listval[i].f1 > max) {\n            max = listval[i].f1;\n        }\n    }\n    return max;",
    "    long max = 0;\n    for(int i = 0; i < listval.size(); i++) {\n        if(listval[i].f1 > max) {\n            max = listval[i].f1;\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (auto it = listval.begin(); it != listval.end(); it++) {\n        if (it->f0.length() > max) {\n            max = it->f0.length();\n        }\n        else if (it->f1 > max) {\n            max = it->f1;\n        }\n    }\n    return max;",
    "    long max = 0;\n    for(int i = 0; i < listval.size(); i++) {\n        if(listval[i].f0.length() > max) {\n            max = listval[i].f0.length();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (auto i : listval) {\n        if (i.f0.length() > max) {\n            max = i.f0.length();\n        }\n        if (i.f1 > max) {\n            max = i.f1;\n        }\n    }\n    return max;",
    "    long max_val = 0;\n    for (auto i : listval) {\n        if (i.f1 > max_val) {\n            max_val = i.f1;\n        }\n    }\n    return max_val;",
    "    long max_val = 0;\n    for (auto it = listval.begin(); it != listval.end(); it++) {\n        if (it->f0.length() > max_val) {\n            max_val = it->f0.length();\n        } else if (it->f1 > max_val) {\n            max_val = it->f1;\n        }\n    }\n    return max_val;",
    "    long max = 0;\n    for(auto i : listval) {\n        if(i.f0.size() > max) {\n            max = i.f0.size();\n        }\n        if(i.f1 > max) {\n            max = i.f1;\n        }\n    }\n    return max;",
    "    long max = 0;\n    for(int i = 0; i < listval.size(); i++) {\n        if(listval[i].f1 > max) {\n            max = listval[i].f1;\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (auto i : listval) {\n        if (i.f1 > max) {\n            max = i.f1;\n        }\n    }\n    return max;",
    "    long max = listval[0].f1;\n    for (int i = 1; i < listval.size(); i++) {\n        if (listval[i].f1 > max) {\n            max = listval[i].f1;\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (int i = 0; i < listval.size(); i++) {\n        if (listval[i].f1 > max) {\n            max = listval[i].f1;\n        }\n    }\n    return max;",
    "    long max = 0;\n    for(int i = 0; i < listval.size(); i++) {\n        if(listval[i].f0.length() > max) {\n            max = listval[i].f0.length();\n        }\n        if(listval[i].f1 > max) {\n            max = listval[i].f1;\n        }\n    }\n    return max;",
    "    long max = 0;\n    for(auto i : listval) {\n        if(i.f0.length() > max) {\n            max = i.f0.length();\n        }\n        if(i.f1 > max) {\n            max = i.f1;\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (auto i : listval) {\n        if (i.f0.size() > max) {\n            max = i.f0.size();\n        }\n        if (i.f1 > max) {\n            max = i.f1;\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (auto i : listval) {\n        if (i.f0 != \"\") {\n            if (i.f0.length() > max) {\n                max = i.f0.length();\n            }\n        } else {\n            if (i.f1 > max) {\n                max = i.f1;\n            }\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (int i = 0; i < listval.size(); i++) {\n        if (listval[i].f0.length() > max) {\n            max = listval[i].f0.length();\n        }\n        if (listval[i].f1 > max) {\n            max = listval[i].f1;\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (int i = 0; i < listval.size(); i++) {\n        if (listval[i].f1 > max) {\n            max = listval[i].f1;\n        }\n    }\n    return max;",
    "    long max = 0;\n    for(auto i : listval) {\n        if(i.f0.length() > max) {\n            max = i.f0.length();\n        }\n        if(i.f1 > max) {\n            max = i.f1;\n        }\n    }\n    return max;",
    "    long max = listval[0].f1;\n    for (int i = 1; i < listval.size(); i++) {\n        if (listval[i].f1 > max) {\n            max = listval[i].f1;\n        }\n    }\n    return max;",
    "    long max = 0;\n    for(int i = 0; i < listval.size(); i++) {\n        if(listval[i].f1 > max) {\n            max = listval[i].f1;\n        }\n    }\n    return max;",
    "    long max = 0;\n    for(int i = 0; i < listval.size(); i++) {\n        if(listval[i].f1 > max) {\n            max = listval[i].f1;\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (auto i : listval) {\n        if (i.f1 > max) {\n            max = i.f1;\n        }\n    }\n    return max;",
    "    long max_val = 0;\n    for(auto it = listval.begin(); it != listval.end(); it++) {\n        if(it->f0.length() > max_val) {\n            max_val = it->f0.length();\n        }\n        if(it->f1 > max_val) {\n            max_val = it->f1;\n        }\n    }\n    return max_val;",
    "    long max = 0;\n    for (auto i : listval) {\n        if (i.f0.length() > max) {\n            max = i.f0.length();\n        }\n        if (i.f1 > max) {\n            max = i.f1;\n        }\n    }\n    return max;",
    "    long max_val = 0;\n    for(int i = 0; i < listval.size(); i++) {\n        if(listval[i].f1 > max_val) {\n            max_val = listval[i].f1;\n        }\n    }\n    return max_val;",
    "    long max_val = 0;\n    for (int i = 0; i < listval.size(); i++) {\n        if (listval[i].f1 > max_val) {\n            max_val = listval[i].f1;\n        }\n    }\n    return max_val;",
    "    long max = -1;\n    for (int i = 0; i < listval.size(); i++) {\n        if (listval[i].f1 > max) {\n            max = listval[i].f1;\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (int i = 0; i < listval.size(); i++) {\n        if (listval[i].f1 > max) {\n            max = listval[i].f1;\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (auto i : listval) {\n        if (i.f0.length() > max) {\n            max = i.f0.length();\n        }\n        if (i.f1 > max) {\n            max = i.f1;\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (int i = 0; i < listval.size(); i++) {\n        if (listval[i].f1 > max) {\n            max = listval[i].f1;\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (int i = 0; i < listval.size(); i++) {\n        if (listval[i].f0.length() > max) {\n            max = listval[i].f0.length();\n        }\n        if (listval[i].f1 > max) {\n            max = listval[i].f1;\n        }\n    }\n    return max;",
    "    long max = 0;\n    for(int i = 0; i < listval.size(); i++) {\n        if(listval[i].f1 > max) {\n            max = listval[i].f1;\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (int i = 0; i < listval.size(); i++) {\n        if (listval[i].f1 > max) {\n            max = listval[i].f1;\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (auto i : listval) {\n        if (i.f1 > max) {\n            max = i.f1;\n        }\n    }\n    return max;",
    "    long max = 0;\n    for(auto i : listval) {\n        if(i.f1 > max) {\n            max = i.f1;\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (auto i : listval) {\n        if (i.f0.empty()) {\n            if (i.f1 > max) {\n                max = i.f1;\n            }\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (auto i : listval) {\n        if (i.f0.size() > max) {\n            max = i.f0.size();\n        }\n        if (i.f1 > max) {\n            max = i.f1;\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (int i = 0; i < listval.size(); i++) {\n        if (listval[i].f0.size() > 0) {\n            if (max < listval[i].f0.size()) {\n                max = listval[i].f0.size();\n            }\n        } else {\n            if (max < listval[i].f1) {\n                max = listval[i].f1;\n            }\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (int i = 0; i < listval.size(); i++) {\n        if (listval[i].f0.length() > max) {\n            max = listval[i].f0.length();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (auto i : listval) {\n        if (i.f0 != \"\") {\n            if (max < i.f0.length()) {\n                max = i.f0.length();\n            }\n        }\n        else if (i.f1 != 0) {\n            if (max < i.f1) {\n                max = i.f1;\n            }\n        }\n    }\n    return max;",
    "    long max = 0;\n    for(auto i : listval) {\n        if(i.f0.size() > max) {\n            max = i.f0.size();\n        }\n        if(i.f1 > max) {\n            max = i.f1;\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (auto it = listval.begin(); it != listval.end(); ++it) {\n        if (it->f0 != \"\") {\n            if (it->f0.length() > max) {\n                max = it->f0.length();\n            }\n        } else {\n            if (it->f1 > max) {\n                max = it->f1;\n            }\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (int i = 0; i < listval.size(); i++) {\n        if (listval[i].f0.length() > max) {\n            max = listval[i].f0.length();\n        }\n        if (listval[i].f1 > max) {\n            max = listval[i].f1;\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (int i = 0; i < listval.size(); i++) {\n        if (listval[i].f1 > max) {\n            max = listval[i].f1;\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (auto i : listval) {\n        if (i.f1 > max) {\n            max = i.f1;\n        }\n    }\n    return max;",
    "    long max = listval[0].f1;\n    for (int i = 1; i < listval.size(); i++) {\n        if (listval[i].f1 > max) {\n            max = listval[i].f1;\n        }\n    }\n    return max;",
    "    long max = 0;\n    for(int i = 0; i < listval.size(); i++) {\n        if(listval[i].f1 > max) {\n            max = listval[i].f1;\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (auto i : listval) {\n        if (i.f0.length() > max) {\n            max = i.f0.length();\n        }\n        if (i.f1 > max) {\n            max = i.f1;\n        }\n    }\n    return max;",
    "    long max = 0;\n    for(int i = 0; i < listval.size(); i++) {\n        if(listval[i].f1 > max) {\n            max = listval[i].f1;\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (auto i : listval) {\n        if (i.f0 != \"\") {\n            if (max < i.f0.length()) {\n                max = i.f0.length();\n            }\n        } else {\n            if (max < i.f1) {\n                max = i.f1;\n            }\n        }\n    }\n    return max;",
    "    long max_val = 0;\n    for(int i = 0; i < listval.size(); i++) {\n        if(listval[i].f1 > max_val) {\n            max_val = listval[i].f1;\n        }\n    }\n    return max_val;",
    "    long max = 0;\n    for(int i = 0; i < listval.size(); i++) {\n        if(listval[i].f1 > max) {\n            max = listval[i].f1;\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (auto i : listval) {\n        if (i.f0 == \"\") {\n            if (i.f1 > max) {\n                max = i.f1;\n            }\n        }\n    }\n    return max;",
    "    long max = 0;\n    for(int i = 0; i < listval.size(); i++) {\n        if(listval[i].f0.length() > max) {\n            max = listval[i].f0.length();\n        }\n        if(listval[i].f1 > max) {\n            max = listval[i].f1;\n        }\n    }\n    return max;",
    "    long max = listval[0].f1;\n    for (int i = 1; i < listval.size(); i++) {\n        if (listval[i].f1 > max) {\n            max = listval[i].f1;\n        }\n    }\n    return max;",
    "    long max = 0;\n    for(auto i : listval){\n        if(i.f1 > max){\n            max = i.f1;\n        }\n    }\n    return max;",
    "    long max = 0;\n    for(int i = 0; i < listval.size(); i++) {\n        if(listval[i].f1 > max) {\n            max = listval[i].f1;\n        }\n    }\n    return max;",
    "    long max = 0;\n    for(int i = 0; i < listval.size(); i++) {\n        if(listval[i].f1 > max) {\n            max = listval[i].f1;\n        }\n    }\n    return max;",
    "    long max = 0;\n    for(int i = 0; i < listval.size(); i++) {\n        if(listval[i].f1 > max) {\n            max = listval[i].f1;\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (auto i : listval) {\n        if (i.f0.size() > 0) {\n            if (i.f0.size() > max) {\n                max = i.f0.size();\n            }\n        } else {\n            if (i.f1 > max) {\n                max = i.f1;\n            }\n        }\n    }\n    return max;",
    "    long max_val = 0;\n    for (auto i : listval) {\n        if (i.f1 > max_val) {\n            max_val = i.f1;\n        }\n    }\n    return max_val;",
    "    long max = 0;\n    for(int i = 0; i < listval.size(); i++) {\n        if(listval[i].f1 > max) {\n            max = listval[i].f1;\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (auto i : listval) {\n        if (i.f0.size() > max) {\n            max = i.f0.size();\n        }\n        if (i.f1 > max) {\n            max = i.f1;\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (auto i : listval) {\n        if (i.f1 > max) {\n            max = i.f1;\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (auto i : listval) {\n        if (i.f0.size() > 0) {\n            if (i.f0.size() > max) {\n                max = i.f0.size();\n            }\n        } else {\n            if (i.f1 > max) {\n                max = i.f1;\n            }\n        }\n    }\n    return max;",
    "    long max = 0;\n    for(int i = 0; i < listval.size(); i++) {\n        if(listval[i].f1 > max) {\n            max = listval[i].f1;\n        }\n    }\n    return max;",
    "    long max = 0;\n    for(int i = 0; i < listval.size(); i++) {\n        if(listval[i].f1 > max) {\n            max = listval[i].f1;\n        }\n    }\n    return max;",
    "    long max_val = 0;\n    for (int i = 0; i < listval.size(); i++) {\n        if (listval[i].f1 > max_val) {\n            max_val = listval[i].f1;\n        }\n    }\n    return max_val;",
    "    long maxval = 0;\n    for(int i=0;i<listval.size();i++) {\n        if(listval[i].f1 > maxval) {\n            maxval = listval[i].f1;\n        }\n    }\n    return maxval;",
    "    long max = 0;\n    for (int i = 0; i < listval.size(); i++) {\n        if (listval[i].f1 > max) {\n            max = listval[i].f1;\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (auto i : listval) {\n        if (i.f1 > max) {\n            max = i.f1;\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (int i = 0; i < listval.size(); i++) {\n        if (listval[i].f1 > max) {\n            max = listval[i].f1;\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (auto i : listval) {\n        if (i.f1 > max) {\n            max = i.f1;\n        }\n    }\n    return max;",
    "    long max = 0;\n    for(int i = 0; i < listval.size(); i++) {\n        if(listval[i].f1 > max) {\n            max = listval[i].f1;\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (int i = 0; i < listval.size(); i++) {\n        if (listval[i].f1 > max) {\n            max = listval[i].f1;\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (auto i : listval) {\n        if (i.f1 > max) {\n            max = i.f1;\n        }\n    }\n    return max;",
    "    long max = 0;\n    for(int i = 0; i < listval.size(); i++) {\n        if(listval[i].f1 > max) {\n            max = listval[i].f1;\n        }\n    }\n    return max;",
    "    long max_val = 0;\n    for (auto i : listval) {\n        if (i.f0.length() > max_val) {\n            max_val = i.f0.length();\n        }\n        if (i.f1 > max_val) {\n            max_val = i.f1;\n        }\n    }\n    return max_val;",
    "    long max = 0;\n    for(auto i : listval) {\n        if(i.f1 > max) {\n            max = i.f1;\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (int i = 0; i < listval.size(); i++) {\n        if (listval[i].f1 > max) {\n            max = listval[i].f1;\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (auto i : listval) {\n        if (i.f0.size() > max) {\n            max = i.f0.size();\n        }\n        if (i.f1 > max) {\n            max = i.f1;\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (int i = 0; i < listval.size(); i++) {\n        if (listval[i].f1 > max) {\n            max = listval[i].f1;\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (int i = 0; i < listval.size(); i++) {\n        if (listval[i].f0.size() > 0) {\n            if (listval[i].f0.size() > max) {\n                max = listval[i].f0.size();\n            }\n        } else {\n            if (listval[i].f1 > max) {\n                max = listval[i].f1;\n            }\n        }\n    }\n    return max;",
    "    long max = listval[0].f1;\n    for(int i = 0; i < listval.size(); i++) {\n        if(listval[i].f1 > max) {\n            max = listval[i].f1;\n        }\n    }\n    return max;",
    "    long max_val = 0;\n    for (auto i : listval) {\n        if (i.f1 > max_val) {\n            max_val = i.f1;\n        }\n    }\n    return max_val;",
    "    long max = 0;\n    for(auto i : listval) {\n        if(i.f0.size() > max) {\n            max = i.f0.size();\n        }\n        if(i.f1 > max) {\n            max = i.f1;\n        }\n    }\n    return max;",
    "    long max = listval[0].f1;\n    for(int i = 1; i < listval.size(); i++) {\n        if(listval[i].f1 > max) {\n            max = listval[i].f1;\n        }\n    }\n    return max;",
    "    long max = listval[0].f1;\n    for (int i = 1; i < listval.size(); i++) {\n        if (listval[i].f1 > max) {\n            max = listval[i].f1;\n        }\n    }\n    return max;",
    "    long max = 0;\n    for(auto i : listval) {\n        if(i.f1 > max) {\n            max = i.f1;\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (int i = 0; i < listval.size(); i++) {\n        if (listval[i].f1 > max) {\n            max = listval[i].f1;\n        }\n    }\n    return max;",
    "    long max = 0;\n    for(int i = 0; i < listval.size(); i++) {\n        if(listval[i].f1 > max) {\n            max = listval[i].f1;\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (int i = 0; i < listval.size(); i++) {\n        if (listval[i].f1 > max) {\n            max = listval[i].f1;\n        }\n    }\n    return max;",
    "    long max = 0;\n    for(int i = 0; i < listval.size(); i++) {\n        if(listval[i].f1 > max) {\n            max = listval[i].f1;\n        }\n    }\n    return max;",
    "    long max = 0;\n    for(auto i : listval) {\n        if(i.f1 > max) {\n            max = i.f1;\n        }\n    }\n    return max;",
    "    long max = 0;\n    for(int i = 0; i < listval.size(); i++) {\n        if(listval[i].f1 > max) {\n            max = listval[i].f1;\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (int i = 0; i < listval.size(); i++) {\n        if (listval[i].f0.size() > 0) {\n            if (max < listval[i].f0.size()) {\n                max = listval[i].f0.size();\n            }\n        } else {\n            if (max < listval[i].f1) {\n                max = listval[i].f1;\n            }\n        }\n    }\n    return max;",
    "    long max = 0;\n    for(int i = 0; i < listval.size(); i++) {\n        if(listval[i].f1 > max) {\n            max = listval[i].f1;\n        }\n    }\n    return max;",
    "    long max = 0;\n    for(int i=0;i<listval.size();i++)\n    {\n        if(listval[i].f1 > max)\n            max = listval[i].f1;\n    }\n    return max;",
    "    long max = 0;\n    for(int i = 0; i < listval.size(); i++) {\n        if(listval[i].f1 > max) {\n            max = listval[i].f1;\n        }\n    }\n    return max;",
    "    long max = 0;\n    for(auto i : listval) {\n        if(i.f0.length() > max) {\n            max = i.f0.length();\n        }\n        if(i.f1 > max) {\n            max = i.f1;\n        }\n    }\n    return max;",
    "    long max = 0;\n    for(int i = 0; i < listval.size(); i++) {\n        if(listval[i].f1 > max) {\n            max = listval[i].f1;\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (int i = 0; i < listval.size(); i++) {\n        if (listval[i].f1 > max) {\n            max = listval[i].f1;\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (auto i : listval) {\n        if (i.f1 > max) {\n            max = i.f1;\n        }\n    }\n    return max;",
    "    long max = 0;\n    for(auto i:listval) {\n        if(i.f1 > max) {\n            max = i.f1;\n        }\n    }\n    return max;",
    "    long max = 0;\n    for(int i = 0; i < listval.size(); i++) {\n        if(listval[i].f1 > max) {\n            max = listval[i].f1;\n        }\n    }\n    return max;",
    "    long max = 0;\n    for(int i = 0; i < listval.size(); i++) {\n        if(listval[i].f1 > max) {\n            max = listval[i].f1;\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (int i = 0; i < listval.size(); i++) {\n        if (listval[i].f1 > max) {\n            max = listval[i].f1;\n        }\n    }\n    return max;",
    "    long max = 0;\n    for(int i = 0; i < listval.size(); i++) {\n        if(listval[i].f1 > max) {\n            max = listval[i].f1;\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (int i = 0; i < listval.size(); i++) {\n        if (listval[i].f1 > max) {\n            max = listval[i].f1;\n        }\n    }\n    return max;",
    "    long max = 0;\n    for(int i = 0; i < listval.size(); i++) {\n        if(listval[i].f1 > max) {\n            max = listval[i].f1;\n        }\n    }\n    return max;",
    "    long max = 0;\n    for(int i = 0; i < listval.size(); i++) {\n        if(listval[i].f1 > max) {\n            max = listval[i].f1;\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (auto i : listval) {\n        if (i.f0 == \"\") {\n            if (i.f1 > max) {\n                max = i.f1;\n            }\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (auto it = listval.begin(); it != listval.end(); it++) {\n        if (it->f1 > max) {\n            max = it->f1;\n        }\n    }\n    return max;",
    "    long max = 0;\n    for(auto i : listval) {\n        if(i.f1 > max) {\n            max = i.f1;\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (auto i = listval.begin(); i != listval.end(); i++) {\n        if (i->f0.length() > max) {\n            max = i->f0.length();\n        }\n        if (i->f1 > max) {\n            max = i->f1;\n        }\n    }\n    return max;",
    "    long max = 0;\n    for(int i = 0; i < listval.size(); i++) {\n        if(listval[i].f1 > max) {\n            max = listval[i].f1;\n        }\n    }\n    return max;",
    "    long max = 0;\n    for(int i = 0; i < listval.size(); i++) {\n        if(listval[i].f1 > max) {\n            max = listval[i].f1;\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (auto i = listval.begin(); i != listval.end(); i++) {\n        if (i->f0.length() > max) {\n            max = i->f0.length();\n        }\n        if (i->f1 > max) {\n            max = i->f1;\n        }\n    }\n    return max;",
    "    long max = 0;\n    for(int i = 0; i < listval.size(); i++) {\n        if(listval[i].f1 > max) {\n            max = listval[i].f1;\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (int i = 0; i < listval.size(); i++) {\n        if (listval[i].f1 > max) {\n            max = listval[i].f1;\n        }\n    }\n    return max;",
    "    long max = 0;\n    for(int i = 0; i < listval.size(); i++) {\n        if(listval[i].f1 > max) {\n            max = listval[i].f1;\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (auto val : listval) {\n        if (val.f0.length() > max) {\n            max = val.f0.length();\n        }\n        if (val.f1 > max) {\n            max = val.f1;\n        }\n    }\n    return max;",
    "    long max_val = 0;\n    for(auto i : listval) {\n        if(i.f0.size() > max_val) {\n            max_val = i.f0.size();\n        }\n        if(i.f1 > max_val) {\n            max_val = i.f1;\n        }\n    }\n    return max_val;",
    "    long max = 0;\n    for(int i = 0; i < listval.size(); i++) {\n        if(listval[i].f1 > max)\n            max = listval[i].f1;\n    }\n    return max;",
    "    long max = 0;\n    for (auto i : listval) {\n        if (i.f0.size() > max) {\n            max = i.f0.size();\n        }\n        if (i.f1 > max) {\n            max = i.f1;\n        }\n    }\n    return max;",
    "    long max = 0;\n    for(int i=0;i<listval.size();i++) {\n        if(listval[i].f1 > max) {\n            max = listval[i].f1;\n        }\n    }\n    return max;",
    "    long max = 0;\n    for(auto i : listval){\n        if(i.f0.size() > max){\n            max = i.f0.size();\n        }\n        if(i.f1 > max){\n            max = i.f1;\n        }\n    }\n    return max;",
    "    long max = 0;\n    for(int i = 0; i < listval.size(); i++) {\n        if(listval[i].f1 > max) {\n            max = listval[i].f1;\n        }\n    }\n    return max;",
    "    long max = 0;\n    for(auto i : listval) {\n        if(i.f0.length() > max) {\n            max = i.f0.length();\n        }\n        if(i.f1 > max) {\n            max = i.f1;\n        }\n    }\n    return max;",
    "    long max_val = 0;\n    for (auto i : listval) {\n        if (i.f1 > max_val) {\n            max_val = i.f1;\n        }\n    }\n    return max_val;",
    "    long max = 0;\n    for (int i = 0; i < listval.size(); i++) {\n        if (listval[i].f1 > max) {\n            max = listval[i].f1;\n        }\n    }\n    return max;",
    "    long max = listval[0].f1;\n    for (int i = 1; i < listval.size(); i++) {\n        if (listval[i].f1 > max) {\n            max = listval[i].f1;\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (int i = 0; i < listval.size(); i++) {\n        if (listval[i].f1 > max) {\n            max = listval[i].f1;\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (int i = 0; i < listval.size(); i++) {\n        if (listval[i].f1 > max) {\n            max = listval[i].f1;\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (auto i : listval) {\n        if (i.f1 > max) {\n            max = i.f1;\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (auto i : listval) {\n        if (i.f0.length() > max) {\n            max = i.f0.length();\n        }\n        if (i.f1 > max) {\n            max = i.f1;\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (auto i : listval) {\n        if (i.f0.size() > max) {\n            max = i.f0.size();\n        }\n        if (i.f1 > max) {\n            max = i.f1;\n        }\n    }\n    return max;",
    "    long max = 0;\n    for(int i = 0; i < listval.size(); i++) {\n        if(listval[i].f0.length() > max) {\n            max = listval[i].f0.length();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (auto i : listval) {\n        if (i.f0.length() > max) {\n            max = i.f0.length();\n        }\n        if (i.f1 > max) {\n            max = i.f1;\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (auto i : listval) {\n        if (i.f0 != \"\") {\n            if (i.f0.length() > max) {\n                max = i.f0.length();\n            }\n        } else {\n            if (i.f1 > max) {\n                max = i.f1;\n            }\n        }\n    }\n    return max;",
    "    long max = listval[0].f1;\n    for(int i=1; i<listval.size(); i++) {\n        if(listval[i].f1 > max) {\n            max = listval[i].f1;\n        }\n    }\n    return max;",
    "    long max = 0;\n    for(int i = 0; i < listval.size(); i++) {\n        if(listval[i].f1 > max) {\n            max = listval[i].f1;\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (auto i : listval) {\n        if (i.f0.size() > max) {\n            max = i.f0.size();\n        }\n        if (i.f1 > max) {\n            max = i.f1;\n        }\n    }\n    return max;",
    "    long max = 0;\n    for(int i = 0; i < listval.size(); i++) {\n        if(listval[i].f0.length() > max) {\n            max = listval[i].f0.length();\n        }\n        if(listval[i].f1 > max) {\n            max = listval[i].f1;\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (int i = 0; i < listval.size(); i++) {\n        if (listval[i].f1 > max) {\n            max = listval[i].f1;\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (int i = 0; i < listval.size(); i++) {\n        if (listval[i].f0.length() > max) {\n            max = listval[i].f0.length();\n        }\n        if (listval[i].f1 > max) {\n            max = listval[i].f1;\n        }\n    }\n    return max;",
    "    long max = 0;\n    for(auto i : listval) {\n        if(i.f1 > max) {\n            max = i.f1;\n        }\n    }\n    return max;",
    "    long max_val = 0;\n    for(int i=0;i<listval.size();i++) {\n        if(listval[i].f0.length() > max_val) {\n            max_val = listval[i].f0.length();\n        }\n        if(listval[i].f1 > max_val) {\n            max_val = listval[i].f1;\n        }\n    }\n    return max_val;",
    "    long max_val = 0;\n    for (auto i : listval) {\n        if (i.f1 > max_val) {\n            max_val = i.f1;\n        }\n    }\n    return max_val;",
    "    long max = 0;\n    for(int i = 0; i < listval.size(); i++) {\n        if(listval[i].f0.size() > max) {\n            max = listval[i].f0.size();\n        }\n        if(listval[i].f1 > max) {\n            max = listval[i].f1;\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (int i = 0; i < listval.size(); i++) {\n        if (listval[i].f1 > max) {\n            max = listval[i].f1;\n        }\n    }\n    return max;",
    "    long max = 0;\n    for(auto i : listval) {\n        if(i.f1 > max) {\n            max = i.f1;\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (int i = 0; i < listval.size(); i++) {\n        if (listval[i].f1 > max) {\n            max = listval[i].f1;\n        }\n    }\n    return max;",
    "    long max = 0;\n    for(int i = 0; i < listval.size(); i++) {\n        if(listval[i].f1 > max) {\n            max = listval[i].f1;\n        }\n    }\n    return max;",
    "    long max = 0;\n    for(int i = 0; i < listval.size(); i++) {\n        if(listval[i].f1 > max) {\n            max = listval[i].f1;\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (int i = 0; i < listval.size(); i++) {\n        if (listval[i].f0.length() > max) {\n            max = listval[i].f0.length();\n        }\n        if (listval[i].f1 > max) {\n            max = listval[i].f1;\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (int i = 0; i < listval.size(); i++) {\n        if (listval[i].f1 > max) {\n            max = listval[i].f1;\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (int i = 0; i < listval.size(); i++) {\n        if (listval[i].f1 > max) {\n            max = listval[i].f1;\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (auto i : listval) {\n        if (i.f1 > max) {\n            max = i.f1;\n        }\n    }\n    return max;",
    "    long max = 0;\n    for(auto i : listval){\n        if(i.f1 > max){\n            max = i.f1;\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (auto i : listval) {\n        if (i.f0.empty()) {\n            if (i.f1 > max) {\n                max = i.f1;\n            }\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (int i = 0; i < listval.size(); i++) {\n        if (listval[i].f0.length() > max) {\n            max = listval[i].f0.length();\n        }\n        if (listval[i].f1 > max) {\n            max = listval[i].f1;\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (int i = 0; i < listval.size(); i++) {\n        if (listval[i].f0.length() > max) {\n            max = listval[i].f0.length();\n        }\n        if (listval[i].f1 > max) {\n            max = listval[i].f1;\n        }\n    }\n    return max;"
  ]
}
{
  "name": "mbpp_160_find_solution",
  "language": "cpp",
  "prompt": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_160_find_solution.py",
  "prompt_terminology": "verbatim",
  "tests": "}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "results": [
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0 && b == 0) {\n        if (n == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (a == 0) {\n        if (n % b == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (b == 0) {\n        if (n % a == 0) {\n            return std::make_optional(n / a);\n        } else {\n            return std::nullopt;\n        }\n    }\n    long g = std::__gcd(a, b);\n    if (n % g != 0) {\n        return std::nullopt;\n    }\n    long a1 = a / g;\n    long b1 = b / g;\n    long n1 = n / g;\n    long x, y;\n    std::tie(x, y) = find_solution(b1, a1 % b1, n1).value();\n    return std::make_optional(b1 * x + (a1 % b1) * y);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1665510529,
      "stdout": "",
      "stderr": "/tmp/tmprbtzrsbs.cpp: In function \u2018std::optional<long int> find_solution(long int, long int, long int)\u2019:\n/tmp/tmprbtzrsbs.cpp:34:59: error: no match for \u2018operator=\u2019 (operand types are \u2018std::tuple<long int&, long int&>\u2019 and \u2018long int\u2019)\n   34 |     std::tie(x, y) = find_solution(b1, a1 % b1, n1).value();\n      |                                                           ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/functional:54,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/pstl/glue_algorithm_defs.h:13,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:71,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n                 from /tmp/tmprbtzrsbs.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/tuple:1205:7: note: candidate: \u2018std::tuple<_T1, _T2>& std::tuple<_T1, _T2>::operator=(typename std::conditional<__assignable<const _T1&, const _T2&>(), const std::tuple<_T1, _T2>&, const std::__nonesuch_no_braces&>::type) [with _T1 = long int&; _T2 = long int&; typename std::conditional<__assignable<const _T1&, const _T2&>(), const std::tuple<_T1, _T2>&, const std::__nonesuch_no_braces&>::type = const std::tuple<long int&, long int&>&]\u2019\n 1205 |       operator=(typename conditional<__assignable<const _T1&, const _T2&>(),\n      |       ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/tuple:1207:45: note:   no known conversion for argument 1 from \u2018long int\u2019 to \u2018std::conditional<true, const std::tuple<long int&, long int&>&, const std::__nonesuch_no_braces&>::type\u2019 {aka \u2018const std::tuple<long int&, long int&>&\u2019}\n 1205 |       operator=(typename conditional<__assignable<const _T1&, const _T2&>(),\n      |                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n 1206 |          const tuple&,\n      |          ~~~~~~~~~~~~~                       \n 1207 |          const __nonesuch_no_braces&>::type __in)\n      |",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (n % std::gcd(a, b) != 0) {\n        return std::nullopt;\n    }\n    long x = 0;\n    long y = n / b;\n    long g = std::gcd(a, b);\n    while (x * b <= n) {\n        if ((n - x * b) % a == 0) {\n            return std::make_optional(x);\n        }\n        x += b / g;\n    }\n    return std::nullopt;\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1665510529,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpldg0wygq.cpp:2:\n/tmp/tmpldg0wygq.cpp: In function \u2018int main()\u2019:\n/tmp/tmpldg0wygq.cpp:21:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   21 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpldg0wygq.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpldg0wygq.cpp:2:\n/tmp/tmpldg0wygq.cpp:21:60: note:   \u2018std::optional<long int>\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   21 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |                                                            ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n     ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0 && b == 0) {\n        if (n == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (a == 0) {\n        if (n % b == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (b == 0) {\n        if (n % a == 0) {\n            return std::make_optional(n / a);\n        } else {\n            return std::nullopt;\n        }\n    }\n    long d = std::__gcd(a, b);\n    if (n % d != 0) {\n        return std::nullopt;\n    }\n    long x0 = 0, y0 = 0;\n    std::tie(x0, y0) = find_solution(b / d, a / d, n / d).value();\n    return std::make_optional(std::make_tuple(y0, x0 - y0 * (a / b)));\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1665510529,
      "stdout": "",
      "stderr": "/tmp/tmpxlxet6pi.cpp: In function \u2018std::optional<long int> find_solution(long int, long int, long int)\u2019:\n/tmp/tmpxlxet6pi.cpp:31:65: error: no match for \u2018operator=\u2019 (operand types are \u2018std::tuple<long int&, long int&>\u2019 and \u2018long int\u2019)\n   31 |     std::tie(x0, y0) = find_solution(b / d, a / d, n / d).value();\n      |                                                                 ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/functional:54,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/pstl/glue_algorithm_defs.h:13,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:71,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n                 from /tmp/tmpxlxet6pi.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/tuple:1205:7: note: candidate: \u2018std::tuple<_T1, _T2>& std::tuple<_T1, _T2>::operator=(typename std::conditional<__assignable<const _T1&, const _T2&>(), const std::tuple<_T1, _T2>&, const std::__nonesuch_no_braces&>::type) [with _T1 = long int&; _T2 = long int&; typename std::conditional<__assignable<const _T1&, const _T2&>(), const std::tuple<_T1, _T2>&, const std::__nonesuch_no_braces&>::type = const std::tuple<long int&, long int&>&]\u2019\n 1205 |       operator=(typename conditional<__assignable<const _T1&, const _T2&>(),\n      |       ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/tuple:1207:45: note:   no known conversion for argument 1 from \u2018long int\u2019 to \u2018std::conditional<true, const std::tuple<long int&, long int&>&, const std::__nonesuch_no_braces&>::type\u2019 {aka \u2018const std::tuple<long int&, long int&>&\u2019}\n 1205 |       operator=(typename conditional<__assignable<const _T1&, const _T2&>(),\n      |                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n 1206 |          const tuple&,\n      |          ~~~~~~~~~~~~~                       \n 1207 |          const __nonesuch_no_braces&>::type _",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0 && b == 0) {\n        if (n == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (a == 0) {\n        if (n % b == 0) {\n            return std::make_optional(n / b);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (b == 0) {\n        if (n % a == 0) {\n            return std::make_optional(n / a);\n        } else {\n            return std::nullopt;\n        }\n    }\n    long g = std::__gcd(a, b);\n    if (n % g != 0) {\n        return std::nullopt;\n    }\n    long a1 = a / g;\n    long b1 = b / g;\n    long n1 = n / g;\n    long x, y;\n    std::tie(x, y) = find_solution(b1, a1 % b1, n1).value();\n    return std::make_optional(std::make_pair(y, x - (a1 / b1) * y));\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1665510529,
      "stdout": "",
      "stderr": "/tmp/tmpam7xkoz0.cpp: In function \u2018std::optional<long int> find_solution(long int, long int, long int)\u2019:\n/tmp/tmpam7xkoz0.cpp:34:59: error: no match for \u2018operator=\u2019 (operand types are \u2018std::tuple<long int&, long int&>\u2019 and \u2018long int\u2019)\n   34 |     std::tie(x, y) = find_solution(b1, a1 % b1, n1).value();\n      |                                                           ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/functional:54,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/pstl/glue_algorithm_defs.h:13,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:71,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n                 from /tmp/tmpam7xkoz0.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/tuple:1205:7: note: candidate: \u2018std::tuple<_T1, _T2>& std::tuple<_T1, _T2>::operator=(typename std::conditional<__assignable<const _T1&, const _T2&>(), const std::tuple<_T1, _T2>&, const std::__nonesuch_no_braces&>::type) [with _T1 = long int&; _T2 = long int&; typename std::conditional<__assignable<const _T1&, const _T2&>(), const std::tuple<_T1, _T2>&, const std::__nonesuch_no_braces&>::type = const std::tuple<long int&, long int&>&]\u2019\n 1205 |       operator=(typename conditional<__assignable<const _T1&, const _T2&>(),\n      |       ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/tuple:1207:45: note:   no known conversion for argument 1 from \u2018long int\u2019 to \u2018std::conditional<true, const std::tuple<long int&, long int&>&, const std::__nonesuch_no_braces&>::type\u2019 {aka \u2018const std::tuple<long int&, long int&>&\u2019}\n 1205 |       operator=(typename conditional<__assignable<const _T1&, const _T2&>(),\n      |                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n 1206 |          const tuple&,\n      |          ~~~~~~~~~~~~~                       \n 1207 |          const __nonesuch_no_braces&>::type __in)\n      |",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (n % std::gcd(a, b) != 0) {\n        return {};\n    }\n    long x = 0;\n    long y = n / b;\n    while (true) {\n        long r = n - b * y;\n        if (r % a == 0) {\n            x = r / a;\n            break;\n        }\n        y--;\n    }\n    return {x, y};\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1665510529,
      "stdout": "",
      "stderr": "/tmp/tmpjjrnt_kv.cpp: In function \u2018std::optional<long int> find_solution(long int, long int, long int)\u2019:\n/tmp/tmpjjrnt_kv.cpp:18:17: error: could not convert \u2018{x, y}\u2019 from \u2018<brace-enclosed initializer list>\u2019 to \u2018std::optional<long int>\u2019\n   18 |     return {x, y};\n      |                 ^\n      |                 |\n      |                 <brace-enclosed initializer list>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpjjrnt_kv.cpp:2:\n/tmp/tmpjjrnt_kv.cpp: In function \u2018int main()\u2019:\n/tmp/tmpjjrnt_kv.cpp:22:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   22 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpjjrnt_kv.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0) {\n        if (n == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    auto x = find_solution(b % a, a, n % a);\n    if (!x) {\n        return std::nullopt;\n    }\n    return std::make_optional(b / a * x.value() - n / a);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1665510529,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmphb4sl61k.cpp:2:\n/tmp/tmphb4sl61k.cpp: In function \u2018int main()\u2019:\n/tmp/tmphb4sl61k.cpp:20:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   20 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmphb4sl61k.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmphb4sl61k.cpp:2:\n/tmp/tmphb4sl61k.cpp:20:60: note:   \u2018std::optional<long int>\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   20 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |                                                            ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n     ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0 && b == 0) {\n        if (n == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (a == 0) {\n        if (n % b == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (b == 0) {\n        if (n % a == 0) {\n            return std::make_optional(n / a);\n        } else {\n            return std::nullopt;\n        }\n    }\n    long d = std::__gcd(a, b);\n    if (n % d != 0) {\n        return std::nullopt;\n    }\n    long x0, y0;\n    std::tie(x0, y0) = find_solution(b / d, a / d, n / d).value();\n    return std::make_optional(std::make_tuple(y0, x0 - y0 * (a / b)));\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1665510529,
      "stdout": "",
      "stderr": "/tmp/tmplhgy5liq.cpp: In function \u2018std::optional<long int> find_solution(long int, long int, long int)\u2019:\n/tmp/tmplhgy5liq.cpp:31:65: error: no match for \u2018operator=\u2019 (operand types are \u2018std::tuple<long int&, long int&>\u2019 and \u2018long int\u2019)\n   31 |     std::tie(x0, y0) = find_solution(b / d, a / d, n / d).value();\n      |                                                                 ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/functional:54,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/pstl/glue_algorithm_defs.h:13,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:71,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n                 from /tmp/tmplhgy5liq.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/tuple:1205:7: note: candidate: \u2018std::tuple<_T1, _T2>& std::tuple<_T1, _T2>::operator=(typename std::conditional<__assignable<const _T1&, const _T2&>(), const std::tuple<_T1, _T2>&, const std::__nonesuch_no_braces&>::type) [with _T1 = long int&; _T2 = long int&; typename std::conditional<__assignable<const _T1&, const _T2&>(), const std::tuple<_T1, _T2>&, const std::__nonesuch_no_braces&>::type = const std::tuple<long int&, long int&>&]\u2019\n 1205 |       operator=(typename conditional<__assignable<const _T1&, const _T2&>(),\n      |       ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/tuple:1207:45: note:   no known conversion for argument 1 from \u2018long int\u2019 to \u2018std::conditional<true, const std::tuple<long int&, long int&>&, const std::__nonesuch_no_braces&>::type\u2019 {aka \u2018const std::tuple<long int&, long int&>&\u2019}\n 1205 |       operator=(typename conditional<__assignable<const _T1&, const _T2&>(),\n      |                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n 1206 |          const tuple&,\n      |          ~~~~~~~~~~~~~                       \n 1207 |          const __nonesuch_no_braces&>::type _",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (n % gcd(a, b) != 0) {\n        return std::nullopt;\n    }\n    long x = 0, y = 0;\n    long g = gcd(a, b);\n    x = n / g * (b / g);\n    y = n / g * (a / g);\n    return std::make_tuple(x, y);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1665510529,
      "stdout": "",
      "stderr": "/tmp/tmpje9416xe.cpp: In function \u2018std::optional<long int> find_solution(long int, long int, long int)\u2019:\n/tmp/tmpje9416xe.cpp:5:13: error: \u2018gcd\u2019 was not declared in this scope; did you mean \u2018std::gcd\u2019?\n    5 |     if (n % gcd(a, b) != 0) {\n      |             ^~~\n      |             std::gcd\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:84,\n                 from /tmp/tmpje9416xe.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/numeric:131:5: note: \u2018std::gcd\u2019 declared here\n  131 |     gcd(_Mn __m, _Nn __n)\n      |     ^~~\n/tmp/tmpje9416xe.cpp:9:14: error: \u2018gcd\u2019 was not declared in this scope; did you mean \u2018std::gcd\u2019?\n    9 |     long g = gcd(a, b);\n      |              ^~~\n      |              std::gcd\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:84,\n                 from /tmp/tmpje9416xe.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/numeric:131:5: note: \u2018std::gcd\u2019 declared here\n  131 |     gcd(_Mn __m, _Nn __n)\n      |     ^~~\n/tmp/tmpje9416xe.cpp:12:27: error: could not convert \u2018std::make_tuple(_Elements&& ...) [with _Elements = {long int&, long int&}](y)\u2019 from \u2018std::tuple<long int, long int>\u2019 to \u2018std::optional<long int>\u2019\n   12 |     return std::make_tuple(x, y);\n      |            ~~~~~~~~~~~~~~~^~~~~~\n      |                           |\n      |                           std::tuple<long int, long int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpje9416xe.cpp:2:\n/tmp/tmpje9416xe.cpp: In function \u2018int main()\u2019:\n/tmp/tmpje9416xe.cpp:16:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   16 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0) {\n        if (n == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    auto x = find_solution(b % a, a, n % a);\n    if (!x) {\n        return std::nullopt;\n    }\n    return std::make_optional(b / a * x.value() - n / a);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1665510529,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmphb4sl61k.cpp:2:\n/tmp/tmphb4sl61k.cpp: In function \u2018int main()\u2019:\n/tmp/tmphb4sl61k.cpp:20:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   20 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmphb4sl61k.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmphb4sl61k.cpp:2:\n/tmp/tmphb4sl61k.cpp:20:60: note:   \u2018std::optional<long int>\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   20 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |                                                            ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n     ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    long x = 0;\n    long y = 0;\n    long gcd = std::gcd(a, b);\n    if (n % gcd != 0) {\n        return std::nullopt;\n    }\n    long x1 = 0;\n    long y1 = 1;\n    long x2 = 1;\n    long y2 = 0;\n    long q = 0;\n    long r = 0;\n    while (a != 0) {\n        q = b / a;\n        r = b % a;\n        x = x2 - q * x1;\n        y = y2 - q * y1;\n        b = a;\n        a = r;\n        x2 = x1;\n        x1 = x;\n        y2 = y1;\n        y1 = y;\n    }\n    x = x2;\n    y = y2;\n    return std::make_optional(x * (n / gcd));\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1665510529,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpdrbv9pu7.cpp:2:\n/tmp/tmpdrbv9pu7.cpp: In function \u2018int main()\u2019:\n/tmp/tmpdrbv9pu7.cpp:35:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   35 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpdrbv9pu7.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpdrbv9pu7.cpp:2:\n/tmp/tmpdrbv9pu7.cpp:35:60: note:   \u2018std::optional<long int>\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   35 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |                                                            ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n     ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n  if (a == 0 && b == 0) {\n    if (n == 0) {\n      return std::make_optional(0);\n    } else {\n      return std::nullopt;\n    }\n  }\n  if (a == 0) {\n    if (n % b == 0) {\n      return std::make_optional(0);\n    } else {\n      return std::nullopt;\n    }\n  }\n  if (b == 0) {\n    if (n % a == 0) {\n      return std::make_optional(n / a);\n    } else {\n      return std::nullopt;\n    }\n  }\n  long g = std::gcd(a, b);\n  if (n % g != 0) {\n    return std::nullopt;\n  }\n  long a1 = a / g;\n  long b1 = b / g;\n  long n1 = n / g;\n  std::optional<long> x = find_solution(b1, a1 % b1, n1);\n  if (x) {\n    return std::make_optional(x.value() * a1);\n  } else {\n    return std::nullopt;\n  }\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1665510529,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpmssw4vy0.cpp:2:\n/tmp/tmpmssw4vy0.cpp: In function \u2018int main()\u2019:\n/tmp/tmpmssw4vy0.cpp:42:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   42 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpmssw4vy0.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpmssw4vy0.cpp:2:\n/tmp/tmpmssw4vy0.cpp:42:60: note:   \u2018std::optional<long int>\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   42 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |                                                            ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n     ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (n % gcd(a, b) != 0) {\n        return std::nullopt;\n    }\n    long x = 0, y = 0;\n    long d = gcd(a, b);\n    x = n / d * (b / d);\n    y = n / d * (a / d);\n    return std::make_tuple(x, y);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1665510529,
      "stdout": "",
      "stderr": "/tmp/tmpjqbvg_s0.cpp: In function \u2018std::optional<long int> find_solution(long int, long int, long int)\u2019:\n/tmp/tmpjqbvg_s0.cpp:5:13: error: \u2018gcd\u2019 was not declared in this scope; did you mean \u2018std::gcd\u2019?\n    5 |     if (n % gcd(a, b) != 0) {\n      |             ^~~\n      |             std::gcd\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:84,\n                 from /tmp/tmpjqbvg_s0.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/numeric:131:5: note: \u2018std::gcd\u2019 declared here\n  131 |     gcd(_Mn __m, _Nn __n)\n      |     ^~~\n/tmp/tmpjqbvg_s0.cpp:9:14: error: \u2018gcd\u2019 was not declared in this scope; did you mean \u2018std::gcd\u2019?\n    9 |     long d = gcd(a, b);\n      |              ^~~\n      |              std::gcd\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:84,\n                 from /tmp/tmpjqbvg_s0.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/numeric:131:5: note: \u2018std::gcd\u2019 declared here\n  131 |     gcd(_Mn __m, _Nn __n)\n      |     ^~~\n/tmp/tmpjqbvg_s0.cpp:12:27: error: could not convert \u2018std::make_tuple(_Elements&& ...) [with _Elements = {long int&, long int&}](y)\u2019 from \u2018std::tuple<long int, long int>\u2019 to \u2018std::optional<long int>\u2019\n   12 |     return std::make_tuple(x, y);\n      |            ~~~~~~~~~~~~~~~^~~~~~\n      |                           |\n      |                           std::tuple<long int, long int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpjqbvg_s0.cpp:2:\n/tmp/tmpjqbvg_s0.cpp: In function \u2018int main()\u2019:\n/tmp/tmpjqbvg_s0.cpp:16:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   16 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0 && b == 0) {\n        if (n == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (a == 0) {\n        if (n % b == 0) {\n            return std::make_optional(n / b);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (b == 0) {\n        if (n % a == 0) {\n            return std::make_optional(n / a);\n        } else {\n            return std::nullopt;\n        }\n    }\n    long g = std::gcd(a, b);\n    if (n % g != 0) {\n        return std::nullopt;\n    }\n    long p = n / g;\n    long q = std::gcd(a, b);\n    a /= q;\n    b /= q;\n    long x0 = 0, y0 = 1;\n    long x1 = 1, y1 = 0;\n    while (a % b != 0) {\n        long temp = x0 - a / b * x1;\n        x0 = x1;\n        x1 = temp;\n        temp = y0 - a / b * y1;\n        y0 = y1;\n        y1 = temp;\n        long aa = a % b;\n        a = b;\n        b = aa;\n    }\n    return std::make_optional(x1 * p);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1665510529,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp7ol8grmb.cpp:2:\n/tmp/tmp7ol8grmb.cpp: In function \u2018int main()\u2019:\n/tmp/tmp7ol8grmb.cpp:51:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   51 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmp7ol8grmb.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp7ol8grmb.cpp:2:\n/tmp/tmp7ol8grmb.cpp:51:60: note:   \u2018std::optional<long int>\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   51 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |                                                            ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n     ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (n % gcd(a, b) != 0) {\n        return std::nullopt;\n    }\n    long x = 0;\n    long y = n / b;\n    while (a * x + b * y != n) {\n        if (a * x + b * y < n) {\n            x += 1;\n        } else {\n            y -= 1;\n        }\n    }\n    return std::make_tuple(x, y);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1665510529,
      "stdout": "",
      "stderr": "/tmp/tmppy0f4asm.cpp: In function \u2018std::optional<long int> find_solution(long int, long int, long int)\u2019:\n/tmp/tmppy0f4asm.cpp:5:13: error: \u2018gcd\u2019 was not declared in this scope; did you mean \u2018std::gcd\u2019?\n    5 |     if (n % gcd(a, b) != 0) {\n      |             ^~~\n      |             std::gcd\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:84,\n                 from /tmp/tmppy0f4asm.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/numeric:131:5: note: \u2018std::gcd\u2019 declared here\n  131 |     gcd(_Mn __m, _Nn __n)\n      |     ^~~\n/tmp/tmppy0f4asm.cpp:17:27: error: could not convert \u2018std::make_tuple(_Elements&& ...) [with _Elements = {long int&, long int&}](y)\u2019 from \u2018std::tuple<long int, long int>\u2019 to \u2018std::optional<long int>\u2019\n   17 |     return std::make_tuple(x, y);\n      |            ~~~~~~~~~~~~~~~^~~~~~\n      |                           |\n      |                           std::tuple<long int, long int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmppy0f4asm.cpp:2:\n/tmp/tmppy0f4asm.cpp: In function \u2018int main()\u2019:\n/tmp/tmppy0f4asm.cpp:21:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   21 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmppy0f4asm.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0 && b == 0) {\n        if (n == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (a == 0) {\n        if (n % b == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (b == 0) {\n        if (n % a == 0) {\n            return std::make_optional(n / a);\n        } else {\n            return std::nullopt;\n        }\n    }\n    long g = std::__gcd(a, b);\n    if (n % g != 0) {\n        return std::nullopt;\n    }\n    long x = 0, y = 0;\n    long d = std::__gcd(a, b);\n    a /= d;\n    b /= d;\n    n /= d;\n    long x1 = 1, y1 = 0, x2 = 0, y2 = 1;\n    while (b != 0) {\n        long q = a / b;\n        long r = a % b;\n        x = x2 - q * x1;\n        y = y2 - q * y1;\n        a = b;\n        b = r;\n        x2 = x1;\n        x1 = x;\n        y2 = y1;\n        y1 = y;\n    }\n    x = x2;\n    y = y2;\n    return std::make_optional(x * n);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1665510529,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpyvhcqwdh.cpp:2:\n/tmp/tmpyvhcqwdh.cpp: In function \u2018int main()\u2019:\n/tmp/tmpyvhcqwdh.cpp:54:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   54 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpyvhcqwdh.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpyvhcqwdh.cpp:2:\n/tmp/tmpyvhcqwdh.cpp:54:60: note:   \u2018std::optional<long int>\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   54 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |                                                            ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n     ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (n % std::gcd(a, b) != 0) {\n        return std::nullopt;\n    }\n    long x = 0, y = 0;\n    long d = std::gcd(a, b);\n    x = n / d * (b / d);\n    y = n / d * (a / d);\n    return std::make_tuple(x, y);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1665510529,
      "stdout": "",
      "stderr": "/tmp/tmpv5o68r75.cpp: In function \u2018std::optional<long int> find_solution(long int, long int, long int)\u2019:\n/tmp/tmpv5o68r75.cpp:12:27: error: could not convert \u2018std::make_tuple(_Elements&& ...) [with _Elements = {long int&, long int&}](y)\u2019 from \u2018std::tuple<long int, long int>\u2019 to \u2018std::optional<long int>\u2019\n   12 |     return std::make_tuple(x, y);\n      |            ~~~~~~~~~~~~~~~^~~~~~\n      |                           |\n      |                           std::tuple<long int, long int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpv5o68r75.cpp:2:\n/tmp/tmpv5o68r75.cpp: In function \u2018int main()\u2019:\n/tmp/tmpv5o68r75.cpp:16:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   16 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpv5o68r75.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n             ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0 && b == 0) {\n        return n == 0 ? std::make_optional(0) : std::nullopt;\n    } else if (a == 0) {\n        return n % b == 0 ? std::make_optional(n / b) : std::nullopt;\n    } else if (b == 0) {\n        return n % a == 0 ? std::make_optional(n / a) : std::nullopt;\n    }\n\n    long d = std::__gcd(a, b);\n    if (n % d != 0) {\n        return std::nullopt;\n    }\n\n    a /= d;\n    b /= d;\n    n /= d;\n\n    long x = 0, y = 0;\n    long x1 = 1, y1 = 0;\n    long x2 = 0, y2 = 1;\n    while (a != 0) {\n        long q = b / a;\n        long r = b % a;\n        long x_ = x2 - q * x1;\n        long y_ = y2 - q * y1;\n        x = x1;\n        y = y1;\n        x2 = x_;\n        y2 = y_;\n        b = a;\n        a = r;\n    }\n\n    return std::make_optional(x * n + y);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1665510529,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmptzvvl5pl.cpp:2:\n/tmp/tmptzvvl5pl.cpp: In function \u2018int main()\u2019:\n/tmp/tmptzvvl5pl.cpp:42:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   42 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmptzvvl5pl.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmptzvvl5pl.cpp:2:\n/tmp/tmptzvvl5pl.cpp:42:60: note:   \u2018std::optional<long int>\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   42 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |                                                            ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n     ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (n % std::__gcd(a, b) != 0) {\n        return std::nullopt;\n    }\n    long x = 0, y = 0;\n    long g = std::__gcd(a, b);\n    while (g != 0) {\n        long t = g;\n        g = a % g;\n        a = t;\n        t = x;\n        x = y - (a / b) * x;\n        y = t;\n    }\n    return std::make_optional(y);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1665510529,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpx2h0a81q.cpp:2:\n/tmp/tmpx2h0a81q.cpp: In function \u2018int main()\u2019:\n/tmp/tmpx2h0a81q.cpp:22:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   22 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpx2h0a81q.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpx2h0a81q.cpp:2:\n/tmp/tmpx2h0a81q.cpp:22:60: note:   \u2018std::optional<long int>\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   22 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |                                                            ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n     ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (n % std::gcd(a, b) != 0) {\n        return std::nullopt;\n    }\n    long x = 0, y = 0;\n    long d = std::gcd(a, b);\n    long x1 = 1, y1 = 0, x2 = 0, y2 = 1;\n    while (a % d == 0 && b % d == 0) {\n        a /= d;\n        b /= d;\n        n /= d;\n    }\n    while (b != 0) {\n        long q = a / b;\n        long r = a % b;\n        x = x2 - q * x1;\n        y = y2 - q * y1;\n        a = b;\n        b = r;\n        x2 = x1;\n        x1 = x;\n        y2 = y1;\n        y1 = y;\n    }\n    x = n * x2;\n    y = n * y2;\n    return std::make_optional(x);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1665510529,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp806dh0bh.cpp:2:\n/tmp/tmp806dh0bh.cpp: In function \u2018int main()\u2019:\n/tmp/tmp806dh0bh.cpp:34:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   34 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmp806dh0bh.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp806dh0bh.cpp:2:\n/tmp/tmp806dh0bh.cpp:34:60: note:   \u2018std::optional<long int>\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   34 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |                                                            ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n     ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (n % gcd(a, b) != 0) {\n        return std::nullopt;\n    }\n    long x = 0;\n    long y = n / b;\n    while (a * x + b * y != n) {\n        if (a * x + b * y < n) {\n            x += 1;\n        } else {\n            y -= 1;\n        }\n    }\n    return std::make_tuple(x, y);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1665510529,
      "stdout": "",
      "stderr": "/tmp/tmppy0f4asm.cpp: In function \u2018std::optional<long int> find_solution(long int, long int, long int)\u2019:\n/tmp/tmppy0f4asm.cpp:5:13: error: \u2018gcd\u2019 was not declared in this scope; did you mean \u2018std::gcd\u2019?\n    5 |     if (n % gcd(a, b) != 0) {\n      |             ^~~\n      |             std::gcd\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:84,\n                 from /tmp/tmppy0f4asm.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/numeric:131:5: note: \u2018std::gcd\u2019 declared here\n  131 |     gcd(_Mn __m, _Nn __n)\n      |     ^~~\n/tmp/tmppy0f4asm.cpp:17:27: error: could not convert \u2018std::make_tuple(_Elements&& ...) [with _Elements = {long int&, long int&}](y)\u2019 from \u2018std::tuple<long int, long int>\u2019 to \u2018std::optional<long int>\u2019\n   17 |     return std::make_tuple(x, y);\n      |            ~~~~~~~~~~~~~~~^~~~~~\n      |                           |\n      |                           std::tuple<long int, long int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmppy0f4asm.cpp:2:\n/tmp/tmppy0f4asm.cpp: In function \u2018int main()\u2019:\n/tmp/tmppy0f4asm.cpp:21:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   21 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmppy0f4asm.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0 && b == 0) {\n        if (n == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (a == 0) {\n        if (n % b == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (b == 0) {\n        if (n % a == 0) {\n            return std::make_optional(n / a);\n        } else {\n            return std::nullopt;\n        }\n    }\n    long g = std::gcd(a, b);\n    if (n % g != 0) {\n        return std::nullopt;\n    }\n    long p = n / g;\n    long q = g;\n    long x = 0;\n    long y = 1;\n    long u = 1;\n    long v = 0;\n    while (a != 0) {\n        long t = a / b;\n        a = a % b;\n        std::swap(a, b);\n        x = x - (u * t);\n        y = y - (v * t);\n        std::swap(x, u);\n        std::swap(y, v);\n    }\n    x = x * p;\n    y = y * p;\n    return std::make_optional(x);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123340,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmptzpes0lc.cpp:2:\n/tmp/tmptzpes0lc.cpp: In function \u2018int main()\u2019:\n/tmp/tmptzpes0lc.cpp:51:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   51 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmptzpes0lc.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmptzpes0lc.cpp:2:\n/tmp/tmptzpes0lc.cpp:51:60: note:   \u2018std::optional<long int>\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   51 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |                                                            ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n     ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0 && b == 0) {\n        if (n == 0) {\n            return std::make_optional(0);\n        }\n        else {\n            return std::nullopt;\n        }\n    }\n    if (a == 0) {\n        if (n % b == 0) {\n            return std::make_optional(0);\n        }\n        else {\n            return std::nullopt;\n        }\n    }\n    if (b == 0) {\n        if (n % a == 0) {\n            return std::make_optional(n / a);\n        }\n        else {\n            return std::nullopt;\n        }\n    }\n    long g = std::__gcd(a, b);\n    if (n % g != 0) {\n        return std::nullopt;\n    }\n    long x = 0;\n    long y = n / g;\n    while (y * a > n) {\n        y--;\n    }\n    while (y * a < n) {\n        y++;\n    }\n    if (y * a != n) {\n        return std::nullopt;\n    }\n    x = (n - y * b) / a;\n    return std::make_optional(x);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123340,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpz2mput7q.cpp:2:\n/tmp/tmpz2mput7q.cpp: In function \u2018int main()\u2019:\n/tmp/tmpz2mput7q.cpp:49:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   49 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpz2mput7q.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpz2mput7q.cpp:2:\n/tmp/tmpz2mput7q.cpp:49:60: note:   \u2018std::optional<long int>\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   49 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |                                                            ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n     ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0) {\n        if (n == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    long x = n / a;\n    long y = (n - a * x) / b;\n    if (a * x + b * y == n) {\n        return std::make_optional(x);\n    } else {\n        return std::nullopt;\n    }\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123249,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpgz4r64uz.cpp:2:\n/tmp/tmpgz4r64uz.cpp: In function \u2018int main()\u2019:\n/tmp/tmpgz4r64uz.cpp:22:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   22 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpgz4r64uz.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpgz4r64uz.cpp:2:\n/tmp/tmpgz4r64uz.cpp:22:60: note:   \u2018std::optional<long int>\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   22 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |                                                            ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n     ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0 && b == 0) {\n        if (n == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (a == 0) {\n        if (n % b == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (b == 0) {\n        if (n % a == 0) {\n            return std::make_optional(n / a);\n        } else {\n            return std::nullopt;\n        }\n    }\n    long g = std::__gcd(a, b);\n    if (n % g != 0) {\n        return std::nullopt;\n    }\n    a /= g;\n    b /= g;\n    n /= g;\n    long x = 0, y = 0;\n    long a1 = 1, b1 = 0, a2 = 0, b2 = 1;\n    while (a != 0) {\n        long q = b / a;\n        long r = b % a;\n        long x1 = a1 - q * a2;\n        long y1 = b1 - q * b2;\n        a1 = a2;\n        b1 = b2;\n        a2 = x1;\n        b2 = y1;\n        b = a;\n        a = r;\n    }\n    x = a2;\n    y = b2;\n    if (x < 0) {\n        x += b;\n        y -= a;\n    }\n    return std::make_optional(x * n);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123340,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp18fn31au.cpp:2:\n/tmp/tmp18fn31au.cpp: In function \u2018int main()\u2019:\n/tmp/tmp18fn31au.cpp:57:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   57 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmp18fn31au.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp18fn31au.cpp:2:\n/tmp/tmp18fn31au.cpp:57:60: note:   \u2018std::optional<long int>\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   57 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |                                                            ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n     ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0) {\n        if (n == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    auto x = find_solution(b % a, a, n % a);\n    if (!x) {\n        return std::nullopt;\n    }\n    return std::make_optional(b / a * x.value() - n / a);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1665510529,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmphb4sl61k.cpp:2:\n/tmp/tmphb4sl61k.cpp: In function \u2018int main()\u2019:\n/tmp/tmphb4sl61k.cpp:20:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   20 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmphb4sl61k.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmphb4sl61k.cpp:2:\n/tmp/tmphb4sl61k.cpp:20:60: note:   \u2018std::optional<long int>\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   20 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |                                                            ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n     ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (n % __gcd(a, b) != 0) {\n        return std::nullopt;\n    }\n    long x = 0;\n    long y = n / b;\n    long g = __gcd(a, b);\n    while (x * b <= n) {\n        if ((n - x * b) % a == 0) {\n            return std::make_tuple(x, (n - x * b) / a);\n        }\n        x += b / g;\n    }\n    return std::nullopt;\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123340,
      "stdout": "",
      "stderr": "/tmp/tmpg5hzh24o.cpp: In function \u2018std::optional<long int> find_solution(long int, long int, long int)\u2019:\n/tmp/tmpg5hzh24o.cpp:5:13: error: \u2018__gcd\u2019 was not declared in this scope\n    5 |     if (n % __gcd(a, b) != 0) {\n      |             ^~~~~\n/tmp/tmpg5hzh24o.cpp:5:13: note: suggested alternatives:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n                 from /tmp/tmpg5hzh24o.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algo.h:1232:5: note:   \u2018std::__gcd\u2019\n 1232 |     __gcd(_EuclideanRingElement __m, _EuclideanRingElement __n)\n      |     ^~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:84,\n                 from /tmp/tmpg5hzh24o.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/numeric:102:5: note:   \u2018std::__detail::__gcd\u2019\n  102 |     __gcd(_Mn __m, _Nn __n)\n      |     ^~~~~\n/tmp/tmpg5hzh24o.cpp:10:14: error: \u2018__gcd\u2019 was not declared in this scope\n   10 |     long g = __gcd(a, b);\n      |              ^~~~~\n/tmp/tmpg5hzh24o.cpp:10:14: note: suggested alternatives:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n                 from /tmp/tmpg5hzh24o.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algo.h:1232:5: note:   \u2018std::__gcd\u2019\n 1232 |     __gcd(_EuclideanRingElement __m, _EuclideanRingElement __n)\n      |     ^~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:84,\n                 from /tmp/tmpg5hzh24o.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/numeric:102:5: note:   \u2018std::__detail::__gcd\u2019\n  102 |     __gcd(_Mn __m, _Nn __n)\n      |     ^~~~~\n/tmp/tmpg5hzh24o.cpp:13:35: error: could",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0 && b == 0) {\n        if (n == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (a == 0) {\n        if (n % b == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (b == 0) {\n        if (n % a == 0) {\n            return std::make_optional(n / a);\n        } else {\n            return std::nullopt;\n        }\n    }\n    long g = std::gcd(a, b);\n    if (n % g != 0) {\n        return std::nullopt;\n    }\n    long p = n / g;\n    long q = 0;\n    while (p % a != 0) {\n        p += b;\n        q -= 1;\n    }\n    return std::make_optional(p / a);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123340,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpn67hb7tb.cpp:2:\n/tmp/tmpn67hb7tb.cpp: In function \u2018int main()\u2019:\n/tmp/tmpn67hb7tb.cpp:40:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   40 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpn67hb7tb.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpn67hb7tb.cpp:2:\n/tmp/tmpn67hb7tb.cpp:40:60: note:   \u2018std::optional<long int>\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   40 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |                                                            ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n     ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    long x = 0;\n    long y = n / b;\n    while (a * x + b * y != n) {\n        if (a * x + b * y > n) {\n            y--;\n        } else {\n            x++;\n        }\n        if (y < 0) {\n            return std::nullopt;\n        }\n    }\n    return std::make_tuple(x, y);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123309,
      "stdout": "",
      "stderr": "/tmp/tmpd0wl3mfx.cpp: In function \u2018std::optional<long int> find_solution(long int, long int, long int)\u2019:\n/tmp/tmpd0wl3mfx.cpp:17:27: error: could not convert \u2018std::make_tuple(_Elements&& ...) [with _Elements = {long int&, long int&}](y)\u2019 from \u2018std::tuple<long int, long int>\u2019 to \u2018std::optional<long int>\u2019\n   17 |     return std::make_tuple(x, y);\n      |            ~~~~~~~~~~~~~~~^~~~~~\n      |                           |\n      |                           std::tuple<long int, long int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpd0wl3mfx.cpp:2:\n/tmp/tmpd0wl3mfx.cpp: In function \u2018int main()\u2019:\n/tmp/tmpd0wl3mfx.cpp:21:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   21 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpd0wl3mfx.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n             ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (n % __gcd(a, b) != 0) {\n        return std::nullopt;\n    }\n    long x = 0, y = 0;\n    long d = __gcd(a, b);\n    long x1 = 1, y1 = 0, x2 = 0, y2 = 1;\n    while (a % d != 0 || b % d != 0) {\n        long q = a / d;\n        long r = a % d;\n        long x = x2 - q * x1;\n        long y = y2 - q * y1;\n        a = d;\n        b = r;\n        d = __gcd(a, b);\n        x2 = x1;\n        x1 = x;\n        y2 = y1;\n        y1 = y;\n    }\n    return {x2 * (n / d), y2 * (n / d)};\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123340,
      "stdout": "",
      "stderr": "/tmp/tmpe2m470l9.cpp: In function \u2018std::optional<long int> find_solution(long int, long int, long int)\u2019:\n/tmp/tmpe2m470l9.cpp:5:13: error: \u2018__gcd\u2019 was not declared in this scope\n    5 |     if (n % __gcd(a, b) != 0) {\n      |             ^~~~~\n/tmp/tmpe2m470l9.cpp:5:13: note: suggested alternatives:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n                 from /tmp/tmpe2m470l9.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algo.h:1232:5: note:   \u2018std::__gcd\u2019\n 1232 |     __gcd(_EuclideanRingElement __m, _EuclideanRingElement __n)\n      |     ^~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:84,\n                 from /tmp/tmpe2m470l9.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/numeric:102:5: note:   \u2018std::__detail::__gcd\u2019\n  102 |     __gcd(_Mn __m, _Nn __n)\n      |     ^~~~~\n/tmp/tmpe2m470l9.cpp:9:14: error: \u2018__gcd\u2019 was not declared in this scope\n    9 |     long d = __gcd(a, b);\n      |              ^~~~~\n/tmp/tmpe2m470l9.cpp:9:14: note: suggested alternatives:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n                 from /tmp/tmpe2m470l9.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algo.h:1232:5: note:   \u2018std::__gcd\u2019\n 1232 |     __gcd(_EuclideanRingElement __m, _EuclideanRingElement __n)\n      |     ^~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:84,\n                 from /tmp/tmpe2m470l9.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/numeric:102:5: note:   \u2018std::__detail::__gcd\u2019\n  102 |     __gcd(_Mn __m, _Nn __n)\n      |     ^~~~~\n/tmp/tmpe2m470l9.cpp:24:39: error: could n",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0) {\n        if (n == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    auto x = find_solution(b % a, a, n % a);\n    if (!x) {\n        return std::nullopt;\n    }\n    return std::make_optional(b / a * x.value() - n / a);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1665510529,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmphb4sl61k.cpp:2:\n/tmp/tmphb4sl61k.cpp: In function \u2018int main()\u2019:\n/tmp/tmphb4sl61k.cpp:20:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   20 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmphb4sl61k.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmphb4sl61k.cpp:2:\n/tmp/tmphb4sl61k.cpp:20:60: note:   \u2018std::optional<long int>\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   20 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |                                                            ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n     ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0 && b == 0) {\n        if (n == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (a == 0) {\n        if (n % b == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (b == 0) {\n        if (n % a == 0) {\n            return std::make_optional(n / a);\n        } else {\n            return std::nullopt;\n        }\n    }\n    long g = std::__gcd(a, b);\n    if (n % g != 0) {\n        return std::nullopt;\n    }\n    long x = 0, y = 0;\n    long d = n / g;\n    std::tie(x, y) = find_solution(b / g, a / g, d);\n    x = -x;\n    return std::make_optional(x);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123295,
      "stdout": "",
      "stderr": "/tmp/tmpz5zice3e.cpp: In function \u2018std::optional<long int> find_solution(long int, long int, long int)\u2019:\n/tmp/tmpz5zice3e.cpp:32:51: error: no match for \u2018operator=\u2019 (operand types are \u2018std::tuple<long int&, long int&>\u2019 and \u2018std::optional<long int>\u2019)\n   32 |     std::tie(x, y) = find_solution(b / g, a / g, d);\n      |                                                   ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/functional:54,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/pstl/glue_algorithm_defs.h:13,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:71,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n                 from /tmp/tmpz5zice3e.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/tuple:1205:7: note: candidate: \u2018std::tuple<_T1, _T2>& std::tuple<_T1, _T2>::operator=(typename std::conditional<__assignable<const _T1&, const _T2&>(), const std::tuple<_T1, _T2>&, const std::__nonesuch_no_braces&>::type) [with _T1 = long int&; _T2 = long int&; typename std::conditional<__assignable<const _T1&, const _T2&>(), const std::tuple<_T1, _T2>&, const std::__nonesuch_no_braces&>::type = const std::tuple<long int&, long int&>&]\u2019\n 1205 |       operator=(typename conditional<__assignable<const _T1&, const _T2&>(),\n      |       ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/tuple:1207:45: note:   no known conversion for argument 1 from \u2018std::optional<long int>\u2019 to \u2018std::conditional<true, const std::tuple<long int&, long int&>&, const std::__nonesuch_no_braces&>::type\u2019 {aka \u2018const std::tuple<long int&, long int&>&\u2019}\n 1205 |       operator=(typename conditional<__assignable<const _T1&, const _T2&>(),\n      |                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n 1206 |          const tuple&,\n      |          ~~~~~~~~~~~~~                       \n 1207 |          const __nonesuch_no_braces&>::type",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0 && b == 0) {\n        if (n == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (a == 0) {\n        if (n % b == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (b == 0) {\n        if (n % a == 0) {\n            return std::make_optional(n / a);\n        } else {\n            return std::nullopt;\n        }\n    }\n    long d = std::__gcd(a, b);\n    if (n % d != 0) {\n        return std::nullopt;\n    }\n    long x0 = 0, y0 = 1;\n    long x1 = 1, y1 = 0;\n    while (a % b != 0) {\n        long q = a / b;\n        long r = a % b;\n        long x2 = x0 - q * x1;\n        long y2 = y0 - q * y1;\n        x0 = x1;\n        y0 = y1;\n        x1 = x2;\n        y1 = y2;\n        a = b;\n        b = r;\n    }\n    long x = x1 * (n / d);\n    long y = y1 * (n / d);\n    return std::make_optional(x);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1665510514,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp3v37w6re.cpp:2:\n/tmp/tmp3v37w6re.cpp: In function \u2018int main()\u2019:\n/tmp/tmp3v37w6re.cpp:50:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   50 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmp3v37w6re.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp3v37w6re.cpp:2:\n/tmp/tmp3v37w6re.cpp:50:60: note:   \u2018std::optional<long int>\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   50 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |                                                            ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n     ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0 && b == 0) {\n        if (n == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (a == 0) {\n        if (n % b == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (b == 0) {\n        if (n % a == 0) {\n            return std::make_optional(n / a);\n        } else {\n            return std::nullopt;\n        }\n    }\n    long d = gcd(a, b);\n    if (n % d != 0) {\n        return std::nullopt;\n    }\n    long x, y;\n    std::tie(x, y) = find_solution(b / d, a / d, n / d);\n    return std::make_optional(y - (a / d) * x);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123340,
      "stdout": "",
      "stderr": "/tmp/tmp2h4r8zfb.cpp: In function \u2018std::optional<long int> find_solution(long int, long int, long int)\u2019:\n/tmp/tmp2h4r8zfb.cpp:26:14: error: \u2018gcd\u2019 was not declared in this scope; did you mean \u2018std::gcd\u2019?\n   26 |     long d = gcd(a, b);\n      |              ^~~\n      |              std::gcd\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:84,\n                 from /tmp/tmp2h4r8zfb.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/numeric:131:5: note: \u2018std::gcd\u2019 declared here\n  131 |     gcd(_Mn __m, _Nn __n)\n      |     ^~~\n/tmp/tmp2h4r8zfb.cpp:31:55: error: no match for \u2018operator=\u2019 (operand types are \u2018std::tuple<long int&, long int&>\u2019 and \u2018std::optional<long int>\u2019)\n   31 |     std::tie(x, y) = find_solution(b / d, a / d, n / d);\n      |                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/functional:54,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/pstl/glue_algorithm_defs.h:13,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:71,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n                 from /tmp/tmp2h4r8zfb.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/tuple:1205:7: note: candidate: \u2018std::tuple<_T1, _T2>& std::tuple<_T1, _T2>::operator=(typename std::conditional<__assignable<const _T1&, const _T2&>(), const std::tuple<_T1, _T2>&, const std::__nonesuch_no_braces&>::type) [with _T1 = long int&; _T2 = long int&; typename std::conditional<__assignable<const _T1&, const _T2&>(), const std::tuple<_T1, _T2>&, const std::__nonesuch_no_braces&>::type = const std::tuple<long int&, long int&>&]\u2019\n 1205 |       operator=(typename conditional<__assignable<const _T1&, const _T2&>(),\n      |       ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/tuple:1207:45: note:   no known conversion for argume",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0 && b == 0) {\n        if (n == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (a == 0) {\n        if (n % b == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (b == 0) {\n        if (n % a == 0) {\n            return std::make_optional(n / a);\n        } else {\n            return std::nullopt;\n        }\n    }\n    long g = std::__gcd(a, b);\n    if (n % g != 0) {\n        return std::nullopt;\n    }\n    long x = 0;\n    long y = n / g;\n    long aa = a / g;\n    long bb = b / g;\n    long q = y / bb;\n    y -= q * bb;\n    x += q * aa;\n    if (y < 0) {\n        return std::nullopt;\n    }\n    return std::make_optional(x);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123340,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpqbunvqih.cpp:2:\n/tmp/tmpqbunvqih.cpp: In function \u2018int main()\u2019:\n/tmp/tmpqbunvqih.cpp:44:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   44 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpqbunvqih.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpqbunvqih.cpp:2:\n/tmp/tmpqbunvqih.cpp:44:60: note:   \u2018std::optional<long int>\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   44 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |                                                            ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n     ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    long x = 0;\n    long y = 0;\n    long gcd = std::gcd(a, b);\n    if (n % gcd != 0) {\n        return std::nullopt;\n    }\n    long a1 = a / gcd;\n    long b1 = b / gcd;\n    long n1 = n / gcd;\n    long x1 = 0;\n    long y1 = 1;\n    long x2 = 1;\n    long y2 = 0;\n    long q = 0;\n    long r = 0;\n    while (b1 != 0) {\n        q = a1 / b1;\n        r = a1 % b1;\n        x = x2 - q * x1;\n        y = y2 - q * y1;\n        a1 = b1;\n        b1 = r;\n        x2 = x1;\n        x1 = x;\n        y2 = y1;\n        y1 = y;\n    }\n    x = x2;\n    y = y2;\n    if (x < 0) {\n        x = x + b / gcd;\n        y = y - a / gcd;\n    }\n    return std::make_optional(x * n1);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123340,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpqymniv_2.cpp:2:\n/tmp/tmpqymniv_2.cpp: In function \u2018int main()\u2019:\n/tmp/tmpqymniv_2.cpp:42:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   42 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpqymniv_2.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpqymniv_2.cpp:2:\n/tmp/tmpqymniv_2.cpp:42:60: note:   \u2018std::optional<long int>\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   42 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |                                                            ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n     ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0 && b == 0) {\n        if (n == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    } else if (a == 0) {\n        if (n % b == 0) {\n            return std::make_optional(n / b);\n        } else {\n            return std::nullopt;\n        }\n    } else if (b == 0) {\n        if (n % a == 0) {\n            return std::make_optional(n / a);\n        } else {\n            return std::nullopt;\n        }\n    } else {\n        if (n % gcd(a, b) == 0) {\n            return std::make_optional(n / gcd(a, b));\n        } else {\n            return std::nullopt;\n        }\n    }\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123340,
      "stdout": "",
      "stderr": "/tmp/tmpe_432vkh.cpp: In function \u2018std::optional<long int> find_solution(long int, long int, long int)\u2019:\n/tmp/tmpe_432vkh.cpp:24:17: error: \u2018gcd\u2019 was not declared in this scope; did you mean \u2018std::gcd\u2019?\n   24 |         if (n % gcd(a, b) == 0) {\n      |                 ^~~\n      |                 std::gcd\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:84,\n                 from /tmp/tmpe_432vkh.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/numeric:131:5: note: \u2018std::gcd\u2019 declared here\n  131 |     gcd(_Mn __m, _Nn __n)\n      |     ^~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpe_432vkh.cpp:2:\n/tmp/tmpe_432vkh.cpp: In function \u2018int main()\u2019:\n/tmp/tmpe_432vkh.cpp:33:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   33 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpe_432vkh.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deducti",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (n % gcd(a, b) != 0) {\n        return std::nullopt;\n    }\n    long x = 0, y = 0;\n    long d = gcd(a, b);\n    x = n / d * b / a;\n    y = (n - a * x) / b;\n    return std::make_tuple(x, y);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1665510514,
      "stdout": "",
      "stderr": "/tmp/tmpmq79w5re.cpp: In function \u2018std::optional<long int> find_solution(long int, long int, long int)\u2019:\n/tmp/tmpmq79w5re.cpp:5:13: error: \u2018gcd\u2019 was not declared in this scope; did you mean \u2018std::gcd\u2019?\n    5 |     if (n % gcd(a, b) != 0) {\n      |             ^~~\n      |             std::gcd\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:84,\n                 from /tmp/tmpmq79w5re.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/numeric:131:5: note: \u2018std::gcd\u2019 declared here\n  131 |     gcd(_Mn __m, _Nn __n)\n      |     ^~~\n/tmp/tmpmq79w5re.cpp:9:14: error: \u2018gcd\u2019 was not declared in this scope; did you mean \u2018std::gcd\u2019?\n    9 |     long d = gcd(a, b);\n      |              ^~~\n      |              std::gcd\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:84,\n                 from /tmp/tmpmq79w5re.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/numeric:131:5: note: \u2018std::gcd\u2019 declared here\n  131 |     gcd(_Mn __m, _Nn __n)\n      |     ^~~\n/tmp/tmpmq79w5re.cpp:12:27: error: could not convert \u2018std::make_tuple(_Elements&& ...) [with _Elements = {long int&, long int&}](y)\u2019 from \u2018std::tuple<long int, long int>\u2019 to \u2018std::optional<long int>\u2019\n   12 |     return std::make_tuple(x, y);\n      |            ~~~~~~~~~~~~~~~^~~~~~\n      |                           |\n      |                           std::tuple<long int, long int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpmq79w5re.cpp:2:\n/tmp/tmpmq79w5re.cpp: In function \u2018int main()\u2019:\n/tmp/tmpmq79w5re.cpp:16:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   16 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0 && b == 0) {\n        if (n == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (a == 0) {\n        if (n % b == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (b == 0) {\n        if (n % a == 0) {\n            return std::make_optional(n / a);\n        } else {\n            return std::nullopt;\n        }\n    }\n    long d = std::__gcd(a, b);\n    if (n % d != 0) {\n        return std::nullopt;\n    }\n    long x = 0;\n    long y = n / d;\n    while (y * a > n) {\n        y--;\n    }\n    x = (n - y * a) / b;\n    return std::make_optional(x);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123340,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp71l6maha.cpp:2:\n/tmp/tmp71l6maha.cpp: In function \u2018int main()\u2019:\n/tmp/tmp71l6maha.cpp:40:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   40 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmp71l6maha.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp71l6maha.cpp:2:\n/tmp/tmp71l6maha.cpp:40:60: note:   \u2018std::optional<long int>\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   40 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |                                                            ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n     ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (n % gcd(a, b) != 0) {\n        return std::nullopt;\n    }\n    long x = 0, y = 0;\n    long g = gcd(a, b);\n    a /= g;\n    b /= g;\n    n /= g;\n    long x1 = 1, y1 = 0;\n    while (a != 0) {\n        long q = b / a;\n        long t = b % a;\n        b = a;\n        a = t;\n        t = x1;\n        x1 = x - q * x1;\n        x = t;\n        t = y1;\n        y1 = y - q * y1;\n        y = t;\n    }\n    x = x * n;\n    y = y * n;\n    return std::make_tuple(x, y);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123340,
      "stdout": "",
      "stderr": "/tmp/tmp_v9ielsp.cpp: In function \u2018std::optional<long int> find_solution(long int, long int, long int)\u2019:\n/tmp/tmp_v9ielsp.cpp:5:13: error: \u2018gcd\u2019 was not declared in this scope; did you mean \u2018std::gcd\u2019?\n    5 |     if (n % gcd(a, b) != 0) {\n      |             ^~~\n      |             std::gcd\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:84,\n                 from /tmp/tmp_v9ielsp.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/numeric:131:5: note: \u2018std::gcd\u2019 declared here\n  131 |     gcd(_Mn __m, _Nn __n)\n      |     ^~~\n/tmp/tmp_v9ielsp.cpp:9:14: error: \u2018gcd\u2019 was not declared in this scope; did you mean \u2018std::gcd\u2019?\n    9 |     long g = gcd(a, b);\n      |              ^~~\n      |              std::gcd\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:84,\n                 from /tmp/tmp_v9ielsp.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/numeric:131:5: note: \u2018std::gcd\u2019 declared here\n  131 |     gcd(_Mn __m, _Nn __n)\n      |     ^~~\n/tmp/tmp_v9ielsp.cpp:28:27: error: could not convert \u2018std::make_tuple(_Elements&& ...) [with _Elements = {long int&, long int&}](y)\u2019 from \u2018std::tuple<long int, long int>\u2019 to \u2018std::optional<long int>\u2019\n   28 |     return std::make_tuple(x, y);\n      |            ~~~~~~~~~~~~~~~^~~~~~\n      |                           |\n      |                           std::tuple<long int, long int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp_v9ielsp.cpp:2:\n/tmp/tmp_v9ielsp.cpp: In function \u2018int main()\u2019:\n/tmp/tmp_v9ielsp.cpp:32:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   32 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (n % std::gcd(a, b) != 0) {\n        return std::nullopt;\n    }\n    long x = 0;\n    long y = n / b;\n    while (x * a + y * b != n) {\n        if (x * a + y * b < n) {\n            x += 1;\n        } else {\n            y -= 1;\n        }\n    }\n    return std::make_tuple(x, y);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123340,
      "stdout": "",
      "stderr": "/tmp/tmp_v_n12bv.cpp: In function \u2018std::optional<long int> find_solution(long int, long int, long int)\u2019:\n/tmp/tmp_v_n12bv.cpp:17:27: error: could not convert \u2018std::make_tuple(_Elements&& ...) [with _Elements = {long int&, long int&}](y)\u2019 from \u2018std::tuple<long int, long int>\u2019 to \u2018std::optional<long int>\u2019\n   17 |     return std::make_tuple(x, y);\n      |            ~~~~~~~~~~~~~~~^~~~~~\n      |                           |\n      |                           std::tuple<long int, long int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp_v_n12bv.cpp:2:\n/tmp/tmp_v_n12bv.cpp: In function \u2018int main()\u2019:\n/tmp/tmp_v_n12bv.cpp:21:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   21 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmp_v_n12bv.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n             ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0 && b == 0) {\n        if (n == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (a == 0) {\n        if (n % b == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (b == 0) {\n        if (n % a == 0) {\n            return std::make_optional(n / a);\n        } else {\n            return std::nullopt;\n        }\n    }\n    long d = std::__gcd(a, b);\n    if (n % d != 0) {\n        return std::nullopt;\n    }\n    long x0 = 0, y0 = n / d;\n    long x1 = 1, y1 = (n - a) / b;\n    while (y1 < y0) {\n        long x2 = x0 - (y0 - y1) * a / b;\n        long y2 = y0 - (y0 - y1) * (n - a * x1) / b;\n        x0 = x1;\n        x1 = x2;\n        y0 = y1;\n        y1 = y2;\n    }\n    return std::make_optional(x1);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123340,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpfdve9huu.cpp:2:\n/tmp/tmpfdve9huu.cpp: In function \u2018int main()\u2019:\n/tmp/tmpfdve9huu.cpp:44:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   44 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpfdve9huu.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpfdve9huu.cpp:2:\n/tmp/tmpfdve9huu.cpp:44:60: note:   \u2018std::optional<long int>\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   44 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |                                                            ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n     ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0 && b == 0) {\n        if (n == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (a == 0) {\n        if (n % b == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (b == 0) {\n        if (n % a == 0) {\n            return std::make_optional(n / a);\n        } else {\n            return std::nullopt;\n        }\n    }\n    long g = std::__gcd(a, b);\n    if (n % g != 0) {\n        return std::nullopt;\n    }\n    long x = 0, y = 0;\n    long d = std::__gcd(a, b);\n    a /= d;\n    b /= d;\n    n /= d;\n    long t = 0;\n    while (a % 2 == 0 && b % 2 == 0) {\n        a /= 2;\n        b /= 2;\n        t++;\n    }\n    if (t % 2 == 1) {\n        x = b;\n        y = -a;\n    } else {\n        x = -b;\n        y = a;\n    }\n    if (a % 2 == 1) {\n        long temp = x;\n        x = y;\n        y = temp;\n    }\n    x *= n;\n    y *= n;\n    return std::make_optional(x);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123340,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpn_63vmv4.cpp:2:\n/tmp/tmpn_63vmv4.cpp: In function \u2018int main()\u2019:\n/tmp/tmpn_63vmv4.cpp:59:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   59 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpn_63vmv4.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpn_63vmv4.cpp:2:\n/tmp/tmpn_63vmv4.cpp:59:60: note:   \u2018std::optional<long int>\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   59 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |                                                            ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n     ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0) {\n        return n == b ? std::make_optional(0) : std::nullopt;\n    }\n    auto x = find_solution(b % a, a, n);\n    if (!x) {\n        return std::nullopt;\n    }\n    return std::make_optional(b / a * x.value() - b / a * (b / a) * x.value() + x.value());\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1665510514,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp5297eym7.cpp:2:\n/tmp/tmp5297eym7.cpp: In function \u2018int main()\u2019:\n/tmp/tmp5297eym7.cpp:16:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   16 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmp5297eym7.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp5297eym7.cpp:2:\n/tmp/tmp5297eym7.cpp:16:60: note:   \u2018std::optional<long int>\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   16 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |                                                            ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n     ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0 && b == 0) {\n        return n == 0 ? std::optional<long>{0} : std::nullopt;\n    }\n    if (a == 0) {\n        return n % b == 0 ? std::optional<long>{n / b} : std::nullopt;\n    }\n    if (b == 0) {\n        return n % a == 0 ? std::optional<long>{n / a} : std::nullopt;\n    }\n    long g = std::__gcd(a, b);\n    if (n % g != 0) {\n        return std::nullopt;\n    }\n    long x = 0, y = 0;\n    std::tie(x, y) = find_solution(b / g, a / g, n / g);\n    return std::optional<long>{x * (b / g) + y * (a / g)};\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123340,
      "stdout": "",
      "stderr": "/tmp/tmpffze08n1.cpp: In function \u2018std::optional<long int> find_solution(long int, long int, long int)\u2019:\n/tmp/tmpffze08n1.cpp:19:55: error: no match for \u2018operator=\u2019 (operand types are \u2018std::tuple<long int&, long int&>\u2019 and \u2018std::optional<long int>\u2019)\n   19 |     std::tie(x, y) = find_solution(b / g, a / g, n / g);\n      |                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/functional:54,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/pstl/glue_algorithm_defs.h:13,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:71,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n                 from /tmp/tmpffze08n1.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/tuple:1205:7: note: candidate: \u2018std::tuple<_T1, _T2>& std::tuple<_T1, _T2>::operator=(typename std::conditional<__assignable<const _T1&, const _T2&>(), const std::tuple<_T1, _T2>&, const std::__nonesuch_no_braces&>::type) [with _T1 = long int&; _T2 = long int&; typename std::conditional<__assignable<const _T1&, const _T2&>(), const std::tuple<_T1, _T2>&, const std::__nonesuch_no_braces&>::type = const std::tuple<long int&, long int&>&]\u2019\n 1205 |       operator=(typename conditional<__assignable<const _T1&, const _T2&>(),\n      |       ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/tuple:1207:45: note:   no known conversion for argument 1 from \u2018std::optional<long int>\u2019 to \u2018std::conditional<true, const std::tuple<long int&, long int&>&, const std::__nonesuch_no_braces&>::type\u2019 {aka \u2018const std::tuple<long int&, long int&>&\u2019}\n 1205 |       operator=(typename conditional<__assignable<const _T1&, const _T2&>(),\n      |                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n 1206 |          const tuple&,\n      |          ~~~~~~~~~~~~~                       \n 1207 |          const __nonesuch_no_braces",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0) {\n        if (n == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    long x = n / a;\n    long y = (n - a * x) / b;\n    if (n == a * x + b * y) {\n        return std::make_optional(x);\n    } else {\n        return std::nullopt;\n    }\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123340,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpp6zn02l3.cpp:2:\n/tmp/tmpp6zn02l3.cpp: In function \u2018int main()\u2019:\n/tmp/tmpp6zn02l3.cpp:22:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   22 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpp6zn02l3.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpp6zn02l3.cpp:2:\n/tmp/tmpp6zn02l3.cpp:22:60: note:   \u2018std::optional<long int>\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   22 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |                                                            ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n     ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0 && b == 0) {\n        if (n == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (a == 0) {\n        if (n % b == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (b == 0) {\n        if (n % a == 0) {\n            return std::make_optional(n / a);\n        } else {\n            return std::nullopt;\n        }\n    }\n    long d = std::__gcd(a, b);\n    if (n % d != 0) {\n        return std::nullopt;\n    }\n    long x0, y0;\n    std::tie(x0, y0) = find_solution(b / d, a / d, n / d).value();\n    return std::make_optional(x0 * (b / d) + y0 * (a / d));\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123340,
      "stdout": "",
      "stderr": "/tmp/tmp81okkm9n.cpp: In function \u2018std::optional<long int> find_solution(long int, long int, long int)\u2019:\n/tmp/tmp81okkm9n.cpp:31:65: error: no match for \u2018operator=\u2019 (operand types are \u2018std::tuple<long int&, long int&>\u2019 and \u2018long int\u2019)\n   31 |     std::tie(x0, y0) = find_solution(b / d, a / d, n / d).value();\n      |                                                                 ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/functional:54,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/pstl/glue_algorithm_defs.h:13,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:71,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n                 from /tmp/tmp81okkm9n.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/tuple:1205:7: note: candidate: \u2018std::tuple<_T1, _T2>& std::tuple<_T1, _T2>::operator=(typename std::conditional<__assignable<const _T1&, const _T2&>(), const std::tuple<_T1, _T2>&, const std::__nonesuch_no_braces&>::type) [with _T1 = long int&; _T2 = long int&; typename std::conditional<__assignable<const _T1&, const _T2&>(), const std::tuple<_T1, _T2>&, const std::__nonesuch_no_braces&>::type = const std::tuple<long int&, long int&>&]\u2019\n 1205 |       operator=(typename conditional<__assignable<const _T1&, const _T2&>(),\n      |       ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/tuple:1207:45: note:   no known conversion for argument 1 from \u2018long int\u2019 to \u2018std::conditional<true, const std::tuple<long int&, long int&>&, const std::__nonesuch_no_braces&>::type\u2019 {aka \u2018const std::tuple<long int&, long int&>&\u2019}\n 1205 |       operator=(typename conditional<__assignable<const _T1&, const _T2&>(),\n      |                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n 1206 |          const tuple&,\n      |          ~~~~~~~~~~~~~                       \n 1207 |          const __nonesuch_no_braces&>::type _",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0 && b == 0) {\n        if (n == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (a == 0) {\n        if (n % b == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (b == 0) {\n        if (n % a == 0) {\n            return std::make_optional(n / a);\n        } else {\n            return std::nullopt;\n        }\n    }\n    long g = std::__gcd(a, b);\n    if (n % g != 0) {\n        return std::nullopt;\n    }\n    long x = 0;\n    long y = n / b;\n    while (x * a + y * b != n) {\n        if (x * a + y * b > n) {\n            x--;\n        } else {\n            y++;\n        }\n    }\n    return std::make_optional(x);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123340,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpp9i7plaf.cpp:2:\n/tmp/tmpp9i7plaf.cpp: In function \u2018int main()\u2019:\n/tmp/tmpp9i7plaf.cpp:43:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   43 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpp9i7plaf.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpp9i7plaf.cpp:2:\n/tmp/tmpp9i7plaf.cpp:43:60: note:   \u2018std::optional<long int>\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   43 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |                                                            ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n     ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0 && b == 0) {\n        if (n == 0) {\n            return {0, 0};\n        } else {\n            return {};\n        }\n    }\n    if (a == 0) {\n        if (n % b == 0) {\n            return {0, n / b};\n        } else {\n            return {};\n        }\n    }\n    if (b == 0) {\n        if (n % a == 0) {\n            return {n / a, 0};\n        } else {\n            return {};\n        }\n    }\n    long g = std::gcd(a, b);\n    if (n % g != 0) {\n        return {};\n    }\n    a /= g;\n    b /= g;\n    n /= g;\n    long x, y;\n    std::tie(x, y) = find_solution(b, a % b, n).value();\n    return {y, x - y * (a / b)};\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123340,
      "stdout": "",
      "stderr": "/tmp/tmpzx63x7wa.cpp: In function \u2018std::optional<long int> find_solution(long int, long int, long int)\u2019:\n/tmp/tmpzx63x7wa.cpp:7:25: error: could not convert \u2018{0, 0}\u2019 from \u2018<brace-enclosed initializer list>\u2019 to \u2018std::optional<long int>\u2019\n    7 |             return {0, 0};\n      |                         ^\n      |                         |\n      |                         <brace-enclosed initializer list>\n/tmp/tmpzx63x7wa.cpp:14:29: error: could not convert \u2018{0, (n / b)}\u2019 from \u2018<brace-enclosed initializer list>\u2019 to \u2018std::optional<long int>\u2019\n   14 |             return {0, n / b};\n      |                             ^\n      |                             |\n      |                             <brace-enclosed initializer list>\n/tmp/tmpzx63x7wa.cpp:21:29: error: could not convert \u2018{(n / a), 0}\u2019 from \u2018<brace-enclosed initializer list>\u2019 to \u2018std::optional<long int>\u2019\n   21 |             return {n / a, 0};\n      |                             ^\n      |                             |\n      |                             <brace-enclosed initializer list>\n/tmp/tmpzx63x7wa.cpp:34:55: error: no match for \u2018operator=\u2019 (operand types are \u2018std::tuple<long int&, long int&>\u2019 and \u2018long int\u2019)\n   34 |     std::tie(x, y) = find_solution(b, a % b, n).value();\n      |                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/functional:54,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/pstl/glue_algorithm_defs.h:13,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:71,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n                 from /tmp/tmpzx63x7wa.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/tuple:1205:7: note: candidate: \u2018std::tuple<_T1, _T2>& std::tuple<_T1, _T2>::operator=(typename std::conditional<__assignable<const _T1&, const _T2&>(), const std::tuple<_T1, _T2>&, const std::",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n  if (a == 0 && b == 0) {\n    if (n == 0) {\n      return std::make_optional(0);\n    } else {\n      return std::nullopt;\n    }\n  } else if (a == 0) {\n    if (n % b == 0) {\n      return std::make_optional(n / b);\n    } else {\n      return std::nullopt;\n    }\n  } else if (b == 0) {\n    if (n % a == 0) {\n      return std::make_optional(n / a);\n    } else {\n      return std::nullopt;\n    }\n  } else {\n    long x, y;\n    long g = std::__gcd(a, b);\n    if (n % g != 0) {\n      return std::nullopt;\n    } else {\n      a /= g;\n      b /= g;\n      n /= g;\n      long x0, y0;\n      std::tie(x0, y0) = find_solution(b, a % b, n).value();\n      x = y0;\n      y = x0 - (a / b) * y0;\n      return std::make_optional(x);\n    }\n  }\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123340,
      "stdout": "",
      "stderr": "/tmp/tmp3d13sf7h.cpp: In function \u2018std::optional<long int> find_solution(long int, long int, long int)\u2019:\n/tmp/tmp3d13sf7h.cpp:33:59: error: no match for \u2018operator=\u2019 (operand types are \u2018std::tuple<long int&, long int&>\u2019 and \u2018long int\u2019)\n   33 |       std::tie(x0, y0) = find_solution(b, a % b, n).value();\n      |                                                           ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/functional:54,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/pstl/glue_algorithm_defs.h:13,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:71,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n                 from /tmp/tmp3d13sf7h.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/tuple:1205:7: note: candidate: \u2018std::tuple<_T1, _T2>& std::tuple<_T1, _T2>::operator=(typename std::conditional<__assignable<const _T1&, const _T2&>(), const std::tuple<_T1, _T2>&, const std::__nonesuch_no_braces&>::type) [with _T1 = long int&; _T2 = long int&; typename std::conditional<__assignable<const _T1&, const _T2&>(), const std::tuple<_T1, _T2>&, const std::__nonesuch_no_braces&>::type = const std::tuple<long int&, long int&>&]\u2019\n 1205 |       operator=(typename conditional<__assignable<const _T1&, const _T2&>(),\n      |       ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/tuple:1207:45: note:   no known conversion for argument 1 from \u2018long int\u2019 to \u2018std::conditional<true, const std::tuple<long int&, long int&>&, const std::__nonesuch_no_braces&>::type\u2019 {aka \u2018const std::tuple<long int&, long int&>&\u2019}\n 1205 |       operator=(typename conditional<__assignable<const _T1&, const _T2&>(),\n      |                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n 1206 |          const tuple&,\n      |          ~~~~~~~~~~~~~                       \n 1207 |          const __nonesuch_no_braces&>::type __in)\n      |",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0 && b == 0) {\n        if (n == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (a == 0) {\n        if (n % b == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (b == 0) {\n        if (n % a == 0) {\n            return std::make_optional(n / a);\n        } else {\n            return std::nullopt;\n        }\n    }\n    long g = std::__gcd(a, b);\n    if (n % g != 0) {\n        return std::nullopt;\n    }\n    long x = 0, y = 0;\n    long d = std::__gcd(a, b);\n    a /= d;\n    b /= d;\n    n /= d;\n    long x1 = 0, y1 = 1;\n    long x2 = 1, y2 = 0;\n    while (a != 0) {\n        long q = b / a;\n        long r = b % a;\n        long m = x2 - q * x1;\n        long n = y2 - q * y1;\n        x = m;\n        y = n;\n        b = a;\n        a = r;\n        x2 = x1;\n        x1 = x;\n        y2 = y1;\n        y1 = y;\n    }\n    x = x2 * n;\n    y = y2 * n;\n    return std::make_optional(x);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123340,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpg00gfrm3.cpp:2:\n/tmp/tmpg00gfrm3.cpp: In function \u2018int main()\u2019:\n/tmp/tmpg00gfrm3.cpp:57:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   57 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpg00gfrm3.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpg00gfrm3.cpp:2:\n/tmp/tmpg00gfrm3.cpp:57:60: note:   \u2018std::optional<long int>\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   57 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |                                                            ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n     ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0) {\n        if (n == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    long x = n / a;\n    long y = (n - a * x) / b;\n    if (a * x + b * y == n) {\n        return std::make_optional(x);\n    } else {\n        return std::nullopt;\n    }\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123249,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpgz4r64uz.cpp:2:\n/tmp/tmpgz4r64uz.cpp: In function \u2018int main()\u2019:\n/tmp/tmpgz4r64uz.cpp:22:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   22 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpgz4r64uz.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpgz4r64uz.cpp:2:\n/tmp/tmpgz4r64uz.cpp:22:60: note:   \u2018std::optional<long int>\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   22 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |                                                            ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n     ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0 && b == 0) {\n        if (n == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (a == 0) {\n        if (n % b == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (b == 0) {\n        if (n % a == 0) {\n            return std::make_optional(n / a);\n        } else {\n            return std::nullopt;\n        }\n    }\n    long g = std::gcd(a, b);\n    if (n % g != 0) {\n        return std::nullopt;\n    }\n    long x = 0, y = 0;\n    long d = std::gcd(a, b);\n    a /= d;\n    b /= d;\n    n /= d;\n    // solve a*x + b*y = n\n    // solve a*x = n (mod b)\n    // solve a*x + b*y = gcd(a, b)\n    // x = x0 + k*b/d\n    // y = y0 - k*a/d\n    std::tie(x, y) = find_solution(b, a % b, g);\n    x = (n / g) * x;\n    y = (n / g) * y;\n    return std::make_optional(x);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123340,
      "stdout": "",
      "stderr": "/tmp/tmpfax71ymm.cpp: In function \u2018std::optional<long int> find_solution(long int, long int, long int)\u2019:\n/tmp/tmpfax71ymm.cpp:40:47: error: no match for \u2018operator=\u2019 (operand types are \u2018std::tuple<long int&, long int&>\u2019 and \u2018std::optional<long int>\u2019)\n   40 |     std::tie(x, y) = find_solution(b, a % b, g);\n      |                                               ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/functional:54,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/pstl/glue_algorithm_defs.h:13,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:71,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n                 from /tmp/tmpfax71ymm.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/tuple:1205:7: note: candidate: \u2018std::tuple<_T1, _T2>& std::tuple<_T1, _T2>::operator=(typename std::conditional<__assignable<const _T1&, const _T2&>(), const std::tuple<_T1, _T2>&, const std::__nonesuch_no_braces&>::type) [with _T1 = long int&; _T2 = long int&; typename std::conditional<__assignable<const _T1&, const _T2&>(), const std::tuple<_T1, _T2>&, const std::__nonesuch_no_braces&>::type = const std::tuple<long int&, long int&>&]\u2019\n 1205 |       operator=(typename conditional<__assignable<const _T1&, const _T2&>(),\n      |       ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/tuple:1207:45: note:   no known conversion for argument 1 from \u2018std::optional<long int>\u2019 to \u2018std::conditional<true, const std::tuple<long int&, long int&>&, const std::__nonesuch_no_braces&>::type\u2019 {aka \u2018const std::tuple<long int&, long int&>&\u2019}\n 1205 |       operator=(typename conditional<__assignable<const _T1&, const _T2&>(),\n      |                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n 1206 |          const tuple&,\n      |          ~~~~~~~~~~~~~                       \n 1207 |          const __nonesuch_no_braces&>::type __in)\n ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (n % gcd(a, b) != 0) {\n        return std::nullopt;\n    }\n    long x = 0, y = 0;\n    long d = gcd(a, b);\n    x = n / d * b / a;\n    y = n / d - a / b * x;\n    return std::make_tuple(x, y);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123355,
      "stdout": "",
      "stderr": "/tmp/tmppnbp6d4m.cpp: In function \u2018std::optional<long int> find_solution(long int, long int, long int)\u2019:\n/tmp/tmppnbp6d4m.cpp:5:13: error: \u2018gcd\u2019 was not declared in this scope; did you mean \u2018std::gcd\u2019?\n    5 |     if (n % gcd(a, b) != 0) {\n      |             ^~~\n      |             std::gcd\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:84,\n                 from /tmp/tmppnbp6d4m.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/numeric:131:5: note: \u2018std::gcd\u2019 declared here\n  131 |     gcd(_Mn __m, _Nn __n)\n      |     ^~~\n/tmp/tmppnbp6d4m.cpp:9:14: error: \u2018gcd\u2019 was not declared in this scope; did you mean \u2018std::gcd\u2019?\n    9 |     long d = gcd(a, b);\n      |              ^~~\n      |              std::gcd\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:84,\n                 from /tmp/tmppnbp6d4m.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/numeric:131:5: note: \u2018std::gcd\u2019 declared here\n  131 |     gcd(_Mn __m, _Nn __n)\n      |     ^~~\n/tmp/tmppnbp6d4m.cpp:12:27: error: could not convert \u2018std::make_tuple(_Elements&& ...) [with _Elements = {long int&, long int&}](y)\u2019 from \u2018std::tuple<long int, long int>\u2019 to \u2018std::optional<long int>\u2019\n   12 |     return std::make_tuple(x, y);\n      |            ~~~~~~~~~~~~~~~^~~~~~\n      |                           |\n      |                           std::tuple<long int, long int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmppnbp6d4m.cpp:2:\n/tmp/tmppnbp6d4m.cpp: In function \u2018int main()\u2019:\n/tmp/tmppnbp6d4m.cpp:16:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   16 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0) {\n        if (n == 0) {\n            return std::make_optional(0);\n        }\n        return std::nullopt;\n    }\n    auto x = find_solution(b % a, a, n % a);\n    if (!x) {\n        return std::nullopt;\n    }\n    return std::make_optional(b / a * x.value() - n / a);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123264,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpt2pwcbno.cpp:2:\n/tmp/tmpt2pwcbno.cpp: In function \u2018int main()\u2019:\n/tmp/tmpt2pwcbno.cpp:19:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   19 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpt2pwcbno.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpt2pwcbno.cpp:2:\n/tmp/tmpt2pwcbno.cpp:19:60: note:   \u2018std::optional<long int>\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   19 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |                                                            ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n     ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0 && b == 0) {\n        if (n == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (a == 0) {\n        if (n % b == 0) {\n            return std::make_optional(n / b);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (b == 0) {\n        if (n % a == 0) {\n            return std::make_optional(n / a);\n        } else {\n            return std::nullopt;\n        }\n    }\n    long g = std::gcd(a, b);\n    if (n % g != 0) {\n        return std::nullopt;\n    }\n    long x = 0;\n    long y = 0;\n    long d = n / g;\n    // solve a * x + b * y = d * g\n    // a * x + b * y = d * g\n    // a * x = d * g - b * y\n    // a * x = d * g - b * y\n    // a * x = (d * g - b * y) / a\n    // x = (d * g - b * y) / a\n    // x = (d * g - b * y) / a\n    // x = (d * g - b * y) / a\n    // x = (d * g - b * y) / a\n    // x = (d * g - b * y) / a\n    // x = (d * g - b * y) / a\n    // x = (d * g - b * y) / a\n    // x = (d * g - b * y) / a\n    // x = (d * g - b * y) / a\n    // x = (d * g - b * y) / a\n    // x = (d * g - b * y) / a\n    // x = (d * g - b * y) / a\n    // x = (d * g - b * y) / a\n    // x = (d * g - b * y)\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123355,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp8g4ofk2c.cpp:2:\n/tmp/tmp8g4ofk2c.cpp: In function \u2018int main()\u2019:\n/tmp/tmp8g4ofk2c.cpp:55:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   55 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmp8g4ofk2c.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp8g4ofk2c.cpp:2:\n/tmp/tmp8g4ofk2c.cpp:55:60: note:   \u2018std::optional<long int>\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   55 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |                                                            ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n     ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0) {\n        if (n == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    auto x = find_solution(b % a, a, n);\n    if (!x) {\n        return std::nullopt;\n    }\n    return std::make_optional(b / a * x.value() - b / a * (b / a) * x.value() + n / a);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123279,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp482v87vv.cpp:2:\n/tmp/tmp482v87vv.cpp: In function \u2018int main()\u2019:\n/tmp/tmp482v87vv.cpp:20:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   20 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmp482v87vv.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp482v87vv.cpp:2:\n/tmp/tmp482v87vv.cpp:20:60: note:   \u2018std::optional<long int>\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   20 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |                                                            ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n     ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (n % __gcd(a, b) != 0) {\n        return std::nullopt;\n    }\n    long x = 0, y = 0;\n    long d = __gcd(a, b);\n    a /= d;\n    b /= d;\n    n /= d;\n    long x1 = 1, x2 = 0, y1 = 0, y2 = 1;\n    while (b != 0) {\n        long q = a / b;\n        long r = a % b;\n        long x = x2 - q * x1;\n        long y = y2 - q * y1;\n        a = b;\n        b = r;\n        x2 = x1;\n        x1 = x;\n        y2 = y1;\n        y1 = y;\n    }\n    x = n * x2;\n    y = (n - a * x) / b;\n    return std::make_optional(x);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123355,
      "stdout": "",
      "stderr": "/tmp/tmpiemvsygn.cpp: In function \u2018std::optional<long int> find_solution(long int, long int, long int)\u2019:\n/tmp/tmpiemvsygn.cpp:5:13: error: \u2018__gcd\u2019 was not declared in this scope\n    5 |     if (n % __gcd(a, b) != 0) {\n      |             ^~~~~\n/tmp/tmpiemvsygn.cpp:5:13: note: suggested alternatives:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n                 from /tmp/tmpiemvsygn.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algo.h:1232:5: note:   \u2018std::__gcd\u2019\n 1232 |     __gcd(_EuclideanRingElement __m, _EuclideanRingElement __n)\n      |     ^~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:84,\n                 from /tmp/tmpiemvsygn.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/numeric:102:5: note:   \u2018std::__detail::__gcd\u2019\n  102 |     __gcd(_Mn __m, _Nn __n)\n      |     ^~~~~\n/tmp/tmpiemvsygn.cpp:9:14: error: \u2018__gcd\u2019 was not declared in this scope\n    9 |     long d = __gcd(a, b);\n      |              ^~~~~\n/tmp/tmpiemvsygn.cpp:9:14: note: suggested alternatives:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n                 from /tmp/tmpiemvsygn.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algo.h:1232:5: note:   \u2018std::__gcd\u2019\n 1232 |     __gcd(_EuclideanRingElement __m, _EuclideanRingElement __n)\n      |     ^~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:84,\n                 from /tmp/tmpiemvsygn.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/numeric:102:5: note:   \u2018std::__detail::__gcd\u2019\n  102 |     __gcd(_Mn __m, _Nn __n)\n      |     ^~~~~\nIn file included from /shared/centos7/gcc/",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0 && b == 0) {\n        if (n == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (a == 0) {\n        if (n % b == 0) {\n            return std::make_optional(n / b);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (b == 0) {\n        if (n % a == 0) {\n            return std::make_optional(n / a);\n        } else {\n            return std::nullopt;\n        }\n    }\n    long g = std::gcd(a, b);\n    if (n % g != 0) {\n        return std::nullopt;\n    }\n    long x = 0;\n    long y = n / g;\n    while (y * a > n) {\n        y--;\n    }\n    while (y * a < n) {\n        y++;\n    }\n    if (y * a != n) {\n        return std::nullopt;\n    }\n    x = (n - b * y) / a;\n    return std::make_optional(x);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123355,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpajh6fn7l.cpp:2:\n/tmp/tmpajh6fn7l.cpp: In function \u2018int main()\u2019:\n/tmp/tmpajh6fn7l.cpp:46:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   46 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpajh6fn7l.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpajh6fn7l.cpp:2:\n/tmp/tmpajh6fn7l.cpp:46:60: note:   \u2018std::optional<long int>\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   46 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |                                                            ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n     ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0 && b == 0) {\n        if (n == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n\n    if (a == 0) {\n        if (n % b == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n\n    if (b == 0) {\n        if (n % a == 0) {\n            return std::make_optional(n / a);\n        } else {\n            return std::nullopt;\n        }\n    }\n\n    long d = std::__gcd(a, b);\n\n    if (n % d != 0) {\n        return std::nullopt;\n    }\n\n    long x0, y0;\n    std::tie(x0, y0) = find_solution(b / d, a / d, n / d).value();\n\n    return std::make_optional(x0 * b + y0 * a);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123355,
      "stdout": "",
      "stderr": "/tmp/tmpkaaq5omy.cpp: In function \u2018std::optional<long int> find_solution(long int, long int, long int)\u2019:\n/tmp/tmpkaaq5omy.cpp:36:65: error: no match for \u2018operator=\u2019 (operand types are \u2018std::tuple<long int&, long int&>\u2019 and \u2018long int\u2019)\n   36 |     std::tie(x0, y0) = find_solution(b / d, a / d, n / d).value();\n      |                                                                 ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/functional:54,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/pstl/glue_algorithm_defs.h:13,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:71,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n                 from /tmp/tmpkaaq5omy.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/tuple:1205:7: note: candidate: \u2018std::tuple<_T1, _T2>& std::tuple<_T1, _T2>::operator=(typename std::conditional<__assignable<const _T1&, const _T2&>(), const std::tuple<_T1, _T2>&, const std::__nonesuch_no_braces&>::type) [with _T1 = long int&; _T2 = long int&; typename std::conditional<__assignable<const _T1&, const _T2&>(), const std::tuple<_T1, _T2>&, const std::__nonesuch_no_braces&>::type = const std::tuple<long int&, long int&>&]\u2019\n 1205 |       operator=(typename conditional<__assignable<const _T1&, const _T2&>(),\n      |       ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/tuple:1207:45: note:   no known conversion for argument 1 from \u2018long int\u2019 to \u2018std::conditional<true, const std::tuple<long int&, long int&>&, const std::__nonesuch_no_braces&>::type\u2019 {aka \u2018const std::tuple<long int&, long int&>&\u2019}\n 1205 |       operator=(typename conditional<__assignable<const _T1&, const _T2&>(),\n      |                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n 1206 |          const tuple&,\n      |          ~~~~~~~~~~~~~                       \n 1207 |          const __nonesuch_no_braces&>::type _",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0 && b == 0) {\n        if (n == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (a == 0) {\n        if (n % b == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (b == 0) {\n        if (n % a == 0) {\n            return std::make_optional(n / a);\n        } else {\n            return std::nullopt;\n        }\n    }\n    long d = std::__gcd(a, b);\n    if (n % d != 0) {\n        return std::nullopt;\n    }\n    long x = 0;\n    long y = n / d;\n    while (y % a != 0) {\n        x++;\n        y -= b;\n    }\n    return std::make_optional(x);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123355,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp1zlv4sei.cpp:2:\n/tmp/tmp1zlv4sei.cpp: In function \u2018int main()\u2019:\n/tmp/tmp1zlv4sei.cpp:40:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   40 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmp1zlv4sei.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp1zlv4sei.cpp:2:\n/tmp/tmp1zlv4sei.cpp:40:60: note:   \u2018std::optional<long int>\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   40 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |                                                            ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n     ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0) {\n        if (n == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    long x = n / a;\n    long y = (n - a * x) / b;\n    if (a * x + b * y == n) {\n        return std::make_optional(x);\n    } else {\n        return std::nullopt;\n    }\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123249,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpgz4r64uz.cpp:2:\n/tmp/tmpgz4r64uz.cpp: In function \u2018int main()\u2019:\n/tmp/tmpgz4r64uz.cpp:22:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   22 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpgz4r64uz.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpgz4r64uz.cpp:2:\n/tmp/tmpgz4r64uz.cpp:22:60: note:   \u2018std::optional<long int>\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   22 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |                                                            ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n     ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0 && b == 0) {\n        if (n == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (a == 0) {\n        if (n % b == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (b == 0) {\n        if (n % a == 0) {\n            return std::make_optional(n / a);\n        } else {\n            return std::nullopt;\n        }\n    }\n    long g = std::__gcd(a, b);\n    if (n % g != 0) {\n        return std::nullopt;\n    }\n    long x = 0, y = 0;\n    long d = g;\n    while (d <= n) {\n        if ((n - d) % b == 0) {\n            x = d / a;\n            y = (n - d) / b;\n            break;\n        }\n        d += g;\n    }\n    if (x == 0 && y == 0) {\n        return std::nullopt;\n    }\n    return std::make_optional(x);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123355,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpviijwrpj.cpp:2:\n/tmp/tmpviijwrpj.cpp: In function \u2018int main()\u2019:\n/tmp/tmpviijwrpj.cpp:47:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   47 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpviijwrpj.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpviijwrpj.cpp:2:\n/tmp/tmpviijwrpj.cpp:47:60: note:   \u2018std::optional<long int>\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   47 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |                                                            ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n     ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0 && b == 0) {\n        if (n == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (a == 0) {\n        if (n % b == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (b == 0) {\n        if (n % a == 0) {\n            return std::make_optional(n / a);\n        } else {\n            return std::nullopt;\n        }\n    }\n    long x = 0, y = 0;\n    long g = std::__gcd(a, b);\n    if (n % g != 0) {\n        return std::nullopt;\n    }\n    long a1 = a / g, b1 = b / g, n1 = n / g;\n    long d = 1;\n    while (d <= n1) {\n        d *= 2;\n    }\n    while (d > 0) {\n        if (x + d <= n1) {\n            x += d;\n            y = (n1 - a1 * x) / b1;\n        }\n        d /= 2;\n    }\n    return std::make_optional(x);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123355,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp2ya9t8sv.cpp:2:\n/tmp/tmp2ya9t8sv.cpp: In function \u2018int main()\u2019:\n/tmp/tmp2ya9t8sv.cpp:47:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   47 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmp2ya9t8sv.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp2ya9t8sv.cpp:2:\n/tmp/tmp2ya9t8sv.cpp:47:60: note:   \u2018std::optional<long int>\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   47 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |                                                            ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n     ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (n % gcd(a, b) != 0) {\n        return std::nullopt;\n    }\n    long x = 0;\n    long y = n / b;\n    while (a * x + b * y != n) {\n        if (a * x + b * y < n) {\n            x++;\n        } else {\n            y--;\n        }\n    }\n    return std::make_optional(x);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123355,
      "stdout": "",
      "stderr": "/tmp/tmpue_16rmi.cpp: In function \u2018std::optional<long int> find_solution(long int, long int, long int)\u2019:\n/tmp/tmpue_16rmi.cpp:5:13: error: \u2018gcd\u2019 was not declared in this scope; did you mean \u2018std::gcd\u2019?\n    5 |     if (n % gcd(a, b) != 0) {\n      |             ^~~\n      |             std::gcd\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:84,\n                 from /tmp/tmpue_16rmi.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/numeric:131:5: note: \u2018std::gcd\u2019 declared here\n  131 |     gcd(_Mn __m, _Nn __n)\n      |     ^~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpue_16rmi.cpp:2:\n/tmp/tmpue_16rmi.cpp: In function \u2018int main()\u2019:\n/tmp/tmpue_16rmi.cpp:21:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   21 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpue_16rmi.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substituti",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0 && b == 0) {\n        if (n == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (a == 0) {\n        if (n % b == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (b == 0) {\n        if (n % a == 0) {\n            return std::make_optional(n / a);\n        } else {\n            return std::nullopt;\n        }\n    }\n    long g = std::__gcd(a, b);\n    if (n % g != 0) {\n        return std::nullopt;\n    }\n    long x = 0;\n    long y = n / b;\n    while (y * a <= n) {\n        if ((n - y * a) % b == 0) {\n            x = (n - y * a) / b;\n            break;\n        }\n        y++;\n    }\n    if (y * a > n) {\n        return std::nullopt;\n    }\n    return std::make_optional(x);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123355,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpf286p4j0.cpp:2:\n/tmp/tmpf286p4j0.cpp: In function \u2018int main()\u2019:\n/tmp/tmpf286p4j0.cpp:46:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   46 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpf286p4j0.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpf286p4j0.cpp:2:\n/tmp/tmpf286p4j0.cpp:46:60: note:   \u2018std::optional<long int>\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   46 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |                                                            ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n     ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0 && b == 0) {\n        if (n == 0) {\n            return std::make_tuple(0, 0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (a == 0) {\n        if (n % b == 0) {\n            return std::make_tuple(0, n / b);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (b == 0) {\n        if (n % a == 0) {\n            return std::make_tuple(n / a, 0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    long g = std::__gcd(a, b);\n    if (n % g != 0) {\n        return std::nullopt;\n    }\n    long x = n / a;\n    long y = n / b;\n    long k = 0;\n    while (x < 0 || y < 0) {\n        x += b / g;\n        y -= a / g;\n        k += 1;\n    }\n    return std::make_tuple(x, y);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123355,
      "stdout": "",
      "stderr": "/tmp/tmphrp4a4xo.cpp: In function \u2018std::optional<long int> find_solution(long int, long int, long int)\u2019:\n/tmp/tmphrp4a4xo.cpp:7:35: error: could not convert \u2018std::make_tuple(_Elements&& ...) [with _Elements = {int, int}](0)\u2019 from \u2018std::tuple<int, int>\u2019 to \u2018std::optional<long int>\u2019\n    7 |             return std::make_tuple(0, 0);\n      |                    ~~~~~~~~~~~~~~~^~~~~~\n      |                                   |\n      |                                   std::tuple<int, int>\n/tmp/tmphrp4a4xo.cpp:14:35: error: could not convert \u2018std::make_tuple(_Elements&& ...) [with _Elements = {int, long int}]((n / b))\u2019 from \u2018std::tuple<int, long int>\u2019 to \u2018std::optional<long int>\u2019\n   14 |             return std::make_tuple(0, n / b);\n      |                    ~~~~~~~~~~~~~~~^~~~~~~~~~\n      |                                   |\n      |                                   std::tuple<int, long int>\n/tmp/tmphrp4a4xo.cpp:21:35: error: could not convert \u2018std::make_tuple(_Elements&& ...) [with _Elements = {long int, int}](0)\u2019 from \u2018std::tuple<long int, int>\u2019 to \u2018std::optional<long int>\u2019\n   21 |             return std::make_tuple(n / a, 0);\n      |                    ~~~~~~~~~~~~~~~^~~~~~~~~~\n      |                                   |\n      |                                   std::tuple<long int, int>\n/tmp/tmphrp4a4xo.cpp:38:27: error: could not convert \u2018std::make_tuple(_Elements&& ...) [with _Elements = {long int&, long int&}](y)\u2019 from \u2018std::tuple<long int, long int>\u2019 to \u2018std::optional<long int>\u2019\n   38 |     return std::make_tuple(x, y);\n      |            ~~~~~~~~~~~~~~~^~~~~~\n      |                           |\n      |                           std::tuple<long int, long int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmphrp4a4xo.cpp:2:\n/tmp/tmphrp4a4xo.cpp: In function \u2018int main()\u2019:\n/tmp/tmp",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0 && b == 0) {\n        if (n == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (a == 0) {\n        if (n % b == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (b == 0) {\n        if (n % a == 0) {\n            return std::make_optional(n / a);\n        } else {\n            return std::nullopt;\n        }\n    }\n    long g = std::gcd(a, b);\n    if (n % g != 0) {\n        return std::nullopt;\n    }\n    long p = n / g;\n    a /= g;\n    b /= g;\n    long x, y;\n    std::tie(x, y) = find_solution(b, a % b, p).value();\n    return std::make_optional(y - (a / b) * x);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123355,
      "stdout": "",
      "stderr": "/tmp/tmph1en34is.cpp: In function \u2018std::optional<long int> find_solution(long int, long int, long int)\u2019:\n/tmp/tmph1en34is.cpp:34:55: error: no match for \u2018operator=\u2019 (operand types are \u2018std::tuple<long int&, long int&>\u2019 and \u2018long int\u2019)\n   34 |     std::tie(x, y) = find_solution(b, a % b, p).value();\n      |                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/functional:54,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/pstl/glue_algorithm_defs.h:13,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:71,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n                 from /tmp/tmph1en34is.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/tuple:1205:7: note: candidate: \u2018std::tuple<_T1, _T2>& std::tuple<_T1, _T2>::operator=(typename std::conditional<__assignable<const _T1&, const _T2&>(), const std::tuple<_T1, _T2>&, const std::__nonesuch_no_braces&>::type) [with _T1 = long int&; _T2 = long int&; typename std::conditional<__assignable<const _T1&, const _T2&>(), const std::tuple<_T1, _T2>&, const std::__nonesuch_no_braces&>::type = const std::tuple<long int&, long int&>&]\u2019\n 1205 |       operator=(typename conditional<__assignable<const _T1&, const _T2&>(),\n      |       ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/tuple:1207:45: note:   no known conversion for argument 1 from \u2018long int\u2019 to \u2018std::conditional<true, const std::tuple<long int&, long int&>&, const std::__nonesuch_no_braces&>::type\u2019 {aka \u2018const std::tuple<long int&, long int&>&\u2019}\n 1205 |       operator=(typename conditional<__assignable<const _T1&, const _T2&>(),\n      |                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n 1206 |          const tuple&,\n      |          ~~~~~~~~~~~~~                       \n 1207 |          const __nonesuch_no_braces&>::type __in)\n      |        ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (n % gcd(a, b) != 0) return std::nullopt;\n    long x = 0, y = 0;\n    long d = gcd(a, b);\n    x = n / d * (b / d);\n    y = n / d * (a / d);\n    return std::make_tuple(x, y);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123355,
      "stdout": "",
      "stderr": "/tmp/tmpsmbggr4d.cpp: In function \u2018std::optional<long int> find_solution(long int, long int, long int)\u2019:\n/tmp/tmpsmbggr4d.cpp:5:13: error: \u2018gcd\u2019 was not declared in this scope; did you mean \u2018std::gcd\u2019?\n    5 |     if (n % gcd(a, b) != 0) return std::nullopt;\n      |             ^~~\n      |             std::gcd\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:84,\n                 from /tmp/tmpsmbggr4d.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/numeric:131:5: note: \u2018std::gcd\u2019 declared here\n  131 |     gcd(_Mn __m, _Nn __n)\n      |     ^~~\n/tmp/tmpsmbggr4d.cpp:7:14: error: \u2018gcd\u2019 was not declared in this scope; did you mean \u2018std::gcd\u2019?\n    7 |     long d = gcd(a, b);\n      |              ^~~\n      |              std::gcd\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:84,\n                 from /tmp/tmpsmbggr4d.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/numeric:131:5: note: \u2018std::gcd\u2019 declared here\n  131 |     gcd(_Mn __m, _Nn __n)\n      |     ^~~\n/tmp/tmpsmbggr4d.cpp:10:27: error: could not convert \u2018std::make_tuple(_Elements&& ...) [with _Elements = {long int&, long int&}](y)\u2019 from \u2018std::tuple<long int, long int>\u2019 to \u2018std::optional<long int>\u2019\n   10 |     return std::make_tuple(x, y);\n      |            ~~~~~~~~~~~~~~~^~~~~~\n      |                           |\n      |                           std::tuple<long int, long int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpsmbggr4d.cpp:2:\n/tmp/tmpsmbggr4d.cpp: In function \u2018int main()\u2019:\n/tmp/tmpsmbggr4d.cpp:14:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   14 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n   ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (n % gcd(a, b) != 0) {\n        return std::nullopt;\n    }\n    long x = 0, y = 0;\n    long d = gcd(a, b);\n    x = n / d * b / a;\n    y = (n - a * x) / b;\n    return std::make_tuple(x, y);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1665510514,
      "stdout": "",
      "stderr": "/tmp/tmpmq79w5re.cpp: In function \u2018std::optional<long int> find_solution(long int, long int, long int)\u2019:\n/tmp/tmpmq79w5re.cpp:5:13: error: \u2018gcd\u2019 was not declared in this scope; did you mean \u2018std::gcd\u2019?\n    5 |     if (n % gcd(a, b) != 0) {\n      |             ^~~\n      |             std::gcd\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:84,\n                 from /tmp/tmpmq79w5re.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/numeric:131:5: note: \u2018std::gcd\u2019 declared here\n  131 |     gcd(_Mn __m, _Nn __n)\n      |     ^~~\n/tmp/tmpmq79w5re.cpp:9:14: error: \u2018gcd\u2019 was not declared in this scope; did you mean \u2018std::gcd\u2019?\n    9 |     long d = gcd(a, b);\n      |              ^~~\n      |              std::gcd\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:84,\n                 from /tmp/tmpmq79w5re.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/numeric:131:5: note: \u2018std::gcd\u2019 declared here\n  131 |     gcd(_Mn __m, _Nn __n)\n      |     ^~~\n/tmp/tmpmq79w5re.cpp:12:27: error: could not convert \u2018std::make_tuple(_Elements&& ...) [with _Elements = {long int&, long int&}](y)\u2019 from \u2018std::tuple<long int, long int>\u2019 to \u2018std::optional<long int>\u2019\n   12 |     return std::make_tuple(x, y);\n      |            ~~~~~~~~~~~~~~~^~~~~~\n      |                           |\n      |                           std::tuple<long int, long int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpmq79w5re.cpp:2:\n/tmp/tmpmq79w5re.cpp: In function \u2018int main()\u2019:\n/tmp/tmpmq79w5re.cpp:16:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   16 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0 && b == 0) {\n        if (n == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (a == 0) {\n        if (n % b == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (b == 0) {\n        if (n % a == 0) {\n            return std::make_optional(n / a);\n        } else {\n            return std::nullopt;\n        }\n    }\n    long g = std::gcd(a, b);\n    if (n % g != 0) {\n        return std::nullopt;\n    }\n    long x = 0, y = 0;\n    std::tie(x, y) = find_solution(b / g, a / g, n / g);\n    return std::make_optional(x * (b / g) + y * (a / g));\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123355,
      "stdout": "",
      "stderr": "/tmp/tmpluz17d_s.cpp: In function \u2018std::optional<long int> find_solution(long int, long int, long int)\u2019:\n/tmp/tmpluz17d_s.cpp:31:55: error: no match for \u2018operator=\u2019 (operand types are \u2018std::tuple<long int&, long int&>\u2019 and \u2018std::optional<long int>\u2019)\n   31 |     std::tie(x, y) = find_solution(b / g, a / g, n / g);\n      |                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/functional:54,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/pstl/glue_algorithm_defs.h:13,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:71,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n                 from /tmp/tmpluz17d_s.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/tuple:1205:7: note: candidate: \u2018std::tuple<_T1, _T2>& std::tuple<_T1, _T2>::operator=(typename std::conditional<__assignable<const _T1&, const _T2&>(), const std::tuple<_T1, _T2>&, const std::__nonesuch_no_braces&>::type) [with _T1 = long int&; _T2 = long int&; typename std::conditional<__assignable<const _T1&, const _T2&>(), const std::tuple<_T1, _T2>&, const std::__nonesuch_no_braces&>::type = const std::tuple<long int&, long int&>&]\u2019\n 1205 |       operator=(typename conditional<__assignable<const _T1&, const _T2&>(),\n      |       ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/tuple:1207:45: note:   no known conversion for argument 1 from \u2018std::optional<long int>\u2019 to \u2018std::conditional<true, const std::tuple<long int&, long int&>&, const std::__nonesuch_no_braces&>::type\u2019 {aka \u2018const std::tuple<long int&, long int&>&\u2019}\n 1205 |       operator=(typename conditional<__assignable<const _T1&, const _T2&>(),\n      |                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n 1206 |          const tuple&,\n      |          ~~~~~~~~~~~~~                       \n 1207 |          const __nonesuch_no_braces",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0 && b == 0) {\n        if (n == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (a == 0) {\n        if (n % b == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (b == 0) {\n        if (n % a == 0) {\n            return std::make_optional(n / a);\n        } else {\n            return std::nullopt;\n        }\n    }\n    long gcd = std::__gcd(a, b);\n    if (n % gcd != 0) {\n        return std::nullopt;\n    }\n    long x = 0;\n    long y = n / b;\n    while (a * x + b * y != n) {\n        if (a * x + b * y < n) {\n            x++;\n        } else {\n            y--;\n        }\n    }\n    return std::make_optional(x);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123355,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpbzhs4wh9.cpp:2:\n/tmp/tmpbzhs4wh9.cpp: In function \u2018int main()\u2019:\n/tmp/tmpbzhs4wh9.cpp:43:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   43 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpbzhs4wh9.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpbzhs4wh9.cpp:2:\n/tmp/tmpbzhs4wh9.cpp:43:60: note:   \u2018std::optional<long int>\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   43 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |                                                            ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n     ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0 && b == 0) {\n        if (n == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (a == 0) {\n        if (n % b == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (b == 0) {\n        if (n % a == 0) {\n            return std::make_optional(n / a);\n        } else {\n            return std::nullopt;\n        }\n    }\n    long d = std::__gcd(a, b);\n    if (n % d != 0) {\n        return std::nullopt;\n    }\n    long x = 0, y = 0;\n    std::tie(x, y) = find_solution(b / d, a / d, n / d);\n    return std::make_optional(x * (b / d) + y * (a / d));\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123355,
      "stdout": "",
      "stderr": "/tmp/tmpto98a5ag.cpp: In function \u2018std::optional<long int> find_solution(long int, long int, long int)\u2019:\n/tmp/tmpto98a5ag.cpp:31:55: error: no match for \u2018operator=\u2019 (operand types are \u2018std::tuple<long int&, long int&>\u2019 and \u2018std::optional<long int>\u2019)\n   31 |     std::tie(x, y) = find_solution(b / d, a / d, n / d);\n      |                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/functional:54,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/pstl/glue_algorithm_defs.h:13,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:71,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n                 from /tmp/tmpto98a5ag.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/tuple:1205:7: note: candidate: \u2018std::tuple<_T1, _T2>& std::tuple<_T1, _T2>::operator=(typename std::conditional<__assignable<const _T1&, const _T2&>(), const std::tuple<_T1, _T2>&, const std::__nonesuch_no_braces&>::type) [with _T1 = long int&; _T2 = long int&; typename std::conditional<__assignable<const _T1&, const _T2&>(), const std::tuple<_T1, _T2>&, const std::__nonesuch_no_braces&>::type = const std::tuple<long int&, long int&>&]\u2019\n 1205 |       operator=(typename conditional<__assignable<const _T1&, const _T2&>(),\n      |       ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/tuple:1207:45: note:   no known conversion for argument 1 from \u2018std::optional<long int>\u2019 to \u2018std::conditional<true, const std::tuple<long int&, long int&>&, const std::__nonesuch_no_braces&>::type\u2019 {aka \u2018const std::tuple<long int&, long int&>&\u2019}\n 1205 |       operator=(typename conditional<__assignable<const _T1&, const _T2&>(),\n      |                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n 1206 |          const tuple&,\n      |          ~~~~~~~~~~~~~                       \n 1207 |          const __nonesuch_no_braces",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (n % gcd(a, b) != 0) {\n        return std::nullopt;\n    }\n    long x = 0, y = 0;\n    long d = gcd(a, b);\n    x = n / d * b / a;\n    y = (n - a * x) / b;\n    return std::make_tuple(x, y);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1665510514,
      "stdout": "",
      "stderr": "/tmp/tmpmq79w5re.cpp: In function \u2018std::optional<long int> find_solution(long int, long int, long int)\u2019:\n/tmp/tmpmq79w5re.cpp:5:13: error: \u2018gcd\u2019 was not declared in this scope; did you mean \u2018std::gcd\u2019?\n    5 |     if (n % gcd(a, b) != 0) {\n      |             ^~~\n      |             std::gcd\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:84,\n                 from /tmp/tmpmq79w5re.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/numeric:131:5: note: \u2018std::gcd\u2019 declared here\n  131 |     gcd(_Mn __m, _Nn __n)\n      |     ^~~\n/tmp/tmpmq79w5re.cpp:9:14: error: \u2018gcd\u2019 was not declared in this scope; did you mean \u2018std::gcd\u2019?\n    9 |     long d = gcd(a, b);\n      |              ^~~\n      |              std::gcd\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:84,\n                 from /tmp/tmpmq79w5re.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/numeric:131:5: note: \u2018std::gcd\u2019 declared here\n  131 |     gcd(_Mn __m, _Nn __n)\n      |     ^~~\n/tmp/tmpmq79w5re.cpp:12:27: error: could not convert \u2018std::make_tuple(_Elements&& ...) [with _Elements = {long int&, long int&}](y)\u2019 from \u2018std::tuple<long int, long int>\u2019 to \u2018std::optional<long int>\u2019\n   12 |     return std::make_tuple(x, y);\n      |            ~~~~~~~~~~~~~~~^~~~~~\n      |                           |\n      |                           std::tuple<long int, long int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpmq79w5re.cpp:2:\n/tmp/tmpmq79w5re.cpp: In function \u2018int main()\u2019:\n/tmp/tmpmq79w5re.cpp:16:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   16 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n  if (a == 0 && b == 0) {\n    if (n == 0) {\n      return std::make_optional(0);\n    } else {\n      return std::nullopt;\n    }\n  }\n  if (a == 0) {\n    if (n % b == 0) {\n      return std::make_optional(n / b);\n    } else {\n      return std::nullopt;\n    }\n  }\n  if (b == 0) {\n    if (n % a == 0) {\n      return std::make_optional(n / a);\n    } else {\n      return std::nullopt;\n    }\n  }\n  long gcd = std::__gcd(a, b);\n  if (n % gcd != 0) {\n    return std::nullopt;\n  }\n  long x = 0;\n  long y = n / b;\n  while (a * x + b * y != n) {\n    if (a * x + b * y < n) {\n      x++;\n    } else {\n      y--;\n    }\n  }\n  return std::make_optional(x);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123355,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp8n0xk3oe.cpp:2:\n/tmp/tmp8n0xk3oe.cpp: In function \u2018int main()\u2019:\n/tmp/tmp8n0xk3oe.cpp:43:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   43 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmp8n0xk3oe.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp8n0xk3oe.cpp:2:\n/tmp/tmp8n0xk3oe.cpp:43:60: note:   \u2018std::optional<long int>\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   43 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |                                                            ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n     ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (n % gcd(a, b) != 0) {\n        return std::nullopt;\n    }\n    long x = 0, y = 0;\n    long d = gcd(a, b);\n    x = n / d * b / a;\n    y = (n - a * x) / b;\n    return std::make_tuple(x, y);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1665510514,
      "stdout": "",
      "stderr": "/tmp/tmpmq79w5re.cpp: In function \u2018std::optional<long int> find_solution(long int, long int, long int)\u2019:\n/tmp/tmpmq79w5re.cpp:5:13: error: \u2018gcd\u2019 was not declared in this scope; did you mean \u2018std::gcd\u2019?\n    5 |     if (n % gcd(a, b) != 0) {\n      |             ^~~\n      |             std::gcd\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:84,\n                 from /tmp/tmpmq79w5re.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/numeric:131:5: note: \u2018std::gcd\u2019 declared here\n  131 |     gcd(_Mn __m, _Nn __n)\n      |     ^~~\n/tmp/tmpmq79w5re.cpp:9:14: error: \u2018gcd\u2019 was not declared in this scope; did you mean \u2018std::gcd\u2019?\n    9 |     long d = gcd(a, b);\n      |              ^~~\n      |              std::gcd\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:84,\n                 from /tmp/tmpmq79w5re.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/numeric:131:5: note: \u2018std::gcd\u2019 declared here\n  131 |     gcd(_Mn __m, _Nn __n)\n      |     ^~~\n/tmp/tmpmq79w5re.cpp:12:27: error: could not convert \u2018std::make_tuple(_Elements&& ...) [with _Elements = {long int&, long int&}](y)\u2019 from \u2018std::tuple<long int, long int>\u2019 to \u2018std::optional<long int>\u2019\n   12 |     return std::make_tuple(x, y);\n      |            ~~~~~~~~~~~~~~~^~~~~~\n      |                           |\n      |                           std::tuple<long int, long int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpmq79w5re.cpp:2:\n/tmp/tmpmq79w5re.cpp: In function \u2018int main()\u2019:\n/tmp/tmpmq79w5re.cpp:16:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   16 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0 && b == 0) {\n        if (n == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (a == 0) {\n        if (n % b == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (b == 0) {\n        if (n % a == 0) {\n            return std::make_optional(n / a);\n        } else {\n            return std::nullopt;\n        }\n    }\n    long gcd = std::__gcd(a, b);\n    if (n % gcd != 0) {\n        return std::nullopt;\n    }\n    long x = 0;\n    long y = n / b;\n    while (a * x + b * y != n) {\n        if (a * x + b * y < n) {\n            x += b / gcd;\n        } else {\n            y -= a / gcd;\n        }\n    }\n    return std::make_optional(x);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123249,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpwp9izskm.cpp:2:\n/tmp/tmpwp9izskm.cpp: In function \u2018int main()\u2019:\n/tmp/tmpwp9izskm.cpp:43:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   43 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpwp9izskm.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpwp9izskm.cpp:2:\n/tmp/tmpwp9izskm.cpp:43:60: note:   \u2018std::optional<long int>\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   43 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |                                                            ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n     ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (n % gcd(a, b) != 0) {\n        return std::nullopt;\n    }\n    long x = 0;\n    long y = n / b;\n    while (a * x + b * y != n) {\n        if (a * x + b * y < n) {\n            x++;\n        } else {\n            y--;\n        }\n    }\n    return std::make_optional(x);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123355,
      "stdout": "",
      "stderr": "/tmp/tmpue_16rmi.cpp: In function \u2018std::optional<long int> find_solution(long int, long int, long int)\u2019:\n/tmp/tmpue_16rmi.cpp:5:13: error: \u2018gcd\u2019 was not declared in this scope; did you mean \u2018std::gcd\u2019?\n    5 |     if (n % gcd(a, b) != 0) {\n      |             ^~~\n      |             std::gcd\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:84,\n                 from /tmp/tmpue_16rmi.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/numeric:131:5: note: \u2018std::gcd\u2019 declared here\n  131 |     gcd(_Mn __m, _Nn __n)\n      |     ^~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpue_16rmi.cpp:2:\n/tmp/tmpue_16rmi.cpp: In function \u2018int main()\u2019:\n/tmp/tmpue_16rmi.cpp:21:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   21 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpue_16rmi.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substituti",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (n % gcd(a, b) != 0) {\n        return std::nullopt;\n    }\n    long x = 0;\n    long y = n / b;\n    while (a * x + b * y != n) {\n        if (a * x + b * y < n) {\n            x++;\n        } else {\n            y--;\n        }\n    }\n    return std::make_optional(x);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123355,
      "stdout": "",
      "stderr": "/tmp/tmpue_16rmi.cpp: In function \u2018std::optional<long int> find_solution(long int, long int, long int)\u2019:\n/tmp/tmpue_16rmi.cpp:5:13: error: \u2018gcd\u2019 was not declared in this scope; did you mean \u2018std::gcd\u2019?\n    5 |     if (n % gcd(a, b) != 0) {\n      |             ^~~\n      |             std::gcd\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:84,\n                 from /tmp/tmpue_16rmi.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/numeric:131:5: note: \u2018std::gcd\u2019 declared here\n  131 |     gcd(_Mn __m, _Nn __n)\n      |     ^~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpue_16rmi.cpp:2:\n/tmp/tmpue_16rmi.cpp: In function \u2018int main()\u2019:\n/tmp/tmpue_16rmi.cpp:21:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   21 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpue_16rmi.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substituti",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n  if (a == 0 && b == 0) {\n    if (n == 0) {\n      return std::make_optional(0);\n    } else {\n      return std::nullopt;\n    }\n  }\n  if (a == 0) {\n    if (n % b == 0) {\n      return std::make_optional(0);\n    } else {\n      return std::nullopt;\n    }\n  }\n  if (b == 0) {\n    if (n % a == 0) {\n      return std::make_optional(n / a);\n    } else {\n      return std::nullopt;\n    }\n  }\n  long d = std::__gcd(a, b);\n  if (n % d != 0) {\n    return std::nullopt;\n  }\n  long x = 0, y = 0;\n  long x1 = 1, y1 = 1;\n  long x2 = 0, y2 = 1;\n  long q = a / b;\n  long r = a % b;\n  while (r != 0) {\n    long temp = x2;\n    x2 = x1 - q * x2;\n    x1 = temp;\n    temp = y2;\n    y2 = y1 - q * y2;\n    y1 = temp;\n    a = b;\n    b = r;\n    q = a / b;\n    r = a % b;\n  }\n  x = x2;\n  y = y2;\n  if (x < 0) {\n    x += b;\n    y -= a;\n  }\n  return std::make_optional(x * (n / d));\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123355,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp3shdohjr.cpp:2:\n/tmp/tmp3shdohjr.cpp: In function \u2018int main()\u2019:\n/tmp/tmp3shdohjr.cpp:57:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   57 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmp3shdohjr.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp3shdohjr.cpp:2:\n/tmp/tmp3shdohjr.cpp:57:60: note:   \u2018std::optional<long int>\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   57 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |                                                            ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n     ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0 && b == 0) {\n        if (n == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (a == 0) {\n        if (n % b == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (b == 0) {\n        if (n % a == 0) {\n            return std::make_optional(n / a);\n        } else {\n            return std::nullopt;\n        }\n    }\n    long d = std::__gcd(a, b);\n    if (n % d != 0) {\n        return std::nullopt;\n    }\n    long x = 0, y = 0;\n    std::tie(x, y) = find_solution(b / d, a / d, n / d);\n    return std::make_optional(x * (b / d) + y * (a / d));\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123355,
      "stdout": "",
      "stderr": "/tmp/tmpto98a5ag.cpp: In function \u2018std::optional<long int> find_solution(long int, long int, long int)\u2019:\n/tmp/tmpto98a5ag.cpp:31:55: error: no match for \u2018operator=\u2019 (operand types are \u2018std::tuple<long int&, long int&>\u2019 and \u2018std::optional<long int>\u2019)\n   31 |     std::tie(x, y) = find_solution(b / d, a / d, n / d);\n      |                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/functional:54,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/pstl/glue_algorithm_defs.h:13,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:71,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n                 from /tmp/tmpto98a5ag.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/tuple:1205:7: note: candidate: \u2018std::tuple<_T1, _T2>& std::tuple<_T1, _T2>::operator=(typename std::conditional<__assignable<const _T1&, const _T2&>(), const std::tuple<_T1, _T2>&, const std::__nonesuch_no_braces&>::type) [with _T1 = long int&; _T2 = long int&; typename std::conditional<__assignable<const _T1&, const _T2&>(), const std::tuple<_T1, _T2>&, const std::__nonesuch_no_braces&>::type = const std::tuple<long int&, long int&>&]\u2019\n 1205 |       operator=(typename conditional<__assignable<const _T1&, const _T2&>(),\n      |       ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/tuple:1207:45: note:   no known conversion for argument 1 from \u2018std::optional<long int>\u2019 to \u2018std::conditional<true, const std::tuple<long int&, long int&>&, const std::__nonesuch_no_braces&>::type\u2019 {aka \u2018const std::tuple<long int&, long int&>&\u2019}\n 1205 |       operator=(typename conditional<__assignable<const _T1&, const _T2&>(),\n      |                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n 1206 |          const tuple&,\n      |          ~~~~~~~~~~~~~                       \n 1207 |          const __nonesuch_no_braces",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0 && b == 0) {\n        if (n == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (a == 0) {\n        if (n % b == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (b == 0) {\n        if (n % a == 0) {\n            return std::make_optional(n / a);\n        } else {\n            return std::nullopt;\n        }\n    }\n    long g = std::__gcd(a, b);\n    if (n % g != 0) {\n        return std::nullopt;\n    }\n    long x = 0, y = 0;\n    long d = n / g;\n    std::tie(x, y) = find_solution(b / g, a / g, d);\n    return std::make_optional(x * (a / g) + y * (b / g));\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123295,
      "stdout": "",
      "stderr": "/tmp/tmp1eas0ww5.cpp: In function \u2018std::optional<long int> find_solution(long int, long int, long int)\u2019:\n/tmp/tmp1eas0ww5.cpp:32:51: error: no match for \u2018operator=\u2019 (operand types are \u2018std::tuple<long int&, long int&>\u2019 and \u2018std::optional<long int>\u2019)\n   32 |     std::tie(x, y) = find_solution(b / g, a / g, d);\n      |                                                   ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/functional:54,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/pstl/glue_algorithm_defs.h:13,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:71,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n                 from /tmp/tmp1eas0ww5.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/tuple:1205:7: note: candidate: \u2018std::tuple<_T1, _T2>& std::tuple<_T1, _T2>::operator=(typename std::conditional<__assignable<const _T1&, const _T2&>(), const std::tuple<_T1, _T2>&, const std::__nonesuch_no_braces&>::type) [with _T1 = long int&; _T2 = long int&; typename std::conditional<__assignable<const _T1&, const _T2&>(), const std::tuple<_T1, _T2>&, const std::__nonesuch_no_braces&>::type = const std::tuple<long int&, long int&>&]\u2019\n 1205 |       operator=(typename conditional<__assignable<const _T1&, const _T2&>(),\n      |       ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/tuple:1207:45: note:   no known conversion for argument 1 from \u2018std::optional<long int>\u2019 to \u2018std::conditional<true, const std::tuple<long int&, long int&>&, const std::__nonesuch_no_braces&>::type\u2019 {aka \u2018const std::tuple<long int&, long int&>&\u2019}\n 1205 |       operator=(typename conditional<__assignable<const _T1&, const _T2&>(),\n      |                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n 1206 |          const tuple&,\n      |          ~~~~~~~~~~~~~                       \n 1207 |          const __nonesuch_no_braces&>::type",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0 && b == 0) {\n        if (n == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (a == 0) {\n        if (n % b == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (b == 0) {\n        if (n % a == 0) {\n            return std::make_optional(n / a);\n        } else {\n            return std::nullopt;\n        }\n    }\n    long g = std::__gcd(a, b);\n    if (n % g != 0) {\n        return std::nullopt;\n    }\n    long x = 0;\n    long y = n / b;\n    while (y * a <= n) {\n        if ((n - y * a) % b == 0) {\n            x = (n - y * a) / b;\n            break;\n        }\n        y++;\n    }\n    if (x * a + y * b == n) {\n        return std::make_optional(x);\n    } else {\n        return std::nullopt;\n    }\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123355,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmph49ln9u7.cpp:2:\n/tmp/tmph49ln9u7.cpp: In function \u2018int main()\u2019:\n/tmp/tmph49ln9u7.cpp:47:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   47 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmph49ln9u7.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmph49ln9u7.cpp:2:\n/tmp/tmph49ln9u7.cpp:47:60: note:   \u2018std::optional<long int>\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   47 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |                                                            ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n     ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0 && b == 0) {\n        if (n == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (a == 0) {\n        if (n % b == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (b == 0) {\n        if (n % a == 0) {\n            return std::make_optional(n / a);\n        } else {\n            return std::nullopt;\n        }\n    }\n    long g = std::__gcd(a, b);\n    if (n % g != 0) {\n        return std::nullopt;\n    }\n    long a1 = a / g;\n    long b1 = b / g;\n    long n1 = n / g;\n    long x, y;\n    long d = extended_euclid(a1, b1, x, y);\n    if (n1 % d != 0) {\n        return std::nullopt;\n    }\n    x *= n1 / d;\n    y *= n1 / d;\n    return std::make_optional(x);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123355,
      "stdout": "",
      "stderr": "/tmp/tmpo7u09bda.cpp: In function \u2018std::optional<long int> find_solution(long int, long int, long int)\u2019:\n/tmp/tmpo7u09bda.cpp:34:14: error: \u2018extended_euclid\u2019 was not declared in this scope\n   34 |     long d = extended_euclid(a1, b1, x, y);\n      |              ^~~~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpo7u09bda.cpp:2:\n/tmp/tmpo7u09bda.cpp: In function \u2018int main()\u2019:\n/tmp/tmpo7u09bda.cpp:44:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   44 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpo7u09bda.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpo7u09bda.cpp:2:\n/tmp/tmpo7u09bda.cpp:44:60: note:   \u2018std::optional<long int>\u2019 is not d",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    long x = 0;\n    long y = n / b;\n    while (a * x + b * y != n) {\n        if (a * x + b * y > n) {\n            y--;\n        } else {\n            x++;\n        }\n        if (y < 0) {\n            return std::nullopt;\n        }\n    }\n    return std::make_optional(x);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123279,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp2yalcms3.cpp:2:\n/tmp/tmp2yalcms3.cpp: In function \u2018int main()\u2019:\n/tmp/tmp2yalcms3.cpp:21:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   21 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmp2yalcms3.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp2yalcms3.cpp:2:\n/tmp/tmp2yalcms3.cpp:21:60: note:   \u2018std::optional<long int>\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   21 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |                                                            ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n     ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0 && b == 0) {\n        if (n == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (a == 0) {\n        if (n % b == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (b == 0) {\n        if (n % a == 0) {\n            return std::make_optional(n / a);\n        } else {\n            return std::nullopt;\n        }\n    }\n    long gcd = std::__gcd(a, b);\n    if (n % gcd != 0) {\n        return std::nullopt;\n    }\n    long x = 0;\n    long y = n / b;\n    while (a * x + b * y != n) {\n        if (a * x + b * y < n) {\n            x += b / gcd;\n        } else {\n            y -= a / gcd;\n        }\n    }\n    return std::make_optional(x);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123249,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpwp9izskm.cpp:2:\n/tmp/tmpwp9izskm.cpp: In function \u2018int main()\u2019:\n/tmp/tmpwp9izskm.cpp:43:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   43 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpwp9izskm.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpwp9izskm.cpp:2:\n/tmp/tmpwp9izskm.cpp:43:60: note:   \u2018std::optional<long int>\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   43 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |                                                            ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n     ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0 && b == 0) {\n        if (n == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (a == 0) {\n        if (n % b == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (b == 0) {\n        if (n % a == 0) {\n            return std::make_optional(n / a);\n        } else {\n            return std::nullopt;\n        }\n    }\n    long d = std::__gcd(a, b);\n    if (n % d != 0) {\n        return std::nullopt;\n    }\n    long x = 0, y = 0;\n    std::tie(x, y) = find_solution(b / d, a / d, n / d);\n    return std::make_optional(x * (b / d) + y * (a / d));\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123355,
      "stdout": "",
      "stderr": "/tmp/tmpto98a5ag.cpp: In function \u2018std::optional<long int> find_solution(long int, long int, long int)\u2019:\n/tmp/tmpto98a5ag.cpp:31:55: error: no match for \u2018operator=\u2019 (operand types are \u2018std::tuple<long int&, long int&>\u2019 and \u2018std::optional<long int>\u2019)\n   31 |     std::tie(x, y) = find_solution(b / d, a / d, n / d);\n      |                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/functional:54,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/pstl/glue_algorithm_defs.h:13,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:71,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n                 from /tmp/tmpto98a5ag.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/tuple:1205:7: note: candidate: \u2018std::tuple<_T1, _T2>& std::tuple<_T1, _T2>::operator=(typename std::conditional<__assignable<const _T1&, const _T2&>(), const std::tuple<_T1, _T2>&, const std::__nonesuch_no_braces&>::type) [with _T1 = long int&; _T2 = long int&; typename std::conditional<__assignable<const _T1&, const _T2&>(), const std::tuple<_T1, _T2>&, const std::__nonesuch_no_braces&>::type = const std::tuple<long int&, long int&>&]\u2019\n 1205 |       operator=(typename conditional<__assignable<const _T1&, const _T2&>(),\n      |       ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/tuple:1207:45: note:   no known conversion for argument 1 from \u2018std::optional<long int>\u2019 to \u2018std::conditional<true, const std::tuple<long int&, long int&>&, const std::__nonesuch_no_braces&>::type\u2019 {aka \u2018const std::tuple<long int&, long int&>&\u2019}\n 1205 |       operator=(typename conditional<__assignable<const _T1&, const _T2&>(),\n      |                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n 1206 |          const tuple&,\n      |          ~~~~~~~~~~~~~                       \n 1207 |          const __nonesuch_no_braces",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (n % gcd(a, b) != 0) {\n        return std::nullopt;\n    }\n    long x = 0, y = 1, last_x = 1, last_y = 0, temp;\n    while (b != 0) {\n        long q = a / b;\n        long r = a % b;\n\n        a = b;\n        b = r;\n\n        temp = x;\n        x = last_x - q * x;\n        last_x = temp;\n\n        temp = y;\n        y = last_y - q * y;\n        last_y = temp;\n    }\n\n    return std::make_optional(last_x * (n / a));\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123355,
      "stdout": "",
      "stderr": "/tmp/tmp3mywjzw7.cpp: In function \u2018std::optional<long int> find_solution(long int, long int, long int)\u2019:\n/tmp/tmp3mywjzw7.cpp:5:13: error: \u2018gcd\u2019 was not declared in this scope; did you mean \u2018std::gcd\u2019?\n    5 |     if (n % gcd(a, b) != 0) {\n      |             ^~~\n      |             std::gcd\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:84,\n                 from /tmp/tmp3mywjzw7.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/numeric:131:5: note: \u2018std::gcd\u2019 declared here\n  131 |     gcd(_Mn __m, _Nn __n)\n      |     ^~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp3mywjzw7.cpp:2:\n/tmp/tmp3mywjzw7.cpp: In function \u2018int main()\u2019:\n/tmp/tmp3mywjzw7.cpp:29:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   29 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmp3mywjzw7.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substituti",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0 && b == 0) {\n        if (n == 0) {\n            return {0, 0};\n        } else {\n            return {};\n        }\n    }\n    if (a == 0) {\n        if (n % b == 0) {\n            return {0, n / b};\n        } else {\n            return {};\n        }\n    }\n    if (b == 0) {\n        if (n % a == 0) {\n            return {n / a, 0};\n        } else {\n            return {};\n        }\n    }\n    long g = std::gcd(a, b);\n    if (n % g != 0) {\n        return {};\n    }\n    long x = 0;\n    long y = n / g;\n    while (y < 0) {\n        x -= b / g;\n        y += a / g;\n    }\n    return {x, y};\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123355,
      "stdout": "",
      "stderr": "/tmp/tmpvg160bs2.cpp: In function \u2018std::optional<long int> find_solution(long int, long int, long int)\u2019:\n/tmp/tmpvg160bs2.cpp:7:25: error: could not convert \u2018{0, 0}\u2019 from \u2018<brace-enclosed initializer list>\u2019 to \u2018std::optional<long int>\u2019\n    7 |             return {0, 0};\n      |                         ^\n      |                         |\n      |                         <brace-enclosed initializer list>\n/tmp/tmpvg160bs2.cpp:14:29: error: could not convert \u2018{0, (n / b)}\u2019 from \u2018<brace-enclosed initializer list>\u2019 to \u2018std::optional<long int>\u2019\n   14 |             return {0, n / b};\n      |                             ^\n      |                             |\n      |                             <brace-enclosed initializer list>\n/tmp/tmpvg160bs2.cpp:21:29: error: could not convert \u2018{(n / a), 0}\u2019 from \u2018<brace-enclosed initializer list>\u2019 to \u2018std::optional<long int>\u2019\n   21 |             return {n / a, 0};\n      |                             ^\n      |                             |\n      |                             <brace-enclosed initializer list>\n/tmp/tmpvg160bs2.cpp:36:17: error: could not convert \u2018{x, y}\u2019 from \u2018<brace-enclosed initializer list>\u2019 to \u2018std::optional<long int>\u2019\n   36 |     return {x, y};\n      |                 ^\n      |                 |\n      |                 <brace-enclosed initializer list>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpvg160bs2.cpp:2:\n/tmp/tmpvg160bs2.cpp: In function \u2018int main()\u2019:\n/tmp/tmpvg160bs2.cpp:40:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   40 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     st",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0 && b == 0) {\n        if (n == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (a == 0) {\n        if (n % b == 0) {\n            return std::make_optional(n / b);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (b == 0) {\n        if (n % a == 0) {\n            return std::make_optional(n / a);\n        } else {\n            return std::nullopt;\n        }\n    }\n    long g = std::gcd(a, b);\n    if (n % g != 0) {\n        return std::nullopt;\n    }\n    long p = a / g;\n    long q = b / g;\n    long r = n / g;\n    long x, y;\n    std::tie(x, y) = find_solution(p, q, r);\n    return std::make_optional(std::make_tuple(x, y));\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123355,
      "stdout": "",
      "stderr": "/tmp/tmpjs938_rw.cpp: In function \u2018std::optional<long int> find_solution(long int, long int, long int)\u2019:\n/tmp/tmpjs938_rw.cpp:34:43: error: no match for \u2018operator=\u2019 (operand types are \u2018std::tuple<long int&, long int&>\u2019 and \u2018std::optional<long int>\u2019)\n   34 |     std::tie(x, y) = find_solution(p, q, r);\n      |                                           ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/functional:54,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/pstl/glue_algorithm_defs.h:13,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:71,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n                 from /tmp/tmpjs938_rw.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/tuple:1205:7: note: candidate: \u2018std::tuple<_T1, _T2>& std::tuple<_T1, _T2>::operator=(typename std::conditional<__assignable<const _T1&, const _T2&>(), const std::tuple<_T1, _T2>&, const std::__nonesuch_no_braces&>::type) [with _T1 = long int&; _T2 = long int&; typename std::conditional<__assignable<const _T1&, const _T2&>(), const std::tuple<_T1, _T2>&, const std::__nonesuch_no_braces&>::type = const std::tuple<long int&, long int&>&]\u2019\n 1205 |       operator=(typename conditional<__assignable<const _T1&, const _T2&>(),\n      |       ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/tuple:1207:45: note:   no known conversion for argument 1 from \u2018std::optional<long int>\u2019 to \u2018std::conditional<true, const std::tuple<long int&, long int&>&, const std::__nonesuch_no_braces&>::type\u2019 {aka \u2018const std::tuple<long int&, long int&>&\u2019}\n 1205 |       operator=(typename conditional<__assignable<const _T1&, const _T2&>(),\n      |                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n 1206 |          const tuple&,\n      |          ~~~~~~~~~~~~~                       \n 1207 |          const __nonesuch_no_braces&>::type __in)\n      |  ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (n % gcd(a, b) != 0) return {};\n    long x = 0, y = 0;\n    long d = gcd(a, b);\n    x = n / d * mod_inverse(a / d, b / d);\n    y = (n - a * x) / b;\n    return {x, y};\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123370,
      "stdout": "",
      "stderr": "/tmp/tmpxxs432r2.cpp: In function \u2018std::optional<long int> find_solution(long int, long int, long int)\u2019:\n/tmp/tmpxxs432r2.cpp:5:13: error: \u2018gcd\u2019 was not declared in this scope; did you mean \u2018std::gcd\u2019?\n    5 |     if (n % gcd(a, b) != 0) return {};\n      |             ^~~\n      |             std::gcd\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:84,\n                 from /tmp/tmpxxs432r2.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/numeric:131:5: note: \u2018std::gcd\u2019 declared here\n  131 |     gcd(_Mn __m, _Nn __n)\n      |     ^~~\n/tmp/tmpxxs432r2.cpp:7:14: error: \u2018gcd\u2019 was not declared in this scope; did you mean \u2018std::gcd\u2019?\n    7 |     long d = gcd(a, b);\n      |              ^~~\n      |              std::gcd\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:84,\n                 from /tmp/tmpxxs432r2.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/numeric:131:5: note: \u2018std::gcd\u2019 declared here\n  131 |     gcd(_Mn __m, _Nn __n)\n      |     ^~~\n/tmp/tmpxxs432r2.cpp:8:17: error: \u2018mod_inverse\u2019 was not declared in this scope\n    8 |     x = n / d * mod_inverse(a / d, b / d);\n      |                 ^~~~~~~~~~~\n/tmp/tmpxxs432r2.cpp:10:17: error: could not convert \u2018{x, y}\u2019 from \u2018<brace-enclosed initializer list>\u2019 to \u2018std::optional<long int>\u2019\n   10 |     return {x, y};\n      |                 ^\n      |                 |\n      |                 <brace-enclosed initializer list>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpxxs432r2.cpp:2:\n/tmp/tmpxxs432r2.cpp: In function \u2018int main()\u2019:\n/tmp/tmpxxs432r2.cpp:14:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   14 |     assert(candidate(",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0 && b == 0) {\n        if (n == 0) {\n            return std::make_tuple(0, 0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (a == 0) {\n        if (n % b == 0) {\n            return std::make_tuple(0, n / b);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (b == 0) {\n        if (n % a == 0) {\n            return std::make_tuple(n / a, 0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    long g = std::gcd(a, b);\n    if (n % g != 0) {\n        return std::nullopt;\n    }\n    long x = 0, y = 0;\n    long d = std::gcd(a, b, x, y);\n    x *= n / d;\n    y *= n / d;\n    return std::make_tuple(x, y);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123370,
      "stdout": "",
      "stderr": "/tmp/tmplbdsoalk.cpp: In function \u2018std::optional<long int> find_solution(long int, long int, long int)\u2019:\n/tmp/tmplbdsoalk.cpp:7:35: error: could not convert \u2018std::make_tuple(_Elements&& ...) [with _Elements = {int, int}](0)\u2019 from \u2018std::tuple<int, int>\u2019 to \u2018std::optional<long int>\u2019\n    7 |             return std::make_tuple(0, 0);\n      |                    ~~~~~~~~~~~~~~~^~~~~~\n      |                                   |\n      |                                   std::tuple<int, int>\n/tmp/tmplbdsoalk.cpp:14:35: error: could not convert \u2018std::make_tuple(_Elements&& ...) [with _Elements = {int, long int}]((n / b))\u2019 from \u2018std::tuple<int, long int>\u2019 to \u2018std::optional<long int>\u2019\n   14 |             return std::make_tuple(0, n / b);\n      |                    ~~~~~~~~~~~~~~~^~~~~~~~~~\n      |                                   |\n      |                                   std::tuple<int, long int>\n/tmp/tmplbdsoalk.cpp:21:35: error: could not convert \u2018std::make_tuple(_Elements&& ...) [with _Elements = {long int, int}](0)\u2019 from \u2018std::tuple<long int, int>\u2019 to \u2018std::optional<long int>\u2019\n   21 |             return std::make_tuple(n / a, 0);\n      |                    ~~~~~~~~~~~~~~~^~~~~~~~~~\n      |                                   |\n      |                                   std::tuple<long int, int>\n/tmp/tmplbdsoalk.cpp:31:33: error: no matching function for call to \u2018gcd(long int&, long int&, long int&, long int&)\u2019\n   31 |     long d = std::gcd(a, b, x, y);\n      |                                 ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:84,\n                 from /tmp/tmplbdsoalk.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/numeric:131:5: note: candidate: \u2018template<class _Mn, class _Nn> constexpr std::common_type_t<_Mn, _Nn> std::gcd(_Mn, _Nn)\u2019\n  131 |     gcd(_Mn __m, _Nn __n)\n      |     ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/numeric:131:5: note:   template argument deduction/sub",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0 && b == 0) {\n        if (n == 0) {\n            return {0, 0};\n        } else {\n            return {};\n        }\n    }\n    if (a == 0) {\n        if (n % b == 0) {\n            return {0, n / b};\n        } else {\n            return {};\n        }\n    }\n    if (b == 0) {\n        if (n % a == 0) {\n            return {n / a, 0};\n        } else {\n            return {};\n        }\n    }\n    long x = 0;\n    long y = n / b;\n    while (a * x + b * y != n) {\n        if (a * x + b * y > n) {\n            y--;\n        } else {\n            x++;\n        }\n        if (y < 0) {\n            return {};\n        }\n    }\n    return {x, y};\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123370,
      "stdout": "",
      "stderr": "/tmp/tmpurqkozu9.cpp: In function \u2018std::optional<long int> find_solution(long int, long int, long int)\u2019:\n/tmp/tmpurqkozu9.cpp:7:25: error: could not convert \u2018{0, 0}\u2019 from \u2018<brace-enclosed initializer list>\u2019 to \u2018std::optional<long int>\u2019\n    7 |             return {0, 0};\n      |                         ^\n      |                         |\n      |                         <brace-enclosed initializer list>\n/tmp/tmpurqkozu9.cpp:14:29: error: could not convert \u2018{0, (n / b)}\u2019 from \u2018<brace-enclosed initializer list>\u2019 to \u2018std::optional<long int>\u2019\n   14 |             return {0, n / b};\n      |                             ^\n      |                             |\n      |                             <brace-enclosed initializer list>\n/tmp/tmpurqkozu9.cpp:21:29: error: could not convert \u2018{(n / a), 0}\u2019 from \u2018<brace-enclosed initializer list>\u2019 to \u2018std::optional<long int>\u2019\n   21 |             return {n / a, 0};\n      |                             ^\n      |                             |\n      |                             <brace-enclosed initializer list>\n/tmp/tmpurqkozu9.cpp:38:17: error: could not convert \u2018{x, y}\u2019 from \u2018<brace-enclosed initializer list>\u2019 to \u2018std::optional<long int>\u2019\n   38 |     return {x, y};\n      |                 ^\n      |                 |\n      |                 <brace-enclosed initializer list>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpurqkozu9.cpp:2:\n/tmp/tmpurqkozu9.cpp: In function \u2018int main()\u2019:\n/tmp/tmpurqkozu9.cpp:42:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   42 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     st",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0) {\n        if (n == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    auto x = find_solution(b % a, a, n % a);\n    if (!x) {\n        return std::nullopt;\n    }\n    return std::make_optional(b / a * x.value() - n / a);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1665510529,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmphb4sl61k.cpp:2:\n/tmp/tmphb4sl61k.cpp: In function \u2018int main()\u2019:\n/tmp/tmphb4sl61k.cpp:20:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   20 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmphb4sl61k.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmphb4sl61k.cpp:2:\n/tmp/tmphb4sl61k.cpp:20:60: note:   \u2018std::optional<long int>\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   20 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |                                                            ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n     ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (n % gcd(a, b) != 0) {\n        return std::nullopt;\n    }\n    long x = 0;\n    long y = n / b;\n    long g = gcd(a, b);\n    while (x * b < n) {\n        if ((n - x * b) % a == 0) {\n            return std::make_tuple(x, (n - x * b) / a);\n        }\n        x += b / g;\n    }\n    return std::nullopt;\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123370,
      "stdout": "",
      "stderr": "/tmp/tmphp3o3_hy.cpp: In function \u2018std::optional<long int> find_solution(long int, long int, long int)\u2019:\n/tmp/tmphp3o3_hy.cpp:5:13: error: \u2018gcd\u2019 was not declared in this scope; did you mean \u2018std::gcd\u2019?\n    5 |     if (n % gcd(a, b) != 0) {\n      |             ^~~\n      |             std::gcd\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:84,\n                 from /tmp/tmphp3o3_hy.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/numeric:131:5: note: \u2018std::gcd\u2019 declared here\n  131 |     gcd(_Mn __m, _Nn __n)\n      |     ^~~\n/tmp/tmphp3o3_hy.cpp:10:14: error: \u2018gcd\u2019 was not declared in this scope; did you mean \u2018std::gcd\u2019?\n   10 |     long g = gcd(a, b);\n      |              ^~~\n      |              std::gcd\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:84,\n                 from /tmp/tmphp3o3_hy.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/numeric:131:5: note: \u2018std::gcd\u2019 declared here\n  131 |     gcd(_Mn __m, _Nn __n)\n      |     ^~~\n/tmp/tmphp3o3_hy.cpp:13:35: error: could not convert \u2018std::make_tuple(_Elements&& ...) [with _Elements = {long int&, long int}](((n - (x * b)) / a))\u2019 from \u2018std::tuple<long int, long int>\u2019 to \u2018std::optional<long int>\u2019\n   13 |             return std::make_tuple(x, (n - x * b) / a);\n      |                    ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~\n      |                                   |\n      |                                   std::tuple<long int, long int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmphp3o3_hy.cpp:2:\n/tmp/tmphp3o3_hy.cpp: In function \u2018int main()\u2019:\n/tmp/tmphp3o3_hy.cpp:21:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   21 |     ass",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n  if (a == 0 && b == 0) {\n    if (n == 0) {\n      return std::make_optional(0);\n    } else {\n      return std::nullopt;\n    }\n  }\n\n  if (a == 0) {\n    if (n % b == 0) {\n      return std::make_optional(n / b);\n    } else {\n      return std::nullopt;\n    }\n  }\n\n  if (b == 0) {\n    if (n % a == 0) {\n      return std::make_optional(n / a);\n    } else {\n      return std::nullopt;\n    }\n  }\n\n  long g = std::gcd(a, b);\n  if (n % g != 0) {\n    return std::nullopt;\n  }\n\n  long a1 = a / g;\n  long b1 = b / g;\n  long n1 = n / g;\n\n  std::optional<long> x = find_solution(b1, a1 % b1, n1);\n  if (x.has_value()) {\n    return std::make_optional(x.value() * a1);\n  } else {\n    return std::nullopt;\n  }\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123370,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp_b4pd1l3.cpp:2:\n/tmp/tmp_b4pd1l3.cpp: In function \u2018int main()\u2019:\n/tmp/tmp_b4pd1l3.cpp:47:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   47 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmp_b4pd1l3.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp_b4pd1l3.cpp:2:\n/tmp/tmp_b4pd1l3.cpp:47:60: note:   \u2018std::optional<long int>\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   47 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |                                                            ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n     ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (n % std::gcd(a, b) != 0) {\n        return std::nullopt;\n    }\n    long x = 0, y = 0;\n    long g = std::gcd(a, b);\n    a /= g;\n    b /= g;\n    n /= g;\n    long x1 = 1, y1 = 0;\n    long x2 = 0, y2 = 1;\n    while (b != 0) {\n        long q = a / b;\n        long r = a % b;\n        x = x2 - q * x1;\n        y = y2 - q * y1;\n        a = b;\n        b = r;\n        x2 = x1;\n        x1 = x;\n        y2 = y1;\n        y1 = y;\n    }\n    x = x2;\n    y = y2;\n    return std::make_optional(x * n);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123370,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp6xu5y_pb.cpp:2:\n/tmp/tmp6xu5y_pb.cpp: In function \u2018int main()\u2019:\n/tmp/tmp6xu5y_pb.cpp:33:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   33 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmp6xu5y_pb.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp6xu5y_pb.cpp:2:\n/tmp/tmp6xu5y_pb.cpp:33:60: note:   \u2018std::optional<long int>\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   33 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |                                                            ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n     ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    long x = 0;\n    long y = 0;\n    long gcd = std::gcd(a, b);\n    if (n % gcd != 0) {\n        return std::nullopt;\n    }\n    long x1 = 0;\n    long y1 = 1;\n    long x2 = 1;\n    long y2 = 0;\n    long q = 0;\n    long r = 0;\n    while (a % b != 0) {\n        q = a / b;\n        r = a % b;\n        x = x2 - q * x1;\n        y = y2 - q * y1;\n        a = b;\n        b = r;\n        x2 = x1;\n        x1 = x;\n        y2 = y1;\n        y1 = y;\n    }\n    x = (n / b) * x2;\n    y = (n / b) * y2;\n    return std::make_tuple(x, y);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123370,
      "stdout": "",
      "stderr": "/tmp/tmpq38l3zz0.cpp: In function \u2018std::optional<long int> find_solution(long int, long int, long int)\u2019:\n/tmp/tmpq38l3zz0.cpp:31:27: error: could not convert \u2018std::make_tuple(_Elements&& ...) [with _Elements = {long int&, long int&}](y)\u2019 from \u2018std::tuple<long int, long int>\u2019 to \u2018std::optional<long int>\u2019\n   31 |     return std::make_tuple(x, y);\n      |            ~~~~~~~~~~~~~~~^~~~~~\n      |                           |\n      |                           std::tuple<long int, long int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpq38l3zz0.cpp:2:\n/tmp/tmpq38l3zz0.cpp: In function \u2018int main()\u2019:\n/tmp/tmpq38l3zz0.cpp:35:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   35 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpq38l3zz0.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n             ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (n % gcd(a, b) != 0) {\n        return {};\n    }\n    long x = 0;\n    long y = n / b;\n    long g = gcd(a, b);\n    while (x < y) {\n        if (a * x + b * y == n) {\n            return {x, y};\n        }\n        x += b / g;\n        y -= a / g;\n    }\n    return {};\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123370,
      "stdout": "",
      "stderr": "/tmp/tmpxwcj4q8c.cpp: In function \u2018std::optional<long int> find_solution(long int, long int, long int)\u2019:\n/tmp/tmpxwcj4q8c.cpp:5:13: error: \u2018gcd\u2019 was not declared in this scope; did you mean \u2018std::gcd\u2019?\n    5 |     if (n % gcd(a, b) != 0) {\n      |             ^~~\n      |             std::gcd\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:84,\n                 from /tmp/tmpxwcj4q8c.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/numeric:131:5: note: \u2018std::gcd\u2019 declared here\n  131 |     gcd(_Mn __m, _Nn __n)\n      |     ^~~\n/tmp/tmpxwcj4q8c.cpp:10:14: error: \u2018gcd\u2019 was not declared in this scope; did you mean \u2018std::gcd\u2019?\n   10 |     long g = gcd(a, b);\n      |              ^~~\n      |              std::gcd\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:84,\n                 from /tmp/tmpxwcj4q8c.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/numeric:131:5: note: \u2018std::gcd\u2019 declared here\n  131 |     gcd(_Mn __m, _Nn __n)\n      |     ^~~\n/tmp/tmpxwcj4q8c.cpp:13:25: error: could not convert \u2018{x, y}\u2019 from \u2018<brace-enclosed initializer list>\u2019 to \u2018std::optional<long int>\u2019\n   13 |             return {x, y};\n      |                         ^\n      |                         |\n      |                         <brace-enclosed initializer list>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpxwcj4q8c.cpp:2:\n/tmp/tmpxwcj4q8c.cpp: In function \u2018int main()\u2019:\n/tmp/tmpxwcj4q8c.cpp:22:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   22 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |      ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0 && b == 0) {\n        if (n == 0) {\n            return {0, 0};\n        } else {\n            return {};\n        }\n    } else if (a == 0) {\n        if (n % b == 0) {\n            return {0, n / b};\n        } else {\n            return {};\n        }\n    } else if (b == 0) {\n        if (n % a == 0) {\n            return {n / a, 0};\n        } else {\n            return {};\n        }\n    } else {\n        long x, y;\n        long g = std::gcd(a, b);\n        if (n % g != 0) {\n            return {};\n        } else {\n            x = n / g * b / a;\n            y = (n - a * x) / b;\n            return {x, y};\n        }\n    }\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123370,
      "stdout": "",
      "stderr": "/tmp/tmpyfziz7c_.cpp: In function \u2018std::optional<long int> find_solution(long int, long int, long int)\u2019:\n/tmp/tmpyfziz7c_.cpp:7:25: error: could not convert \u2018{0, 0}\u2019 from \u2018<brace-enclosed initializer list>\u2019 to \u2018std::optional<long int>\u2019\n    7 |             return {0, 0};\n      |                         ^\n      |                         |\n      |                         <brace-enclosed initializer list>\n/tmp/tmpyfziz7c_.cpp:13:29: error: could not convert \u2018{0, (n / b)}\u2019 from \u2018<brace-enclosed initializer list>\u2019 to \u2018std::optional<long int>\u2019\n   13 |             return {0, n / b};\n      |                             ^\n      |                             |\n      |                             <brace-enclosed initializer list>\n/tmp/tmpyfziz7c_.cpp:19:29: error: could not convert \u2018{(n / a), 0}\u2019 from \u2018<brace-enclosed initializer list>\u2019 to \u2018std::optional<long int>\u2019\n   19 |             return {n / a, 0};\n      |                             ^\n      |                             |\n      |                             <brace-enclosed initializer list>\n/tmp/tmpyfziz7c_.cpp:31:25: error: could not convert \u2018{x, y}\u2019 from \u2018<brace-enclosed initializer list>\u2019 to \u2018std::optional<long int>\u2019\n   31 |             return {x, y};\n      |                         ^\n      |                         |\n      |                         <brace-enclosed initializer list>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpyfziz7c_.cpp:2:\n/tmp/tmpyfziz7c_.cpp: In function \u2018int main()\u2019:\n/tmp/tmpyfziz7c_.cpp:37:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   37 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0 && b == 0) {\n        if (n == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (a == 0) {\n        if (n % b == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (b == 0) {\n        if (n % a == 0) {\n            return std::make_optional(n / a);\n        } else {\n            return std::nullopt;\n        }\n    }\n    long g = std::gcd(a, b);\n    if (n % g != 0) {\n        return std::nullopt;\n    }\n    long p = a / g, q = b / g;\n    long x0 = 0, y0 = n / b;\n    long x1 = 1, y1 = (n - a * x1) / b;\n    while (y1 < y0) {\n        long x2 = x0 - p * (x1 - x0), y2 = y0 - q * (y1 - y0);\n        x0 = x1, y0 = y1;\n        x1 = x2, y1 = y2;\n    }\n    return std::make_optional(x1);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123370,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpfwxoq51e.cpp:2:\n/tmp/tmpfwxoq51e.cpp: In function \u2018int main()\u2019:\n/tmp/tmpfwxoq51e.cpp:42:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   42 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpfwxoq51e.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpfwxoq51e.cpp:2:\n/tmp/tmpfwxoq51e.cpp:42:60: note:   \u2018std::optional<long int>\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   42 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |                                                            ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n     ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (n % std::gcd(a, b) != 0) {\n        return std::nullopt;\n    }\n    long x = 0, y = 0;\n    long d = std::gcd(a, b);\n    x = n / d * (b / d);\n    y = n / d * (a / d);\n    return std::make_tuple(x, y);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1665510529,
      "stdout": "",
      "stderr": "/tmp/tmpv5o68r75.cpp: In function \u2018std::optional<long int> find_solution(long int, long int, long int)\u2019:\n/tmp/tmpv5o68r75.cpp:12:27: error: could not convert \u2018std::make_tuple(_Elements&& ...) [with _Elements = {long int&, long int&}](y)\u2019 from \u2018std::tuple<long int, long int>\u2019 to \u2018std::optional<long int>\u2019\n   12 |     return std::make_tuple(x, y);\n      |            ~~~~~~~~~~~~~~~^~~~~~\n      |                           |\n      |                           std::tuple<long int, long int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpv5o68r75.cpp:2:\n/tmp/tmpv5o68r75.cpp: In function \u2018int main()\u2019:\n/tmp/tmpv5o68r75.cpp:16:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   16 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpv5o68r75.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n             ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0 && b == 0) {\n        if (n == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (a == 0) {\n        if (n % b == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (b == 0) {\n        if (n % a == 0) {\n            return std::make_optional(n / a);\n        } else {\n            return std::nullopt;\n        }\n    }\n    long g = std::__gcd(a, b);\n    if (n % g != 0) {\n        return std::nullopt;\n    }\n    long p = n / g;\n    a /= g;\n    b /= g;\n    long x0, y0;\n    std::tie(x0, y0) = find_solution(b, a % b, p).value();\n    return std::make_optional(y0 - (a / b) * x0);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123370,
      "stdout": "",
      "stderr": "/tmp/tmpe2g8rjm2.cpp: In function \u2018std::optional<long int> find_solution(long int, long int, long int)\u2019:\n/tmp/tmpe2g8rjm2.cpp:34:57: error: no match for \u2018operator=\u2019 (operand types are \u2018std::tuple<long int&, long int&>\u2019 and \u2018long int\u2019)\n   34 |     std::tie(x0, y0) = find_solution(b, a % b, p).value();\n      |                                                         ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/functional:54,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/pstl/glue_algorithm_defs.h:13,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:71,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n                 from /tmp/tmpe2g8rjm2.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/tuple:1205:7: note: candidate: \u2018std::tuple<_T1, _T2>& std::tuple<_T1, _T2>::operator=(typename std::conditional<__assignable<const _T1&, const _T2&>(), const std::tuple<_T1, _T2>&, const std::__nonesuch_no_braces&>::type) [with _T1 = long int&; _T2 = long int&; typename std::conditional<__assignable<const _T1&, const _T2&>(), const std::tuple<_T1, _T2>&, const std::__nonesuch_no_braces&>::type = const std::tuple<long int&, long int&>&]\u2019\n 1205 |       operator=(typename conditional<__assignable<const _T1&, const _T2&>(),\n      |       ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/tuple:1207:45: note:   no known conversion for argument 1 from \u2018long int\u2019 to \u2018std::conditional<true, const std::tuple<long int&, long int&>&, const std::__nonesuch_no_braces&>::type\u2019 {aka \u2018const std::tuple<long int&, long int&>&\u2019}\n 1205 |       operator=(typename conditional<__assignable<const _T1&, const _T2&>(),\n      |                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n 1206 |          const tuple&,\n      |          ~~~~~~~~~~~~~                       \n 1207 |          const __nonesuch_no_braces&>::type __in)\n      |    ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n  if (a == 0) {\n    if (n == 0) {\n      return std::make_optional(0);\n    }\n    return std::nullopt;\n  }\n  auto x = find_solution(b % a, a, n % a);\n  if (!x) {\n    return std::nullopt;\n  }\n  return std::make_optional(b / a * x.value() - n / a);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123324,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpur64o2al.cpp:2:\n/tmp/tmpur64o2al.cpp: In function \u2018int main()\u2019:\n/tmp/tmpur64o2al.cpp:19:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   19 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpur64o2al.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpur64o2al.cpp:2:\n/tmp/tmpur64o2al.cpp:19:60: note:   \u2018std::optional<long int>\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   19 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |                                                            ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n     ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0) {\n        if (n == 0) {\n            return std::make_optional(0);\n        }\n        return std::nullopt;\n    }\n    auto x = find_solution(b % a, a, n % a);\n    if (!x) {\n        return std::nullopt;\n    }\n    return std::make_optional(b / a * x.value() - n / a);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123264,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpt2pwcbno.cpp:2:\n/tmp/tmpt2pwcbno.cpp: In function \u2018int main()\u2019:\n/tmp/tmpt2pwcbno.cpp:19:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   19 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpt2pwcbno.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpt2pwcbno.cpp:2:\n/tmp/tmpt2pwcbno.cpp:19:60: note:   \u2018std::optional<long int>\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   19 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |                                                            ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n     ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0 && b == 0) {\n        if (n == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (a == 0) {\n        if (n % b == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (b == 0) {\n        if (n % a == 0) {\n            return std::make_optional(n / a);\n        } else {\n            return std::nullopt;\n        }\n    }\n    long d = std::__gcd(a, b);\n    if (n % d != 0) {\n        return std::nullopt;\n    }\n    long x = 0;\n    long y = n / d;\n    while (y % a != 0) {\n        y += b / d;\n    }\n    x = (n - b * y) / a;\n    return std::make_optional(x);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123370,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpad5cv5g8.cpp:2:\n/tmp/tmpad5cv5g8.cpp: In function \u2018int main()\u2019:\n/tmp/tmpad5cv5g8.cpp:40:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   40 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpad5cv5g8.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpad5cv5g8.cpp:2:\n/tmp/tmpad5cv5g8.cpp:40:60: note:   \u2018std::optional<long int>\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   40 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |                                                            ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n     ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0 && b == 0) {\n        if (n == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (a == 0) {\n        if (n % b == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (b == 0) {\n        if (n % a == 0) {\n            return std::make_optional(n / a);\n        } else {\n            return std::nullopt;\n        }\n    }\n    long x, y;\n    long g = std::gcd(a, b);\n    if (n % g != 0) {\n        return std::nullopt;\n    }\n    a /= g;\n    b /= g;\n    n /= g;\n    std::tie(x, y) = find_solution(b, a % b, n).value();\n    return std::make_optional(y - (a / b) * x);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123370,
      "stdout": "",
      "stderr": "/tmp/tmp4xixnjid.cpp: In function \u2018std::optional<long int> find_solution(long int, long int, long int)\u2019:\n/tmp/tmp4xixnjid.cpp:34:55: error: no match for \u2018operator=\u2019 (operand types are \u2018std::tuple<long int&, long int&>\u2019 and \u2018long int\u2019)\n   34 |     std::tie(x, y) = find_solution(b, a % b, n).value();\n      |                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/functional:54,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/pstl/glue_algorithm_defs.h:13,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:71,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n                 from /tmp/tmp4xixnjid.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/tuple:1205:7: note: candidate: \u2018std::tuple<_T1, _T2>& std::tuple<_T1, _T2>::operator=(typename std::conditional<__assignable<const _T1&, const _T2&>(), const std::tuple<_T1, _T2>&, const std::__nonesuch_no_braces&>::type) [with _T1 = long int&; _T2 = long int&; typename std::conditional<__assignable<const _T1&, const _T2&>(), const std::tuple<_T1, _T2>&, const std::__nonesuch_no_braces&>::type = const std::tuple<long int&, long int&>&]\u2019\n 1205 |       operator=(typename conditional<__assignable<const _T1&, const _T2&>(),\n      |       ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/tuple:1207:45: note:   no known conversion for argument 1 from \u2018long int\u2019 to \u2018std::conditional<true, const std::tuple<long int&, long int&>&, const std::__nonesuch_no_braces&>::type\u2019 {aka \u2018const std::tuple<long int&, long int&>&\u2019}\n 1205 |       operator=(typename conditional<__assignable<const _T1&, const _T2&>(),\n      |                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n 1206 |          const tuple&,\n      |          ~~~~~~~~~~~~~                       \n 1207 |          const __nonesuch_no_braces&>::type __in)\n      |        ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0 && b == 0) {\n        if (n == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (a == 0) {\n        if (n % b == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (b == 0) {\n        if (n % a == 0) {\n            return std::make_optional(n / a);\n        } else {\n            return std::nullopt;\n        }\n    }\n    long d = std::__gcd(a, b);\n    if (n % d != 0) {\n        return std::nullopt;\n    }\n    long x = 0;\n    long y = n / d;\n    long a1 = a / d;\n    long b1 = b / d;\n    long r = n % d;\n    long q = n / d;\n    long r1 = r % a1;\n    long q1 = q / a1;\n    long r2 = r % b1;\n    long q2 = q / b1;\n    if (r1 == 0) {\n        x = q1;\n        y = y - b1 * q1;\n    } else if (r2 == 0) {\n        y = q2;\n        x = x - a1 * q2;\n    } else {\n        return std::nullopt;\n    }\n    return std::make_optional(x);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123370,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpm4qsu6yp.cpp:2:\n/tmp/tmpm4qsu6yp.cpp: In function \u2018int main()\u2019:\n/tmp/tmpm4qsu6yp.cpp:53:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   53 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpm4qsu6yp.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpm4qsu6yp.cpp:2:\n/tmp/tmpm4qsu6yp.cpp:53:60: note:   \u2018std::optional<long int>\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   53 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |                                                            ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n     ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0 && b == 0) {\n        return std::nullopt;\n    } else if (a == 0) {\n        return n / b;\n    } else if (b == 0) {\n        return n / a;\n    } else {\n        long x = 0;\n        long y = 0;\n        long gcd = std::gcd(a, b);\n        if (n % gcd == 0) {\n            long a1 = a / gcd;\n            long b1 = b / gcd;\n            long n1 = n / gcd;\n            long x1 = 0;\n            long y1 = 0;\n            long d = 1;\n            while (d != 0) {\n                d = n1 / a1;\n                x1 = x1 + d * b1;\n                y1 = y1 - d * a1;\n                n1 = n1 % a1;\n                if (n1 == 0) {\n                    x = x1;\n                    y = y1;\n                    break;\n                }\n                d = n1 / b1;\n                x1 = x1 - d * b1;\n                y1 = y1 + d * a1;\n                n1 = n1 % b1;\n                if (n1 == 0) {\n                    x = x1;\n                    y = y1;\n                    break;\n                }\n            }\n            return std::make_tuple(x, y);\n        } else {\n            return std::nullopt;\n        }\n    }\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123370,
      "stdout": "",
      "stderr": "/tmp/tmptz4xfz6_.cpp: In function \u2018std::optional<long int> find_solution(long int, long int, long int)\u2019:\n/tmp/tmptz4xfz6_.cpp:42:35: error: could not convert \u2018std::make_tuple(_Elements&& ...) [with _Elements = {long int&, long int&}](y)\u2019 from \u2018std::tuple<long int, long int>\u2019 to \u2018std::optional<long int>\u2019\n   42 |             return std::make_tuple(x, y);\n      |                    ~~~~~~~~~~~~~~~^~~~~~\n      |                                   |\n      |                                   std::tuple<long int, long int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmptz4xfz6_.cpp:2:\n/tmp/tmptz4xfz6_.cpp: In function \u2018int main()\u2019:\n/tmp/tmptz4xfz6_.cpp:50:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   50 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmptz4xfz6_.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0) {\n        if (n == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    auto x = find_solution(b % a, a, n % a);\n    if (!x) {\n        return std::nullopt;\n    }\n    return std::make_optional(b / a * x.value() - n / a);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1665510529,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmphb4sl61k.cpp:2:\n/tmp/tmphb4sl61k.cpp: In function \u2018int main()\u2019:\n/tmp/tmphb4sl61k.cpp:20:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   20 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmphb4sl61k.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmphb4sl61k.cpp:2:\n/tmp/tmphb4sl61k.cpp:20:60: note:   \u2018std::optional<long int>\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   20 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |                                                            ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n     ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (n % gcd(a, b) != 0) {\n        return std::nullopt;\n    }\n    long x = 0, y = 0;\n    long d = gcd(a, b);\n    x = n / d * (b / d);\n    y = n / d * (a / d);\n    return std::make_tuple(x, y);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1665510529,
      "stdout": "",
      "stderr": "/tmp/tmpjqbvg_s0.cpp: In function \u2018std::optional<long int> find_solution(long int, long int, long int)\u2019:\n/tmp/tmpjqbvg_s0.cpp:5:13: error: \u2018gcd\u2019 was not declared in this scope; did you mean \u2018std::gcd\u2019?\n    5 |     if (n % gcd(a, b) != 0) {\n      |             ^~~\n      |             std::gcd\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:84,\n                 from /tmp/tmpjqbvg_s0.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/numeric:131:5: note: \u2018std::gcd\u2019 declared here\n  131 |     gcd(_Mn __m, _Nn __n)\n      |     ^~~\n/tmp/tmpjqbvg_s0.cpp:9:14: error: \u2018gcd\u2019 was not declared in this scope; did you mean \u2018std::gcd\u2019?\n    9 |     long d = gcd(a, b);\n      |              ^~~\n      |              std::gcd\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:84,\n                 from /tmp/tmpjqbvg_s0.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/numeric:131:5: note: \u2018std::gcd\u2019 declared here\n  131 |     gcd(_Mn __m, _Nn __n)\n      |     ^~~\n/tmp/tmpjqbvg_s0.cpp:12:27: error: could not convert \u2018std::make_tuple(_Elements&& ...) [with _Elements = {long int&, long int&}](y)\u2019 from \u2018std::tuple<long int, long int>\u2019 to \u2018std::optional<long int>\u2019\n   12 |     return std::make_tuple(x, y);\n      |            ~~~~~~~~~~~~~~~^~~~~~\n      |                           |\n      |                           std::tuple<long int, long int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpjqbvg_s0.cpp:2:\n/tmp/tmpjqbvg_s0.cpp: In function \u2018int main()\u2019:\n/tmp/tmpjqbvg_s0.cpp:16:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   16 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0 && b == 0) {\n        if (n == 0) {\n            return std::make_optional(0);\n        }\n        else {\n            return std::nullopt;\n        }\n    }\n    if (a == 0) {\n        if (n % b == 0) {\n            return std::make_optional(0);\n        }\n        else {\n            return std::nullopt;\n        }\n    }\n    if (b == 0) {\n        if (n % a == 0) {\n            return std::make_optional(n / a);\n        }\n        else {\n            return std::nullopt;\n        }\n    }\n    long g = std::gcd(a, b);\n    if (n % g != 0) {\n        return std::nullopt;\n    }\n    long x1 = 0, y1 = 0;\n    long x2 = 1, y2 = 1;\n    while (a % 2 == 0 && b % 2 == 0) {\n        a /= 2;\n        b /= 2;\n        n /= 2;\n    }\n    while (a != 0) {\n        while (a % 2 == 0) {\n            a /= 2;\n            if (x1 % 2 == 0 && y1 % 2 == 0) {\n                x1 /= 2;\n                y1 /= 2;\n            }\n            else {\n                x1 = (x1 + b) / 2;\n                y1 = (y1 - a) / 2;\n            }\n        }\n        while (b % 2 == 0) {\n            b /= 2;\n            if (x2 % 2 == 0 && y2 % 2 == 0) {\n                x2 /= 2;\n                y2 /= 2;\n            }\n            else {\n                x2 = (x2 + b) / 2;\n                y2 = (y2 - a) / 2;\n            }\n        }\n        if (a >= b) {\n            a -= b;\n            x1 -= x2;\n            y1 -= y2;\n        }\n        else {\n            b -= a;\n            x2 -= x1;\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123357,
      "stdout": "",
      "stderr": "/tmp/tmpwuipcnfj.cpp: In function \u2018std::optional<long int> find_solution(long int, long int, long int)\u2019:\n/tmp/tmpwuipcnfj.cpp:72:12: error: a function-definition is not allowed here before \u2018{\u2019 token\n   72 | int main() {\n      |            ^\n/tmp/tmpwuipcnfj.cpp:77:1: error: expected \u2018}\u2019 at end of input\n   77 | }\n      | ^\n/tmp/tmpwuipcnfj.cpp:40:20: note: to match this \u2018{\u2019\n   40 |     while (a != 0) {\n      |                    ^\n/tmp/tmpwuipcnfj.cpp:77:1: error: expected \u2018}\u2019 at end of input\n   77 | }\n      | ^\n/tmp/tmpwuipcnfj.cpp:4:59: note: to match this \u2018{\u2019\n    4 | std::optional<long> find_solution(long a, long b, long n) {\n      |                                                           ^\n/tmp/tmpwuipcnfj.cpp:77:1: warning: control reaches end of non-void function [-Wreturn-type]\n   77 | }\n      | ^\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0 && b == 0) {\n        if (n == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (a == 0) {\n        if (n % b == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (b == 0) {\n        if (n % a == 0) {\n            return std::make_optional(n/a);\n        } else {\n            return std::nullopt;\n        }\n    }\n    long g = std::gcd(a, b);\n    if (n % g != 0) {\n        return std::nullopt;\n    }\n    long x = 0;\n    long y = n/b;\n    while (x*a + y*b != n) {\n        if (x*a + y*b < n) {\n            x += 1;\n        } else {\n            y -= 1;\n        }\n    }\n    return std::make_optional(x);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123370,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp5x7xz1ll.cpp:2:\n/tmp/tmp5x7xz1ll.cpp: In function \u2018int main()\u2019:\n/tmp/tmp5x7xz1ll.cpp:43:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   43 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmp5x7xz1ll.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp5x7xz1ll.cpp:2:\n/tmp/tmp5x7xz1ll.cpp:43:60: note:   \u2018std::optional<long int>\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   43 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |                                                            ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n     ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0 && b == 0) {\n        if (n == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (a == 0) {\n        if (n % b == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (b == 0) {\n        if (n % a == 0) {\n            return std::make_optional(n / a);\n        } else {\n            return std::nullopt;\n        }\n    }\n    long g = std::gcd(a, b);\n    if (n % g != 0) {\n        return std::nullopt;\n    }\n    long p = n / g;\n    long q = 0;\n    while (p % a != 0) {\n        p += b;\n        q -= 1;\n    }\n    return std::make_optional(p / a);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123340,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpn67hb7tb.cpp:2:\n/tmp/tmpn67hb7tb.cpp: In function \u2018int main()\u2019:\n/tmp/tmpn67hb7tb.cpp:40:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   40 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpn67hb7tb.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpn67hb7tb.cpp:2:\n/tmp/tmpn67hb7tb.cpp:40:60: note:   \u2018std::optional<long int>\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   40 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |                                                            ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n     ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0 && b == 0) {\n        if (n == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (a == 0) {\n        if (n % b == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (b == 0) {\n        if (n % a == 0) {\n            return std::make_optional(n / a);\n        } else {\n            return std::nullopt;\n        }\n    }\n    long g = std::gcd(a, b);\n    if (n % g != 0) {\n        return std::nullopt;\n    }\n    long x0, y0;\n    std::tie(x0, y0) = find_solution(b / g, a / g, n / g).value();\n    return std::make_optional(x0 * (a / g) + y0 * (b / g));\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123370,
      "stdout": "",
      "stderr": "/tmp/tmp9y9266l6.cpp: In function \u2018std::optional<long int> find_solution(long int, long int, long int)\u2019:\n/tmp/tmp9y9266l6.cpp:31:65: error: no match for \u2018operator=\u2019 (operand types are \u2018std::tuple<long int&, long int&>\u2019 and \u2018long int\u2019)\n   31 |     std::tie(x0, y0) = find_solution(b / g, a / g, n / g).value();\n      |                                                                 ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/functional:54,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/pstl/glue_algorithm_defs.h:13,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:71,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n                 from /tmp/tmp9y9266l6.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/tuple:1205:7: note: candidate: \u2018std::tuple<_T1, _T2>& std::tuple<_T1, _T2>::operator=(typename std::conditional<__assignable<const _T1&, const _T2&>(), const std::tuple<_T1, _T2>&, const std::__nonesuch_no_braces&>::type) [with _T1 = long int&; _T2 = long int&; typename std::conditional<__assignable<const _T1&, const _T2&>(), const std::tuple<_T1, _T2>&, const std::__nonesuch_no_braces&>::type = const std::tuple<long int&, long int&>&]\u2019\n 1205 |       operator=(typename conditional<__assignable<const _T1&, const _T2&>(),\n      |       ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/tuple:1207:45: note:   no known conversion for argument 1 from \u2018long int\u2019 to \u2018std::conditional<true, const std::tuple<long int&, long int&>&, const std::__nonesuch_no_braces&>::type\u2019 {aka \u2018const std::tuple<long int&, long int&>&\u2019}\n 1205 |       operator=(typename conditional<__assignable<const _T1&, const _T2&>(),\n      |                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n 1206 |          const tuple&,\n      |          ~~~~~~~~~~~~~                       \n 1207 |          const __nonesuch_no_braces&>::type _",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (n % gcd(a, b) != 0) {\n        return std::nullopt;\n    }\n    long x = 0;\n    long y = 0;\n    long d = gcd(a, b);\n    x = n / d * b / a;\n    y = (n - a * x) / b;\n    return std::make_tuple(x, y);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1665510514,
      "stdout": "",
      "stderr": "/tmp/tmpczk7mrxn.cpp: In function \u2018std::optional<long int> find_solution(long int, long int, long int)\u2019:\n/tmp/tmpczk7mrxn.cpp:5:13: error: \u2018gcd\u2019 was not declared in this scope; did you mean \u2018std::gcd\u2019?\n    5 |     if (n % gcd(a, b) != 0) {\n      |             ^~~\n      |             std::gcd\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:84,\n                 from /tmp/tmpczk7mrxn.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/numeric:131:5: note: \u2018std::gcd\u2019 declared here\n  131 |     gcd(_Mn __m, _Nn __n)\n      |     ^~~\n/tmp/tmpczk7mrxn.cpp:10:14: error: \u2018gcd\u2019 was not declared in this scope; did you mean \u2018std::gcd\u2019?\n   10 |     long d = gcd(a, b);\n      |              ^~~\n      |              std::gcd\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:84,\n                 from /tmp/tmpczk7mrxn.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/numeric:131:5: note: \u2018std::gcd\u2019 declared here\n  131 |     gcd(_Mn __m, _Nn __n)\n      |     ^~~\n/tmp/tmpczk7mrxn.cpp:13:27: error: could not convert \u2018std::make_tuple(_Elements&& ...) [with _Elements = {long int&, long int&}](y)\u2019 from \u2018std::tuple<long int, long int>\u2019 to \u2018std::optional<long int>\u2019\n   13 |     return std::make_tuple(x, y);\n      |            ~~~~~~~~~~~~~~~^~~~~~\n      |                           |\n      |                           std::tuple<long int, long int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpczk7mrxn.cpp:2:\n/tmp/tmpczk7mrxn.cpp: In function \u2018int main()\u2019:\n/tmp/tmpczk7mrxn.cpp:17:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   17 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0 && b == 0) {\n        if (n == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (a == 0) {\n        if (n % b == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (b == 0) {\n        if (n % a == 0) {\n            return std::make_optional(n / a);\n        } else {\n            return std::nullopt;\n        }\n    }\n    long d = std::__gcd(a, b);\n    if (n % d != 0) {\n        return std::nullopt;\n    }\n    long x0, y0;\n    std::tie(x0, y0) = find_solution(b / d, a / d, n / d).value();\n    return std::make_optional(std::make_tuple(y0, x0 - y0 * (a / d)));\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123370,
      "stdout": "",
      "stderr": "/tmp/tmpn6f94anm.cpp: In function \u2018std::optional<long int> find_solution(long int, long int, long int)\u2019:\n/tmp/tmpn6f94anm.cpp:31:65: error: no match for \u2018operator=\u2019 (operand types are \u2018std::tuple<long int&, long int&>\u2019 and \u2018long int\u2019)\n   31 |     std::tie(x0, y0) = find_solution(b / d, a / d, n / d).value();\n      |                                                                 ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/functional:54,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/pstl/glue_algorithm_defs.h:13,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:71,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n                 from /tmp/tmpn6f94anm.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/tuple:1205:7: note: candidate: \u2018std::tuple<_T1, _T2>& std::tuple<_T1, _T2>::operator=(typename std::conditional<__assignable<const _T1&, const _T2&>(), const std::tuple<_T1, _T2>&, const std::__nonesuch_no_braces&>::type) [with _T1 = long int&; _T2 = long int&; typename std::conditional<__assignable<const _T1&, const _T2&>(), const std::tuple<_T1, _T2>&, const std::__nonesuch_no_braces&>::type = const std::tuple<long int&, long int&>&]\u2019\n 1205 |       operator=(typename conditional<__assignable<const _T1&, const _T2&>(),\n      |       ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/tuple:1207:45: note:   no known conversion for argument 1 from \u2018long int\u2019 to \u2018std::conditional<true, const std::tuple<long int&, long int&>&, const std::__nonesuch_no_braces&>::type\u2019 {aka \u2018const std::tuple<long int&, long int&>&\u2019}\n 1205 |       operator=(typename conditional<__assignable<const _T1&, const _T2&>(),\n      |                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n 1206 |          const tuple&,\n      |          ~~~~~~~~~~~~~                       \n 1207 |          const __nonesuch_no_braces&>::type _",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0 && b == 0) {\n        if (n == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n\n    if (a == 0) {\n        if (n % b == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n\n    if (b == 0) {\n        if (n % a == 0) {\n            return std::make_optional(n / a);\n        } else {\n            return std::nullopt;\n        }\n    }\n\n    long d = std::__gcd(a, b);\n    if (n % d != 0) {\n        return std::nullopt;\n    }\n\n    long x0 = 0, y0 = 0;\n    std::tie(x0, y0) = find_solution(b / d, a / d, n / d).value();\n    return std::make_optional(std::make_tuple(y0, (n / d - a * y0) / b));\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123370,
      "stdout": "",
      "stderr": "/tmp/tmpbzvj_zg8.cpp: In function \u2018std::optional<long int> find_solution(long int, long int, long int)\u2019:\n/tmp/tmpbzvj_zg8.cpp:35:65: error: no match for \u2018operator=\u2019 (operand types are \u2018std::tuple<long int&, long int&>\u2019 and \u2018long int\u2019)\n   35 |     std::tie(x0, y0) = find_solution(b / d, a / d, n / d).value();\n      |                                                                 ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/functional:54,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/pstl/glue_algorithm_defs.h:13,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:71,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n                 from /tmp/tmpbzvj_zg8.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/tuple:1205:7: note: candidate: \u2018std::tuple<_T1, _T2>& std::tuple<_T1, _T2>::operator=(typename std::conditional<__assignable<const _T1&, const _T2&>(), const std::tuple<_T1, _T2>&, const std::__nonesuch_no_braces&>::type) [with _T1 = long int&; _T2 = long int&; typename std::conditional<__assignable<const _T1&, const _T2&>(), const std::tuple<_T1, _T2>&, const std::__nonesuch_no_braces&>::type = const std::tuple<long int&, long int&>&]\u2019\n 1205 |       operator=(typename conditional<__assignable<const _T1&, const _T2&>(),\n      |       ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/tuple:1207:45: note:   no known conversion for argument 1 from \u2018long int\u2019 to \u2018std::conditional<true, const std::tuple<long int&, long int&>&, const std::__nonesuch_no_braces&>::type\u2019 {aka \u2018const std::tuple<long int&, long int&>&\u2019}\n 1205 |       operator=(typename conditional<__assignable<const _T1&, const _T2&>(),\n      |                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n 1206 |          const tuple&,\n      |          ~~~~~~~~~~~~~                       \n 1207 |          const __nonesuch_no_braces&>::type _",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0 && b == 0) {\n        if (n == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (a == 0) {\n        if (n % b == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (b == 0) {\n        if (n % a == 0) {\n            return std::make_optional(n / a);\n        } else {\n            return std::nullopt;\n        }\n    }\n    long g = std::__gcd(a, b);\n    if (n % g != 0) {\n        return std::nullopt;\n    }\n    long x, y;\n    std::tie(x, y) = find_solution(b / g, a / g, n / g).value();\n    return std::make_optional(std::make_tuple(y, x - y * (a / g)));\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123370,
      "stdout": "",
      "stderr": "/tmp/tmpb39q30yq.cpp: In function \u2018std::optional<long int> find_solution(long int, long int, long int)\u2019:\n/tmp/tmpb39q30yq.cpp:31:63: error: no match for \u2018operator=\u2019 (operand types are \u2018std::tuple<long int&, long int&>\u2019 and \u2018long int\u2019)\n   31 |     std::tie(x, y) = find_solution(b / g, a / g, n / g).value();\n      |                                                               ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/functional:54,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/pstl/glue_algorithm_defs.h:13,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:71,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n                 from /tmp/tmpb39q30yq.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/tuple:1205:7: note: candidate: \u2018std::tuple<_T1, _T2>& std::tuple<_T1, _T2>::operator=(typename std::conditional<__assignable<const _T1&, const _T2&>(), const std::tuple<_T1, _T2>&, const std::__nonesuch_no_braces&>::type) [with _T1 = long int&; _T2 = long int&; typename std::conditional<__assignable<const _T1&, const _T2&>(), const std::tuple<_T1, _T2>&, const std::__nonesuch_no_braces&>::type = const std::tuple<long int&, long int&>&]\u2019\n 1205 |       operator=(typename conditional<__assignable<const _T1&, const _T2&>(),\n      |       ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/tuple:1207:45: note:   no known conversion for argument 1 from \u2018long int\u2019 to \u2018std::conditional<true, const std::tuple<long int&, long int&>&, const std::__nonesuch_no_braces&>::type\u2019 {aka \u2018const std::tuple<long int&, long int&>&\u2019}\n 1205 |       operator=(typename conditional<__assignable<const _T1&, const _T2&>(),\n      |                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n 1206 |          const tuple&,\n      |          ~~~~~~~~~~~~~                       \n 1207 |          const __nonesuch_no_braces&>::type __in)",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0 && b == 0) {\n        return n == 0 ? std::optional<long>() : std::nullopt;\n    }\n    if (a == 0) {\n        return n % b == 0 ? std::make_optional(0) : std::nullopt;\n    }\n    if (b == 0) {\n        return n % a == 0 ? std::make_optional(n / a) : std::nullopt;\n    }\n    long g = std::__gcd(a, b);\n    if (n % g != 0) {\n        return std::nullopt;\n    }\n    long x = 0, y = n / b;\n    while (y * a + x * b != n) {\n        if (y * a + x * b > n) {\n            y--;\n        } else {\n            x++;\n        }\n    }\n    return std::make_optional(x);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123370,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpopk6vvwc.cpp:2:\n/tmp/tmpopk6vvwc.cpp: In function \u2018int main()\u2019:\n/tmp/tmpopk6vvwc.cpp:30:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   30 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpopk6vvwc.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpopk6vvwc.cpp:2:\n/tmp/tmpopk6vvwc.cpp:30:60: note:   \u2018std::optional<long int>\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   30 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |                                                            ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n     ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    long x = 0;\n    long y = 0;\n    long d = 0;\n    if (n == 0) {\n        return std::make_optional(std::make_tuple(x, y));\n    }\n    if (a == 0) {\n        if (n % b == 0) {\n            return std::make_optional(std::make_tuple(x, n / b));\n        }\n        else {\n            return std::nullopt;\n        }\n    }\n    if (b == 0) {\n        if (n % a == 0) {\n            return std::make_optional(std::make_tuple(n / a, y));\n        }\n        else {\n            return std::nullopt;\n        }\n    }\n    if (a < b) {\n        std::swap(a, b);\n    }\n    d = std::gcd(a, b);\n    if (n % d != 0) {\n        return std::nullopt;\n    }\n    x = n / d;\n    y = 0;\n    while (x != 0) {\n        if (x < b) {\n            std::swap(x, y);\n        }\n        x -= b;\n        y += a;\n    }\n    return std::make_optional(std::make_tuple(x, y));\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123370,
      "stdout": "",
      "stderr": "/tmp/tmpgdu1iw6y.cpp: In function \u2018std::optional<long int> find_solution(long int, long int, long int)\u2019:\n/tmp/tmpgdu1iw6y.cpp:9:34: error: could not convert \u2018std::make_optional(_Tp&&) [with _Tp = std::tuple<long int, long int>; typename std::decay<_Tp>::type = std::tuple<long int, long int>]()\u2019 from \u2018optional<std::tuple<long int, long int>>\u2019 to \u2018optional<long int>\u2019\n    9 |         return std::make_optional(std::make_tuple(x, y));\n      |                ~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~\n      |                                  |\n      |                                  optional<std::tuple<long int, long int>>\n/tmp/tmpgdu1iw6y.cpp:13:38: error: could not convert \u2018std::make_optional(_Tp&&) [with _Tp = std::tuple<long int, long int>; typename std::decay<_Tp>::type = std::tuple<long int, long int>]()\u2019 from \u2018optional<std::tuple<long int, long int>>\u2019 to \u2018optional<long int>\u2019\n   13 |             return std::make_optional(std::make_tuple(x, n / b));\n      |                    ~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~\n      |                                      |\n      |                                      optional<std::tuple<long int, long int>>\n/tmp/tmpgdu1iw6y.cpp:21:38: error: could not convert \u2018std::make_optional(_Tp&&) [with _Tp = std::tuple<long int, long int>; typename std::decay<_Tp>::type = std::tuple<long int, long int>]()\u2019 from \u2018optional<std::tuple<long int, long int>>\u2019 to \u2018optional<long int>\u2019\n   21 |             return std::make_optional(std::make_tuple(n / a, y));\n      |                    ~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~\n      |                                      |\n      |                                      optional<std::tuple<long int, long int>>\n/tmp/tmpgdu1iw6y.cpp:43:30: error: could not convert \u2018std::make_optional(_Tp&&) [with _Tp = std::tuple<long int, long int>; typename std::decay<_Tp>::type = std::tuple<long int, long int>]()\u2019 from \u2018optional<std::tuple<long int, long int>>\u2019 to \u2018optional<long int>\u2019\n   43 |     return s",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0 && b == 0) {\n        if (n == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (a == 0) {\n        if (n % b == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (b == 0) {\n        if (n % a == 0) {\n            return std::make_optional(n / a);\n        } else {\n            return std::nullopt;\n        }\n    }\n    long g = std::__gcd(a, b);\n    if (n % g != 0) {\n        return std::nullopt;\n    }\n    long p = n / g;\n    long q = 0;\n    long r = 0;\n    long s = 0;\n    extended_gcd(a, b, p, q, r, s);\n    return std::make_optional(r);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123372,
      "stdout": "",
      "stderr": "/tmp/tmp8khck2n_.cpp: In function \u2018std::optional<long int> find_solution(long int, long int, long int)\u2019:\n/tmp/tmp8khck2n_.cpp:34:5: error: \u2018extended_gcd\u2019 was not declared in this scope\n   34 |     extended_gcd(a, b, p, q, r, s);\n      |     ^~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp8khck2n_.cpp:2:\n/tmp/tmp8khck2n_.cpp: In function \u2018int main()\u2019:\n/tmp/tmp8khck2n_.cpp:39:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   39 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmp8khck2n_.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp8khck2n_.cpp:2:\n/tmp/tmp8khck2n_.cpp:39:60: note:   \u2018std::optional<long int>\u2019 is not derived from \u2018const std",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0) {\n        if (n == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    auto x = find_solution(b % a, a, n % a);\n    if (!x) {\n        return std::nullopt;\n    }\n    return std::make_optional(b / a * x.value() - n / a);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1665510529,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmphb4sl61k.cpp:2:\n/tmp/tmphb4sl61k.cpp: In function \u2018int main()\u2019:\n/tmp/tmphb4sl61k.cpp:20:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   20 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmphb4sl61k.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmphb4sl61k.cpp:2:\n/tmp/tmphb4sl61k.cpp:20:60: note:   \u2018std::optional<long int>\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   20 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |                                                            ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n     ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (n % gcd(a, b) != 0) {\n        return std::nullopt;\n    }\n    long x = 0, y = 0;\n    long d = gcd(a, b);\n    x = n / d * b / a;\n    y = n / d - a / b * x;\n    return std::make_tuple(x, y);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123355,
      "stdout": "",
      "stderr": "/tmp/tmppnbp6d4m.cpp: In function \u2018std::optional<long int> find_solution(long int, long int, long int)\u2019:\n/tmp/tmppnbp6d4m.cpp:5:13: error: \u2018gcd\u2019 was not declared in this scope; did you mean \u2018std::gcd\u2019?\n    5 |     if (n % gcd(a, b) != 0) {\n      |             ^~~\n      |             std::gcd\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:84,\n                 from /tmp/tmppnbp6d4m.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/numeric:131:5: note: \u2018std::gcd\u2019 declared here\n  131 |     gcd(_Mn __m, _Nn __n)\n      |     ^~~\n/tmp/tmppnbp6d4m.cpp:9:14: error: \u2018gcd\u2019 was not declared in this scope; did you mean \u2018std::gcd\u2019?\n    9 |     long d = gcd(a, b);\n      |              ^~~\n      |              std::gcd\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:84,\n                 from /tmp/tmppnbp6d4m.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/numeric:131:5: note: \u2018std::gcd\u2019 declared here\n  131 |     gcd(_Mn __m, _Nn __n)\n      |     ^~~\n/tmp/tmppnbp6d4m.cpp:12:27: error: could not convert \u2018std::make_tuple(_Elements&& ...) [with _Elements = {long int&, long int&}](y)\u2019 from \u2018std::tuple<long int, long int>\u2019 to \u2018std::optional<long int>\u2019\n   12 |     return std::make_tuple(x, y);\n      |            ~~~~~~~~~~~~~~~^~~~~~\n      |                           |\n      |                           std::tuple<long int, long int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmppnbp6d4m.cpp:2:\n/tmp/tmppnbp6d4m.cpp: In function \u2018int main()\u2019:\n/tmp/tmppnbp6d4m.cpp:16:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   16 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0 && b == 0) {\n        if (n == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (a == 0) {\n        if (n % b == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (b == 0) {\n        if (n % a == 0) {\n            return std::make_optional(n / a);\n        } else {\n            return std::nullopt;\n        }\n    }\n    long g = std::__gcd(a, b);\n    if (n % g != 0) {\n        return std::nullopt;\n    }\n    long x = 0, y = n / b;\n    while (a * x + b * y != n) {\n        if (a * x + b * y < n) {\n            x += b / g;\n        } else {\n            y -= a / g;\n        }\n    }\n    return std::make_optional(x);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123385,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpxwzalamp.cpp:2:\n/tmp/tmpxwzalamp.cpp: In function \u2018int main()\u2019:\n/tmp/tmpxwzalamp.cpp:42:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   42 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpxwzalamp.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpxwzalamp.cpp:2:\n/tmp/tmpxwzalamp.cpp:42:60: note:   \u2018std::optional<long int>\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   42 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |                                                            ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n     ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0 && b == 0) {\n        return n == 0 ? std::make_optional(0) : std::nullopt;\n    }\n    if (a == 0) {\n        return n % b == 0 ? std::make_optional(n / b) : std::nullopt;\n    }\n    if (b == 0) {\n        return n % a == 0 ? std::make_optional(n / a) : std::nullopt;\n    }\n    long d = std::__gcd(a, b);\n    if (n % d != 0) {\n        return std::nullopt;\n    }\n    a /= d;\n    b /= d;\n    n /= d;\n    long x, y;\n    std::tie(x, y) = find_solution(b, a % b, n).value();\n    return std::make_optional(std::make_tuple(y, x - y * (a / b)));\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123385,
      "stdout": "",
      "stderr": "/tmp/tmpezta6swq.cpp: In function \u2018std::optional<long int> find_solution(long int, long int, long int)\u2019:\n/tmp/tmpezta6swq.cpp:22:55: error: no match for \u2018operator=\u2019 (operand types are \u2018std::tuple<long int&, long int&>\u2019 and \u2018long int\u2019)\n   22 |     std::tie(x, y) = find_solution(b, a % b, n).value();\n      |                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/functional:54,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/pstl/glue_algorithm_defs.h:13,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:71,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n                 from /tmp/tmpezta6swq.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/tuple:1205:7: note: candidate: \u2018std::tuple<_T1, _T2>& std::tuple<_T1, _T2>::operator=(typename std::conditional<__assignable<const _T1&, const _T2&>(), const std::tuple<_T1, _T2>&, const std::__nonesuch_no_braces&>::type) [with _T1 = long int&; _T2 = long int&; typename std::conditional<__assignable<const _T1&, const _T2&>(), const std::tuple<_T1, _T2>&, const std::__nonesuch_no_braces&>::type = const std::tuple<long int&, long int&>&]\u2019\n 1205 |       operator=(typename conditional<__assignable<const _T1&, const _T2&>(),\n      |       ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/tuple:1207:45: note:   no known conversion for argument 1 from \u2018long int\u2019 to \u2018std::conditional<true, const std::tuple<long int&, long int&>&, const std::__nonesuch_no_braces&>::type\u2019 {aka \u2018const std::tuple<long int&, long int&>&\u2019}\n 1205 |       operator=(typename conditional<__assignable<const _T1&, const _T2&>(),\n      |                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n 1206 |          const tuple&,\n      |          ~~~~~~~~~~~~~                       \n 1207 |          const __nonesuch_no_braces&>::type __in)\n      |        ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (n % __gcd(a, b) != 0) {\n        return std::nullopt;\n    }\n    long x = 0, y = 0;\n    long d = __gcd(a, b);\n    x = n / d * (b / d);\n    y = n / d * (a / d);\n    return std::make_tuple(x, y);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1665510514,
      "stdout": "",
      "stderr": "/tmp/tmp78mhoq3m.cpp: In function \u2018std::optional<long int> find_solution(long int, long int, long int)\u2019:\n/tmp/tmp78mhoq3m.cpp:5:13: error: \u2018__gcd\u2019 was not declared in this scope\n    5 |     if (n % __gcd(a, b) != 0) {\n      |             ^~~~~\n/tmp/tmp78mhoq3m.cpp:5:13: note: suggested alternatives:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n                 from /tmp/tmp78mhoq3m.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algo.h:1232:5: note:   \u2018std::__gcd\u2019\n 1232 |     __gcd(_EuclideanRingElement __m, _EuclideanRingElement __n)\n      |     ^~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:84,\n                 from /tmp/tmp78mhoq3m.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/numeric:102:5: note:   \u2018std::__detail::__gcd\u2019\n  102 |     __gcd(_Mn __m, _Nn __n)\n      |     ^~~~~\n/tmp/tmp78mhoq3m.cpp:9:14: error: \u2018__gcd\u2019 was not declared in this scope\n    9 |     long d = __gcd(a, b);\n      |              ^~~~~\n/tmp/tmp78mhoq3m.cpp:9:14: note: suggested alternatives:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n                 from /tmp/tmp78mhoq3m.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algo.h:1232:5: note:   \u2018std::__gcd\u2019\n 1232 |     __gcd(_EuclideanRingElement __m, _EuclideanRingElement __n)\n      |     ^~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:84,\n                 from /tmp/tmp78mhoq3m.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/numeric:102:5: note:   \u2018std::__detail::__gcd\u2019\n  102 |     __gcd(_Mn __m, _Nn __n)\n      |     ^~~~~\n/tmp/tmp78mhoq3m.cpp:12:27: error: could n",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0 && b == 0) {\n        if (n == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n\n    if (a == 0) {\n        if (n % b == 0) {\n            return std::make_optional(n / b);\n        } else {\n            return std::nullopt;\n        }\n    }\n\n    if (b == 0) {\n        if (n % a == 0) {\n            return std::make_optional(n / a);\n        } else {\n            return std::nullopt;\n        }\n    }\n\n    long d = std::__gcd(a, b);\n    if (n % d != 0) {\n        return std::nullopt;\n    }\n\n    long x = 0;\n    long y = n / d;\n    while (y * a > n) {\n        y--;\n    }\n\n    while (y * a < n) {\n        y++;\n    }\n\n    if (y * a != n) {\n        return std::nullopt;\n    }\n\n    x = (n - b * y) / a;\n    return std::make_optional(x);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123385,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpuzy63uat.cpp:2:\n/tmp/tmpuzy63uat.cpp: In function \u2018int main()\u2019:\n/tmp/tmpuzy63uat.cpp:53:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   53 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpuzy63uat.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpuzy63uat.cpp:2:\n/tmp/tmpuzy63uat.cpp:53:60: note:   \u2018std::optional<long int>\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   53 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |                                                            ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n     ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0 && b == 0) {\n        if (n == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (a == 0) {\n        if (n % b == 0) {\n            return std::make_optional(n / b);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (b == 0) {\n        if (n % a == 0) {\n            return std::make_optional(n / a);\n        } else {\n            return std::nullopt;\n        }\n    }\n    long d = std::__gcd(a, b);\n    if (n % d != 0) {\n        return std::nullopt;\n    }\n    long x = 0, y = 0;\n    long a1 = a / d, b1 = b / d, n1 = n / d;\n    std::tie(x, y) = find_solution(a1, b1, n1);\n    return std::make_optional(x * (b / d) + y * (a / d));\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123385,
      "stdout": "",
      "stderr": "/tmp/tmp1krz9ilh.cpp: In function \u2018std::optional<long int> find_solution(long int, long int, long int)\u2019:\n/tmp/tmp1krz9ilh.cpp:32:46: error: no match for \u2018operator=\u2019 (operand types are \u2018std::tuple<long int&, long int&>\u2019 and \u2018std::optional<long int>\u2019)\n   32 |     std::tie(x, y) = find_solution(a1, b1, n1);\n      |                                              ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/functional:54,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/pstl/glue_algorithm_defs.h:13,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:71,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n                 from /tmp/tmp1krz9ilh.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/tuple:1205:7: note: candidate: \u2018std::tuple<_T1, _T2>& std::tuple<_T1, _T2>::operator=(typename std::conditional<__assignable<const _T1&, const _T2&>(), const std::tuple<_T1, _T2>&, const std::__nonesuch_no_braces&>::type) [with _T1 = long int&; _T2 = long int&; typename std::conditional<__assignable<const _T1&, const _T2&>(), const std::tuple<_T1, _T2>&, const std::__nonesuch_no_braces&>::type = const std::tuple<long int&, long int&>&]\u2019\n 1205 |       operator=(typename conditional<__assignable<const _T1&, const _T2&>(),\n      |       ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/tuple:1207:45: note:   no known conversion for argument 1 from \u2018std::optional<long int>\u2019 to \u2018std::conditional<true, const std::tuple<long int&, long int&>&, const std::__nonesuch_no_braces&>::type\u2019 {aka \u2018const std::tuple<long int&, long int&>&\u2019}\n 1205 |       operator=(typename conditional<__assignable<const _T1&, const _T2&>(),\n      |                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n 1206 |          const tuple&,\n      |          ~~~~~~~~~~~~~                       \n 1207 |          const __nonesuch_no_braces&>::type __in)\n   ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (n % std::gcd(a, b) != 0) {\n        return std::nullopt;\n    }\n    long x = 0;\n    long y = n / b;\n    long g = std::gcd(a, b);\n    while (x * b <= n) {\n        if ((n - x * b) % a == 0) {\n            return std::make_optional(x);\n        }\n        x++;\n    }\n    return std::nullopt;\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123385,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp1yyvxic4.cpp:2:\n/tmp/tmp1yyvxic4.cpp: In function \u2018int main()\u2019:\n/tmp/tmp1yyvxic4.cpp:21:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   21 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmp1yyvxic4.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp1yyvxic4.cpp:2:\n/tmp/tmp1yyvxic4.cpp:21:60: note:   \u2018std::optional<long int>\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   21 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |                                                            ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n     ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (n % gcd(a, b) != 0) {\n        return std::nullopt;\n    }\n    long x = 0, y = 0;\n    long d = gcd(a, b);\n    x = n / d * b / a;\n    y = n / d - a / b * x;\n    return std::make_tuple(x, y);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123355,
      "stdout": "",
      "stderr": "/tmp/tmppnbp6d4m.cpp: In function \u2018std::optional<long int> find_solution(long int, long int, long int)\u2019:\n/tmp/tmppnbp6d4m.cpp:5:13: error: \u2018gcd\u2019 was not declared in this scope; did you mean \u2018std::gcd\u2019?\n    5 |     if (n % gcd(a, b) != 0) {\n      |             ^~~\n      |             std::gcd\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:84,\n                 from /tmp/tmppnbp6d4m.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/numeric:131:5: note: \u2018std::gcd\u2019 declared here\n  131 |     gcd(_Mn __m, _Nn __n)\n      |     ^~~\n/tmp/tmppnbp6d4m.cpp:9:14: error: \u2018gcd\u2019 was not declared in this scope; did you mean \u2018std::gcd\u2019?\n    9 |     long d = gcd(a, b);\n      |              ^~~\n      |              std::gcd\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:84,\n                 from /tmp/tmppnbp6d4m.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/numeric:131:5: note: \u2018std::gcd\u2019 declared here\n  131 |     gcd(_Mn __m, _Nn __n)\n      |     ^~~\n/tmp/tmppnbp6d4m.cpp:12:27: error: could not convert \u2018std::make_tuple(_Elements&& ...) [with _Elements = {long int&, long int&}](y)\u2019 from \u2018std::tuple<long int, long int>\u2019 to \u2018std::optional<long int>\u2019\n   12 |     return std::make_tuple(x, y);\n      |            ~~~~~~~~~~~~~~~^~~~~~\n      |                           |\n      |                           std::tuple<long int, long int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmppnbp6d4m.cpp:2:\n/tmp/tmppnbp6d4m.cpp: In function \u2018int main()\u2019:\n/tmp/tmppnbp6d4m.cpp:16:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   16 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0 && b == 0) {\n        return n == 0 ? std::make_optional(0) : std::nullopt;\n    }\n    if (a == 0) {\n        return n % b == 0 ? std::make_optional(n / b) : std::nullopt;\n    }\n    if (b == 0) {\n        return n % a == 0 ? std::make_optional(n / a) : std::nullopt;\n    }\n    long d = std::__gcd(a, b);\n    if (n % d != 0) {\n        return std::nullopt;\n    }\n    a /= d;\n    b /= d;\n    n /= d;\n    long x, y;\n    std::tie(x, y) = find_solution(b, a % b, n).value();\n    return std::make_optional(std::make_tuple(y, x - (a / b) * y));\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123385,
      "stdout": "",
      "stderr": "/tmp/tmpc85gmixc.cpp: In function \u2018std::optional<long int> find_solution(long int, long int, long int)\u2019:\n/tmp/tmpc85gmixc.cpp:22:55: error: no match for \u2018operator=\u2019 (operand types are \u2018std::tuple<long int&, long int&>\u2019 and \u2018long int\u2019)\n   22 |     std::tie(x, y) = find_solution(b, a % b, n).value();\n      |                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/functional:54,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/pstl/glue_algorithm_defs.h:13,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:71,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n                 from /tmp/tmpc85gmixc.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/tuple:1205:7: note: candidate: \u2018std::tuple<_T1, _T2>& std::tuple<_T1, _T2>::operator=(typename std::conditional<__assignable<const _T1&, const _T2&>(), const std::tuple<_T1, _T2>&, const std::__nonesuch_no_braces&>::type) [with _T1 = long int&; _T2 = long int&; typename std::conditional<__assignable<const _T1&, const _T2&>(), const std::tuple<_T1, _T2>&, const std::__nonesuch_no_braces&>::type = const std::tuple<long int&, long int&>&]\u2019\n 1205 |       operator=(typename conditional<__assignable<const _T1&, const _T2&>(),\n      |       ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/tuple:1207:45: note:   no known conversion for argument 1 from \u2018long int\u2019 to \u2018std::conditional<true, const std::tuple<long int&, long int&>&, const std::__nonesuch_no_braces&>::type\u2019 {aka \u2018const std::tuple<long int&, long int&>&\u2019}\n 1205 |       operator=(typename conditional<__assignable<const _T1&, const _T2&>(),\n      |                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n 1206 |          const tuple&,\n      |          ~~~~~~~~~~~~~                       \n 1207 |          const __nonesuch_no_braces&>::type __in)\n      |        ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0 && b == 0) {\n        if (n == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (a == 0) {\n        if (n % b == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (b == 0) {\n        if (n % a == 0) {\n            return std::make_optional(n / a);\n        } else {\n            return std::nullopt;\n        }\n    }\n    long g = std::__gcd(a, b);\n    if (n % g != 0) {\n        return std::nullopt;\n    }\n    long x0, y0;\n    std::tie(x0, y0) = find_solution(b / g, a / g, n / g).value();\n    return std::make_optional(y0 * (b / g) + x0 * (a / g));\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123385,
      "stdout": "",
      "stderr": "/tmp/tmp7bqs5ql2.cpp: In function \u2018std::optional<long int> find_solution(long int, long int, long int)\u2019:\n/tmp/tmp7bqs5ql2.cpp:31:65: error: no match for \u2018operator=\u2019 (operand types are \u2018std::tuple<long int&, long int&>\u2019 and \u2018long int\u2019)\n   31 |     std::tie(x0, y0) = find_solution(b / g, a / g, n / g).value();\n      |                                                                 ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/functional:54,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/pstl/glue_algorithm_defs.h:13,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:71,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n                 from /tmp/tmp7bqs5ql2.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/tuple:1205:7: note: candidate: \u2018std::tuple<_T1, _T2>& std::tuple<_T1, _T2>::operator=(typename std::conditional<__assignable<const _T1&, const _T2&>(), const std::tuple<_T1, _T2>&, const std::__nonesuch_no_braces&>::type) [with _T1 = long int&; _T2 = long int&; typename std::conditional<__assignable<const _T1&, const _T2&>(), const std::tuple<_T1, _T2>&, const std::__nonesuch_no_braces&>::type = const std::tuple<long int&, long int&>&]\u2019\n 1205 |       operator=(typename conditional<__assignable<const _T1&, const _T2&>(),\n      |       ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/tuple:1207:45: note:   no known conversion for argument 1 from \u2018long int\u2019 to \u2018std::conditional<true, const std::tuple<long int&, long int&>&, const std::__nonesuch_no_braces&>::type\u2019 {aka \u2018const std::tuple<long int&, long int&>&\u2019}\n 1205 |       operator=(typename conditional<__assignable<const _T1&, const _T2&>(),\n      |                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n 1206 |          const tuple&,\n      |          ~~~~~~~~~~~~~                       \n 1207 |          const __nonesuch_no_braces&>::type _",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0 && b == 0) {\n        if (n == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (a == 0) {\n        if (n % b == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (b == 0) {\n        if (n % a == 0) {\n            return std::make_optional(n / a);\n        } else {\n            return std::nullopt;\n        }\n    }\n    long d = std::__gcd(a, b);\n    if (n % d != 0) {\n        return std::nullopt;\n    }\n    a /= d;\n    b /= d;\n    n /= d;\n    long x, y;\n    std::tie(x, y) = find_solution(b, a % b, n).value();\n    return std::make_optional(y - (a / b) * x);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123385,
      "stdout": "",
      "stderr": "/tmp/tmpvvnm51gv.cpp: In function \u2018std::optional<long int> find_solution(long int, long int, long int)\u2019:\n/tmp/tmpvvnm51gv.cpp:34:55: error: no match for \u2018operator=\u2019 (operand types are \u2018std::tuple<long int&, long int&>\u2019 and \u2018long int\u2019)\n   34 |     std::tie(x, y) = find_solution(b, a % b, n).value();\n      |                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/functional:54,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/pstl/glue_algorithm_defs.h:13,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:71,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n                 from /tmp/tmpvvnm51gv.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/tuple:1205:7: note: candidate: \u2018std::tuple<_T1, _T2>& std::tuple<_T1, _T2>::operator=(typename std::conditional<__assignable<const _T1&, const _T2&>(), const std::tuple<_T1, _T2>&, const std::__nonesuch_no_braces&>::type) [with _T1 = long int&; _T2 = long int&; typename std::conditional<__assignable<const _T1&, const _T2&>(), const std::tuple<_T1, _T2>&, const std::__nonesuch_no_braces&>::type = const std::tuple<long int&, long int&>&]\u2019\n 1205 |       operator=(typename conditional<__assignable<const _T1&, const _T2&>(),\n      |       ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/tuple:1207:45: note:   no known conversion for argument 1 from \u2018long int\u2019 to \u2018std::conditional<true, const std::tuple<long int&, long int&>&, const std::__nonesuch_no_braces&>::type\u2019 {aka \u2018const std::tuple<long int&, long int&>&\u2019}\n 1205 |       operator=(typename conditional<__assignable<const _T1&, const _T2&>(),\n      |                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n 1206 |          const tuple&,\n      |          ~~~~~~~~~~~~~                       \n 1207 |          const __nonesuch_no_braces&>::type __in)\n      |        ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0 && b == 0) {\n        if (n == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (a == 0) {\n        if (n % b == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (b == 0) {\n        if (n % a == 0) {\n            return std::make_optional(n / a);\n        } else {\n            return std::nullopt;\n        }\n    }\n    long d = std::__gcd(a, b);\n    if (n % d != 0) {\n        return std::nullopt;\n    }\n    long x = 0, y = 0;\n    std::tie(x, y) = find_solution(b / d, a / d, n / d);\n    return std::make_optional(y * (b / d) + x * (a / d));\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123385,
      "stdout": "",
      "stderr": "/tmp/tmphzfxm5jk.cpp: In function \u2018std::optional<long int> find_solution(long int, long int, long int)\u2019:\n/tmp/tmphzfxm5jk.cpp:31:55: error: no match for \u2018operator=\u2019 (operand types are \u2018std::tuple<long int&, long int&>\u2019 and \u2018std::optional<long int>\u2019)\n   31 |     std::tie(x, y) = find_solution(b / d, a / d, n / d);\n      |                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/functional:54,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/pstl/glue_algorithm_defs.h:13,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:71,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n                 from /tmp/tmphzfxm5jk.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/tuple:1205:7: note: candidate: \u2018std::tuple<_T1, _T2>& std::tuple<_T1, _T2>::operator=(typename std::conditional<__assignable<const _T1&, const _T2&>(), const std::tuple<_T1, _T2>&, const std::__nonesuch_no_braces&>::type) [with _T1 = long int&; _T2 = long int&; typename std::conditional<__assignable<const _T1&, const _T2&>(), const std::tuple<_T1, _T2>&, const std::__nonesuch_no_braces&>::type = const std::tuple<long int&, long int&>&]\u2019\n 1205 |       operator=(typename conditional<__assignable<const _T1&, const _T2&>(),\n      |       ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/tuple:1207:45: note:   no known conversion for argument 1 from \u2018std::optional<long int>\u2019 to \u2018std::conditional<true, const std::tuple<long int&, long int&>&, const std::__nonesuch_no_braces&>::type\u2019 {aka \u2018const std::tuple<long int&, long int&>&\u2019}\n 1205 |       operator=(typename conditional<__assignable<const _T1&, const _T2&>(),\n      |                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n 1206 |          const tuple&,\n      |          ~~~~~~~~~~~~~                       \n 1207 |          const __nonesuch_no_braces",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0 && b == 0) {\n        return n == 0 ? std::optional<long>{0} : std::nullopt;\n    }\n    if (a == 0) {\n        return n % b == 0 ? std::optional<long>{n / b} : std::nullopt;\n    }\n    if (b == 0) {\n        return n % a == 0 ? std::optional<long>{n / a} : std::nullopt;\n    }\n    long d = std::__gcd(a, b);\n    if (n % d != 0) {\n        return std::nullopt;\n    }\n    long x0 = 0, y0 = 1;\n    long x1 = 1, y1 = 0;\n    while (a % b != 0) {\n        long q = a / b;\n        long r = a % b;\n        long x2 = x0 - q * x1;\n        long y2 = y0 - q * y1;\n        x0 = x1;\n        y0 = y1;\n        x1 = x2;\n        y1 = y2;\n        a = b;\n        b = r;\n    }\n    long x = x1 * (n / d);\n    long y = y1 * (n / d);\n    return std::optional<long>{x};\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123385,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpbwzo8y86.cpp:2:\n/tmp/tmpbwzo8y86.cpp: In function \u2018int main()\u2019:\n/tmp/tmpbwzo8y86.cpp:38:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   38 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpbwzo8y86.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpbwzo8y86.cpp:2:\n/tmp/tmpbwzo8y86.cpp:38:60: note:   \u2018std::optional<long int>\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   38 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |                                                            ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n     ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0 && b == 0) {\n        if (n == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (a == 0) {\n        if (n % b == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (b == 0) {\n        if (n % a == 0) {\n            return std::make_optional(n / a);\n        } else {\n            return std::nullopt;\n        }\n    }\n    long g = std::gcd(a, b);\n    if (n % g != 0) {\n        return std::nullopt;\n    }\n    long p = n / g;\n    long q = std::gcd(a, b);\n    a /= q;\n    b /= q;\n    long x, y;\n    std::tie(x, y) = find_solution(b, a % b, p % a).value();\n    return std::make_optional(b * x + a * y);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123385,
      "stdout": "",
      "stderr": "/tmp/tmp7xrpyjsx.cpp: In function \u2018std::optional<long int> find_solution(long int, long int, long int)\u2019:\n/tmp/tmp7xrpyjsx.cpp:35:59: error: no match for \u2018operator=\u2019 (operand types are \u2018std::tuple<long int&, long int&>\u2019 and \u2018long int\u2019)\n   35 |     std::tie(x, y) = find_solution(b, a % b, p % a).value();\n      |                                                           ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/functional:54,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/pstl/glue_algorithm_defs.h:13,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:71,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n                 from /tmp/tmp7xrpyjsx.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/tuple:1205:7: note: candidate: \u2018std::tuple<_T1, _T2>& std::tuple<_T1, _T2>::operator=(typename std::conditional<__assignable<const _T1&, const _T2&>(), const std::tuple<_T1, _T2>&, const std::__nonesuch_no_braces&>::type) [with _T1 = long int&; _T2 = long int&; typename std::conditional<__assignable<const _T1&, const _T2&>(), const std::tuple<_T1, _T2>&, const std::__nonesuch_no_braces&>::type = const std::tuple<long int&, long int&>&]\u2019\n 1205 |       operator=(typename conditional<__assignable<const _T1&, const _T2&>(),\n      |       ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/tuple:1207:45: note:   no known conversion for argument 1 from \u2018long int\u2019 to \u2018std::conditional<true, const std::tuple<long int&, long int&>&, const std::__nonesuch_no_braces&>::type\u2019 {aka \u2018const std::tuple<long int&, long int&>&\u2019}\n 1205 |       operator=(typename conditional<__assignable<const _T1&, const _T2&>(),\n      |                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n 1206 |          const tuple&,\n      |          ~~~~~~~~~~~~~                       \n 1207 |          const __nonesuch_no_braces&>::type __in)\n      |",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (n % std::gcd(a, b) != 0) {\n        return std::nullopt;\n    }\n    long x = 0;\n    long y = n / b;\n    while (a * x + b * y != n) {\n        if (a * x + b * y < n) {\n            x += 1;\n        } else {\n            y -= 1;\n        }\n    }\n    return std::make_tuple(x, y);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123385,
      "stdout": "",
      "stderr": "/tmp/tmpu1c1r99l.cpp: In function \u2018std::optional<long int> find_solution(long int, long int, long int)\u2019:\n/tmp/tmpu1c1r99l.cpp:17:27: error: could not convert \u2018std::make_tuple(_Elements&& ...) [with _Elements = {long int&, long int&}](y)\u2019 from \u2018std::tuple<long int, long int>\u2019 to \u2018std::optional<long int>\u2019\n   17 |     return std::make_tuple(x, y);\n      |            ~~~~~~~~~~~~~~~^~~~~~\n      |                           |\n      |                           std::tuple<long int, long int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpu1c1r99l.cpp:2:\n/tmp/tmpu1c1r99l.cpp: In function \u2018int main()\u2019:\n/tmp/tmpu1c1r99l.cpp:21:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   21 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpu1c1r99l.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n             ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0 && b == 0) {\n        if (n == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (a == 0) {\n        if (n % b == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (b == 0) {\n        if (n % a == 0) {\n            return std::make_optional(n / a);\n        } else {\n            return std::nullopt;\n        }\n    }\n    long d = std::__gcd(a, b);\n    if (n % d != 0) {\n        return std::nullopt;\n    }\n    long x = 0, y = 0;\n    long a1 = a / d, b1 = b / d, n1 = n / d;\n    long r = 1, s = 0, t = 0, m = 1;\n    while (a1 != 0) {\n        long q = b1 / a1;\n        long tmp = r;\n        r = s;\n        s = tmp - q * s;\n        tmp = t;\n        t = m;\n        m = tmp - q * m;\n        tmp = a1;\n        a1 = b1 - q * a1;\n        b1 = tmp;\n    }\n    x = n1 * s;\n    y = n1 * m;\n    return std::make_optional(x);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123385,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpetgiujxj.cpp:2:\n/tmp/tmpetgiujxj.cpp: In function \u2018int main()\u2019:\n/tmp/tmpetgiujxj.cpp:51:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   51 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpetgiujxj.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpetgiujxj.cpp:2:\n/tmp/tmpetgiujxj.cpp:51:60: note:   \u2018std::optional<long int>\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   51 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |                                                            ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n     ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0) {\n        if (n == 0) {\n            return std::make_optional(0);\n        }\n        return std::nullopt;\n    }\n    auto x = find_solution(b % a, a, n % a);\n    if (!x) {\n        return std::nullopt;\n    }\n    return std::make_optional(b / a * x.value() - n / a);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123264,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpt2pwcbno.cpp:2:\n/tmp/tmpt2pwcbno.cpp: In function \u2018int main()\u2019:\n/tmp/tmpt2pwcbno.cpp:19:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   19 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpt2pwcbno.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpt2pwcbno.cpp:2:\n/tmp/tmpt2pwcbno.cpp:19:60: note:   \u2018std::optional<long int>\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   19 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |                                                            ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n     ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0 && b == 0) {\n        if (n == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (a == 0) {\n        if (n % b == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (b == 0) {\n        if (n % a == 0) {\n            return std::make_optional(n / a);\n        } else {\n            return std::nullopt;\n        }\n    }\n    long d = std::__gcd(a, b);\n    if (n % d != 0) {\n        return std::nullopt;\n    }\n    long x0, y0;\n    std::tie(x0, y0) = find_solution(b / d, a / d, n / d).value();\n    long x = y0;\n    long y = x0 - y0 * (a / b);\n    return std::make_optional(x);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123385,
      "stdout": "",
      "stderr": "/tmp/tmptigo28ir.cpp: In function \u2018std::optional<long int> find_solution(long int, long int, long int)\u2019:\n/tmp/tmptigo28ir.cpp:31:65: error: no match for \u2018operator=\u2019 (operand types are \u2018std::tuple<long int&, long int&>\u2019 and \u2018long int\u2019)\n   31 |     std::tie(x0, y0) = find_solution(b / d, a / d, n / d).value();\n      |                                                                 ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/functional:54,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/pstl/glue_algorithm_defs.h:13,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:71,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n                 from /tmp/tmptigo28ir.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/tuple:1205:7: note: candidate: \u2018std::tuple<_T1, _T2>& std::tuple<_T1, _T2>::operator=(typename std::conditional<__assignable<const _T1&, const _T2&>(), const std::tuple<_T1, _T2>&, const std::__nonesuch_no_braces&>::type) [with _T1 = long int&; _T2 = long int&; typename std::conditional<__assignable<const _T1&, const _T2&>(), const std::tuple<_T1, _T2>&, const std::__nonesuch_no_braces&>::type = const std::tuple<long int&, long int&>&]\u2019\n 1205 |       operator=(typename conditional<__assignable<const _T1&, const _T2&>(),\n      |       ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/tuple:1207:45: note:   no known conversion for argument 1 from \u2018long int\u2019 to \u2018std::conditional<true, const std::tuple<long int&, long int&>&, const std::__nonesuch_no_braces&>::type\u2019 {aka \u2018const std::tuple<long int&, long int&>&\u2019}\n 1205 |       operator=(typename conditional<__assignable<const _T1&, const _T2&>(),\n      |                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n 1206 |          const tuple&,\n      |          ~~~~~~~~~~~~~                       \n 1207 |          const __nonesuch_no_braces&>::type _",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0 && b == 0) {\n        if (n == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (a == 0) {\n        if (n % b == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (b == 0) {\n        if (n % a == 0) {\n            return std::make_optional(n / a);\n        } else {\n            return std::nullopt;\n        }\n    }\n    long d = std::__gcd(a, b);\n    if (n % d != 0) {\n        return std::nullopt;\n    }\n    long x0 = 0, y0 = n / d;\n    long x1 = 1, y1 = (n - a) / b;\n    while (y1 < y0) {\n        long x2 = x0 - x1;\n        long y2 = y0 - y1;\n        x0 = x1;\n        y0 = y1;\n        x1 = x2;\n        y1 = y2;\n    }\n    return std::make_optional(x1);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123385,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp8a2sepwr.cpp:2:\n/tmp/tmp8a2sepwr.cpp: In function \u2018int main()\u2019:\n/tmp/tmp8a2sepwr.cpp:44:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   44 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmp8a2sepwr.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp8a2sepwr.cpp:2:\n/tmp/tmp8a2sepwr.cpp:44:60: note:   \u2018std::optional<long int>\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   44 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |                                                            ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n     ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0 && b == 0) {\n        if (n == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (a == 0) {\n        if (n % b == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (b == 0) {\n        if (n % a == 0) {\n            return std::make_optional(n / a);\n        } else {\n            return std::nullopt;\n        }\n    }\n    long d = std::__gcd(a, b);\n    if (n % d != 0) {\n        return std::nullopt;\n    }\n    long x = 0;\n    long y = n / d;\n    while (y % a != 0) {\n        x += b / d;\n        y -= a / d;\n    }\n    return std::make_optional(x + y / a);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123385,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp_6h2bu22.cpp:2:\n/tmp/tmp_6h2bu22.cpp: In function \u2018int main()\u2019:\n/tmp/tmp_6h2bu22.cpp:40:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   40 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmp_6h2bu22.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp_6h2bu22.cpp:2:\n/tmp/tmp_6h2bu22.cpp:40:60: note:   \u2018std::optional<long int>\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   40 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |                                                            ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n     ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0 && b == 0) {\n        if (n == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (a == 0) {\n        if (n % b == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (b == 0) {\n        if (n % a == 0) {\n            return std::make_optional(n / a);\n        } else {\n            return std::nullopt;\n        }\n    }\n    long g = std::__gcd(a, b);\n    if (n % g != 0) {\n        return std::nullopt;\n    }\n    long x = 0, y = 0;\n    long d = std::__gcd(a, b);\n    a /= d;\n    b /= d;\n    n /= d;\n    long tmp = 0;\n    long q = 0;\n    long r = 0;\n    while (a % 2 == 0 && b % 2 == 0) {\n        a /= 2;\n        b /= 2;\n        n *= 2;\n    }\n    while (a % 2 == 0) {\n        a /= 2;\n        if (n % 2 != 0) {\n            x += b;\n        }\n        n /= 2;\n    }\n    while (b % 2 == 0) {\n        b /= 2;\n        if (n % 2 != 0) {\n            y += a;\n        }\n        n /= 2;\n    }\n    while (a != b) {\n        if (a % 2 == 0) {\n            a /= 2;\n            if (n % 2 != 0) {\n                x += b;\n            }\n            n /= 2;\n        } else if (b % 2 == 0) {\n            b /= 2;\n            if (n % 2 != 0) {\n                y += a;\n            }\n            n /= 2;\n        } else if (a > b) {\n            q =\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123372,
      "stdout": "",
      "stderr": "/tmp/tmp6oaekj2b.cpp: In function \u2018std::optional<long int> find_solution(long int, long int, long int)\u2019:\n/tmp/tmp6oaekj2b.cpp:72:1: error: expected primary-expression before \u2018}\u2019 token\n   72 | }\n      | ^\n/tmp/tmp6oaekj2b.cpp:73:12: error: a function-definition is not allowed here before \u2018{\u2019 token\n   73 | int main() {\n      |            ^\n/tmp/tmp6oaekj2b.cpp:78:1: error: expected \u2018}\u2019 at end of input\n   78 | }\n      | ^\n/tmp/tmp6oaekj2b.cpp:57:20: note: to match this \u2018{\u2019\n   57 |     while (a != b) {\n      |                    ^\n/tmp/tmp6oaekj2b.cpp:78:1: error: expected \u2018}\u2019 at end of input\n   78 | }\n      | ^\n/tmp/tmp6oaekj2b.cpp:4:59: note: to match this \u2018{\u2019\n    4 | std::optional<long> find_solution(long a, long b, long n) {\n      |                                                           ^\n/tmp/tmp6oaekj2b.cpp:78:1: warning: control reaches end of non-void function [-Wreturn-type]\n   78 | }\n      | ^\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0 && b == 0) {\n        if (n == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (a == 0) {\n        if (n % b == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (b == 0) {\n        if (n % a == 0) {\n            return std::make_optional(n / a);\n        } else {\n            return std::nullopt;\n        }\n    }\n    long g = std::__gcd(a, b);\n    if (n % g != 0) {\n        return std::nullopt;\n    }\n    long x0 = 0, y0 = 0;\n    long x1 = 1, y1 = 0;\n    long x2 = 0, y2 = 1;\n    while (a % 2 == 0 && b % 2 == 0) {\n        a /= 2;\n        b /= 2;\n        n /= 2;\n    }\n    while (a != 0) {\n        while (a % 2 == 0) {\n            a /= 2;\n            if (x1 % 2 == 0 && y1 % 2 == 0) {\n                x1 /= 2;\n                y1 /= 2;\n            } else {\n                x1 = (x1 + b) / 2;\n                y1 = (y1 - a) / 2;\n            }\n        }\n        while (b % 2 == 0) {\n            b /= 2;\n            if (x2 % 2 == 0 && y2 % 2 == 0) {\n                x2 /= 2;\n                y2 /= 2;\n            } else {\n                x2 = (x2 + b) / 2;\n                y2 = (y2 - a) / 2;\n            }\n        }\n        if (a >= b) {\n            a -= b;\n            x0 -= x2;\n            y0 -= y2;\n        } else {\n            b -= a;\n            x0 -= x\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123372,
      "stdout": "",
      "stderr": "/tmp/tmp_msb9ij0.cpp: In function \u2018std::optional<long int> find_solution(long int, long int, long int)\u2019:\n/tmp/tmp_msb9ij0.cpp:65:19: error: \u2018x\u2019 was not declared in this scope; did you mean \u2018x2\u2019?\n   65 |             x0 -= x\n      |                   ^\n      |                   x2\n/tmp/tmp_msb9ij0.cpp:67:12: error: a function-definition is not allowed here before \u2018{\u2019 token\n   67 | int main() {\n      |            ^\n/tmp/tmp_msb9ij0.cpp:72:1: error: expected \u2018}\u2019 at end of input\n   72 | }\n      | ^\n/tmp/tmp_msb9ij0.cpp:38:20: note: to match this \u2018{\u2019\n   38 |     while (a != 0) {\n      |                    ^\n/tmp/tmp_msb9ij0.cpp:72:1: error: expected \u2018}\u2019 at end of input\n   72 | }\n      | ^\n/tmp/tmp_msb9ij0.cpp:4:59: note: to match this \u2018{\u2019\n    4 | std::optional<long> find_solution(long a, long b, long n) {\n      |                                                           ^\n/tmp/tmp_msb9ij0.cpp:72:1: warning: control reaches end of non-void function [-Wreturn-type]\n   72 | }\n      | ^\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0 && b == 0) {\n        if (n == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (a == 0) {\n        if (n % b == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (b == 0) {\n        if (n % a == 0) {\n            return std::make_optional(n / a);\n        } else {\n            return std::nullopt;\n        }\n    }\n    long d = std::__gcd(a, b);\n    if (n % d != 0) {\n        return std::nullopt;\n    }\n    long x0, y0;\n    std::tie(x0, y0) = find_solution(b / d, a / d, n / d).value();\n    return std::make_optional(std::make_pair(y0, x0 - y0 * (a / b)));\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123385,
      "stdout": "",
      "stderr": "/tmp/tmpk88j7cjz.cpp: In function \u2018std::optional<long int> find_solution(long int, long int, long int)\u2019:\n/tmp/tmpk88j7cjz.cpp:31:65: error: no match for \u2018operator=\u2019 (operand types are \u2018std::tuple<long int&, long int&>\u2019 and \u2018long int\u2019)\n   31 |     std::tie(x0, y0) = find_solution(b / d, a / d, n / d).value();\n      |                                                                 ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/functional:54,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/pstl/glue_algorithm_defs.h:13,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:71,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n                 from /tmp/tmpk88j7cjz.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/tuple:1205:7: note: candidate: \u2018std::tuple<_T1, _T2>& std::tuple<_T1, _T2>::operator=(typename std::conditional<__assignable<const _T1&, const _T2&>(), const std::tuple<_T1, _T2>&, const std::__nonesuch_no_braces&>::type) [with _T1 = long int&; _T2 = long int&; typename std::conditional<__assignable<const _T1&, const _T2&>(), const std::tuple<_T1, _T2>&, const std::__nonesuch_no_braces&>::type = const std::tuple<long int&, long int&>&]\u2019\n 1205 |       operator=(typename conditional<__assignable<const _T1&, const _T2&>(),\n      |       ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/tuple:1207:45: note:   no known conversion for argument 1 from \u2018long int\u2019 to \u2018std::conditional<true, const std::tuple<long int&, long int&>&, const std::__nonesuch_no_braces&>::type\u2019 {aka \u2018const std::tuple<long int&, long int&>&\u2019}\n 1205 |       operator=(typename conditional<__assignable<const _T1&, const _T2&>(),\n      |                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n 1206 |          const tuple&,\n      |          ~~~~~~~~~~~~~                       \n 1207 |          const __nonesuch_no_braces&>::type _",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (n % gcd(a, b) != 0) return std::nullopt;\n    long x = 0, y = 0;\n    long d = gcd(a, b);\n    x = n / d * (b / d);\n    y = n / d * (a / d);\n    return std::make_tuple(x, y);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123355,
      "stdout": "",
      "stderr": "/tmp/tmpsmbggr4d.cpp: In function \u2018std::optional<long int> find_solution(long int, long int, long int)\u2019:\n/tmp/tmpsmbggr4d.cpp:5:13: error: \u2018gcd\u2019 was not declared in this scope; did you mean \u2018std::gcd\u2019?\n    5 |     if (n % gcd(a, b) != 0) return std::nullopt;\n      |             ^~~\n      |             std::gcd\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:84,\n                 from /tmp/tmpsmbggr4d.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/numeric:131:5: note: \u2018std::gcd\u2019 declared here\n  131 |     gcd(_Mn __m, _Nn __n)\n      |     ^~~\n/tmp/tmpsmbggr4d.cpp:7:14: error: \u2018gcd\u2019 was not declared in this scope; did you mean \u2018std::gcd\u2019?\n    7 |     long d = gcd(a, b);\n      |              ^~~\n      |              std::gcd\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:84,\n                 from /tmp/tmpsmbggr4d.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/numeric:131:5: note: \u2018std::gcd\u2019 declared here\n  131 |     gcd(_Mn __m, _Nn __n)\n      |     ^~~\n/tmp/tmpsmbggr4d.cpp:10:27: error: could not convert \u2018std::make_tuple(_Elements&& ...) [with _Elements = {long int&, long int&}](y)\u2019 from \u2018std::tuple<long int, long int>\u2019 to \u2018std::optional<long int>\u2019\n   10 |     return std::make_tuple(x, y);\n      |            ~~~~~~~~~~~~~~~^~~~~~\n      |                           |\n      |                           std::tuple<long int, long int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpsmbggr4d.cpp:2:\n/tmp/tmpsmbggr4d.cpp: In function \u2018int main()\u2019:\n/tmp/tmpsmbggr4d.cpp:14:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   14 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n   ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0 && b == 0) {\n        if (n == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (a == 0) {\n        if (n % b == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (b == 0) {\n        if (n % a == 0) {\n            return std::make_optional(n / a);\n        } else {\n            return std::nullopt;\n        }\n    }\n    long gcd = std::__gcd(a, b);\n    if (n % gcd != 0) {\n        return std::nullopt;\n    }\n    long x = 0;\n    long y = n / b;\n    while (a * x + b * y != n) {\n        if (a * x + b * y < n) {\n            x += 1;\n        } else {\n            y -= 1;\n        }\n    }\n    return std::make_optional(x);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123385,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpdrtdbsn8.cpp:2:\n/tmp/tmpdrtdbsn8.cpp: In function \u2018int main()\u2019:\n/tmp/tmpdrtdbsn8.cpp:43:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   43 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpdrtdbsn8.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpdrtdbsn8.cpp:2:\n/tmp/tmpdrtdbsn8.cpp:43:60: note:   \u2018std::optional<long int>\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   43 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |                                                            ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n     ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (n % __gcd(a, b) != 0) {\n        return std::nullopt;\n    }\n    long x = 0, y = 0;\n    long d = __gcd(a, b);\n    long a1 = a / d, b1 = b / d, n1 = n / d;\n    long x1 = 1, y1 = 0, x2 = 0, y2 = 1;\n    while (b1) {\n        long q = a1 / b1;\n        long r = a1 % b1;\n        long x = x2 - q * x1;\n        long y = y2 - q * y1;\n        a1 = b1;\n        b1 = r;\n        x2 = x1;\n        x1 = x;\n        y2 = y1;\n        y1 = y;\n    }\n    x = n1 * x2;\n    y = n1 * y2;\n    return std::make_optional(x);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123385,
      "stdout": "",
      "stderr": "/tmp/tmptw_9u53m.cpp: In function \u2018std::optional<long int> find_solution(long int, long int, long int)\u2019:\n/tmp/tmptw_9u53m.cpp:5:13: error: \u2018__gcd\u2019 was not declared in this scope\n    5 |     if (n % __gcd(a, b) != 0) {\n      |             ^~~~~\n/tmp/tmptw_9u53m.cpp:5:13: note: suggested alternatives:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n                 from /tmp/tmptw_9u53m.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algo.h:1232:5: note:   \u2018std::__gcd\u2019\n 1232 |     __gcd(_EuclideanRingElement __m, _EuclideanRingElement __n)\n      |     ^~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:84,\n                 from /tmp/tmptw_9u53m.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/numeric:102:5: note:   \u2018std::__detail::__gcd\u2019\n  102 |     __gcd(_Mn __m, _Nn __n)\n      |     ^~~~~\n/tmp/tmptw_9u53m.cpp:9:14: error: \u2018__gcd\u2019 was not declared in this scope\n    9 |     long d = __gcd(a, b);\n      |              ^~~~~\n/tmp/tmptw_9u53m.cpp:9:14: note: suggested alternatives:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n                 from /tmp/tmptw_9u53m.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algo.h:1232:5: note:   \u2018std::__gcd\u2019\n 1232 |     __gcd(_EuclideanRingElement __m, _EuclideanRingElement __n)\n      |     ^~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:84,\n                 from /tmp/tmptw_9u53m.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/numeric:102:5: note:   \u2018std::__detail::__gcd\u2019\n  102 |     __gcd(_Mn __m, _Nn __n)\n      |     ^~~~~\nIn file included from /shared/centos7/gcc/",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0 && b == 0) {\n        return std::nullopt;\n    }\n    if (a == 0) {\n        return n / b;\n    }\n    if (b == 0) {\n        return n / a;\n    }\n    long gcd = std::__gcd(a, b);\n    if (n % gcd != 0) {\n        return std::nullopt;\n    }\n    long x = 0;\n    long y = n / b;\n    while (a * x + b * y != n) {\n        if (a * x + b * y < n) {\n            x += 1;\n        } else {\n            y -= 1;\n        }\n    }\n    return std::make_pair(x, y);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123385,
      "stdout": "",
      "stderr": "/tmp/tmp1uzaw_mj.cpp: In function \u2018std::optional<long int> find_solution(long int, long int, long int)\u2019:\n/tmp/tmp1uzaw_mj.cpp:27:26: error: could not convert \u2018std::make_pair<long int&, long int&>(x, y)\u2019 from \u2018std::pair<long int, long int>\u2019 to \u2018std::optional<long int>\u2019\n   27 |     return std::make_pair(x, y);\n      |            ~~~~~~~~~~~~~~^~~~~~\n      |                          |\n      |                          std::pair<long int, long int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp1uzaw_mj.cpp:2:\n/tmp/tmp1uzaw_mj.cpp: In function \u2018int main()\u2019:\n/tmp/tmp1uzaw_mj.cpp:31:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   31 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmp1uzaw_mj.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylak",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0) {\n        if (n == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    auto x = find_solution(b % a, a, n % a);\n    if (!x) {\n        return std::nullopt;\n    }\n    return std::make_optional(b / a * x.value() - n / a);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1665510529,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmphb4sl61k.cpp:2:\n/tmp/tmphb4sl61k.cpp: In function \u2018int main()\u2019:\n/tmp/tmphb4sl61k.cpp:20:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   20 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmphb4sl61k.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmphb4sl61k.cpp:2:\n/tmp/tmphb4sl61k.cpp:20:60: note:   \u2018std::optional<long int>\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   20 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |                                                            ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n     ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0 && b == 0) {\n        if (n == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (a == 0) {\n        if (n % b == 0) {\n            return std::make_optional(n / b);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (b == 0) {\n        if (n % a == 0) {\n            return std::make_optional(n / a);\n        } else {\n            return std::nullopt;\n        }\n    }\n    long g = std::__gcd(a, b);\n    if (n % g != 0) {\n        return std::nullopt;\n    }\n    long p = a / g;\n    long q = b / g;\n    long r = n / g;\n    long x = 0;\n    long y = r;\n    while (y >= 0) {\n        long z = r - p * x - q * y;\n        if (z == 0) {\n            return std::make_optional(x);\n        }\n        if (z < 0) {\n            return std::nullopt;\n        }\n        x++;\n        y = r - p * x;\n    }\n    return std::nullopt;\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123387,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpgeq2sz85.cpp:2:\n/tmp/tmpgeq2sz85.cpp: In function \u2018int main()\u2019:\n/tmp/tmpgeq2sz85.cpp:50:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   50 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpgeq2sz85.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpgeq2sz85.cpp:2:\n/tmp/tmpgeq2sz85.cpp:50:60: note:   \u2018std::optional<long int>\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   50 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |                                                            ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n     ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    long x = 0;\n    long y = 0;\n    long gcd = std::gcd(a, b);\n    if (n % gcd != 0) {\n        return std::nullopt;\n    }\n    long x1 = 0;\n    long y1 = 1;\n    long x2 = 1;\n    long y2 = 0;\n    long q = 0;\n    long r = 0;\n    while (a != 0) {\n        q = b / a;\n        r = b % a;\n        x = x2 - q * x1;\n        y = y2 - q * y1;\n        b = a;\n        a = r;\n        x2 = x1;\n        x1 = x;\n        y2 = y1;\n        y1 = y;\n    }\n    x = x2;\n    y = y2;\n    return std::make_optional(x * (n / gcd));\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1665510529,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpdrbv9pu7.cpp:2:\n/tmp/tmpdrbv9pu7.cpp: In function \u2018int main()\u2019:\n/tmp/tmpdrbv9pu7.cpp:35:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   35 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpdrbv9pu7.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpdrbv9pu7.cpp:2:\n/tmp/tmpdrbv9pu7.cpp:35:60: note:   \u2018std::optional<long int>\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   35 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |                                                            ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n     ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    long x = 0;\n    long y = n / b;\n    long r = n % b;\n    while (r > 0) {\n        x = (n - b * y) / a;\n        r = n - a * x - b * y;\n        if (r == 0) {\n            return std::make_optional(x);\n        }\n        y--;\n    }\n    return {};\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123387,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpldj37l5i.cpp:2:\n/tmp/tmpldj37l5i.cpp: In function \u2018int main()\u2019:\n/tmp/tmpldj37l5i.cpp:20:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   20 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpldj37l5i.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpldj37l5i.cpp:2:\n/tmp/tmpldj37l5i.cpp:20:60: note:   \u2018std::optional<long int>\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   20 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |                                                            ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n     ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    long x = 0;\n    long y = n / b;\n    long r = n % b;\n    while (r > 0) {\n        long q = b / r;\n        long t = b % r;\n        b = r;\n        r = t;\n        t = x;\n        x = y - q * x;\n        y = t;\n    }\n    if (b > 1) {\n        return std::nullopt;\n    }\n    if (y < 0) {\n        return std::nullopt;\n    }\n    return std::make_optional(y);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123387,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp2chk5y55.cpp:2:\n/tmp/tmp2chk5y55.cpp: In function \u2018int main()\u2019:\n/tmp/tmp2chk5y55.cpp:27:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   27 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmp2chk5y55.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp2chk5y55.cpp:2:\n/tmp/tmp2chk5y55.cpp:27:60: note:   \u2018std::optional<long int>\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   27 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |                                                            ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n     ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0 && b == 0) {\n        if (n == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (a == 0) {\n        if (n % b == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (b == 0) {\n        if (n % a == 0) {\n            return std::make_optional(n / a);\n        } else {\n            return std::nullopt;\n        }\n    }\n    long d = std::__gcd(a, b);\n    if (n % d != 0) {\n        return std::nullopt;\n    }\n    long x0, y0;\n    std::tie(x0, y0) = find_solution(b / d, a / d, n / d).value();\n    return std::make_optional(std::make_pair(y0, x0 - y0 * (a / b)));\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123385,
      "stdout": "",
      "stderr": "/tmp/tmpk88j7cjz.cpp: In function \u2018std::optional<long int> find_solution(long int, long int, long int)\u2019:\n/tmp/tmpk88j7cjz.cpp:31:65: error: no match for \u2018operator=\u2019 (operand types are \u2018std::tuple<long int&, long int&>\u2019 and \u2018long int\u2019)\n   31 |     std::tie(x0, y0) = find_solution(b / d, a / d, n / d).value();\n      |                                                                 ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/functional:54,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/pstl/glue_algorithm_defs.h:13,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:71,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n                 from /tmp/tmpk88j7cjz.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/tuple:1205:7: note: candidate: \u2018std::tuple<_T1, _T2>& std::tuple<_T1, _T2>::operator=(typename std::conditional<__assignable<const _T1&, const _T2&>(), const std::tuple<_T1, _T2>&, const std::__nonesuch_no_braces&>::type) [with _T1 = long int&; _T2 = long int&; typename std::conditional<__assignable<const _T1&, const _T2&>(), const std::tuple<_T1, _T2>&, const std::__nonesuch_no_braces&>::type = const std::tuple<long int&, long int&>&]\u2019\n 1205 |       operator=(typename conditional<__assignable<const _T1&, const _T2&>(),\n      |       ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/tuple:1207:45: note:   no known conversion for argument 1 from \u2018long int\u2019 to \u2018std::conditional<true, const std::tuple<long int&, long int&>&, const std::__nonesuch_no_braces&>::type\u2019 {aka \u2018const std::tuple<long int&, long int&>&\u2019}\n 1205 |       operator=(typename conditional<__assignable<const _T1&, const _T2&>(),\n      |                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n 1206 |          const tuple&,\n      |          ~~~~~~~~~~~~~                       \n 1207 |          const __nonesuch_no_braces&>::type _",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (n % gcd(a, b) != 0) {\n        return {};\n    }\n    long x = 0, y = 0;\n    long d = gcd(a, b);\n    x = n / d * (b / d);\n    y = n / d * (a / d);\n    return {x, y};\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123400,
      "stdout": "",
      "stderr": "/tmp/tmp_yf9584u.cpp: In function \u2018std::optional<long int> find_solution(long int, long int, long int)\u2019:\n/tmp/tmp_yf9584u.cpp:5:13: error: \u2018gcd\u2019 was not declared in this scope; did you mean \u2018std::gcd\u2019?\n    5 |     if (n % gcd(a, b) != 0) {\n      |             ^~~\n      |             std::gcd\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:84,\n                 from /tmp/tmp_yf9584u.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/numeric:131:5: note: \u2018std::gcd\u2019 declared here\n  131 |     gcd(_Mn __m, _Nn __n)\n      |     ^~~\n/tmp/tmp_yf9584u.cpp:9:14: error: \u2018gcd\u2019 was not declared in this scope; did you mean \u2018std::gcd\u2019?\n    9 |     long d = gcd(a, b);\n      |              ^~~\n      |              std::gcd\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:84,\n                 from /tmp/tmp_yf9584u.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/numeric:131:5: note: \u2018std::gcd\u2019 declared here\n  131 |     gcd(_Mn __m, _Nn __n)\n      |     ^~~\n/tmp/tmp_yf9584u.cpp:12:17: error: could not convert \u2018{x, y}\u2019 from \u2018<brace-enclosed initializer list>\u2019 to \u2018std::optional<long int>\u2019\n   12 |     return {x, y};\n      |                 ^\n      |                 |\n      |                 <brace-enclosed initializer list>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp_yf9584u.cpp:2:\n/tmp/tmp_yf9584u.cpp: In function \u2018int main()\u2019:\n/tmp/tmp_yf9584u.cpp:16:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   16 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n    ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0 && b == 0) {\n        if (n == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (a == 0) {\n        if (n % b == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (b == 0) {\n        if (n % a == 0) {\n            return std::make_optional(n / a);\n        } else {\n            return std::nullopt;\n        }\n    }\n    long g = std::__gcd(a, b);\n    if (n % g != 0) {\n        return std::nullopt;\n    }\n    long p = n / g;\n    long q = 0;\n    long r = 0;\n    long s = 0;\n    long d = g;\n    long x1 = 1;\n    long x2 = 0;\n    long y1 = 0;\n    long y2 = 1;\n    while (a % d != 0 || b % d != 0) {\n        long q = a / d;\n        long r = a % d;\n        long s = b / d;\n        long t = b % d;\n        long m = x2 - q * x1;\n        long n = y2 - q * y1;\n        a = d;\n        b = t;\n        x2 = x1;\n        x1 = m;\n        y2 = y1;\n        y1 = n;\n        d = r;\n    }\n    long x = p * x2;\n    long y = p * y2;\n    return std::make_optional(x);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123400,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp1ie24a3e.cpp:2:\n/tmp/tmp1ie24a3e.cpp: In function \u2018int main()\u2019:\n/tmp/tmp1ie24a3e.cpp:60:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   60 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmp1ie24a3e.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp1ie24a3e.cpp:2:\n/tmp/tmp1ie24a3e.cpp:60:60: note:   \u2018std::optional<long int>\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   60 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |                                                            ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n     ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n  if (a == 0 && b == 0) {\n    if (n == 0) {\n      return std::make_optional(0);\n    } else {\n      return std::nullopt;\n    }\n  }\n  if (a == 0) {\n    if (n % b == 0) {\n      return std::make_optional(n / b);\n    } else {\n      return std::nullopt;\n    }\n  }\n  if (b == 0) {\n    if (n % a == 0) {\n      return std::make_optional(n / a);\n    } else {\n      return std::nullopt;\n    }\n  }\n  long g = std::gcd(a, b);\n  if (n % g != 0) {\n    return std::nullopt;\n  }\n  long x = 0, y = 0;\n  long d = std::gcd(a, b, x, y);\n  x *= n / d;\n  y *= n / d;\n  return std::make_optional(x);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123400,
      "stdout": "",
      "stderr": "/tmp/tmp866ixd_v.cpp: In function \u2018std::optional<long int> find_solution(long int, long int, long int)\u2019:\n/tmp/tmp866ixd_v.cpp:31:31: error: no matching function for call to \u2018gcd(long int&, long int&, long int&, long int&)\u2019\n   31 |   long d = std::gcd(a, b, x, y);\n      |                               ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:84,\n                 from /tmp/tmp866ixd_v.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/numeric:131:5: note: candidate: \u2018template<class _Mn, class _Nn> constexpr std::common_type_t<_Mn, _Nn> std::gcd(_Mn, _Nn)\u2019\n  131 |     gcd(_Mn __m, _Nn __n)\n      |     ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/numeric:131:5: note:   template argument deduction/substitution failed:\n/tmp/tmp866ixd_v.cpp:31:31: note:   candidate expects 2 arguments, 4 provided\n   31 |   long d = std::gcd(a, b, x, y);\n      |                               ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp866ixd_v.cpp:2:\n/tmp/tmp866ixd_v.cpp: In function \u2018int main()\u2019:\n/tmp/tmp866ixd_v.cpp:38:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   38 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmp866ixd_v.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018t",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0 && b == 0) {\n        if (n == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (a == 0) {\n        if (n % b == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (b == 0) {\n        if (n % a == 0) {\n            return std::make_optional(n / a);\n        } else {\n            return std::nullopt;\n        }\n    }\n    long d = gcd(a, b);\n    if (n % d != 0) {\n        return std::nullopt;\n    }\n    long x0, y0;\n    extended_gcd(a, b, x0, y0);\n    long x = x0 * n / d;\n    long y = y0 * n / d;\n    return std::make_optional(x);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123400,
      "stdout": "",
      "stderr": "/tmp/tmp6aiw81t0.cpp: In function \u2018std::optional<long int> find_solution(long int, long int, long int)\u2019:\n/tmp/tmp6aiw81t0.cpp:26:14: error: \u2018gcd\u2019 was not declared in this scope; did you mean \u2018std::gcd\u2019?\n   26 |     long d = gcd(a, b);\n      |              ^~~\n      |              std::gcd\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:84,\n                 from /tmp/tmp6aiw81t0.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/numeric:131:5: note: \u2018std::gcd\u2019 declared here\n  131 |     gcd(_Mn __m, _Nn __n)\n      |     ^~~\n/tmp/tmp6aiw81t0.cpp:31:5: error: \u2018extended_gcd\u2019 was not declared in this scope\n   31 |     extended_gcd(a, b, x0, y0);\n      |     ^~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp6aiw81t0.cpp:2:\n/tmp/tmp6aiw81t0.cpp: In function \u2018int main()\u2019:\n/tmp/tmp6aiw81t0.cpp:38:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   38 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmp6aiw81t0.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& _",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0 && b == 0) {\n        if (n == 0) {\n            return std::make_optional(0);\n        }\n        return std::nullopt;\n    }\n    if (a == 0) {\n        if (n % b == 0) {\n            return std::make_optional(0);\n        }\n        return std::nullopt;\n    }\n    if (b == 0) {\n        if (n % a == 0) {\n            return std::make_optional(n / a);\n        }\n        return std::nullopt;\n    }\n    long g = std::__gcd(a, b);\n    if (n % g != 0) {\n        return std::nullopt;\n    }\n    long x = 0, y = 0;\n    std::tie(x, y) = find_solution(b / g, a / g, n / g).value();\n    return std::make_optional(x * (b / g) + y * (a / g));\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123400,
      "stdout": "",
      "stderr": "/tmp/tmp65h70id_.cpp: In function \u2018std::optional<long int> find_solution(long int, long int, long int)\u2019:\n/tmp/tmp65h70id_.cpp:28:63: error: no match for \u2018operator=\u2019 (operand types are \u2018std::tuple<long int&, long int&>\u2019 and \u2018long int\u2019)\n   28 |     std::tie(x, y) = find_solution(b / g, a / g, n / g).value();\n      |                                                               ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/functional:54,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/pstl/glue_algorithm_defs.h:13,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:71,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n                 from /tmp/tmp65h70id_.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/tuple:1205:7: note: candidate: \u2018std::tuple<_T1, _T2>& std::tuple<_T1, _T2>::operator=(typename std::conditional<__assignable<const _T1&, const _T2&>(), const std::tuple<_T1, _T2>&, const std::__nonesuch_no_braces&>::type) [with _T1 = long int&; _T2 = long int&; typename std::conditional<__assignable<const _T1&, const _T2&>(), const std::tuple<_T1, _T2>&, const std::__nonesuch_no_braces&>::type = const std::tuple<long int&, long int&>&]\u2019\n 1205 |       operator=(typename conditional<__assignable<const _T1&, const _T2&>(),\n      |       ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/tuple:1207:45: note:   no known conversion for argument 1 from \u2018long int\u2019 to \u2018std::conditional<true, const std::tuple<long int&, long int&>&, const std::__nonesuch_no_braces&>::type\u2019 {aka \u2018const std::tuple<long int&, long int&>&\u2019}\n 1205 |       operator=(typename conditional<__assignable<const _T1&, const _T2&>(),\n      |                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n 1206 |          const tuple&,\n      |          ~~~~~~~~~~~~~                       \n 1207 |          const __nonesuch_no_braces&>::type __in)",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0 && b == 0) {\n        if (n == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (a == 0) {\n        if (n % b == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (b == 0) {\n        if (n % a == 0) {\n            return std::make_optional(n / a);\n        } else {\n            return std::nullopt;\n        }\n    }\n    long g = std::__gcd(a, b);\n    if (n % g != 0) {\n        return std::nullopt;\n    }\n    long x = 0, y = 0;\n    long d = n / g;\n    std::tie(x, y) = find_solution(b / g, a / g, d);\n    x = -x;\n    return std::make_optional(x);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123295,
      "stdout": "",
      "stderr": "/tmp/tmpz5zice3e.cpp: In function \u2018std::optional<long int> find_solution(long int, long int, long int)\u2019:\n/tmp/tmpz5zice3e.cpp:32:51: error: no match for \u2018operator=\u2019 (operand types are \u2018std::tuple<long int&, long int&>\u2019 and \u2018std::optional<long int>\u2019)\n   32 |     std::tie(x, y) = find_solution(b / g, a / g, d);\n      |                                                   ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/functional:54,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/pstl/glue_algorithm_defs.h:13,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:71,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n                 from /tmp/tmpz5zice3e.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/tuple:1205:7: note: candidate: \u2018std::tuple<_T1, _T2>& std::tuple<_T1, _T2>::operator=(typename std::conditional<__assignable<const _T1&, const _T2&>(), const std::tuple<_T1, _T2>&, const std::__nonesuch_no_braces&>::type) [with _T1 = long int&; _T2 = long int&; typename std::conditional<__assignable<const _T1&, const _T2&>(), const std::tuple<_T1, _T2>&, const std::__nonesuch_no_braces&>::type = const std::tuple<long int&, long int&>&]\u2019\n 1205 |       operator=(typename conditional<__assignable<const _T1&, const _T2&>(),\n      |       ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/tuple:1207:45: note:   no known conversion for argument 1 from \u2018std::optional<long int>\u2019 to \u2018std::conditional<true, const std::tuple<long int&, long int&>&, const std::__nonesuch_no_braces&>::type\u2019 {aka \u2018const std::tuple<long int&, long int&>&\u2019}\n 1205 |       operator=(typename conditional<__assignable<const _T1&, const _T2&>(),\n      |                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n 1206 |          const tuple&,\n      |          ~~~~~~~~~~~~~                       \n 1207 |          const __nonesuch_no_braces&>::type",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (n % gcd(a, b) != 0) {\n        return {};\n    }\n    long x = 0;\n    long y = n / b;\n    while (x * a + y * b != n) {\n        if (x * a + y * b < n) {\n            x++;\n        } else {\n            y--;\n        }\n    }\n    return {x, y};\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123310,
      "stdout": "",
      "stderr": "/tmp/tmp3giwn71b.cpp: In function \u2018std::optional<long int> find_solution(long int, long int, long int)\u2019:\n/tmp/tmp3giwn71b.cpp:5:13: error: \u2018gcd\u2019 was not declared in this scope; did you mean \u2018std::gcd\u2019?\n    5 |     if (n % gcd(a, b) != 0) {\n      |             ^~~\n      |             std::gcd\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:84,\n                 from /tmp/tmp3giwn71b.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/numeric:131:5: note: \u2018std::gcd\u2019 declared here\n  131 |     gcd(_Mn __m, _Nn __n)\n      |     ^~~\n/tmp/tmp3giwn71b.cpp:17:17: error: could not convert \u2018{x, y}\u2019 from \u2018<brace-enclosed initializer list>\u2019 to \u2018std::optional<long int>\u2019\n   17 |     return {x, y};\n      |                 ^\n      |                 |\n      |                 <brace-enclosed initializer list>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp3giwn71b.cpp:2:\n/tmp/tmp3giwn71b.cpp: In function \u2018int main()\u2019:\n/tmp/tmp3giwn71b.cpp:21:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   21 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmp3giwn71b.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_Bi",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0 && b == 0) {\n        return n == 0 ? std::make_optional(std::make_tuple(0, 0)) : std::nullopt;\n    }\n    if (a == 0) {\n        return n % b == 0 ? std::make_optional(std::make_tuple(0, n / b)) : std::nullopt;\n    }\n    if (b == 0) {\n        return n % a == 0 ? std::make_optional(std::make_tuple(n / a, 0)) : std::nullopt;\n    }\n    long g = std::gcd(a, b);\n    if (n % g != 0) {\n        return std::nullopt;\n    }\n    a /= g;\n    b /= g;\n    n /= g;\n    std::optional<long> x = find_solution(b, a % b, n);\n    if (x) {\n        return std::make_optional(std::make_tuple(x->second, x->first - (a / b) * x->second));\n    }\n    return std::nullopt;\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123400,
      "stdout": "",
      "stderr": "/tmp/tmpt51c6gt1.cpp: In function \u2018std::optional<long int> find_solution(long int, long int, long int)\u2019:\n/tmp/tmpt51c6gt1.cpp:6:23: error: could not convert \u2018((n == 0) ? std::make_optional(_Tp&&) [with _Tp = std::tuple<int, int>; typename std::decay<_Tp>::type = std::tuple<int, int>]() : std::optional<std::tuple<int, int> >((std::nullopt, std::nullopt_t())))\u2019 from \u2018optional<std::tuple<int, int>>\u2019 to \u2018optional<long int>\u2019\n    6 |         return n == 0 ? std::make_optional(std::make_tuple(0, 0)) : std::nullopt;\n      |                ~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n      |                       |\n      |                       optional<std::tuple<int, int>>\n/tmp/tmpt51c6gt1.cpp:9:27: error: could not convert \u2018(((n % b) == 0) ? std::make_optional(_Tp&&) [with _Tp = std::tuple<int, long int>; typename std::decay<_Tp>::type = std::tuple<int, long int>]() : std::optional<std::tuple<int, long int> >((std::nullopt, std::nullopt_t())))\u2019 from \u2018optional<std::tuple<int, long int>>\u2019 to \u2018optional<long int>\u2019\n    9 |         return n % b == 0 ? std::make_optional(std::make_tuple(0, n / b)) : std::nullopt;\n      |                ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n      |                           |\n      |                           optional<std::tuple<int, long int>>\n/tmp/tmpt51c6gt1.cpp:12:27: error: could not convert \u2018(((n % a) == 0) ? std::make_optional(_Tp&&) [with _Tp = std::tuple<long int, int>; typename std::decay<_Tp>::type = std::tuple<long int, int>]() : std::optional<std::tuple<long int, int> >((std::nullopt, std::nullopt_t())))\u2019 from \u2018optional<std::tuple<long int, int>>\u2019 to \u2018optional<long int>\u2019\n   12 |         return n % a == 0 ? std::make_optional(std::make_tuple(n / a, 0)) : std::nullopt;\n      |                ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n      |                           |\n      |                           optional<std::tuple<long int, int>>\n/tmp/tmpt51c6gt1.cp",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (n % std::gcd(a, b) != 0) {\n        return std::nullopt;\n    }\n    long x = 0, y = 0;\n    long d = std::gcd(a, b);\n    x = n / d * (b / d);\n    y = n / d * (a / d);\n    return std::make_pair(x, y);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123400,
      "stdout": "",
      "stderr": "/tmp/tmpofqgm6f3.cpp: In function \u2018std::optional<long int> find_solution(long int, long int, long int)\u2019:\n/tmp/tmpofqgm6f3.cpp:12:26: error: could not convert \u2018std::make_pair<long int&, long int&>(x, y)\u2019 from \u2018std::pair<long int, long int>\u2019 to \u2018std::optional<long int>\u2019\n   12 |     return std::make_pair(x, y);\n      |            ~~~~~~~~~~~~~~^~~~~~\n      |                          |\n      |                          std::pair<long int, long int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpofqgm6f3.cpp:2:\n/tmp/tmpofqgm6f3.cpp: In function \u2018int main()\u2019:\n/tmp/tmpofqgm6f3.cpp:16:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   16 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpofqgm6f3.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylak",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (n % gcd(a, b) != 0) {\n        return std::nullopt;\n    } else {\n        long x = 0;\n        long y = 0;\n        long d = gcd(a, b);\n        x = n / d * (b / d);\n        y = n / d * (a / d);\n        return std::make_tuple(x, y);\n    }\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123400,
      "stdout": "",
      "stderr": "/tmp/tmp6v1jrz01.cpp: In function \u2018std::optional<long int> find_solution(long int, long int, long int)\u2019:\n/tmp/tmp6v1jrz01.cpp:5:13: error: \u2018gcd\u2019 was not declared in this scope; did you mean \u2018std::gcd\u2019?\n    5 |     if (n % gcd(a, b) != 0) {\n      |             ^~~\n      |             std::gcd\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:84,\n                 from /tmp/tmp6v1jrz01.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/numeric:131:5: note: \u2018std::gcd\u2019 declared here\n  131 |     gcd(_Mn __m, _Nn __n)\n      |     ^~~\n/tmp/tmp6v1jrz01.cpp:13:31: error: could not convert \u2018std::make_tuple(_Elements&& ...) [with _Elements = {long int&, long int&}](y)\u2019 from \u2018std::tuple<long int, long int>\u2019 to \u2018std::optional<long int>\u2019\n   13 |         return std::make_tuple(x, y);\n      |                ~~~~~~~~~~~~~~~^~~~~~\n      |                               |\n      |                               std::tuple<long int, long int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp6v1jrz01.cpp:2:\n/tmp/tmp6v1jrz01.cpp: In function \u2018int main()\u2019:\n/tmp/tmp6v1jrz01.cpp:18:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   18 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmp6v1jrz01.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0 && b == 0) {\n        if (n == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (a == 0) {\n        if (n % b == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (b == 0) {\n        if (n % a == 0) {\n            return std::make_optional(n / a);\n        } else {\n            return std::nullopt;\n        }\n    }\n    long d = std::__gcd(a, b);\n    if (n % d != 0) {\n        return std::nullopt;\n    }\n    long x0 = 0, y0 = 0;\n    std::tie(x0, y0) = find_solution(b / d, a / d, n / d).value();\n    return std::make_optional(std::make_pair(y0, x0 - y0 * (a / b)));\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123400,
      "stdout": "",
      "stderr": "/tmp/tmpnh2s90t2.cpp: In function \u2018std::optional<long int> find_solution(long int, long int, long int)\u2019:\n/tmp/tmpnh2s90t2.cpp:31:65: error: no match for \u2018operator=\u2019 (operand types are \u2018std::tuple<long int&, long int&>\u2019 and \u2018long int\u2019)\n   31 |     std::tie(x0, y0) = find_solution(b / d, a / d, n / d).value();\n      |                                                                 ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/functional:54,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/pstl/glue_algorithm_defs.h:13,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:71,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n                 from /tmp/tmpnh2s90t2.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/tuple:1205:7: note: candidate: \u2018std::tuple<_T1, _T2>& std::tuple<_T1, _T2>::operator=(typename std::conditional<__assignable<const _T1&, const _T2&>(), const std::tuple<_T1, _T2>&, const std::__nonesuch_no_braces&>::type) [with _T1 = long int&; _T2 = long int&; typename std::conditional<__assignable<const _T1&, const _T2&>(), const std::tuple<_T1, _T2>&, const std::__nonesuch_no_braces&>::type = const std::tuple<long int&, long int&>&]\u2019\n 1205 |       operator=(typename conditional<__assignable<const _T1&, const _T2&>(),\n      |       ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/tuple:1207:45: note:   no known conversion for argument 1 from \u2018long int\u2019 to \u2018std::conditional<true, const std::tuple<long int&, long int&>&, const std::__nonesuch_no_braces&>::type\u2019 {aka \u2018const std::tuple<long int&, long int&>&\u2019}\n 1205 |       operator=(typename conditional<__assignable<const _T1&, const _T2&>(),\n      |                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n 1206 |          const tuple&,\n      |          ~~~~~~~~~~~~~                       \n 1207 |          const __nonesuch_no_braces&>::type _",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0 && b == 0) {\n        if (n == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (a == 0) {\n        if (n % b == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (b == 0) {\n        if (n % a == 0) {\n            return std::make_optional(n / a);\n        } else {\n            return std::nullopt;\n        }\n    }\n    long d = std::__gcd(a, b);\n    if (n % d != 0) {\n        return std::nullopt;\n    }\n    long x = 0;\n    long y = n / d;\n    long a_ = a / d;\n    long b_ = b / d;\n    long q = y / b_;\n    y -= q * b_;\n    x += q * a_;\n    std::swap(a_, b_);\n    std::swap(x, y);\n    q = x / a_;\n    x -= q * a_;\n    y += q * b_;\n    return std::make_optional(x);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123400,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp84cfe34o.cpp:2:\n/tmp/tmp84cfe34o.cpp: In function \u2018int main()\u2019:\n/tmp/tmp84cfe34o.cpp:46:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   46 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmp84cfe34o.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp84cfe34o.cpp:2:\n/tmp/tmp84cfe34o.cpp:46:60: note:   \u2018std::optional<long int>\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   46 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |                                                            ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n     ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0) {\n        if (n == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    long x = n / a;\n    long y = (n - a * x) / b;\n    if (a * x + b * y == n) {\n        return std::make_optional(x);\n    } else {\n        return std::nullopt;\n    }\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123249,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpgz4r64uz.cpp:2:\n/tmp/tmpgz4r64uz.cpp: In function \u2018int main()\u2019:\n/tmp/tmpgz4r64uz.cpp:22:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   22 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpgz4r64uz.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpgz4r64uz.cpp:2:\n/tmp/tmpgz4r64uz.cpp:22:60: note:   \u2018std::optional<long int>\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   22 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |                                                            ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n     ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0 && b == 0) {\n        if (n == 0) {\n            return {0, 0};\n        } else {\n            return {};\n        }\n    }\n    if (a == 0) {\n        if (n % b == 0) {\n            return {0, n / b};\n        } else {\n            return {};\n        }\n    }\n    if (b == 0) {\n        if (n % a == 0) {\n            return {n / a, 0};\n        } else {\n            return {};\n        }\n    }\n    long g = std::gcd(a, b);\n    if (n % g != 0) {\n        return {};\n    }\n    a /= g;\n    b /= g;\n    n /= g;\n    long x, y;\n    std::tie(x, y) = find_solution(b, a % b, n).value();\n    return {y, x - y * (a / b)};\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123340,
      "stdout": "",
      "stderr": "/tmp/tmpzx63x7wa.cpp: In function \u2018std::optional<long int> find_solution(long int, long int, long int)\u2019:\n/tmp/tmpzx63x7wa.cpp:7:25: error: could not convert \u2018{0, 0}\u2019 from \u2018<brace-enclosed initializer list>\u2019 to \u2018std::optional<long int>\u2019\n    7 |             return {0, 0};\n      |                         ^\n      |                         |\n      |                         <brace-enclosed initializer list>\n/tmp/tmpzx63x7wa.cpp:14:29: error: could not convert \u2018{0, (n / b)}\u2019 from \u2018<brace-enclosed initializer list>\u2019 to \u2018std::optional<long int>\u2019\n   14 |             return {0, n / b};\n      |                             ^\n      |                             |\n      |                             <brace-enclosed initializer list>\n/tmp/tmpzx63x7wa.cpp:21:29: error: could not convert \u2018{(n / a), 0}\u2019 from \u2018<brace-enclosed initializer list>\u2019 to \u2018std::optional<long int>\u2019\n   21 |             return {n / a, 0};\n      |                             ^\n      |                             |\n      |                             <brace-enclosed initializer list>\n/tmp/tmpzx63x7wa.cpp:34:55: error: no match for \u2018operator=\u2019 (operand types are \u2018std::tuple<long int&, long int&>\u2019 and \u2018long int\u2019)\n   34 |     std::tie(x, y) = find_solution(b, a % b, n).value();\n      |                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/functional:54,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/pstl/glue_algorithm_defs.h:13,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:71,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n                 from /tmp/tmpzx63x7wa.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/tuple:1205:7: note: candidate: \u2018std::tuple<_T1, _T2>& std::tuple<_T1, _T2>::operator=(typename std::conditional<__assignable<const _T1&, const _T2&>(), const std::tuple<_T1, _T2>&, const std::",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0 && b == 0) {\n        if (n == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (a == 0) {\n        if (n % b == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (b == 0) {\n        if (n % a == 0) {\n            return std::make_optional(n / a);\n        } else {\n            return std::nullopt;\n        }\n    }\n    long g = std::__gcd(a, b);\n    if (n % g != 0) {\n        return std::nullopt;\n    }\n    a /= g;\n    b /= g;\n    n /= g;\n    long x = 0, y = 0;\n    long d = 1;\n    while (d <= n) {\n        d *= 2;\n    }\n    d /= 2;\n    while (d > 0) {\n        if (x + d <= n) {\n            x += d;\n            y += d * a / b;\n        }\n        d /= 2;\n    }\n    return std::make_optional(x);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123400,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpbbu7b142.cpp:2:\n/tmp/tmpbbu7b142.cpp: In function \u2018int main()\u2019:\n/tmp/tmpbbu7b142.cpp:50:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   50 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpbbu7b142.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpbbu7b142.cpp:2:\n/tmp/tmpbbu7b142.cpp:50:60: note:   \u2018std::optional<long int>\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   50 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |                                                            ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n     ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0 && b == 0) {\n        if (n == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (a == 0) {\n        if (n % b == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (b == 0) {\n        if (n % a == 0) {\n            return std::make_optional(n / a);\n        } else {\n            return std::nullopt;\n        }\n    }\n    long gcd = std::__gcd(a, b);\n    if (n % gcd != 0) {\n        return std::nullopt;\n    }\n    long x = 0;\n    long y = n / b;\n    while (a * x + b * y != n) {\n        if (a * x + b * y < n) {\n            x += 1;\n        } else {\n            y -= 1;\n        }\n    }\n    return std::make_optional(x);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123385,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpdrtdbsn8.cpp:2:\n/tmp/tmpdrtdbsn8.cpp: In function \u2018int main()\u2019:\n/tmp/tmpdrtdbsn8.cpp:43:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   43 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpdrtdbsn8.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpdrtdbsn8.cpp:2:\n/tmp/tmpdrtdbsn8.cpp:43:60: note:   \u2018std::optional<long int>\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   43 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |                                                            ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n     ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0) {\n        if (n % b == 0) {\n            return std::make_optional(0);\n        }\n        return std::nullopt;\n    }\n    auto x = find_solution(b % a, a, n);\n    if (!x) {\n        return std::nullopt;\n    }\n    return std::make_optional(b / a * x.value() - b / a * (b / a) * x.value() + x.value());\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123400,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpfaihkug0.cpp:2:\n/tmp/tmpfaihkug0.cpp: In function \u2018int main()\u2019:\n/tmp/tmpfaihkug0.cpp:19:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   19 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpfaihkug0.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpfaihkug0.cpp:2:\n/tmp/tmpfaihkug0.cpp:19:60: note:   \u2018std::optional<long int>\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   19 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |                                                            ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n     ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0 && b == 0) {\n        if (n == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (a == 0) {\n        if (n % b == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (b == 0) {\n        if (n % a == 0) {\n            return std::make_optional(n / a);\n        } else {\n            return std::nullopt;\n        }\n    }\n    long g = std::__gcd(a, b);\n    if (n % g != 0) {\n        return std::nullopt;\n    }\n    long x = 0, y = n / g;\n    while (y >= 0) {\n        if ((n - a * x) % b == 0) {\n            return std::make_optional(x);\n        }\n        x++;\n        y--;\n    }\n    return std::nullopt;\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123400,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp9_4919d_.cpp:2:\n/tmp/tmp9_4919d_.cpp: In function \u2018int main()\u2019:\n/tmp/tmp9_4919d_.cpp:42:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   42 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmp9_4919d_.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp9_4919d_.cpp:2:\n/tmp/tmp9_4919d_.cpp:42:60: note:   \u2018std::optional<long int>\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   42 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |                                                            ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n     ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    long x = 1, y = 0;\n    long xLast = 0, yLast = 1;\n    long q, r, m, nLast = n;\n    while (a != 0) {\n        q = b / a;\n        r = b % a;\n        m = xLast - q * x;\n        n = yLast - q * y;\n        xLast = x, yLast = y;\n        x = m, y = n;\n        b = a, a = r;\n    }\n    if (b == 1) {\n        return std::make_optional(xLast * (nLast / b));\n    }\n    return std::nullopt;\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123400,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp_2nn9dkf.cpp:2:\n/tmp/tmp_2nn9dkf.cpp: In function \u2018int main()\u2019:\n/tmp/tmp_2nn9dkf.cpp:24:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   24 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmp_2nn9dkf.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp_2nn9dkf.cpp:2:\n/tmp/tmp_2nn9dkf.cpp:24:60: note:   \u2018std::optional<long int>\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   24 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |                                                            ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n     ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0 && b == 0) {\n        if (n == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (a == 0) {\n        if (n % b == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (b == 0) {\n        if (n % a == 0) {\n            return std::make_optional(n / a);\n        } else {\n            return std::nullopt;\n        }\n    }\n    long d = std::__gcd(a, b);\n    if (n % d != 0) {\n        return std::nullopt;\n    }\n    a /= d;\n    b /= d;\n    n /= d;\n    long x, y;\n    std::tie(x, y) = find_solution(b, a % b, n).value();\n    return std::make_optional(y - (a / b) * x);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123385,
      "stdout": "",
      "stderr": "/tmp/tmpvvnm51gv.cpp: In function \u2018std::optional<long int> find_solution(long int, long int, long int)\u2019:\n/tmp/tmpvvnm51gv.cpp:34:55: error: no match for \u2018operator=\u2019 (operand types are \u2018std::tuple<long int&, long int&>\u2019 and \u2018long int\u2019)\n   34 |     std::tie(x, y) = find_solution(b, a % b, n).value();\n      |                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/functional:54,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/pstl/glue_algorithm_defs.h:13,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:71,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n                 from /tmp/tmpvvnm51gv.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/tuple:1205:7: note: candidate: \u2018std::tuple<_T1, _T2>& std::tuple<_T1, _T2>::operator=(typename std::conditional<__assignable<const _T1&, const _T2&>(), const std::tuple<_T1, _T2>&, const std::__nonesuch_no_braces&>::type) [with _T1 = long int&; _T2 = long int&; typename std::conditional<__assignable<const _T1&, const _T2&>(), const std::tuple<_T1, _T2>&, const std::__nonesuch_no_braces&>::type = const std::tuple<long int&, long int&>&]\u2019\n 1205 |       operator=(typename conditional<__assignable<const _T1&, const _T2&>(),\n      |       ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/tuple:1207:45: note:   no known conversion for argument 1 from \u2018long int\u2019 to \u2018std::conditional<true, const std::tuple<long int&, long int&>&, const std::__nonesuch_no_braces&>::type\u2019 {aka \u2018const std::tuple<long int&, long int&>&\u2019}\n 1205 |       operator=(typename conditional<__assignable<const _T1&, const _T2&>(),\n      |                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n 1206 |          const tuple&,\n      |          ~~~~~~~~~~~~~                       \n 1207 |          const __nonesuch_no_braces&>::type __in)\n      |        ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (n % gcd(a, b) != 0) {\n        return std::nullopt;\n    }\n    long x = 0, y = 0;\n    long d = gcd(a, b);\n    x = n / d * b / a;\n    y = (n - a * x) / b;\n    return std::make_tuple(x, y);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1665510514,
      "stdout": "",
      "stderr": "/tmp/tmpmq79w5re.cpp: In function \u2018std::optional<long int> find_solution(long int, long int, long int)\u2019:\n/tmp/tmpmq79w5re.cpp:5:13: error: \u2018gcd\u2019 was not declared in this scope; did you mean \u2018std::gcd\u2019?\n    5 |     if (n % gcd(a, b) != 0) {\n      |             ^~~\n      |             std::gcd\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:84,\n                 from /tmp/tmpmq79w5re.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/numeric:131:5: note: \u2018std::gcd\u2019 declared here\n  131 |     gcd(_Mn __m, _Nn __n)\n      |     ^~~\n/tmp/tmpmq79w5re.cpp:9:14: error: \u2018gcd\u2019 was not declared in this scope; did you mean \u2018std::gcd\u2019?\n    9 |     long d = gcd(a, b);\n      |              ^~~\n      |              std::gcd\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:84,\n                 from /tmp/tmpmq79w5re.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/numeric:131:5: note: \u2018std::gcd\u2019 declared here\n  131 |     gcd(_Mn __m, _Nn __n)\n      |     ^~~\n/tmp/tmpmq79w5re.cpp:12:27: error: could not convert \u2018std::make_tuple(_Elements&& ...) [with _Elements = {long int&, long int&}](y)\u2019 from \u2018std::tuple<long int, long int>\u2019 to \u2018std::optional<long int>\u2019\n   12 |     return std::make_tuple(x, y);\n      |            ~~~~~~~~~~~~~~~^~~~~~\n      |                           |\n      |                           std::tuple<long int, long int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpmq79w5re.cpp:2:\n/tmp/tmpmq79w5re.cpp: In function \u2018int main()\u2019:\n/tmp/tmpmq79w5re.cpp:16:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   16 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0 && b == 0) {\n        if (n == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (a == 0) {\n        if (n % b == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (b == 0) {\n        if (n % a == 0) {\n            return std::make_optional(n / a);\n        } else {\n            return std::nullopt;\n        }\n    }\n    long g = std::gcd(a, b);\n    if (n % g != 0) {\n        return std::nullopt;\n    }\n    long p = n / g;\n    long q = g;\n    long x = 0;\n    long y = 1;\n    long u = 1;\n    long v = 0;\n    while (q != 0) {\n        long r = p % q;\n        long s = p / q;\n        p = q;\n        q = r;\n        long t = x - u * s;\n        x = u;\n        u = t;\n        t = y - v * s;\n        y = v;\n        v = t;\n    }\n    return std::make_optional(x * p);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123400,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpakal_43m.cpp:2:\n/tmp/tmpakal_43m.cpp: In function \u2018int main()\u2019:\n/tmp/tmpakal_43m.cpp:52:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   52 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpakal_43m.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpakal_43m.cpp:2:\n/tmp/tmpakal_43m.cpp:52:60: note:   \u2018std::optional<long int>\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   52 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |                                                            ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n     ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0 && b == 0) {\n        if (n == 0) {\n            return {0, 0};\n        } else {\n            return {};\n        }\n    }\n    if (a == 0) {\n        if (n % b == 0) {\n            return {0, n / b};\n        } else {\n            return {};\n        }\n    }\n    if (b == 0) {\n        if (n % a == 0) {\n            return {n / a, 0};\n        } else {\n            return {};\n        }\n    }\n    long g = std::gcd(a, b);\n    if (n % g != 0) {\n        return {};\n    }\n    long x = 0, y = 0;\n    std::tie(x, y) = find_solution(b / g, a / g, n / g);\n    return {y, x - y * (a / b)};\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123400,
      "stdout": "",
      "stderr": "/tmp/tmpcv78bmm5.cpp: In function \u2018std::optional<long int> find_solution(long int, long int, long int)\u2019:\n/tmp/tmpcv78bmm5.cpp:7:25: error: could not convert \u2018{0, 0}\u2019 from \u2018<brace-enclosed initializer list>\u2019 to \u2018std::optional<long int>\u2019\n    7 |             return {0, 0};\n      |                         ^\n      |                         |\n      |                         <brace-enclosed initializer list>\n/tmp/tmpcv78bmm5.cpp:14:29: error: could not convert \u2018{0, (n / b)}\u2019 from \u2018<brace-enclosed initializer list>\u2019 to \u2018std::optional<long int>\u2019\n   14 |             return {0, n / b};\n      |                             ^\n      |                             |\n      |                             <brace-enclosed initializer list>\n/tmp/tmpcv78bmm5.cpp:21:29: error: could not convert \u2018{(n / a), 0}\u2019 from \u2018<brace-enclosed initializer list>\u2019 to \u2018std::optional<long int>\u2019\n   21 |             return {n / a, 0};\n      |                             ^\n      |                             |\n      |                             <brace-enclosed initializer list>\n/tmp/tmpcv78bmm5.cpp:31:55: error: no match for \u2018operator=\u2019 (operand types are \u2018std::tuple<long int&, long int&>\u2019 and \u2018std::optional<long int>\u2019)\n   31 |     std::tie(x, y) = find_solution(b / g, a / g, n / g);\n      |                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/functional:54,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/pstl/glue_algorithm_defs.h:13,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:71,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n                 from /tmp/tmpcv78bmm5.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/tuple:1205:7: note: candidate: \u2018std::tuple<_T1, _T2>& std::tuple<_T1, _T2>::operator=(typename std::conditional<__assignable<const _T1&, const _T2&>(), const std::tuple<_T1, _T2",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0) {\n        if (n == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    long x = n / a;\n    long r = n % a;\n    if (r == 0) {\n        return std::make_optional(x);\n    } else {\n        auto y = find_solution(b, a % b, r);\n        if (y) {\n            return std::make_optional(x - b / a * y.value());\n        } else {\n            return std::nullopt;\n        }\n    }\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123400,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpqqq0xqxi.cpp:2:\n/tmp/tmpqqq0xqxi.cpp: In function \u2018int main()\u2019:\n/tmp/tmpqqq0xqxi.cpp:27:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   27 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpqqq0xqxi.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpqqq0xqxi.cpp:2:\n/tmp/tmpqqq0xqxi.cpp:27:60: note:   \u2018std::optional<long int>\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   27 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |                                                            ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n     ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0) {\n        if (n == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    long x = n / a;\n    long y = (n - a * x) / b;\n    if (a * x + b * y == n) {\n        return std::make_optional(x);\n    } else {\n        return std::nullopt;\n    }\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123249,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpgz4r64uz.cpp:2:\n/tmp/tmpgz4r64uz.cpp: In function \u2018int main()\u2019:\n/tmp/tmpgz4r64uz.cpp:22:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   22 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpgz4r64uz.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpgz4r64uz.cpp:2:\n/tmp/tmpgz4r64uz.cpp:22:60: note:   \u2018std::optional<long int>\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   22 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |                                                            ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n     ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0 && b == 0) {\n        if (n == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (a == 0) {\n        if (n % b == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (b == 0) {\n        if (n % a == 0) {\n            return std::make_optional(n / a);\n        } else {\n            return std::nullopt;\n        }\n    }\n    long d = std::__gcd(a, b);\n    if (n % d != 0) {\n        return std::nullopt;\n    }\n    a /= d;\n    b /= d;\n    n /= d;\n    long x0 = 0, y0 = 0;\n    long x1 = 1, y1 = 0;\n    long x2 = 0, y2 = 1;\n    while (b != 0) {\n        long q = a / b;\n        long r = a % b;\n        x0 = x2;\n        y0 = y2;\n        x2 = x1 - q * x2;\n        y2 = y1 - q * y2;\n        a = b;\n        b = r;\n        x1 = x0;\n        y1 = y0;\n    }\n    if (n % a != 0) {\n        return std::nullopt;\n    }\n    return std::make_optional(x1 * (n / a));\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123400,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpieq4je6e.cpp:2:\n/tmp/tmpieq4je6e.cpp: In function \u2018int main()\u2019:\n/tmp/tmpieq4je6e.cpp:55:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   55 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpieq4je6e.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpieq4je6e.cpp:2:\n/tmp/tmpieq4je6e.cpp:55:60: note:   \u2018std::optional<long int>\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   55 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |                                                            ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n     ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0 && b == 0) {\n        if (n == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (a == 0) {\n        if (n % b == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (b == 0) {\n        if (n % a == 0) {\n            return std::make_optional(n / a);\n        } else {\n            return std::nullopt;\n        }\n    }\n    long g = std::__gcd(a, b);\n    if (n % g != 0) {\n        return std::nullopt;\n    }\n    long x = 0, y = 0;\n    long d = std::__gcd(a, b);\n    a /= d;\n    b /= d;\n    n /= d;\n    long x0 = 0, y0 = 1;\n    while (a % b != 0) {\n        long q = a / b;\n        long r = a % b;\n        long x1 = x0 - q * x;\n        long y1 = y0 - q * y;\n        x0 = x;\n        y0 = y;\n        x = x1;\n        y = y1;\n        a = b;\n        b = r;\n    }\n    x = x * n;\n    y = (n - a * x) / b;\n    return std::make_optional(x);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123400,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp6xcr7bkf.cpp:2:\n/tmp/tmp6xcr7bkf.cpp: In function \u2018int main()\u2019:\n/tmp/tmp6xcr7bkf.cpp:54:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   54 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmp6xcr7bkf.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp6xcr7bkf.cpp:2:\n/tmp/tmp6xcr7bkf.cpp:54:60: note:   \u2018std::optional<long int>\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   54 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |                                                            ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n     ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0 && b == 0) {\n        if (n == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (a == 0) {\n        if (n % b == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (b == 0) {\n        if (n % a == 0) {\n            return std::make_optional(n / a);\n        } else {\n            return std::nullopt;\n        }\n    }\n    long gcd = std::gcd(a, b);\n    if (n % gcd != 0) {\n        return std::nullopt;\n    }\n    long a1 = a / gcd;\n    long b1 = b / gcd;\n    long n1 = n / gcd;\n    long x, y;\n    std::tie(x, y) = find_solution(b1, a1 % b1, n1).value();\n    return std::make_optional(y - (a1 / b1) * x);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123400,
      "stdout": "",
      "stderr": "/tmp/tmpeyaqoka2.cpp: In function \u2018std::optional<long int> find_solution(long int, long int, long int)\u2019:\n/tmp/tmpeyaqoka2.cpp:34:59: error: no match for \u2018operator=\u2019 (operand types are \u2018std::tuple<long int&, long int&>\u2019 and \u2018long int\u2019)\n   34 |     std::tie(x, y) = find_solution(b1, a1 % b1, n1).value();\n      |                                                           ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/functional:54,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/pstl/glue_algorithm_defs.h:13,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:71,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n                 from /tmp/tmpeyaqoka2.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/tuple:1205:7: note: candidate: \u2018std::tuple<_T1, _T2>& std::tuple<_T1, _T2>::operator=(typename std::conditional<__assignable<const _T1&, const _T2&>(), const std::tuple<_T1, _T2>&, const std::__nonesuch_no_braces&>::type) [with _T1 = long int&; _T2 = long int&; typename std::conditional<__assignable<const _T1&, const _T2&>(), const std::tuple<_T1, _T2>&, const std::__nonesuch_no_braces&>::type = const std::tuple<long int&, long int&>&]\u2019\n 1205 |       operator=(typename conditional<__assignable<const _T1&, const _T2&>(),\n      |       ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/tuple:1207:45: note:   no known conversion for argument 1 from \u2018long int\u2019 to \u2018std::conditional<true, const std::tuple<long int&, long int&>&, const std::__nonesuch_no_braces&>::type\u2019 {aka \u2018const std::tuple<long int&, long int&>&\u2019}\n 1205 |       operator=(typename conditional<__assignable<const _T1&, const _T2&>(),\n      |                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n 1206 |          const tuple&,\n      |          ~~~~~~~~~~~~~                       \n 1207 |          const __nonesuch_no_braces&>::type __in)\n      |",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0) {\n        return n == b ? std::optional<long>{0} : std::nullopt;\n    }\n    auto result = find_solution(b % a, a, n);\n    if (!result) {\n        return std::nullopt;\n    }\n    return (b / a) * result.value() - (b / a) * (b % a) + b;\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123402,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmphnhc2b3t.cpp:2:\n/tmp/tmphnhc2b3t.cpp: In function \u2018int main()\u2019:\n/tmp/tmphnhc2b3t.cpp:16:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   16 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmphnhc2b3t.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmphnhc2b3t.cpp:2:\n/tmp/tmphnhc2b3t.cpp:16:60: note:   \u2018std::optional<long int>\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   16 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |                                                            ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n     ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (n % std::gcd(a, b) != 0) {\n        return std::nullopt;\n    }\n    long x = 0, y = 0;\n    long d = std::gcd(a, b);\n    x = n / d * (b / d);\n    y = n / d * (a / d);\n    return std::make_optional(x);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123325,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp0dcxduft.cpp:2:\n/tmp/tmp0dcxduft.cpp: In function \u2018int main()\u2019:\n/tmp/tmp0dcxduft.cpp:16:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   16 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmp0dcxduft.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp0dcxduft.cpp:2:\n/tmp/tmp0dcxduft.cpp:16:60: note:   \u2018std::optional<long int>\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   16 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |                                                            ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n     ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0 && b == 0) {\n        if (n == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (a == 0) {\n        if (n % b == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (b == 0) {\n        if (n % a == 0) {\n            return std::make_optional(n / a);\n        } else {\n            return std::nullopt;\n        }\n    }\n    long gcd = std::__gcd(a, b);\n    if (n % gcd != 0) {\n        return std::nullopt;\n    }\n    long x = 0;\n    long y = n / b;\n    while (a * x + b * y != n) {\n        if (a * x + b * y < n) {\n            x += b / gcd;\n        } else {\n            y -= a / gcd;\n        }\n    }\n    return std::make_optional(x);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123249,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpwp9izskm.cpp:2:\n/tmp/tmpwp9izskm.cpp: In function \u2018int main()\u2019:\n/tmp/tmpwp9izskm.cpp:43:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   43 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpwp9izskm.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpwp9izskm.cpp:2:\n/tmp/tmpwp9izskm.cpp:43:60: note:   \u2018std::optional<long int>\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   43 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |                                                            ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n     ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0 && b == 0) {\n        if (n == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (a == 0) {\n        if (n % b == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (b == 0) {\n        if (n % a == 0) {\n            return std::make_optional(n / a);\n        } else {\n            return std::nullopt;\n        }\n    }\n    long g = std::__gcd(a, b);\n    if (n % g != 0) {\n        return std::nullopt;\n    }\n    a /= g;\n    b /= g;\n    n /= g;\n    long x = 0, y = 0;\n    std::tie(x, y) = find_solution(b, a % b, n).value();\n    return std::make_optional(y - (a / b) * x);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123402,
      "stdout": "",
      "stderr": "/tmp/tmpv31ymz7f.cpp: In function \u2018std::optional<long int> find_solution(long int, long int, long int)\u2019:\n/tmp/tmpv31ymz7f.cpp:34:55: error: no match for \u2018operator=\u2019 (operand types are \u2018std::tuple<long int&, long int&>\u2019 and \u2018long int\u2019)\n   34 |     std::tie(x, y) = find_solution(b, a % b, n).value();\n      |                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/functional:54,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/pstl/glue_algorithm_defs.h:13,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:71,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n                 from /tmp/tmpv31ymz7f.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/tuple:1205:7: note: candidate: \u2018std::tuple<_T1, _T2>& std::tuple<_T1, _T2>::operator=(typename std::conditional<__assignable<const _T1&, const _T2&>(), const std::tuple<_T1, _T2>&, const std::__nonesuch_no_braces&>::type) [with _T1 = long int&; _T2 = long int&; typename std::conditional<__assignable<const _T1&, const _T2&>(), const std::tuple<_T1, _T2>&, const std::__nonesuch_no_braces&>::type = const std::tuple<long int&, long int&>&]\u2019\n 1205 |       operator=(typename conditional<__assignable<const _T1&, const _T2&>(),\n      |       ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/tuple:1207:45: note:   no known conversion for argument 1 from \u2018long int\u2019 to \u2018std::conditional<true, const std::tuple<long int&, long int&>&, const std::__nonesuch_no_braces&>::type\u2019 {aka \u2018const std::tuple<long int&, long int&>&\u2019}\n 1205 |       operator=(typename conditional<__assignable<const _T1&, const _T2&>(),\n      |                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n 1206 |          const tuple&,\n      |          ~~~~~~~~~~~~~                       \n 1207 |          const __nonesuch_no_braces&>::type __in)\n      |        ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0 && b == 0) {\n        if (n == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (a == 0) {\n        if (n % b == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (b == 0) {\n        if (n % a == 0) {\n            return std::make_optional(n / a);\n        } else {\n            return std::nullopt;\n        }\n    }\n    long g = std::__gcd(a, b);\n    if (n % g != 0) {\n        return std::nullopt;\n    }\n    long x = 0, y = 0;\n    std::tie(x, y) = find_solution(b / g, a / g, n / g);\n    return std::make_optional(x * (b / g) + y * (a / g));\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123402,
      "stdout": "",
      "stderr": "/tmp/tmpykxxyabu.cpp: In function \u2018std::optional<long int> find_solution(long int, long int, long int)\u2019:\n/tmp/tmpykxxyabu.cpp:31:55: error: no match for \u2018operator=\u2019 (operand types are \u2018std::tuple<long int&, long int&>\u2019 and \u2018std::optional<long int>\u2019)\n   31 |     std::tie(x, y) = find_solution(b / g, a / g, n / g);\n      |                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/functional:54,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/pstl/glue_algorithm_defs.h:13,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:71,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n                 from /tmp/tmpykxxyabu.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/tuple:1205:7: note: candidate: \u2018std::tuple<_T1, _T2>& std::tuple<_T1, _T2>::operator=(typename std::conditional<__assignable<const _T1&, const _T2&>(), const std::tuple<_T1, _T2>&, const std::__nonesuch_no_braces&>::type) [with _T1 = long int&; _T2 = long int&; typename std::conditional<__assignable<const _T1&, const _T2&>(), const std::tuple<_T1, _T2>&, const std::__nonesuch_no_braces&>::type = const std::tuple<long int&, long int&>&]\u2019\n 1205 |       operator=(typename conditional<__assignable<const _T1&, const _T2&>(),\n      |       ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/tuple:1207:45: note:   no known conversion for argument 1 from \u2018std::optional<long int>\u2019 to \u2018std::conditional<true, const std::tuple<long int&, long int&>&, const std::__nonesuch_no_braces&>::type\u2019 {aka \u2018const std::tuple<long int&, long int&>&\u2019}\n 1205 |       operator=(typename conditional<__assignable<const _T1&, const _T2&>(),\n      |                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n 1206 |          const tuple&,\n      |          ~~~~~~~~~~~~~                       \n 1207 |          const __nonesuch_no_braces",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0 && b == 0) {\n        if (n == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (a == 0) {\n        if (n % b == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (b == 0) {\n        if (n % a == 0) {\n            return std::make_optional(n / a);\n        } else {\n            return std::nullopt;\n        }\n    }\n    long d = gcd(a, b);\n    if (n % d != 0) {\n        return std::nullopt;\n    }\n    long x0 = 0, y0 = 0;\n    long x1 = 1, y1 = 0;\n    long x2 = 0, y2 = 1;\n    long q = 0;\n    while (b != 0) {\n        q = a / b;\n        long r = a - q * b;\n        x0 = x2;\n        y0 = y2;\n        x2 = x1 - q * x2;\n        y2 = y1 - q * y2;\n        a = b;\n        b = r;\n    }\n    long x = x0 * (n / d);\n    long y = y0 * (n / d);\n    return std::make_optional(x);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123415,
      "stdout": "",
      "stderr": "/tmp/tmpd4i2hfa3.cpp: In function \u2018std::optional<long int> find_solution(long int, long int, long int)\u2019:\n/tmp/tmpd4i2hfa3.cpp:26:14: error: \u2018gcd\u2019 was not declared in this scope; did you mean \u2018std::gcd\u2019?\n   26 |     long d = gcd(a, b);\n      |              ^~~\n      |              std::gcd\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:84,\n                 from /tmp/tmpd4i2hfa3.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/numeric:131:5: note: \u2018std::gcd\u2019 declared here\n  131 |     gcd(_Mn __m, _Nn __n)\n      |     ^~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpd4i2hfa3.cpp:2:\n/tmp/tmpd4i2hfa3.cpp: In function \u2018int main()\u2019:\n/tmp/tmpd4i2hfa3.cpp:50:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   50 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpd4i2hfa3.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0 && b == 0) {\n        return n == 0 ? std::make_optional(0) : std::nullopt;\n    }\n    if (a == 0) {\n        return n % b == 0 ? std::make_optional(n / b) : std::nullopt;\n    }\n    if (b == 0) {\n        return n % a == 0 ? std::make_optional(n / a) : std::nullopt;\n    }\n    long d = std::__gcd(a, b);\n    if (n % d != 0) {\n        return std::nullopt;\n    }\n    long x0, y0;\n    std::tie(x0, y0) = find_solution(b / d, a / d, n / d).value();\n    return std::make_optional(std::make_tuple(y0, x0 - y0 * (a / b)));\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123415,
      "stdout": "",
      "stderr": "/tmp/tmpz3msd5ze.cpp: In function \u2018std::optional<long int> find_solution(long int, long int, long int)\u2019:\n/tmp/tmpz3msd5ze.cpp:19:65: error: no match for \u2018operator=\u2019 (operand types are \u2018std::tuple<long int&, long int&>\u2019 and \u2018long int\u2019)\n   19 |     std::tie(x0, y0) = find_solution(b / d, a / d, n / d).value();\n      |                                                                 ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/functional:54,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/pstl/glue_algorithm_defs.h:13,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:71,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n                 from /tmp/tmpz3msd5ze.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/tuple:1205:7: note: candidate: \u2018std::tuple<_T1, _T2>& std::tuple<_T1, _T2>::operator=(typename std::conditional<__assignable<const _T1&, const _T2&>(), const std::tuple<_T1, _T2>&, const std::__nonesuch_no_braces&>::type) [with _T1 = long int&; _T2 = long int&; typename std::conditional<__assignable<const _T1&, const _T2&>(), const std::tuple<_T1, _T2>&, const std::__nonesuch_no_braces&>::type = const std::tuple<long int&, long int&>&]\u2019\n 1205 |       operator=(typename conditional<__assignable<const _T1&, const _T2&>(),\n      |       ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/tuple:1207:45: note:   no known conversion for argument 1 from \u2018long int\u2019 to \u2018std::conditional<true, const std::tuple<long int&, long int&>&, const std::__nonesuch_no_braces&>::type\u2019 {aka \u2018const std::tuple<long int&, long int&>&\u2019}\n 1205 |       operator=(typename conditional<__assignable<const _T1&, const _T2&>(),\n      |                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n 1206 |          const tuple&,\n      |          ~~~~~~~~~~~~~                       \n 1207 |          const __nonesuch_no_braces&>::type _",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0 && b == 0) {\n        if (n == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (a == 0) {\n        if (n % b == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (b == 0) {\n        if (n % a == 0) {\n            return std::make_optional(n / a);\n        } else {\n            return std::nullopt;\n        }\n    }\n    long g = std::__gcd(a, b);\n    if (n % g != 0) {\n        return std::nullopt;\n    }\n    long x = 0;\n    long y = n / b;\n    while (y * a <= n) {\n        if ((n - y * a) % b == 0) {\n            return std::make_optional(y);\n        }\n        ++y;\n    }\n    return std::nullopt;\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123415,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmppe8q39da.cpp:2:\n/tmp/tmppe8q39da.cpp: In function \u2018int main()\u2019:\n/tmp/tmppe8q39da.cpp:42:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   42 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmppe8q39da.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmppe8q39da.cpp:2:\n/tmp/tmppe8q39da.cpp:42:60: note:   \u2018std::optional<long int>\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   42 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |                                                            ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n     ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0 && b == 0) {\n        return {};\n    }\n    if (a == 0) {\n        return n / b;\n    }\n    if (b == 0) {\n        return n / a;\n    }\n    long d = std::__gcd(a, b);\n    if (n % d != 0) {\n        return {};\n    }\n    a /= d;\n    b /= d;\n    n /= d;\n    long x0 = 0, y0 = 1;\n    long x1 = 1, y1 = 0;\n    while (a != 0) {\n        long q = b / a;\n        long r = b % a;\n        long x2 = x0 - q * x1;\n        long y2 = y0 - q * y1;\n        x0 = x1;\n        y0 = y1;\n        x1 = x2;\n        y1 = y2;\n        b = a;\n        a = r;\n    }\n    if (n % b != 0) {\n        return {};\n    }\n    return {x0 * (n / b)};\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123415,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp0th79wux.cpp:2:\n/tmp/tmp0th79wux.cpp: In function \u2018int main()\u2019:\n/tmp/tmp0th79wux.cpp:42:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   42 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmp0th79wux.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp0th79wux.cpp:2:\n/tmp/tmp0th79wux.cpp:42:60: note:   \u2018std::optional<long int>\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   42 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |                                                            ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n     ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0 && b == 0) {\n        if (n == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (a == 0) {\n        if (n % b == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (b == 0) {\n        if (n % a == 0) {\n            return std::make_optional(n / a);\n        } else {\n            return std::nullopt;\n        }\n    }\n    long g = std::__gcd(a, b);\n    if (n % g != 0) {\n        return std::nullopt;\n    }\n    long x = 0, y = 0;\n    long d = n / g;\n    std::tie(x, y) = find_solution(b / g, a / g, d);\n    x = -x;\n    return std::make_optional(x);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123295,
      "stdout": "",
      "stderr": "/tmp/tmpz5zice3e.cpp: In function \u2018std::optional<long int> find_solution(long int, long int, long int)\u2019:\n/tmp/tmpz5zice3e.cpp:32:51: error: no match for \u2018operator=\u2019 (operand types are \u2018std::tuple<long int&, long int&>\u2019 and \u2018std::optional<long int>\u2019)\n   32 |     std::tie(x, y) = find_solution(b / g, a / g, d);\n      |                                                   ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/functional:54,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/pstl/glue_algorithm_defs.h:13,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:71,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n                 from /tmp/tmpz5zice3e.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/tuple:1205:7: note: candidate: \u2018std::tuple<_T1, _T2>& std::tuple<_T1, _T2>::operator=(typename std::conditional<__assignable<const _T1&, const _T2&>(), const std::tuple<_T1, _T2>&, const std::__nonesuch_no_braces&>::type) [with _T1 = long int&; _T2 = long int&; typename std::conditional<__assignable<const _T1&, const _T2&>(), const std::tuple<_T1, _T2>&, const std::__nonesuch_no_braces&>::type = const std::tuple<long int&, long int&>&]\u2019\n 1205 |       operator=(typename conditional<__assignable<const _T1&, const _T2&>(),\n      |       ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/tuple:1207:45: note:   no known conversion for argument 1 from \u2018std::optional<long int>\u2019 to \u2018std::conditional<true, const std::tuple<long int&, long int&>&, const std::__nonesuch_no_braces&>::type\u2019 {aka \u2018const std::tuple<long int&, long int&>&\u2019}\n 1205 |       operator=(typename conditional<__assignable<const _T1&, const _T2&>(),\n      |                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n 1206 |          const tuple&,\n      |          ~~~~~~~~~~~~~                       \n 1207 |          const __nonesuch_no_braces&>::type",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0 && b == 0) {\n        if (n == 0) {\n            return {0, 0};\n        } else {\n            return {};\n        }\n    }\n    if (a == 0) {\n        if (n % b == 0) {\n            return {0, n / b};\n        } else {\n            return {};\n        }\n    }\n    if (b == 0) {\n        if (n % a == 0) {\n            return {n / a, 0};\n        } else {\n            return {};\n        }\n    }\n    long d = std::__gcd(a, b);\n    if (n % d != 0) {\n        return {};\n    }\n    a /= d;\n    b /= d;\n    n /= d;\n    long x, y;\n    std::tie(x, y) = find_solution(b, a % b, n).value();\n    return {y, x - y * (a / b)};\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123415,
      "stdout": "",
      "stderr": "/tmp/tmplc7nsksl.cpp: In function \u2018std::optional<long int> find_solution(long int, long int, long int)\u2019:\n/tmp/tmplc7nsksl.cpp:7:25: error: could not convert \u2018{0, 0}\u2019 from \u2018<brace-enclosed initializer list>\u2019 to \u2018std::optional<long int>\u2019\n    7 |             return {0, 0};\n      |                         ^\n      |                         |\n      |                         <brace-enclosed initializer list>\n/tmp/tmplc7nsksl.cpp:14:29: error: could not convert \u2018{0, (n / b)}\u2019 from \u2018<brace-enclosed initializer list>\u2019 to \u2018std::optional<long int>\u2019\n   14 |             return {0, n / b};\n      |                             ^\n      |                             |\n      |                             <brace-enclosed initializer list>\n/tmp/tmplc7nsksl.cpp:21:29: error: could not convert \u2018{(n / a), 0}\u2019 from \u2018<brace-enclosed initializer list>\u2019 to \u2018std::optional<long int>\u2019\n   21 |             return {n / a, 0};\n      |                             ^\n      |                             |\n      |                             <brace-enclosed initializer list>\n/tmp/tmplc7nsksl.cpp:34:55: error: no match for \u2018operator=\u2019 (operand types are \u2018std::tuple<long int&, long int&>\u2019 and \u2018long int\u2019)\n   34 |     std::tie(x, y) = find_solution(b, a % b, n).value();\n      |                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/functional:54,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/pstl/glue_algorithm_defs.h:13,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:71,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n                 from /tmp/tmplc7nsksl.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/tuple:1205:7: note: candidate: \u2018std::tuple<_T1, _T2>& std::tuple<_T1, _T2>::operator=(typename std::conditional<__assignable<const _T1&, const _T2&>(), const std::tuple<_T1, _T2>&, const std::",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0) {\n        if (n == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    auto x = find_solution(b % a, a, n);\n    if (x) {\n        return std::make_optional(x.value() - (b / a) * x.value());\n    } else {\n        return std::nullopt;\n    }\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123415,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp4o1tqbk6.cpp:2:\n/tmp/tmp4o1tqbk6.cpp: In function \u2018int main()\u2019:\n/tmp/tmp4o1tqbk6.cpp:21:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   21 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmp4o1tqbk6.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp4o1tqbk6.cpp:2:\n/tmp/tmp4o1tqbk6.cpp:21:60: note:   \u2018std::optional<long int>\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   21 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |                                                            ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n     ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (n % std::gcd(a, b) != 0) {\n        return std::nullopt;\n    }\n    long x = 0, y = 0;\n    long d = std::gcd(a, b);\n    x = n / d * (b / d);\n    y = n / d * (a / d);\n    return std::make_optional(x);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123325,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp0dcxduft.cpp:2:\n/tmp/tmp0dcxduft.cpp: In function \u2018int main()\u2019:\n/tmp/tmp0dcxduft.cpp:16:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   16 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmp0dcxduft.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp0dcxduft.cpp:2:\n/tmp/tmp0dcxduft.cpp:16:60: note:   \u2018std::optional<long int>\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   16 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |                                                            ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n     ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (n % gcd(a, b) != 0) {\n        return std::nullopt;\n    }\n    long x = 0, y = 0;\n    long d = gcd(a, b);\n    x = n / d * b / a;\n    y = n / d - x * a / b;\n    return std::make_tuple(x, y);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123415,
      "stdout": "",
      "stderr": "/tmp/tmpf_5z8n1z.cpp: In function \u2018std::optional<long int> find_solution(long int, long int, long int)\u2019:\n/tmp/tmpf_5z8n1z.cpp:5:13: error: \u2018gcd\u2019 was not declared in this scope; did you mean \u2018std::gcd\u2019?\n    5 |     if (n % gcd(a, b) != 0) {\n      |             ^~~\n      |             std::gcd\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:84,\n                 from /tmp/tmpf_5z8n1z.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/numeric:131:5: note: \u2018std::gcd\u2019 declared here\n  131 |     gcd(_Mn __m, _Nn __n)\n      |     ^~~\n/tmp/tmpf_5z8n1z.cpp:9:14: error: \u2018gcd\u2019 was not declared in this scope; did you mean \u2018std::gcd\u2019?\n    9 |     long d = gcd(a, b);\n      |              ^~~\n      |              std::gcd\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:84,\n                 from /tmp/tmpf_5z8n1z.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/numeric:131:5: note: \u2018std::gcd\u2019 declared here\n  131 |     gcd(_Mn __m, _Nn __n)\n      |     ^~~\n/tmp/tmpf_5z8n1z.cpp:12:27: error: could not convert \u2018std::make_tuple(_Elements&& ...) [with _Elements = {long int&, long int&}](y)\u2019 from \u2018std::tuple<long int, long int>\u2019 to \u2018std::optional<long int>\u2019\n   12 |     return std::make_tuple(x, y);\n      |            ~~~~~~~~~~~~~~~^~~~~~\n      |                           |\n      |                           std::tuple<long int, long int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpf_5z8n1z.cpp:2:\n/tmp/tmpf_5z8n1z.cpp: In function \u2018int main()\u2019:\n/tmp/tmpf_5z8n1z.cpp:16:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   16 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (n % std::gcd(a, b) != 0) {\n        return std::nullopt;\n    }\n    long x = 0, y = 0;\n    long d = std::gcd(a, b);\n    x = n / d * (b / d);\n    y = n / d * (a / d);\n    return std::make_optional(x);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123325,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp0dcxduft.cpp:2:\n/tmp/tmp0dcxduft.cpp: In function \u2018int main()\u2019:\n/tmp/tmp0dcxduft.cpp:16:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   16 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmp0dcxduft.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp0dcxduft.cpp:2:\n/tmp/tmp0dcxduft.cpp:16:60: note:   \u2018std::optional<long int>\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   16 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |                                                            ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n     ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0 && b == 0) {\n        if (n == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (a == 0) {\n        if (n % b == 0) {\n            return std::make_optional(n / b);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (b == 0) {\n        if (n % a == 0) {\n            return std::make_optional(n / a);\n        } else {\n            return std::nullopt;\n        }\n    }\n    long g = std::__gcd(a, b);\n    if (n % g != 0) {\n        return std::nullopt;\n    }\n    long p = a / g;\n    long q = b / g;\n    long r = n / g;\n    long x, y;\n    std::tie(x, y) = find_solution(q, p, r);\n    return std::make_optional(q * x + p * y);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123415,
      "stdout": "",
      "stderr": "/tmp/tmpyyud4ej5.cpp: In function \u2018std::optional<long int> find_solution(long int, long int, long int)\u2019:\n/tmp/tmpyyud4ej5.cpp:34:43: error: no match for \u2018operator=\u2019 (operand types are \u2018std::tuple<long int&, long int&>\u2019 and \u2018std::optional<long int>\u2019)\n   34 |     std::tie(x, y) = find_solution(q, p, r);\n      |                                           ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/functional:54,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/pstl/glue_algorithm_defs.h:13,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:71,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n                 from /tmp/tmpyyud4ej5.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/tuple:1205:7: note: candidate: \u2018std::tuple<_T1, _T2>& std::tuple<_T1, _T2>::operator=(typename std::conditional<__assignable<const _T1&, const _T2&>(), const std::tuple<_T1, _T2>&, const std::__nonesuch_no_braces&>::type) [with _T1 = long int&; _T2 = long int&; typename std::conditional<__assignable<const _T1&, const _T2&>(), const std::tuple<_T1, _T2>&, const std::__nonesuch_no_braces&>::type = const std::tuple<long int&, long int&>&]\u2019\n 1205 |       operator=(typename conditional<__assignable<const _T1&, const _T2&>(),\n      |       ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/tuple:1207:45: note:   no known conversion for argument 1 from \u2018std::optional<long int>\u2019 to \u2018std::conditional<true, const std::tuple<long int&, long int&>&, const std::__nonesuch_no_braces&>::type\u2019 {aka \u2018const std::tuple<long int&, long int&>&\u2019}\n 1205 |       operator=(typename conditional<__assignable<const _T1&, const _T2&>(),\n      |                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n 1206 |          const tuple&,\n      |          ~~~~~~~~~~~~~                       \n 1207 |          const __nonesuch_no_braces&>::type __in)\n      |  ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (n % gcd(a, b) != 0) {\n        return std::nullopt;\n    }\n    long x, y;\n    long d = gcd(a, b, &x, &y);\n    x *= n / d;\n    y *= n / d;\n    return std::make_tuple(x, y);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123415,
      "stdout": "",
      "stderr": "/tmp/tmpttoa6de2.cpp: In function \u2018std::optional<long int> find_solution(long int, long int, long int)\u2019:\n/tmp/tmpttoa6de2.cpp:5:13: error: \u2018gcd\u2019 was not declared in this scope; did you mean \u2018std::gcd\u2019?\n    5 |     if (n % gcd(a, b) != 0) {\n      |             ^~~\n      |             std::gcd\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:84,\n                 from /tmp/tmpttoa6de2.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/numeric:131:5: note: \u2018std::gcd\u2019 declared here\n  131 |     gcd(_Mn __m, _Nn __n)\n      |     ^~~\n/tmp/tmpttoa6de2.cpp:9:14: error: \u2018gcd\u2019 was not declared in this scope; did you mean \u2018std::gcd\u2019?\n    9 |     long d = gcd(a, b, &x, &y);\n      |              ^~~\n      |              std::gcd\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:84,\n                 from /tmp/tmpttoa6de2.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/numeric:131:5: note: \u2018std::gcd\u2019 declared here\n  131 |     gcd(_Mn __m, _Nn __n)\n      |     ^~~\n/tmp/tmpttoa6de2.cpp:12:27: error: could not convert \u2018std::make_tuple(_Elements&& ...) [with _Elements = {long int&, long int&}](y)\u2019 from \u2018std::tuple<long int, long int>\u2019 to \u2018std::optional<long int>\u2019\n   12 |     return std::make_tuple(x, y);\n      |            ~~~~~~~~~~~~~~~^~~~~~\n      |                           |\n      |                           std::tuple<long int, long int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpttoa6de2.cpp:2:\n/tmp/tmpttoa6de2.cpp: In function \u2018int main()\u2019:\n/tmp/tmpttoa6de2.cpp:16:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   16 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |       ",
      "exit_code": -1,
      "status": "SyntaxError"
    }
  ]
}
{
  "name": "mbpp_394_check_distinct",
  "language": "cpp",
  "prompt": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_394_check_distinct.py",
  "prompt_terminology": "verbatim",
  "tests": "}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "results": [
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n\tstd::set<int> s;\n\twhile (test_tup > 0) {\n\t\ts.insert(test_tup % 10);\n\t\ttest_tup /= 10;\n\t}\n\treturn s.size() == 4;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1665510613,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpxnszpi0z.cpp:2:\n/tmp/tmpxnszpi0z.cpp: In function \u2018int main()\u2019:\n/tmp/tmpxnszpi0z.cpp:14:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   14 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmpxnszpi0z.cpp:15:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   15 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmpxnszpi0z.cpp:16:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   16 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    int arr[10] = {0};\n    while(test_tup) {\n        int digit = test_tup % 10;\n        if(arr[digit]) {\n            return false;\n        }\n        arr[digit] = 1;\n        test_tup /= 10;\n    }\n    return true;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1665510613,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp2m96xhod.cpp:2:\n/tmp/tmp2m96xhod.cpp: In function \u2018int main()\u2019:\n/tmp/tmp2m96xhod.cpp:18:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   18 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmp2m96xhod.cpp:19:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   19 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmp2m96xhod.cpp:20:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   20 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    long mask = 0;\n    for (int i = 0; i < 4; i++) {\n        long digit = test_tup % 10;\n        if (digit == 0) {\n            return false;\n        }\n        if (mask & (1 << digit)) {\n            return false;\n        }\n        mask |= (1 << digit);\n        test_tup /= 10;\n    }\n    return true;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1665510613,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpw3dnp80a.cpp:2:\n/tmp/tmpw3dnp80a.cpp: In function \u2018int main()\u2019:\n/tmp/tmpw3dnp80a.cpp:21:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   21 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmpw3dnp80a.cpp:22:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   22 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmpw3dnp80a.cpp:23:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   23 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    int count = 0;\n    int i = 0;\n    while (test_tup) {\n        if (test_tup & 1) {\n            count++;\n        }\n        test_tup = test_tup >> 1;\n        i++;\n    }\n    return count == i;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1665510613,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpr365hmxz.cpp:2:\n/tmp/tmpr365hmxz.cpp: In function \u2018int main()\u2019:\n/tmp/tmpr365hmxz.cpp:18:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   18 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmpr365hmxz.cpp:19:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   19 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmpr365hmxz.cpp:20:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   20 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    std::set<int> s;\n    while (test_tup) {\n        s.insert(test_tup % 10);\n        test_tup /= 10;\n    }\n    return (s.size() == 4);\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1665510613,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpgp1e4tm_.cpp:2:\n/tmp/tmpgp1e4tm_.cpp: In function \u2018int main()\u2019:\n/tmp/tmpgp1e4tm_.cpp:14:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   14 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmpgp1e4tm_.cpp:15:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   15 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmpgp1e4tm_.cpp:16:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   16 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    std::vector<int> digits;\n    while(test_tup > 0) {\n        digits.push_back(test_tup % 10);\n        test_tup /= 10;\n    }\n    std::sort(digits.begin(), digits.end());\n    for(int i = 0; i < digits.size() - 1; i++) {\n        if(digits[i] == digits[i + 1]) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp87nwoguz.cpp:2:\n/tmp/tmp87nwoguz.cpp: In function \u2018int main()\u2019:\n/tmp/tmp87nwoguz.cpp:20:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   20 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmp87nwoguz.cpp:21:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   21 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmp87nwoguz.cpp:22:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   22 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    std::vector<int> digits;\n    while (test_tup > 0) {\n        digits.push_back(test_tup % 10);\n        test_tup /= 10;\n    }\n    std::sort(digits.begin(), digits.end());\n    for (int i = 0; i < digits.size() - 1; i++) {\n        if (digits[i] == digits[i + 1]) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp_m6lp4z5.cpp:2:\n/tmp/tmp_m6lp4z5.cpp: In function \u2018int main()\u2019:\n/tmp/tmp_m6lp4z5.cpp:20:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   20 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmp_m6lp4z5.cpp:21:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   21 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmp_m6lp4z5.cpp:22:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   22 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    long mask = 0;\n    for (int i = 0; i < sizeof(long); i++) {\n        int bit = (test_tup >> i) & 1;\n        if (bit) {\n            if (mask & (1 << bit)) {\n                return false;\n            }\n            mask |= (1 << bit);\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1665510613,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpyr1trfdb.cpp:2:\n/tmp/tmpyr1trfdb.cpp: In function \u2018int main()\u2019:\n/tmp/tmpyr1trfdb.cpp:19:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   19 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmpyr1trfdb.cpp:20:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   20 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmpyr1trfdb.cpp:21:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   21 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n  std::set<int> s;\n  while (test_tup > 0) {\n    s.insert(test_tup % 10);\n    test_tup /= 10;\n  }\n  return s.size() == 4;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1665510613,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpf57t42pg.cpp:2:\n/tmp/tmpf57t42pg.cpp: In function \u2018int main()\u2019:\n/tmp/tmpf57t42pg.cpp:14:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   14 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmpf57t42pg.cpp:15:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   15 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmpf57t42pg.cpp:16:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   16 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    std::set<int> s;\n    for (int i = 0; i < 4; i++) {\n        s.insert(test_tup % 10);\n        test_tup /= 10;\n    }\n    return s.size() == 4;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1665510613,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpx47uc814.cpp:2:\n/tmp/tmpx47uc814.cpp: In function \u2018int main()\u2019:\n/tmp/tmpx47uc814.cpp:14:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   14 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmpx47uc814.cpp:15:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   15 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmpx47uc814.cpp:16:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   16 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    long mask = 0;\n    while (test_tup) {\n        if (mask & (1 << (test_tup % 10))) {\n            return false;\n        }\n        mask |= (1 << (test_tup % 10));\n        test_tup /= 10;\n    }\n    return true;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1665510613,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpwkr3tvws.cpp:2:\n/tmp/tmpwkr3tvws.cpp: In function \u2018int main()\u2019:\n/tmp/tmpwkr3tvws.cpp:17:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   17 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmpwkr3tvws.cpp:18:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   18 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmpwkr3tvws.cpp:19:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   19 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    int count[10] = {0};\n    while(test_tup) {\n        count[test_tup%10]++;\n        test_tup /= 10;\n    }\n    for(int i = 0; i < 10; i++) {\n        if(count[i] > 1) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1665510613,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp5q2f15oz.cpp:2:\n/tmp/tmp5q2f15oz.cpp: In function \u2018int main()\u2019:\n/tmp/tmp5q2f15oz.cpp:19:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   19 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmp5q2f15oz.cpp:20:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   20 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmp5q2f15oz.cpp:21:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   21 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    long mask = 0;\n    for (int i = 0; i < 32; i++) {\n        if ((test_tup & (1 << i)) != 0) {\n            if ((mask & (1 << i)) != 0) {\n                return false;\n            }\n            mask |= (1 << i);\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1665510613,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpe3nsoy0d.cpp:2:\n/tmp/tmpe3nsoy0d.cpp: In function \u2018int main()\u2019:\n/tmp/tmpe3nsoy0d.cpp:18:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   18 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmpe3nsoy0d.cpp:19:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   19 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmpe3nsoy0d.cpp:20:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   20 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    int a[10] = {0};\n    while(test_tup) {\n        a[test_tup%10]++;\n        test_tup /= 10;\n    }\n    for(int i = 0; i < 10; i++) {\n        if(a[i] > 1)\n            return false;\n    }\n    return true;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1665510613,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpbwbainzw.cpp:2:\n/tmp/tmpbwbainzw.cpp: In function \u2018int main()\u2019:\n/tmp/tmpbwbainzw.cpp:18:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   18 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmpbwbainzw.cpp:19:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   19 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmpbwbainzw.cpp:20:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   20 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    std::set<int> s;\n    while (test_tup > 0) {\n        s.insert(test_tup % 10);\n        test_tup /= 10;\n    }\n    return s.size() == 4;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmptxijshoq.cpp:2:\n/tmp/tmptxijshoq.cpp: In function \u2018int main()\u2019:\n/tmp/tmptxijshoq.cpp:14:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   14 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmptxijshoq.cpp:15:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   15 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmptxijshoq.cpp:16:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   16 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    std::set<int> s;\n    while (test_tup) {\n        s.insert(test_tup % 10);\n        test_tup /= 10;\n    }\n    return s.size() == 4;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp2n3c39_r.cpp:2:\n/tmp/tmp2n3c39_r.cpp: In function \u2018int main()\u2019:\n/tmp/tmp2n3c39_r.cpp:14:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   14 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmp2n3c39_r.cpp:15:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   15 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmp2n3c39_r.cpp:16:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   16 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    int n = test_tup;\n    int count = 0;\n    while (n) {\n        count += n & 1;\n        n >>= 1;\n    }\n    return count == 3;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1665510613,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmppag85eq2.cpp:2:\n/tmp/tmppag85eq2.cpp: In function \u2018int main()\u2019:\n/tmp/tmppag85eq2.cpp:15:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   15 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmppag85eq2.cpp:16:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   16 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmppag85eq2.cpp:17:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   17 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    std::vector<int> digits;\n    while (test_tup > 0) {\n        digits.push_back(test_tup % 10);\n        test_tup /= 10;\n    }\n    std::sort(digits.begin(), digits.end());\n    for (int i = 0; i < digits.size() - 1; ++i) {\n        if (digits[i] == digits[i + 1]) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1665510613,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpcg_bnepw.cpp:2:\n/tmp/tmpcg_bnepw.cpp: In function \u2018int main()\u2019:\n/tmp/tmpcg_bnepw.cpp:20:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   20 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmpcg_bnepw.cpp:21:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   21 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmpcg_bnepw.cpp:22:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   22 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n  int bits[64];\n  for (int i = 0; i < 64; i++) {\n    bits[i] = test_tup & 1;\n    test_tup >>= 1;\n  }\n  std::sort(bits, bits + 64);\n  for (int i = 1; i < 64; i++) {\n    if (bits[i] == bits[i - 1]) {\n      return false;\n    }\n  }\n  return true;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1665510613,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpt5vxlv34.cpp:2:\n/tmp/tmpt5vxlv34.cpp: In function \u2018int main()\u2019:\n/tmp/tmpt5vxlv34.cpp:20:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   20 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmpt5vxlv34.cpp:21:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   21 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmpt5vxlv34.cpp:22:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   22 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    std::set<int> s;\n    while (test_tup) {\n        s.insert(test_tup % 10);\n        test_tup /= 10;\n    }\n    return s.size() == 4;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp2n3c39_r.cpp:2:\n/tmp/tmp2n3c39_r.cpp: In function \u2018int main()\u2019:\n/tmp/tmp2n3c39_r.cpp:14:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   14 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmp2n3c39_r.cpp:15:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   15 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmp2n3c39_r.cpp:16:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   16 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    std::set<int> s;\n    while (test_tup) {\n        s.insert(test_tup % 10);\n        test_tup /= 10;\n    }\n    return s.size() == 4;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp2n3c39_r.cpp:2:\n/tmp/tmp2n3c39_r.cpp: In function \u2018int main()\u2019:\n/tmp/tmp2n3c39_r.cpp:14:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   14 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmp2n3c39_r.cpp:15:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   15 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmp2n3c39_r.cpp:16:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   16 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    std::set<int> s;\n    while (test_tup) {\n        s.insert(test_tup % 10);\n        test_tup /= 10;\n    }\n    return s.size() == 4;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp2n3c39_r.cpp:2:\n/tmp/tmp2n3c39_r.cpp: In function \u2018int main()\u2019:\n/tmp/tmp2n3c39_r.cpp:14:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   14 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmp2n3c39_r.cpp:15:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   15 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmp2n3c39_r.cpp:16:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   16 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    int count[10] = {0};\n    while (test_tup) {\n        count[test_tup % 10]++;\n        test_tup /= 10;\n    }\n    for (int i = 0; i < 10; i++) {\n        if (count[i] > 1) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123685,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpnp1c1nke.cpp:2:\n/tmp/tmpnp1c1nke.cpp: In function \u2018int main()\u2019:\n/tmp/tmpnp1c1nke.cpp:19:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   19 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmpnp1c1nke.cpp:20:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   20 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmpnp1c1nke.cpp:21:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   21 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    int count = 0;\n    for (int i = 0; i < 10; i++) {\n        if (test_tup & (1 << i)) {\n            count++;\n        }\n    }\n    return count == 10;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123683,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp5xuuk1ck.cpp:2:\n/tmp/tmp5xuuk1ck.cpp: In function \u2018int main()\u2019:\n/tmp/tmp5xuuk1ck.cpp:15:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   15 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmp5xuuk1ck.cpp:16:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   16 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmp5xuuk1ck.cpp:17:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   17 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    std::vector<int> test_vec;\n    while (test_tup > 0) {\n        test_vec.push_back(test_tup % 10);\n        test_tup /= 10;\n    }\n    std::sort(test_vec.begin(), test_vec.end());\n    for (int i = 0; i < test_vec.size() - 1; i++) {\n        if (test_vec[i] == test_vec[i + 1]) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123693,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp7olcc12b.cpp:2:\n/tmp/tmp7olcc12b.cpp: In function \u2018int main()\u2019:\n/tmp/tmp7olcc12b.cpp:20:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   20 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmp7olcc12b.cpp:21:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   21 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmp7olcc12b.cpp:22:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   22 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    std::set<int> s;\n    while (test_tup > 0) {\n        int digit = test_tup % 10;\n        if (s.find(digit) != s.end()) {\n            return false;\n        }\n        s.insert(digit);\n        test_tup /= 10;\n    }\n    return true;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123685,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpvrptznq7.cpp:2:\n/tmp/tmpvrptznq7.cpp: In function \u2018int main()\u2019:\n/tmp/tmpvrptznq7.cpp:18:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   18 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmpvrptznq7.cpp:19:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   19 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmpvrptznq7.cpp:20:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   20 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    std::set<int> s;\n    while(test_tup) {\n        s.insert(test_tup%10);\n        test_tup /= 10;\n    }\n    return s.size() == 4;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpno832pmb.cpp:2:\n/tmp/tmpno832pmb.cpp: In function \u2018int main()\u2019:\n/tmp/tmpno832pmb.cpp:14:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   14 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmpno832pmb.cpp:15:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   15 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmpno832pmb.cpp:16:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   16 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n  std::set<int> s;\n  while (test_tup) {\n    s.insert(test_tup % 10);\n    test_tup /= 10;\n  }\n  return s.size() == 4;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123693,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpqm1d5jjw.cpp:2:\n/tmp/tmpqm1d5jjw.cpp: In function \u2018int main()\u2019:\n/tmp/tmpqm1d5jjw.cpp:14:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   14 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmpqm1d5jjw.cpp:15:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   15 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmpqm1d5jjw.cpp:16:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   16 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    int count = 0;\n    for (int i = 0; i < 8; i++) {\n        if (test_tup & 1) {\n            count++;\n        }\n        test_tup = test_tup >> 1;\n    }\n    return count == 8;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123693,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpd5k5pzt_.cpp:2:\n/tmp/tmpd5k5pzt_.cpp: In function \u2018int main()\u2019:\n/tmp/tmpd5k5pzt_.cpp:16:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   16 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmpd5k5pzt_.cpp:17:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   17 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmpd5k5pzt_.cpp:18:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   18 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    std::vector<int> v;\n    for (int i = 0; i < 4; i++) {\n        v.push_back(test_tup % 10);\n        test_tup /= 10;\n    }\n    std::sort(v.begin(), v.end());\n    for (int i = 0; i < 3; i++) {\n        if (v[i] == v[i+1]) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123693,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpbms1m3ib.cpp:2:\n/tmp/tmpbms1m3ib.cpp: In function \u2018int main()\u2019:\n/tmp/tmpbms1m3ib.cpp:20:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   20 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmpbms1m3ib.cpp:21:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   21 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmpbms1m3ib.cpp:22:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   22 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    std::vector<int> test_vec;\n    while (test_tup > 0) {\n        test_vec.push_back(test_tup % 10);\n        test_tup /= 10;\n    }\n    std::sort(test_vec.begin(), test_vec.end());\n    for (int i = 1; i < test_vec.size(); i++) {\n        if (test_vec[i] == test_vec[i - 1]) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123693,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpo8vzphm7.cpp:2:\n/tmp/tmpo8vzphm7.cpp: In function \u2018int main()\u2019:\n/tmp/tmpo8vzphm7.cpp:20:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   20 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmpo8vzphm7.cpp:21:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   21 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmpo8vzphm7.cpp:22:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   22 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    int arr[10] = {0};\n    while(test_tup) {\n        int digit = test_tup % 10;\n        if(arr[digit]) {\n            return false;\n        }\n        arr[digit] = 1;\n        test_tup /= 10;\n    }\n    return true;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1665510613,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp2m96xhod.cpp:2:\n/tmp/tmp2m96xhod.cpp: In function \u2018int main()\u2019:\n/tmp/tmp2m96xhod.cpp:18:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   18 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmp2m96xhod.cpp:19:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   19 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmp2m96xhod.cpp:20:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   20 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    int count[10] = {0};\n    while(test_tup) {\n        count[test_tup%10]++;\n        test_tup /= 10;\n    }\n    for(int i = 0; i < 10; i++) {\n        if(count[i] > 1) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1665510613,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp5q2f15oz.cpp:2:\n/tmp/tmp5q2f15oz.cpp: In function \u2018int main()\u2019:\n/tmp/tmp5q2f15oz.cpp:19:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   19 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmp5q2f15oz.cpp:20:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   20 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmp5q2f15oz.cpp:21:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   21 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    int a[10] = {0};\n    while(test_tup) {\n        int digit = test_tup % 10;\n        if(a[digit] == 1) {\n            return false;\n        }\n        a[digit] = 1;\n        test_tup /= 10;\n    }\n    return true;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123693,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpaeny6rkh.cpp:2:\n/tmp/tmpaeny6rkh.cpp: In function \u2018int main()\u2019:\n/tmp/tmpaeny6rkh.cpp:18:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   18 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmpaeny6rkh.cpp:19:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   19 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmpaeny6rkh.cpp:20:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   20 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n  long test_tup_copy = test_tup;\n  std::set<long> s;\n  while (test_tup_copy > 0) {\n    s.insert(test_tup_copy % 10);\n    test_tup_copy /= 10;\n  }\n  return (s.size() == 4);\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123693,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpt2xcuzdd.cpp:2:\n/tmp/tmpt2xcuzdd.cpp: In function \u2018int main()\u2019:\n/tmp/tmpt2xcuzdd.cpp:15:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   15 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmpt2xcuzdd.cpp:16:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   16 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmpt2xcuzdd.cpp:17:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   17 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    std::vector<int> digits;\n    while(test_tup > 0) {\n        digits.push_back(test_tup % 10);\n        test_tup /= 10;\n    }\n    std::sort(digits.begin(), digits.end());\n    for(int i = 0; i < digits.size() - 1; i++) {\n        if(digits[i] == digits[i+1]) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123693,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpxqel777o.cpp:2:\n/tmp/tmpxqel777o.cpp: In function \u2018int main()\u2019:\n/tmp/tmpxqel777o.cpp:20:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   20 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmpxqel777o.cpp:21:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   21 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmpxqel777o.cpp:22:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   22 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    int arr[10] = {0};\n    while (test_tup) {\n        int digit = test_tup % 10;\n        arr[digit]++;\n        if (arr[digit] > 1) {\n            return false;\n        }\n        test_tup /= 10;\n    }\n    return true;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123693,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpuq9cq7yk.cpp:2:\n/tmp/tmpuq9cq7yk.cpp: In function \u2018int main()\u2019:\n/tmp/tmpuq9cq7yk.cpp:18:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   18 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmpuq9cq7yk.cpp:19:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   19 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmpuq9cq7yk.cpp:20:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   20 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n  std::set<int> s;\n  for (int i = 0; i < 5; i++) {\n    int digit = test_tup % 10;\n    if (s.find(digit) != s.end()) {\n      return false;\n    }\n    s.insert(digit);\n    test_tup /= 10;\n  }\n  return true;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123693,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpedib64v6.cpp:2:\n/tmp/tmpedib64v6.cpp: In function \u2018int main()\u2019:\n/tmp/tmpedib64v6.cpp:18:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   18 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmpedib64v6.cpp:19:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   19 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmpedib64v6.cpp:20:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   20 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    std::set<int> s;\n    while(test_tup > 0) {\n        s.insert(test_tup % 10);\n        test_tup /= 10;\n    }\n    return s.size() == 4;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123685,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpp14ttxug.cpp:2:\n/tmp/tmpp14ttxug.cpp: In function \u2018int main()\u2019:\n/tmp/tmpp14ttxug.cpp:14:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   14 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmpp14ttxug.cpp:15:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   15 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmpp14ttxug.cpp:16:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   16 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    long mask = 0;\n    while (test_tup) {\n        if (mask & (1 << (test_tup % 10))) {\n            return false;\n        }\n        mask |= (1 << (test_tup % 10));\n        test_tup /= 10;\n    }\n    return true;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1665510613,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpwkr3tvws.cpp:2:\n/tmp/tmpwkr3tvws.cpp: In function \u2018int main()\u2019:\n/tmp/tmpwkr3tvws.cpp:17:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   17 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmpwkr3tvws.cpp:18:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   18 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmpwkr3tvws.cpp:19:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   19 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    std::set<int> s;\n    for (int i = 0; i < 4; i++) {\n        s.insert(test_tup % 10);\n        test_tup /= 10;\n    }\n    return s.size() == 4;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1665510613,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpx47uc814.cpp:2:\n/tmp/tmpx47uc814.cpp: In function \u2018int main()\u2019:\n/tmp/tmpx47uc814.cpp:14:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   14 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmpx47uc814.cpp:15:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   15 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmpx47uc814.cpp:16:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   16 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    std::set<int> test_set;\n    while (test_tup > 0) {\n        int digit = test_tup % 10;\n        test_set.insert(digit);\n        test_tup /= 10;\n    }\n    return test_set.size() == 4;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123693,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp_z_tgeun.cpp:2:\n/tmp/tmp_z_tgeun.cpp: In function \u2018int main()\u2019:\n/tmp/tmp_z_tgeun.cpp:15:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   15 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmp_z_tgeun.cpp:16:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   16 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmp_z_tgeun.cpp:17:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   17 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    // Write your code here\n    int arr[10] = {0};\n    while(test_tup) {\n        int rem = test_tup % 10;\n        if(arr[rem] == 1) {\n            return false;\n        }\n        arr[rem] = 1;\n        test_tup /= 10;\n    }\n    return true;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123693,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp09r6v_oe.cpp:2:\n/tmp/tmp09r6v_oe.cpp: In function \u2018int main()\u2019:\n/tmp/tmp09r6v_oe.cpp:19:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   19 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmp09r6v_oe.cpp:20:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   20 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmp09r6v_oe.cpp:21:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   21 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    int count[10] = {0};\n    while (test_tup) {\n        count[test_tup % 10]++;\n        test_tup /= 10;\n    }\n    for (int i = 0; i < 10; i++) {\n        if (count[i] > 1) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123685,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpnp1c1nke.cpp:2:\n/tmp/tmpnp1c1nke.cpp: In function \u2018int main()\u2019:\n/tmp/tmpnp1c1nke.cpp:19:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   19 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmpnp1c1nke.cpp:20:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   20 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmpnp1c1nke.cpp:21:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   21 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    std::vector<int> digits;\n    while (test_tup > 0) {\n        digits.push_back(test_tup % 10);\n        test_tup /= 10;\n    }\n    std::sort(digits.begin(), digits.end());\n    for (int i = 0; i < digits.size() - 1; i++) {\n        if (digits[i] == digits[i + 1]) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp_m6lp4z5.cpp:2:\n/tmp/tmp_m6lp4z5.cpp: In function \u2018int main()\u2019:\n/tmp/tmp_m6lp4z5.cpp:20:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   20 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmp_m6lp4z5.cpp:21:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   21 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmp_m6lp4z5.cpp:22:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   22 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    std::set<int> s;\n    while(test_tup > 0) {\n        s.insert(test_tup % 10);\n        test_tup /= 10;\n    }\n    return s.size() == 4;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123685,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpp14ttxug.cpp:2:\n/tmp/tmpp14ttxug.cpp: In function \u2018int main()\u2019:\n/tmp/tmpp14ttxug.cpp:14:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   14 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmpp14ttxug.cpp:15:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   15 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmpp14ttxug.cpp:16:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   16 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    std::set<int> s;\n    while (test_tup > 0) {\n        s.insert(test_tup % 10);\n        test_tup /= 10;\n    }\n    return s.size() == 4;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmptxijshoq.cpp:2:\n/tmp/tmptxijshoq.cpp: In function \u2018int main()\u2019:\n/tmp/tmptxijshoq.cpp:14:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   14 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmptxijshoq.cpp:15:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   15 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmptxijshoq.cpp:16:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   16 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    int arr[10] = {0};\n    while(test_tup) {\n        arr[test_tup%10]++;\n        test_tup /= 10;\n    }\n    for(int i=0; i<10; i++) {\n        if(arr[i] > 1)\n            return false;\n    }\n    return true;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123693,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpolxp2me6.cpp:2:\n/tmp/tmpolxp2me6.cpp: In function \u2018int main()\u2019:\n/tmp/tmpolxp2me6.cpp:18:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   18 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmpolxp2me6.cpp:19:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   19 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmpolxp2me6.cpp:20:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   20 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    int count[10] = {0};\n    while (test_tup > 0) {\n        int digit = test_tup % 10;\n        count[digit]++;\n        test_tup /= 10;\n    }\n    for (int i = 0; i < 10; i++) {\n        if (count[i] > 1) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123693,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp4s2ifv_o.cpp:2:\n/tmp/tmp4s2ifv_o.cpp: In function \u2018int main()\u2019:\n/tmp/tmp4s2ifv_o.cpp:20:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   20 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmp4s2ifv_o.cpp:21:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   21 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmp4s2ifv_o.cpp:22:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   22 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    int count = 0;\n    int bit_count = 0;\n    while (test_tup) {\n        if (test_tup & 1) {\n            count++;\n        }\n        test_tup = test_tup >> 1;\n        bit_count++;\n    }\n    if (count == bit_count) {\n        return true;\n    }\n    return false;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123693,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpxg28e2ir.cpp:2:\n/tmp/tmpxg28e2ir.cpp: In function \u2018int main()\u2019:\n/tmp/tmpxg28e2ir.cpp:21:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   21 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmpxg28e2ir.cpp:22:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   22 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmpxg28e2ir.cpp:23:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   23 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    std::vector<int> digits;\n    while (test_tup > 0) {\n        digits.push_back(test_tup % 10);\n        test_tup /= 10;\n    }\n    std::sort(digits.begin(), digits.end());\n    for (int i = 1; i < digits.size(); i++) {\n        if (digits[i] == digits[i - 1]) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpql09x_ga.cpp:2:\n/tmp/tmpql09x_ga.cpp: In function \u2018int main()\u2019:\n/tmp/tmpql09x_ga.cpp:20:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   20 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmpql09x_ga.cpp:21:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   21 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmpql09x_ga.cpp:22:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   22 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    int count = 0;\n    while(test_tup) {\n        if(test_tup & 1) {\n            count++;\n        }\n        test_tup = test_tup >> 1;\n    }\n    return count == 3;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123689,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpavt3nw5y.cpp:2:\n/tmp/tmpavt3nw5y.cpp: In function \u2018int main()\u2019:\n/tmp/tmpavt3nw5y.cpp:16:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   16 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmpavt3nw5y.cpp:17:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   17 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmpavt3nw5y.cpp:18:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   18 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    int count[10] = {0};\n    while (test_tup) {\n        count[test_tup % 10]++;\n        test_tup /= 10;\n    }\n    for (int i = 0; i < 10; i++) {\n        if (count[i] > 1) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123685,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpnp1c1nke.cpp:2:\n/tmp/tmpnp1c1nke.cpp: In function \u2018int main()\u2019:\n/tmp/tmpnp1c1nke.cpp:19:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   19 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmpnp1c1nke.cpp:20:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   20 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmpnp1c1nke.cpp:21:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   21 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n\tlong test_tup_copy = test_tup;\n\tlong mask = 0;\n\twhile (test_tup_copy) {\n\t\tlong bit = test_tup_copy & 1;\n\t\tif (mask & (1 << bit)) {\n\t\t\treturn false;\n\t\t}\n\t\tmask |= (1 << bit);\n\t\ttest_tup_copy >>= 1;\n\t}\n\treturn true;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123693,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpharvbygp.cpp:2:\n/tmp/tmpharvbygp.cpp: In function \u2018int main()\u2019:\n/tmp/tmpharvbygp.cpp:19:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   19 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmpharvbygp.cpp:20:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   20 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmpharvbygp.cpp:21:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   21 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    std::set<int> s;\n    for (int i = 0; i < 4; i++) {\n        s.insert(test_tup % 10);\n        test_tup /= 10;\n    }\n    return s.size() == 4;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1665510613,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpx47uc814.cpp:2:\n/tmp/tmpx47uc814.cpp: In function \u2018int main()\u2019:\n/tmp/tmpx47uc814.cpp:14:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   14 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmpx47uc814.cpp:15:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   15 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmpx47uc814.cpp:16:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   16 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    std::set<int> s;\n    while (test_tup) {\n        s.insert(test_tup%10);\n        test_tup /= 10;\n    }\n    return s.size() == 4;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123693,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmplp40_q_f.cpp:2:\n/tmp/tmplp40_q_f.cpp: In function \u2018int main()\u2019:\n/tmp/tmplp40_q_f.cpp:14:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   14 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmplp40_q_f.cpp:15:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   15 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmplp40_q_f.cpp:16:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   16 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    int count[10] = {0};\n    while (test_tup) {\n        int digit = test_tup % 10;\n        count[digit]++;\n        if (count[digit] > 1) {\n            return false;\n        }\n        test_tup /= 10;\n    }\n    return true;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123687,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp83x52hp2.cpp:2:\n/tmp/tmp83x52hp2.cpp: In function \u2018int main()\u2019:\n/tmp/tmp83x52hp2.cpp:18:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   18 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmp83x52hp2.cpp:19:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   19 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmp83x52hp2.cpp:20:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   20 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    long mask = 0;\n    for (int i = 0; i < 32; i++) {\n        long bit = (test_tup >> i) & 1;\n        if (bit == 1) {\n            if ((mask & (1 << i)) != 0) {\n                return false;\n            }\n            mask |= (1 << i);\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123692,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpzwmt74s1.cpp:2:\n/tmp/tmpzwmt74s1.cpp: In function \u2018int main()\u2019:\n/tmp/tmpzwmt74s1.cpp:19:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   19 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmpzwmt74s1.cpp:20:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   20 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmpzwmt74s1.cpp:21:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   21 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    long temp = test_tup;\n    int count = 0;\n    while(temp) {\n        count++;\n        temp = temp & (temp-1);\n    }\n    return (count == 3);\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123693,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpmz1gxmj5.cpp:2:\n/tmp/tmpmz1gxmj5.cpp: In function \u2018int main()\u2019:\n/tmp/tmpmz1gxmj5.cpp:15:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   15 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmpmz1gxmj5.cpp:16:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   16 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmpmz1gxmj5.cpp:17:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   17 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    bool check[10] = {false};\n    while(test_tup) {\n        if(check[test_tup%10]) {\n            return false;\n        }\n        check[test_tup%10] = true;\n        test_tup /= 10;\n    }\n    return true;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123693,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp3sn5ozey.cpp:2:\n/tmp/tmp3sn5ozey.cpp: In function \u2018int main()\u2019:\n/tmp/tmp3sn5ozey.cpp:17:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   17 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmp3sn5ozey.cpp:18:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   18 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmp3sn5ozey.cpp:19:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   19 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    std::set<int> s;\n    while (test_tup) {\n        s.insert(test_tup % 10);\n        test_tup /= 10;\n    }\n    return s.size() == 4;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp2n3c39_r.cpp:2:\n/tmp/tmp2n3c39_r.cpp: In function \u2018int main()\u2019:\n/tmp/tmp2n3c39_r.cpp:14:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   14 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmp2n3c39_r.cpp:15:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   15 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmp2n3c39_r.cpp:16:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   16 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    std::set<int> s;\n    while (test_tup) {\n        s.insert(test_tup % 10);\n        test_tup /= 10;\n    }\n    return s.size() == 4;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp2n3c39_r.cpp:2:\n/tmp/tmp2n3c39_r.cpp: In function \u2018int main()\u2019:\n/tmp/tmp2n3c39_r.cpp:14:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   14 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmp2n3c39_r.cpp:15:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   15 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmp2n3c39_r.cpp:16:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   16 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    long mask = 0;\n    for (int i = 0; i < 64; i++) {\n        if (test_tup & (1 << i)) {\n            if (mask & (1 << i)) {\n                return false;\n            }\n            mask |= (1 << i);\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123683,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp0hszy387.cpp:2:\n/tmp/tmp0hszy387.cpp: In function \u2018int main()\u2019:\n/tmp/tmp0hszy387.cpp:18:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   18 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmp0hszy387.cpp:19:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   19 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmp0hszy387.cpp:20:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   20 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    std::set<int> s;\n    while (test_tup > 0) {\n        int digit = test_tup % 10;\n        if (s.find(digit) != s.end()) {\n            return false;\n        }\n        s.insert(digit);\n        test_tup /= 10;\n    }\n    return true;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123685,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpvrptznq7.cpp:2:\n/tmp/tmpvrptznq7.cpp: In function \u2018int main()\u2019:\n/tmp/tmpvrptznq7.cpp:18:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   18 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmpvrptznq7.cpp:19:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   19 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmpvrptznq7.cpp:20:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   20 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    int arr[10] = {0};\n    while (test_tup) {\n        int digit = test_tup % 10;\n        if (arr[digit] == 1) {\n            return false;\n        }\n        arr[digit] = 1;\n        test_tup /= 10;\n    }\n    return true;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123693,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp9m7moov6.cpp:2:\n/tmp/tmp9m7moov6.cpp: In function \u2018int main()\u2019:\n/tmp/tmp9m7moov6.cpp:18:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   18 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmp9m7moov6.cpp:19:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   19 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmp9m7moov6.cpp:20:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   20 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    std::vector<int> digits;\n    while (test_tup > 0) {\n        digits.push_back(test_tup % 10);\n        test_tup /= 10;\n    }\n    std::sort(digits.begin(), digits.end());\n    for (int i = 0; i < digits.size() - 1; i++) {\n        if (digits[i] == digits[i + 1]) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp_m6lp4z5.cpp:2:\n/tmp/tmp_m6lp4z5.cpp: In function \u2018int main()\u2019:\n/tmp/tmp_m6lp4z5.cpp:20:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   20 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmp_m6lp4z5.cpp:21:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   21 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmp_m6lp4z5.cpp:22:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   22 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    std::set<long> s;\n    while (test_tup > 0) {\n        s.insert(test_tup % 10);\n        test_tup /= 10;\n    }\n    return s.size() == 4;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123693,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpk7k8zynt.cpp:2:\n/tmp/tmpk7k8zynt.cpp: In function \u2018int main()\u2019:\n/tmp/tmpk7k8zynt.cpp:14:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   14 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmpk7k8zynt.cpp:15:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   15 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmpk7k8zynt.cpp:16:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   16 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    std::set<int> s;\n    while (test_tup > 0) {\n        s.insert(test_tup % 10);\n        test_tup /= 10;\n    }\n    return s.size() == 4;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmptxijshoq.cpp:2:\n/tmp/tmptxijshoq.cpp: In function \u2018int main()\u2019:\n/tmp/tmptxijshoq.cpp:14:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   14 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmptxijshoq.cpp:15:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   15 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmptxijshoq.cpp:16:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   16 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    std::set<int> s;\n    while (test_tup) {\n        s.insert(test_tup % 10);\n        test_tup /= 10;\n    }\n    return s.size() == 4;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp2n3c39_r.cpp:2:\n/tmp/tmp2n3c39_r.cpp: In function \u2018int main()\u2019:\n/tmp/tmp2n3c39_r.cpp:14:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   14 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmp2n3c39_r.cpp:15:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   15 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmp2n3c39_r.cpp:16:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   16 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    std::bitset<64> bs(test_tup);\n    return bs.count() == bs.size();\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123693,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp2i4kucrv.cpp:2:\n/tmp/tmp2i4kucrv.cpp: In function \u2018int main()\u2019:\n/tmp/tmp2i4kucrv.cpp:10:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   10 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmp2i4kucrv.cpp:11:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   11 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmp2i4kucrv.cpp:12:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   12 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    long mask = 0;\n    for (int i = 0; i < sizeof(long); i++) {\n        long curr_bit = (test_tup >> i) & 1;\n        if (curr_bit == 1) {\n            if ((mask >> i) & 1 == 1) {\n                return false;\n            }\n            mask |= (1 << i);\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123694,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp84fndudi.cpp:2:\n/tmp/tmp84fndudi.cpp: In function \u2018int main()\u2019:\n/tmp/tmp84fndudi.cpp:19:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   19 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmp84fndudi.cpp:20:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   20 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmp84fndudi.cpp:21:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   21 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    std::vector<int> digits;\n    while (test_tup > 0) {\n        digits.push_back(test_tup % 10);\n        test_tup /= 10;\n    }\n    std::sort(digits.begin(), digits.end());\n    for (int i = 0; i < digits.size() - 1; i++) {\n        if (digits[i] == digits[i + 1]) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp_m6lp4z5.cpp:2:\n/tmp/tmp_m6lp4z5.cpp: In function \u2018int main()\u2019:\n/tmp/tmp_m6lp4z5.cpp:20:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   20 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmp_m6lp4z5.cpp:21:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   21 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmp_m6lp4z5.cpp:22:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   22 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    long mask = 0;\n    for (int i = 0; i < 64; i++) {\n        long bit = test_tup & (1L << i);\n        if (bit) {\n            if (mask & bit) {\n                return false;\n            }\n            mask |= bit;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123694,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpqs4ookgg.cpp:2:\n/tmp/tmpqs4ookgg.cpp: In function \u2018int main()\u2019:\n/tmp/tmpqs4ookgg.cpp:19:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   19 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmpqs4ookgg.cpp:20:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   20 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmpqs4ookgg.cpp:21:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   21 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    std::set<int> s;\n    while (test_tup > 0) {\n        s.insert(test_tup % 10);\n        test_tup /= 10;\n    }\n    return s.size() == 4;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmptxijshoq.cpp:2:\n/tmp/tmptxijshoq.cpp: In function \u2018int main()\u2019:\n/tmp/tmptxijshoq.cpp:14:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   14 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmptxijshoq.cpp:15:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   15 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmptxijshoq.cpp:16:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   16 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    long temp = test_tup;\n    int count = 0;\n    while(temp > 0) {\n        count++;\n        temp = temp >> 1;\n    }\n    for(int i = 0; i < count; i++) {\n        if((test_tup & (1 << i)) == 0) {\n            continue;\n        }\n        for(int j = i + 1; j < count; j++) {\n            if((test_tup & (1 << j)) == 0) {\n                continue;\n            }\n            if((test_tup & (1 << i)) == (test_tup & (1 << j))) {\n                return false;\n            }\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123694,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp6nwhjnzq.cpp:2:\n/tmp/tmp6nwhjnzq.cpp: In function \u2018int main()\u2019:\n/tmp/tmp6nwhjnzq.cpp:28:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   28 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmp6nwhjnzq.cpp:29:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   29 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmp6nwhjnzq.cpp:30:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   30 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    long mask = 0;\n    for (int i = 0; i < 4; i++) {\n        long curr_bit = (test_tup >> (i * 8)) & 255;\n        if ((mask >> curr_bit) & 1) {\n            return false;\n        }\n        mask |= (1 << curr_bit);\n    }\n    return true;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123694,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpyj9njvkv.cpp:2:\n/tmp/tmpyj9njvkv.cpp: In function \u2018int main()\u2019:\n/tmp/tmpyj9njvkv.cpp:17:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   17 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmpyj9njvkv.cpp:18:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   18 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmpyj9njvkv.cpp:19:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   19 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    std::set<int> s;\n    while (test_tup) {\n        s.insert(test_tup % 10);\n        test_tup /= 10;\n    }\n    return s.size() == 4;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp2n3c39_r.cpp:2:\n/tmp/tmp2n3c39_r.cpp: In function \u2018int main()\u2019:\n/tmp/tmp2n3c39_r.cpp:14:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   14 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmp2n3c39_r.cpp:15:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   15 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmp2n3c39_r.cpp:16:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   16 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    int arr[10] = {0};\n    while(test_tup > 0) {\n        int digit = test_tup % 10;\n        if(arr[digit] == 1) {\n            return false;\n        }\n        arr[digit] = 1;\n        test_tup /= 10;\n    }\n    return true;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123694,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpr2hviqtv.cpp:2:\n/tmp/tmpr2hviqtv.cpp: In function \u2018int main()\u2019:\n/tmp/tmpr2hviqtv.cpp:18:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   18 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmpr2hviqtv.cpp:19:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   19 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmpr2hviqtv.cpp:20:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   20 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    int count[10] = {0};\n    while (test_tup > 0) {\n        count[test_tup % 10]++;\n        test_tup /= 10;\n    }\n    for (int i = 0; i < 10; i++) {\n        if (count[i] > 1) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123694,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp4_09r7zl.cpp:2:\n/tmp/tmp4_09r7zl.cpp: In function \u2018int main()\u2019:\n/tmp/tmp4_09r7zl.cpp:19:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   19 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmp4_09r7zl.cpp:20:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   20 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmp4_09r7zl.cpp:21:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   21 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    std::set<int> s;\n    while (test_tup) {\n        int curr = test_tup % 10;\n        if (s.find(curr) != s.end()) {\n            return false;\n        }\n        s.insert(curr);\n        test_tup /= 10;\n    }\n    return true;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123694,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpuhm9lrhu.cpp:2:\n/tmp/tmpuhm9lrhu.cpp: In function \u2018int main()\u2019:\n/tmp/tmpuhm9lrhu.cpp:18:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   18 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmpuhm9lrhu.cpp:19:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   19 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmpuhm9lrhu.cpp:20:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   20 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    std::vector<int> digits;\n    while (test_tup > 0) {\n        digits.push_back(test_tup % 10);\n        test_tup /= 10;\n    }\n    std::sort(digits.begin(), digits.end());\n    for (int i = 1; i < digits.size(); ++i) {\n        if (digits[i] == digits[i - 1]) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123683,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmppih2zgdq.cpp:2:\n/tmp/tmppih2zgdq.cpp: In function \u2018int main()\u2019:\n/tmp/tmppih2zgdq.cpp:20:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   20 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmppih2zgdq.cpp:21:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   21 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmppih2zgdq.cpp:22:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   22 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    std::set<int> s;\n    while (test_tup) {\n        int digit = test_tup % 10;\n        if (s.find(digit) != s.end()) {\n            return false;\n        }\n        s.insert(digit);\n        test_tup /= 10;\n    }\n    return true;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123687,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmphrvrosdt.cpp:2:\n/tmp/tmphrvrosdt.cpp: In function \u2018int main()\u2019:\n/tmp/tmphrvrosdt.cpp:18:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   18 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmphrvrosdt.cpp:19:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   19 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmphrvrosdt.cpp:20:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   20 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    int count = 0;\n    for (int i = 0; i < 64; i++) {\n        if (test_tup & (1 << i)) {\n            count++;\n        }\n    }\n    return count == 64;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123683,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp_myx7i6g.cpp:2:\n/tmp/tmp_myx7i6g.cpp: In function \u2018int main()\u2019:\n/tmp/tmp_myx7i6g.cpp:15:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   15 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmp_myx7i6g.cpp:16:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   16 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmp_myx7i6g.cpp:17:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   17 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    long mask = 0;\n    for (int i = 0; i < sizeof(test_tup); i++) {\n        long bit = test_tup & (1 << i);\n        if (bit & mask) {\n            return false;\n        }\n        mask |= bit;\n    }\n    return true;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123694,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpue411r56.cpp:2:\n/tmp/tmpue411r56.cpp: In function \u2018int main()\u2019:\n/tmp/tmpue411r56.cpp:17:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   17 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmpue411r56.cpp:18:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   18 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmpue411r56.cpp:19:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   19 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    std::set<int> s;\n    while (test_tup) {\n        s.insert(test_tup % 10);\n        test_tup /= 10;\n    }\n    return s.size() == 4;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp2n3c39_r.cpp:2:\n/tmp/tmp2n3c39_r.cpp: In function \u2018int main()\u2019:\n/tmp/tmp2n3c39_r.cpp:14:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   14 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmp2n3c39_r.cpp:15:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   15 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmp2n3c39_r.cpp:16:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   16 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    std::set<int> s;\n    for (int i = 0; i < 4; i++) {\n        s.insert(test_tup % 10);\n        test_tup /= 10;\n    }\n    return s.size() == 4;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1665510613,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpx47uc814.cpp:2:\n/tmp/tmpx47uc814.cpp: In function \u2018int main()\u2019:\n/tmp/tmpx47uc814.cpp:14:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   14 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmpx47uc814.cpp:15:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   15 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmpx47uc814.cpp:16:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   16 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    std::set<int> s;\n    int count = 0;\n    while (test_tup) {\n        s.insert(test_tup % 10);\n        test_tup /= 10;\n        count++;\n    }\n    return s.size() == count;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123694,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpuqcgeiq0.cpp:2:\n/tmp/tmpuqcgeiq0.cpp: In function \u2018int main()\u2019:\n/tmp/tmpuqcgeiq0.cpp:16:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   16 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmpuqcgeiq0.cpp:17:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   17 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmpuqcgeiq0.cpp:18:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   18 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    std::vector<int> digits;\n    while (test_tup > 0) {\n        digits.push_back(test_tup % 10);\n        test_tup /= 10;\n    }\n    std::sort(digits.begin(), digits.end());\n    for (int i = 1; i < digits.size(); i++) {\n        if (digits[i] == digits[i - 1]) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpql09x_ga.cpp:2:\n/tmp/tmpql09x_ga.cpp: In function \u2018int main()\u2019:\n/tmp/tmpql09x_ga.cpp:20:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   20 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmpql09x_ga.cpp:21:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   21 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmpql09x_ga.cpp:22:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   22 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    long tup = test_tup;\n    int count = 0;\n    while (tup != 0) {\n        count++;\n        tup = tup & (tup - 1);\n    }\n    return count == 4;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123694,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpbyoz2dp0.cpp:2:\n/tmp/tmpbyoz2dp0.cpp: In function \u2018int main()\u2019:\n/tmp/tmpbyoz2dp0.cpp:15:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   15 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmpbyoz2dp0.cpp:16:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   16 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmpbyoz2dp0.cpp:17:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   17 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n  int count = 0;\n  int i = 0;\n  while (test_tup) {\n    if (test_tup & 1) {\n      count++;\n    }\n    test_tup = test_tup >> 1;\n    i++;\n  }\n  if (count == i) {\n    return true;\n  }\n  return false;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123694,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp5bq4kx52.cpp:2:\n/tmp/tmp5bq4kx52.cpp: In function \u2018int main()\u2019:\n/tmp/tmp5bq4kx52.cpp:21:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   21 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmp5bq4kx52.cpp:22:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   22 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmp5bq4kx52.cpp:23:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   23 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    std::set<int> s;\n    while (test_tup) {\n        s.insert(test_tup % 10);\n        test_tup /= 10;\n    }\n    return s.size() == 4;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp2n3c39_r.cpp:2:\n/tmp/tmp2n3c39_r.cpp: In function \u2018int main()\u2019:\n/tmp/tmp2n3c39_r.cpp:14:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   14 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmp2n3c39_r.cpp:15:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   15 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmp2n3c39_r.cpp:16:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   16 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    int arr[10] = {0};\n    while(test_tup) {\n        int digit = test_tup % 10;\n        if(arr[digit] == 1) {\n            return false;\n        }\n        arr[digit] = 1;\n        test_tup /= 10;\n    }\n    return true;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123687,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpo8rwrm_6.cpp:2:\n/tmp/tmpo8rwrm_6.cpp: In function \u2018int main()\u2019:\n/tmp/tmpo8rwrm_6.cpp:18:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   18 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmpo8rwrm_6.cpp:19:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   19 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmpo8rwrm_6.cpp:20:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   20 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    std::set<int> s;\n    for (int i = 0; i < 4; ++i) {\n        int digit = test_tup % 10;\n        test_tup /= 10;\n        if (s.find(digit) != s.end()) {\n            return false;\n        }\n        s.insert(digit);\n    }\n    return true;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123694,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpybok2j6h.cpp:2:\n/tmp/tmpybok2j6h.cpp: In function \u2018int main()\u2019:\n/tmp/tmpybok2j6h.cpp:18:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   18 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmpybok2j6h.cpp:19:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   19 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmpybok2j6h.cpp:20:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   20 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    // Write your code here\n    int count[10] = {0};\n    while(test_tup > 0) {\n        int digit = test_tup % 10;\n        count[digit]++;\n        test_tup /= 10;\n    }\n    for(int i = 0; i < 10; i++) {\n        if(count[i] > 1) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123694,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpi9x1akrl.cpp:2:\n/tmp/tmpi9x1akrl.cpp: In function \u2018int main()\u2019:\n/tmp/tmpi9x1akrl.cpp:21:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   21 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmpi9x1akrl.cpp:22:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   22 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmpi9x1akrl.cpp:23:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   23 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    std::vector<int> digits;\n    while (test_tup > 0) {\n        digits.push_back(test_tup % 10);\n        test_tup /= 10;\n    }\n    std::sort(digits.begin(), digits.end());\n    for (int i = 0; i < digits.size() - 1; i++) {\n        if (digits[i] == digits[i + 1]) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp_m6lp4z5.cpp:2:\n/tmp/tmp_m6lp4z5.cpp: In function \u2018int main()\u2019:\n/tmp/tmp_m6lp4z5.cpp:20:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   20 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmp_m6lp4z5.cpp:21:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   21 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmp_m6lp4z5.cpp:22:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   22 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    std::set<int> s;\n    while (test_tup) {\n        s.insert(test_tup % 10);\n        test_tup /= 10;\n    }\n    return s.size() == 4;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp2n3c39_r.cpp:2:\n/tmp/tmp2n3c39_r.cpp: In function \u2018int main()\u2019:\n/tmp/tmp2n3c39_r.cpp:14:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   14 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmp2n3c39_r.cpp:15:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   15 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmp2n3c39_r.cpp:16:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   16 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    long mask = 0;\n    for (int i = 0; i < 64; i++) {\n        long bit = (test_tup >> i) & 1;\n        if (bit == 1) {\n            if ((mask & (1 << i)) != 0) {\n                return false;\n            }\n            mask |= (1 << i);\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123687,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp8w04qtzd.cpp:2:\n/tmp/tmp8w04qtzd.cpp: In function \u2018int main()\u2019:\n/tmp/tmp8w04qtzd.cpp:19:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   19 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmp8w04qtzd.cpp:20:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   20 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmp8w04qtzd.cpp:21:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   21 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    int count[10] = {0};\n    while (test_tup) {\n        count[test_tup % 10]++;\n        test_tup /= 10;\n    }\n    for (int i = 0; i < 10; i++) {\n        if (count[i] > 1) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123685,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpnp1c1nke.cpp:2:\n/tmp/tmpnp1c1nke.cpp: In function \u2018int main()\u2019:\n/tmp/tmpnp1c1nke.cpp:19:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   19 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmpnp1c1nke.cpp:20:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   20 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmpnp1c1nke.cpp:21:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   21 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    std::set<int> s;\n    while (test_tup) {\n        s.insert(test_tup % 10);\n        test_tup /= 10;\n    }\n    return s.size() == 4;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp2n3c39_r.cpp:2:\n/tmp/tmp2n3c39_r.cpp: In function \u2018int main()\u2019:\n/tmp/tmp2n3c39_r.cpp:14:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   14 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmp2n3c39_r.cpp:15:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   15 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmp2n3c39_r.cpp:16:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   16 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    long test_tup_copy = test_tup;\n    std::vector<int> digits;\n    while (test_tup_copy > 0) {\n        digits.push_back(test_tup_copy % 10);\n        test_tup_copy /= 10;\n    }\n    std::sort(digits.begin(), digits.end());\n    for (int i = 0; i < digits.size() - 1; i++) {\n        if (digits[i] == digits[i + 1]) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123694,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpxj1tjjri.cpp:2:\n/tmp/tmpxj1tjjri.cpp: In function \u2018int main()\u2019:\n/tmp/tmpxj1tjjri.cpp:21:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   21 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmpxj1tjjri.cpp:22:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   22 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmpxj1tjjri.cpp:23:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   23 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    long mask = 0;\n    for (int i = 0; i < 64; i++) {\n        long bit = (test_tup >> i) & 1;\n        if (bit == 1) {\n            if ((mask >> i) & 1 == 1) {\n                return false;\n            }\n            mask |= (1 << i);\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123694,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpn9po53p8.cpp:2:\n/tmp/tmpn9po53p8.cpp: In function \u2018int main()\u2019:\n/tmp/tmpn9po53p8.cpp:19:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   19 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmpn9po53p8.cpp:20:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   20 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmpn9po53p8.cpp:21:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   21 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    std::set<int> s;\n    while(test_tup) {\n        s.insert(test_tup%10);\n        test_tup /= 10;\n    }\n    return s.size() == 4;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpno832pmb.cpp:2:\n/tmp/tmpno832pmb.cpp: In function \u2018int main()\u2019:\n/tmp/tmpno832pmb.cpp:14:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   14 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmpno832pmb.cpp:15:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   15 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmpno832pmb.cpp:16:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   16 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    long mask = 0;\n    for (int i = 0; i < 8; i++) {\n        long digit = (test_tup >> (i * 4)) & 0xF;\n        if ((mask >> digit) & 1) {\n            return false;\n        }\n        mask |= (1 << digit);\n    }\n    return true;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123694,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpmgxe50qq.cpp:2:\n/tmp/tmpmgxe50qq.cpp: In function \u2018int main()\u2019:\n/tmp/tmpmgxe50qq.cpp:17:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   17 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmpmgxe50qq.cpp:18:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   18 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmpmgxe50qq.cpp:19:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   19 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    std::set<int> s;\n    while (test_tup) {\n        int digit = test_tup % 10;\n        if (s.find(digit) != s.end()) {\n            return false;\n        }\n        s.insert(digit);\n        test_tup /= 10;\n    }\n    return true;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123687,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmphrvrosdt.cpp:2:\n/tmp/tmphrvrosdt.cpp: In function \u2018int main()\u2019:\n/tmp/tmphrvrosdt.cpp:18:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   18 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmphrvrosdt.cpp:19:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   19 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmphrvrosdt.cpp:20:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   20 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    int arr[10] = {0};\n    while(test_tup) {\n        int digit = test_tup % 10;\n        if(arr[digit])\n            return false;\n        arr[digit] = 1;\n        test_tup /= 10;\n    }\n    return true;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123683,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp2zkwk2h9.cpp:2:\n/tmp/tmp2zkwk2h9.cpp: In function \u2018int main()\u2019:\n/tmp/tmp2zkwk2h9.cpp:17:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   17 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmp2zkwk2h9.cpp:18:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   18 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmp2zkwk2h9.cpp:19:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   19 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    std::vector<int> digits;\n    while (test_tup > 0) {\n        digits.push_back(test_tup % 10);\n        test_tup /= 10;\n    }\n    std::sort(digits.begin(), digits.end());\n    for (int i = 1; i < digits.size(); ++i) {\n        if (digits[i] == digits[i - 1]) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123683,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmppih2zgdq.cpp:2:\n/tmp/tmppih2zgdq.cpp: In function \u2018int main()\u2019:\n/tmp/tmppih2zgdq.cpp:20:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   20 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmppih2zgdq.cpp:21:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   21 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmppih2zgdq.cpp:22:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   22 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    std::set<int> s;\n    while(test_tup) {\n        int curr = test_tup%10;\n        if(s.find(curr) != s.end()) {\n            return false;\n        }\n        s.insert(curr);\n        test_tup /= 10;\n    }\n    return true;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123694,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp0sqli0ng.cpp:2:\n/tmp/tmp0sqli0ng.cpp: In function \u2018int main()\u2019:\n/tmp/tmp0sqli0ng.cpp:18:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   18 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmp0sqli0ng.cpp:19:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   19 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmp0sqli0ng.cpp:20:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   20 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    std::vector<int> digits;\n    while (test_tup > 0) {\n        digits.push_back(test_tup % 10);\n        test_tup /= 10;\n    }\n    std::sort(digits.begin(), digits.end());\n    for (int i = 1; i < digits.size(); i++) {\n        if (digits[i] == digits[i - 1]) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpql09x_ga.cpp:2:\n/tmp/tmpql09x_ga.cpp: In function \u2018int main()\u2019:\n/tmp/tmpql09x_ga.cpp:20:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   20 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmpql09x_ga.cpp:21:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   21 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmpql09x_ga.cpp:22:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   22 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    int count[10] = {0};\n    while (test_tup) {\n        int digit = test_tup % 10;\n        count[digit]++;\n        if (count[digit] > 1) {\n            return false;\n        }\n        test_tup /= 10;\n    }\n    return true;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123687,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp83x52hp2.cpp:2:\n/tmp/tmp83x52hp2.cpp: In function \u2018int main()\u2019:\n/tmp/tmp83x52hp2.cpp:18:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   18 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmp83x52hp2.cpp:19:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   19 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmp83x52hp2.cpp:20:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   20 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    int count = 0;\n    for (int i = 0; i < 10; i++) {\n        if (test_tup & (1 << i)) {\n            count++;\n        }\n    }\n    return count == 10;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123683,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp5xuuk1ck.cpp:2:\n/tmp/tmp5xuuk1ck.cpp: In function \u2018int main()\u2019:\n/tmp/tmp5xuuk1ck.cpp:15:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   15 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmp5xuuk1ck.cpp:16:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   16 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmp5xuuk1ck.cpp:17:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   17 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    long test_tup_copy = test_tup;\n    long count = 0;\n    while (test_tup_copy) {\n        count++;\n        test_tup_copy = test_tup_copy & (test_tup_copy - 1);\n    }\n    return count == 3;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123694,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpqch8ahsm.cpp:2:\n/tmp/tmpqch8ahsm.cpp: In function \u2018int main()\u2019:\n/tmp/tmpqch8ahsm.cpp:15:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   15 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmpqch8ahsm.cpp:16:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   16 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmpqch8ahsm.cpp:17:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   17 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    std::vector<int> digits;\n    while (test_tup != 0) {\n        digits.push_back(test_tup % 10);\n        test_tup /= 10;\n    }\n    std::sort(digits.begin(), digits.end());\n    for (int i = 1; i < digits.size(); i++) {\n        if (digits[i] == digits[i-1]) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123694,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpt6hvbqt1.cpp:2:\n/tmp/tmpt6hvbqt1.cpp: In function \u2018int main()\u2019:\n/tmp/tmpt6hvbqt1.cpp:20:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   20 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmpt6hvbqt1.cpp:21:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   21 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmpt6hvbqt1.cpp:22:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   22 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    // Write your code here\n    std::vector<int> v;\n    while(test_tup > 0) {\n        v.push_back(test_tup % 10);\n        test_tup /= 10;\n    }\n    std::sort(v.begin(), v.end());\n    for(int i = 1; i < v.size(); i++) {\n        if(v[i] == v[i - 1]) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123694,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpbdsdespl.cpp:2:\n/tmp/tmpbdsdespl.cpp: In function \u2018int main()\u2019:\n/tmp/tmpbdsdespl.cpp:21:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   21 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmpbdsdespl.cpp:22:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   22 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmpbdsdespl.cpp:23:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   23 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    int count[10] = {0};\n    while (test_tup) {\n        int digit = test_tup % 10;\n        if (count[digit] == 1) {\n            return false;\n        }\n        count[digit]++;\n        test_tup /= 10;\n    }\n    return true;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123694,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp2nev87h_.cpp:2:\n/tmp/tmp2nev87h_.cpp: In function \u2018int main()\u2019:\n/tmp/tmp2nev87h_.cpp:18:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   18 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmp2nev87h_.cpp:19:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   19 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmp2nev87h_.cpp:20:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   20 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    int a[10] = {0};\n    int i = 0;\n    while(test_tup) {\n        a[i++] = test_tup%10;\n        test_tup /= 10;\n    }\n    for(int j = 0; j < i; j++) {\n        for(int k = j+1; k < i; k++) {\n            if(a[j] == a[k]) {\n                return false;\n            }\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123694,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpa105g2_d.cpp:2:\n/tmp/tmpa105g2_d.cpp: In function \u2018int main()\u2019:\n/tmp/tmpa105g2_d.cpp:22:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   22 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmpa105g2_d.cpp:23:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   23 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmpa105g2_d.cpp:24:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   24 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    std::bitset<64> test_bits(test_tup);\n    return test_bits.count() == 6;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123694,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpvaw75ah1.cpp:2:\n/tmp/tmpvaw75ah1.cpp: In function \u2018int main()\u2019:\n/tmp/tmpvaw75ah1.cpp:10:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   10 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmpvaw75ah1.cpp:11:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   11 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmpvaw75ah1.cpp:12:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   12 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    int count = 0;\n    for (int i = 0; i < 4; i++) {\n        int curr_digit = test_tup % 10;\n        test_tup /= 10;\n        for (int j = 0; j < 4; j++) {\n            int curr_digit2 = test_tup % 10;\n            test_tup /= 10;\n            if (curr_digit == curr_digit2) {\n                count++;\n            }\n        }\n        test_tup = test_tup / 10;\n    }\n    if (count == 0) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123696,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpdqbt6vn6.cpp:2:\n/tmp/tmpdqbt6vn6.cpp: In function \u2018int main()\u2019:\n/tmp/tmpdqbt6vn6.cpp:27:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   27 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmpdqbt6vn6.cpp:28:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   28 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmpdqbt6vn6.cpp:29:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   29 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    std::vector<int> digits;\n    while (test_tup > 0) {\n        digits.push_back(test_tup % 10);\n        test_tup /= 10;\n    }\n    std::sort(digits.begin(), digits.end());\n    for (int i = 1; i < digits.size(); i++) {\n        if (digits[i] == digits[i - 1]) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpql09x_ga.cpp:2:\n/tmp/tmpql09x_ga.cpp: In function \u2018int main()\u2019:\n/tmp/tmpql09x_ga.cpp:20:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   20 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmpql09x_ga.cpp:21:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   21 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmpql09x_ga.cpp:22:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   22 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    long test_tup_copy = test_tup;\n    std::vector<int> digits;\n    while (test_tup_copy > 0) {\n        digits.push_back(test_tup_copy % 10);\n        test_tup_copy /= 10;\n    }\n    std::sort(digits.begin(), digits.end());\n    for (int i = 1; i < digits.size(); i++) {\n        if (digits[i] == digits[i-1]) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123696,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpfat16a31.cpp:2:\n/tmp/tmpfat16a31.cpp: In function \u2018int main()\u2019:\n/tmp/tmpfat16a31.cpp:21:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   21 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmpfat16a31.cpp:22:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   22 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmpfat16a31.cpp:23:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   23 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    std::set<int> s;\n    int i = 0;\n    while (test_tup > 0) {\n        int digit = test_tup % 10;\n        if (s.find(digit) != s.end()) {\n            return false;\n        }\n        s.insert(digit);\n        test_tup /= 10;\n        i++;\n    }\n    return true;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123696,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpn2ucxyf7.cpp:2:\n/tmp/tmpn2ucxyf7.cpp: In function \u2018int main()\u2019:\n/tmp/tmpn2ucxyf7.cpp:20:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   20 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmpn2ucxyf7.cpp:21:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   21 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmpn2ucxyf7.cpp:22:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   22 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n  std::set<int> s;\n  for (int i = 0; i < 4; i++) {\n    s.insert(test_tup % 10);\n    test_tup /= 10;\n  }\n  return s.size() == 4;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123696,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmps8ty9avb.cpp:2:\n/tmp/tmps8ty9avb.cpp: In function \u2018int main()\u2019:\n/tmp/tmps8ty9avb.cpp:14:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   14 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmps8ty9avb.cpp:15:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   15 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmps8ty9avb.cpp:16:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   16 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    std::vector<int> digits;\n    while (test_tup > 0) {\n        digits.push_back(test_tup % 10);\n        test_tup /= 10;\n    }\n    std::sort(digits.begin(), digits.end());\n    for (int i = 1; i < digits.size(); i++) {\n        if (digits[i] == digits[i-1]) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpps734n8r.cpp:2:\n/tmp/tmpps734n8r.cpp: In function \u2018int main()\u2019:\n/tmp/tmpps734n8r.cpp:20:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   20 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmpps734n8r.cpp:21:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   21 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmpps734n8r.cpp:22:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   22 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    long mask = 0;\n    for (int i = 0; i < 4; i++) {\n        long curr_bit = test_tup & 0xF;\n        if (mask & (1 << curr_bit)) {\n            return false;\n        }\n        mask |= (1 << curr_bit);\n        test_tup >>= 4;\n    }\n    return true;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123696,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp_l5jdin_.cpp:2:\n/tmp/tmp_l5jdin_.cpp: In function \u2018int main()\u2019:\n/tmp/tmp_l5jdin_.cpp:18:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   18 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmp_l5jdin_.cpp:19:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   19 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmp_l5jdin_.cpp:20:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   20 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    std::vector<long> test_tup_vec;\n    long temp = test_tup;\n    while (temp > 0) {\n        test_tup_vec.push_back(temp % 10);\n        temp /= 10;\n    }\n    std::sort(test_tup_vec.begin(), test_tup_vec.end());\n    for (int i = 0; i < test_tup_vec.size() - 1; i++) {\n        if (test_tup_vec[i] == test_tup_vec[i + 1]) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123696,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpxjix0e5n.cpp:2:\n/tmp/tmpxjix0e5n.cpp: In function \u2018int main()\u2019:\n/tmp/tmpxjix0e5n.cpp:21:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   21 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmpxjix0e5n.cpp:22:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   22 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmpxjix0e5n.cpp:23:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   23 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    int count = 0;\n    while(test_tup) {\n        count += (test_tup & 1);\n        test_tup >>= 1;\n    }\n    return count == 3;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123696,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpj_noink4.cpp:2:\n/tmp/tmpj_noink4.cpp: In function \u2018int main()\u2019:\n/tmp/tmpj_noink4.cpp:14:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   14 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmpj_noink4.cpp:15:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   15 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmpj_noink4.cpp:16:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   16 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n  // Write your code here\n  long test_tup_copy = test_tup;\n  std::vector<int> v;\n  while (test_tup_copy > 0) {\n    int digit = test_tup_copy % 10;\n    v.push_back(digit);\n    test_tup_copy /= 10;\n  }\n  std::sort(v.begin(), v.end());\n  for (int i = 0; i < v.size() - 1; i++) {\n    if (v[i] == v[i + 1]) {\n      return false;\n    }\n  }\n  return true;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123696,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpwq_4zk6w.cpp:2:\n/tmp/tmpwq_4zk6w.cpp: In function \u2018int main()\u2019:\n/tmp/tmpwq_4zk6w.cpp:23:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   23 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmpwq_4zk6w.cpp:24:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   24 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmpwq_4zk6w.cpp:25:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   25 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    long test_tup_copy = test_tup;\n    std::set<int> s;\n    while (test_tup_copy > 0) {\n        int digit = test_tup_copy % 10;\n        if (s.find(digit) != s.end()) {\n            return false;\n        }\n        s.insert(digit);\n        test_tup_copy /= 10;\n    }\n    return true;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123683,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp99d_dcim.cpp:2:\n/tmp/tmp99d_dcim.cpp: In function \u2018int main()\u2019:\n/tmp/tmp99d_dcim.cpp:19:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   19 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmp99d_dcim.cpp:20:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   20 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmp99d_dcim.cpp:21:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   21 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    std::set<int> s;\n    while (test_tup) {\n        s.insert(test_tup % 10);\n        test_tup /= 10;\n    }\n    return s.size() == 4;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp2n3c39_r.cpp:2:\n/tmp/tmp2n3c39_r.cpp: In function \u2018int main()\u2019:\n/tmp/tmp2n3c39_r.cpp:14:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   14 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmp2n3c39_r.cpp:15:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   15 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmp2n3c39_r.cpp:16:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   16 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    std::set<int> s;\n    for (int i = 0; i < 4; i++) {\n        s.insert(test_tup % 10);\n        test_tup /= 10;\n    }\n    return s.size() == 4;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1665510613,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpx47uc814.cpp:2:\n/tmp/tmpx47uc814.cpp: In function \u2018int main()\u2019:\n/tmp/tmpx47uc814.cpp:14:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   14 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmpx47uc814.cpp:15:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   15 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmpx47uc814.cpp:16:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   16 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    std::vector<int> digits;\n    while (test_tup) {\n        digits.push_back(test_tup % 10);\n        test_tup /= 10;\n    }\n    std::sort(digits.begin(), digits.end());\n    for (int i = 1; i < digits.size(); i++) {\n        if (digits[i] == digits[i - 1]) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123687,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpu2j06ol5.cpp:2:\n/tmp/tmpu2j06ol5.cpp: In function \u2018int main()\u2019:\n/tmp/tmpu2j06ol5.cpp:20:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   20 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmpu2j06ol5.cpp:21:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   21 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmpu2j06ol5.cpp:22:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   22 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    long temp = test_tup;\n    int count = 0;\n    while (temp > 0) {\n        temp = temp & (temp - 1);\n        count++;\n    }\n    return (count == 4);\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123696,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp9bqzb9bi.cpp:2:\n/tmp/tmp9bqzb9bi.cpp: In function \u2018int main()\u2019:\n/tmp/tmp9bqzb9bi.cpp:15:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   15 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmp9bqzb9bi.cpp:16:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   16 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmp9bqzb9bi.cpp:17:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   17 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    std::set<int> s;\n    while (test_tup) {\n        s.insert(test_tup % 10);\n        test_tup /= 10;\n    }\n    return s.size() == 4;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp2n3c39_r.cpp:2:\n/tmp/tmp2n3c39_r.cpp: In function \u2018int main()\u2019:\n/tmp/tmp2n3c39_r.cpp:14:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   14 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmp2n3c39_r.cpp:15:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   15 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmp2n3c39_r.cpp:16:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   16 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    std::set<int> s;\n    while(test_tup) {\n        s.insert(test_tup % 10);\n        test_tup /= 10;\n    }\n    return s.size() == 4;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123687,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp5tsqr58p.cpp:2:\n/tmp/tmp5tsqr58p.cpp: In function \u2018int main()\u2019:\n/tmp/tmp5tsqr58p.cpp:14:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   14 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmp5tsqr58p.cpp:15:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   15 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmp5tsqr58p.cpp:16:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   16 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    long mask = 0;\n    for (int i = 0; i < sizeof(long); i++) {\n        long bit = (test_tup >> i) & 1;\n        if (bit == 1) {\n            if ((mask & (1 << i)) != 0) {\n                return false;\n            }\n            mask |= (1 << i);\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123683,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpx8l30_if.cpp:2:\n/tmp/tmpx8l30_if.cpp: In function \u2018int main()\u2019:\n/tmp/tmpx8l30_if.cpp:19:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   19 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmpx8l30_if.cpp:20:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   20 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmpx8l30_if.cpp:21:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   21 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    int count = 0;\n    while (test_tup) {\n        count += test_tup & 1;\n        test_tup = test_tup >> 1;\n    }\n    return (count == 3);\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123696,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpqcgoo0c6.cpp:2:\n/tmp/tmpqcgoo0c6.cpp: In function \u2018int main()\u2019:\n/tmp/tmpqcgoo0c6.cpp:14:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   14 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmpqcgoo0c6.cpp:15:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   15 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmpqcgoo0c6.cpp:16:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   16 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    std::set<int> s;\n    while (test_tup) {\n        s.insert(test_tup % 10);\n        test_tup /= 10;\n    }\n    return s.size() == 4;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp2n3c39_r.cpp:2:\n/tmp/tmp2n3c39_r.cpp: In function \u2018int main()\u2019:\n/tmp/tmp2n3c39_r.cpp:14:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   14 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmp2n3c39_r.cpp:15:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   15 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmp2n3c39_r.cpp:16:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   16 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    int arr[10] = {0};\n    while (test_tup > 0) {\n        int digit = test_tup % 10;\n        if (arr[digit] == 1) {\n            return false;\n        }\n        arr[digit] = 1;\n        test_tup /= 10;\n    }\n    return true;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123683,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmppm99_6rn.cpp:2:\n/tmp/tmppm99_6rn.cpp: In function \u2018int main()\u2019:\n/tmp/tmppm99_6rn.cpp:18:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   18 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmppm99_6rn.cpp:19:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   19 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmppm99_6rn.cpp:20:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   20 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    std::set<int> s;\n    while (test_tup > 0) {\n        s.insert(test_tup % 10);\n        test_tup /= 10;\n    }\n    return s.size() == 4;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmptxijshoq.cpp:2:\n/tmp/tmptxijshoq.cpp: In function \u2018int main()\u2019:\n/tmp/tmptxijshoq.cpp:14:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   14 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmptxijshoq.cpp:15:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   15 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmptxijshoq.cpp:16:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   16 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    long mask = 0;\n    while (test_tup) {\n        if (mask & (1 << (test_tup % 10)))\n            return false;\n        mask |= (1 << (test_tup % 10));\n        test_tup /= 10;\n    }\n    return true;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123696,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpbbsqg7yq.cpp:2:\n/tmp/tmpbbsqg7yq.cpp: In function \u2018int main()\u2019:\n/tmp/tmpbbsqg7yq.cpp:16:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   16 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmpbbsqg7yq.cpp:17:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   17 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmpbbsqg7yq.cpp:18:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   18 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    int count[10] = {0};\n    while(test_tup) {\n        count[test_tup%10]++;\n        test_tup /= 10;\n    }\n    for(int i = 0; i < 10; i++) {\n        if(count[i] > 1) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1665510613,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp5q2f15oz.cpp:2:\n/tmp/tmp5q2f15oz.cpp: In function \u2018int main()\u2019:\n/tmp/tmp5q2f15oz.cpp:19:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   19 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmp5q2f15oz.cpp:20:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   20 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmp5q2f15oz.cpp:21:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   21 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    std::vector<int> digits;\n    while (test_tup > 0) {\n        digits.push_back(test_tup % 10);\n        test_tup /= 10;\n    }\n    std::sort(digits.begin(), digits.end());\n    for (int i = 0; i < digits.size() - 1; i++) {\n        if (digits[i] == digits[i + 1]) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp_m6lp4z5.cpp:2:\n/tmp/tmp_m6lp4z5.cpp: In function \u2018int main()\u2019:\n/tmp/tmp_m6lp4z5.cpp:20:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   20 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmp_m6lp4z5.cpp:21:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   21 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmp_m6lp4z5.cpp:22:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   22 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    std::vector<int> digits;\n    while (test_tup > 0) {\n        digits.push_back(test_tup % 10);\n        test_tup /= 10;\n    }\n    std::sort(digits.begin(), digits.end());\n    for (int i = 1; i < digits.size(); i++) {\n        if (digits[i] == digits[i - 1]) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpql09x_ga.cpp:2:\n/tmp/tmpql09x_ga.cpp: In function \u2018int main()\u2019:\n/tmp/tmpql09x_ga.cpp:20:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   20 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmpql09x_ga.cpp:21:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   21 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmpql09x_ga.cpp:22:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   22 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    std::set<int> s;\n    while (test_tup > 0) {\n        s.insert(test_tup % 10);\n        test_tup /= 10;\n    }\n    return s.size() == 4;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmptxijshoq.cpp:2:\n/tmp/tmptxijshoq.cpp: In function \u2018int main()\u2019:\n/tmp/tmptxijshoq.cpp:14:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   14 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmptxijshoq.cpp:15:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   15 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmptxijshoq.cpp:16:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   16 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    std::set<int> s;\n    while(test_tup) {\n        s.insert(test_tup%10);\n        test_tup /= 10;\n    }\n    return s.size() == 4;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpno832pmb.cpp:2:\n/tmp/tmpno832pmb.cpp: In function \u2018int main()\u2019:\n/tmp/tmpno832pmb.cpp:14:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   14 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmpno832pmb.cpp:15:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   15 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmpno832pmb.cpp:16:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   16 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    std::set<int> s;\n    while (test_tup != 0) {\n        int digit = test_tup % 10;\n        if (s.find(digit) != s.end()) {\n            return false;\n        }\n        s.insert(digit);\n        test_tup /= 10;\n    }\n    return true;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp3fy2v1x1.cpp:2:\n/tmp/tmp3fy2v1x1.cpp: In function \u2018int main()\u2019:\n/tmp/tmp3fy2v1x1.cpp:18:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   18 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmp3fy2v1x1.cpp:19:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   19 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmp3fy2v1x1.cpp:20:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   20 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n  int count = 0;\n  for (int i = 0; i < 4; i++) {\n    int digit = test_tup % 10;\n    test_tup /= 10;\n    if (digit == 0) {\n      count++;\n    }\n  }\n  if (count == 4) {\n    return false;\n  }\n  return true;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123696,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpzt2_lhmk.cpp:2:\n/tmp/tmpzt2_lhmk.cpp: In function \u2018int main()\u2019:\n/tmp/tmpzt2_lhmk.cpp:20:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   20 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmpzt2_lhmk.cpp:21:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   21 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmpzt2_lhmk.cpp:22:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   22 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    std::set<int> s;\n    while (test_tup) {\n        s.insert(test_tup % 10);\n        test_tup /= 10;\n    }\n    return s.size() == 4;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp2n3c39_r.cpp:2:\n/tmp/tmp2n3c39_r.cpp: In function \u2018int main()\u2019:\n/tmp/tmp2n3c39_r.cpp:14:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   14 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmp2n3c39_r.cpp:15:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   15 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmp2n3c39_r.cpp:16:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   16 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n  std::set<int> s;\n  while (test_tup) {\n    int digit = test_tup % 10;\n    if (s.find(digit) != s.end()) {\n      return false;\n    }\n    s.insert(digit);\n    test_tup /= 10;\n  }\n  return true;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123696,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmplsb5txrm.cpp:2:\n/tmp/tmplsb5txrm.cpp: In function \u2018int main()\u2019:\n/tmp/tmplsb5txrm.cpp:18:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   18 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmplsb5txrm.cpp:19:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   19 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmplsb5txrm.cpp:20:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   20 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    int a[10];\n    for(int i = 0; i < 10; i++) {\n        a[i] = 0;\n    }\n    while(test_tup) {\n        int digit = test_tup % 10;\n        if(a[digit] == 1) {\n            return false;\n        }\n        a[digit] = 1;\n        test_tup /= 10;\n    }\n    return true;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123696,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp7xjwir8u.cpp:2:\n/tmp/tmp7xjwir8u.cpp: In function \u2018int main()\u2019:\n/tmp/tmp7xjwir8u.cpp:21:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   21 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmp7xjwir8u.cpp:22:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   22 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmp7xjwir8u.cpp:23:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   23 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    // convert tuple to string\n    std::stringstream ss;\n    ss << test_tup;\n    std::string str = ss.str();\n    // check if string contains duplicates\n    std::set<char> s(str.begin(), str.end());\n    return s.size() == str.size();\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123696,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpq_2e_4xw.cpp:2:\n/tmp/tmpq_2e_4xw.cpp: In function \u2018int main()\u2019:\n/tmp/tmpq_2e_4xw.cpp:15:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   15 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmpq_2e_4xw.cpp:16:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   16 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmpq_2e_4xw.cpp:17:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   17 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    std::vector<int> v;\n    for (int i = 0; i < 4; i++) {\n        v.push_back(test_tup % 10);\n        test_tup /= 10;\n    }\n    std::sort(v.begin(), v.end());\n    for (int i = 0; i < 3; i++) {\n        if (v[i] == v[i + 1]) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123696,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp0stt6h_o.cpp:2:\n/tmp/tmp0stt6h_o.cpp: In function \u2018int main()\u2019:\n/tmp/tmp0stt6h_o.cpp:20:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   20 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmp0stt6h_o.cpp:21:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   21 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmp0stt6h_o.cpp:22:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   22 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    std::vector<int> digits;\n    while (test_tup > 0) {\n        digits.push_back(test_tup % 10);\n        test_tup /= 10;\n    }\n    std::sort(digits.begin(), digits.end());\n    for (int i = 0; i < digits.size() - 1; i++) {\n        if (digits[i] == digits[i + 1]) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp_m6lp4z5.cpp:2:\n/tmp/tmp_m6lp4z5.cpp: In function \u2018int main()\u2019:\n/tmp/tmp_m6lp4z5.cpp:20:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   20 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmp_m6lp4z5.cpp:21:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   21 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmp_m6lp4z5.cpp:22:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   22 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    std::vector<int> digits;\n    while (test_tup > 0) {\n        digits.push_back(test_tup % 10);\n        test_tup /= 10;\n    }\n    std::sort(digits.begin(), digits.end());\n    for (int i = 0; i < digits.size() - 1; i++) {\n        if (digits[i] == digits[i + 1]) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp_m6lp4z5.cpp:2:\n/tmp/tmp_m6lp4z5.cpp: In function \u2018int main()\u2019:\n/tmp/tmp_m6lp4z5.cpp:20:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   20 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmp_m6lp4z5.cpp:21:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   21 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmp_m6lp4z5.cpp:22:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   22 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    std::set<int> s;\n    while (test_tup) {\n        s.insert(test_tup % 10);\n        test_tup /= 10;\n    }\n    return s.size() == 4;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp2n3c39_r.cpp:2:\n/tmp/tmp2n3c39_r.cpp: In function \u2018int main()\u2019:\n/tmp/tmp2n3c39_r.cpp:14:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   14 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmp2n3c39_r.cpp:15:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   15 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmp2n3c39_r.cpp:16:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   16 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    int count = 0;\n    for (int i = 0; i < 10; i++) {\n        if (test_tup & (1 << i)) {\n            count++;\n        }\n    }\n    return count == 10;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123683,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp5xuuk1ck.cpp:2:\n/tmp/tmp5xuuk1ck.cpp: In function \u2018int main()\u2019:\n/tmp/tmp5xuuk1ck.cpp:15:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   15 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmp5xuuk1ck.cpp:16:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   16 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmp5xuuk1ck.cpp:17:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   17 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    long mask = 0;\n    while (test_tup) {\n        if (mask & (1 << (test_tup % 10))) {\n            return false;\n        }\n        mask |= (1 << (test_tup % 10));\n        test_tup /= 10;\n    }\n    return true;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1665510613,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpwkr3tvws.cpp:2:\n/tmp/tmpwkr3tvws.cpp: In function \u2018int main()\u2019:\n/tmp/tmpwkr3tvws.cpp:17:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   17 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmpwkr3tvws.cpp:18:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   18 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmpwkr3tvws.cpp:19:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   19 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    long test_tup_copy = test_tup;\n    int count = 0;\n    while(test_tup_copy) {\n        count++;\n        test_tup_copy = test_tup_copy & (test_tup_copy - 1);\n    }\n    return count == 4;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123696,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp0tjqmnzi.cpp:2:\n/tmp/tmp0tjqmnzi.cpp: In function \u2018int main()\u2019:\n/tmp/tmp0tjqmnzi.cpp:15:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   15 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmp0tjqmnzi.cpp:16:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   16 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmp0tjqmnzi.cpp:17:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   17 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    std::set<int> s;\n    for(int i=0;i<4;i++) {\n        int digit = test_tup%10;\n        test_tup /= 10;\n        if(s.find(digit) != s.end()) {\n            return false;\n        }\n        s.insert(digit);\n    }\n    return true;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123696,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp7vgr7rsh.cpp:2:\n/tmp/tmp7vgr7rsh.cpp: In function \u2018int main()\u2019:\n/tmp/tmp7vgr7rsh.cpp:18:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   18 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmp7vgr7rsh.cpp:19:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   19 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmp7vgr7rsh.cpp:20:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   20 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    std::bitset<64> bs(test_tup);\n    return bs.count() == 3;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123696,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpcqz5pphf.cpp:2:\n/tmp/tmpcqz5pphf.cpp: In function \u2018int main()\u2019:\n/tmp/tmpcqz5pphf.cpp:10:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   10 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmpcqz5pphf.cpp:11:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   11 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmpcqz5pphf.cpp:12:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   12 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    std::set<int> s;\n    while (test_tup) {\n        s.insert(test_tup % 10);\n        test_tup /= 10;\n    }\n    return s.size() == 4;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp2n3c39_r.cpp:2:\n/tmp/tmp2n3c39_r.cpp: In function \u2018int main()\u2019:\n/tmp/tmp2n3c39_r.cpp:14:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   14 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmp2n3c39_r.cpp:15:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   15 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmp2n3c39_r.cpp:16:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   16 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    std::set<int> s;\n    while (test_tup) {\n        int digit = test_tup % 10;\n        if (s.find(digit) != s.end()) {\n            return false;\n        }\n        s.insert(digit);\n        test_tup /= 10;\n    }\n    return true;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123687,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmphrvrosdt.cpp:2:\n/tmp/tmphrvrosdt.cpp: In function \u2018int main()\u2019:\n/tmp/tmphrvrosdt.cpp:18:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   18 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmphrvrosdt.cpp:19:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   19 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmphrvrosdt.cpp:20:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   20 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    int count = 0;\n    long tup = test_tup;\n    while(tup) {\n        count += tup & 1;\n        tup >>= 1;\n    }\n    return count == 3;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123696,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp4z1zjvl4.cpp:2:\n/tmp/tmp4z1zjvl4.cpp: In function \u2018int main()\u2019:\n/tmp/tmp4z1zjvl4.cpp:15:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   15 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmp4z1zjvl4.cpp:16:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   16 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmp4z1zjvl4.cpp:17:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   17 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    int count = 0;\n    for (int i = 0; i < 64; i++) {\n        if (test_tup & (1 << i)) {\n            count++;\n        }\n    }\n    return count == 64;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123683,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp_myx7i6g.cpp:2:\n/tmp/tmp_myx7i6g.cpp: In function \u2018int main()\u2019:\n/tmp/tmp_myx7i6g.cpp:15:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   15 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmp_myx7i6g.cpp:16:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   16 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmp_myx7i6g.cpp:17:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   17 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    std::vector<int> digits;\n    while(test_tup > 0) {\n        digits.push_back(test_tup % 10);\n        test_tup /= 10;\n    }\n    std::sort(digits.begin(), digits.end());\n    for(int i = 0; i < digits.size() - 1; ++i) {\n        if(digits[i] == digits[i + 1]) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123696,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpczlvom44.cpp:2:\n/tmp/tmpczlvom44.cpp: In function \u2018int main()\u2019:\n/tmp/tmpczlvom44.cpp:20:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   20 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmpczlvom44.cpp:21:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   21 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmpczlvom44.cpp:22:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   22 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    long tup = test_tup;\n    int count = 0;\n    while (tup != 0) {\n        if ((tup & 1) == 1) {\n            count++;\n        }\n        tup = tup >> 1;\n    }\n    return count == 3;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123696,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpaxihzor2.cpp:2:\n/tmp/tmpaxihzor2.cpp: In function \u2018int main()\u2019:\n/tmp/tmpaxihzor2.cpp:17:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   17 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmpaxihzor2.cpp:18:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   18 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmpaxihzor2.cpp:19:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   19 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    std::vector<int> digits;\n    while (test_tup > 0) {\n        digits.push_back(test_tup % 10);\n        test_tup /= 10;\n    }\n    std::sort(digits.begin(), digits.end());\n    for (int i = 0; i < digits.size() - 1; i++) {\n        if (digits[i] == digits[i + 1]) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp_m6lp4z5.cpp:2:\n/tmp/tmp_m6lp4z5.cpp: In function \u2018int main()\u2019:\n/tmp/tmp_m6lp4z5.cpp:20:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   20 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmp_m6lp4z5.cpp:21:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   21 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmp_m6lp4z5.cpp:22:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   22 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    std::vector<int> digits;\n    while (test_tup > 0) {\n        digits.push_back(test_tup % 10);\n        test_tup /= 10;\n    }\n    std::sort(digits.begin(), digits.end());\n    for (int i = 0; i < digits.size() - 1; i++) {\n        if (digits[i] == digits[i + 1]) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp_m6lp4z5.cpp:2:\n/tmp/tmp_m6lp4z5.cpp: In function \u2018int main()\u2019:\n/tmp/tmp_m6lp4z5.cpp:20:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   20 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmp_m6lp4z5.cpp:21:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   21 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmp_m6lp4z5.cpp:22:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   22 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    int count = 0;\n    while (test_tup > 0) {\n        count += test_tup & 1;\n        test_tup >>= 1;\n    }\n    return count == 3;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123696,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp14qrn2vr.cpp:2:\n/tmp/tmp14qrn2vr.cpp: In function \u2018int main()\u2019:\n/tmp/tmp14qrn2vr.cpp:14:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   14 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmp14qrn2vr.cpp:15:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   15 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmp14qrn2vr.cpp:16:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   16 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    std::set<int> s;\n    while(test_tup) {\n        s.insert(test_tup%10);\n        test_tup /= 10;\n    }\n    return s.size() == 4;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpno832pmb.cpp:2:\n/tmp/tmpno832pmb.cpp: In function \u2018int main()\u2019:\n/tmp/tmpno832pmb.cpp:14:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   14 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmpno832pmb.cpp:15:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   15 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmpno832pmb.cpp:16:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   16 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    long mask = 0;\n    for(int i=0; i<64; i++) {\n        long bit = (test_tup >> i) & 1;\n        if(bit) {\n            if(mask & (1 << bit)) {\n                return false;\n            }\n            mask |= (1 << bit);\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123698,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp0zk2o_no.cpp:2:\n/tmp/tmp0zk2o_no.cpp: In function \u2018int main()\u2019:\n/tmp/tmp0zk2o_no.cpp:19:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   19 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmp0zk2o_no.cpp:20:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   20 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmp0zk2o_no.cpp:21:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   21 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    std::set<int> s;\n    for (int i = 0; i < 9; i++) {\n        int digit = test_tup % 10;\n        if (s.find(digit) != s.end()) {\n            return false;\n        }\n        s.insert(digit);\n        test_tup /= 10;\n    }\n    return true;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123698,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp8yu076yd.cpp:2:\n/tmp/tmp8yu076yd.cpp: In function \u2018int main()\u2019:\n/tmp/tmp8yu076yd.cpp:18:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   18 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmp8yu076yd.cpp:19:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   19 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmp8yu076yd.cpp:20:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   20 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    int arr[10] = {0};\n    while (test_tup > 0) {\n        int digit = test_tup % 10;\n        if (arr[digit] == 1) {\n            return false;\n        }\n        arr[digit] = 1;\n        test_tup /= 10;\n    }\n    return true;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123683,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmppm99_6rn.cpp:2:\n/tmp/tmppm99_6rn.cpp: In function \u2018int main()\u2019:\n/tmp/tmppm99_6rn.cpp:18:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   18 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmppm99_6rn.cpp:19:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   19 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmppm99_6rn.cpp:20:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   20 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    std::set<int> s;\n    while (test_tup) {\n        s.insert(test_tup % 10);\n        test_tup /= 10;\n    }\n    return s.size() == 4;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp2n3c39_r.cpp:2:\n/tmp/tmp2n3c39_r.cpp: In function \u2018int main()\u2019:\n/tmp/tmp2n3c39_r.cpp:14:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   14 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmp2n3c39_r.cpp:15:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   15 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmp2n3c39_r.cpp:16:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   16 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    std::set<int> s;\n    while (test_tup) {\n        s.insert(test_tup % 10);\n        test_tup /= 10;\n    }\n    return s.size() == 4;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp2n3c39_r.cpp:2:\n/tmp/tmp2n3c39_r.cpp: In function \u2018int main()\u2019:\n/tmp/tmp2n3c39_r.cpp:14:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   14 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmp2n3c39_r.cpp:15:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   15 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmp2n3c39_r.cpp:16:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   16 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    int count[10] = {0};\n    while(test_tup) {\n        int digit = test_tup % 10;\n        count[digit]++;\n        test_tup /= 10;\n    }\n    for(int i = 0; i < 10; i++) {\n        if(count[i] > 1) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123698,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpd5whf3p8.cpp:2:\n/tmp/tmpd5whf3p8.cpp: In function \u2018int main()\u2019:\n/tmp/tmpd5whf3p8.cpp:20:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   20 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmpd5whf3p8.cpp:21:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   21 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmpd5whf3p8.cpp:22:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   22 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    std::vector<int> digits;\n    while (test_tup > 0) {\n        digits.push_back(test_tup % 10);\n        test_tup /= 10;\n    }\n    std::sort(digits.begin(), digits.end());\n    for (int i = 1; i < digits.size(); i++) {\n        if (digits[i] == digits[i - 1]) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpql09x_ga.cpp:2:\n/tmp/tmpql09x_ga.cpp: In function \u2018int main()\u2019:\n/tmp/tmpql09x_ga.cpp:20:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   20 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmpql09x_ga.cpp:21:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   21 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmpql09x_ga.cpp:22:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   22 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    int count = 0;\n    int bit_count = 0;\n    while(test_tup) {\n        if(test_tup & 1) {\n            count++;\n        }\n        test_tup >>= 1;\n        bit_count++;\n    }\n    return count == bit_count;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123698,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpp53hncjp.cpp:2:\n/tmp/tmpp53hncjp.cpp: In function \u2018int main()\u2019:\n/tmp/tmpp53hncjp.cpp:18:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   18 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmpp53hncjp.cpp:19:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   19 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmpp53hncjp.cpp:20:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   20 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    int count[10] = {0};\n    while (test_tup > 0) {\n        int digit = test_tup % 10;\n        count[digit]++;\n        if (count[digit] > 1) {\n            return false;\n        }\n        test_tup /= 10;\n    }\n    return true;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123683,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpx5lo9md7.cpp:2:\n/tmp/tmpx5lo9md7.cpp: In function \u2018int main()\u2019:\n/tmp/tmpx5lo9md7.cpp:18:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   18 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmpx5lo9md7.cpp:19:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   19 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmpx5lo9md7.cpp:20:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   20 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    std::vector<int> digits;\n    while (test_tup > 0) {\n        digits.push_back(test_tup % 10);\n        test_tup /= 10;\n    }\n    std::sort(digits.begin(), digits.end());\n    for (int i = 1; i < digits.size(); i++) {\n        if (digits[i] == digits[i - 1]) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpql09x_ga.cpp:2:\n/tmp/tmpql09x_ga.cpp: In function \u2018int main()\u2019:\n/tmp/tmpql09x_ga.cpp:20:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   20 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmpql09x_ga.cpp:21:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   21 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmpql09x_ga.cpp:22:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   22 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    std::vector<int> digits;\n    while(test_tup > 0) {\n        digits.push_back(test_tup % 10);\n        test_tup /= 10;\n    }\n    std::sort(digits.begin(), digits.end());\n    for(int i = 0; i < digits.size() - 1; i++) {\n        if(digits[i] == digits[i + 1]) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp87nwoguz.cpp:2:\n/tmp/tmp87nwoguz.cpp: In function \u2018int main()\u2019:\n/tmp/tmp87nwoguz.cpp:20:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   20 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmp87nwoguz.cpp:21:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   21 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmp87nwoguz.cpp:22:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   22 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    std::set<int> s;\n    while (test_tup) {\n        s.insert(test_tup % 10);\n        test_tup /= 10;\n    }\n    return s.size() == 4;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp2n3c39_r.cpp:2:\n/tmp/tmp2n3c39_r.cpp: In function \u2018int main()\u2019:\n/tmp/tmp2n3c39_r.cpp:14:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   14 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmp2n3c39_r.cpp:15:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   15 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmp2n3c39_r.cpp:16:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   16 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    int count[10] = {0};\n    while(test_tup) {\n        count[test_tup % 10]++;\n        test_tup /= 10;\n    }\n    for(int i = 0; i < 10; i++) {\n        if(count[i] > 1) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123698,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp2frf1zhe.cpp:2:\n/tmp/tmp2frf1zhe.cpp: In function \u2018int main()\u2019:\n/tmp/tmp2frf1zhe.cpp:19:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   19 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmp2frf1zhe.cpp:20:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   20 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmp2frf1zhe.cpp:21:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   21 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    long mask = 0;\n    for (int i = 0; i < 64; i++) {\n        long bit = (test_tup >> i) & 1;\n        if (bit == 1) {\n            if ((mask & (1 << i)) != 0) {\n                return false;\n            }\n            mask |= (1 << i);\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123687,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp8w04qtzd.cpp:2:\n/tmp/tmp8w04qtzd.cpp: In function \u2018int main()\u2019:\n/tmp/tmp8w04qtzd.cpp:19:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   19 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmp8w04qtzd.cpp:20:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   20 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmp8w04qtzd.cpp:21:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   21 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    std::set<int> s;\n    while (test_tup) {\n        s.insert(test_tup % 10);\n        test_tup /= 10;\n    }\n    return s.size() == 4;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp2n3c39_r.cpp:2:\n/tmp/tmp2n3c39_r.cpp: In function \u2018int main()\u2019:\n/tmp/tmp2n3c39_r.cpp:14:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   14 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmp2n3c39_r.cpp:15:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   15 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmp2n3c39_r.cpp:16:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   16 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    long mask = 0;\n    for (int i = 0; i < sizeof(long); i++) {\n        long bit = (test_tup >> i) & 1;\n        if (bit == 1) {\n            if ((mask & (1 << i)) != 0) {\n                return false;\n            }\n            mask |= (1 << i);\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123683,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpx8l30_if.cpp:2:\n/tmp/tmpx8l30_if.cpp: In function \u2018int main()\u2019:\n/tmp/tmpx8l30_if.cpp:19:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   19 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmpx8l30_if.cpp:20:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   20 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmpx8l30_if.cpp:21:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   21 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    std::set<int> s;\n    for (int i = 0; i < 4; i++) {\n        int digit = test_tup % 10;\n        if (s.find(digit) != s.end()) {\n            return false;\n        }\n        s.insert(digit);\n        test_tup /= 10;\n    }\n    return true;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123698,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp738x41r9.cpp:2:\n/tmp/tmp738x41r9.cpp: In function \u2018int main()\u2019:\n/tmp/tmp738x41r9.cpp:18:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   18 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmp738x41r9.cpp:19:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   19 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmp738x41r9.cpp:20:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   20 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    int count[10] = {0};\n    while (test_tup) {\n        count[test_tup % 10]++;\n        test_tup /= 10;\n    }\n    for (int i = 0; i < 10; i++) {\n        if (count[i] > 1) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123685,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpnp1c1nke.cpp:2:\n/tmp/tmpnp1c1nke.cpp: In function \u2018int main()\u2019:\n/tmp/tmpnp1c1nke.cpp:19:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   19 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmpnp1c1nke.cpp:20:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   20 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmpnp1c1nke.cpp:21:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   21 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    std::set<int> s;\n    while (test_tup) {\n        s.insert(test_tup % 10);\n        test_tup /= 10;\n    }\n    return s.size() == 4;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp2n3c39_r.cpp:2:\n/tmp/tmp2n3c39_r.cpp: In function \u2018int main()\u2019:\n/tmp/tmp2n3c39_r.cpp:14:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   14 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmp2n3c39_r.cpp:15:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   15 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmp2n3c39_r.cpp:16:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   16 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    std::vector<int> digits;\n    while (test_tup > 0) {\n        digits.push_back(test_tup % 10);\n        test_tup /= 10;\n    }\n    std::sort(digits.begin(), digits.end());\n    for (int i = 0; i < digits.size() - 1; i++) {\n        if (digits[i] == digits[i + 1]) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp_m6lp4z5.cpp:2:\n/tmp/tmp_m6lp4z5.cpp: In function \u2018int main()\u2019:\n/tmp/tmp_m6lp4z5.cpp:20:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   20 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmp_m6lp4z5.cpp:21:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   21 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmp_m6lp4z5.cpp:22:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   22 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    std::set<int> s;\n    while (test_tup) {\n        s.insert(test_tup % 10);\n        test_tup /= 10;\n    }\n    return s.size() == 4;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp2n3c39_r.cpp:2:\n/tmp/tmp2n3c39_r.cpp: In function \u2018int main()\u2019:\n/tmp/tmp2n3c39_r.cpp:14:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   14 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmp2n3c39_r.cpp:15:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   15 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmp2n3c39_r.cpp:16:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   16 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    std::set<int> s;\n    while (test_tup) {\n        s.insert(test_tup % 10);\n        test_tup /= 10;\n    }\n    return s.size() == 4;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp2n3c39_r.cpp:2:\n/tmp/tmp2n3c39_r.cpp: In function \u2018int main()\u2019:\n/tmp/tmp2n3c39_r.cpp:14:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   14 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmp2n3c39_r.cpp:15:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   15 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmp2n3c39_r.cpp:16:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   16 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    int arr[10];\n    for (int i = 0; i < 10; i++) {\n        arr[i] = 0;\n    }\n    while (test_tup > 0) {\n        int digit = test_tup % 10;\n        if (arr[digit] == 1) {\n            return false;\n        }\n        arr[digit] = 1;\n        test_tup /= 10;\n    }\n    return true;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123698,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpirlqrbzn.cpp:2:\n/tmp/tmpirlqrbzn.cpp: In function \u2018int main()\u2019:\n/tmp/tmpirlqrbzn.cpp:21:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   21 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmpirlqrbzn.cpp:22:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   22 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmpirlqrbzn.cpp:23:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   23 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    std::set<int> s;\n    while (test_tup > 0) {\n        s.insert(test_tup % 10);\n        test_tup /= 10;\n    }\n    return s.size() == 4;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmptxijshoq.cpp:2:\n/tmp/tmptxijshoq.cpp: In function \u2018int main()\u2019:\n/tmp/tmptxijshoq.cpp:14:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   14 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmptxijshoq.cpp:15:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   15 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmptxijshoq.cpp:16:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   16 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    long mask = 0;\n    for (int i = 0; i < 8; i++) {\n        long digit = test_tup & 0xF;\n        if (mask & (1 << digit)) {\n            return false;\n        }\n        mask |= (1 << digit);\n        test_tup >>= 4;\n    }\n    return true;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123685,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp8qs3_bc8.cpp:2:\n/tmp/tmp8qs3_bc8.cpp: In function \u2018int main()\u2019:\n/tmp/tmp8qs3_bc8.cpp:18:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   18 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmp8qs3_bc8.cpp:19:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   19 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmp8qs3_bc8.cpp:20:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   20 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    int count = 0;\n    for (int i = 0; i < 4; i++) {\n        count = 0;\n        for (int j = 0; j < 4; j++) {\n            if (test_tup & (1 << (i * 4 + j))) {\n                count++;\n            }\n        }\n        if (count > 1) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123698,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp8cp9ot0b.cpp:2:\n/tmp/tmp8cp9ot0b.cpp: In function \u2018int main()\u2019:\n/tmp/tmp8cp9ot0b.cpp:21:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   21 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmp8cp9ot0b.cpp:22:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   22 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmp8cp9ot0b.cpp:23:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   23 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    int arr[10] = {0};\n    while (test_tup != 0) {\n        int digit = test_tup % 10;\n        if (arr[digit] != 0) {\n            return false;\n        }\n        arr[digit] = 1;\n        test_tup = test_tup / 10;\n    }\n    return true;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123698,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpcxb1edlg.cpp:2:\n/tmp/tmpcxb1edlg.cpp: In function \u2018int main()\u2019:\n/tmp/tmpcxb1edlg.cpp:18:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   18 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmpcxb1edlg.cpp:19:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   19 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmpcxb1edlg.cpp:20:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   20 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    std::set<int> s;\n    while (test_tup) {\n        s.insert(test_tup % 10);\n        test_tup /= 10;\n    }\n    return s.size() == 4;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp2n3c39_r.cpp:2:\n/tmp/tmp2n3c39_r.cpp: In function \u2018int main()\u2019:\n/tmp/tmp2n3c39_r.cpp:14:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   14 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmp2n3c39_r.cpp:15:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   15 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmp2n3c39_r.cpp:16:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   16 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    std::set<int> s;\n    int i = 0;\n    while(test_tup) {\n        int digit = test_tup % 10;\n        if(s.find(digit) != s.end()) {\n            return false;\n        }\n        s.insert(digit);\n        test_tup /= 10;\n        i++;\n    }\n    return true;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123698,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpbp3c9tyl.cpp:2:\n/tmp/tmpbp3c9tyl.cpp: In function \u2018int main()\u2019:\n/tmp/tmpbp3c9tyl.cpp:20:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   20 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmpbp3c9tyl.cpp:21:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   21 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmpbp3c9tyl.cpp:22:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   22 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    std::set<int> s;\n    while (test_tup) {\n        s.insert(test_tup % 10);\n        test_tup /= 10;\n    }\n    return s.size() == 4;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp2n3c39_r.cpp:2:\n/tmp/tmp2n3c39_r.cpp: In function \u2018int main()\u2019:\n/tmp/tmp2n3c39_r.cpp:14:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   14 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmp2n3c39_r.cpp:15:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   15 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmp2n3c39_r.cpp:16:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   16 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    std::set<int> s;\n    while (test_tup) {\n        s.insert(test_tup % 10);\n        test_tup /= 10;\n    }\n    return s.size() == 4;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp2n3c39_r.cpp:2:\n/tmp/tmp2n3c39_r.cpp: In function \u2018int main()\u2019:\n/tmp/tmp2n3c39_r.cpp:14:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   14 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmp2n3c39_r.cpp:15:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   15 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmp2n3c39_r.cpp:16:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   16 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    }
  ]
}
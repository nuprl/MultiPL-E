{
  "name": "mbpp_389_find_lucas",
  "language": "cpp",
  "prompt": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the n'th lucas number.\nlong find_lucas(long n) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_389_find_lucas.py",
  "prompt_terminology": "verbatim",
  "tests": "}\nint main() {\n    auto candidate = find_lucas;\n    assert(candidate((9)) == (76));\n    assert(candidate((4)) == (7));\n    assert(candidate((3)) == (4));\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    if(n == 0) return 2;\n    if(n == 1) return 1;\n    return find_lucas(n-1) + find_lucas(n-2);",
    "    if(n==0)\n        return 2;\n    if(n==1)\n        return 1;\n    return find_lucas(n-1) + find_lucas(n-2);",
    "    long a = 2, b = 1, c;\n    if(n == 0)\n        return a;\n    if(n == 1)\n        return b;\n    for(long i = 2; i <= n; i++) {\n        c = a + b;\n        a = b;\n        b = c;\n    }\n    return b;",
    "    if (n == 0) {\n        return 2;\n    }\n    if (n == 1) {\n        return 1;\n    }\n    return find_lucas(n - 1) + find_lucas(n - 2);",
    "    if (n == 0) {\n        return 2;\n    }\n    if (n == 1) {\n        return 1;\n    }\n    return find_lucas(n - 1) + find_lucas(n - 2);",
    "    if (n == 0) {\n        return 2;\n    }\n    if (n == 1) {\n        return 1;\n    }\n    return find_lucas(n - 1) + find_lucas(n - 2);",
    "    if (n == 0) {\n        return 2;\n    }\n    if (n == 1) {\n        return 1;\n    }\n    return find_lucas(n - 1) + find_lucas(n - 2);",
    "    if(n == 0) return 2;\n    if(n == 1) return 1;\n    return find_lucas(n-1) + find_lucas(n-2);",
    "    if(n==0)\n        return 2;\n    if(n==1)\n        return 1;\n    return find_lucas(n-1)+find_lucas(n-2);",
    "    if(n==0)\n        return 2;\n    if(n==1)\n        return 1;\n    return find_lucas(n-1)+find_lucas(n-2);",
    "  if(n==0) return 2;\n  if(n==1) return 1;\n  return find_lucas(n-1)+find_lucas(n-2);",
    "    if (n == 0)\n        return 2;\n    if (n == 1)\n        return 1;\n    return find_lucas(n - 1) + find_lucas(n - 2);",
    "    if (n == 0) {\n        return 2;\n    }\n    if (n == 1) {\n        return 1;\n    }\n    return find_lucas(n - 1) + find_lucas(n - 2);",
    "    if (n == 0) {\n        return 2;\n    }\n    if (n == 1) {\n        return 1;\n    }\n    return find_lucas(n - 1) + find_lucas(n - 2);",
    "    if (n == 0) {\n        return 2;\n    }\n    if (n == 1) {\n        return 1;\n    }\n    return find_lucas(n - 1) + find_lucas(n - 2);",
    "    if(n == 0) return 2;\n    if(n == 1) return 1;\n    return find_lucas(n-1) + find_lucas(n-2);",
    "    if(n == 0) {\n        return 2;\n    }\n    if(n == 1) {\n        return 1;\n    }\n    return find_lucas(n-1) + find_lucas(n-2);",
    "    if(n==0)\n        return 2;\n    if(n==1)\n        return 1;\n    else\n        return find_lucas(n-1)+find_lucas(n-2);",
    "    if (n == 0) {\n        return 2;\n    }\n    if (n == 1) {\n        return 1;\n    }\n    return find_lucas(n - 1) + find_lucas(n - 2);",
    "\tif (n == 0) {\n\t\treturn 2;\n\t}\n\tif (n == 1) {\n\t\treturn 1;\n\t}\n\treturn find_lucas(n - 1) + find_lucas(n - 2);"
  ]
}
{
  "name": "mbpp_268_find_star_num",
  "language": "cpp",
  "prompt": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the n'th star number.\nlong find_star_num(long n) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_268_find_star_num.py",
  "prompt_terminology": "verbatim",
  "tests": "}\nint main() {\n    auto candidate = find_star_num;\n    assert(candidate((3)) == (37));\n    assert(candidate((4)) == (73));\n    assert(candidate((5)) == (121));\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    long i = 1;\n    long num = 1;\n    while (i < n) {\n        num++;\n        long temp = num;\n        while (temp % 5 == 0) {\n            i++;\n            temp /= 5;\n        }\n    }\n    return num;",
    "    long i = 1;\n    long star_num = 1;\n    while (i < n) {\n        star_num = (star_num * 10) + 1;\n        i++;\n    }\n    return star_num;",
    "    long i = 1;\n    long num = 1;\n    while(i < n) {\n        num++;\n        if(num % 2 == 0) {\n            i++;\n        }\n    }\n    return num;",
    "    long i = 0;\n    long j = 1;\n    long k = 1;\n    while (k < n) {\n        i = j;\n        j = j + k;\n        k = i;\n    }\n    return j;",
    "    long i = 1;\n    long j = 1;\n    long count = 0;\n    while (count < n) {\n        if (i % j == 0) {\n            count++;\n            if (count == n) {\n                return i;\n            }\n        }\n        i++;\n        if (i % j == 0) {\n            j++;\n        }\n    }\n    return -1;",
    "    long i = 1;\n    long num = 1;\n    while (i < n) {\n        num += 2;\n        long j = 1;\n        while (j < num) {\n            i++;\n            if (i == n) {\n                return num;\n            }\n            j++;\n        }\n    }\n    return num;",
    "    long i = 1;\n    long star_num = 0;\n    while (i <= n) {\n        star_num += i;\n        i++;\n    }\n    return star_num;",
    "    long i = 1;\n    long num = 1;\n    while (i < n) {\n        num += 2;\n        i++;\n        long j = 1;\n        while (j < num) {\n            i++;\n            if (i == n) {\n                return j;\n            }\n            j++;\n        }\n    }\n    return num;",
    "    long i = 1;\n    long num = 1;\n    while (i < n) {\n        num++;\n        if (to_string(num).find(\"666\") != std::string::npos) {\n            i++;\n        }\n    }\n    return num;",
    "    long i,j,k,l,m,n1,n2,n3,n4,n5,n6,n7,n8,n9,n10,n11,n12,n13,n14,n15,n16,n17,n18,n19,n20,n21,n22,n23,n24,n25,n26,n27,n28,n29,n30,n31,n32,n33,n34,n35,n36,n37,n38,n39,n40,n41,n42,n43,n44,n45,n46,n47,n48,n49,n50,n51,n52,n53,n54,n55,n56,n57,n58,n59,n60,n61,n62,n63,n64,n65,n66,n67,n68,n69,n70,n71,n72,n73,n74,n75,n76,n77,n78,n79,n80,n81,n82,n83,n84,n85,n86,n87,n88,n89,n90,n91,n92,n93,n94,n95,n96,n97,n98,n99,n100,n101,n102,n103,n104,n105,n106,n107,n108,n109,n110,n111,n112,n113,n114,n115,n116,n117,n118,n119,n120,n121,n122,n123,n124,n125,n126,n127,n128,n129,n130,n131,n132,n133,n134,n135,n136,n137,n138,n139,n140,n141,n142,n143,n144,n145,n146,n147,n148,n149,n150,n151,n152,n153,n154,n155,n156,n157,n158,n159,n160,n161,n162,n163,n164,n165,n166,n",
    "    long num = 1;\n    while(n > 0) {\n        num = num * 10 + 1;\n        n--;\n    }\n    return num;",
    "    long i = 1;\n    long count = 0;\n    while(count < n) {\n        i++;\n        long temp = i;\n        while(temp % 5 == 0) {\n            temp /= 5;\n            count++;\n        }\n    }\n    return i;",
    "    if (n == 1) {\n        return 1;\n    }\n    long prev_star_num = find_star_num(n - 1);\n    return prev_star_num + (n - 1) * 2;",
    "    long num = 0;\n    long i = 1;\n    while (num < n) {\n        num += i;\n        i++;\n    }\n    return num;",
    "    long i = 1;\n    long j = 1;\n    long count = 0;\n    while (count < n) {\n        if (i % j == 0) {\n            count++;\n            if (count == n) {\n                return i;\n            }\n            j++;\n        }\n        else {\n            i++;\n        }\n    }\n    return -1;",
    "    long i = 1;\n    long num = 1;\n    while(i < n) {\n        num++;\n        if(num % 2 == 0) {\n            i++;\n        }\n        else {\n            long temp = num;\n            long count = 0;\n            while(temp % 2 == 1) {\n                count++;\n                temp = temp / 2;\n            }\n            i += count;\n        }\n    }\n    return num;",
    "    long i = 1;\n    long count = 0;\n    while(count < n) {\n        i++;\n        long num = i;\n        long sum = 0;\n        while(num > 0) {\n            sum += num % 10;\n            num /= 10;\n        }\n        if(sum + i == i * i) {\n            count++;\n        }\n    }\n    return i * i;",
    "    long i = 1;\n    long num = 1;\n    while (i < n) {\n        num++;\n        long temp = num;\n        while (temp % 5 == 0) {\n            temp /= 5;\n            i++;\n        }\n    }\n    return num;",
    "    long i = 1;\n    long count = 0;\n    while (count < n) {\n        i++;\n        if (is_star_num(i)) {\n            count++;\n        }\n    }\n    return i;",
    "    long i = 1;\n    long num = 1;\n    while(i < n) {\n        num += 2;\n        long j = 1;\n        long sum = 0;\n        while(j < num) {\n            sum += j;\n            j++;\n        }\n        i++;\n        if(i == n) {\n            return sum;\n        }\n    }\n    return 0;"
  ]
}
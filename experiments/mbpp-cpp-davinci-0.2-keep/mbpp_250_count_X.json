{
  "name": "mbpp_250_count_X",
  "language": "cpp",
  "prompt": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a python function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\nlong count_X(long tup, long x) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_250_count_X.py",
  "prompt_terminology": "verbatim",
  "tests": "}\nint main() {\n    auto candidate = count_X;\n    assert(candidate(std::make_tuple(10, 8, 5, 2, 10, 15, 10, 8, 5, 8, 8, 2), (4)) == (0));\n    assert(candidate(std::make_tuple(10, 8, 5, 2, 10, 15, 10, 8, 5, 8, 8, 2), (10)) == (3));\n    assert(candidate(std::make_tuple(10, 8, 5, 2, 10, 15, 10, 8, 5, 8, 8, 2), (8)) == (4));\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    long count = 0;\n    for(long i = 0; i < tup.size(); i++) {\n        if(tup[i] == x) {\n            count++;\n        }\n    }\n    return count;",
    "    long count = 0;\n    for(long i = 0; i < tup.size(); i++) {\n        if(tup[i] == x) {\n            count++;\n        }\n    }\n    return count;",
    "    long count = 0;\n    for (int i = 0; i < tup.size(); i++) {\n        if (tup[i] == x) {\n            count++;\n        }\n    }\n    return count;",
    "    long count = 0;\n    for (int i = 0; i < tup.size(); i++) {\n        if (tup[i] == x) {\n            count++;\n        }\n    }\n    return count;",
    "    long count = 0;\n    for(long i = 0; i < tup.size(); i++) {\n        if(tup[i] == x) {\n            count++;\n        }\n    }\n    return count;",
    "    long count = 0;\n    for (long i = 0; i < tup.size(); i++) {\n        if (tup[i] == x) {\n            count++;\n        }\n    }\n    return count;",
    "    long count = 0;\n    for(long i = 0; i < tup.size(); i++) {\n        if(tup[i] == x) {\n            count++;\n        }\n    }\n    return count;",
    "    long count = 0;\n    while(tup != 0) {\n        if(tup % 10 == x) {\n            count++;\n        }\n        tup /= 10;\n    }\n    return count;",
    "    long count = 0;\n    for (long i = 0; i < tup.size(); i++) {\n        if (tup[i] == x) {\n            count++;\n        }\n    }\n    return count;",
    "    long count = 0;\n    for(long i = 0; i < tup.size(); i++) {\n        if(tup[i] == x) {\n            count++;\n        }\n    }\n    return count;",
    "    long count = 0;\n    for(int i = 0; i < tup.size(); i++) {\n        if(tup[i] == x) {\n            count++;\n        }\n    }\n    return count;",
    "    long count = 0;\n    for (long i = 0; i < tup.size(); i++) {\n        if (tup[i] == x) {\n            count++;\n        }\n    }\n    return count;",
    "    long count = 0;\n    for (long i = 0; i < tup.size(); i++) {\n        if (tup[i] == x) {\n            count++;\n        }\n    }\n    return count;",
    "    long count = 0;\n    for(long i = 0; i < tup.size(); i++) {\n        if(tup[i] == x) {\n            count++;\n        }\n    }\n    return count;",
    "    long count = 0;\n    for (long i = 0; i < tup.size(); i++) {\n        if (tup[i] == x) {\n            count++;\n        }\n    }\n    return count;",
    "    long count = 0;\n    for (long i = 0; i < tup.size(); i++) {\n        if (tup[i] == x) {\n            count++;\n        }\n    }\n    return count;",
    "    long count = 0;\n    for(long i = 0; i < tup.size(); i++) {\n        if(tup[i] == x) {\n            count++;\n        }\n    }\n    return count;",
    "    long count = 0;\n    for (long i = 0; i < tup.size(); i++) {\n        if (tup[i] == x) {\n            count++;\n        }\n    }\n    return count;",
    "    long count = 0;\n    for (int i = 0; i < tup.length(); i++) {\n        if (tup[i] == x) {\n            count++;\n        }\n    }\n    return count;",
    "    long count = 0;\n    for(long i = 0; i < tup.size(); i++) {\n        if(tup[i] == x) {\n            count++;\n        }\n    }\n    return count;"
  ]
}